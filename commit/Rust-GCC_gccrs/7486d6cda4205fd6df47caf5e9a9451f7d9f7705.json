{"sha": "7486d6cda4205fd6df47caf5e9a9451f7d9f7705", "node_id": "C_kwDOANBUbNoAKDc0ODZkNmNkYTQyMDVmZDZkZjQ3Y2FmNWU5YTk0NTFmN2Q5Zjc3MDU", "commit": {"author": {"name": "Jakub Dupak", "email": "dev@jakubdupak.com", "date": "2022-10-28T15:27:16Z"}, "committer": {"name": "Jakub Dupak", "email": "dev@jakubdupak.com", "date": "2022-11-04T12:48:42Z"}, "message": "ast: refer correctly to arguments in docs-strings\n\nSigned-off-by: Jakub Dupak <dev@jakubdupak.com>", "tree": {"sha": "8b1cf1488ed516bda6a2f84ddfa055a3ddcacea2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b1cf1488ed516bda6a2f84ddfa055a3ddcacea2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7486d6cda4205fd6df47caf5e9a9451f7d9f7705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7486d6cda4205fd6df47caf5e9a9451f7d9f7705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7486d6cda4205fd6df47caf5e9a9451f7d9f7705", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7486d6cda4205fd6df47caf5e9a9451f7d9f7705/comments", "author": {"login": "jdupak", "id": 22683640, "node_id": "MDQ6VXNlcjIyNjgzNjQw", "avatar_url": "https://avatars.githubusercontent.com/u/22683640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdupak", "html_url": "https://github.com/jdupak", "followers_url": "https://api.github.com/users/jdupak/followers", "following_url": "https://api.github.com/users/jdupak/following{/other_user}", "gists_url": "https://api.github.com/users/jdupak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdupak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdupak/subscriptions", "organizations_url": "https://api.github.com/users/jdupak/orgs", "repos_url": "https://api.github.com/users/jdupak/repos", "events_url": "https://api.github.com/users/jdupak/events{/privacy}", "received_events_url": "https://api.github.com/users/jdupak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdupak", "id": 22683640, "node_id": "MDQ6VXNlcjIyNjgzNjQw", "avatar_url": "https://avatars.githubusercontent.com/u/22683640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdupak", "html_url": "https://github.com/jdupak", "followers_url": "https://api.github.com/users/jdupak/followers", "following_url": "https://api.github.com/users/jdupak/following{/other_user}", "gists_url": "https://api.github.com/users/jdupak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdupak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdupak/subscriptions", "organizations_url": "https://api.github.com/users/jdupak/orgs", "repos_url": "https://api.github.com/users/jdupak/repos", "events_url": "https://api.github.com/users/jdupak/events{/privacy}", "received_events_url": "https://api.github.com/users/jdupak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77cba0083a86c63f619b41eaf2acec61ea04d6c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77cba0083a86c63f619b41eaf2acec61ea04d6c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77cba0083a86c63f619b41eaf2acec61ea04d6c8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f63c214f41aef92ef95fd2d377001bcec8e45aa4", "filename": "gcc/rust/ast/rust-ast-dump.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7486d6cda4205fd6df47caf5e9a9451f7d9f7705/gcc%2Frust%2Fast%2Frust-ast-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7486d6cda4205fd6df47caf5e9a9451f7d9f7705/gcc%2Frust%2Fast%2Frust-ast-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.h?ref=7486d6cda4205fd6df47caf5e9a9451f7d9f7705", "patch": "@@ -81,7 +81,7 @@ class Dump : public ASTVisitor\n   template <typename T> void visit (std::unique_ptr<T> &node);\n \n   /**\n-   * Visit all items in given collection, placing the separator in between but\n+   * Visit all items in given @collection, placing the separator in between but\n    * not at the end.\n    * Start and end offset allow to visit only a \"slice\" from the collection.\n    */\n@@ -99,15 +99,15 @@ class Dump : public ASTVisitor\n   void visit_as_line (T &item, const std::string &trailing = \"\");\n \n   /**\n-   * Visit each item in a collection \"as line\".\n+   * Visit each item in @collection \"as line\".\n    *\n    * @see visit_as_line\n    */\n   template <typename T>\n   void visit_items_as_lines (T &collection, const std::string &trailing = \"\");\n \n   /**\n-   * Visit each item in collection as lines inside a block delimited by braces\n+   * Visit each item in @collection as lines inside a block delimited by braces\n    * with increased indentation. Also includes special handling for empty\n    * collection to print only the delimiters with no new line inside.\n    */"}]}