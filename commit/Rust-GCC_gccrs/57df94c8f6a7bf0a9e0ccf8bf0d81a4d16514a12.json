{"sha": "57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdkZjk0YzhmNmE3YmYwYTllMGNjZjhiZjBkODFhNGQxNjUxNGExMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-02-24T20:39:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-02-24T20:39:31Z"}, "message": "re PR libstdc++/9825 (filebuf::sputbackc breaks sbumpc)\n\n2003-02-24  Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/9825\n\t* src/fstream.cc\n\t(basic_filebuf<char/wchar_t>::_M_underflow_common): When\n\t__bump is true (uflow), always increment the read pointer\n\t(_M_in_cur) before returning successfully.\n\t* testsuite/27_io/filebuf_virtuals.cc (test12): Add.\n\nFrom-SVN: r63378", "tree": {"sha": "a7ad6d88a092d0335e69d0a93702ee68bb891066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7ad6d88a092d0335e69d0a93702ee68bb891066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12/comments", "author": null, "committer": null, "parents": [{"sha": "2bac97f7e74adbe7a5a0a966a716f3facd65fb07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bac97f7e74adbe7a5a0a966a716f3facd65fb07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bac97f7e74adbe7a5a0a966a716f3facd65fb07"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "158f4b2933552344166e29502de92a4119c48fc7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12", "patch": "@@ -1,3 +1,12 @@\n+2003-02-24  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/9825\n+\t* src/fstream.cc\n+\t(basic_filebuf<char/wchar_t>::_M_underflow_common): When\n+\t__bump is true (uflow), always increment the read pointer\n+\t(_M_in_cur) before returning successfully.\n+\t* testsuite/27_io/filebuf_virtuals.cc (test12): Add.\n+\n 2003-02-24  Paolo Carlini <pcarlini@unitus.it>\n \t    Nathan Myers <ncm@cantrip.org>\n "}, {"sha": "5753e0055cdd64e710324bdea54dc0e3760ceb0f", "filename": "libstdc++-v3/src/fstream.cc", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12/libstdc%2B%2B-v3%2Fsrc%2Ffstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12/libstdc%2B%2B-v3%2Fsrc%2Ffstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffstream.cc?ref=57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12", "patch": "@@ -53,7 +53,12 @@ namespace std\n \t    {\n \t      _M_pback_destroy();\n \t      if (_M_in_cur < _M_in_end)\n-\t\treturn traits_type::to_int_type(*_M_in_cur);\n+\t\t{\n+\t\t  __ret = traits_type::to_int_type(*_M_in_cur);\n+\t\t  if (__bump)\n+\t\t    _M_in_cur_move(1);\n+\t\t  return __ret;\n+\t\t}\n \t    }\n \n \t  // Sync internal and external buffers.\n@@ -128,7 +133,12 @@ namespace std\n \t    {\n \t      _M_pback_destroy();\n \t      if (_M_in_cur < _M_in_end)\n-\t\treturn traits_type::to_int_type(*_M_in_cur);\n+\t\t{\n+\t\t  __ret = traits_type::to_int_type(*_M_in_cur);\n+\t\t  if (__bump)\n+\t\t    _M_in_cur_move(1);\n+\t  \t  return __ret;\n+\t\t}\n \t    }\n \n \t  // Sync internal and external buffers."}, {"sha": "660abd1752a20964d58496ea08810df78efacec7", "filename": "libstdc++-v3/testsuite/27_io/filebuf_virtuals.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_virtuals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_virtuals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_virtuals.cc?ref=57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12", "patch": "@@ -73,6 +73,7 @@ const char name_02[] = \"filebuf_virtuals-2.txt\"; // empty file, need to create\n const char name_03[] = \"filebuf_virtuals-3.txt\"; // empty file, need to create\n const char name_04[] = \"filebuf_virtuals-4.txt\"; // empty file, need to create\n const char name_05[] = \"filebuf_virtuals-5.txt\"; // empty file, need to create\n+const char name_06[] = \"filebuf_virtuals-6.txt\"; // empty file, need to create\n \n class derived_filebuf: public std::filebuf\n {\n@@ -681,6 +682,28 @@ void test11()\n   dfbuf_02.close();\n }\n \n+// libstdc++/9825\n+void test12()\n+{\n+  using namespace std;\n+  bool test = true;\n+\n+  filebuf fbuf;\n+\n+  fbuf.open(name_06, ios_base::in|ios_base::out|ios_base::trunc);\n+  fbuf.sputn(\"crazy bees!\", 11);\n+  fbuf.pubseekoff(0, ios_base::beg);\n+  fbuf.sbumpc();\n+  fbuf.sputbackc('x');\n+  filebuf::int_type c = fbuf.sbumpc();\n+  VERIFY( c == 'x' );\n+  c = fbuf.sbumpc();\n+  VERIFY( c == 'r' );\n+  c = fbuf.sbumpc();\n+  VERIFY( c == 'a' );\n+  fbuf.close();  \n+}\n+\n main() \n {\n   test01();\n@@ -696,5 +719,6 @@ main()\n   test09();\n   test10();\n   test11();\n+  test12();\n   return 0;\n }"}]}