{"sha": "ee54a3b318bdb09f0faaec20125d01933e224053", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU1NGEzYjMxOGJkYjA5ZjBmYWFlYzIwMTI1ZDAxOTMzZTIyNDA1Mw==", "commit": {"author": {"name": "Tim Shen", "email": "timshen91@gmail.com", "date": "2014-03-15T18:16:22Z"}, "committer": {"name": "Tim Shen", "email": "timshen@gcc.gnu.org", "date": "2014-03-15T18:16:22Z"}, "message": "regex.h: Add/modify comments.\n\n2014-03-15  Tim Shen  <timshen91@gmail.com>\n\n\t* include/bits/regex.h: Add/modify comments.\n\t* include/bits/regex_compiler.h: Likewise.\n\t* include/bits/regex_executor.h: Likewise.\n\t* include/bits/regex_executor.tcc: Likewise.\n\t* include/bits/regex_scanner.h: Likewise.\n\nFrom-SVN: r208593", "tree": {"sha": "acf1348b8279a9ceedc9bf6aca7c793dbdf59cf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acf1348b8279a9ceedc9bf6aca7c793dbdf59cf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee54a3b318bdb09f0faaec20125d01933e224053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee54a3b318bdb09f0faaec20125d01933e224053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee54a3b318bdb09f0faaec20125d01933e224053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee54a3b318bdb09f0faaec20125d01933e224053/comments", "author": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1182dd22b9540464d7ede01abb4a8d321fb4e91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1182dd22b9540464d7ede01abb4a8d321fb4e91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1182dd22b9540464d7ede01abb4a8d321fb4e91"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "c0b40d79229cd107bbb56aff36789e4f9b3455ca", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ee54a3b318bdb09f0faaec20125d01933e224053", "patch": "@@ -1,3 +1,11 @@\n+2014-03-15  Tim Shen  <timshen91@gmail.com>\n+\n+\t* include/bits/regex.h: Add/modify comments.\n+\t* include/bits/regex_compiler.h: Likewise.\n+\t* include/bits/regex_executor.h: Likewise.\n+\t* include/bits/regex_executor.tcc: Likewise.\n+\t* include/bits/regex_scanner.h: Likewise.\n+\n 2014-03-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR ipa/58721"}, {"sha": "e556350adca8c315aa58fe0ee30dbfaa9980b38b", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=ee54a3b318bdb09f0faaec20125d01933e224053", "patch": "@@ -78,7 +78,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n \n   /**\n-   * @brief Class regex_traits. Describes aspects of a regular expression.\n+   * @brief Describes aspects of a regular expression.\n    *\n    * A regular expression traits class that satisfies the requirements of\n    * section [28.7].\n@@ -2098,8 +2098,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // [7.11.3] Function template regex_search\n   /**\n    * Searches for a regular expression within a range.\n-   * @param __first [IN]  The start of the string to search.\n-   * @param __last  [IN]  One-past-the-end of the string to search.\n+   * @param __s     [IN]  The start of the string to search.\n+   * @param __e     [IN]  One-past-the-end of the string to search.\n    * @param __m     [OUT] The match results.\n    * @param __re    [IN]  The regular expression to search for.\n    * @param __flags [IN]  Search policy flags."}, {"sha": "f5a198f65e9288eaee705398b20bfefe14dffe08", "filename": "libstdc++-v3/include/bits/regex_compiler.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h?ref=ee54a3b318bdb09f0faaec20125d01933e224053", "patch": "@@ -42,7 +42,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename, bool, bool>\n     struct _BracketMatcher;\n \n-  /// Builds an NFA from an input iterator interval.\n+  /**\n+   * @brief Builds an NFA from an input iterator interval.\n+   *\n+   * The %_TraitsT type should fulfill requirements [28.3].\n+   */\n   template<typename _TraitsT>\n     class _Compiler\n     {"}, {"sha": "708c78e2081c0af314aadbff34466d81b9d86554", "filename": "libstdc++-v3/include/bits/regex_executor.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.h?ref=ee54a3b318bdb09f0faaec20125d01933e224053", "patch": "@@ -41,6 +41,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @{\n    */\n \n+  /**\n+   * @brief Takes a regex and an input string in and\n+   * do the matching.\n+   *\n+   * The %_Executor class has two modes: DFS mode and BFS mode, controlled\n+   * by the template parameter %__dfs_mode.\n+   */\n   template<typename _BiIter, typename _Alloc, typename _TraitsT,\n \t   bool __dfs_mode>\n     class _Executor"}, {"sha": "68a5e0490f9522524660738b4b8d137a4972a95b", "filename": "libstdc++-v3/include/bits/regex_executor.tcc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.tcc?ref=ee54a3b318bdb09f0faaec20125d01933e224053", "patch": "@@ -72,7 +72,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // TODO: This approach is exponentially slow for certain input.\n   //       Try to compile the NFA to a DFA.\n   //\n-  // Time complexity: o(match_length), O(2^(_M_nfa.size()))\n+  // Time complexity: \\Omega(match_length), O(2^(_M_nfa.size()))\n   // Space complexity: \\theta(match_results.size() + match_length)\n   //\n   // ------------------------------------------------------------\n@@ -82,8 +82,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // Russ Cox's article (http://swtch.com/~rsc/regexp/regexp1.html)\n   // explained this algorithm clearly.\n   //\n-  // It first computes epsilon closure for every state that's still matching,\n-  // using the same DFS algorithm, but doesn't reenter states (set true in\n+  // It first computes epsilon closure (states that can be achieved without\n+  // consuming characters) for every state that's still matching,\n+  // using the same DFS algorithm, but doesn't re-enter states (find a true in\n   // _M_visited), nor follows _S_opcode_match.\n   //\n   // Then apply DFS using every _S_opcode_match (in _M_match_queue) as the start\n@@ -92,9 +93,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // It significantly reduces potential duplicate states, so has a better\n   // upper bound; but it requires more overhead.\n   //\n-  // Time complexity: o(match_length * match_results.size())\n+  // Time complexity: \\Omega(match_length * match_results.size())\n   //                  O(match_length * _M_nfa.size() * match_results.size())\n-  // Space complexity: o(_M_nfa.size() + match_results.size())\n+  // Space complexity: \\Omega(_M_nfa.size() + match_results.size())\n   //                   O(_M_nfa.size() * match_results.size())\n   template<typename _BiIter, typename _Alloc, typename _TraitsT,\n     bool __dfs_mode>"}, {"sha": "6627db97ce0576dcf6f73929117210e8a40a2d08", "filename": "libstdc++-v3/include/bits/regex_scanner.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_scanner.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee54a3b318bdb09f0faaec20125d01933e224053/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_scanner.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_scanner.h?ref=ee54a3b318bdb09f0faaec20125d01933e224053", "patch": "@@ -188,7 +188,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   };\n \n   /**\n-   * @brief struct _Scanner. Scans an input range for regex tokens.\n+   * @brief Scans an input range for regex tokens.\n    *\n    * The %_Scanner class interprets the regular expression pattern in\n    * the input range passed to its constructor as a sequence of parse"}]}