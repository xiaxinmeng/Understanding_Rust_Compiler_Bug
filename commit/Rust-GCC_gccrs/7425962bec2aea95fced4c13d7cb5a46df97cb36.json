{"sha": "7425962bec2aea95fced4c13d7cb5a46df97cb36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQyNTk2MmJlYzJhZWE5NWZjZWQ0YzEzZDdjYjVhNDZkZjk3Y2IzNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T13:04:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T13:04:22Z"}, "message": "[multiple changes]\n\n2010-09-09  Doug Rupp  <rupp@adacore.com>\n\n\t* sem_prag.adb (pragma Ident): Pass --identification= vice \n\tIDENTIFICATION=\n\t* gnatlink.adb (Linker_Options): Look for --identification= vice \n\tIDENTIFICATION=\n\n2010-09-09  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference, case Attribute_Old): When\n\tinserting and analyzing the object declaration for the temporary object\n\tcreated to hold a 'Old value, push the scope for the subprogram where\n\tthe object is inserted, so that its Scope (and that of related objects)\n\twill be set properly.\n\nFrom-SVN: r164088", "tree": {"sha": "3fef9ff3dd94805e61859a72fa312ef06a6d2167", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fef9ff3dd94805e61859a72fa312ef06a6d2167"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7425962bec2aea95fced4c13d7cb5a46df97cb36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7425962bec2aea95fced4c13d7cb5a46df97cb36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7425962bec2aea95fced4c13d7cb5a46df97cb36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7425962bec2aea95fced4c13d7cb5a46df97cb36/comments", "author": null, "committer": null, "parents": [{"sha": "d09b9f672b17c21032cd565799269b0b44c885fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d09b9f672b17c21032cd565799269b0b44c885fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d09b9f672b17c21032cd565799269b0b44c885fa"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "ef94a4ee8cdad06c91752c737c38594d1188c613", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7425962bec2aea95fced4c13d7cb5a46df97cb36/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7425962bec2aea95fced4c13d7cb5a46df97cb36/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7425962bec2aea95fced4c13d7cb5a46df97cb36", "patch": "@@ -1,3 +1,18 @@\n+2010-09-09  Doug Rupp  <rupp@adacore.com>\n+\n+\t* sem_prag.adb (pragma Ident): Pass --identification= vice \n+\tIDENTIFICATION=\n+\t* gnatlink.adb (Linker_Options): Look for --identification= vice \n+\tIDENTIFICATION=\n+\n+2010-09-09  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference, case Attribute_Old): When\n+\tinserting and analyzing the object declaration for the temporary object\n+\tcreated to hold a 'Old value, push the scope for the subprogram where\n+\tthe object is inserted, so that its Scope (and that of related objects)\n+\twill be set properly.\n+\n 2010-09-09  Vincent Celier  <celier@adacore.com>\n \n \t* prj.adb (Get_Object_Directory): Return object directory display name"}, {"sha": "1f6f7544df20b979133405d83248531805909c5f", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7425962bec2aea95fced4c13d7cb5a46df97cb36/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7425962bec2aea95fced4c13d7cb5a46df97cb36/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=7425962bec2aea95fced4c13d7cb5a46df97cb36", "patch": "@@ -3011,7 +3011,8 @@ package body Exp_Attr is\n               and then Chars (Defining_Entity (Subp)) /= Name_uPostconditions;\n          end loop;\n \n-         --  Insert the assignment at the start of the declarations\n+         --  Insert the initialized object declaration at the start of the\n+         --  subprogram's declarations.\n \n          Asn_Stm :=\n            Make_Object_Declaration (Loc,\n@@ -3020,13 +3021,25 @@ package body Exp_Attr is\n              Object_Definition   => New_Occurrence_Of (Etype (N), Loc),\n              Expression          => Pref);\n \n+         --  Push the subprogram's scope, so that the object will be analyzed\n+         --  in that context (rather than the context of the Precondition\n+         --  subprogram) and will have its Scope set properly.\n+\n+         if Present (Corresponding_Spec (Subp)) then\n+            Push_Scope (Corresponding_Spec (Subp));\n+         else\n+            Push_Scope (Defining_Entity (Subp));\n+         end if;\n+\n          if Is_Empty_List (Declarations (Subp)) then\n             Set_Declarations (Subp, New_List (Asn_Stm));\n             Analyze (Asn_Stm);\n          else\n             Insert_Action (First (Declarations (Subp)), Asn_Stm);\n          end if;\n \n+         Pop_Scope;\n+\n          Rewrite (N, New_Occurrence_Of (Tnn, Loc));\n       end Old;\n "}, {"sha": "62bc1768f64da5ca5796f4299d92504118caa211", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7425962bec2aea95fced4c13d7cb5a46df97cb36/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7425962bec2aea95fced4c13d7cb5a46df97cb36/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=7425962bec2aea95fced4c13d7cb5a46df97cb36", "patch": "@@ -2144,9 +2144,9 @@ begin\n \n                --  Remove duplicate IDENTIFICATION directives (VMS)\n \n-               if Linker_Options.Table (J)'Length > 27\n-                 and then Linker_Options.Table (J) (1 .. 28)\n-                          = \"--for-linker=IDENTIFICATION=\"\n+               if Linker_Options.Table (J)'Length > 29\n+                 and then Linker_Options.Table (J) (1 .. 30)\n+                          = \"--for-linker=--identification=\"\n                then\n                   if IDENT_Op then\n                      Linker_Options.Table (J .. Linker_Options.Last - 1) :="}, {"sha": "a3b400e6100b394f29e36c7744f9f08187ccd34c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7425962bec2aea95fced4c13d7cb5a46df97cb36/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7425962bec2aea95fced4c13d7cb5a46df97cb36/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=7425962bec2aea95fced4c13d7cb5a46df97cb36", "patch": "@@ -7845,12 +7845,12 @@ package body Sem_Prag is\n \n                   else\n                      --  In VMS, the effect of IDENT is achieved by passing\n-                     --  IDENTIFICATION=name as a --for-linker switch.\n+                     --  --identification=name as a --for-linker switch.\n \n                      if OpenVMS_On_Target then\n                         Start_String;\n                         Store_String_Chars\n-                          (\"--for-linker=IDENTIFICATION=\");\n+                          (\"--for-linker=--identification=\");\n                         String_To_Name_Buffer (Strval (Str));\n                         Store_String_Chars (Name_Buffer (1 .. Name_Len));\n \n@@ -7860,7 +7860,7 @@ package body Sem_Prag is\n                         --  associated with a with'd package.\n \n                         Replace_Linker_Option_String\n-                          (End_String, \"--for-linker=IDENTIFICATION=\");\n+                          (End_String, \"--for-linker=--identification=\");\n                      end if;\n \n                      Set_Ident_String (Current_Sem_Unit, Str);"}]}