{"sha": "d95036e3f8e8548ec9a568748a24db4f20ea65f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk1MDM2ZTNmOGU4NTQ4ZWM5YTU2ODc0OGEyNGRiNGYyMGVhNjVmNQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-09-08T13:14:41Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-09-08T13:14:41Z"}, "message": "re PR objc++/16816 (obj-c++ parser error with multi-colon selectors)\n\n2005-09-08  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR obj-c++/16816\n        * obj-c++.dg/selector-5.mm: New test.\n        * obj-c++.dg/selector-6.mm: New test.\n2005-09-08  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR obj-c++/16816\n        * parser.c (cp_parser_objc_selector_expression): Treat CPP_SCOPE as\n        two CPP_COLON.\n\nFrom-SVN: r104033", "tree": {"sha": "5fe8311d52bb91902b19b5217da30bf4fb8068cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fe8311d52bb91902b19b5217da30bf4fb8068cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d95036e3f8e8548ec9a568748a24db4f20ea65f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95036e3f8e8548ec9a568748a24db4f20ea65f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d95036e3f8e8548ec9a568748a24db4f20ea65f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95036e3f8e8548ec9a568748a24db4f20ea65f5/comments", "author": null, "committer": null, "parents": [{"sha": "8f078c08371d600c4834f90831b9ba54316ab019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f078c08371d600c4834f90831b9ba54316ab019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f078c08371d600c4834f90831b9ba54316ab019"}], "stats": {"total": 82, "additions": 69, "deletions": 13}, "files": [{"sha": "89a9656c15fcbbd3cd3abac599de2c79659a925b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d95036e3f8e8548ec9a568748a24db4f20ea65f5", "patch": "@@ -1,3 +1,9 @@\n+2005-09-08  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR obj-c++/16816\n+\t* parser.c (cp_parser_objc_selector_expression): Treat CPP_SCOPE as\n+\ttwo CPP_COLON.\n+\n 2005-09-07  Richard Guenther  <rguenther@suse.de>\n \n \t* cp-gimplify.c (cp_gimplify_expr): Create empty CONSTRUCTOR"}, {"sha": "e979e939b10cf1901224ead14b10add1096947a5", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 31, "deletions": 13, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=d95036e3f8e8548ec9a568748a24db4f20ea65f5", "patch": "@@ -16500,27 +16500,45 @@ cp_parser_objc_selector_expression (cp_parser* parser)\n   cp_parser_require (parser, CPP_OPEN_PAREN, \"`('\");\n   token = cp_lexer_peek_token (parser->lexer);\n \n-  while (cp_parser_objc_selector_p (token->type) || token->type == CPP_COLON)\n+  while (cp_parser_objc_selector_p (token->type) || token->type == CPP_COLON\n+         || token->type == CPP_SCOPE)\n     {\n       tree selector = NULL_TREE;\n \n-      if (token->type != CPP_COLON)\n+      if (token->type != CPP_COLON\n+\t  || token->type == CPP_SCOPE)\n \tselector = cp_parser_objc_selector (parser);\n \n-      /* Detect if we have a unary selector.  */\n-      if (maybe_unary_selector_p\n-\t  && cp_lexer_next_token_is_not (parser->lexer, CPP_COLON))\n+      if (cp_lexer_next_token_is_not (parser->lexer, CPP_COLON)\n+          && cp_lexer_next_token_is_not (parser->lexer, CPP_SCOPE))\n \t{\n-\t  sel_seq = selector;\n-\t  goto finish_selector;\n+\t  /* Detect if we have a unary selector.  */\n+\t  if (maybe_unary_selector_p)\n+\t    {\n+\t      sel_seq = selector;\n+\t      goto finish_selector;\n+\t    }\n+\t  else\n+\t    {\n+\t      cp_parser_error (parser, \"expected %<:%>\");\n+\t    }\n \t}\n-\n       maybe_unary_selector_p = false;\n-      cp_parser_require (parser, CPP_COLON, \"`:'\");\n-\n-      sel_seq\n-\t= chainon (sel_seq,\n-\t\t   build_tree_list (selector, NULL_TREE));\n+      token = cp_lexer_consume_token (parser->lexer);\n+      \n+      if (token->type == CPP_SCOPE)\n+        {\n+\t  sel_seq\n+\t    = chainon (sel_seq,\n+\t\t       build_tree_list (selector, NULL_TREE));\n+\t  sel_seq\n+\t    = chainon (sel_seq,\n+\t\t       build_tree_list (NULL_TREE, NULL_TREE));\n+\t}\n+      else\n+\tsel_seq\n+\t  = chainon (sel_seq,\n+\t\t     build_tree_list (selector, NULL_TREE));\n \n       token = cp_lexer_peek_token (parser->lexer);\n     }"}, {"sha": "716cd8f187f6d32c5705f6d96e0e543bf3ba0e3d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d95036e3f8e8548ec9a568748a24db4f20ea65f5", "patch": "@@ -1,3 +1,9 @@\n+2005-09-08  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR obj-c++/16816\n+\t* obj-c++.dg/selector-5.mm: New test.\n+\t* obj-c++.dg/selector-6.mm: New test.\n+\n 2005-09-08  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR objc/20574"}, {"sha": "10671a9450b099647890981456b1133731805007", "filename": "gcc/testsuite/obj-c++.dg/selector-5.mm", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fselector-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fselector-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fselector-5.mm?ref=d95036e3f8e8548ec9a568748a24db4f20ea65f5", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-options \"\" } */\n+/* { dg-do compile } */\n+\n+#include <objc/Object.h>\n+\n+int main()\n+{\n+  SEL foo = @selector(foo::);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler  \"foo::\" } } */\n+"}, {"sha": "54a38f8f75eeb77ff2a1d59a53a3bbdf42269b26", "filename": "gcc/testsuite/obj-c++.dg/selector-6.mm", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fselector-6.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95036e3f8e8548ec9a568748a24db4f20ea65f5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fselector-6.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fselector-6.mm?ref=d95036e3f8e8548ec9a568748a24db4f20ea65f5", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-options \"\" } */\n+/* { dg-do compile } */\n+\n+#include <objc/Object.h>\n+\n+int main()\n+{\n+  SEL foo = @selector(foo: a::);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler  \"foo:a::\" } } */\n+"}]}