{"sha": "1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY4YzNjNWIzMThiYWFlZDg3ODgxMGRjZGNjMGE3MTVjYThkMmI3ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-05-17T22:46:22Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-17T22:46:22Z"}, "message": "expr.c (init_expr_once): Don't use start/end_sequence.\n\n        * expr.c (init_expr_once): Don't use start/end_sequence.\n        Use rtx_alloc instead of emit_insn.\n        * toplev.c (lang_dependent_init): Run init_expr_once here ...\n        (lang_independent_init): ... not here.\n\nFrom-SVN: r53572", "tree": {"sha": "c5ae8480d92cfb9bbf49e92a25cde20346423a8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5ae8480d92cfb9bbf49e92a25cde20346423a8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e/comments", "author": null, "committer": null, "parents": [{"sha": "4664f4c40f8ff0d762f9655297fddcb9a885f3fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4664f4c40f8ff0d762f9655297fddcb9a885f3fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4664f4c40f8ff0d762f9655297fddcb9a885f3fc"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "58d851bd092f1c67939f7367244e614916b53312", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e", "patch": "@@ -1,3 +1,10 @@\n+2002-05-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* expr.c (init_expr_once): Don't use start/end_sequence.\n+\tUse rtx_alloc instead of emit_insn.\n+\t* toplev.c (lang_dependent_init): Run init_expr_once here ...\n+\t(lang_independent_init): ... not here.\n+\n 2002-05-17  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/sh/lib1funcs.asm (GLOBAL): Use __USER_LABEL_PREFIX__."}, {"sha": "bc0b225704bcac5a239238264e27f9deaab408bf", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e", "patch": "@@ -214,16 +214,15 @@ init_expr_once ()\n   int num_clobbers;\n   rtx mem, mem1;\n \n-  start_sequence ();\n-\n   /* Try indexing by frame ptr and try by stack ptr.\n      It is known that on the Convex the stack ptr isn't a valid index.\n      With luck, one or the other is valid on any machine.  */\n   mem = gen_rtx_MEM (VOIDmode, stack_pointer_rtx);\n   mem1 = gen_rtx_MEM (VOIDmode, frame_pointer_rtx);\n \n-  insn = emit_insn (gen_rtx_SET (0, NULL_RTX, NULL_RTX));\n-  pat = PATTERN (insn);\n+  insn = rtx_alloc (INSN);\n+  pat = gen_rtx_SET (0, NULL_RTX, NULL_RTX);\n+  PATTERN (insn) = pat;\n \n   for (mode = VOIDmode; (int) mode < NUM_MACHINE_MODES;\n        mode = (enum machine_mode) ((int) mode + 1))\n@@ -291,8 +290,6 @@ init_expr_once ()\n \t    float_extend_from_mem[mode][srcmode] = true;\n \t}\n     }\n-\n-  end_sequence ();\n }\n \n /* This is run at the start of compiling a function.  */"}, {"sha": "83cdc5799b15520e306a6a8c1ca448f67072ced3", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1f8c3c5b318baaed878810dcdcc0a715ca8d2b7e", "patch": "@@ -5020,7 +5020,6 @@ lang_independent_init ()\n      provide a dummy function context for them.  */\n   init_dummy_function_start ();\n   init_expmed ();\n-  init_expr_once ();\n   if (flag_caller_saves)\n     init_caller_save ();\n   expand_dummy_function_end ();\n@@ -5051,6 +5050,7 @@ lang_dependent_init (name)\n      front end is initialized.  */\n   init_eh ();\n   init_optabs ();\n+  init_expr_once ();\n \n   /* Put an entry on the input file stack for the main input file.  */\n   push_srcloc (input_filename, 0);"}]}