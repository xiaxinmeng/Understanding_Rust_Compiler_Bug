{"sha": "98937c6816d7fae32832901e05582b8730c0aaf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg5MzdjNjgxNmQ3ZmFlMzI4MzI5MDFlMDU1ODJiODczMGMwYWFmNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-11-17T18:56:21Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-11-17T18:56:21Z"}, "message": "Simplify ix86_builtin_vectorized_function\n\nAfter the previous patches it's no longer necessary for\nTARGET_BUILTIN_VECTORIZED_FUNCTION to return functions that\nmap to the vector optab of the original operation.  We'll use\na vector form of the internal function instead.\n\nTested on x86_64-linux-gnu.\n\ngcc/\n\t* config/i386/i386.c (ix86_builtin_vectorized_function): Remove\n\tentries that map directly to optabs.\n\nFrom-SVN: r230493", "tree": {"sha": "d93aac275b2624b635d47ec169b1c2c1d71038c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d93aac275b2624b635d47ec169b1c2c1d71038c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98937c6816d7fae32832901e05582b8730c0aaf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98937c6816d7fae32832901e05582b8730c0aaf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98937c6816d7fae32832901e05582b8730c0aaf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98937c6816d7fae32832901e05582b8730c0aaf5/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70439f0d61b811fa5b9a77fcdf40c6353daa8f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70439f0d61b811fa5b9a77fcdf40c6353daa8f75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70439f0d61b811fa5b9a77fcdf40c6353daa8f75"}], "stats": {"total": 68, "additions": 5, "deletions": 63}, "files": [{"sha": "05cb9db62d027d6bef2ae073a6c6d1899e657138", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98937c6816d7fae32832901e05582b8730c0aaf5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98937c6816d7fae32832901e05582b8730c0aaf5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98937c6816d7fae32832901e05582b8730c0aaf5", "patch": "@@ -1,3 +1,8 @@\n+2015-11-17  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/i386/i386.c (ix86_builtin_vectorized_function): Remove\n+\tentries that map directly to optabs.\n+\n 2015-11-17  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* internal-fn.h (direct_internal_fn_info): Add vectorizable flag."}, {"sha": "e752e6217266bfd4a23e48b88c65bb0239042cb7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98937c6816d7fae32832901e05582b8730c0aaf5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98937c6816d7fae32832901e05582b8730c0aaf5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=98937c6816d7fae32832901e05582b8730c0aaf5", "patch": "@@ -42012,27 +42012,6 @@ ix86_builtin_vectorized_function (unsigned int fn, tree type_out,\n \n   switch (fn)\n     {\n-    CASE_CFN_SQRT:\n-      if (out_mode == DFmode && in_mode == DFmode)\n-\t{\n-\t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPD);\n-\t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPD256);\n-\t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPD512);\n-\t}\n-      if (out_mode == SFmode && in_mode == SFmode)\n-\t{\n-\t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPS_NR);\n-\t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPS_NR256);\n-\t  else if (out_n == 16 && in_n == 16)\n-\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPS_NR512);\n-\t}\n-      break;\n-\n     CASE_CFN_EXP2:\n       if (out_mode == SFmode && in_mode == SFmode)\n \t{\n@@ -42135,27 +42114,6 @@ ix86_builtin_vectorized_function (unsigned int fn, tree type_out,\n \t}\n       break;\n \n-    CASE_CFN_COPYSIGN:\n-      if (out_mode == DFmode && in_mode == DFmode)\n-\t{\n-\t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPD);\n-\t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPD256);\n-\t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPD512);\n-\t}\n-      if (out_mode == SFmode && in_mode == SFmode)\n-\t{\n-\t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPS);\n-\t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPS256);\n-\t  else if (out_n == 16 && in_n == 16)\n-\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPS512);\n-\t}\n-      break;\n-\n     CASE_CFN_FLOOR:\n       /* The round insn does not trap on denormals.  */\n       if (flag_trapping_math || !TARGET_ROUND)\n@@ -42240,27 +42198,6 @@ ix86_builtin_vectorized_function (unsigned int fn, tree type_out,\n \t}\n       break;\n \n-    CASE_CFN_ROUND:\n-      /* The round insn does not trap on denormals.  */\n-      if (flag_trapping_math || !TARGET_ROUND)\n-\tbreak;\n-\n-      if (out_mode == DFmode && in_mode == DFmode)\n-\t{\n-\t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPD_AZ);\n-\t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPD_AZ256);\n-\t}\n-      if (out_mode == SFmode && in_mode == SFmode)\n-\t{\n-\t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPS_AZ);\n-\t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPS_AZ256);\n-\t}\n-      break;\n-\n     CASE_CFN_FMA:\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{"}]}