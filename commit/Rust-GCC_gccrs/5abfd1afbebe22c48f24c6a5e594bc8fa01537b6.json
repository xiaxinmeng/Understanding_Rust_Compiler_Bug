{"sha": "5abfd1afbebe22c48f24c6a5e594bc8fa01537b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFiZmQxYWZiZWJlMjJjNDhmMjRjNmE1ZTU5NGJjOGZhMDE1MzdiNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-06-11T03:19:55Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-06-11T03:19:55Z"}, "message": "h8300.c (print_operand): Remove support for operand character 'b'.\n\n\t* config/h8300/h8300.c (print_operand): Remove support for\n\toperand character 'b'.\n\tAdd the AND case to operand character 'c'.\n\t* config/h8300/h8300.md (two anonymous patterns): Replace\n\toperand character 'b' with 'c'.\n\nFrom-SVN: r67748", "tree": {"sha": "739074f882a68bf08cd9660670813efb01d1e07c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/739074f882a68bf08cd9660670813efb01d1e07c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5abfd1afbebe22c48f24c6a5e594bc8fa01537b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5abfd1afbebe22c48f24c6a5e594bc8fa01537b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5abfd1afbebe22c48f24c6a5e594bc8fa01537b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5abfd1afbebe22c48f24c6a5e594bc8fa01537b6/comments", "author": null, "committer": null, "parents": [{"sha": "bf1d3e81e8584dd2480e66cd242e5dc8cb780f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1d3e81e8584dd2480e66cd242e5dc8cb780f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf1d3e81e8584dd2480e66cd242e5dc8cb780f93"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "50359950355cc8f9b4a55c5339d318bc2dbbbbf3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abfd1afbebe22c48f24c6a5e594bc8fa01537b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abfd1afbebe22c48f24c6a5e594bc8fa01537b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5abfd1afbebe22c48f24c6a5e594bc8fa01537b6", "patch": "@@ -1,3 +1,11 @@\n+2003-06-10  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (print_operand): Remove support for\n+\toperand character 'b'.\n+\tAdd the AND case to operand character 'c'.\n+\t* config/h8300/h8300.md (two anonymous patterns): Replace\n+\toperand character 'b' with 'c'.\n+\n 2003-06-10  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (print_operand): Remove support for"}, {"sha": "76779e2bb77a4d4b910c33496a6d90e3647ee59b", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abfd1afbebe22c48f24c6a5e594bc8fa01537b6/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abfd1afbebe22c48f24c6a5e594bc8fa01537b6/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=5abfd1afbebe22c48f24c6a5e594bc8fa01537b6", "patch": "@@ -1235,7 +1235,6 @@ h8300_rtx_costs (x, code, outer_code, total)\n    'Y' print either l or h depending on whether last 'Z' operand < 8 or >= 8.\n        If this operand isn't a register, fall back to 'R' handling.\n    'Z' print int & 7.\n-   'b' print the bit opcode\n    'c' print the opcode corresponding to rtl\n    'e' first word of 32 bit value - if reg, then least reg. if mem\n        then least. if const then most sig word\n@@ -1373,22 +1372,6 @@ print_operand (file, x, code)\n       bitint = INTVAL (x);\n       fprintf (file, \"#%d\", bitint & 7);\n       break;\n-    case 'b':\n-      switch (GET_CODE (x))\n-\t{\n-\tcase IOR:\n-\t  fprintf (file, \"bor\");\n-\t  break;\n-\tcase XOR:\n-\t  fprintf (file, \"bxor\");\n-\t  break;\n-\tcase AND:\n-\t  fprintf (file, \"band\");\n-\t  break;\n-\tdefault:\n-\t  break;\n-\t}\n-      break;\n     case 'c':\n       switch (GET_CODE (x))\n \t{\n@@ -1398,6 +1381,9 @@ print_operand (file, x, code)\n \tcase XOR:\n \t  fprintf (file, \"xor\");\n \t  break;\n+\tcase AND:\n+\t  fprintf (file, \"and\");\n+\t  break;\n \tdefault:\n \t  break;\n \t}"}]}