{"sha": "489df541a7b0fc6c5e543a1da3d97ab80a090ae1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg5ZGY1NDFhN2IwZmM2YzVlNTQzYTFkYTNkOTdhYjgwYTA5MGFlMQ==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2009-11-29T19:19:06Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2009-11-29T19:19:06Z"}, "message": "Really fix PR c++/36408\n\ngcc/cp/ChangeLog:\n\n\tPR c++/36408\n\t* semantics.c (empty_expr_stmt_p): Handle void_zero_node and fix\n\tbad indentation.\n\t* pt.c (tsubst_copy_and_build): Fix typo.\n\nFrom-SVN: r154742", "tree": {"sha": "3632d82bf55ed91d3882acab5dbdf5de9aee1a6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3632d82bf55ed91d3882acab5dbdf5de9aee1a6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/489df541a7b0fc6c5e543a1da3d97ab80a090ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489df541a7b0fc6c5e543a1da3d97ab80a090ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/489df541a7b0fc6c5e543a1da3d97ab80a090ae1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489df541a7b0fc6c5e543a1da3d97ab80a090ae1/comments", "author": null, "committer": null, "parents": [{"sha": "0c31c577ac77cb145171d91246867efb6d058fbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c31c577ac77cb145171d91246867efb6d058fbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c31c577ac77cb145171d91246867efb6d058fbf"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "57ce3cd58ffcd1946c62687b4c8409a3cc71810b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489df541a7b0fc6c5e543a1da3d97ab80a090ae1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489df541a7b0fc6c5e543a1da3d97ab80a090ae1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=489df541a7b0fc6c5e543a1da3d97ab80a090ae1", "patch": "@@ -1,3 +1,10 @@\n+2009-11-29  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/36408\n+\t* semantics.c (empty_expr_stmt_p): Handle void_zero_node and fix\n+\tbad indentation.\n+\t* pt.c (tsubst_copy_and_build): Fix typo.\n+\n 2009-11-29  Jan Hubicka  <jh@suse.cz>\n \n \t* optimize.c (maybe_clone_body): Emit thunks associated to alias."}, {"sha": "dd86ceeb682bc1bf7d5a589db2e5a6857ae78698", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489df541a7b0fc6c5e543a1da3d97ab80a090ae1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489df541a7b0fc6c5e543a1da3d97ab80a090ae1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=489df541a7b0fc6c5e543a1da3d97ab80a090ae1", "patch": "@@ -12546,8 +12546,8 @@ tsubst_copy_and_build (tree t,\n \n \t/* If the resulting list of expression statement is empty,\n \t   fold it further into void_zero_node.  */\n-\tif (empty_expr_stmt_p (cur_stmt_expr))\n-\t  cur_stmt_expr = void_zero_node;\n+\tif (empty_expr_stmt_p (stmt_expr))\n+\t  stmt_expr = void_zero_node;\n \n \treturn stmt_expr;\n       }"}, {"sha": "4a9bee7162408e14ec458ccb4601dac62c3c15c5", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489df541a7b0fc6c5e543a1da3d97ab80a090ae1/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489df541a7b0fc6c5e543a1da3d97ab80a090ae1/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=489df541a7b0fc6c5e543a1da3d97ab80a090ae1", "patch": "@@ -1855,6 +1855,9 @@ empty_expr_stmt_p (tree expr_stmt)\n {\n   tree body = NULL_TREE;\n \n+  if (expr_stmt == void_zero_node)\n+    return true;\n+\n   if (expr_stmt)\n     {\n       if (TREE_CODE (expr_stmt) == EXPR_STMT)\n@@ -1863,13 +1866,13 @@ empty_expr_stmt_p (tree expr_stmt)\n \tbody = expr_stmt;\n     }\n \n-    if (body)\n-      {\n-\tif (TREE_CODE (body) == STATEMENT_LIST)\n-\t  return tsi_end_p (tsi_start (body));\n-\telse\n-\t  return empty_expr_stmt_p (body);\n-      }\n+  if (body)\n+    {\n+      if (TREE_CODE (body) == STATEMENT_LIST)\n+\treturn tsi_end_p (tsi_start (body));\n+      else\n+\treturn empty_expr_stmt_p (body);\n+    }\n   return false;\n }\n "}]}