{"sha": "1fd7c4ac661b59b7c360374e81f5b02e568690e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZkN2M0YWM2NjFiNTliN2MzNjAzNzRlODFmNWIwMmU1Njg2OTBlOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-25T21:50:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-25T21:50:02Z"}, "message": "(put_pending_sizes): New function.\n\nFrom-SVN: r10398", "tree": {"sha": "c473522da5f3e1cb86d253836a03919ab784edef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c473522da5f3e1cb86d253836a03919ab784edef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fd7c4ac661b59b7c360374e81f5b02e568690e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd7c4ac661b59b7c360374e81f5b02e568690e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fd7c4ac661b59b7c360374e81f5b02e568690e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd7c4ac661b59b7c360374e81f5b02e568690e9/comments", "author": null, "committer": null, "parents": [{"sha": "5480a90cce261c757f93682f16d312781705263a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5480a90cce261c757f93682f16d312781705263a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5480a90cce261c757f93682f16d312781705263a"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "3156c5853975750cc29acb1a262267aff822efb7", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fd7c4ac661b59b7c360374e81f5b02e568690e9/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fd7c4ac661b59b7c360374e81f5b02e568690e9/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=1fd7c4ac661b59b7c360374e81f5b02e568690e9", "patch": "@@ -81,6 +81,16 @@ get_pending_sizes ()\n   return chain;\n }\n \n+void\n+put_pending_sizes (chain)\n+     tree chain;\n+{\n+  if (pending_sizes)\n+    abort ();\n+\n+  pending_sizes = chain;\n+}\n+\n /* Given a size SIZE that may not be a constant, return a SAVE_EXPR\n    to serve as the actual size-expression for a type or decl.  */\n "}]}