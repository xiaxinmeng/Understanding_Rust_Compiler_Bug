{"sha": "c623f8372c205a28a1f0aa35932690449a032eb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYyM2Y4MzcyYzIwNWEyOGExZjBhYTM1OTMyNjkwNDQ5YTAzMmViNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-14T14:48:01Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-14T14:48:01Z"}, "message": "compiler: Permit omitting &T in composite literal.\n\nFrom-SVN: r182331", "tree": {"sha": "6fd59e1b0262a333a556497b187849b709191ce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fd59e1b0262a333a556497b187849b709191ce3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c623f8372c205a28a1f0aa35932690449a032eb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c623f8372c205a28a1f0aa35932690449a032eb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c623f8372c205a28a1f0aa35932690449a032eb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c623f8372c205a28a1f0aa35932690449a032eb6/comments", "author": null, "committer": null, "parents": [{"sha": "e6f5278487a76afcc219a9eeae150c7d3703659d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f5278487a76afcc219a9eeae150c7d3703659d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6f5278487a76afcc219a9eeae150c7d3703659d"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "3c75f8ace064eac27d3eda38054d299adc13a356", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c623f8372c205a28a1f0aa35932690449a032eb6/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c623f8372c205a28a1f0aa35932690449a032eb6/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=c623f8372c205a28a1f0aa35932690449a032eb6", "patch": "@@ -12783,21 +12783,35 @@ Composite_literal_expression::do_lower(Gogo* gogo, Named_object* function,\n \t}\n     }\n \n+  Type *pt = type->points_to();\n+  bool is_pointer = false;\n+  if (pt != NULL)\n+    {\n+      is_pointer = true;\n+      type = pt;\n+    }\n+\n+  Expression* ret;\n   if (type->is_error())\n     return Expression::make_error(this->location());\n   else if (type->struct_type() != NULL)\n-    return this->lower_struct(gogo, type);\n+    ret = this->lower_struct(gogo, type);\n   else if (type->array_type() != NULL)\n-    return this->lower_array(type);\n+    ret = this->lower_array(type);\n   else if (type->map_type() != NULL)\n-    return this->lower_map(gogo, function, inserter, type);\n+    ret = this->lower_map(gogo, function, inserter, type);\n   else\n     {\n       error_at(this->location(),\n \t       (\"expected struct, slice, array, or map type \"\n \t\t\"for composite literal\"));\n       return Expression::make_error(this->location());\n     }\n+\n+  if (is_pointer)\n+    ret = Expression::make_heap_composite(ret, this->location());\n+\n+  return ret;\n }\n \n // Lower a struct composite literal."}]}