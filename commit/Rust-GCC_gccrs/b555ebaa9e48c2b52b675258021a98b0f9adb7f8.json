{"sha": "b555ebaa9e48c2b52b675258021a98b0f9adb7f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU1NWViYWE5ZTQ4YzJiNTJiNjc1MjU4MDIxYTk4YjBmOWFkYjdmOA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-11-21T00:08:02Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-11-21T00:08:02Z"}, "message": "std_complex.h (complex<double>): Constructor complex<double>::complex(const complex<float>&) is not explicit...\n\n2000-11-21  Gabriel Dos Reis  <gdr@codesourcery.com>\n\n\t* include/bits/std_complex.h (complex<double>): Constructor\n\tcomplex<double>::complex(const complex<float>&) is not explicit;\n\tsince it is a promotion.\n\t(complex<long double>): Constructors taking complex<float> and\n\tcomplex<double> are not explicit.\n\nFrom-SVN: r37599", "tree": {"sha": "a5e8559565720275bedb6a973da8d5e45ec00a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5e8559565720275bedb6a973da8d5e45ec00a98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b555ebaa9e48c2b52b675258021a98b0f9adb7f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b555ebaa9e48c2b52b675258021a98b0f9adb7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b555ebaa9e48c2b52b675258021a98b0f9adb7f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b555ebaa9e48c2b52b675258021a98b0f9adb7f8/comments", "author": null, "committer": null, "parents": [{"sha": "b5ecf629d55f1c28126b1b4d3ed6f2b32fd10cc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5ecf629d55f1c28126b1b4d3ed6f2b32fd10cc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5ecf629d55f1c28126b1b4d3ed6f2b32fd10cc3"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "f26e8ffff72964aba4ca97f0b18662e1e8f9256a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b555ebaa9e48c2b52b675258021a98b0f9adb7f8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b555ebaa9e48c2b52b675258021a98b0f9adb7f8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b555ebaa9e48c2b52b675258021a98b0f9adb7f8", "patch": "@@ -1,3 +1,11 @@\n+2000-11-21  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* include/bits/std_complex.h (complex<double>): Constructor\n+\tcomplex<double>::complex(const complex<float>&) is not explicit;\n+\tsince it is a promotion.\n+\t(complex<long double>): Constructors taking complex<float> and\n+\tcomplex<double> are not explicit.\n+\n 2000-11-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/std_complex.h: Tweaks, include cmath for abs overloads."}, {"sha": "de5ad9a97c50bb30804e2d0954ac46d2876355fc", "filename": "libstdc++-v3/include/bits/std_complex.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b555ebaa9e48c2b52b675258021a98b0f9adb7f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_complex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b555ebaa9e48c2b52b675258021a98b0f9adb7f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_complex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_complex.h?ref=b555ebaa9e48c2b52b675258021a98b0f9adb7f8", "patch": "@@ -617,7 +617,7 @@ namespace std\n #ifdef _GLIBCPP_BUGGY_COMPLEX\n     complex(const complex& __z) : _M_value(__z._M_value) { }\n #endif\n-    explicit complex(const complex<float>&);\n+    complex(const complex<float>&);\n     explicit complex(const complex<long double>&);\n         \n     double real() const;\n@@ -772,8 +772,8 @@ namespace std\n #ifdef _GLIBCPP_BUGGY_COMPLEX\n     complex(const complex& __z) : _M_value(__z._M_value) { }\n #endif\n-    explicit complex(const complex<float>&);\n-    explicit complex(const complex<double>&);\n+    complex(const complex<float>&);\n+    complex(const complex<double>&);\n \n     long double real() const;\n     long double imag() const;\n@@ -920,6 +920,8 @@ namespace std\n \n   // These bits have to be at the end of this file, so that the\n   // specializations have all been defined.\n+  // ??? No, they have to be there because of compiler limitation at\n+  // inlining.  It suffices that class specializations be defined.\n   inline\n   complex<float>::complex(const complex<double>& __z)\n   : _M_value(_ComplexT(__z._M_value)) { }"}]}