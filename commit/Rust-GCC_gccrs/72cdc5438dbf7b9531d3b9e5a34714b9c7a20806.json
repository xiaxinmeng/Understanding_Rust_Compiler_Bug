{"sha": "72cdc5438dbf7b9531d3b9e5a34714b9c7a20806", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJjZGM1NDM4ZGJmN2I5NTMxZDNiOWU1YTM0NzE0YjljN2EyMDgwNg==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-08-24T11:32:53Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-08-24T11:32:53Z"}, "message": "arm.c (arm_override_options): Update error message.\n\n\t* config/arm/arm.c (arm_override_options): Update error message.\n\t* config/arm/arm.h (TARGET_HARD_FLOAT): Rename to\n\tTARGET_HARD_FLOAT_ABI.\n\t(TARGET_SOFT_FLOAT_ABI): Rename to TARGET_HARD_FLOAT.\n\t(LIBCALL_VALUE, FUNCTION_VALUE_REGNO_P): Use TARGET_HARD_FLOAT_ABI.\n\nFrom-SVN: r86479", "tree": {"sha": "c0158d84f70cdd0db06551148631c601289cf678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0158d84f70cdd0db06551148631c601289cf678"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806/comments", "author": null, "committer": null, "parents": [{"sha": "bd5ca07e605ff75b70c86d1d1fbca0b2516553e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5ca07e605ff75b70c86d1d1fbca0b2516553e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5ca07e605ff75b70c86d1d1fbca0b2516553e8"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "f6bb1b91c042d091d4e65a541a928998f3f5ddc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72cdc5438dbf7b9531d3b9e5a34714b9c7a20806", "patch": "@@ -1,3 +1,11 @@\n+2004-08-24  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_override_options): Update error message.\n+\t* config/arm/arm.h (TARGET_HARD_FLOAT): Rename to\n+\tTARGET_HARD_FLOAT_ABI.\n+\t(TARGET_SOFT_FLOAT_ABI): Rename to TARGET_HARD_FLOAT.\n+\t(LIBCALL_VALUE, FUNCTION_VALUE_REGNO_P): Use TARGET_HARD_FLOAT_ABI.\n+\n 2004-08-24  Kazuhiro Inaoka  <inaoka.kazuhiro@renesas.com>\n \n \tPR target/17093"}, {"sha": "f2f167c55014c72b2d39f13f1b8f6a67cd726d3a", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=72cdc5438dbf7b9531d3b9e5a34714b9c7a20806", "patch": "@@ -1071,8 +1071,9 @@ arm_override_options (void)\n \tarm_float_abi = ARM_FLOAT_ABI_HARD;\n     }\n \n-  if (arm_float_abi == ARM_FLOAT_ABI_SOFTFP)\n-    sorry (\"-mfloat-abi=softfp\");\n+  if (arm_float_abi == ARM_FLOAT_ABI_HARD && TARGET_VFP)\n+    sorry (\"-mfloat-abi=hard and VFP\");\n+\n   /* If soft-float is specified then don't use FPU.  */\n   if (TARGET_SOFT_FLOAT)\n     arm_fpu_arch = FPUTYPE_NONE;"}, {"sha": "0ba70f9b9234af9c48a5fc759ac64c67104dbf78", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72cdc5438dbf7b9531d3b9e5a34714b9c7a20806/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=72cdc5438dbf7b9531d3b9e5a34714b9c7a20806", "patch": "@@ -268,8 +268,10 @@ extern GTY(()) rtx aof_pic_label;\n #define TARGET_APCS_FLOAT\t\t(target_flags & ARM_FLAG_APCS_FLOAT)\n #define TARGET_APCS_REENT\t\t(target_flags & ARM_FLAG_APCS_REENT)\n #define TARGET_SOFT_FLOAT\t\t(arm_float_abi == ARM_FLOAT_ABI_SOFT)\n-#define TARGET_SOFT_FLOAT_ABI\t\t(arm_float_abi != ARM_FLOAT_ABI_HARD)\n-#define TARGET_HARD_FLOAT\t\t(arm_float_abi == ARM_FLOAT_ABI_HARD)\n+/* Use hardware floating point instructions. */\n+#define TARGET_HARD_FLOAT\t\t(arm_float_abi != ARM_FLOAT_ABI_SOFT)\n+/* Use hardware floating point calling convention.  */\n+#define TARGET_HARD_FLOAT_ABI\t\t(arm_float_abi == ARM_FLOAT_ABI_HARD)\n #define TARGET_FPA\t\t\t(arm_fp_model == ARM_FP_MODEL_FPA)\n #define TARGET_MAVERICK\t\t\t(arm_fp_model == ARM_FP_MODEL_MAVERICK)\n #define TARGET_VFP\t\t\t(arm_fp_model == ARM_FP_MODEL_VFP)\n@@ -1549,10 +1551,10 @@ enum reg_class\n /* Define how to find the value returned by a library function\n    assuming the value has mode MODE.  */\n #define LIBCALL_VALUE(MODE)  \\\n-  (TARGET_ARM && TARGET_HARD_FLOAT && TARGET_FPA\t\t\t\\\n+  (TARGET_ARM && TARGET_HARD_FLOAT_ABI && TARGET_FPA\t\t\t\\\n    && GET_MODE_CLASS (MODE) == MODE_FLOAT\t\t\t\t\\\n    ? gen_rtx_REG (MODE, FIRST_FPA_REGNUM)\t\t\t\t\\\n-   : TARGET_ARM && TARGET_HARD_FLOAT && TARGET_MAVERICK\t\t\t\\\n+   : TARGET_ARM && TARGET_HARD_FLOAT_ABI && TARGET_MAVERICK\t\t\\\n      && GET_MODE_CLASS (MODE) == MODE_FLOAT\t\t\t\t\\\n    ? gen_rtx_REG (MODE, FIRST_CIRRUS_FP_REGNUM) \t\t\t\\\n    : TARGET_IWMMXT_ABI && arm_vector_mode_supported_p (MODE)    \t\\\n@@ -1572,10 +1574,10 @@ enum reg_class\n #define FUNCTION_VALUE_REGNO_P(REGNO)  \\\n   ((REGNO) == ARG_REGISTER (1) \\\n    || (TARGET_ARM && ((REGNO) == FIRST_CIRRUS_FP_REGNUM)\t\t\\\n-       && TARGET_HARD_FLOAT && TARGET_MAVERICK)\t\t\t\t\\\n+       && TARGET_HARD_FLOAT_ABI && TARGET_MAVERICK)\t\t\t\\\n    || ((REGNO) == FIRST_IWMMXT_REGNUM && TARGET_IWMMXT_ABI) \\\n    || (TARGET_ARM && ((REGNO) == FIRST_FPA_REGNUM)\t\t\t\\\n-       && TARGET_HARD_FLOAT && TARGET_FPA))\n+       && TARGET_HARD_FLOAT_ABI && TARGET_FPA))\n \n /* How large values are returned */\n /* A C expression which can inhibit the returning of certain function values"}]}