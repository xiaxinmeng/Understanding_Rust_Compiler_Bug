{"sha": "63a906f02b620920f146512e2c5572b2ae5314f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNhOTA2ZjAyYjYyMDkyMGYxNDY1MTJlMmM1NTcyYjJhZTUzMTRmOA==", "commit": {"author": {"name": "Tomas Bily", "email": "tbily@suse.cz", "date": "2008-05-12T13:32:05Z"}, "committer": {"name": "Tomas Bily", "email": "tomby@gcc.gnu.org", "date": "2008-05-12T13:32:05Z"}, "message": "typeck2.c (digest_init): Use CONVERT_EXPR_P.\n\n        * typeck2.c (digest_init): Use CONVERT_EXPR_P.\n\n        * call.c (build_over_call): Likewise.\n\n        * error.c (dump_expr): Use CASE_CONVERT.\n\n        * class.c (fixed_type_or_null): Likewise.\n\nFrom-SVN: r135213", "tree": {"sha": "b8256b00f8517c9b22b424ebde41584ded0221ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8256b00f8517c9b22b424ebde41584ded0221ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63a906f02b620920f146512e2c5572b2ae5314f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a906f02b620920f146512e2c5572b2ae5314f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a906f02b620920f146512e2c5572b2ae5314f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a906f02b620920f146512e2c5572b2ae5314f8/comments", "author": null, "committer": null, "parents": [{"sha": "dbd368da835ac97572e449eb62d28b6d7f118db3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd368da835ac97572e449eb62d28b6d7f118db3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbd368da835ac97572e449eb62d28b6d7f118db3"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "85deaa41fe2c95a7e9ea3bf7d1e687fb4b9fc8af", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=63a906f02b620920f146512e2c5572b2ae5314f8", "patch": "@@ -1,3 +1,10 @@\n+2008-05-12  Tomas Bily  <tbily@suse.cz>\n+\n+        * typeck2.c (digest_init): Use CONVERT_EXPR_P.\n+        * call.c (build_over_call): Likewise.\n+        * error.c (dump_expr): Use CASE_CONVERT.\n+        * class.c (fixed_type_or_null): Likewise.\n+\n 2008-05-11  Volker Reichelt  <v.reichelt@netcologne.de>\n \n \t* parser.c (cp_parser_omp_clause_reduction): Add missing \"expected\""}, {"sha": "b83ad3a2eef41270954378bd4e533ee340238746", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=63a906f02b620920f146512e2c5572b2ae5314f8", "patch": "@@ -5119,9 +5119,8 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \n       /* Pull out the real argument, disregarding const-correctness.  */\n       targ = arg;\n-      while (TREE_CODE (targ) == NOP_EXPR\n-\t     || TREE_CODE (targ) == NON_LVALUE_EXPR\n-\t     || TREE_CODE (targ) == CONVERT_EXPR)\n+      while (CONVERT_EXPR_P (targ)\n+\t     || TREE_CODE (targ) == NON_LVALUE_EXPR)\n \ttarg = TREE_OPERAND (targ, 0);\n       if (TREE_CODE (targ) == ADDR_EXPR)\n \t{"}, {"sha": "4d786a288c12da68d06f0f1b09e46b91d2c02a31", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=63a906f02b620920f146512e2c5572b2ae5314f8", "patch": "@@ -5411,8 +5411,7 @@ fixed_type_or_null (tree instance, int *nonnull, int *cdtorp)\n \n       return NULL_TREE;\n \n-    case NOP_EXPR:\n-    case CONVERT_EXPR:\n+    CASE_CONVERT:\n       return RECUR (TREE_OPERAND (instance, 0));\n \n     case ADDR_EXPR:"}, {"sha": "55e620a6b542aaae8ee607adde9891ade30d55e0", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=63a906f02b620920f146512e2c5572b2ae5314f8", "patch": "@@ -1747,8 +1747,7 @@ dump_expr (tree t, int flags)\n       dump_expr (TREE_OPERAND (t, 0), flags | TFF_EXPR_IN_PARENS);\n       break;\n \n-    case NOP_EXPR:\n-    case CONVERT_EXPR:\n+    CASE_CONVERT:\n     case VIEW_CONVERT_EXPR:\n       {\n \ttree op = TREE_OPERAND (t, 0);"}, {"sha": "c1fea0c0bedc35eb504e4072749e140fddc69064", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a906f02b620920f146512e2c5572b2ae5314f8/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=63a906f02b620920f146512e2c5572b2ae5314f8", "patch": "@@ -713,7 +713,7 @@ digest_init (tree type, tree init)\n \n       /* Skip any conversions since we'll be outputting the underlying\n \t constant.  */\n-      while (TREE_CODE (*exp) == NOP_EXPR || TREE_CODE (*exp) == CONVERT_EXPR\n+      while (CONVERT_EXPR_P (*exp)\n \t     || TREE_CODE (*exp) == NON_LVALUE_EXPR)\n \texp = &TREE_OPERAND (*exp, 0);\n "}]}