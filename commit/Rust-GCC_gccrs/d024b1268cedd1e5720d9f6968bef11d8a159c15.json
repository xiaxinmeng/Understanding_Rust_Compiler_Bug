{"sha": "d024b1268cedd1e5720d9f6968bef11d8a159c15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAyNGIxMjY4Y2VkZDFlNTcyMGQ5ZjY5NjhiZWYxMWQ4YTE1OWMxNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-04-25T15:12:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-04-25T15:12:34Z"}, "message": "[multiple changes]\n\n2012-04-25  Vincent Celier  <celier@adacore.com>\n\n\t* sem_ch12.adb (Inherit_Context): Compare library units, not\n\tnames of units, when checking if a unit is already in the context.\n\n2012-04-25  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.adb: Reverse_Storage_Order must be propagated to\n\tuntagged derived record types.\n\n2012-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* lib-xref.adb: Adjust position of end label.\n\nFrom-SVN: r186827", "tree": {"sha": "f6ae78dc92a93c3dcc28c325109924304a992559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6ae78dc92a93c3dcc28c325109924304a992559"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d024b1268cedd1e5720d9f6968bef11d8a159c15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d024b1268cedd1e5720d9f6968bef11d8a159c15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d024b1268cedd1e5720d9f6968bef11d8a159c15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d024b1268cedd1e5720d9f6968bef11d8a159c15/comments", "author": null, "committer": null, "parents": [{"sha": "838ff415aed1282e62247bac07e80955d8c85aeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838ff415aed1282e62247bac07e80955d8c85aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/838ff415aed1282e62247bac07e80955d8c85aeb"}], "stats": {"total": 65, "additions": 45, "deletions": 20}, "files": [{"sha": "44f206cbbd40bed52307a324228546af9461d3ba", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d024b1268cedd1e5720d9f6968bef11d8a159c15/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d024b1268cedd1e5720d9f6968bef11d8a159c15/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d024b1268cedd1e5720d9f6968bef11d8a159c15", "patch": "@@ -1,3 +1,17 @@\n+2012-04-25  Vincent Celier  <celier@adacore.com>\n+\n+\t* sem_ch12.adb (Inherit_Context): Compare library units, not\n+\tnames of units, when checking if a unit is already in the context.\n+\n+2012-04-25  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.adb: Reverse_Storage_Order must be propagated to\n+\tuntagged derived record types.\n+\n+2012-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* lib-xref.adb: Adjust position of end label.\n+\n 2012-04-22  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc-interface/utils.c (gnat_write_global_declarations): Do not mark"}, {"sha": "fb46a367e62d2a978076439935cadb7869a9ab65", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d024b1268cedd1e5720d9f6968bef11d8a159c15/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d024b1268cedd1e5720d9f6968bef11d8a159c15/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=d024b1268cedd1e5720d9f6968bef11d8a159c15", "patch": "@@ -1031,10 +1031,14 @@ package body Lib.Xref is\n             Ref := Original_Location (Sloc (Nod));\n             Def := Original_Location (Sloc (Ent));\n \n-            --  If this is an operator symbol, skip the initial\n-            --  quote, for navigation purposes.\n+            --  If this is an operator symbol, skip the initial quote for\n+            --  navigation purposes. This is not done for the end label,\n+            --  where we want the actual position after the closing quote.\n \n-            if Nkind (N) = N_Defining_Operator_Symbol\n+            if Typ = 't' then\n+               null;\n+\n+            elsif Nkind (N) = N_Defining_Operator_Symbol\n               or else Nkind (Nod) = N_Operator_Symbol\n             then\n                Ref := Ref + 1;"}, {"sha": "a5360d4ac5f854de23e170367d0a06985eca13b3", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d024b1268cedd1e5720d9f6968bef11d8a159c15/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d024b1268cedd1e5720d9f6968bef11d8a159c15/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d024b1268cedd1e5720d9f6968bef11d8a159c15", "patch": "@@ -7761,8 +7761,9 @@ package body Sem_Ch12 is\n       Item            : Node_Id;\n       New_I           : Node_Id;\n \n-      Clause : Node_Id;\n-      OK     : Boolean;\n+      Clause   : Node_Id;\n+      OK       : Boolean;\n+      Lib_Unit : Node_Id;\n \n    begin\n       if Nkind (Parent (Gen_Decl)) = N_Compilation_Unit then\n@@ -7784,17 +7785,18 @@ package body Sem_Ch12 is\n          Item := First (Context_Items (Parent (Gen_Decl)));\n          while Present (Item) loop\n             if Nkind (Item) = N_With_Clause then\n+               Lib_Unit := Library_Unit (Item);\n \n-               --  Take care to prevent direct cyclic with's.\n+               --  Take care to prevent direct cyclic with's\n \n-               if Library_Unit (Item) /= Current_Unit then\n+               if Lib_Unit /= Current_Unit then\n                   --  Do not add a unit if it is already in the context\n \n                   Clause := First (Current_Context);\n                   OK := True;\n                   while Present (Clause) loop\n                      if Nkind (Clause) = N_With_Clause and then\n-                       Chars (Name (Clause)) = Chars (Name (Item))\n+                       Library_Unit (Clause) = Lib_Unit\n                      then\n                         OK := False;\n                         exit;"}, {"sha": "f80804d7cf98f3cea45f43ae3901e19580822904", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d024b1268cedd1e5720d9f6968bef11d8a159c15/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d024b1268cedd1e5720d9f6968bef11d8a159c15/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d024b1268cedd1e5720d9f6968bef11d8a159c15", "patch": "@@ -7753,21 +7753,26 @@ package body Sem_Ch3 is\n \n       if Is_Record_Type (Derived_Type) then\n \n-         --  Ekind (Parent_Base) is not necessarily E_Record_Type since\n-         --  Parent_Base can be a private type or private extension.\n+         declare\n+            Parent_Full : Entity_Id;\n+         begin\n+            --  Ekind (Parent_Base) is not necessarily E_Record_Type since\n+            --  Parent_Base can be a private type or private extension. Go\n+            --  to the full view here to get the E_Record_Type specific flags.\n+\n+            if Present (Full_View (Parent_Base)) then\n+               Parent_Full := Full_View (Parent_Base);\n+            else\n+               Parent_Full := Parent_Base;\n+            end if;\n \n-         if Present (Full_View (Parent_Base)) then\n-            Set_OK_To_Reorder_Components\n-              (Derived_Type,\n-               OK_To_Reorder_Components (Full_View (Parent_Base)));\n-            Set_Reverse_Bit_Order\n-              (Derived_Type, Reverse_Bit_Order (Full_View (Parent_Base)));\n-         else\n             Set_OK_To_Reorder_Components\n-              (Derived_Type, OK_To_Reorder_Components (Parent_Base));\n+              (Derived_Type, OK_To_Reorder_Components (Parent_Full));\n             Set_Reverse_Bit_Order\n-              (Derived_Type, Reverse_Bit_Order (Parent_Base));\n-         end if;\n+              (Derived_Type, Reverse_Bit_Order (Parent_Full));\n+            Set_Reverse_Storage_Order\n+              (Derived_Type, Reverse_Storage_Order (Parent_Full));\n+         end;\n       end if;\n \n       --  Direct controlled types do not inherit Finalize_Storage_Only flag"}]}