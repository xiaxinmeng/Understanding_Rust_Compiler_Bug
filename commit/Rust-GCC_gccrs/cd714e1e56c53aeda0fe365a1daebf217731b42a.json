{"sha": "cd714e1e56c53aeda0fe365a1daebf217731b42a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q3MTRlMWU1NmM1M2FlZGEwZmUzNjVhMWRhZWJmMjE3NzMxYjQyYQ==", "commit": {"author": {"name": "Fritz Reese", "email": "fritzoreese@gmail.com", "date": "2016-10-25T15:27:39Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2016-10-25T15:27:39Z"}, "message": "Enable %LOC as an rvalue with -std=legacy.\n\n\tgcc/fortran/\n        * primary.c (gfc_match_rvalue): Match %LOC as LOC with -std=legacy.\n        * gfortran.texi: Document.\n\n\tgcc/testsuite/gfortran.dg/\n\t* dec_loc_rval_1.f90: New test.\n        * dec_loc_rval_2.f90: New test.\n        * dec_loc_rval_3.f90: New test.\n\nFrom-SVN: r241519", "tree": {"sha": "ea11f6a2086413d833a90fb2aec1ec1d5196a654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea11f6a2086413d833a90fb2aec1ec1d5196a654"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd714e1e56c53aeda0fe365a1daebf217731b42a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd714e1e56c53aeda0fe365a1daebf217731b42a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd714e1e56c53aeda0fe365a1daebf217731b42a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd714e1e56c53aeda0fe365a1daebf217731b42a/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90051c26da7abd0999ce0afdd9471e354009b861", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90051c26da7abd0999ce0afdd9471e354009b861", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90051c26da7abd0999ce0afdd9471e354009b861"}], "stats": {"total": 95, "additions": 92, "deletions": 3}, "files": [{"sha": "9bd1d805d59cdacb018f4a4c6defcc8fccdf01cc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cd714e1e56c53aeda0fe365a1daebf217731b42a", "patch": "@@ -1,3 +1,8 @@\n+2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n+\n+        * primary.c (gfc_match_rvalue): Match %LOC as LOC with -std=legacy.\n+        * gfortran.texi: Document.\n+\n 2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n \n \t* decl.c (gfc_match_type): New function."}, {"sha": "e1256bd8824d930f504ca0626de5f6cf0826b942", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=cd714e1e56c53aeda0fe365a1daebf217731b42a", "patch": "@@ -1467,6 +1467,7 @@ compatibility extensions along with those enabled by @option{-std=legacy}.\n * Extended math intrinsics::\n * Form feed as whitespace::\n * TYPE as an alias for PRINT::\n+* %LOC as an rvalue::\n @end menu\n \n @node Old-style kind specifications\n@@ -2537,6 +2538,26 @@ TYPE *, 'hello world'\n PRINT *, 'hello world'\n @end smallexample\n \n+@node %LOC as an rvalue\n+@subsection %LOC as an rvalue\n+@cindex LOC\n+Normally @code{%LOC} is allowed only in parameter lists.  However the intrinsic\n+function @code{LOC} does the same thing, and is usable as the right-hand-side of\n+assignments. For compatibility, GNU Fortran supports the use of @code{%LOC} as\n+an alias for the builtin @code{LOC} with @option{-std=legacy}.  With this\n+feature enabled the following two examples are equivalent:\n+\n+@smallexample\n+integer :: i, l\n+l = %loc(i)\n+call sub(l)\n+@end smallexample\n+\n+@smallexample\n+integer :: i\n+call sub(%loc(i))\n+@end smallexample\n+\n \n @node Extensions not implemented in GNU Fortran\n @section Extensions not implemented in GNU Fortran"}, {"sha": "bcbaeaa63695726cb852348d9d3da1005d5553e1", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=cd714e1e56c53aeda0fe365a1daebf217731b42a", "patch": "@@ -2971,9 +2971,20 @@ gfc_match_rvalue (gfc_expr **result)\n   bool implicit_char;\n   gfc_ref *ref;\n \n-  m = gfc_match_name (name);\n-  if (m != MATCH_YES)\n-    return m;\n+  m = gfc_match (\"%%loc\");\n+  if (m == MATCH_YES)\n+    {\n+      if (!gfc_notify_std (GFC_STD_LEGACY, \"%%LOC() as an rvalue at %C\"))\n+        return MATCH_ERROR;\n+      strncpy (name, \"loc\", 4);\n+    }\n+\n+  else\n+    {\n+      m = gfc_match_name (name);\n+      if (m != MATCH_YES)\n+        return m;\n+    }\n \n   /* Check if the symbol exists.  */\n   if (gfc_find_sym_tree (name, NULL, 1, &symtree))"}, {"sha": "33a99136e59b98526246412f6fb82df1c459852b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd714e1e56c53aeda0fe365a1daebf217731b42a", "patch": "@@ -1,3 +1,9 @@\n+2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n+\n+\t* gfortran.dg/dec_loc_rval_1.f90: New test.\n+\t* gfortran.dg/dec_loc_rval_2.f90: New test.\n+\t* gfortran.dg/dec_loc_rval_3.f90: New test.\n+\n 2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n \n \t* gfortran.dg/dec_type_print.f90: New testcase."}, {"sha": "070b8db1c08d050786dd58774a7c8195587b4014", "filename": "gcc/testsuite/gfortran.dg/dec_loc_rval_1.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_loc_rval_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_loc_rval_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_loc_rval_1.f90?ref=cd714e1e56c53aeda0fe365a1daebf217731b42a", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n+! Test the usage of %loc as an rvalue.\n+!\n+program main\n+implicit none\n+\n+integer :: i, j, k\n+\n+i =  loc(j)\n+k = %loc(j)\n+\n+if (i .ne. k) then\n+  print *, \"bad %loc value\"\n+  call abort()\n+endif\n+\n+end"}, {"sha": "20eeb854e920493718271fcd5da1ff32c5a27c42", "filename": "gcc/testsuite/gfortran.dg/dec_loc_rval_2.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_loc_rval_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_loc_rval_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_loc_rval_2.f90?ref=cd714e1e56c53aeda0fe365a1daebf217731b42a", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! { dg-options \"-std=gnu\" }\n+!\n+! Test warnings for usage of %loc as an rvalue without -std=legacy.\n+!\n+program main\n+implicit none\n+\n+integer, volatile :: i, j, k\n+\n+i =  loc(j)\n+k = %loc(j) ! { dg-warning \"Legacy Extension:\" }\n+\n+end"}, {"sha": "b3441b806eff88c4f621f0172c3a607c5ed03d39", "filename": "gcc/testsuite/gfortran.dg/dec_loc_rval_3.f03", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_loc_rval_3.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd714e1e56c53aeda0fe365a1daebf217731b42a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_loc_rval_3.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_loc_rval_3.f03?ref=cd714e1e56c53aeda0fe365a1daebf217731b42a", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+!\n+! Test errors for usage of %loc as an rvalue with a real standard.\n+!\n+program main\n+implicit none\n+\n+integer, volatile :: i, j, k\n+\n+k = %loc(j) ! { dg-error \"Legacy Extension:\" }\n+\n+end"}]}