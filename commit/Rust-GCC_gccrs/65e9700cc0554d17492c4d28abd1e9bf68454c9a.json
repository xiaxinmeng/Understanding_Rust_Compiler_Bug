{"sha": "65e9700cc0554d17492c4d28abd1e9bf68454c9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVlOTcwMGNjMDU1NGQxNzQ5MmM0ZDI4YWJkMWU5YmY2ODQ1NGM5YQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-11-02T16:52:55Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-11-02T16:52:55Z"}, "message": "re PR java/17265 (Libjava doesn't build)\n\n2004-11-02  Bryce McKinlay  <mckinlay@redhat.com>\n\n\tPR java/17265\n\t* class.c: Reinstate 2004-08-18 patch.\n\t(make_local_function_alias): Don't create an alias for extern (native)\n\tfunctions.\n\nFrom-SVN: r89993", "tree": {"sha": "2665e34b9a62bc5a8c33ebdfd395fabc75b23074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2665e34b9a62bc5a8c33ebdfd395fabc75b23074"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65e9700cc0554d17492c4d28abd1e9bf68454c9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e9700cc0554d17492c4d28abd1e9bf68454c9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e9700cc0554d17492c4d28abd1e9bf68454c9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e9700cc0554d17492c4d28abd1e9bf68454c9a/comments", "author": null, "committer": null, "parents": [{"sha": "571cfa750e5227a8395594d0f30b2244e564ea69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/571cfa750e5227a8395594d0f30b2244e564ea69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/571cfa750e5227a8395594d0f30b2244e564ea69"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "a0821b0a8213abb859d534644cd8553eecb0ec79", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e9700cc0554d17492c4d28abd1e9bf68454c9a/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e9700cc0554d17492c4d28abd1e9bf68454c9a/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=65e9700cc0554d17492c4d28abd1e9bf68454c9a", "patch": "@@ -1,3 +1,10 @@\n+2004-11-02  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\tPR java/17265\n+\t* class.c: Reinstate 2004-08-18 patch. \n+\t(make_local_function_alias): Don't create an alias for extern (native)\n+\tfunctions.\n+\n 2004-10-22  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR java/17265"}, {"sha": "6e6bded12d8526551981760b8876e344759281a8", "filename": "gcc/java/class.c", "status": "modified", "additions": 49, "deletions": 1, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e9700cc0554d17492c4d28abd1e9bf68454c9a/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e9700cc0554d17492c4d28abd1e9bf68454c9a/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=65e9700cc0554d17492c4d28abd1e9bf68454c9a", "patch": "@@ -1198,6 +1198,53 @@ get_access_flags_from_decl (tree decl)\n   abort ();\n }\n \n+static GTY (()) int alias_labelno = 0;\n+\n+/* Create a private alias for METHOD. Using this alias instead of the method\n+   decl ensures that ncode entries in the method table point to the real function \n+   at runtime, not a PLT entry.  */\n+\n+static tree\n+make_local_function_alias (tree method)\n+{\n+#ifdef ASM_OUTPUT_DEF\n+  tree alias;\n+  \n+  const char *method_name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (method));\n+  char *name = alloca (strlen (method_name) + 2);\n+  char *buf = alloca (strlen (method_name) + 128);\n+\n+  /* Only create aliases for local functions.  */\n+  if (DECL_EXTERNAL (method))\n+    return method;\n+    \n+  /* Prefix method_name with 'L' for the alias label.  */\n+  *name = 'L';\n+  strcpy (name + 1, method_name);\n+\n+  ASM_GENERATE_INTERNAL_LABEL (buf, name, alias_labelno++);  \n+  alias = build_decl (FUNCTION_DECL, get_identifier (buf),\n+\t\t      TREE_TYPE (method));\n+  DECL_CONTEXT (alias) = NULL;\n+  TREE_READONLY (alias) = TREE_READONLY (method);\n+  TREE_THIS_VOLATILE (alias) = TREE_THIS_VOLATILE (method);\n+  TREE_PUBLIC (alias) = 0;\n+  DECL_EXTERNAL (alias) = 0;\n+  DECL_ARTIFICIAL (alias) = 1;\n+  DECL_INLINE (alias) = 0;\n+  DECL_INITIAL (alias) = error_mark_node;\n+  TREE_ADDRESSABLE (alias) = 1;\n+  TREE_USED (alias) = 1;\n+  SET_DECL_ASSEMBLER_NAME (alias, DECL_NAME (alias));\n+  TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (alias)) = 1;\n+  if (!flag_syntax_only)\n+    assemble_alias (alias, DECL_ASSEMBLER_NAME (method));\n+  return alias;\n+#else\n+  return method;\n+#endif\n+}\n+\n /** Make reflection data (_Jv_Field) for field FDECL. */\n \n static tree\n@@ -1269,7 +1316,8 @@ make_method_value (tree mdecl)\n \n   code = null_pointer_node;\n   if (DECL_RTL_SET_P (mdecl))\n-    code = build1 (ADDR_EXPR, nativecode_ptr_type_node, mdecl);\n+    code = build1 (ADDR_EXPR, nativecode_ptr_type_node, \n+\t\t   make_local_function_alias (mdecl));\n   START_RECORD_CONSTRUCTOR (minit, method_type_node);\n   PUSH_FIELD_VALUE (minit, \"name\",\n \t\t    build_utf8_ref (DECL_CONSTRUCTOR_P (mdecl) ?"}]}