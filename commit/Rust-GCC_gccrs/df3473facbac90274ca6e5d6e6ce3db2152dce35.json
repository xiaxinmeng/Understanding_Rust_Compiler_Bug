{"sha": "df3473facbac90274ca6e5d6e6ce3db2152dce35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYzNDczZmFjYmFjOTAyNzRjYTZlNWQ2ZTZjZTNkYjIxNTJkY2UzNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-04-03T09:08:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-04-03T09:08:00Z"}, "message": "re PR c++/30847 (ICE with invalid statement expression)\n\n\tPR c++/30847\n\t* typeck.c (build_modify_expr): For COND_EXPR on LHS, if RHS has void\n\ttype issue error and return early.\n\n\t* g++.dg/parse/cond3.C: New test.\n\nFrom-SVN: r123456", "tree": {"sha": "2278f06f550aeb7aeabbae2ccf061eabc975882e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2278f06f550aeb7aeabbae2ccf061eabc975882e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df3473facbac90274ca6e5d6e6ce3db2152dce35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df3473facbac90274ca6e5d6e6ce3db2152dce35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df3473facbac90274ca6e5d6e6ce3db2152dce35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df3473facbac90274ca6e5d6e6ce3db2152dce35/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a9430a8312d9f5a3795747773796b21d3bfe526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a9430a8312d9f5a3795747773796b21d3bfe526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a9430a8312d9f5a3795747773796b21d3bfe526"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "192d7e8adfbb9b2f2405a8ab476b3eba4095619b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df3473facbac90274ca6e5d6e6ce3db2152dce35/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df3473facbac90274ca6e5d6e6ce3db2152dce35/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=df3473facbac90274ca6e5d6e6ce3db2152dce35", "patch": "@@ -1,3 +1,9 @@\n+2007-04-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/30847\n+\t* typeck.c (build_modify_expr): For COND_EXPR on LHS, if RHS has void\n+\ttype issue error and return early.\n+\n 2007-03-30  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/31187"}, {"sha": "f3358c79c6c1d8302bf2ad05211f3438a9acdc9a", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df3473facbac90274ca6e5d6e6ce3db2152dce35/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df3473facbac90274ca6e5d6e6ce3db2152dce35/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=df3473facbac90274ca6e5d6e6ce3db2152dce35", "patch": "@@ -5702,6 +5702,12 @@ build_modify_expr (tree lhs, enum tree_code modifycode, tree rhs)\n \ttree cond;\n \ttree preeval = NULL_TREE;\n \n+\tif (VOID_TYPE_P (TREE_TYPE (rhs)))\n+\t  {\n+\t    error (\"void value not ignored as it ought to be\");\n+\t    return error_mark_node;\n+\t  }\n+\n \trhs = stabilize_expr (rhs, &preeval);\n \n \t/* Check this here to avoid odd errors when trying to convert"}, {"sha": "74691d270a6608bab5786d003f5df200ef43dc24", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df3473facbac90274ca6e5d6e6ce3db2152dce35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df3473facbac90274ca6e5d6e6ce3db2152dce35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df3473facbac90274ca6e5d6e6ce3db2152dce35", "patch": "@@ -1,5 +1,8 @@\n 2007-04-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/30847\n+\t* g++.dg/parse/cond3.C: New test.\n+\n \tPR middle-end/30704\n \t* gcc.c-torture/execute/ieee/pr30704.c: New test.\n "}, {"sha": "96d9c1e3b5f6246fcfa5105135e2a696350d28b4", "filename": "gcc/testsuite/g++.dg/parse/cond3.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df3473facbac90274ca6e5d6e6ce3db2152dce35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcond3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df3473facbac90274ca6e5d6e6ce3db2152dce35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcond3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcond3.C?ref=df3473facbac90274ca6e5d6e6ce3db2152dce35", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/30847\n+// { dg-do compile }\n+// { dg-options \"\" }\n+\n+int j, k, l;\n+extern void baz ();\n+\n+void\n+foo (int i)\n+{\n+  (i ? j : k) = ({ l++; (void) l; });\t// { dg-error \"void value not ignored\" }\n+  (i ? j : k) += ({ l++; (void) l; });\t// { dg-error \"void value not ignored\" }\n+  (i ? j : k) = baz ();\t\t\t// { dg-error \"void value not ignored\" }\n+  (i ? j : k) *= baz ();\t\t// { dg-error \"void value not ignored\" }\n+}"}]}