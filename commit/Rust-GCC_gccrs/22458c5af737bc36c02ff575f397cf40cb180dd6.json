{"sha": "22458c5af737bc36c02ff575f397cf40cb180dd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI0NThjNWFmNzM3YmMzNmMwMmZmNTc1ZjM5N2NmNDBjYjE4MGRkNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-11-06T13:49:30Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-11-06T13:49:30Z"}, "message": "l_fma_float_?.c: Update.\n\n\n\t* gcc.target/i386/l_fma_float_?.c: Update.\n\t* gcc.target/i386/l_fma_double_?.c: Update.\n\n\t* tree-vect-loop-manip.c (vect_do_peeling_for_loop_bound,\n\tvect_do_peeling_for_alignment): Fix loop bound computation.\n\t* tree-vect-loop.c (vect_transform_loop): Maintain loop bounds.\n\nFrom-SVN: r193241", "tree": {"sha": "44114c90b1d256643a9aab059bc90c1f26b5f113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44114c90b1d256643a9aab059bc90c1f26b5f113"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22458c5af737bc36c02ff575f397cf40cb180dd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22458c5af737bc36c02ff575f397cf40cb180dd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22458c5af737bc36c02ff575f397cf40cb180dd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22458c5af737bc36c02ff575f397cf40cb180dd6/comments", "author": null, "committer": null, "parents": [{"sha": "c8fef899e88a4978b1391d2cae4cd240c644afbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8fef899e88a4978b1391d2cae4cd240c644afbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8fef899e88a4978b1391d2cae4cd240c644afbe"}], "stats": {"total": 181, "additions": 113, "deletions": 68}, "files": [{"sha": "ad525d3d2d65cc33987eafc47161386d9de1fac6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -1,3 +1,9 @@\n+2012-11-06  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-vect-loop-manip.c (vect_do_peeling_for_loop_bound,\n+\tvect_do_peeling_for_alignment): Fix loop bound computation.\n+\t* tree-vect-loop.c (vect_transform_loop): Maintain loop bounds.\n+\n 2012-11-06  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/54089"}, {"sha": "62f9f0c2783a35ca7ffc6b2e832c97e8c5a5bf01", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -1,3 +1,8 @@\n+2012-11-06  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.target/i386/l_fma_float_?.c: Update.\n+\t* gcc.target/i386/l_fma_double_?.c: Update.\n+\n 2012-11-06  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/54089"}, {"sha": "270659359f497c0d4e3e3a46385ed0bd9e1896b0", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_1.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_1.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -16,11 +16,11 @@\n /* { dg-final { scan-assembler-times \"vfnmadd231pd\" 4  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132pd\" 4  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub231pd\" 4  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd213sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub213sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd213sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub213sd\" 20  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd213sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub213sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd213sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub213sd\" 16  } } */"}, {"sha": "e8933e25d534d67666ea6aa2a074c6b707591b8e", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_2.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -12,7 +12,7 @@\n /* { dg-final { scan-assembler-times \"vfmsub132pd\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmadd132pd\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132pd\" 8  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 40  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 32  } } */"}, {"sha": "00c756775c81ea1c30b0e9a30fea2df5fccb43e1", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_3.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_3.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -16,11 +16,11 @@\n /* { dg-final { scan-assembler-times \"vfnmadd231pd\" 4  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132pd\" 4  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub231pd\" 4  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd213sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub213sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd213sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 20  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub213sd\" 20  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd213sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub213sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd213sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 16  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub213sd\" 16  } } */"}, {"sha": "09970bdb5c64d469b590b4df7d164180fc5d8710", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_4.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -12,7 +12,7 @@\n /* { dg-final { scan-assembler-times \"vfmsub132pd\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmadd132pd\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132pd\" 8  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 40  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 32  } } */"}, {"sha": "2a1428e4d9c9c0d09a2e4257a15215ed39c41b95", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_5.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_5.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -12,7 +12,7 @@\n /* { dg-final { scan-assembler-times \"vfmsub132pd\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmadd132pd\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132pd\" 8  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 40  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 32  } } */"}, {"sha": "092032aa0b5bcd0c604e72f203bcc5b82beb2f51", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_6.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_6.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -12,7 +12,7 @@\n /* { dg-final { scan-assembler-times \"vfmsub132pd\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmadd132pd\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132pd\" 8  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132sd\" 40 } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 40  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 40  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 32 } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 32  } } */"}, {"sha": "4bcd81de9da4e234d91f43246100395754b7d324", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_1.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_1.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -16,11 +16,11 @@\n /* { dg-final { scan-assembler-times \"vfnmadd231ps\" 4  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132ps\" 4  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub231ps\" 4  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd213ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub213ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd213ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub213ss\" 36  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd213ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub213ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd213ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub213ss\" 32  } } */"}, {"sha": "34b7fcb6dd5b89f0320ac756bbae1ce62d0bd1e5", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_2.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -12,7 +12,7 @@\n /* { dg-final { scan-assembler-times \"vfmsub132ps\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmadd132ps\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132ps\" 8  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 72  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 64  } } */"}, {"sha": "6ff2c6eacd54ea9048e750a7f5b60b74dcd05039", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_3.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_3.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -16,11 +16,11 @@\n /* { dg-final { scan-assembler-times \"vfnmadd231ps\" 4  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132ps\" 4  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub231ps\" 4  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd213ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub213ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd213ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 36  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub213ss\" 36  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd213ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub213ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd213ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 32  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub213ss\" 32  } } */"}, {"sha": "39548bfa76b74f6e83e8139e92b535ad727d9a24", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_4.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -12,7 +12,7 @@\n /* { dg-final { scan-assembler-times \"vfmsub132ps\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmadd132ps\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132ps\" 8  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 72  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 64  } } */"}, {"sha": "83d795125921b5cdc2a8216c7ed140fca3d3aaf0", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_5.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_5.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -12,7 +12,7 @@\n /* { dg-final { scan-assembler-times \"vfmsub132ps\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmadd132ps\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132ps\" 8  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 72  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 64  } } */"}, {"sha": "1eefc817c3681325d53266c1d62c46962820fe06", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_6.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_6.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -12,7 +12,7 @@\n /* { dg-final { scan-assembler-times \"vfmsub132ps\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmadd132ps\" 8  } } */\n /* { dg-final { scan-assembler-times \"vfnmsub132ps\" 8  } } */\n-/* { dg-final { scan-assembler-times \"vfmadd132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfmsub132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 72  } } */\n-/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 72  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 64  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 64  } } */"}, {"sha": "58ded23399e16f9fe3b1cbc01b0221eff4a2a099", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -1954,9 +1954,16 @@ vect_do_peeling_for_loop_bound (loop_vec_info loop_vinfo, tree *ratio,\n      by ratio_mult_vf_name steps.  */\n   vect_update_ivs_after_vectorizer (loop_vinfo, ratio_mult_vf_name, update_e);\n \n-  max_iter = LOOP_VINFO_VECT_FACTOR (loop_vinfo) - 1;\n+  /* For vectorization factor N, we need to copy last N-1 values in epilogue\n+     and this means N-2 loopback edge executions.\n+\n+     PEELING_FOR_GAPS works by subtracting last iteration and thus the epilogue\n+     will execute at least LOOP_VINFO_VECT_FACTOR times.  */\n+  max_iter = (LOOP_VINFO_PEELING_FOR_GAPS (loop_vinfo)\n+\t      ? LOOP_VINFO_VECT_FACTOR (loop_vinfo) * 2\n+\t      : LOOP_VINFO_VECT_FACTOR (loop_vinfo)) - 2;\n   if (check_profitability)\n-    max_iter = MAX (max_iter, (int) th);\n+    max_iter = MAX (max_iter, (int) th - 1);\n   record_niter_bound (new_loop, double_int::from_shwi (max_iter), false, true);\n   dump_printf (MSG_OPTIMIZED_LOCATIONS,\n                \"Setting upper bound of nb iterations for epilogue \"\n@@ -2186,9 +2193,11 @@ vect_do_peeling_for_alignment (loop_vec_info loop_vinfo,\n #ifdef ENABLE_CHECKING\n   slpeel_verify_cfg_after_peeling (new_loop, loop);\n #endif\n-  max_iter = LOOP_VINFO_VECT_FACTOR (loop_vinfo) - 1;\n+  /* For vectorization factor N, we need to copy at most N-1 values \n+     for alignment and this means N-2 loopback edge executions.  */\n+  max_iter = LOOP_VINFO_VECT_FACTOR (loop_vinfo) - 2;\n   if (check_profitability)\n-    max_iter = MAX (max_iter, (int) th);\n+    max_iter = MAX (max_iter, (int) th - 1);\n   record_niter_bound (new_loop, double_int::from_shwi (max_iter), false, true);\n   dump_printf (MSG_OPTIMIZED_LOCATIONS,\n                \"Setting upper bound of nb iterations for prologue \""}, {"sha": "5e99857efd6f40bbb66c0516da07a9b7b01f6bc3", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22458c5af737bc36c02ff575f397cf40cb180dd6/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=22458c5af737bc36c02ff575f397cf40cb180dd6", "patch": "@@ -5448,10 +5448,16 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n   bool transform_pattern_stmt = false;\n   bool check_profitability = false;\n   int th;\n+  /* Record number of iterations before we started tampering with the profile. */\n+  gcov_type expected_iterations = expected_loop_iterations_unbounded (loop);\n \n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location, \"=== vec_transform_loop ===\");\n \n+  /* If profile is inprecise, we have chance to fix it up.  */\n+  if (LOOP_VINFO_NITERS_KNOWN_P (loop_vinfo))\n+    expected_iterations = LOOP_VINFO_INT_NITERS (loop_vinfo);\n+\n   /* Use the more conservative vectorization threshold.  If the number\n      of iterations is constant assume the cost check has been performed\n      by our caller.  If the threshold makes all loops profitable that\n@@ -5735,6 +5741,25 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n \n   slpeel_make_loop_iterate_ntimes (loop, ratio);\n \n+  /* Reduce loop iterations by the vectorization factor.  */\n+  scale_loop_profile (loop, RDIV (REG_BR_PROB_BASE , vectorization_factor),\n+\t\t      expected_iterations / vectorization_factor);\n+  loop->nb_iterations_upper_bound\n+    = loop->nb_iterations_upper_bound.udiv (double_int::from_uhwi (vectorization_factor),\n+\t\t\t\t\t    FLOOR_DIV_EXPR);\n+  if (LOOP_VINFO_PEELING_FOR_GAPS (loop_vinfo)\n+      && loop->nb_iterations_upper_bound != double_int_zero)\n+    loop->nb_iterations_upper_bound = loop->nb_iterations_upper_bound - double_int_one;\n+  if (loop->any_estimate)\n+    {\n+      loop->nb_iterations_estimate\n+        = loop->nb_iterations_estimate.udiv (double_int::from_uhwi (vectorization_factor),\n+\t\t\t\t\t     FLOOR_DIV_EXPR);\n+       if (LOOP_VINFO_PEELING_FOR_GAPS (loop_vinfo)\n+\t   && loop->nb_iterations_estimate != double_int_zero)\n+\t loop->nb_iterations_estimate = loop->nb_iterations_estimate - double_int_one;\n+    }\n+\n   /* The memory tags and pointers in vectorized statements need to\n      have their SSA forms updated.  FIXME, why can't this be delayed\n      until all the loops have been transformed?  */"}]}