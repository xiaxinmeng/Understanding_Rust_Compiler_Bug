{"sha": "5a58e967b526eba3d9b850cd7bc76dcc580bf708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1OGU5NjdiNTI2ZWJhM2Q5Yjg1MGNkN2JjNzZkY2M1ODBiZjcwOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-04-18T03:32:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-04-18T03:32:24Z"}, "message": "PR c++/90047 - ICE with enable_if alias template.\n\nIn order to make alias templates useful for SFINAE we instantiate them under\nthe prevailing 'complain' argument, so an error encountered while\ninstantiating during SFINAE context is silent.  The problem in this PR comes\nwhen we later look up the erroneous instantiation and don't give an error at\nthat point.  Fixed by not adding an erroneous instantiation to the hash\ntable, so we instantiate it again when needed and get the error.  This\nrequired changes to a number of tests, which previously said \"substitution\nfailed:\" with no explanation of what the failure was; now we properly\nexplain.\n\n\t* pt.c (tsubst_decl) [TYPE_DECL]: Don't put an erroneous decl in the\n\thash table when we're in SFINAE context.\n\nFrom-SVN: r270433", "tree": {"sha": "844ecad256d70dffae00df101a967a92775604d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/844ecad256d70dffae00df101a967a92775604d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a58e967b526eba3d9b850cd7bc76dcc580bf708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a58e967b526eba3d9b850cd7bc76dcc580bf708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a58e967b526eba3d9b850cd7bc76dcc580bf708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a58e967b526eba3d9b850cd7bc76dcc580bf708/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19caab83ca8b30a1a37ec968aaea8086b096d113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19caab83ca8b30a1a37ec968aaea8086b096d113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19caab83ca8b30a1a37ec968aaea8086b096d113"}], "stats": {"total": 97, "additions": 96, "deletions": 1}, "files": [{"sha": "bfaf355ebb709b1f8e0ebbec9ec10a078f60ba5e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -1,3 +1,9 @@\n+2019-04-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/90047 - ICE with enable_if alias template.\n+\t* pt.c (tsubst_decl) [TYPE_DECL]: Don't put an erroneous decl in the\n+\thash table when we're in SFINAE context.\n+\n 2019-04-17  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/90124 - bogus error with incomplete type in decltype."}, {"sha": "3a11eaa763009d754af71bfb65c659376faf0650", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -13948,7 +13948,8 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \n \t    DECL_TEMPLATE_INFO (r) = build_template_info (tmpl, argvec);\n \t    SET_DECL_IMPLICIT_INSTANTIATION (r);\n-\t    register_specialization (r, gen_tmpl, argvec, false, hash);\n+\t    if (!error_operand_p (r) || (complain & tf_error))\n+\t      register_specialization (r, gen_tmpl, argvec, false, hash);\n \t  }\n \telse\n \t  {"}, {"sha": "55961ccd1864195a6d8f39010bdff139d5d0ba50", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-67.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-67.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-67.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-67.C?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -0,0 +1,30 @@\n+// PR c++/90047\n+// { dg-do compile { target c++11 } }\n+\n+template <int a> struct b { static constexpr int c = a; };\n+template <typename> struct aa;\n+template <typename...> struct d;\n+template <typename e, typename f, typename g, typename... h>\n+struct d<e, f, g, h...> : aa<e>::i {};\n+template <typename> struct j;\n+template <typename k, long l> struct j<k[l]> : b<true> {};\n+struct m {\n+  typedef b<0> i;\n+};\n+template <typename> struct n : m::i {};\n+template <bool> struct o;\n+template <typename p> struct aa { typedef p i; };\n+template <bool ab> using ac = typename o<ab>::i; // { dg-error \"incomplete\" }\n+class q {\n+  template <typename k, typename> using ad = ac<d<n<k>, int, int>::c>;\n+  template <typename k, typename = ad<k, void>> q(k &);\n+};\n+template <typename r> struct s {\n+  s(r) { t; }\n+  template <ac<!j<r>::c> *> void t();\n+};\n+class I {\n+  friend char operator<<(char p1, I p2) { return p1 << p2; }\n+  q ag;\n+};\n+int main() { s<char[10]> a = (char *)\"\"; }"}, {"sha": "90afbe4f19010095873cdc6f7021d35d7d77fb43", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb43.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb43.C?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -42,3 +42,5 @@ int main()\n   sort( a.begin(), a.end(),\n \tpointer_to_binary_function<const Expr<int>, const Expr<int>, bool>(compare<>) );\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "fc64e5a4e619f4e2d5fc1fdbd3e4262a0b3cebac", "filename": "libstdc++-v3/testsuite/20_util/duration/arithmetic/dr3050.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fdr3050.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fdr3050.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fdr3050.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -28,3 +28,5 @@ void test01(std::chrono::seconds s, X x)\n   s / x; // { dg-error \"no match\" }\n   s % x; // { dg-error \"no match\" }\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "821cc17413d0a71f2d0b0d90ff8e7a9378128c65", "filename": "libstdc++-v3/testsuite/20_util/from_chars/1_c++20_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffrom_chars%2F1_c%2B%2B20_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffrom_chars%2F1_c%2B%2B20_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffrom_chars%2F1_c%2B%2B20_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -36,3 +36,5 @@ test01(const char* first, const char* last)\n   std::from_chars(first, last, c32); // { dg-error \"no matching\" }\n   std::from_chars(first, last, c32, 10); // { dg-error \"no matching\" }\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "bc52628218ac04e775c18d3e8751e0f7fe9e417d", "filename": "libstdc++-v3/testsuite/20_util/from_chars/1_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffrom_chars%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffrom_chars%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffrom_chars%2F1_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -36,3 +36,5 @@ test01(const char* first, const char* last)\n   std::from_chars(first, last, c32); // { dg-error \"no matching\" }\n   std::from_chars(first, last, c32, 10); // { dg-error \"no matching\" }\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "9c80c77c96ecb967252e900b98c3fdb555cd7ffd", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/auto_ptr_neg.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -47,3 +47,4 @@ main()\n }\n \n // { dg-prune-output \"cannot convert\" }\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "181850f256e81f033b2b4498709f295233b20839", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/shared_ptr_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fshared_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fshared_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fshared_ptr_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -35,3 +35,5 @@ test01()\n   std::shared_ptr<B> b;\n   a = b;                      // { dg-error \"no match\" }\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "a003e17bc6d3ef008bb6b10ee27be7c9f620cd1d", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/unique_ptr_neg.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -43,3 +43,4 @@ main()\n   return 0;\n }\n // { dg-prune-output \"initializing argument\" }\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "d125eda5883969ed972e13d357450f55954c9e65", "filename": "libstdc++-v3/testsuite/20_util/to_chars/1_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2F1_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -33,3 +33,5 @@ test01(char* first, char* last)\n   std::to_chars(first, last, U'\\x1'); // { dg-error \"no matching\" }\n   std::to_chars(first, last, U'\\x1', 10); // { dg-error \"no matching\" }\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "ef14d9153a769997135ca1211e83928d283081e2", "filename": "libstdc++-v3/testsuite/20_util/tuple/element_access/get_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -59,3 +59,5 @@ test03()\n   std::get<6>(const_cast<const test_type&>(t));\t// { dg-error \"no match\" }\n   std::get<6>(static_cast<test_type&&>(t));\t// { dg-error \"no match\" }\n }\n+\n+// { dg-prune-output \"no type named .type\" }"}, {"sha": "f6e2ea09b5e7515cca0d921f090493518f35c24b", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/ptr_deleter_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fptr_deleter_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fptr_deleter_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fptr_deleter_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -51,3 +51,5 @@ main()\n   test02();\n   return 0;\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "745dea474d68bab07323e3bfd33c7cd63b4ec6aa", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/modifiers/reset_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -55,3 +55,5 @@ test02()\n   std::unique_ptr<const volatile A[]> cvA3;\n   cvA3.reset(p); // { dg-error \"no matching function\" }\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "0be1e96510363cbb9254f1fb3553aa6bec9a3342", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -32,3 +32,5 @@ void f()\n   std::deque<A> d;\n   d.assign(10, 1);\t\t// { dg-error \"no match|here\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "d99bd63abb53cb1d152ed226032d3ceeb046b845", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -26,3 +26,5 @@ void f()\n {\n   std::deque<std::deque<int> > d(10, 1); // { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "9962bbfa225e5863fcbbe1075c7539e499fd2eb1", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -27,3 +27,5 @@ void f()\n {\n   std::deque<std::deque<std::pair<char, char> > > d('a', 'b'); // { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "8051196011bad6fa58c8af37722808185e475be0", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -32,3 +32,5 @@ void f()\n   std::deque<A> d;\n   d.insert(d.begin(), 10, 1); // { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "e5b680e5bdf00a3ec7456a760d58f5440ee41b05", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -30,3 +30,5 @@ void f()\n   test_type l;\n   l.assign(10, 1); // { dg-error \"no matching\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "e0147fe42a317b68f685ec2ad8e1704e978c0dd9", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -24,3 +24,5 @@ void f()\n   typedef std::forward_list<std::forward_list<int> > test_type;\n   test_type l(10, 1); // { dg-error \"no matching\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "9a1a5ad6a0acba205495be1b77d959d35a04150f", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -25,3 +25,5 @@ void f()\n   typedef std::forward_list<std::forward_list<std::pair<char, char> > > test_type;\n   test_type l('a', 'b'); // { dg-error \"no matching\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "0a48debdec340b0ff13416708ca55bfe3e82a444", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -30,3 +30,5 @@ void f()\n   test_type l;\n   l.insert_after(l.begin(), 10, 1); // { dg-error \"no matching\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "a3da00b03e910caf194e5b0a2dc04ec7031a09e9", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -33,3 +33,5 @@ void f()\n   list_type l;\n   l.assign(10, 1);\t\t// { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "fc8d48fb934d95b2b9c6d9a823fa57631b51715b", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -27,3 +27,5 @@ void f()\n   typedef std::list<std::list<int> > list_type;\n   list_type l(10, 1);\t\t// { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "0fccc43192f20a85f5b5fd19911535bde3935e39", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -28,3 +28,5 @@ void f()\n   typedef std::list<std::list<std::pair<char, char> > > list_type;\n   list_type l('a', 'b');\t// { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "86a1b3c53a012977ddad4e951ee2985198109b3f", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -33,3 +33,5 @@ void f()\n   list_type l;\n   l.insert(l.begin(), 10, 1);\t// { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "ae825128c58bfb5390e81323ca80892f5178f213", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -32,3 +32,5 @@ void f()\n   std::vector<A> v;\n   v.assign(10, 1);\t\t// { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "2794cae093548e6bb42842ebdf6c9906df4c62e7", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -26,3 +26,5 @@ void f()\n {\n   std::vector<std::vector<int> > v(10, 1); // { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "f8fe1d6618e84067b4814a79310da81f78f8f89b", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -27,3 +27,5 @@ void f()\n {\n   std::vector<std::vector<std::pair<char, char> > > v('a', 'b'); // { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "55fcc00bc517cd0127a088bb18353a13767d3e15", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -32,3 +32,5 @@ void f()\n   std::vector<A> v;\n   v.insert(v.begin(), 10, 1);\t// { dg-error \"here|no match\" }\n }\n+\n+// { dg-prune-output \"iterator_traits\" }"}, {"sha": "89f7fc9bb12be712e1d93e90eddf3528372d5e71", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/copy_ctor_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fcopy_ctor_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fcopy_ctor_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fcopy_ctor_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -50,3 +50,5 @@ main()\n   test02();\n   return 0;\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "2fb5b086c52290fa6469d428c7d1dc9732d57cfc", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/pointer_ctor_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fpointer_ctor_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fpointer_ctor_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fpointer_ctor_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -49,3 +49,5 @@ test03()\n   B * const b = nullptr;\n   std::experimental::shared_ptr<A[]> p(b); // { dg-error \"no match\" }\n }\n+\n+// { dg-prune-output \"enable_if\" }"}, {"sha": "4ecd702722451563f94fdfd83169ca0cc8e1d1e3", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/modifiers/reset_neg.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fmodifiers%2Freset_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a58e967b526eba3d9b850cd7bc76dcc580bf708/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fmodifiers%2Freset_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fmodifiers%2Freset_neg.cc?ref=5a58e967b526eba3d9b850cd7bc76dcc580bf708", "patch": "@@ -43,3 +43,5 @@ test01()\n   p1.reset(new constA[5]);      // { dg-error \"no matching function\" }\n   p1.reset(new constA[5], D()); // { dg-error \"no matching function\" }\n }\n+\n+// { dg-prune-output \"enable_if\" }"}]}