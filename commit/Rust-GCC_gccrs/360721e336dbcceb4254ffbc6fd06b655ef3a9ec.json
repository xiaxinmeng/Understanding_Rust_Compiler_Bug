{"sha": "360721e336dbcceb4254ffbc6fd06b655ef3a9ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYwNzIxZTMzNmRiY2NlYjQyNTRmZmJjNmZkMDZiNjU1ZWYzYTllYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-05-07T20:36:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-05-07T20:36:40Z"}, "message": "stl_algobase.h: Do not include <cstring>.\n\n2007-05-07  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_algobase.h: Do not include <cstring>.\n\t(copy(const _Tp*, const _Tp*, _Tp*), __copy_b(const _Tp*, const _Tp*,\n\t_Tp*)): Use __builtin_memmove.\n\t(__fill_aux): Use __builtin_memset.\n\t(equal(const _Tp*, const _Tp*, const _Tp*),\n\tlexicographical_compare(const unsigned char*, const unsigned char*,\n\tconst unsigned char*, const unsigned char*)): Use __builtin_memcmp.\n\t*  include/bits/valarray_array.h: Do not include <cstring>.\n\t(_Array_default_ctor<, true>::_S_do_it): Use __builtin_memset.\n\t(_Array_copy_ctor<, true>::_S_do_it, _Array_copier<, true>::_S_do_it):\n\tUse __builtin_memcpy.\n\t* include/ext/algorithm\n\t(__lexicographical_compare_3way(const unsigned char*,\n\tconst unsigned char*, const unsigned char*, const unsigned char*)):\n\tUse __builtin_memcmp.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_1_neg.cc: Adjust dg-error line number.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\nFrom-SVN: r124511", "tree": {"sha": "2485cb33bf88a0ca3266d40e3bd3c86595184e4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2485cb33bf88a0ca3266d40e3bd3c86595184e4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/360721e336dbcceb4254ffbc6fd06b655ef3a9ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360721e336dbcceb4254ffbc6fd06b655ef3a9ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/360721e336dbcceb4254ffbc6fd06b655ef3a9ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/comments", "author": null, "committer": null, "parents": [{"sha": "25a5e75613af9aac60b3c5b6856d6b6819b1ccae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25a5e75613af9aac60b3c5b6856d6b6819b1ccae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25a5e75613af9aac60b3c5b6856d6b6819b1ccae"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "57c7c83744d87adb5d7c3c7b20b460d893fa26fd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=360721e336dbcceb4254ffbc6fd06b655ef3a9ec", "patch": "@@ -1,3 +1,25 @@\n+2007-05-07  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_algobase.h: Do not include <cstring>.\n+\t(copy(const _Tp*, const _Tp*, _Tp*), __copy_b(const _Tp*, const _Tp*,\n+\t_Tp*)): Use __builtin_memmove.\n+\t(__fill_aux): Use __builtin_memset.\n+\t(equal(const _Tp*, const _Tp*, const _Tp*),\n+\tlexicographical_compare(const unsigned char*, const unsigned char*,\n+\tconst unsigned char*, const unsigned char*)): Use __builtin_memcmp.\n+\t*  include/bits/valarray_array.h: Do not include <cstring>.\n+\t(_Array_default_ctor<, true>::_S_do_it): Use __builtin_memset.\n+\t(_Array_copy_ctor<, true>::_S_do_it, _Array_copier<, true>::_S_do_it):\n+\tUse __builtin_memcpy.\n+\t* include/ext/algorithm\n+\t(__lexicographical_compare_3way(const unsigned char*,\n+\tconst unsigned char*, const unsigned char*, const unsigned char*)):\n+\tUse __builtin_memcmp.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_1_neg.cc: Adjust dg-error line number.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\n 2007-05-07  Mark Mitchell  <mark@codesourcery.com>\n \n \t* testsuite/22_locale/num_put/put/char/14220.cc: XFAIL on Solaris"}, {"sha": "caf219d1fbb85c435c08ab92a3d86dcdd61cbc0f", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=360721e336dbcceb4254ffbc6fd06b655ef3a9ec", "patch": "@@ -63,7 +63,6 @@\n #define _ALGOBASE_H 1\n \n #include <bits/c++config.h>\n-#include <cstring>\n #include <cstddef>\n #include <bits/functexcept.h>\n #include <bits/stl_pair.h>\n@@ -348,7 +347,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n         static _Tp*\n         copy(const _Tp* __first, const _Tp* __last, _Tp* __result)\n         { \n-\t  std::memmove(__result, __first, sizeof(_Tp) * (__last - __first));\n+\t  __builtin_memmove(__result, __first,\n+\t\t\t    sizeof(_Tp) * (__last - __first));\n \t  return __result + (__last - __first);\n \t}\n     };\n@@ -464,7 +464,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n         __copy_b(const _Tp* __first, const _Tp* __last, _Tp* __result)\n         { \n \t  const ptrdiff_t _Num = __last - __first;\n-\t  std::memmove(__result - _Num, __first, sizeof(_Tp) * _Num);\n+\t  __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);\n \t  return __result - _Num;\n \t}\n     };\n@@ -560,15 +560,17 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   // Specialization: for char types we can use memset.\n   inline void\n   __fill_aux(unsigned char* __first, unsigned char* __last, unsigned char __c)\n-  { std::memset(__first, __c, __last - __first); }\n+  { __builtin_memset(__first, __c, __last - __first); }\n \n   inline void\n   __fill_aux(signed char* __first, signed char* __last, signed char __c)\n-  { std::memset(__first, static_cast<unsigned char>(__c), __last - __first); }\n+  { __builtin_memset(__first, static_cast<unsigned char>(__c),\n+\t\t     __last - __first); }\n \n   inline void\n   __fill_aux(char* __first, char* __last, char __c)\n-  { std::memset(__first, static_cast<unsigned char>(__c), __last - __first); }\n+  { __builtin_memset(__first, static_cast<unsigned char>(__c),\n+\t\t     __last - __first); }\n \n   /**\n    *  @brief Fills the range [first,last) with copies of value.\n@@ -764,8 +766,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n         static bool\n         equal(const _Tp* __first1, const _Tp* __last1, const _Tp* __first2)\n         {\n-\t  return !std::memcmp(__first1, __first2, sizeof(_Tp)\n-\t\t\t      * (__last1 - __first1));\n+\t  return !__builtin_memcmp(__first1, __first2, sizeof(_Tp)\n+\t\t\t\t   * (__last1 - __first1));\n \t}\n     };\n \n@@ -931,8 +933,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n     const size_t __len1 = __last1 - __first1;\n     const size_t __len2 = __last2 - __first2;\n-    const int __result = std::memcmp(__first1, __first2,\n-\t\t\t\t     std::min(__len1, __len2));\n+    const int __result = __builtin_memcmp(__first1, __first2,\n+\t\t\t\t\t  std::min(__len1, __len2));\n     return __result != 0 ? __result < 0 : __len1 < __len2;\n   }\n "}, {"sha": "10ca58aa2fd19a1f0edb7b3796dd3cefcda08fb4", "filename": "libstdc++-v3/include/ext/algorithm", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2Finclude%2Fext%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2Finclude%2Fext%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Falgorithm?ref=360721e336dbcceb4254ffbc6fd06b655ef3a9ec", "patch": "@@ -1,6 +1,7 @@\n // Algorithm extensions -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -161,7 +162,8 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n   {\n     const ptrdiff_t __len1 = __last1 - __first1;\n     const ptrdiff_t __len2 = __last2 - __first2;\n-    const int __result = std::memcmp(__first1, __first2, min(__len1, __len2));\n+    const int __result = __builtin_memcmp(__first1, __first2,\n+\t\t\t\t\t  min(__len1, __len2));\n     return __result != 0 ? __result\n \t\t\t : (__len1 == __len2 ? 0 : (__len1 < __len2 ? -1 : 1));\n   }"}, {"sha": "79e339d38418321d201cd655bafb3e96365e56bf", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=360721e336dbcceb4254ffbc6fd06b655ef3a9ec", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no match\" \"\" { target *-*-* } 620 }\n+// { dg-error \"no match\" \"\" { target *-*-* } 622 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "bcc4f4755cc97a3ea65b3c81873662f3ac97cfa7", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360721e336dbcceb4254ffbc6fd06b655ef3a9ec/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=360721e336dbcceb4254ffbc6fd06b655ef3a9ec", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no match\" \"\" { target *-*-* } 620 }\n+// { dg-error \"no match\" \"\" { target *-*-* } 622 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}]}