{"sha": "89671b70677af6d2f66c48cd9e2f703fc8e0444b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk2NzFiNzA2NzdhZjZkMmY2NmM0OGNkOWUyZjcwM2ZjOGUwNDQ0Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-09-05T07:46:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-09-05T07:46:17Z"}, "message": "c++locale_internal.h: New header.\n\n\t* config/locale/generic/c++locale_internal.h: New header.\n\t* config/locale/gnu/c++locale_internal.h: New header.\n\t* config/locale/gnu/c_locale.cc: Include it.\n\t* config/locale/gnu/collate_members.cc: Include it.\n\t* config/locale/gnu/ctype_members.cc: Include it.\n\t* config/locale/gnu/messages_members.cc: Include it.\n\t* config/locale/gnu/monetary_members.cc: Include it.\n\t* config/locale/gnu/numeric_members.cc: Include it.\n\t* config/locale/gnu/time_members.cc: Include it.\n\t(_M_put): Reorder __strftime_l and __wcsftime_l arguments to match\n\tglibc.\n\t(_M_initialize_timepunct): Initialize _M_c_locale_timepunct for\n\tC locale.\n\t* acinclude.m4: Include string.h when testing strcoll_l.\n\tFor glibc 2.3 provide __-prefixed prototypes.\n\t(CLOCALE_INTERNAL_H): Set, add AC_LINK_FILES line.\n\t* aclocal.m4, configure: Rebuilt.\n\n\t* include/bits/locale_facets.h: Add declaration of specialization\n\there.\n\t* config/locale/gnu/messages_members.cc: Add specialization for\n\tmessages<wchar_t>.\n\t* config/locale/gnu/messages_members.h: Remove generic definition\n\tof do_get.\n\nFrom-SVN: r56837", "tree": {"sha": "7c1f852eca93cfb2c467675c5083b57223a3e6c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c1f852eca93cfb2c467675c5083b57223a3e6c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89671b70677af6d2f66c48cd9e2f703fc8e0444b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89671b70677af6d2f66c48cd9e2f703fc8e0444b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89671b70677af6d2f66c48cd9e2f703fc8e0444b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89671b70677af6d2f66c48cd9e2f703fc8e0444b/comments", "author": null, "committer": null, "parents": [{"sha": "60179904a4ecf460d45f4d18fd5f408ac8634150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60179904a4ecf460d45f4d18fd5f408ac8634150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60179904a4ecf460d45f4d18fd5f408ac8634150"}], "stats": {"total": 217, "additions": 192, "deletions": 25}, "files": [{"sha": "f3dd059d92933322a98843c07289c869fb9b90ec", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -1,3 +1,32 @@\n+2002-09-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/locale/generic/c++locale_internal.h: New header.\n+\t* config/locale/gnu/c++locale_internal.h: New header.\n+\t* config/locale/gnu/c_locale.cc: Include it.\n+\t* config/locale/gnu/collate_members.cc: Include it.\n+\t* config/locale/gnu/ctype_members.cc: Include it.\n+\t* config/locale/gnu/messages_members.cc: Include it.\n+\t* config/locale/gnu/monetary_members.cc: Include it.\n+\t* config/locale/gnu/numeric_members.cc: Include it.\n+\t* config/locale/gnu/time_members.cc: Include it.\n+\t(_M_put): Reorder __strftime_l and __wcsftime_l arguments to match\n+\tglibc.\n+\t(_M_initialize_timepunct): Initialize _M_c_locale_timepunct for\n+\tC locale.\n+\t* acinclude.m4: Include string.h when testing strcoll_l.\n+\tFor glibc 2.3 provide __-prefixed prototypes.\n+\t(CLOCALE_INTERNAL_H): Set, add AC_LINK_FILES line.\n+\t* aclocal.m4, configure: Rebuilt.\n+\n+2002-09-05  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/locale_facets.h: Add declaration of specialization\n+\there.\n+\t* config/locale/gnu/messages_members.cc: Add specialization for\n+\tmessages<wchar_t>.\n+\t* config/locale/gnu/messages_members.h: Remove generic definition\n+\tof do_get.\n+\n 2002-09-04  Richard Henderson  <rth@redhat.com>\n \n \t* include/std/std_limits.h (__glibcpp_f32_infinity_bytes,"}, {"sha": "3011d5a4961ec76cbd5fcbea14d5131cc1db08d1", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -1128,6 +1128,12 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n     \t  AC_TRY_RUN([\n \t  #define _GNU_SOURCE 1\n \t  #include <locale.h>\n+\t  #include <string.h>\n+\t  #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n+\t  extern __typeof(newlocale) __newlocale;\n+\t  extern __typeof(duplocale) __duplocale;\n+\t  extern __typeof(strcoll_l) __strcoll_l;\n+\t  #endif\n \t  int main()\n \t  {\n   \t    const char __one[] = \"\ufffduglein Augmen\";\n@@ -1176,6 +1182,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMONEY_CC=config/locale/generic/monetary_members.cc\n       CNUMERIC_CC=config/locale/generic/numeric_members.cc\n       CTIME_CC=config/locale/generic/time_members.cc\n+      CLOCALE_INTERNAL_H=config/locale/generic/c++locale_internal.h\n       ;;\n     xgnu)\n       AC_MSG_RESULT(gnu)\n@@ -1208,6 +1215,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMONEY_CC=config/locale/gnu/monetary_members.cc\n       CNUMERIC_CC=config/locale/gnu/numeric_members.cc\n       CTIME_CC=config/locale/gnu/time_members.cc\n+      CLOCALE_INTERNAL_H=config/locale/gnu/c++locale_internal.h\n       ;;\n     xieee_1003.1-2001)\n       AC_MSG_RESULT(generic)\n@@ -1222,6 +1230,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMONEY_CC=config/locale/generic/monetary_members.cc\n       CNUMERIC_CC=config/locale/generic/numeric_members.cc\n       CTIME_CC=config/locale/generic/time_members.cc\n+      CLOCALE_INTERNAL_H=config/locale/generic/c++locale_internal.h\n       ;;\n     *)\n       echo \"$enable_clocale is an unknown locale package\" 1>&2\n@@ -1245,6 +1254,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n   AC_LINK_FILES($CMONEY_CC, src/monetary.cc)\n   AC_LINK_FILES($CNUMERIC_CC, src/numeric.cc)\n   AC_LINK_FILES($CTIME_CC, src/time.cc)\n+  AC_LINK_FILES($CLOCALE_INTERNAL_H, src/c++locale_internal.h)\n ])\n \n "}, {"sha": "cc7afacbbd89d60d1009202569a9accba36063d5", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -1143,6 +1143,12 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n     \t  AC_TRY_RUN([\n \t  #define _GNU_SOURCE 1\n \t  #include <locale.h>\n+\t  #include <string.h>\n+\t  #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n+\t  extern __typeof(newlocale) __newlocale;\n+\t  extern __typeof(duplocale) __duplocale;\n+\t  extern __typeof(strcoll_l) __strcoll_l;\n+\t  #endif\n \t  int main()\n \t  {\n   \t    const char __one[] = \"\ufffduglein Augmen\";\n@@ -1191,6 +1197,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMONEY_CC=config/locale/generic/monetary_members.cc\n       CNUMERIC_CC=config/locale/generic/numeric_members.cc\n       CTIME_CC=config/locale/generic/time_members.cc\n+      CLOCALE_INTERNAL_H=config/locale/generic/c++locale_internal.h\n       ;;\n     xgnu)\n       AC_MSG_RESULT(gnu)\n@@ -1223,6 +1230,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMONEY_CC=config/locale/gnu/monetary_members.cc\n       CNUMERIC_CC=config/locale/gnu/numeric_members.cc\n       CTIME_CC=config/locale/gnu/time_members.cc\n+      CLOCALE_INTERNAL_H=config/locale/gnu/c++locale_internal.h\n       ;;\n     xieee_1003.1-2001)\n       AC_MSG_RESULT(generic)\n@@ -1237,6 +1245,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMONEY_CC=config/locale/generic/monetary_members.cc\n       CNUMERIC_CC=config/locale/generic/numeric_members.cc\n       CTIME_CC=config/locale/generic/time_members.cc\n+      CLOCALE_INTERNAL_H=config/locale/generic/c++locale_internal.h\n       ;;\n     *)\n       echo \"$enable_clocale is an unknown locale package\" 1>&2\n@@ -1260,6 +1269,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n   AC_LINK_FILES($CMONEY_CC, src/monetary.cc)\n   AC_LINK_FILES($CNUMERIC_CC, src/numeric.cc)\n   AC_LINK_FILES($CTIME_CC, src/time.cc)\n+  AC_LINK_FILES($CLOCALE_INTERNAL_H, src/c++locale_internal.h)\n ])\n \n "}, {"sha": "fb263528bb0ddab8bec5322c27db47e6f637618e", "filename": "libstdc++-v3/config/locale/generic/c++locale_internal.h", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc%2B%2Blocale_internal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc%2B%2Blocale_internal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc%2B%2Blocale_internal.h?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -0,0 +1,30 @@\n+// Locale internal implementation header -*- C++ -*-\n+\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// The generic locale code doesn't need to do anything here (yet)"}, {"sha": "cfb89b5dd707365d56ebe3f99c7123ccf890cbf9", "filename": "libstdc++-v3/config/locale/gnu/c++locale_internal.h", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc%2B%2Blocale_internal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc%2B%2Blocale_internal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc%2B%2Blocale_internal.h?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -0,0 +1,59 @@\n+// Prototypes for GLIBC thread locale __-prefixed functions -*- C++ -*-\n+\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// Written by Jakub Jelinek <jakub@redhat.com>\n+\n+#include <clocale>\n+\n+#if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n+                                                  \n+extern \"C\" __typeof(iswctype_l) __iswctype_l;\n+extern \"C\" __typeof(nl_langinfo_l) __nl_langinfo_l;\n+extern \"C\" __typeof(strcoll_l) __strcoll_l;\n+extern \"C\" __typeof(strftime_l) __strftime_l;\n+extern \"C\" __typeof(strtod_l) __strtod_l;\n+extern \"C\" __typeof(strtof_l) __strtof_l;\n+extern \"C\" __typeof(strtold_l) __strtold_l;\n+extern \"C\" __typeof(strtol_l) __strtol_l;\n+extern \"C\" __typeof(strtoll_l) __strtoll_l;\n+extern \"C\" __typeof(strtoul_l) __strtoul_l;\n+extern \"C\" __typeof(strtoull_l) __strtoull_l;\n+extern \"C\" __typeof(strxfrm_l) __strxfrm_l;\n+extern \"C\" __typeof(towlower_l) __towlower_l;\n+extern \"C\" __typeof(towupper_l) __towupper_l;\n+extern \"C\" __typeof(wcscoll_l) __wcscoll_l;\n+extern \"C\" __typeof(wcsftime_l) __wcsftime_l;\n+extern \"C\" __typeof(wcsxfrm_l) __wcsxfrm_l;\n+extern \"C\" __typeof(wctype_l) __wctype_l;\n+extern \"C\" __typeof(newlocale) __newlocale;\n+extern \"C\" __typeof(freelocale) __freelocale;\n+extern \"C\" __typeof(duplocale) __duplocale;\n+extern \"C\" __typeof(uselocale) __uselocale;\n+\n+#endif // GLIBC 2.3 and later"}, {"sha": "3982a65ceb6bbf85794724775f7655253b662e00", "filename": "libstdc++-v3/config/locale/gnu/c_locale.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -36,6 +36,7 @@\n #include <locale>\n #include <stdexcept>\n #include <langinfo.h>\n+#include \"c++locale_internal.h\"\n \n namespace std \n {"}, {"sha": "97ff0c557b01199d63cc718ef2c1dc819a1abdc9", "filename": "libstdc++-v3/config/locale/gnu/collate_members.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fcollate_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fcollate_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fcollate_members.cc?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -1,6 +1,6 @@\n // std::collate implementation details, GNU version -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,6 +34,7 @@\n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n #include <locale>\n+#include \"c++locale_internal.h\"\n \n namespace std\n {"}, {"sha": "18c3a82509428aa38bdf61c924055a0066d02d15", "filename": "libstdc++-v3/config/locale/gnu/ctype_members.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -34,6 +34,7 @@\n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n #include <locale>\n+#include \"c++locale_internal.h\"\n \n namespace std\n {"}, {"sha": "54a3c8fa9f647fdeb2ff0d0e341078ba2bde7b21", "filename": "libstdc++-v3/config/locale/gnu/messages_members.cc", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.cc?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -34,6 +34,7 @@\n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n #include <locale>\n+#include \"c++locale_internal.h\"\n \n namespace std\n {\n@@ -56,4 +57,25 @@ namespace std\n       return string(__msg);\n #endif\n     }\n+\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template<>\n+    wstring\n+    messages<wchar_t>::do_get(catalog, int, int, const wstring& __dfault) const\n+    {\n+# if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n+      __c_locale __old = __uselocale(_M_c_locale_messages);\n+      char* __msg = gettext(_M_convert_to_char(__dfault));\n+      __uselocale(__old);\n+      return _M_convert_from_char(__msg);\n+# else\n+      char* __old = strdup(setlocale(LC_ALL, NULL));\n+      setlocale(LC_ALL, _M_name_messages);\n+      char* __msg = gettext(_M_convert_to_char(__dfault));\n+      setlocale(LC_ALL, __old);\n+      free(__old);\n+      return _M_convert_from_char(__msg);\n+# endif\n+    }\n+#endif\n }"}, {"sha": "68a2ea395318bceb6f0ed30b73e22d9409d3f429", "filename": "libstdc++-v3/config/locale/gnu/messages_members.h", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.h?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -54,26 +54,6 @@\n       return 0;\n     }\n \n-  template<typename _CharT>\n-    typename messages<_CharT>::string_type  \n-    messages<_CharT>::do_get(catalog, int, int, \n-\t\t\t     const string_type& __dfault) const\n-    { \n-#if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n-      __c_locale __old = __uselocale(_M_c_locale_messages);\n-      char* __msg = gettext(_M_convert_to_char(__dfault));\n-      __uselocale(__old);\n-      return _M_convert_from_char(__msg);\n-#else\n-      char* __old = strdup(setlocale(LC_ALL, NULL));\n-      setlocale(LC_ALL, _M_name_messages);\n-      char* __msg = gettext(_M_convert_to_char(__dfault));\n-      setlocale(LC_ALL, __old);\n-      free(__old);\n-      return _M_convert_from_char(__msg);\n-#endif\n-    }\n-\n   template<typename _CharT>\n     void    \n     messages<_CharT>::do_close(catalog) const "}, {"sha": "bc915af0b15f774cd103f13a8743925c3d82f6c9", "filename": "libstdc++-v3/config/locale/gnu/monetary_members.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -34,6 +34,7 @@\n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n #include <locale>\n+#include \"c++locale_internal.h\"\n \n namespace std\n {"}, {"sha": "b71374c4b8e59f81a1246090dbf9b429ce5c45f0", "filename": "libstdc++-v3/config/locale/gnu/numeric_members.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -34,6 +34,7 @@\n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n #include <locale>\n+#include \"c++locale_internal.h\"\n \n namespace std\n {"}, {"sha": "ce3d9bf01066ace4d18466ad04b055cac07b0a9e", "filename": "libstdc++-v3/config/locale/gnu/time_members.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Ftime_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Ftime_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Ftime_members.cc?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -35,6 +35,7 @@\n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n #include <locale>\n+#include \"c++locale_internal.h\"\n \n namespace std\n {\n@@ -52,7 +53,7 @@ namespace std\n \t   const tm* __tm) const\n     {\n #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n-      __strftime_l(__s, __maxlen, _M_c_locale_timepunct, __format, __tm);\n+      __strftime_l(__s, __maxlen, __format, __tm, _M_c_locale_timepunct);\n #else\n       char* __old = strdup(setlocale(LC_ALL, NULL));\n       setlocale(LC_ALL, _M_name_timepunct);\n@@ -69,6 +70,9 @@ namespace std\n       if (__cloc == _S_c_locale)\n \t{\n \t  // \"C\" locale\n+\n+\t  _M_c_locale_timepunct = _S_c_locale; \n+\n \t  _M_date_format = \"%m/%d/%y\";\n \t  _M_date_era_format = \"%m/%d/%y\";\n \t  _M_time_format = \"%H:%M:%S\";\n@@ -202,7 +206,7 @@ namespace std\n \t   const tm* __tm) const\n     {\n #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n-      __wcsftime_l(__s, __maxlen, _M_c_locale_timepunct, __format, __tm);\n+      __wcsftime_l(__s, __maxlen, __format, __tm, _M_c_locale_timepunct);\n #else\n       char* __old = strdup(setlocale(LC_ALL, NULL));\n       setlocale(LC_ALL, _M_name_timepunct);\n@@ -219,6 +223,9 @@ namespace std\n       if (__cloc == _S_c_locale)\n \t{\n \t  // \"C\" locale\n+\n+\t  _M_c_locale_timepunct = _S_c_locale; \n+\n \t  _M_date_format = L\"%m/%d/%y\";\n \t  _M_date_era_format = L\"%m/%d/%y\";\n \t  _M_time_format = L\"%H:%M:%S\";"}, {"sha": "cf9f09b96996ecea3a7a43b386582b2c6c05cb11", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -2971,6 +2971,12 @@ else\n \n \t  #define _GNU_SOURCE 1\n \t  #include <locale.h>\n+\t  #include <string.h>\n+\t  #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n+\t  extern __typeof(newlocale) __newlocale;\n+\t  extern __typeof(duplocale) __duplocale;\n+\t  extern __typeof(strcoll_l) __strcoll_l;\n+\t  #endif\n \t  int main()\n \t  {\n   \t    const char __one[] = \"\ufffduglein Augmen\";\n@@ -3033,6 +3039,7 @@ fi\n       CMONEY_CC=config/locale/generic/monetary_members.cc\n       CNUMERIC_CC=config/locale/generic/numeric_members.cc\n       CTIME_CC=config/locale/generic/time_members.cc\n+      CLOCALE_INTERNAL_H=config/locale/generic/c++locale_internal.h\n       ;;\n     xgnu)\n       echo \"$ac_t\"\"gnu\" 1>&6\n@@ -3094,6 +3101,7 @@ fi\n       CMONEY_CC=config/locale/gnu/monetary_members.cc\n       CNUMERIC_CC=config/locale/gnu/numeric_members.cc\n       CTIME_CC=config/locale/gnu/time_members.cc\n+      CLOCALE_INTERNAL_H=config/locale/gnu/c++locale_internal.h\n       ;;\n     xieee_1003.1-2001)\n       echo \"$ac_t\"\"generic\" 1>&6\n@@ -3108,6 +3116,7 @@ fi\n       CMONEY_CC=config/locale/generic/monetary_members.cc\n       CNUMERIC_CC=config/locale/generic/numeric_members.cc\n       CTIME_CC=config/locale/generic/time_members.cc\n+      CLOCALE_INTERNAL_H=config/locale/generic/c++locale_internal.h\n       ;;\n     *)\n       echo \"$enable_clocale is an unknown locale package\" 1>&2\n@@ -22856,8 +22865,8 @@ fi; done\n EOF\n \n cat >> $CONFIG_STATUS <<EOF\n-ac_sources=\"$BASIC_FILE_CC $CLOCALE_CC $CCOLLATE_CC $CCTYPE_CC $CMESSAGES_CC $CMONEY_CC $CNUMERIC_CC $CTIME_CC $LINKER_MAP\"\n-ac_dests=\"src/basic_file.cc src/c++locale.cc src/collate.cc src/ctype.cc src/messages.cc src/monetary.cc src/numeric.cc src/time.cc src/linker.map\"\n+ac_sources=\"$BASIC_FILE_CC $CLOCALE_CC $CCOLLATE_CC $CCTYPE_CC $CMESSAGES_CC $CMONEY_CC $CNUMERIC_CC $CTIME_CC $CLOCALE_INTERNAL_H $LINKER_MAP\"\n+ac_dests=\"src/basic_file.cc src/c++locale.cc src/collate.cc src/ctype.cc src/messages.cc src/monetary.cc src/numeric.cc src/time.cc src/c++locale_internal.h src/linker.map\"\n EOF\n \n cat >> $CONFIG_STATUS <<\\EOF"}, {"sha": "9a4b994a5ad0cc4b34ccb0657a8f8302d5245b2f", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89671b70677af6d2f66c48cd9e2f703fc8e0444b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=89671b70677af6d2f66c48cd9e2f703fc8e0444b", "patch": "@@ -1739,6 +1739,12 @@ namespace std\n     string\n     messages<char>::do_get(catalog, int, int, const string&) const;\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template<>\n+    wstring\n+    messages<wchar_t>::do_get(catalog, int, int, const wstring&) const;\n+#endif\n+\n   // Include host and configuration specific messages virtual functions.\n   #include <bits/messages_members.h>\n "}]}