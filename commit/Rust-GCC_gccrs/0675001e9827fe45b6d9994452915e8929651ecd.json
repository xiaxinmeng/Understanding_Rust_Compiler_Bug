{"sha": "0675001e9827fe45b6d9994452915e8929651ecd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY3NTAwMWU5ODI3ZmU0NWI2ZDk5OTQ0NTI5MTVlODkyOTY1MWVjZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-12-15T08:19:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-12-15T08:19:55Z"}, "message": "re PR tree-optimization/64284 (ICE: Segmentation fault)\n\n2014-12-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/64284\n\t* tree-ssa-threadupdate.c (duplicate_seme_region): Mark\n\tthe loop for removal if we copied the loop header.\n\n\t* gcc.dg/torture/pr64284.c: New testcase.\n\nFrom-SVN: r218733", "tree": {"sha": "53e1e3c4dd8e23039265c95b7a6992126ecdb915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53e1e3c4dd8e23039265c95b7a6992126ecdb915"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0675001e9827fe45b6d9994452915e8929651ecd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0675001e9827fe45b6d9994452915e8929651ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0675001e9827fe45b6d9994452915e8929651ecd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0675001e9827fe45b6d9994452915e8929651ecd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "451f11993580c3fb0b80da62885a00f8ee265304", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451f11993580c3fb0b80da62885a00f8ee265304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/451f11993580c3fb0b80da62885a00f8ee265304"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "2e0ca74784d8cb09b0db2273f4913211cf5863cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0675001e9827fe45b6d9994452915e8929651ecd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0675001e9827fe45b6d9994452915e8929651ecd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0675001e9827fe45b6d9994452915e8929651ecd", "patch": "@@ -1,3 +1,9 @@\n+2014-12-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/64284\n+\t* tree-ssa-threadupdate.c (duplicate_seme_region): Mark\n+\tthe loop for removal if we copied the loop header.\n+\n 2014-12-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa.c (process_references): Fix conditoinal on flag_optimize"}, {"sha": "2e21868effba8d18f838aaabe155959ecedb30f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0675001e9827fe45b6d9994452915e8929651ecd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0675001e9827fe45b6d9994452915e8929651ecd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0675001e9827fe45b6d9994452915e8929651ecd", "patch": "@@ -1,3 +1,8 @@\n+2014-12-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/64284\n+\t* gcc.dg/torture/pr64284.c: New testcase.\n+\n 2014-12-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/61602"}, {"sha": "425438116ebd0fa67325537e3bf3519254ac834e", "filename": "gcc/testsuite/gcc.dg/torture/pr64284.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0675001e9827fe45b6d9994452915e8929651ecd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64284.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0675001e9827fe45b6d9994452915e8929651ecd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64284.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64284.c?ref=0675001e9827fe45b6d9994452915e8929651ecd", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+int *a;\n+int b;\n+int\n+fn1() {\n+    enum { QSTRING } c = 0;\n+    while (1) {\n+\tswitch (*a) {\n+\t  case '\\'':\n+\t  c = 0;\n+\t  default:\n+\t  switch (c)\n+\t  case 0:\n+\t    if (b)\n+\t      return 0;\n+\t    c = 1;\n+\t}\n+\ta++;\n+    }\n+}"}, {"sha": "c7a476af0cfcf77c8eea1444d633c75746c43013", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0675001e9827fe45b6d9994452915e8929651ecd/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0675001e9827fe45b6d9994452915e8929651ecd/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=0675001e9827fe45b6d9994452915e8929651ecd", "patch": "@@ -2364,7 +2364,7 @@ duplicate_seme_region (edge entry, edge exit,\n \t\t       basic_block *region_copy)\n {\n   unsigned i;\n-  bool free_region_copy = false, copying_header = false;\n+  bool free_region_copy = false;\n   struct loop *loop = entry->dest->loop_father;\n   edge exit_copy;\n   edge redirected;\n@@ -2388,10 +2388,7 @@ duplicate_seme_region (edge entry, edge exit,\n \n   initialize_original_copy_tables ();\n \n-  if (copying_header)\n-    set_loop_copy (loop, loop_outer (loop));\n-  else\n-    set_loop_copy (loop, loop);\n+  set_loop_copy (loop, loop);\n \n   if (!region_copy)\n     {\n@@ -2453,6 +2450,8 @@ duplicate_seme_region (edge entry, edge exit,\n   }\n \n   /* Redirect the entry and add the phi node arguments.  */\n+  if (entry->dest == loop->header)\n+    mark_loop_for_removal (loop);\n   redirected = redirect_edge_and_branch (entry, get_bb_copy (entry->dest));\n   gcc_assert (redirected != NULL);\n   flush_pending_stmts (entry);"}]}