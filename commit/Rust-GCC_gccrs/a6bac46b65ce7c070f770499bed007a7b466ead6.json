{"sha": "a6bac46b65ce7c070f770499bed007a7b466ead6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZiYWM0NmI2NWNlN2MwNzBmNzcwNDk5YmVkMDA3YTdiNDY2ZWFkNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-07-03T13:59:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-07-03T13:59:06Z"}, "message": "h8300.md (HSI, [...]): New mode iterators.\n\n\t* config/h8300/h8300.md (HSI, QHSI, QHSIF): New mode iterators.\n\t(shifts): New code iterator.\n\t(movqi, movhi, movsi, movsf expanders): Consolidate into a single\n\texpander.  Fix HImode handling on H8/SX.\n\t(addqi3, addhi3, addsi3 expanders): Consolidate into a single expander.\n\t(subqi3, subhi3, subsi3 expanders): Likewise.\n\t(andqi3, andhi3, andsi3 expanders): Likewise.\n\t(iorqi3, iorhi3, iorsi3 expanders): Likewise.\n\t(xorqi3, xorhi3, xorsi3 expanders): Likewise.\n\t(negqi2, neghi2, negsi2, negsf2 expanders): Likewise.\n\t(one_cmplqi2, one_cmplhi2, one_cmplsi2): Likewise.\n\t(zero_extendqihi2, zero_extendqisi2): Likewise.\n\t(extendqihi2, extendqisi2): Likewise.\n\t(rotlqi3, rotlhi3, rotlsi3): Likewise.\n\t(neghi2_h8300, negsi2_h8300): Likewise for these patterns.\n\t(rotlqi3_1, rotlhi3_1): Likewise.\n\t(logicalhi3_sn, logicalsi3_sn): Likewise.\n\t(logicalhi3, logicalsi3): Likewise.\n\nFrom-SVN: r262342", "tree": {"sha": "2852a80447ea1dbe33acfe16a9554958691edb90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2852a80447ea1dbe33acfe16a9554958691edb90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6bac46b65ce7c070f770499bed007a7b466ead6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bac46b65ce7c070f770499bed007a7b466ead6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bac46b65ce7c070f770499bed007a7b466ead6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bac46b65ce7c070f770499bed007a7b466ead6/comments", "author": null, "committer": null, "parents": [{"sha": "abee2682026417547b115407fe372cfeef91d609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abee2682026417547b115407fe372cfeef91d609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abee2682026417547b115407fe372cfeef91d609"}], "stats": {"total": 444, "additions": 136, "deletions": 308}, "files": [{"sha": "a0b7d35de5a06c5c5fb9a23513b14e208fc03551", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bac46b65ce7c070f770499bed007a7b466ead6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bac46b65ce7c070f770499bed007a7b466ead6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6bac46b65ce7c070f770499bed007a7b466ead6", "patch": "@@ -4,6 +4,27 @@\n \t* tree-ssa-structalias.c (find_func_clobbers): Properly\n \thandle indirect calls.\n \n+2018-07-03  Jeff Law  <law@redhat.com>\n+\n+\t* config/h8300/h8300.md (HSI, QHSI, QHSIF): New mode iterators.\n+\t(shifts): New code iterator.\n+\t(movqi, movhi, movsi, movsf expanders): Consolidate into a single\n+\texpander.  Fix HImode handling on H8/SX.\n+\t(addqi3, addhi3, addsi3 expanders): Consolidate into a single expander.\n+\t(subqi3, subhi3, subsi3 expanders): Likewise.\n+\t(andqi3, andhi3, andsi3 expanders): Likewise.\n+\t(iorqi3, iorhi3, iorsi3 expanders): Likewise.\n+\t(xorqi3, xorhi3, xorsi3 expanders): Likewise.\n+\t(negqi2, neghi2, negsi2, negsf2 expanders): Likewise.\n+\t(one_cmplqi2, one_cmplhi2, one_cmplsi2): Likewise.\n+\t(zero_extendqihi2, zero_extendqisi2): Likewise.\n+\t(extendqihi2, extendqisi2): Likewise.\n+\t(rotlqi3, rotlhi3, rotlsi3): Likewise.\n+\t(neghi2_h8300, negsi2_h8300): Likewise for these patterns.\n+\t(rotlqi3_1, rotlhi3_1): Likewise.\n+\t(logicalhi3_sn, logicalsi3_sn): Likewise.\n+\t(logicalhi3, logicalsi3): Likewise.\n+\n 2018-07-03  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-patterns.c (vect_recog_rotate_pattern)"}, {"sha": "aac405a1b542909def91e0bb14ba861671a989e9", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 115, "deletions": 308, "changes": 423, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bac46b65ce7c070f770499bed007a7b466ead6/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bac46b65ce7c070f770499bed007a7b466ead6/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=a6bac46b65ce7c070f770499bed007a7b466ead6", "patch": "@@ -185,6 +185,14 @@\n (define_mode_iterator P [(HI \"Pmode == HImode\") (SI \"Pmode == SImode\")])\n \n (define_mode_iterator QHI [QI HI])\n+\n+(define_mode_iterator HSI [HI SI])\n+\n+(define_mode_iterator QHSI [QI HI SI])\n+\n+(define_mode_iterator QHSIF [QI HI SI SF])\n+\n+(define_code_iterator shifts [ashift ashiftrt lshiftrt])\n \f\n ;; ----------------------------------------------------------------------\n ;; MOVE INSTRUCTIONS\n@@ -218,14 +226,28 @@\n   [(set_attr \"length_table\" \"mov_imm4,movb\")\n    (set_attr \"cc\" \"set_znv\")])\n \n-(define_expand \"movqi\"\n-  [(set (match_operand:QI 0 \"general_operand_dst\" \"\")\n-\t(match_operand:QI 1 \"general_operand_src\" \"\"))]\n+(define_expand \"mov<mode>\"\n+  [(set (match_operand:QHSIF 0 \"general_operand_dst\" \"\")\n+\t(match_operand:QHSIF 1 \"general_operand_src\" \"\"))]\n   \"\"\n   {\n-    /* One of the ops has to be in a register.  */\n-    if (!TARGET_H8300SX && !h8300_move_ok (operands[0], operands[1]))\n-      operands[1] = copy_to_mode_reg (QImode, operands[1]);\n+    enum machine_mode mode = <MODE>mode;\n+    if (TARGET_H8300 && (mode == SImode || mode == SFmode))\n+      {\n+\t/* The original H8/300 needs to split up 32 bit moves.  */\n+\tif (h8300_expand_movsi (operands))\n+\t  DONE;\n+      }\n+    else if (!TARGET_H8300SX)\n+      {\n+\t/* Other H8 chips, except the H8/SX family can only handle a\n+\t   single memory operand, which is checked by h8300_move_ok.\n+\n+\t   We could perhaps have h8300_move_ok handle the H8/SX better\n+\t   and just remove the !TARGET_H8300SX conditional.  */\n+\tif (!h8300_move_ok (operands[0], operands[1]))\n+\t  operands[1] = copy_to_mode_reg (mode, operand1);\n+      }\n   })\n \n (define_insn \"movstrictqi\"\n@@ -271,16 +293,6 @@\n    (set_attr \"length\" \"2,2,*,*,*\")\n    (set_attr \"cc\" \"set_zn,set_znv,set_znv,set_znv,set_znv\")])\n \n-(define_expand \"movhi\"\n-  [(set (match_operand:HI 0 \"general_operand_dst\" \"\")\n-\t(match_operand:HI 1 \"general_operand_src\" \"\"))]\n-  \"\"\n-  {\n-    /* One of the ops has to be in a register.  */\n-    if (!h8300_move_ok (operands[0], operands[1]))\n-      operands[1] = copy_to_mode_reg (HImode, operand1);\n-  })\n-\n (define_insn \"movstricthi\"\n   [(set (strict_low_part (match_operand:HI 0 \"general_operand_dst\" \"+r,r,r\"))\n \t\t\t (match_operand:HI 1 \"general_operand_src\" \"I,P3>X,rmi\"))]\n@@ -295,24 +307,6 @@\n \n ;; movsi\n \n-(define_expand \"movsi\"\n-  [(set (match_operand:SI 0 \"general_operand_dst\" \"\")\n-\t(match_operand:SI 1 \"general_operand_src\" \"\"))]\n-  \"\"\n-  {\n-    if (TARGET_H8300)\n-      {\n-\tif (h8300_expand_movsi (operands))\n-\t  DONE;\n-      }\n-    else if (!TARGET_H8300SX)\n-      {\n-\t/* One of the ops has to be in a register.  */\n-\tif (!h8300_move_ok (operands[0], operands[1]))\n-\t  operands[1] = copy_to_mode_reg (SImode, operand1);\n-      }\n-  })\n-\n (define_insn \"*movsi_h8300\"\n   [(set (match_operand:SI 0 \"general_operand_dst\" \"=r,r,r,o,<,r\")\n \t(match_operand:SI 1 \"general_operand_src\" \"I,r,io,r,r,>\"))]\n@@ -718,27 +712,6 @@\n \n (include \"mova.md\")\n \n-(define_expand \"movsf\"\n-  [(set (match_operand:SF 0 \"general_operand_dst\" \"\")\n-\t(match_operand:SF 1 \"general_operand_src\" \"\"))]\n-  \"\"\n-  {\n-    if (TARGET_H8300)\n-      {\n-\tif (h8300_expand_movsi (operands))\n-\t  DONE;\n-      }\n-    else if (!TARGET_H8300SX)\n-      {\n-\t/* One of the ops has to be in a register.  */\n-\tif (!register_operand (operand1, SFmode)\n-\t    && !register_operand (operand0, SFmode))\n-\t  {\n-\t    operands[1] = copy_to_mode_reg (SFmode, operand1);\n-\t  }\n-      }\n-  })\n-\n (define_insn \"*movsf_h8300\"\n   [(set (match_operand:SF 0 \"general_operand_dst\" \"=r,r,r,o,<,r\")\n \t(match_operand:SF 1 \"general_operand_src\" \"G,r,io,r,r,>\"))]\n@@ -1078,10 +1051,10 @@\n ;; ADD INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n \n-(define_expand \"addqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(plus:QI (match_operand:QI 1 \"register_operand\" \"\")\n-\t\t (match_operand:QI 2 \"h8300_src_operand\" \"\")))]\n+(define_expand \"add<mode>3\"\n+  [(set (match_operand:QHSI 0 \"register_operand\" \"\")\n+\t(plus:QHSI (match_operand:QHSI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:QHSI 2 \"h8300_src_operand\" \"\")))]\n   \"\"\n   \"\")\n \n@@ -1094,13 +1067,6 @@\n   [(set_attr \"length_table\" \"addb\")\n    (set_attr \"cc\" \"set_zn\")])\n \n-(define_expand \"addhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(plus:HI (match_operand:HI 1 \"register_operand\" \"\")\n-\t\t (match_operand:HI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n (define_insn \"*addhi3_h8300\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r,r\")\n \t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,0,0\")\n@@ -1198,12 +1164,6 @@\n     DONE;\n   })\n \n-(define_expand \"addsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(plus:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t (match_operand:SI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  \"\")\n \n (define_insn \"*addsi_h8300\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n@@ -1258,12 +1218,15 @@\n ;; SUBTRACT INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n \n-(define_expand \"subqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(minus:QI (match_operand:QI 1 \"register_operand\" \"\")\n-\t\t  (match_operand:QI 2 \"h8300_src_operand\" \"\")))]\n+(define_expand \"sub<mode>3\"\n+  [(set (match_operand:QHSI 0 \"register_operand\" \"\")\n+\t(minus:QHSI (match_operand:QHSI 1 \"register_operand\" \"\")\n+\t\t    (match_operand:QHSI 2 \"h8300_src_operand\" \"\")))]\n   \"\"\n-  \"\")\n+  {\n+    if (TARGET_H8300 && <MODE>mode == SImode)\n+      operands[2] = force_reg (SImode, operands[2]);\n+  })\n \n (define_insn \"*subqi3\"\n   [(set (match_operand:QI 0 \"h8300_dst_operand\" \"=rQ\")\n@@ -1274,13 +1237,6 @@\n   [(set_attr \"length_table\" \"addb\")\n    (set_attr \"cc\" \"set_zn\")])\n \n-(define_expand \"subhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(minus:HI (match_operand:HI 1 \"register_operand\" \"\")\n-\t\t  (match_operand:HI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n (define_insn \"*subhi3_h8300\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n \t(minus:HI (match_operand:HI 1 \"register_operand\" \"0,0\")\n@@ -1303,16 +1259,6 @@\n   [(set_attr \"length_table\" \"addw\")\n    (set_attr \"cc\" \"set_zn\")])\n \n-(define_expand \"subsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(minus:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t  (match_operand:SI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  {\n-    if (TARGET_H8300)\n-      operands[2] = force_reg (SImode, operands[2]);\n-  })\n-\n (define_insn \"*subsi3_h8300\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(minus:SI (match_operand:SI 1 \"register_operand\" \"0\")\n@@ -1718,17 +1664,10 @@\n   [(set_attr \"length\" \"2,8\")\n    (set_attr \"cc\" \"none_0hit,set_znv\")])\n \n-(define_expand \"andqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(and:QI (match_operand:QI 1 \"register_operand\" \"\")\n-\t\t(match_operand:QI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"andhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(and:HI (match_operand:HI 1 \"register_operand\" \"\")\n-\t\t(match_operand:HI 2 \"h8300_src_operand\" \"\")))]\n+(define_expand \"and<mode>3\"\n+  [(set (match_operand:QHSI 0 \"register_operand\" \"\")\n+\t(and:QHSI (match_operand:QHSI 1 \"register_operand\" \"\")\n+\t\t  (match_operand:QHSI 2 \"h8300_src_operand\" \"\")))]\n   \"\"\n   \"\")\n \n@@ -1785,13 +1724,6 @@\n   \"or.b\\\\t%w2,%x0\"\n   [(set_attr \"length\" \"2\")])\n \n-(define_expand \"andsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(and:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t(match_operand:SI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n ;; ----------------------------------------------------------------------\n ;; OR INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n@@ -1847,25 +1779,10 @@\n    (set_attr \"length_table\" \"*,logicb\")\n    (set_attr \"cc\" \"none_0hit,set_znv\")])\n \n-\n-(define_expand \"iorqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(ior:QI (match_operand:QI 1 \"register_operand\" \"\")\n-\t\t(match_operand:QI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"iorhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(ior:HI (match_operand:HI 1 \"register_operand\" \"\")\n-\t\t(match_operand:HI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"iorsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(ior:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t(match_operand:SI 2 \"h8300_src_operand\" \"\")))]\n+(define_expand \"ior<mode>3\"\n+  [(set (match_operand:QHSI 0 \"register_operand\" \"\")\n+\t(ior:QHSI (match_operand:QHSI 1 \"register_operand\" \"\")\n+\t\t  (match_operand:QHSI 2 \"h8300_src_operand\" \"\")))]\n   \"\"\n   \"\")\n \n@@ -1925,24 +1842,10 @@\n    (set_attr \"length_table\" \"*,logicb\")\n    (set_attr \"cc\" \"none_0hit,set_znv\")])\n \n-(define_expand \"xorqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(xor:QI (match_operand:QI 1 \"register_operand\" \"\")\n-\t\t(match_operand:QI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"xorhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(xor:HI (match_operand:HI 1 \"register_operand\" \"\")\n-\t\t(match_operand:HI 2 \"h8300_src_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"xorsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(xor:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t(match_operand:SI 2 \"h8300_src_operand\" \"\")))]\n+(define_expand \"xor<mode>3\"\n+  [(set (match_operand:QHSI 0 \"register_operand\" \"\")\n+\t(xor:QHSI (match_operand:QHSI 1 \"register_operand\" \"\")\n+\t\t  (match_operand:QHSI 2 \"h8300_src_operand\" \"\")))]\n   \"\"\n   \"\")\n \n@@ -1955,71 +1858,60 @@\n ;; of high/low instructions, so we can accept literal addresses, that\n ;; have to be loaded into a register on H8300.\n \n-(define_insn \"*logicalhi3_sn\"\n-  [(set (match_operand:HI 0 \"h8300_dst_operand\" \"=rQ\")\n-\t(match_operator:HI 3 \"bit_operator\"\n-\t [(match_operand:HI 1 \"h8300_dst_operand\" \"%0\")\n-\t  (match_operand:HI 2 \"h8300_src_operand\" \"rQi\")]))]\n-  \"(TARGET_H8300S || TARGET_H8300H) && h8300_operands_match_p (operands)\"\n-{\n-  return output_logical_op (HImode, operands);\n-}\n-  [(set (attr \"length\")\n-\t(symbol_ref \"compute_logical_op_length (HImode, operands)\"))\n-   (set (attr \"cc\")\n-\t(symbol_ref \"compute_logical_op_cc (HImode, operands)\"))])\n-\n-(define_insn \"*logicalsi3_sn\"\n-  [(set (match_operand:SI 0 \"h8300_dst_operand\" \"=rQ\")\n-\t(match_operator:SI 3 \"bit_operator\"\n-\t [(match_operand:SI 1 \"h8300_dst_operand\" \"%0\")\n-\t  (match_operand:SI 2 \"h8300_src_operand\" \"rQi\")]))]\n+(define_insn \"*logical<mode>3_sn\"\n+  [(set (match_operand:HSI 0 \"h8300_dst_operand\" \"=rQ\")\n+\t(match_operator:HSI 3 \"bit_operator\"\n+\t [(match_operand:HSI 1 \"h8300_dst_operand\" \"%0\")\n+\t  (match_operand:HSI 2 \"h8300_src_operand\" \"rQi\")]))]\n   \"(TARGET_H8300S || TARGET_H8300H) && h8300_operands_match_p (operands)\"\n {\n-  return output_logical_op (SImode, operands);\n+  return output_logical_op (<MODE>mode, operands);\n }\n   [(set (attr \"length\")\n-\t(symbol_ref \"compute_logical_op_length (SImode, operands)\"))\n+\t(symbol_ref \"compute_logical_op_length (<MODE>mode, operands)\"))\n    (set (attr \"cc\")\n-\t(symbol_ref \"compute_logical_op_cc (SImode, operands)\"))])\n+\t(symbol_ref \"compute_logical_op_cc (<MODE>mode, operands)\"))])\n \n-(define_insn \"*logicalhi3\"\n-  [(set (match_operand:HI 0 \"h8300_dst_operand\" \"=rQ\")\n-\t(match_operator:HI 3 \"bit_operator\"\n-\t  [(match_operand:HI 1 \"h8300_dst_operand\" \"%0\")\n-\t   (match_operand:HI 2 \"h8300_src_operand\" \"rQi\")]))]\n+(define_insn \"*logical<mode>3\"\n+  [(set (match_operand:HSI 0 \"h8300_dst_operand\" \"=rQ\")\n+\t(match_operator:HSI 3 \"bit_operator\"\n+\t  [(match_operand:HSI 1 \"h8300_dst_operand\" \"%0\")\n+\t   (match_operand:HSI 2 \"h8300_src_operand\" \"rQi\")]))]\n   \"h8300_operands_match_p (operands)\"\n {\n-  return output_logical_op (HImode, operands);\n+  return output_logical_op (<MODE>mode, operands);\n }\n   [(set (attr \"length\")\n-\t(symbol_ref \"compute_logical_op_length (HImode, operands)\"))\n+\t(symbol_ref \"compute_logical_op_length (<MODE>mode, operands)\"))\n    (set (attr \"cc\")\n-\t(symbol_ref \"compute_logical_op_cc (HImode, operands)\"))])\n-\n-(define_insn \"*logicalsi3\"\n-  [(set (match_operand:SI 0 \"h8300_dst_operand\" \"=rQ\")\n-\t(match_operator:SI 3 \"bit_operator\"\n-\t [(match_operand:SI 1 \"h8300_dst_operand\" \"%0\")\n-\t  (match_operand:SI 2 \"h8300_src_operand\" \"rQi\")]))]\n-  \"h8300_operands_match_p (operands)\"\n-{\n-  return output_logical_op (SImode, operands);\n-}\n-  [(set (attr \"length\")\n-\t(symbol_ref \"compute_logical_op_length (SImode, operands)\"))\n-   (set (attr \"cc\")\n-\t(symbol_ref \"compute_logical_op_cc (SImode, operands)\"))])\n+\t(symbol_ref \"compute_logical_op_cc (<MODE>mode, operands)\"))])\n \f\n ;; ----------------------------------------------------------------------\n ;; NEGATION INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n \n-(define_expand \"negqi2\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(neg:QI (match_operand:QI 1 \"register_operand\" \"\")))]\n+(define_expand \"neg<mode>2\"\n+  [(set (match_operand:QHSIF 0 \"register_operand\" \"\")\n+\t(neg:QHSIF (match_operand:QHSIF 1 \"register_operand\" \"\")))]\n   \"\"\n-  \"\")\n+  {\n+    enum machine_mode mode = <MODE>mode;\n+    if (TARGET_H8300)\n+      {\n+\tif (mode == QImode || mode == SFmode)\n+\t  ;\n+\telse if (mode == HImode)\n+\t  {\n+\t    emit_insn (gen_neghi2_h8300 (operands[0], operands[1]));\n+\t    DONE;\n+\t  }\n+\telse if (mode == SImode)\n+\t  {\n+\t    emit_insn (gen_negsi2_h8300 (operands[0], operands[1]));\n+\t    DONE;\n+\t  }\n+      }\n+  })\n \n (define_insn \"*negqi2\"\n   [(set (match_operand:QI 0 \"h8300_dst_operand\" \"=rQ\")\n@@ -2029,27 +1921,15 @@\n   [(set_attr \"length_table\" \"unary\")\n    (set_attr \"cc\" \"set_zn\")])\n \n-(define_expand \"neghi2\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(neg:HI (match_operand:HI 1 \"register_operand\" \"\")))]\n-  \"\"\n-  {\n-    if (TARGET_H8300)\n-      {\n-\temit_insn (gen_neghi2_h8300 (operands[0], operands[1]));\n-\tDONE;\n-      }\n-  })\n-\n-(define_expand \"neghi2_h8300\"\n+(define_expand \"neg<mode>2_h8300\"\n   [(set (match_dup 2)\n-\t(not:HI (match_operand:HI 1 \"register_operand\" \"\")))\n-   (set (match_dup 2) (plus:HI (match_dup 2) (const_int 1)))\n-   (set (match_operand:HI 0 \"register_operand\" \"\")\n+\t(not:HSI (match_operand:HSI 1 \"register_operand\" \"\")))\n+   (set (match_dup 2) (plus:HSI (match_dup 2) (const_int 1)))\n+   (set (match_operand:HSI 0 \"register_operand\" \"\")\n \t(match_dup 2))]\n   \"\"\n   {\n-    operands[2] = gen_reg_rtx (HImode);\n+    operands[2] = gen_reg_rtx (<MODE>mode);\n   })\n \n (define_insn \"*neghi2_h8300hs\"\n@@ -2060,29 +1940,6 @@\n   [(set_attr \"length_table\" \"unary\")\n    (set_attr \"cc\" \"set_zn\")])\n \n-(define_expand \"negsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(neg:SI (match_operand:SI 1 \"register_operand\" \"\")))]\n-  \"\"\n-  {\n-    if (TARGET_H8300)\n-      {\n-\temit_insn (gen_negsi2_h8300 (operands[0], operands[1]));\n-\tDONE;\n-      }\n-  })\n-\n-(define_expand \"negsi2_h8300\"\n-  [(set (match_dup 2)\n-\t(not:SI (match_operand:SI 1 \"register_operand\" \"\")))\n-   (set (match_dup 2) (plus:SI (match_dup 2) (const_int 1)))\n-   (set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(match_dup 2))]\n-  \"\"\n-  {\n-    operands[2] = gen_reg_rtx (SImode);\n-  })\n-\n (define_insn \"*negsi2_h8300hs\"\n   [(set (match_operand:SI 0 \"h8300_dst_operand\" \"=rQ\")\n \t(neg:SI (match_operand:SI 1 \"h8300_dst_operand\" \"0\")))]\n@@ -2091,12 +1948,6 @@\n   [(set_attr \"length_table\" \"unary\")\n    (set_attr \"cc\" \"set_zn\")])\n \n-(define_expand \"negsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(neg:SF (match_operand:SF 1 \"register_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n (define_insn \"*negsf2_h8300\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(neg:SF (match_operand:SF 1 \"register_operand\" \"0\")))]\n@@ -2139,9 +1990,9 @@\n ;; NOT INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n \n-(define_expand \"one_cmplqi2\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(not:QI (match_operand:QI 1 \"register_operand\" \"\")))]\n+(define_expand \"one_cmpl<mode>2\"\n+  [(set (match_operand:QHSI 0 \"register_operand\" \"\")\n+\t(not:QHSI (match_operand:QHSI 1 \"register_operand\" \"\")))]\n   \"\"\n   \"\")\n \n@@ -2153,12 +2004,6 @@\n   [(set_attr \"length_table\" \"unary\")\n    (set_attr \"cc\" \"set_znv\")])\n \n-(define_expand \"one_cmplhi2\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(not:HI (match_operand:HI 1 \"register_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n (define_insn \"*one_cmplhi2_h8300\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n \t(not:HI (match_operand:HI 1 \"register_operand\" \"0\")))]\n@@ -2174,12 +2019,6 @@\n   [(set_attr \"cc\" \"set_znv\")\n    (set_attr \"length_table\" \"unary\")])\n \n-(define_expand \"one_cmplsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(not:SI (match_operand:SI 1 \"register_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n (define_insn \"*one_cmplsi2_h8300\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(not:SI (match_operand:SI 1 \"register_operand\" \"0\")))]\n@@ -2647,11 +2486,14 @@\n ;; EXTEND INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n \n-(define_expand \"zero_extendqihi2\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(zero_extend:HI (match_operand:QI 1 \"general_operand_src\" \"\")))]\n+(define_expand \"zero_extendqi<mode>2\"\n+  [(set (match_operand:HSI 0 \"register_operand\" \"\")\n+\t(zero_extend:HSI (match_operand:QI 1 \"general_operand_src\" \"\")))]\n   \"\"\n-  \"\")\n+  {\n+    if (TARGET_H8300SX)\n+      operands[1] = force_reg (QImode, operands[1]);\n+  })\n \n (define_insn \"*zero_extendqihi2_h8300\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n@@ -2689,14 +2531,6 @@\n     operands[2] = gen_rtx_REG (QImode, REGNO (operands[0]));\n   })\n \n-(define_expand \"zero_extendqisi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(zero_extend:SI (match_operand:QI 1 \"general_operand_src\" \"\")))]\n-  \"\"\n-  {\n-    if (TARGET_H8300SX)\n-      operands[1] = force_reg (QImode, operands[1]);\n-  })\n \n (define_insn \"*zero_extendqisi2_h8300\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n@@ -2777,9 +2611,9 @@\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set_znv\")])\n \n-(define_expand \"extendqihi2\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(sign_extend:HI (match_operand:QI 1 \"register_operand\" \"\")))]\n+(define_expand \"extendqi<mode>2\"\n+  [(set (match_operand:HSI 0 \"register_operand\" \"\")\n+\t(sign_extend:HSI (match_operand:QI 1 \"register_operand\" \"\")))]\n   \"\"\n   \"\")\n \n@@ -2800,12 +2634,6 @@\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set_znv\")])\n \n-(define_expand \"extendqisi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(sign_extend:SI (match_operand:QI 1 \"register_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n (define_insn \"*extendqisi2_h8300\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(sign_extend:SI (match_operand:QI 1 \"general_operand_src\" \"0,g>\")))]\n@@ -3165,41 +2993,20 @@\n ;; ROTATIONS\n ;; ----------------------------------------------------------------------\n \n-(define_expand \"rotlqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(rotate:QI (match_operand:QI 1 \"register_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n+(define_expand \"rotl<mode>3\"\n+  [(set (match_operand:QHI 0 \"register_operand\" \"\")\n+\t(rotate:QHI (match_operand:QHI 1 \"register_operand\" \"\")\n+\t\t    (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n     if (expand_a_rotate (operands))\n     DONE;\n   })\n \n-(define_insn \"rotlqi3_1\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n-\t(rotate:QI (match_operand:QI 1 \"register_operand\" \"0\")\n-\t\t   (match_operand:QI 2 \"immediate_operand\" \"\")))]\n-  \"\"\n-{\n-  return output_a_rotate (ROTATE, operands);\n-}\n-  [(set (attr \"length\")\n-\t(symbol_ref \"compute_a_rotate_length (operands)\"))])\n-\n-(define_expand \"rotlhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(rotate:HI (match_operand:HI 1 \"register_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n-  \"\"\n-  {\n-    if (expand_a_rotate (operands))\n-    DONE;\n-  })\n-\n-(define_insn \"rotlhi3_1\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(rotate:HI (match_operand:HI 1 \"register_operand\" \"0\")\n-\t\t   (match_operand:QI 2 \"immediate_operand\" \"\")))]\n+(define_insn \"rotl<mode>3_1\"\n+  [(set (match_operand:QHI 0 \"register_operand\" \"=r\")\n+\t(rotate:QHI (match_operand:QHI 1 \"register_operand\" \"0\")\n+\t\t    (match_operand:QI 2 \"immediate_operand\" \"\")))]\n   \"\"\n {\n   return output_a_rotate (ROTATE, operands);"}]}