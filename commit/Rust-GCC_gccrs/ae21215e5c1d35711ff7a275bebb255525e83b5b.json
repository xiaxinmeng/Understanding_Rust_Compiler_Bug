{"sha": "ae21215e5c1d35711ff7a275bebb255525e83b5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUyMTIxNWU1YzFkMzU3MTFmZjdhMjc1YmViYjI1NTUyNWU4M2I1Yg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2005-12-30T05:44:16Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2005-12-30T05:44:16Z"}, "message": "re PR middle-end/25586 (FAIL: gfortran.dg/cray_pointers_2.f90  at -O2 and above)\n\n\tPR fortran/25586\n\t* pa.md: Remove REG_POINTER check from REG+REG peephole2 floating-point\n\tstore patterns.\n\nFrom-SVN: r109166", "tree": {"sha": "3bca3da65e44d136142e93b2589d958d7c8c8fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bca3da65e44d136142e93b2589d958d7c8c8fbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae21215e5c1d35711ff7a275bebb255525e83b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae21215e5c1d35711ff7a275bebb255525e83b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae21215e5c1d35711ff7a275bebb255525e83b5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae21215e5c1d35711ff7a275bebb255525e83b5b/comments", "author": null, "committer": null, "parents": [{"sha": "3bc77af76f84a59f1d1f41084ace8ac457ad9486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc77af76f84a59f1d1f41084ace8ac457ad9486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bc77af76f84a59f1d1f41084ace8ac457ad9486"}], "stats": {"total": 90, "additions": 48, "deletions": 42}, "files": [{"sha": "a62178dd99710880b9d231f780afa2bf27b23fdc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae21215e5c1d35711ff7a275bebb255525e83b5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae21215e5c1d35711ff7a275bebb255525e83b5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae21215e5c1d35711ff7a275bebb255525e83b5b", "patch": "@@ -1,3 +1,9 @@\n+2005-12-30  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR fortran/25586\n+\t* pa.md: Remove REG_POINTER check from REG+REG peephole2 floating-point\n+\tstore patterns.\n+\n 2005-12-29  Mike Stump  <mrs@apple.com>\n \n \t* doc/invoke.texi (Objective-C and Objective-C++ Dialect Options"}, {"sha": "556c941a5a67b907d8db162c4a6fccadbdc04ab8", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae21215e5c1d35711ff7a275bebb255525e83b5b/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae21215e5c1d35711ff7a275bebb255525e83b5b/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=ae21215e5c1d35711ff7a275bebb255525e83b5b", "patch": "@@ -2421,9 +2421,9 @@\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n-   && REG_OK_FOR_BASE_P (operands[1])\n-   && (TARGET_NO_SPACE_REGS\n-       || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_INDEX_P (operands[1])\n+   && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SI (plus:SI (match_dup 1) (match_dup 2)))\n \t(match_dup 3))\n@@ -2438,9 +2438,9 @@\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && (TARGET_NO_SPACE_REGS\n-       || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_BASE_P (operands[1])\n+   && REG_OK_FOR_INDEX_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SI (plus:SI (match_dup 2) (match_dup 1)))\n \t(match_dup 3))\n@@ -2456,9 +2456,9 @@\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[1])\n-   && (TARGET_NO_SPACE_REGS\n-       || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_INDEX_P (operands[1])\n+   && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SI (plus:DI (match_dup 1) (match_dup 2)))\n \t(match_dup 3))\n@@ -2474,9 +2474,9 @@\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && (TARGET_NO_SPACE_REGS\n-       || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_BASE_P (operands[1])\n+   && REG_OK_FOR_INDEX_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SI (plus:DI (match_dup 2) (match_dup 1)))\n \t(match_dup 3))\n@@ -3948,9 +3948,9 @@\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n-   && REG_OK_FOR_BASE_P (operands[1])\n-   && (TARGET_NO_SPACE_REGS\n-       || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_INDEX_P (operands[1])\n+   && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:SI (match_dup 1) (match_dup 2)))\n \t(match_dup 3))\n@@ -3965,9 +3965,9 @@\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && (TARGET_NO_SPACE_REGS\n-       || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_BASE_P (operands[1])\n+   && REG_OK_FOR_INDEX_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:SI (match_dup 2) (match_dup 1)))\n \t(match_dup 3))\n@@ -3983,9 +3983,9 @@\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[1])\n-   && (TARGET_NO_SPACE_REGS\n-       || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_INDEX_P (operands[1])\n+   && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:DI (match_dup 1) (match_dup 2)))\n \t(match_dup 3))\n@@ -4001,9 +4001,9 @@\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && (TARGET_NO_SPACE_REGS\n-       || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_BASE_P (operands[1])\n+   && REG_OK_FOR_INDEX_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:DI (match_dup 2) (match_dup 1)))\n \t(match_dup 3))\n@@ -4253,9 +4253,9 @@\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[1])\n-   && (TARGET_NO_SPACE_REGS\n-       || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_INDEX_P (operands[1])\n+   && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DI (plus:DI (match_dup 1) (match_dup 2)))\n \t(match_dup 3))\n@@ -4271,9 +4271,9 @@\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && (TARGET_NO_SPACE_REGS\n-       || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_BASE_P (operands[1])\n+   && REG_OK_FOR_INDEX_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DI (plus:DI (match_dup 2) (match_dup 1)))\n \t(match_dup 3))\n@@ -4486,9 +4486,9 @@\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n-   && REG_OK_FOR_BASE_P (operands[1])\n-   && (TARGET_NO_SPACE_REGS\n-       || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_INDEX_P (operands[1])\n+   && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SF (plus:SI (match_dup 1) (match_dup 2)))\n \t(match_dup 3))\n@@ -4503,9 +4503,9 @@\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && (TARGET_NO_SPACE_REGS\n-       || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_BASE_P (operands[1])\n+   && REG_OK_FOR_INDEX_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SF (plus:SI (match_dup 2) (match_dup 1)))\n \t(match_dup 3))\n@@ -4521,9 +4521,9 @@\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[1])\n-   && (TARGET_NO_SPACE_REGS\n-       || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_INDEX_P (operands[1])\n+   && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SF (plus:DI (match_dup 1) (match_dup 2)))\n \t(match_dup 3))\n@@ -4539,9 +4539,9 @@\n   \"!TARGET_SOFT_FLOAT\n    && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n-   && REG_OK_FOR_BASE_P (operands[2])\n-   && (TARGET_NO_SPACE_REGS\n-       || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n+   && TARGET_NO_SPACE_REGS\n+   && REG_OK_FOR_BASE_P (operands[1])\n+   && REG_OK_FOR_INDEX_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SF (plus:DI (match_dup 2) (match_dup 1)))\n \t(match_dup 3))"}]}