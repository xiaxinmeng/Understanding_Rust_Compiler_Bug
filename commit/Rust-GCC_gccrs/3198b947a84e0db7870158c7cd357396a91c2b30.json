{"sha": "3198b947a84e0db7870158c7cd357396a91c2b30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE5OGI5NDdhODRlMGRiNzg3MDE1OGM3Y2QzNTczOTZhOTFjMmIzMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-01-03T19:41:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-03T19:41:06Z"}, "message": "* simplify-rtx.c (simplify_binary_operation): Handle VEC_CONCAT.\n\nFrom-SVN: r92861", "tree": {"sha": "547100dbbf027f84c7bcd3cfd648ba2e4d3f7248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/547100dbbf027f84c7bcd3cfd648ba2e4d3f7248"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3198b947a84e0db7870158c7cd357396a91c2b30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3198b947a84e0db7870158c7cd357396a91c2b30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3198b947a84e0db7870158c7cd357396a91c2b30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3198b947a84e0db7870158c7cd357396a91c2b30/comments", "author": null, "committer": null, "parents": [{"sha": "cde7853d20991c6fd1d5294ebf7b5b524df25608", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde7853d20991c6fd1d5294ebf7b5b524df25608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cde7853d20991c6fd1d5294ebf7b5b524df25608"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "ec06ccbdf5a526ce307a2d3695d96fbc6922d6c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3198b947a84e0db7870158c7cd357396a91c2b30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3198b947a84e0db7870158c7cd357396a91c2b30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3198b947a84e0db7870158c7cd357396a91c2b30", "patch": "@@ -1,11 +1,14 @@\n+2005-01-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* simplify-rtx.c (simplify_binary_operation): Handle VEC_CONCAT.\n+\n 2005-01-03  Uros Bizjak  <uros@kss-loka.si>\n \n \tPR target/19236\n \t* config/i386/i386.c (log1psf2): Change mode of operands[0,1]\n \tto SFmode.\n \t(log1pdf2): Change mode of operands[0,1] to DFmode.\n \n-\n 2005-01-03  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* config/sparc/sparc.h (SPARC_RELAXED_ORDERING): Define to false."}, {"sha": "6525e1604aafbc4f8442ec3850efd6b10bb79df5", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 38, "deletions": 6, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3198b947a84e0db7870158c7cd357396a91c2b30/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3198b947a84e0db7870158c7cd357396a91c2b30/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=3198b947a84e0db7870158c7cd357396a91c2b30", "patch": "@@ -1190,14 +1190,11 @@ simplify_binary_operation (enum rtx_code code, enum machine_mode mode,\n       && GET_CODE (trueop0) == CONST_VECTOR\n       && GET_CODE (trueop1) == CONST_VECTOR)\n     {\n-      int elt_size = GET_MODE_SIZE (GET_MODE_INNER (mode));\n-      unsigned n_elts = (GET_MODE_SIZE (mode) / elt_size);\n+      unsigned n_elts = GET_MODE_NUNITS (mode);\n       enum machine_mode op0mode = GET_MODE (trueop0);\n-      int op0_elt_size = GET_MODE_SIZE (GET_MODE_INNER (op0mode));\n-      unsigned op0_n_elts = (GET_MODE_SIZE (op0mode) / op0_elt_size);\n+      unsigned op0_n_elts = GET_MODE_NUNITS (op0mode);\n       enum machine_mode op1mode = GET_MODE (trueop1);\n-      int op1_elt_size = GET_MODE_SIZE (GET_MODE_INNER (op1mode));\n-      unsigned op1_n_elts = (GET_MODE_SIZE (op1mode) / op1_elt_size);\n+      unsigned op1_n_elts = GET_MODE_NUNITS (op1mode);\n       rtvec v = rtvec_alloc (n_elts);\n       unsigned int i;\n \n@@ -1216,6 +1213,41 @@ simplify_binary_operation (enum rtx_code code, enum machine_mode mode,\n       return gen_rtx_CONST_VECTOR (mode, v);\n     }\n \n+  if (VECTOR_MODE_P (mode)\n+      && code == VEC_CONCAT\n+      && CONSTANT_P (trueop0) && CONSTANT_P (trueop1))\n+    {\n+      unsigned n_elts = GET_MODE_NUNITS (mode);\n+      rtvec v = rtvec_alloc (n_elts);\n+\n+      gcc_assert (n_elts >= 2);\n+      if (n_elts == 2)\n+\t{\n+\t  gcc_assert (GET_CODE (trueop0) != CONST_VECTOR);\n+\t  gcc_assert (GET_CODE (trueop1) != CONST_VECTOR);\n+\n+\t  RTVEC_ELT (v, 0) = trueop0;\n+\t  RTVEC_ELT (v, 1) = trueop1;\n+\t}\n+      else\n+\t{\n+\t  unsigned op0_n_elts = GET_MODE_NUNITS (GET_MODE (trueop0));\n+\t  unsigned op1_n_elts = GET_MODE_NUNITS (GET_MODE (trueop1));\n+\t  unsigned i;\n+\n+\t  gcc_assert (GET_CODE (trueop0) == CONST_VECTOR);\n+\t  gcc_assert (GET_CODE (trueop1) == CONST_VECTOR);\n+\t  gcc_assert (op0_n_elts + op1_n_elts == n_elts);\n+\n+\t  for (i = 0; i < op0_n_elts; ++i)\n+\t    RTVEC_ELT (v, i) = XVECEXP (trueop0, 0, i);\n+\t  for (i = 0; i < op1_n_elts; ++i)\n+\t    RTVEC_ELT (v, op0_n_elts+i) = XVECEXP (trueop1, 0, i);\n+\t}\n+\n+      return gen_rtx_CONST_VECTOR (mode, v);\n+    }\n+\n   if (GET_MODE_CLASS (mode) == MODE_FLOAT\n       && GET_CODE (trueop0) == CONST_DOUBLE\n       && GET_CODE (trueop1) == CONST_DOUBLE"}]}