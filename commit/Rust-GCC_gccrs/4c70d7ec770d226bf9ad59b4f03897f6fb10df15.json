{"sha": "4c70d7ec770d226bf9ad59b4f03897f6fb10df15", "node_id": "C_kwDOANBUbNoAKDRjNzBkN2VjNzcwZDIyNmJmOWFkNTliNGYwMzg5N2Y2ZmIxMGRmMTU", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-17T13:23:18Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-17T13:28:25Z"}, "message": "Support block expressions within macros\n\nWhen we parse DelimTokenTree's the delimiter's are synthesised when we\nask for the token stream which results in tokens lacking location info.\nThis removes the hack by adding the actual tokens from the lexer into the\nstream.", "tree": {"sha": "8b7516086e531504e04ad03420af4668be0b29ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b7516086e531504e04ad03420af4668be0b29ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c70d7ec770d226bf9ad59b4f03897f6fb10df15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c70d7ec770d226bf9ad59b4f03897f6fb10df15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c70d7ec770d226bf9ad59b4f03897f6fb10df15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c70d7ec770d226bf9ad59b4f03897f6fb10df15/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19c5dde80f28c67f657775f770922783faff4b89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c5dde80f28c67f657775f770922783faff4b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19c5dde80f28c67f657775f770922783faff4b89"}], "stats": {"total": 64, "additions": 19, "deletions": 45}, "files": [{"sha": "3a1e2956689fa0437999b84770584d8eac11dd44", "filename": "gcc/rust/ast/rust-ast-full-test.cc", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c70d7ec770d226bf9ad59b4f03897f6fb10df15/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c70d7ec770d226bf9ad59b4f03897f6fb10df15/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-full-test.cc?ref=4c70d7ec770d226bf9ad59b4f03897f6fb10df15", "patch": "@@ -4387,14 +4387,6 @@ std::vector<std::unique_ptr<Token> >\n DelimTokenTree::to_token_stream () const\n {\n   std::vector<std::unique_ptr<Token> > tokens;\n-\n-  // simulate presence of delimiters\n-  const_TokenPtr left_paren\n-    = Rust::Token::make (left_delim_type_tok_token_id (delim_type),\n-\t\t\t Linemap::unknown_location ());\n-  tokens.push_back (\n-    std::unique_ptr<Token> (new Token (std::move (left_paren))));\n-\n   for (const auto &tree : token_trees)\n     {\n       std::vector<std::unique_ptr<Token> > stream = tree->to_token_stream ();\n@@ -4403,14 +4395,7 @@ DelimTokenTree::to_token_stream () const\n \t\t     std::make_move_iterator (stream.end ()));\n     }\n \n-  const_TokenPtr right_paren\n-    = Rust::Token::make (right_delim_type_tok_token_id (delim_type),\n-\t\t\t Linemap::unknown_location ());\n-  tokens.push_back (\n-    std::unique_ptr<Token> (new Token (std::move (right_paren))));\n-\n   tokens.shrink_to_fit ();\n-\n   return tokens;\n }\n "}, {"sha": "3e7faf553864aeb34df8cc2f7c314a114dd846e6", "filename": "gcc/rust/ast/rust-ast.h", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c70d7ec770d226bf9ad59b4f03897f6fb10df15/gcc%2Frust%2Fast%2Frust-ast.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c70d7ec770d226bf9ad59b4f03897f6fb10df15/gcc%2Frust%2Fast%2Frust-ast.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast.h?ref=4c70d7ec770d226bf9ad59b4f03897f6fb10df15", "patch": "@@ -778,36 +778,6 @@ class DelimTokenTree : public TokenTree, public AttrInput\n   }\n \n   DelimType get_delim_type () const { return delim_type; }\n-\n-  static TokenId left_delim_type_tok_token_id (DelimType delim_type)\n-  {\n-    switch (delim_type)\n-      {\n-      case PARENS:\n-\treturn LEFT_PAREN;\n-      case SQUARE:\n-\treturn LEFT_SQUARE;\n-      case CURLY:\n-\treturn LEFT_CURLY;\n-      default:\n-\tgcc_unreachable ();\n-      }\n-  }\n-\n-  static TokenId right_delim_type_tok_token_id (DelimType delim_type)\n-  {\n-    switch (delim_type)\n-      {\n-      case PARENS:\n-\treturn RIGHT_PAREN;\n-      case SQUARE:\n-\treturn RIGHT_SQUARE;\n-      case CURLY:\n-\treturn RIGHT_CURLY;\n-      default:\n-\tgcc_unreachable ();\n-      }\n-  }\n };\n \n /* Forward decl - definition moved to rust-expr.h as it requires LiteralExpr to"}, {"sha": "2ea42c746633454bcb98ff8cbd1e8e11b0b7442f", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c70d7ec770d226bf9ad59b4f03897f6fb10df15/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c70d7ec770d226bf9ad59b4f03897f6fb10df15/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=4c70d7ec770d226bf9ad59b4f03897f6fb10df15", "patch": "@@ -905,6 +905,9 @@ Parser<ManagedTokenSource>::parse_delim_token_tree ()\n \n   // parse actual token tree vector - 0 or more\n   std::vector<std::unique_ptr<AST::TokenTree>> token_trees_in_tree;\n+  auto delim_open\n+    = std::unique_ptr<AST::Token> (new AST::Token (std::move (t)));\n+  token_trees_in_tree.push_back (std::move (delim_open));\n \n   // repeat loop until finding the matching delimiter\n   t = lexer.peek_token ();\n@@ -929,6 +932,9 @@ Parser<ManagedTokenSource>::parse_delim_token_tree ()\n       // lexer.skip_token();\n       t = lexer.peek_token ();\n     }\n+  auto delim_close\n+    = std::unique_ptr<AST::Token> (new AST::Token (std::move (t)));\n+  token_trees_in_tree.push_back (std::move (delim_close));\n \n   AST::DelimTokenTree token_tree (delim_type, std::move (token_trees_in_tree),\n \t\t\t\t  initial_loc);"}, {"sha": "822665494a4519a883a957f935528d9b926a8103", "filename": "gcc/testsuite/rust/execute/torture/macros5.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c70d7ec770d226bf9ad59b4f03897f6fb10df15/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c70d7ec770d226bf9ad59b4f03897f6fb10df15/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros5.rs?ref=4c70d7ec770d226bf9ad59b4f03897f6fb10df15", "patch": "@@ -0,0 +1,13 @@\n+macro_rules! add {\n+    ($a:expr,$b:expr) => {{\n+        $a + $b\n+    }};\n+}\n+\n+fn test() -> i32 {\n+    add!(1, 2)\n+}\n+\n+fn main() -> i32 {\n+    test() - 3\n+}"}]}