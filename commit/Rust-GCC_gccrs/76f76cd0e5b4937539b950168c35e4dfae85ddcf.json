{"sha": "76f76cd0e5b4937539b950168c35e4dfae85ddcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZmNzZjZDBlNWI0OTM3NTM5Yjk1MDE2OGMzNWU0ZGZhZTg1ZGRjZg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-03-04T18:16:32Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-03-04T18:16:32Z"}, "message": "re PR tree-optimization/43164 (ice in completely_scalarize_record, at tree-sra.c:85)\n\n2010-03-04  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/43164\n\tPR tree-optimization/43191\n\t* tree-sra.c (type_consists_of_records_p): Reject records with\n\tzero-size bit-fields at the end.\n\n\t* testsuite/gcc.c-torture/compile/pr43164.c: New test.\n\t* testsuite/gcc.c-torture/compile/pr43191.c: Likewise.\n\nFrom-SVN: r157232", "tree": {"sha": "5e8f94867eced6d80a37c527c54cbb6595b332c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e8f94867eced6d80a37c527c54cbb6595b332c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76f76cd0e5b4937539b950168c35e4dfae85ddcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f76cd0e5b4937539b950168c35e4dfae85ddcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f76cd0e5b4937539b950168c35e4dfae85ddcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f76cd0e5b4937539b950168c35e4dfae85ddcf/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83ff92fb26e8ca8c4552fd0e038a15b64c2a0cea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83ff92fb26e8ca8c4552fd0e038a15b64c2a0cea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83ff92fb26e8ca8c4552fd0e038a15b64c2a0cea"}], "stats": {"total": 88, "additions": 86, "deletions": 2}, "files": [{"sha": "13974184acd4e2bad1eb3096dc30a38db86317b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76f76cd0e5b4937539b950168c35e4dfae85ddcf", "patch": "@@ -1,3 +1,10 @@\n+2010-03-04  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/43164\n+\tPR tree-optimization/43191\n+\t* tree-sra.c (type_consists_of_records_p): Reject records with\n+\tzero-size bit-fields at the end.\n+\n 2010-03-04  Mike Stump  <mikestump@comcast.net>\n \n \t* Makefile.in (TAGS): Remove *.y."}, {"sha": "ca2b87539efc9b8ee2f9033aca4ccc5618a57d03", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=76f76cd0e5b4937539b950168c35e4dfae85ddcf", "patch": "@@ -1,3 +1,10 @@\n+2010-03-04  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/43164\n+\tPR tree-optimization/43191\n+\t* gcc.c-torture/compile/pr43164.c: New test.\n+\t* gcc.c-torture/compile/pr43191.c: Likewise.\n+\n 2010-03-04  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/43244"}, {"sha": "7e3e074bbccd7024ffc2179159ca28eb4c3ec682", "filename": "gcc/testsuite/gcc.c-torture/compile/pr43164.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43164.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43164.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43164.c?ref=76f76cd0e5b4937539b950168c35e4dfae85ddcf", "patch": "@@ -0,0 +1,16 @@\n+struct S0\n+{\n+  unsigned char f0;\n+  int:0;\n+};\n+\n+struct S1\n+{\n+  struct S0 f0;\n+};\n+\n+struct S1 func_34 (void)\n+{\n+  struct S1 l_221 = { { 1 } };\n+  return l_221;\n+}"}, {"sha": "9c8d1444cf9742b47ebf8fcea0c09731b9e4c401", "filename": "gcc/testsuite/gcc.c-torture/compile/pr43191.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43191.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43191.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43191.c?ref=76f76cd0e5b4937539b950168c35e4dfae85ddcf", "patch": "@@ -0,0 +1,46 @@\n+struct S0\n+{\n+};\n+\n+struct S1\n+{\n+  unsigned f0:27;\n+  const unsigned:0;\n+};\n+\n+struct S2\n+{\n+  unsigned f2:1;\n+};\n+\n+unsigned char g_4[1][8][3][1][1][1];\n+unsigned char *g_17;\n+unsigned char **g_16[1][10][7];\n+\n+struct S2 g_35 = {\n+  0\n+};\n+\n+struct S2 *g_34 = &g_35;\n+\n+struct S1 func_86 (unsigned char p_87, struct S2 **p_89)\n+{\n+  struct S1 l_92[6][8][1][1] = {\n+    16143586\n+  }\n+  ;\n+  return l_92[0][0][0][0];\n+}\n+\n+void func_28 (struct S1 p_30, const struct S1 p_32)\n+{\n+}\n+\n+void func_70 (unsigned char p_72)\n+{\n+  unsigned char *const *l_93 = &g_17;\n+  struct S2 **l_94;\n+  unsigned char *const *l_97 = &g_17;\n+  func_28 (func_86 (p_72, 0),\n+           func_86 (p_72, &g_34));\n+}"}, {"sha": "d32ef387d19e021bc769717c099be94eb8f72abb", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f76cd0e5b4937539b950168c35e4dfae85ddcf/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=76f76cd0e5b4937539b950168c35e4dfae85ddcf", "patch": "@@ -802,13 +802,15 @@ create_access (tree expr, gimple stmt, bool write)\n \n \n /* Return true iff TYPE is a RECORD_TYPE with fields that are either of gimple\n-   register types or (recursively) records with only these two kinds of\n-   fields.  */\n+   register types or (recursively) records with only these two kinds of fields.\n+   It also returns false if any of these records has a zero-size field as its\n+   last field.  */\n \n static bool\n type_consists_of_records_p (tree type)\n {\n   tree fld;\n+  bool last_fld_has_zero_size = false;\n \n   if (TREE_CODE (type) != RECORD_TYPE)\n     return false;\n@@ -821,7 +823,13 @@ type_consists_of_records_p (tree type)\n \tif (!is_gimple_reg_type (ft)\n \t    && !type_consists_of_records_p (ft))\n \t  return false;\n+\n+\tlast_fld_has_zero_size = tree_low_cst (DECL_SIZE (fld), 1) == 0;\n       }\n+\n+  if (last_fld_has_zero_size)\n+    return false;\n+\n   return true;\n }\n "}]}