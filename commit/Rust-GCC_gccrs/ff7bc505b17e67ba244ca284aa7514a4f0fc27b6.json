{"sha": "ff7bc505b17e67ba244ca284aa7514a4f0fc27b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY3YmM1MDViMTdlNjdiYTI0NGNhMjg0YWE3NTE0YTRmMGZjMjdiNg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-09-07T16:29:46Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-09-07T16:30:25Z"}, "message": "libgomp.texi: Extend OpenMP 5.0 Implementation Status\n\nlibgomp/\n\t* libgomp.texi (OpenMP Implementation Status): Extend\n\tOpenMP 5.0 section.\n\t(OpenACC Profiling Interface): Fix typo.", "tree": {"sha": "360cabba7da18213088331ef213a4c1a8802e84e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/360cabba7da18213088331ef213a4c1a8802e84e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff7bc505b17e67ba244ca284aa7514a4f0fc27b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff7bc505b17e67ba244ca284aa7514a4f0fc27b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff7bc505b17e67ba244ca284aa7514a4f0fc27b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff7bc505b17e67ba244ca284aa7514a4f0fc27b6/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "020e2db0a806d8d8250776734a4ad6263a75cb06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/020e2db0a806d8d8250776734a4ad6263a75cb06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/020e2db0a806d8d8250776734a4ad6263a75cb06"}], "stats": {"total": 96, "additions": 93, "deletions": 3}, "files": [{"sha": "640851826209cb3621331edfa49aba8beee9862b", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 93, "deletions": 3, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff7bc505b17e67ba244ca284aa7514a4f0fc27b6/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff7bc505b17e67ba244ca284aa7514a4f0fc27b6/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=ff7bc505b17e67ba244ca284aa7514a4f0fc27b6", "patch": "@@ -172,8 +172,98 @@ The OpenMP 4.5 specification is fully supported.\n @node OpenMP 5.0\n @section OpenMP 5.0\n \n-Partial support of the OpenMP 5.0 specification. The OMPT and the OMPD\n-interfaces are unsupported.\n+@unnumberedsubsec New features listed in Appendix B of the OpenMP specification\n+@c This list is sorted as in OpenMP 5.1's B.3 not as in OpenMP 5.0's B.2\n+\n+@multitable @columnfractions .60 .10 .25\n+@headitem Description @tab Status @tab Comments\n+@item Array shaping @tab N @tab\n+@item Array sections with non-unit strides in C and C++ @tab N @tab\n+@item Iterators @tab Y @tab\n+@item @code{metadirective} directive @tab N @tab\n+@item @code{declare variant} directive\n+      @tab P @tab Only C and C++, simd traits not handled correctly\n+@item @emph{target-offload-var} ICV and @code{OMP_TARGET_OFFLOAD}\n+      env variable @tab Y @tab\n+@item Nested-parallel changes to @emph{max-active-levels-var} ICV @tab Y @tab\n+@item @code{requires} directive @tab P\n+      @tab Only fulfillable requirement is @code{atomic_default_mem_order}\n+@item @code{teams} construct outside an enclosing target region @tab Y @tab\n+@item Non-rectangular loop nests @tab Y @tab\n+@item @code{!=} as relational-op in canonical loop form for C/C++ @tab Y @tab\n+@item @code{nonmonotonic} as default loop schedule modifier for worksharing-loop\n+      constructs @tab Y @tab\n+@item Collapse of associated loops that are imperfectly nested loops @tab N @tab\n+@item Clauses @code{if}, @code{nontemporal} and @code{order(concurrent)} in\n+      @code{simd} construct @tab Y @tab\n+@item @code{atomic} constructs in @code{simd} @tab Y @tab\n+@item @code{loop} construct @tab Y @tab\n+@item @code{order(concurrent)} clause @tab Y @tab\n+@item @code{scan} directive and @code{in_scan} modifier for the\n+      @code{reduction} clause @tab Y @tab\n+@item @code{in_reduction} clause on @code{task} constructs @tab Y @tab\n+@item @code{in_reduction} clause on @code{target} constructs @tab P\n+      @tab Only C/C++, @code{nowait} only stub\n+@item @code{task_reduction} clause with @code{taskgroup} @tab Y @tab\n+@item @code{task} modifier to @code{reduction} clause @tab Y @tab\n+@item @code{affinity} clause to @code{task} construct @tab Y @tab Stub only\n+@item @code{detach} clause to @code{task} construct @tab Y @tab\n+@item @code{omp_fulfill_event} runtime routine @tab Y @tab\n+@item @code{reduction} and @code{in_reduction} clauses on @code{taskloop}\n+      and @code{taskloop simd} constructs @tab Y @tab\n+@item @code{taskloop} construct cancelable by @code{cancel} construct\n+      @tab Y @tab\n+@item @code{mutexinouset} @emph{dependence-type} for @code{depend} clause\n+      @tab Y @tab\n+@item Predefined memory spaces, memory allocators, allocator traits\n+      @tab Y @tab Some are only stubs\n+@item Memory management routines @tab Y @tab\n+@item @code{allocate} directive @tab N @tab\n+@item @code{allocate} clause @tab P @tab initial support in C/C++ only\n+@item @code{use_device_addr} clause on @code{target data} @tab Y @tab\n+@item @code{ancestor} modifier on @code{device} clause\n+      @tab P @tab Reverse offload unsupported\n+@item Implicit declare target directive @tab Y @tab\n+@item Discontiguous array section with @code{target update} construct\n+      @tab N @tab\n+@item C/C++'s lvalue expressions in @code{to}, @code{from}\n+      and @code{map} clauses @tab N @tab\n+@item C/C++'s lvalue expressions in @code{depend} clauses @tab Y @tab\n+@item Nested @code{declare target} directive @tab Y @tab\n+@item Combined @code{master} constructs @tab Y @tab\n+@item @code{depend} clause on @code{taskwait} @tab Y @tab\n+@item Weak memory ordering clauses on @code{atomic} and @code{flush} construct\n+      @tab Y @tab\n+@item @code{hint} clause on the @code{atomic} construct @tab Y @tab Stub only\n+@item @code{depobj} construct and depend objects  @tab Y @tab\n+@item Lock hints were renamed to synchronization hints @tab Y @tab\n+@item @code{conditional} modifier to @code{lastprivate} clause @tab Y @tab\n+@item Map-order clarifications @tab P @tab\n+@item @code{close} @emph{map-type-modifier} @tab Y @tab\n+@item Mapping C/C++ pointer variables and to assign the address of\n+      device memory mapped by an array section @tab P @tab\n+@item Mapping of Fortran pointer and allocatable variables, including pointer\n+      and allocatable components of variables\n+      @tab P @tab Mapping of vars with allocatable components unspported\n+@item @code{defaultmap} extensions @tab Y @tab\n+@item @code{declare mapper} directive @tab N @tab\n+@item @code{omp_get_supported_active_levels} routine @tab Y @tab\n+@item Runtime routines and environment variables to display runtime thread\n+      affinity information @tab Y @tab\n+@item @code{omp_pause_resource} and @code{omp_pause_resource_all} runtime\n+      routines @tab Y @tab\n+@item @code{omp_get_device_num} runtime routine @tab Y @tab\n+@item OMPT interface @tab N @tab\n+@item OMPD interface @tab N @tab\n+@end multitable\n+\n+@unnumberedsubsec Other new OpenMP 5.0 features\n+\n+@multitable @columnfractions .60 .10 .25\n+@headitem Description @tab Status @tab Comments\n+@item Supporting C++'s range-based for loop @tab Y @tab\n+@end multitable\n+\n \n @node OpenMP 5.1\n @section OpenMP 5.1\n@@ -3853,7 +3943,7 @@ Remarks about certain event types:\n @c See 'DEVICE_INIT_INSIDE_COMPUTE_CONSTRUCT' in\n @c 'libgomp.oacc-c-c++-common/acc_prof-kernels-1.c',\n @c 'libgomp.oacc-c-c++-common/acc_prof-parallel-1.c'.\n-Whan a compute construct triggers implicit\n+When a compute construct triggers implicit\n @code{acc_ev_device_init_start} and @code{acc_ev_device_init_end}\n events, they currently aren't @emph{nested within} the corresponding\n @code{acc_ev_compute_construct_start} and"}]}