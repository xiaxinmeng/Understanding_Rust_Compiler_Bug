{"sha": "683be2f77b3ce4db09e1175c1de4ec7f26f803e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgzYmUyZjc3YjNjZTRkYjA5ZTExNzVjMWRlNGVjN2YyNmY4MDNlNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-05-11T02:54:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-05-11T02:54:52Z"}, "message": "decl.c (cp_finish_decl): Don't instantiate auto variable.\n\n\t* decl.c (cp_finish_decl): Don't instantiate auto variable.\n\n\t(check_static_variable_definition): Allow auto.\n\t* constexpr.c (ensure_literal_type_for_constexpr_object): Likewise.\n\nFrom-SVN: r260150", "tree": {"sha": "88252de62c5b24bace7e3d670e293b2580edb27f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88252de62c5b24bace7e3d670e293b2580edb27f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/683be2f77b3ce4db09e1175c1de4ec7f26f803e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683be2f77b3ce4db09e1175c1de4ec7f26f803e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/683be2f77b3ce4db09e1175c1de4ec7f26f803e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683be2f77b3ce4db09e1175c1de4ec7f26f803e6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a2e98ce726393a48c818d097ba021baa7b6633b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a2e98ce726393a48c818d097ba021baa7b6633b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a2e98ce726393a48c818d097ba021baa7b6633b"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "920bed4ed063b047c560c11760db050cce8af7a1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683be2f77b3ce4db09e1175c1de4ec7f26f803e6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683be2f77b3ce4db09e1175c1de4ec7f26f803e6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=683be2f77b3ce4db09e1175c1de4ec7f26f803e6", "patch": "@@ -1,4 +1,8 @@\n-2018-05-09  Jason Merrill  <jason@redhat.com>\n+2018-05-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (cp_finish_decl): Don't instantiate auto variable.\n+\t(check_static_variable_definition): Allow auto.\n+\t* constexpr.c (ensure_literal_type_for_constexpr_object): Likewise.\n \n \t* cp-tree.h (DECL_CONSTRUCTOR_P): Use DECL_CXX_CONSTRUCTOR_P.\n \t(DECL_DESTRUCTOR_P): Use DECL_CXX_DESTRUCTOR_P."}, {"sha": "d9a4cab9f376e006ffbacb8dd53ac69944ae933c", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683be2f77b3ce4db09e1175c1de4ec7f26f803e6/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683be2f77b3ce4db09e1175c1de4ec7f26f803e6/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=683be2f77b3ce4db09e1175c1de4ec7f26f803e6", "patch": "@@ -91,6 +91,8 @@ ensure_literal_type_for_constexpr_object (tree decl)\n       if (CLASS_TYPE_P (stype) && !COMPLETE_TYPE_P (complete_type (stype)))\n \t/* Don't complain here, we'll complain about incompleteness\n \t   when we try to initialize the variable.  */;\n+      else if (type_uses_auto (type))\n+\t/* We don't know the actual type yet.  */;\n       else if (!literal_type_p (type))\n \t{\n \t  if (DECL_DECLARED_CONSTEXPR_P (decl))"}, {"sha": "20ca28fc87887c8e45800ed04f8299d07a06e33b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683be2f77b3ce4db09e1175c1de4ec7f26f803e6/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683be2f77b3ce4db09e1175c1de4ec7f26f803e6/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=683be2f77b3ce4db09e1175c1de4ec7f26f803e6", "patch": "@@ -6803,24 +6803,18 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n       && (DECL_INITIAL (decl) || init))\n     DECL_INITIALIZED_IN_CLASS_P (decl) = 1;\n \n+  /* Do auto deduction unless decl is a function or an uninstantiated\n+     template specialization.  */\n   if (TREE_CODE (decl) != FUNCTION_DECL\n+      && !(init == NULL_TREE\n+\t   && DECL_LANG_SPECIFIC (decl)\n+\t   && DECL_TEMPLATE_INSTANTIATION (decl)\n+\t   && !DECL_TEMPLATE_INSTANTIATED (decl))\n       && (auto_node = type_uses_auto (type)))\n     {\n       tree d_init;\n       if (init == NULL_TREE)\n-\t{\n-\t  if (DECL_LANG_SPECIFIC (decl)\n-\t      && DECL_TEMPLATE_INSTANTIATION (decl)\n-\t      && !DECL_TEMPLATE_INSTANTIATED (decl))\n-\t    {\n-\t      /* init is null because we're deferring instantiating the\n-\t\t initializer until we need it.  Well, we need it now.  */\n-\t      instantiate_decl (decl, /*defer_ok*/true, /*expl*/false);\n-\t      return;\n-\t    }\n-\n-\t  gcc_assert (CLASS_PLACEHOLDER_TEMPLATE (auto_node));\n-\t}\n+\tgcc_assert (CLASS_PLACEHOLDER_TEMPLATE (auto_node));\n       d_init = init;\n       if (d_init)\n \t{\n@@ -9368,6 +9362,7 @@ check_static_variable_definition (tree decl, tree type)\n      in check_initializer.  Similarly for inline static data members.  */\n   if (DECL_P (decl)\n       && (DECL_DECLARED_CONSTEXPR_P (decl)\n+\t  || undeduced_auto_decl (decl)\n \t  || DECL_VAR_DECLARED_INLINE_P (decl)))\n     return 0;\n   else if (cxx_dialect >= cxx11 && !INTEGRAL_OR_ENUMERATION_TYPE_P (type))"}, {"sha": "b87bfec3aaa40774d4803a8bf2ff1f88bf88de5f", "filename": "gcc/testsuite/g++.dg/cpp1z/static2.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683be2f77b3ce4db09e1175c1de4ec7f26f803e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fstatic2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683be2f77b3ce4db09e1175c1de4ec7f26f803e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fstatic2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fstatic2.C?ref=683be2f77b3ce4db09e1175c1de4ec7f26f803e6", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options -std=c++17 }\n+\n+template <class T>\n+struct A\n+{\n+  static constexpr auto x = T::x;\n+};\n+\n+struct B;\n+A<B> a;\n+\n+struct B\n+{\n+  static constexpr auto x = 42;\n+};\n+\n+auto x = a.x;"}]}