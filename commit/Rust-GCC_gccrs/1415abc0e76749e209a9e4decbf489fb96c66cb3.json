{"sha": "1415abc0e76749e209a9e4decbf489fb96c66cb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQxNWFiYzBlNzY3NDllMjA5YTllNGRlY2JmNDg5ZmI5NmM2NmNiMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-11-24T11:57:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-11-24T11:57:26Z"}, "message": "re PR tree-optimization/42142 (DCE miscompiles a certain quicksort implementation when optimizing with -O1 or higher)\n\n2009-11-24  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42142\n\t* tree-ssa-dce.c (mark_aliased_reaching_defs_necessary_1):\n\tHandle iv-dependent (non-)kills properly.\n\t(mark_aliased_reaching_defs_necessary): Pass the basic-block\n\tof the reference statement to mark_aliased_reaching_defs_necessary_1.\n\n\t* gcc.c-torture/execute/pr42142.c: New testcase.\n\nFrom-SVN: r154494", "tree": {"sha": "f19106fba13eb4041c815fa48f36964d90f21528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f19106fba13eb4041c815fa48f36964d90f21528"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1415abc0e76749e209a9e4decbf489fb96c66cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1415abc0e76749e209a9e4decbf489fb96c66cb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1415abc0e76749e209a9e4decbf489fb96c66cb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1415abc0e76749e209a9e4decbf489fb96c66cb3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09f0dc451db76a059e097c7cd115d65a86dff66e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f0dc451db76a059e097c7cd115d65a86dff66e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09f0dc451db76a059e097c7cd115d65a86dff66e"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "e13a3b2681edaf27f75923a7d16f3aba68f692d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1415abc0e76749e209a9e4decbf489fb96c66cb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1415abc0e76749e209a9e4decbf489fb96c66cb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1415abc0e76749e209a9e4decbf489fb96c66cb3", "patch": "@@ -1,3 +1,11 @@\n+2009-11-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42142\n+\t* tree-ssa-dce.c (mark_aliased_reaching_defs_necessary_1):\n+\tHandle iv-dependent (non-)kills properly.\n+\t(mark_aliased_reaching_defs_necessary): Pass the basic-block\n+\tof the reference statement to mark_aliased_reaching_defs_necessary_1.\n+\n 2009-11-24  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/42154"}, {"sha": "9e1ff854939f9052a77dca7d7da56acfeccafdc8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1415abc0e76749e209a9e4decbf489fb96c66cb3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1415abc0e76749e209a9e4decbf489fb96c66cb3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1415abc0e76749e209a9e4decbf489fb96c66cb3", "patch": "@@ -1,3 +1,8 @@\n+2009-11-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42142\n+\t* gcc.c-torture/execute/pr42142.c: New testcase.\n+\n 2009-11-24  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/42154"}, {"sha": "43cf57e7b308ae7cfcf8597c66aa23e8247f9991", "filename": "gcc/testsuite/gcc.c-torture/execute/pr42142.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1415abc0e76749e209a9e4decbf489fb96c66cb3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42142.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1415abc0e76749e209a9e4decbf489fb96c66cb3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42142.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42142.c?ref=1415abc0e76749e209a9e4decbf489fb96c66cb3", "patch": "@@ -0,0 +1,26 @@\n+int __attribute__((noinline,noclone))\n+sort(int L)\n+{\n+  int end[2] = { 10, 10, }, i=0, R;\n+  while (i<2)\n+    {\n+      R = end[i];\n+      if (L<R)\n+        {\n+          end[i+1] = 1;\n+          end[i] = 10;\n+          ++i;\n+        }\n+      else\n+        break;\n+    }\n+  return i;\n+}\n+extern void abort (void);\n+int main()\n+{\n+  if (sort (5) != 1)\n+    abort ();\n+  return 0;\n+}\n+"}, {"sha": "056b7b512bb29d66f83d2c637958c63abec73dfb", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1415abc0e76749e209a9e4decbf489fb96c66cb3/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1415abc0e76749e209a9e4decbf489fb96c66cb3/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=1415abc0e76749e209a9e4decbf489fb96c66cb3", "patch": "@@ -495,11 +495,11 @@ static bool chain_ovfl = false;\n    which is based on a non-aliased decl, necessary.  It returns\n    true whenever the defining statement of the current VDEF is\n    a kill for REF, as no dominating may-defs are necessary for REF\n-   anymore.  DATA points to cached get_ref_base_and_extent data for REF.  */\n+   anymore.  DATA points to the basic-block that contains the\n+   stmt that refers to REF.  */\n \n static bool\n-mark_aliased_reaching_defs_necessary_1 (ao_ref *ref, tree vdef,\n-\t\t\t\t\tvoid *data ATTRIBUTE_UNUSED)\n+mark_aliased_reaching_defs_necessary_1 (ao_ref *ref, tree vdef, void *data)\n {\n   gimple def_stmt = SSA_NAME_DEF_STMT (vdef);\n \n@@ -529,6 +529,12 @@ mark_aliased_reaching_defs_necessary_1 (ao_ref *ref, tree vdef,\n \t    }\n \t  /* Or they need to be exactly the same.  */\n \t  else if (ref->ref\n+\t\t   /* Make sure there is no induction variable involved\n+\t\t      in the references (gcc.c-torture/execute/pr42142.c).\n+\t\t      The simplest way is to check if the kill dominates\n+\t\t      the use.  */\n+\t\t   && dominated_by_p (CDI_DOMINATORS, (basic_block) data,\n+\t\t\t\t      gimple_bb (def_stmt))\n \t\t   && operand_equal_p (ref->ref, lhs, 0))\n \t    return true;\n \t}\n@@ -547,7 +553,7 @@ mark_aliased_reaching_defs_necessary (gimple stmt, tree ref)\n   ao_ref_init (&refd, ref);\n   chain = walk_aliased_vdefs (&refd, gimple_vuse (stmt),\n \t\t\t      mark_aliased_reaching_defs_necessary_1,\n-\t\t\t      NULL, NULL);\n+\t\t\t      gimple_bb (stmt), NULL);\n   if (chain > longest_chain)\n     longest_chain = chain;\n   total_chain += chain;"}]}