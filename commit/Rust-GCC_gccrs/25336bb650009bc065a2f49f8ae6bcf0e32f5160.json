{"sha": "25336bb650009bc065a2f49f8ae6bcf0e32f5160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUzMzZiYjY1MDAwOWJjMDY1YTJmNDlmOGFlNmJjZjBlMzJmNTE2MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-01T07:45:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-01T07:45:48Z"}, "message": "simple-object.c (simple_object_internal_write): Handle EINTR and short writes.\n\n2014-04-01  Richard Biener  <rguenther@suse.de>\n\n\tlibiberty/\n\t* simple-object.c (simple_object_internal_write): Handle\n\tEINTR and short writes.\n\nFrom-SVN: r208972", "tree": {"sha": "9fcab2cab3f1eb0edaeb2eb0111accf2731ea14c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fcab2cab3f1eb0edaeb2eb0111accf2731ea14c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25336bb650009bc065a2f49f8ae6bcf0e32f5160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25336bb650009bc065a2f49f8ae6bcf0e32f5160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25336bb650009bc065a2f49f8ae6bcf0e32f5160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25336bb650009bc065a2f49f8ae6bcf0e32f5160/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "75d850f3681a4f907b43983936db7f28a2ec230d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d850f3681a4f907b43983936db7f28a2ec230d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75d850f3681a4f907b43983936db7f28a2ec230d"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "89e9bf953de21ab64d881cd9a1d014177d0f0a20", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25336bb650009bc065a2f49f8ae6bcf0e32f5160/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25336bb650009bc065a2f49f8ae6bcf0e32f5160/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=25336bb650009bc065a2f49f8ae6bcf0e32f5160", "patch": "@@ -1,3 +1,8 @@\n+2014-04-01  Richard Biener  <rguenther@suse.de>\n+\n+\t* simple-object.c (simple_object_internal_write): Handle\n+\tEINTR and short writes.\n+\n 2014-03-28  Richard Biener  <rguenther@suse.de>\n \n \t* simple-object.c (simple_object_internal_read): Handle"}, {"sha": "5d379d053c419cfacf812ba89e60fe93b8d7b73d", "filename": "libiberty/simple-object.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25336bb650009bc065a2f49f8ae6bcf0e32f5160/libiberty%2Fsimple-object.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25336bb650009bc065a2f49f8ae6bcf0e32f5160/libiberty%2Fsimple-object.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object.c?ref=25336bb650009bc065a2f49f8ae6bcf0e32f5160", "patch": "@@ -107,24 +107,33 @@ simple_object_internal_write (int descriptor, off_t offset,\n \t\t\t      const unsigned char *buffer, size_t size,\n \t\t\t      const char **errmsg, int *err)\n {\n-  ssize_t wrote;\n-\n   if (lseek (descriptor, offset, SEEK_SET) < 0)\n     {\n       *errmsg = \"lseek\";\n       *err = errno;\n       return 0;\n     }\n \n-  wrote = write (descriptor, buffer, size);\n-  if (wrote < 0)\n+  do\n     {\n-      *errmsg = \"write\";\n-      *err = errno;\n-      return 0;\n+      ssize_t wrote = write (descriptor, buffer, size);\n+      if (wrote == 0)\n+\tbreak;\n+      else if (wrote > 0)\n+\t{\n+\t  buffer += wrote;\n+\t  size -= wrote;\n+\t}\n+      else if (errno != EINTR)\n+\t{\n+\t  *errmsg = \"write\";\n+\t  *err = errno;\n+\t  return 0;\n+\t}\n     }\n+  while (size > 0);\n \n-  if ((size_t) wrote < size)\n+  if (size > 0)\n     {\n       *errmsg = \"short write\";\n       *err = 0;"}]}