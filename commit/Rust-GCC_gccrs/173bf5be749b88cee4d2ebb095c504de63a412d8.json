{"sha": "173bf5be749b88cee4d2ebb095c504de63a412d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTczYmY1YmU3NDliODhjZWU0ZDJlYmIwOTVjNTA0ZGU2M2E0MTJkOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-04T02:00:26Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-04T02:00:26Z"}, "message": "c-common.c: Fix formatting.\n\n\t* c-common.c: Fix formatting.\n\t* diagnostic.c: Likewise.\n\t* doloop.c: Likewise.\n\t* dwarf2out.c: Likewise.\n\nFrom-SVN: r48526", "tree": {"sha": "4603a0eb9d9696cd03fd3dbd3dcfef09c40dd2fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4603a0eb9d9696cd03fd3dbd3dcfef09c40dd2fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/173bf5be749b88cee4d2ebb095c504de63a412d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173bf5be749b88cee4d2ebb095c504de63a412d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/173bf5be749b88cee4d2ebb095c504de63a412d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173bf5be749b88cee4d2ebb095c504de63a412d8/comments", "author": null, "committer": null, "parents": [{"sha": "0b223645f50b882a994f9a00ae271dd36bd958fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b223645f50b882a994f9a00ae271dd36bd958fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b223645f50b882a994f9a00ae271dd36bd958fc"}], "stats": {"total": 113, "additions": 60, "deletions": 53}, "files": [{"sha": "57b4c66c4f424f600f3004a75f293f3109e30345", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=173bf5be749b88cee4d2ebb095c504de63a412d8", "patch": "@@ -1,3 +1,10 @@\n+2002-01-03  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* c-common.c: Fix formatting.\n+\t* diagnostic.c: Likewise.\n+\t* doloop.c: Likewise.\n+\t* dwarf2out.c: Likewise.\n+\n 2002-01-03  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300.c (output_logical_op): Use 'not.w' instead"}, {"sha": "f5f44877509f98619279694ede18540d07bb17c0", "filename": "gcc/c-common.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=173bf5be749b88cee4d2ebb095c504de63a412d8", "patch": "@@ -281,12 +281,12 @@ c_expand_start_cond (cond, compstmt_count)\n   if (if_stack_space == 0)\n     {\n       if_stack_space = 10;\n-      if_stack = (if_elt *)xmalloc (10 * sizeof (if_elt));\n+      if_stack = (if_elt *) xmalloc (10 * sizeof (if_elt));\n     }\n   else if (if_stack_space == if_stack_pointer)\n     {\n       if_stack_space += 10;\n-      if_stack = (if_elt *)xrealloc (if_stack, if_stack_space * sizeof (if_elt));\n+      if_stack = (if_elt *) xrealloc (if_stack, if_stack_space * sizeof (if_elt));\n     }\n \n   if_stmt = build_stmt (IF_STMT, NULL_TREE, NULL_TREE, NULL_TREE);\n@@ -2298,7 +2298,7 @@ c_alignof_expr (expr)\n       t = size_one_node;\n     }\n   else if (TREE_CODE (expr) == COMPONENT_REF\n-      && TREE_CODE (TREE_OPERAND (expr, 1)) == FIELD_DECL)\n+\t   && TREE_CODE (TREE_OPERAND (expr, 1)) == FIELD_DECL)\n     t = size_int (DECL_ALIGN (TREE_OPERAND (expr, 1)) / BITS_PER_UNIT);\n  \n   else if (TREE_CODE (expr) == INDIRECT_REF)\n@@ -2308,7 +2308,7 @@ c_alignof_expr (expr)\n       int bestalign = TYPE_ALIGN (TREE_TYPE (TREE_TYPE (t)));\n  \n       while (TREE_CODE (t) == NOP_EXPR\n-\t      && TREE_CODE (TREE_TYPE (TREE_OPERAND (t, 0))) == POINTER_TYPE)\n+\t     && TREE_CODE (TREE_TYPE (TREE_OPERAND (t, 0))) == POINTER_TYPE)\n \t{\n \t  int thisalign;\n \n@@ -2372,7 +2372,7 @@ c_common_nodes_and_builtins ()\n \n   typedef enum builtin_type builtin_type;\n \n-  tree builtin_types[(int)BT_LAST];\n+  tree builtin_types[(int) BT_LAST];\n   int wchar_type_size;\n   tree array_domain_type;\n   /* Either char* or void*.  */\n@@ -3457,7 +3457,7 @@ c_expand_expr (exp, target, tmode, modifier)\n \t\t== BUILT_IN_FRONTEND))\n \t  return c_expand_builtin (exp, target, tmode, modifier);\n \telse\n-\t  abort();\n+\t  abort ();\n       }\n       break;\n \n@@ -3572,13 +3572,13 @@ add_c_tree_codes ()\n {\n   memcpy (tree_code_type + (int) LAST_AND_UNUSED_TREE_CODE,\n \t  c_tree_code_type,\n-\t  (int)LAST_C_TREE_CODE - (int)LAST_AND_UNUSED_TREE_CODE);\n+\t  (int) LAST_C_TREE_CODE - (int) LAST_AND_UNUSED_TREE_CODE);\n   memcpy (tree_code_length + (int) LAST_AND_UNUSED_TREE_CODE,\n \t  c_tree_code_length,\n-\t  (LAST_C_TREE_CODE - (int)LAST_AND_UNUSED_TREE_CODE) * sizeof (int));\n+\t  (LAST_C_TREE_CODE - (int) LAST_AND_UNUSED_TREE_CODE) * sizeof (int));\n   memcpy (tree_code_name + (int) LAST_AND_UNUSED_TREE_CODE,\n \t  c_tree_code_name,\n-\t  (LAST_C_TREE_CODE - (int)LAST_AND_UNUSED_TREE_CODE) * sizeof (char *));\n+\t  (LAST_C_TREE_CODE - (int) LAST_AND_UNUSED_TREE_CODE) * sizeof (char *));\n   lang_unsafe_for_reeval = c_unsafe_for_reeval;\n }\n \n@@ -3610,28 +3610,28 @@ c_expand_builtin (exp, target, tmode, modifier)\n     {\n     case BUILT_IN_PRINTF:\n       target = c_expand_builtin_printf (arglist, target, tmode,\n-\t\t\t\t\tmodifier, ignore,/*unlocked=*/ 0);\n+\t\t\t\t\tmodifier, ignore, /*unlocked=*/ 0);\n       if (target)\n \treturn target;\n       break;\n \n     case BUILT_IN_PRINTF_UNLOCKED:\n       target = c_expand_builtin_printf (arglist, target, tmode,\n-\t\t\t\t\tmodifier, ignore,/*unlocked=*/ 1);\n+\t\t\t\t\tmodifier, ignore, /*unlocked=*/ 1);\n       if (target)\n \treturn target;\n       break;\n \n     case BUILT_IN_FPRINTF:\n       target = c_expand_builtin_fprintf (arglist, target, tmode,\n-\t\t\t\t\t modifier, ignore,/*unlocked=*/ 0);\n+\t\t\t\t\t modifier, ignore, /*unlocked=*/ 0);\n       if (target)\n \treturn target;\n       break;\n \n     case BUILT_IN_FPRINTF_UNLOCKED:\n       target = c_expand_builtin_fprintf (arglist, target, tmode,\n-\t\t\t\t\t modifier, ignore,/*unlocked=*/ 1);\n+\t\t\t\t\t modifier, ignore, /*unlocked=*/ 1);\n       if (target)\n \treturn target;\n       break;\n@@ -3651,7 +3651,7 @@ c_expand_builtin (exp, target, tmode, modifier)\n    following it.  */\n static int\n is_valid_printf_arglist (arglist)\n-  tree arglist;\n+     tree arglist;\n {\n   /* Save this value so we can restore it later.  */\n   const int SAVE_pedantic = pedantic;\n@@ -3738,7 +3738,7 @@ c_expand_builtin_printf (arglist, target, tmode, modifier, ignore, unlocked)\n     }\n   else\n     {\n-     /* We can't handle anything else with % args or %% ... yet.  */\n+      /* We can't handle anything else with % args or %% ... yet.  */\n       if (strchr (TREE_STRING_POINTER (stripped_string), '%'))\n \treturn 0;\n       \n@@ -3851,7 +3851,7 @@ c_expand_builtin_fprintf (arglist, target, tmode, modifier, ignore, unlocked)\n     }\n   else\n     {\n-     /* We can't handle anything else with % args or %% ... yet.  */\n+      /* We can't handle anything else with % args or %% ... yet.  */\n       if (strchr (TREE_STRING_POINTER (stripped_string), '%'))\n \treturn 0;\n       "}, {"sha": "d566401597988c5f83f81e847676462e19eb92ef", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=173bf5be749b88cee4d2ebb095c504de63a412d8", "patch": "@@ -1,5 +1,5 @@\n /* Language-independent diagnostic subroutines for the GNU C compiler\n-   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Gabriel Dos Reis <gdr@codesourcery.com>\n \n This file is part of GCC.\n@@ -722,7 +722,7 @@ output_format (buffer)\n             if (*++output_buffer_text_cursor (buffer) != '*')\n               abort ();\n             else if (*++output_buffer_text_cursor (buffer) != 's')\n-              abort();\n+              abort ();\n             n = va_arg (output_buffer_format_args (buffer), int);\n             s = va_arg (output_buffer_format_args (buffer), const char *);\n             output_append (buffer, s, s + n);\n@@ -912,7 +912,7 @@ diagnostic_for_decl (decl, msgid, args_ptr, warn)\n       output_buffer_ptr_to_format_args (diagnostic_buffer) = args_ptr;\n       output_buffer_text_cursor (diagnostic_buffer) = _(msgid);\n       format_with_decl (diagnostic_buffer, decl);\n-      diagnostic_finish ((output_buffer *)global_dc);\n+      diagnostic_finish ((output_buffer *) global_dc);\n       output_destroy_prefix (diagnostic_buffer);\n   \n       output_buffer_state (diagnostic_buffer) = os;\n@@ -979,7 +979,7 @@ fatal_io_error VPARAMS ((const char *msgid, ...))\n   output_buffer_ptr_to_format_args (diagnostic_buffer) = &ap;\n   output_buffer_text_cursor (diagnostic_buffer) = _(msgid);\n   output_format (diagnostic_buffer);\n-  diagnostic_finish ((output_buffer *)global_dc);\n+  diagnostic_finish ((output_buffer *) global_dc);\n   output_buffer_state (diagnostic_buffer) = os;\n   VA_CLOSE (ap);\n   exit (FATAL_EXIT_CODE);\n@@ -1058,7 +1058,7 @@ sorry VPARAMS ((const char *msgid, ...))\n   output_buffer_ptr_to_format_args (diagnostic_buffer) = &ap;\n   output_buffer_text_cursor (diagnostic_buffer) = _(msgid);\n   output_format (diagnostic_buffer);\n-  diagnostic_finish ((output_buffer *)global_dc);\n+  diagnostic_finish ((output_buffer *) global_dc);\n   output_buffer_state (diagnostic_buffer) = os;\n   VA_CLOSE (ap);\n }\n@@ -1096,25 +1096,25 @@ default_print_error_function (context, file)\n       output_state os;\n \n       os = output_buffer_state (context);\n-      output_set_prefix ((output_buffer *)context, prefix);\n+      output_set_prefix ((output_buffer *) context, prefix);\n       \n       if (current_function_decl == NULL)\n-          output_add_string ((output_buffer *)context, _(\"At top level:\"));\n+          output_add_string ((output_buffer *) context, _(\"At top level:\"));\n       else\n \t{\n \t  if (TREE_CODE (TREE_TYPE (current_function_decl)) == METHOD_TYPE)\n             output_printf\n-              ((output_buffer *)context, \"In member function `%s':\",\n+              ((output_buffer *) context, \"In member function `%s':\",\n                (*decl_printable_name) (current_function_decl, 2));\n \t  else\n             output_printf\n-              ((output_buffer *)context, \"In function `%s':\",\n+              ((output_buffer *) context, \"In function `%s':\",\n                (*decl_printable_name) (current_function_decl, 2));\n \t}\n-      output_add_newline ((output_buffer *)context);\n+      output_add_newline ((output_buffer *) context);\n \n       record_last_error_function ();\n-      output_buffer_to_stream ((output_buffer *)context);\n+      output_buffer_to_stream ((output_buffer *) context);\n       output_buffer_state (context) = os;\n       free ((char*) prefix);\n     }\n@@ -1128,7 +1128,7 @@ void\n report_error_function (file)\n   const char *file ATTRIBUTE_UNUSED;\n {\n-  report_problematic_module ((output_buffer *)global_dc);\n+  report_problematic_module ((output_buffer *) global_dc);\n   (*print_error_function) (global_dc, input_filename);\n }\n \n@@ -1366,7 +1366,7 @@ report_diagnostic (dc)\n       (*diagnostic_starter (dc)) (diagnostic_buffer, dc);\n       output_format (diagnostic_buffer);\n       (*diagnostic_finalizer (dc)) (diagnostic_buffer, dc);\n-      diagnostic_finish ((output_buffer *)global_dc);\n+      diagnostic_finish ((output_buffer *) global_dc);\n       output_buffer_state (diagnostic_buffer) = os;\n     }\n \n@@ -1382,7 +1382,7 @@ static void\n error_recursion ()\n {\n   if (diagnostic_lock < 3)\n-    diagnostic_finish ((output_buffer *)global_dc);\n+    diagnostic_finish ((output_buffer *) global_dc);\n \n   fnotice (stderr,\n \t   \"Internal compiler error: Error reporting routines re-entered.\\n\");"}, {"sha": "6c0185cafd55fc95823ecff8d349974398d7e6bd", "filename": "gcc/doloop.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2Fdoloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2Fdoloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoloop.c?ref=173bf5be749b88cee4d2ebb095c504de63a412d8", "patch": "@@ -1,5 +1,5 @@\n /* Perform doloop optimizations\n-   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Michael P. Hayes (m.hayes@elec.canterbury.ac.nz)\n \n This file is part of GCC.\n@@ -197,7 +197,7 @@ doloop_iterations_max (loop_info, mode, nonneg)\n \tif (GET_CODE (max_value) == CONST_INT)\n \t  umax = INTVAL (max_value);\n \telse\n-\t  umax = ((unsigned)2 << (GET_MODE_BITSIZE (mode) - 1)) - 1;\n+\t  umax = ((unsigned) 2 << (GET_MODE_BITSIZE (mode) - 1)) - 1;\n \n \tn_iterations_max = umax - umin;\n \tbreak;\n@@ -212,12 +212,12 @@ doloop_iterations_max (loop_info, mode, nonneg)\n \tif (GET_CODE (min_value) == CONST_INT)\n \t  smin = INTVAL (min_value);\n \telse\n-\t  smin = -((unsigned)1 << (GET_MODE_BITSIZE (mode) - 1));\n+\t  smin = -((unsigned) 1 << (GET_MODE_BITSIZE (mode) - 1));\n \n \tif (GET_CODE (max_value) == CONST_INT)\n \t  smax = INTVAL (max_value);\n \telse\n-\t  smax = ((unsigned)1 << (GET_MODE_BITSIZE (mode) - 1)) - 1;\n+\t  smax = ((unsigned) 1 << (GET_MODE_BITSIZE (mode) - 1)) - 1;\n \n \tn_iterations_max = smax - smin;\n \tbreak;\n@@ -230,7 +230,7 @@ doloop_iterations_max (loop_info, mode, nonneg)\n       else\n \t/* We need to conservatively assume that we might have the maximum\n \t   number of iterations without any additional knowledge.  */\n-\tn_iterations_max = ((unsigned)2 << (GET_MODE_BITSIZE (mode) - 1)) - 1;\n+\tn_iterations_max = ((unsigned) 2 << (GET_MODE_BITSIZE (mode) - 1)) - 1;\n       break;\n \n     default:\n@@ -242,8 +242,8 @@ doloop_iterations_max (loop_info, mode, nonneg)\n   /* If we know that the iteration count is non-negative then adjust\n      n_iterations_max if it is so large that it appears negative.  */\n   if (nonneg\n-      && n_iterations_max > ((unsigned)1 << (GET_MODE_BITSIZE (mode) - 1)))\n-    n_iterations_max = ((unsigned)1 << (GET_MODE_BITSIZE (mode) - 1)) - 1;\n+      && n_iterations_max > ((unsigned) 1 << (GET_MODE_BITSIZE (mode) - 1)))\n+    n_iterations_max = ((unsigned) 1 << (GET_MODE_BITSIZE (mode) - 1)) - 1;\n \n   return n_iterations_max;\n }\n@@ -308,8 +308,8 @@ doloop_valid_p (loop, jump_insn)\n       return 0;\n     }\n \n- /* Some targets (eg, PPC) use the count register for branch on table\n-    instructions.  ??? This should be a target specific check.  */\n+  /* Some targets (eg, PPC) use the count register for branch on table\n+     instructions.  ??? This should be a target specific check.  */\n   if (loop_info->has_tablejump)\n     {\n       if (loop_dump_stream)\n@@ -469,13 +469,13 @@ doloop_modify (loop, iterations, iterations_max,\n       /* Determine if the iteration counter will be non-negative.\n \t Note that the maximum value loaded is iterations_max - 1.  */\n       if ((unsigned HOST_WIDE_INT) INTVAL (iterations_max)\n-\t  <= ((unsigned)1 << (GET_MODE_BITSIZE (GET_MODE (counter_reg)) - 1)))\n+\t  <= ((unsigned) 1 << (GET_MODE_BITSIZE (GET_MODE (counter_reg)) - 1)))\n \tnonneg = 1;\n       break;\n \n       /* Abort if an invalid doloop pattern has been generated.  */\n     default:\n-      abort();\n+      abort ();\n     }\n \n   if (decrement_count)\n@@ -649,7 +649,7 @@ doloop_modify_runtime (loop, iterations_max,\n \t}\n       else\n \t/* Iteration var must be an induction variable to get here.  */\n-\tabort();\n+\tabort ();\n \n       if (INSN_UID (bl->biv->insn) < max_uid_for_loop\n \t  && INSN_LUID (bl->biv->insn) < INSN_LUID (loop->scan_start))\n@@ -691,7 +691,7 @@ doloop_modify_runtime (loop, iterations_max,\n \t  /* If (abs (final - initial) % (abs_inc * unroll_number)\n \t       <= abs_inc * (unroll - 1)),\n \t     jump past following increment instruction.  */\n-\t  label = gen_label_rtx();\n+\t  label = gen_label_rtx ();\n \t  limit = abs_inc * (loop_info->unroll_number - 1);\n \t  emit_cmp_and_jump_insns (extra, GEN_INT (limit),\n \t\t\t\t   limit == 0 ? EQ : LEU, NULL_RTX,"}, {"sha": "d754d5e14ca1a1c2d33de4ddd1127ffa42481040", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173bf5be749b88cee4d2ebb095c504de63a412d8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=173bf5be749b88cee4d2ebb095c504de63a412d8", "patch": "@@ -931,7 +931,7 @@ initial_return_save (rtl)\n \n static long\n stack_adjust_offset (pattern)\n-  rtx pattern;\n+     rtx pattern;\n {\n   rtx src = SET_SRC (pattern);\n   rtx dest = SET_DEST (pattern);\n@@ -966,7 +966,7 @@ stack_adjust_offset (pattern)\n \t  /* We handle only adjustments by constant amount.  */\n \t  if (GET_CODE (XEXP (src, 1)) != PLUS ||\n \t      GET_CODE (val) != CONST_INT)\n-\t    abort();\n+\t    abort ();\n \n \t  offset = -INTVAL (val);\n \t}\n@@ -1484,7 +1484,7 @@ dwarf2out_frame_debug_expr (expr, label)\n \tcase PRE_MODIFY:\n \t  /* We can't handle variable size modifications.  */\n \t  if (GET_CODE (XEXP (XEXP (XEXP (dest, 0), 1), 1)) != CONST_INT)\n-\t    abort();\n+\t    abort ();\n \t  offset = -INTVAL (XEXP (XEXP (XEXP (dest, 0), 1), 1));\n \n \t  if (REGNO (XEXP (XEXP (dest, 0), 0)) != STACK_POINTER_REGNUM\n@@ -5602,7 +5602,7 @@ is_symbol_die (c)\n \n static char *\n gen_internal_sym (prefix)\n-\tconst char *prefix;\n+     const char *prefix;\n {\n   char buf[256];\n   static int label_num;\n@@ -6343,7 +6343,7 @@ output_die (die)\n \t    char *sym = AT_loc_list (a)->ll_symbol;\n \n \t    if (sym == 0)\n-\t      abort();\n+\t      abort ();\n \t    dw2_asm_output_delta (DWARF_OFFSET_SIZE, sym,\n \t\t\t\t  loc_section_label, \"%s\", name);\n \t  }\n@@ -6600,7 +6600,7 @@ output_aranges ()\n       if (die->die_tag == DW_TAG_subprogram)\n \t{\n \t  dw2_asm_output_addr (DWARF2_ADDR_SIZE, get_AT_low_pc (die),\n-\t\t\t\t \"Address\");\n+\t\t\t       \"Address\");\n \t  dw2_asm_output_delta (DWARF2_ADDR_SIZE, get_AT_hi_pc (die),\n \t\t\t\tget_AT_low_pc (die), \"Length\");\n \t}\n@@ -7687,10 +7687,10 @@ static inline int\n is_based_loc (rtl)\n      rtx rtl;\n {\n-    return (GET_CODE (rtl) == PLUS\n-\t    && ((GET_CODE (XEXP (rtl, 0)) == REG\n-\t\t && REGNO (XEXP (rtl, 0)) < FIRST_PSEUDO_REGISTER\n-\t\t && GET_CODE (XEXP (rtl, 1)) == CONST_INT)));\n+  return (GET_CODE (rtl) == PLUS\n+\t  && ((GET_CODE (XEXP (rtl, 0)) == REG\n+\t       && REGNO (XEXP (rtl, 0)) < FIRST_PSEUDO_REGISTER\n+\t       && GET_CODE (XEXP (rtl, 1)) == CONST_INT)));\n }\n \n /* The following routine converts the RTL for a variable or parameter"}]}