{"sha": "588d1952948769585bff991528868f4dec5db357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg4ZDE5NTI5NDg3Njk1ODViZmY5OTE1Mjg4NjhmNGRlYzVkYjM1Nw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-09-22T22:51:58Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-09-22T22:51:58Z"}, "message": "re PR c/16566 (ICE with flexible arrays)\n\n\tPR c/16566\n\t* c-typeck.c (build_component_ref): Don't special-case\n\tCOMPOUND_EXPR.\n\ntestsuite:\n\t* gcc.c-torture/compile/pr16566-1.c,\n\tgcc.c-torture/compile/pr16566-2.c,\n\tgcc.c-torture/compile/pr16566-3.c: New tests.\n\nFrom-SVN: r87892", "tree": {"sha": "14520f872d2e5979936c2338f8a3d79f52b13bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14520f872d2e5979936c2338f8a3d79f52b13bf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/588d1952948769585bff991528868f4dec5db357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/588d1952948769585bff991528868f4dec5db357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/588d1952948769585bff991528868f4dec5db357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/588d1952948769585bff991528868f4dec5db357/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "342fb422073220859da583de2649c02b178c2356", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342fb422073220859da583de2649c02b178c2356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342fb422073220859da583de2649c02b178c2356"}], "stats": {"total": 73, "additions": 53, "deletions": 20}, "files": [{"sha": "b0fe994abfd4eccf9a1acb523d2726d048d4ecf0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588d1952948769585bff991528868f4dec5db357/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588d1952948769585bff991528868f4dec5db357/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=588d1952948769585bff991528868f4dec5db357", "patch": "@@ -1,3 +1,9 @@\n+2004-09-22  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/16566\n+\t* c-typeck.c (build_component_ref): Don't special-case\n+\tCOMPOUND_EXPR.\n+\n 2004-09-22  Frank Ch. Eigler  <fche@redhat.com>\n \n \t* dominance.c (verify_dominators): Don't SEGV if recount_dominator"}, {"sha": "35678e04f311f92a967f6b52faaabc3e8ef9ac07", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588d1952948769585bff991528868f4dec5db357/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588d1952948769585bff991528868f4dec5db357/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=588d1952948769585bff991528868f4dec5db357", "patch": "@@ -1452,26 +1452,6 @@ build_component_ref (tree datum, tree component)\n   if (!objc_is_public (datum, component))\n     return error_mark_node;\n \n-  /* If DATUM is a COMPOUND_EXPR, move our reference inside it.\n-     Ensure that the arguments are not lvalues; otherwise,\n-     if the component is an array, it would wrongly decay to a pointer in\n-     C89 mode.\n-     We cannot do this with a COND_EXPR, because in a conditional expression\n-     the default promotions are applied to both sides, and this would yield\n-     the wrong type of the result; for example, if the components have\n-     type \"char\".  */\n-  switch (TREE_CODE (datum))\n-    {\n-    case COMPOUND_EXPR:\n-      {\n-\ttree value = build_component_ref (TREE_OPERAND (datum, 1), component);\n-\treturn build2 (COMPOUND_EXPR, TREE_TYPE (value),\n-\t\t       TREE_OPERAND (datum, 0), non_lvalue (value));\n-      }\n-    default:\n-      break;\n-    }\n-\n   /* See if there is a field or component with name COMPONENT.  */\n \n   if (code == RECORD_TYPE || code == UNION_TYPE)"}, {"sha": "70f7b6f238b1e83fbb9fbb913b6ea57795368453", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588d1952948769585bff991528868f4dec5db357/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588d1952948769585bff991528868f4dec5db357/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=588d1952948769585bff991528868f4dec5db357", "patch": "@@ -1,3 +1,10 @@\n+2004-09-22  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/16566\n+\t* gcc.c-torture/compile/pr16566-1.c,\n+\tgcc.c-torture/compile/pr16566-2.c,\n+\tgcc.c-torture/compile/pr16566-3.c: New tests.\n+\n 2004-09-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \tPR tree-optimization/17512"}, {"sha": "4ed4ab730e69247d148917a1c8ef9fb9f184bd57", "filename": "gcc/testsuite/gcc.c-torture/compile/pr16566-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588d1952948769585bff991528868f4dec5db357/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588d1952948769585bff991528868f4dec5db357/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-1.c?ref=588d1952948769585bff991528868f4dec5db357", "patch": "@@ -0,0 +1,15 @@\n+/* ICE with flexible arrays in non-lvalue structures.  Bug 16566\n+   (comment #3).  */\n+\n+struct S;\n+\n+struct C {\n+    int i;\n+    struct S *tab[];\n+};\n+\n+struct S { struct C c; };\n+\n+void foo (struct S *x) {\n+  foo(((void)1, x->c).tab[0]);\n+}"}, {"sha": "c0036f0fc6458fc6586e68a477550c569797bd3a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr16566-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588d1952948769585bff991528868f4dec5db357/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588d1952948769585bff991528868f4dec5db357/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-2.c?ref=588d1952948769585bff991528868f4dec5db357", "patch": "@@ -0,0 +1,13 @@\n+/* ICE with flexible arrays in non-lvalue structures.  Bug 16566\n+   (comment #5).  */\n+\n+struct A\n+{\n+    int i;\n+    int x[];\n+};\n+\n+int foo(struct A a)\n+{ \n+    return (a,a).x[0];\n+}"}, {"sha": "954aa361da295b572a14588e71da8fa34b572bd3", "filename": "gcc/testsuite/gcc.c-torture/compile/pr16566-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588d1952948769585bff991528868f4dec5db357/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588d1952948769585bff991528868f4dec5db357/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-3.c?ref=588d1952948769585bff991528868f4dec5db357", "patch": "@@ -0,0 +1,12 @@\n+/* ICE with flexible arrays in non-lvalue structures.  Bug 16566\n+   (testcase from duplicate bug 16575).  */\n+\n+struct S;\n+struct C {\n+    int i;\n+    struct S *tab[];\n+};\n+struct S { struct C c; };\n+void foo (struct S *x) {\n+  ((void)1, x->c).tab[0] = 0;\n+}"}]}