{"sha": "2ded3754ad63a2eb375b34e2719303ec673cc72f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRlZDM3NTRhZDYzYTJlYjM3NWIzNGUyNzE5MzAzZWM2NzNjYzcyZg==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2017-06-01T14:06:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-06-01T14:06:37Z"}, "message": "DWARF: add DW_AT_location for global decls with DECL_VALUE_EXPR\n\nIn GNAT, we materialize renamings that cannot be described in standard\nDWARF as synthetic variables that describe how to fetch the renamed\nobject.  Look for \"___XR\" in gcc/ada/exp_dbug.ads for more details about\nthis convention.\n\nIn order to have a location for these variables in the debug info (GDB\nrequires it not to discard the variable) but also to avoid allocating\nruntime space for them, we make these variable hold a DECL_VALUE_EXPR\ntree.  However, since GCC 7, the DWARF back-end no longer generates a\nDW_AT_location attribute for those.  This patch is an attempt to restore\nthis attribute.\n\ngcc/\n\n\t* dwarf2out.c (dwarf2out_late_global_decl): Add locations for\n\tsymbols that hold a DECL_VALUE_EXPR.\n\ngcc/testsuite/\n\n\t* debug12.adb, debug12.ads: New testcase.\n\nFrom-SVN: r248792", "tree": {"sha": "f97bfb3229e74b8b7cb0be754b8a86319ff4f709", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f97bfb3229e74b8b7cb0be754b8a86319ff4f709"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ded3754ad63a2eb375b34e2719303ec673cc72f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ded3754ad63a2eb375b34e2719303ec673cc72f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ded3754ad63a2eb375b34e2719303ec673cc72f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ded3754ad63a2eb375b34e2719303ec673cc72f/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "587d61c6a6b2b39061e2250ecfd883fe164f160d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ded3754ad63a2eb375b34e2719303ec673cc72f", "patch": "@@ -1,3 +1,8 @@\n+2017-06-01  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* dwarf2out.c (dwarf2out_late_global_decl): Add locations for\n+\tsymbols that hold a DECL_VALUE_EXPR.\n+\n 2017-06-01  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/80898"}, {"sha": "036d0a8f84686ce7ae3de6ed73cf9a7b2ed8d8c1", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=2ded3754ad63a2eb375b34e2719303ec673cc72f", "patch": "@@ -25545,9 +25545,10 @@ dwarf2out_late_global_decl (tree decl)\n \t{\n \t  /* We get called via the symtab code invoking late_global_decl\n \t     for symbols that are optimized out.  Do not add locations\n-\t     for those.  */\n+\t     for those, except if they have a DECL_VALUE_EXPR, in which case\n+\t     they are relevant for debuggers.  */\n \t  varpool_node *node = varpool_node::get (decl);\n-\t  if (! node || ! node->definition)\n+\t  if ((! node || ! node->definition) && ! DECL_HAS_VALUE_EXPR_P (decl))\n \t    tree_add_const_value_attribute_for_decl (die, decl);\n \t  else\n \t    add_location_or_const_value_attribute (die, decl, false);"}, {"sha": "ff1b0703d51c773c6e08b955c1c9cd2d010d7d1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ded3754ad63a2eb375b34e2719303ec673cc72f", "patch": "@@ -1,3 +1,7 @@\n+2017-06-01  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* debug12.adb, debug12.ads: New testcase.\n+\n 2017-06-01  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/80898"}, {"sha": "07175968703ac5bd31994c3e3b3cba6d0307aabe", "filename": "gcc/testsuite/gnat.dg/debug12.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2Ftestsuite%2Fgnat.dg%2Fdebug12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2Ftestsuite%2Fgnat.dg%2Fdebug12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdebug12.adb?ref=2ded3754ad63a2eb375b34e2719303ec673cc72f", "patch": "@@ -0,0 +1,9 @@\n+--  { dg-options \"-cargs -gdwarf-4 -fdebug-types-section -dA -margs\" }\n+--  { dg-final { scan-assembler-times \"DW_AT_location\" 4 } }\n+\n+package body Debug12 is\n+   function Get_A2 return Boolean is\n+   begin\n+      return A2;\n+   end Get_A2;\n+end Debug12;"}, {"sha": "dbc5896cc7327987b4420543c47cacdc1f842cbc", "filename": "gcc/testsuite/gnat.dg/debug12.ads", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2Ftestsuite%2Fgnat.dg%2Fdebug12.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ded3754ad63a2eb375b34e2719303ec673cc72f/gcc%2Ftestsuite%2Fgnat.dg%2Fdebug12.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdebug12.ads?ref=2ded3754ad63a2eb375b34e2719303ec673cc72f", "patch": "@@ -0,0 +1,8 @@\n+package Debug12 is\n+   type Bit_Array is array (Positive range <>) of Boolean\n+      with Pack;\n+   A  : Bit_Array := (1 .. 10 => False);\n+   A2 : Boolean renames A (2);\n+\n+   function Get_A2 return Boolean;\n+end Debug12;"}]}