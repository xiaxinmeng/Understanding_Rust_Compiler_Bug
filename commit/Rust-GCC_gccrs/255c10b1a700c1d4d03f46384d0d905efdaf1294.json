{"sha": "255c10b1a700c1d4d03f46384d0d905efdaf1294", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU1YzEwYjFhNzAwYzFkNGQwM2Y0NjM4NGQwZDkwNWVmZGFmMTI5NA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-03-14T23:47:24Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-03-14T23:47:24Z"}, "message": "c-opts.c (finish_options): New.\n\n\t* c-opts.c (finish_options): New.\n\t(COMMAND_LINE_OPTIONS, c_common_decode_option): Add -imacros.\n\t(missing_arg): Handle OPT_include and OPT_imacros.\n\t(c_common_init, c_common_parse_file): Use finish_options.\n\t(handle_deferred_opts): Update.\n\t* cppinit.c (struct cpp_pending): Remove imacros_head and imacros_tail.\n\t(cpp_finish_options): Don't handle -imacros here.\n\t(no_fil): Remove.\n\t(COMMAND_LINE_OPTIONS, cpp_handle_option): Don't handle -imacros.\n\nFrom-SVN: r64378", "tree": {"sha": "ab378a1db5cdfc70cb85101af01a8e898f985515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab378a1db5cdfc70cb85101af01a8e898f985515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/255c10b1a700c1d4d03f46384d0d905efdaf1294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/255c10b1a700c1d4d03f46384d0d905efdaf1294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/255c10b1a700c1d4d03f46384d0d905efdaf1294", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/255c10b1a700c1d4d03f46384d0d905efdaf1294/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "027fbf43fba633277bb6a7fa1dca7b70a8399ac2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/027fbf43fba633277bb6a7fa1dca7b70a8399ac2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/027fbf43fba633277bb6a7fa1dca7b70a8399ac2"}], "stats": {"total": 69, "additions": 44, "deletions": 25}, "files": [{"sha": "d715d97dc4e1fc7a078384099939e76c35cbfe87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255c10b1a700c1d4d03f46384d0d905efdaf1294/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255c10b1a700c1d4d03f46384d0d905efdaf1294/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=255c10b1a700c1d4d03f46384d0d905efdaf1294", "patch": "@@ -1,3 +1,15 @@\n+2003-03-14  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c-opts.c (finish_options): New.\n+\t(COMMAND_LINE_OPTIONS, c_common_decode_option): Add -imacros.\n+\t(missing_arg): Handle OPT_include and OPT_imacros.\n+\t(c_common_init, c_common_parse_file): Use finish_options.\n+\t(handle_deferred_opts): Update.\n+\t* cppinit.c (struct cpp_pending): Remove imacros_head and imacros_tail.\n+\t(cpp_finish_options): Don't handle -imacros here.\n+\t(no_fil): Remove.\n+\t(COMMAND_LINE_OPTIONS, cpp_handle_option): Don't handle -imacros.\n+\n 2003-03-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.c (rs6000_emit_load_toc_table): Don't call"}, {"sha": "ce030e581724df30ad4fca059af58b219792c614", "filename": "gcc/c-opts.c", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255c10b1a700c1d4d03f46384d0d905efdaf1294/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255c10b1a700c1d4d03f46384d0d905efdaf1294/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=255c10b1a700c1d4d03f46384d0d905efdaf1294", "patch": "@@ -104,6 +104,7 @@ static void sanitize_cpp_opts PARAMS ((void));\n static void add_prefixed_path PARAMS ((const char *, size_t));\n static void push_command_line_include PARAMS ((void));\n static void cb_file_change PARAMS ((cpp_reader *, const struct line_map *));\n+static void finish_options PARAMS ((void));\n \n #ifndef STDC_0_IN_SYSTEM_HEADERS\n #define STDC_0_IN_SYSTEM_HEADERS 0\n@@ -297,6 +298,7 @@ static void cb_file_change PARAMS ((cpp_reader *, const struct line_map *));\n   OPT(\"fxref\",\t\t\tCL_CXX,   OPT_fxref)\t\t\t     \\\n   OPT(\"gen-decls\",\t\tCL_OBJC,  OPT_gen_decls)\t\t     \\\n   OPT(\"idirafter\",              CL_ALL | CL_ARG, OPT_idirafter)              \\\n+  OPT(\"imacros\",                CL_ALL | CL_ARG, OPT_imacros)\t\t     \\\n   OPT(\"include\",                CL_ALL | CL_ARG, OPT_include)\t\t     \\\n   OPT(\"iprefix\",\t\tCL_ALL | CL_ARG, OPT_iprefix)\t\t     \\\n   OPT(\"isysroot\",               CL_ALL | CL_ARG, OPT_isysroot)               \\\n@@ -421,6 +423,8 @@ missing_arg (opt_index)\n     case OPT_MF:\n     case OPT_MD:\n     case OPT_MMD:\n+    case OPT_include:\n+    case OPT_imacros:\n     case OPT_o:\n       error (\"missing filename after \\\"-%s\\\"\", opt_text);\n       break;\n@@ -1333,6 +1337,7 @@ c_common_decode_option (argc, argv)\n       add_path (xstrdup (arg), AFTER, 0);\n       break;\n \n+    case OPT_imacros:\n     case OPT_include:\n       defer_opt (code, arg);\n       break;\n@@ -1566,8 +1571,7 @@ c_common_init ()\n \n   if (flag_preprocess_only)\n     {\n-      cpp_finish_options (parse_in);\n-      push_command_line_include ();\n+      finish_options ();\n       preprocess_file (parse_in);\n       return false;\n     }\n@@ -1593,8 +1597,7 @@ c_common_parse_file (set_yydebug)\n #endif\n \n   (*debug_hooks->start_source_file) (lineno, input_filename);\n-  cpp_finish_options (parse_in);\n-  push_command_line_include ();\n+  finish_options();\n   pch_init();\n   yyparse ();\n   free_parser_stacks ();\n@@ -1694,6 +1697,7 @@ handle_deferred_opts ()\n \t  break;\n \n \tcase OPT_include:\n+\tcase OPT_imacros:\n \t  break;\n \n \tdefault:\n@@ -1757,6 +1761,30 @@ add_prefixed_path (suffix, chain)\n   add_path (path, chain, 0);\n }\n \n+/* Handle -D, -U, -A, -imacros, and the first -include.  */\n+static void\n+finish_options ()\n+{\n+  cpp_finish_options (parse_in);\n+\n+  if (!cpp_opts->preprocessed)\n+    {\n+      unsigned int i;\n+\n+      /* Handle -imacros after -D, -U and -A.  */\n+      for (i = 0; i < deferred_count; i++)\n+\t{\n+\t  struct deferred_opt *opt = &deferred_opts[i];\n+\n+\t  if (opt->code == OPT_imacros\n+\t      && cpp_push_include (parse_in, opt->arg))\n+\t    cpp_scan_nooutput (parse_in);\n+\t}\n+    }\n+\n+  push_command_line_include ();\n+}\n+\n /* Give CPP the next file given by -include, if any.  */\n static void\n push_command_line_include ()"}, {"sha": "881b7e2aabab7bf539d85799d6b93eb68d50085a", "filename": "gcc/cppinit.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255c10b1a700c1d4d03f46384d0d905efdaf1294/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255c10b1a700c1d4d03f46384d0d905efdaf1294/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=255c10b1a700c1d4d03f46384d0d905efdaf1294", "patch": "@@ -47,7 +47,6 @@ struct pending_option\n struct cpp_pending\n {\n   struct pending_option *directive_head, *directive_tail;\n-  struct pending_option *imacros_head, *imacros_tail;\n };\n \n #ifdef __STDC__\n@@ -606,16 +605,8 @@ cpp_finish_options (pfile)\n       _cpp_do_file_change (pfile, LC_RENAME, _(\"<command line>\"), 1, 0);\n       for (p = CPP_OPTION (pfile, pending)->directive_head; p; p = p->next)\n \t(*p->handler) (pfile, p->arg);\n-\n-      /* Scan -imacros files after -D, -U, but before -include.\n-\t pfile->next_include_file is NULL, so _cpp_pop_buffer does not\n-\t push -include files.  */\n-      for (p = CPP_OPTION (pfile, pending)->imacros_head; p; p = p->next)\n-\tif (cpp_push_include (pfile, p->arg))\n-\t  cpp_scan_nooutput (pfile);\n     }\n \n-  free_chain (CPP_OPTION (pfile, pending)->imacros_head);\n   free_chain (CPP_OPTION (pfile, pending)->directive_head);\n }\n \n@@ -679,7 +670,6 @@ new_pending_directive (pend, text, handler)\n    I.e. a const string initializer with parens around it.  That is\n    what N_(\"string\") resolves to, so we make no_* be macros instead.  */\n #define no_ass N_(\"assertion missing after %s\")\n-#define no_fil N_(\"file name missing after %s\")\n #define no_mac N_(\"macro name missing after %s\")\n \n /* This is the list of all command line options, with the leading\n@@ -688,7 +678,6 @@ new_pending_directive (pend, text, handler)\n   DEF_OPT(\"A\",                        no_ass, OPT_A)                          \\\n   DEF_OPT(\"D\",                        no_mac, OPT_D)                          \\\n   DEF_OPT(\"U\",                        no_mac, OPT_U)                          \\\n-  DEF_OPT(\"imacros\",                  no_fil, OPT_imacros)                    \\\n \n \n #define DEF_OPT(text, msg, code) code,\n@@ -853,16 +842,6 @@ cpp_handle_option (pfile, argc, argv)\n \tcase OPT_U:\n \t  new_pending_directive (pend, arg, cpp_undef);\n \t  break;\n-\tcase OPT_imacros:\n-\t  {\n-\t    struct pending_option *o = (struct pending_option *)\n-\t      xmalloc (sizeof (struct pending_option));\n-\t    o->arg = arg;\n-\t    o->next = NULL;\n-\n-\t    APPEND (pend, imacros, o);\n-\t  }\n-\t  break;\n \t}\n     }\n   return i + 1;"}]}