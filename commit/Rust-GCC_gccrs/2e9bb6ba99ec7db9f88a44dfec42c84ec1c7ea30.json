{"sha": "2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU5YmI2YmE5OWVjN2RiOWY4OGE0NGRmZWM0MmM4NGVjMWM3ZWEzMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-04-17T16:37:07Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-04-17T16:37:07Z"}, "message": "re PR middle-end/20991 (ICE in cgraph_mark_reachable_node)\n\n\t* cgraph.c (cgraph_clone_node): Do not handle vtable_method\n\t* cgraph.h (struct cgraph_local_info): Drop vtable_method.\n\t* cgraphunit.c (cgraph_copy_node_for_versioning): Drop vtable_method.\n\t* lto-cgraph.c (lto_output_node, input_overwrite_node): Drop vtable method.\n\t* gimple-fold.c (can_refer_decl_in_current_unit_p): Mention PR20991 in\n\tgimple-fold.c\n\t* varasm.c (mark_decl_referenced): Drop vtable_method handling code.\n\t* cp/class.c (cp_fold_obj_type_ref): Drop vtable_method.\n\nFrom-SVN: r172613", "tree": {"sha": "c5e214518a3d4cc5f9e7d0ab4113b820716872a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5e214518a3d4cc5f9e7d0ab4113b820716872a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/comments", "author": null, "committer": null, "parents": [{"sha": "beb628e13b6193f1fde902d8b20a8339d6dc4b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb628e13b6193f1fde902d8b20a8339d6dc4b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb628e13b6193f1fde902d8b20a8339d6dc4b10"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "f8287a825c3048e8b20838272444cc5216bd720c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "patch": "@@ -1,3 +1,13 @@\n+2011-04-17  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.c (cgraph_clone_node): Do not handle vtable_method\n+\t* cgraph.h (struct cgraph_local_info): Drop vtable_method.\n+\t* cgraphunit.c (cgraph_copy_node_for_versioning): Drop vtable_method.\n+\t* lto-cgraph.c (lto_output_node, input_overwrite_node): Drop vtable method.\n+\t* gimple-fold.c (can_refer_decl_in_current_unit_p): Mention PR20991 in\n+\tgimple-fold.c\n+\t* varasm.c (mark_decl_referenced): Drop vtable_method handling code.\n+\n 2011-04-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR lto/48538"}, {"sha": "eb49bc7c3f2bcc7f30cb331db3fe9991866ba164", "filename": "gcc/cgraph.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "patch": "@@ -2161,7 +2161,6 @@ cgraph_clone_node (struct cgraph_node *n, tree decl, gcov_type count, int freq,\n   new_node->local = n->local;\n   new_node->local.externally_visible = false;\n   new_node->local.local = true;\n-  new_node->local.vtable_method = false;\n   new_node->global = n->global;\n   new_node->rtl = n->rtl;\n   new_node->count = count;"}, {"sha": "69fd19adf4adb9561b28cf1150368f52d5ed3326", "filename": "gcc/cgraph.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "patch": "@@ -95,10 +95,6 @@ struct GTY(()) cgraph_local_info {\n   /* True when the function has been originally extern inline, but it is\n      redefined now.  */\n   unsigned redefined_extern_inline : 1;\n-\n-  /* True if the function is going to be emitted in some other translation\n-     unit, referenced from vtable.  */\n-  unsigned vtable_method : 1;\n };\n \n /* Information about the function that needs to be computed globally"}, {"sha": "adfb0d27aad697a33727fa363e8940f89e809659", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "patch": "@@ -1991,7 +1991,6 @@ cgraph_copy_node_for_versioning (struct cgraph_node *old_version,\n    new_version->local = old_version->local;\n    new_version->local.externally_visible = false;\n    new_version->local.local = true;\n-   new_version->local.vtable_method = false;\n    new_version->global = old_version->global;\n    new_version->rtl = old_version->rtl;\n    new_version->reachable = true;"}, {"sha": "cd71a1dde5fc3ea17d26ed9cb8b7b7cfdc32efc2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "patch": "@@ -1,3 +1,7 @@\n+2011-04-17  Jan Hubicka  <jh@suse.cz>\n+\n+\t* class.c (cp_fold_obj_type_ref): Drop vtable_method.\n+\n 2011-04-15  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n \n \tImplement N3271"}, {"sha": "5578eb2bd9b2af434deb25ccde07fe2eb4c2bd36", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "patch": "@@ -8402,8 +8402,6 @@ cp_fold_obj_type_ref (tree ref, tree known_type)\n \t\t\t\t  DECL_VINDEX (fndecl)));\n #endif\n \n-  cgraph_get_node (fndecl)->local.vtable_method = true;\n-\n   return build_address (fndecl);\n }\n "}, {"sha": "f629fd565a171a580636c522426a36f683d8bb63", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "patch": "@@ -80,7 +80,10 @@ can_refer_decl_in_current_unit_p (tree decl)\n     return true;\n   /* We are not at ltrans stage; so don't worry about WHOPR.\n      Also when still gimplifying all referred comdat functions will be\n-     produced.  */\n+     produced.\n+     ??? as observed in PR20991 for already optimized out comdat virtual functions\n+     we may not neccesarily give up because the copy will be output elsewhere when\n+     corresponding vtable is output.  */\n   if (!flag_ltrans && (!DECL_COMDAT (decl) || !cgraph_function_flags_ready))\n     return true;\n   /* If we already output the function body, we are safe.  */"}, {"sha": "c8b0797f3a7fa2d0263eaf748c501f16854c3376", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "patch": "@@ -491,7 +491,6 @@ lto_output_node (struct lto_simple_output_block *ob, struct cgraph_node *node,\n   bp_pack_value (&bp, node->local.finalized, 1);\n   bp_pack_value (&bp, node->local.can_change_signature, 1);\n   bp_pack_value (&bp, node->local.redefined_extern_inline, 1);\n-  bp_pack_value (&bp, node->local.vtable_method, 1);\n   bp_pack_value (&bp, node->needed, 1);\n   bp_pack_value (&bp, node->address_taken, 1);\n   bp_pack_value (&bp, node->abstract_and_needed, 1);\n@@ -927,7 +926,6 @@ input_overwrite_node (struct lto_file_decl_data *file_data,\n   node->local.finalized = bp_unpack_value (bp, 1);\n   node->local.can_change_signature = bp_unpack_value (bp, 1);\n   node->local.redefined_extern_inline = bp_unpack_value (bp, 1);\n-  node->local.vtable_method = bp_unpack_value (bp, 1);\n   node->needed = bp_unpack_value (bp, 1);\n   node->address_taken = bp_unpack_value (bp, 1);\n   node->abstract_and_needed = bp_unpack_value (bp, 1);"}, {"sha": "e60c95eafbef330ddb3478f7c5026540afd470de", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=2e9bb6ba99ec7db9f88a44dfec42c84ec1c7ea30", "patch": "@@ -2201,8 +2201,7 @@ mark_decl_referenced (tree decl)\n \t definition.  */\n       struct cgraph_node *node = cgraph_get_create_node (decl);\n       if (!DECL_EXTERNAL (decl)\n-\t  && (!node->local.vtable_method || !cgraph_global_info_ready\n-\t      || !node->local.finalized))\n+\t  && !node->local.finalized)\n \tcgraph_mark_needed_node (node);\n     }\n   else if (TREE_CODE (decl) == VAR_DECL)"}]}