{"sha": "85b22f7857a745d8ec12d88d61b770a598208ecf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODViMjJmNzg1N2E3NDVkOGVjMTJkODhkNjFiNzcwYTU5ODIwOGVjZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-09-18T17:07:53Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-09-18T17:07:53Z"}, "message": "re PR c++/9848 (missing 'unused parameter' warning.)\n\ncp:\n\tPR c++/9848\n\t* optimize.c (maybe_clone_body): Don't set MARK_USED on parameters\n\there.\n\t* semantics.c (expand_body): Set it here on the remaining clones.\ntestsuite:\n\tPR c++/9848\n\t* g++.dg/warn/Wunused-4.C: New test.\n\nFrom-SVN: r71528", "tree": {"sha": "e282a8b31bbf685e2f19352bd0b60a68eddc7257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e282a8b31bbf685e2f19352bd0b60a68eddc7257"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85b22f7857a745d8ec12d88d61b770a598208ecf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85b22f7857a745d8ec12d88d61b770a598208ecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85b22f7857a745d8ec12d88d61b770a598208ecf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85b22f7857a745d8ec12d88d61b770a598208ecf/comments", "author": null, "committer": null, "parents": [{"sha": "f857cb427e56de666cafa31769bb6208358c374c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f857cb427e56de666cafa31769bb6208358c374c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f857cb427e56de666cafa31769bb6208358c374c"}], "stats": {"total": 74, "additions": 65, "deletions": 9}, "files": [{"sha": "ad41de2c00e839276011b6d8df5f28f07b0a9ed7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=85b22f7857a745d8ec12d88d61b770a598208ecf", "patch": "@@ -1,3 +1,10 @@\n+2003-09-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/9848\n+\t* optimize.c (maybe_clone_body): Don't set MARK_USED on parameters\n+\there.\n+\t* semantics.c (expand_body): Set it here on the remaining clones.\n+\n 2003-09-18  Roger Sayle  <roger@eyesopen.com>\n \n \t* lex.c (init_operators): Remove operator_name_info for FFS_EXPR."}, {"sha": "2b7df6c52440a9e559695314f1d470f572145579", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=85b22f7857a745d8ec12d88d61b770a598208ecf", "patch": "@@ -120,7 +120,6 @@ bool\n maybe_clone_body (tree fn)\n {\n   tree clone;\n-  bool first = true;\n \n   /* We only clone constructors and destructors.  */\n   if (!DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P (fn)\n@@ -139,7 +138,7 @@ maybe_clone_body (tree fn)\n      list.  */\n   for (clone = TREE_CHAIN (fn);\n        clone && DECL_CLONED_FUNCTION_P (clone);\n-       clone = TREE_CHAIN (clone), first = false)\n+       clone = TREE_CHAIN (clone))\n     {\n       tree parm;\n       tree clone_parm;\n@@ -175,13 +174,8 @@ maybe_clone_body (tree fn)\n \tclone_parm = TREE_CHAIN (clone_parm);\n       for (; parm;\n \t   parm = TREE_CHAIN (parm), clone_parm = TREE_CHAIN (clone_parm))\n-\t{\n-\t  /* Update this parameter.  */\n-\t  update_cloned_parm (parm, clone_parm);\n-\t  /* We should only give unused information for one clone.  */\n-\t  if (!first)\n-\t    TREE_USED (clone_parm) = 1;\n-\t}\n+\t/* Update this parameter.  */\n+\tupdate_cloned_parm (parm, clone_parm);\n \n       /* Start processing the function.  */\n       push_to_top_level ();"}, {"sha": "ef42579f34994884012305bf86952bed8145191f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=85b22f7857a745d8ec12d88d61b770a598208ecf", "patch": "@@ -2887,6 +2887,26 @@ expand_body (tree fn)\n      static duration objects.  */\n   if (DECL_STATIC_DESTRUCTOR (fn))\n     static_dtors = tree_cons (NULL_TREE, fn, static_dtors);\n+\n+  if (DECL_CLONED_FUNCTION_P (fn))\n+    {\n+      /* If this is a clone, go through the other clones now and mark\n+         their parameters used.  We have to do that here, as we don't\n+         know whether any particular clone will be expanded, and\n+         therefore cannot pick one arbitrarily.  */ \n+      tree probe;\n+\n+      for (probe = TREE_CHAIN (DECL_CLONED_FUNCTION (fn));\n+\t   probe && DECL_CLONED_FUNCTION_P (probe);\n+\t   probe = TREE_CHAIN (probe))\n+\t{\n+\t  tree parms;\n+\n+\t  for (parms = DECL_ARGUMENTS (probe);\n+\t       parms; parms = TREE_CHAIN (parms))\n+\t    TREE_USED (parms) = 1;\n+\t}\n+    }\n }\n \n /* Generate RTL for FN.  */"}, {"sha": "4315a0ffadf0d451fd18003eafb6bb24b2a88937", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85b22f7857a745d8ec12d88d61b770a598208ecf", "patch": "@@ -1,3 +1,8 @@\n+2003-09-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/9848\n+\t* g++.dg/warn/Wunused-4.C: New test.\n+\n 2003-09-18  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/12316"}, {"sha": "9018e92ef948ca30e3e5fd30c40a368e4715cf05", "filename": "gcc/testsuite/g++.dg/warn/Wunused-4.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85b22f7857a745d8ec12d88d61b770a598208ecf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-4.C?ref=85b22f7857a745d8ec12d88d61b770a598208ecf", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-Wunused-parameter\" }\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 15 Sep 2003 <nathan@codesourcery.com>\n+// Origin: yotamm@mellanox.co.il\n+\n+\n+// PR c++/9848. Missing warning\n+\n+struct C1 {\n+  // Only use in-charge ctor\n+  C1(int bi) {}  // { dg-warning \"unused parameter\" \"\" }\n+};\n+struct C2 {\n+  // Only use base ctor\n+  C2(int bi) {}  // { dg-warning \"unused parameter\" \"\" }\n+};\n+\n+struct D : C2\n+{\n+  D (int) : C2 (1) {}\n+};\n+\n+void show_compile_warning ()\n+{\n+  C1 c1 (1);\n+  \n+  D d (1);\n+}"}]}