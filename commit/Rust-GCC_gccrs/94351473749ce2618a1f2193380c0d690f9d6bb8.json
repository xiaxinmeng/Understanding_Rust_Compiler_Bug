{"sha": "94351473749ce2618a1f2193380c0d690f9d6bb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzNTE0NzM3NDljZTI2MThhMWYyMTkzMzgwYzBkNjkwZjlkNmJiOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-08-15T07:41:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-08-15T07:41:06Z"}, "message": "re PR fortran/62107 (libgomp.fortran/target2.f90 error while compiling for OpenMP 4.0 offload target)\n\n\tPR fortran/62107\n\t* trans-openmp.c (gfc_omp_finish_clause): Handle scalar pointer\n\tor allocatable passed by reference.\n\t(gfc_trans_omp_clauses) <case OMP_LIST_MAP>: Likewise.\n\nFrom-SVN: r214003", "tree": {"sha": "7f1bd4bdc043a129c58fa067abd09679e46ac099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f1bd4bdc043a129c58fa067abd09679e46ac099"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94351473749ce2618a1f2193380c0d690f9d6bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94351473749ce2618a1f2193380c0d690f9d6bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94351473749ce2618a1f2193380c0d690f9d6bb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94351473749ce2618a1f2193380c0d690f9d6bb8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7de20fbd6e9490871a9e4ebf3ee261d943061b1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de20fbd6e9490871a9e4ebf3ee261d943061b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7de20fbd6e9490871a9e4ebf3ee261d943061b1c"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "f6e3082d1c649d58e5479dc19ec471821e92a648", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94351473749ce2618a1f2193380c0d690f9d6bb8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94351473749ce2618a1f2193380c0d690f9d6bb8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=94351473749ce2618a1f2193380c0d690f9d6bb8", "patch": "@@ -1,3 +1,10 @@\n+2014-08-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/62107\n+\t* trans-openmp.c (gfc_omp_finish_clause): Handle scalar pointer\n+\tor allocatable passed by reference.\n+\t(gfc_trans_omp_clauses) <case OMP_LIST_MAP>: Likewise.\n+\n 2014-08-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/62106"}, {"sha": "548b5d3a4857d68beccbb3f7f93a3440d3689690", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94351473749ce2618a1f2193380c0d690f9d6bb8/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94351473749ce2618a1f2193380c0d690f9d6bb8/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=94351473749ce2618a1f2193380c0d690f9d6bb8", "patch": "@@ -1022,13 +1022,25 @@ gfc_omp_finish_clause (tree c, gimple_seq *pre_p)\n \t  && !GFC_DECL_CRAY_POINTEE (decl)\n \t  && !GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (TREE_TYPE (decl))))\n \treturn;\n+      tree orig_decl = decl;\n       c4 = build_omp_clause (OMP_CLAUSE_LOCATION (c), OMP_CLAUSE_MAP);\n       OMP_CLAUSE_MAP_KIND (c4) = OMP_CLAUSE_MAP_POINTER;\n       OMP_CLAUSE_DECL (c4) = decl;\n       OMP_CLAUSE_SIZE (c4) = size_int (0);\n       decl = build_fold_indirect_ref (decl);\n       OMP_CLAUSE_DECL (c) = decl;\n       OMP_CLAUSE_SIZE (c) = NULL_TREE;\n+      if (TREE_CODE (TREE_TYPE (orig_decl)) == REFERENCE_TYPE\n+\t  && (GFC_DECL_GET_SCALAR_POINTER (orig_decl)\n+\t      || GFC_DECL_GET_SCALAR_ALLOCATABLE (orig_decl)))\n+\t{\n+\t  c3 = build_omp_clause (OMP_CLAUSE_LOCATION (c), OMP_CLAUSE_MAP);\n+\t  OMP_CLAUSE_MAP_KIND (c3) = OMP_CLAUSE_MAP_POINTER;\n+\t  OMP_CLAUSE_DECL (c3) = unshare_expr (decl);\n+\t  OMP_CLAUSE_SIZE (c3) = size_int (0);\n+\t  decl = build_fold_indirect_ref (decl);\n+\t  OMP_CLAUSE_DECL (c) = decl;\n+\t}\n     }\n   if (GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (decl)))\n     {\n@@ -1884,14 +1896,32 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \t\tTREE_ADDRESSABLE (decl) = 1;\n \t      if (n->expr == NULL || n->expr->ref->u.ar.type == AR_FULL)\n \t\t{\n-\t\t  if (POINTER_TYPE_P (TREE_TYPE (decl)))\n+\t\t  if (POINTER_TYPE_P (TREE_TYPE (decl))\n+\t\t      && (gfc_omp_privatize_by_reference (decl)\n+\t\t\t  || GFC_DECL_GET_SCALAR_POINTER (decl)\n+\t\t\t  || GFC_DECL_GET_SCALAR_ALLOCATABLE (decl)\n+\t\t\t  || GFC_DECL_CRAY_POINTEE (decl)\n+\t\t\t  || GFC_DESCRIPTOR_TYPE_P\n+\t\t\t\t\t(TREE_TYPE (TREE_TYPE (decl)))))\n \t\t    {\n+\t\t      tree orig_decl = decl;\n \t\t      node4 = build_omp_clause (input_location,\n \t\t\t\t\t\tOMP_CLAUSE_MAP);\n \t\t      OMP_CLAUSE_MAP_KIND (node4) = OMP_CLAUSE_MAP_POINTER;\n \t\t      OMP_CLAUSE_DECL (node4) = decl;\n \t\t      OMP_CLAUSE_SIZE (node4) = size_int (0);\n \t\t      decl = build_fold_indirect_ref (decl);\n+\t\t      if (TREE_CODE (TREE_TYPE (orig_decl)) == REFERENCE_TYPE\n+\t\t\t  && (GFC_DECL_GET_SCALAR_POINTER (orig_decl)\n+\t\t\t      || GFC_DECL_GET_SCALAR_ALLOCATABLE (orig_decl)))\n+\t\t\t{\n+\t\t\t  node3 = build_omp_clause (input_location,\n+\t\t\t\t\t\t    OMP_CLAUSE_MAP);\n+\t\t\t  OMP_CLAUSE_MAP_KIND (node3) = OMP_CLAUSE_MAP_POINTER;\n+\t\t\t  OMP_CLAUSE_DECL (node3) = decl;\n+\t\t\t  OMP_CLAUSE_SIZE (node3) = size_int (0);\n+\t\t\t  decl = build_fold_indirect_ref (decl);\n+\t\t\t}\n \t\t    }\n \t\t  if (GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (decl)))\n \t\t    {"}]}