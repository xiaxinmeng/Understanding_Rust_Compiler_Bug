{"sha": "a271b42dfb37eba7e6e4c567496d5b58d9f2e012", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI3MWI0MmRmYjM3ZWJhN2U2ZTRjNTY3NDk2ZDViNThkOWYyZTAxMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-20T09:03:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-20T09:03:06Z"}, "message": "cfgloop.c (verify_loop_structure): Streamline and avoid ICEing on corrupt loop tree.\n\n2013-03-20  Richard Biener  <rguenther@suse.de>\n\n\t* cfgloop.c (verify_loop_structure): Streamline and avoid\n\tICEing on corrupt loop tree.\n\t* graph.c (draw_cfg_nodes_for_loop): Avoid ICEing on corrupt\n\tloop tree.\n\nFrom-SVN: r196811", "tree": {"sha": "94bdf259b8ca49c1e5c3f91c1eaf773c30e89dcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94bdf259b8ca49c1e5c3f91c1eaf773c30e89dcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a271b42dfb37eba7e6e4c567496d5b58d9f2e012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a271b42dfb37eba7e6e4c567496d5b58d9f2e012", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a271b42dfb37eba7e6e4c567496d5b58d9f2e012", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a271b42dfb37eba7e6e4c567496d5b58d9f2e012/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ebd65954f02ef75f7efd625c4fa8309e04a7a4de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd65954f02ef75f7efd625c4fa8309e04a7a4de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebd65954f02ef75f7efd625c4fa8309e04a7a4de"}], "stats": {"total": 85, "additions": 53, "deletions": 32}, "files": [{"sha": "62eff1d9f079ae369d4eb4d6a8de29e5e32969b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a271b42dfb37eba7e6e4c567496d5b58d9f2e012/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a271b42dfb37eba7e6e4c567496d5b58d9f2e012/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a271b42dfb37eba7e6e4c567496d5b58d9f2e012", "patch": "@@ -1,3 +1,10 @@\n+2013-03-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* cfgloop.c (verify_loop_structure): Streamline and avoid\n+\tICEing on corrupt loop tree.\n+\t* graph.c (draw_cfg_nodes_for_loop): Avoid ICEing on corrupt\n+\tloop tree.\n+\n 2013-03-20  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop-manip.c (slpeel_can_duplicate_loop_p): Do not"}, {"sha": "54ce2a24c2165e99134dc00d1890e34ee3822941", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 41, "deletions": 31, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a271b42dfb37eba7e6e4c567496d5b58d9f2e012/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a271b42dfb37eba7e6e4c567496d5b58d9f2e012/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=a271b42dfb37eba7e6e4c567496d5b58d9f2e012", "patch": "@@ -1319,7 +1319,7 @@ verify_loop_structure (void)\n {\n   unsigned *sizes, i, j;\n   sbitmap irreds;\n-  basic_block bb;\n+  basic_block bb, *bbs;\n   struct loop *loop;\n   int err = 0;\n   edge e;\n@@ -1335,43 +1335,51 @@ verify_loop_structure (void)\n   else\n     verify_dominators (CDI_DOMINATORS);\n \n-  /* Check sizes.  */\n-  sizes = XCNEWVEC (unsigned, num);\n-  sizes[0] = 2;\n-\n-  FOR_EACH_BB (bb)\n-    for (loop = bb->loop_father; loop; loop = loop_outer (loop))\n-      sizes[loop->num]++;\n-\n-  FOR_EACH_LOOP (li, loop, LI_INCLUDE_ROOT)\n-    {\n-      i = loop->num;\n-\n-      if (loop->num_nodes != sizes[i])\n-\t{\n-\t  error (\"size of loop %d should be %d, not %d\",\n-\t\t   i, sizes[i], loop->num_nodes);\n-\t  err = 1;\n-\t}\n-    }\n-\n   /* Check the headers.  */\n   FOR_EACH_BB (bb)\n-    if (bb_loop_header_p (bb)\n-\t&& bb->loop_father->header != bb)\n+    if (bb_loop_header_p (bb))\n       {\n-\terror (\"loop with header %d not in loop tree\", bb->index);\n+\tif (bb->loop_father->header == NULL)\n+\t  {\n+\t    error (\"loop with header %d marked for removal\", bb->index);\n+\t    err = 1;\n+\t  }\n+\telse if (bb->loop_father->header != bb)\n+\t  {\n+\t    error (\"loop with header %d not in loop tree\", bb->index);\n+\t    err = 1;\n+\t  }\n+      }\n+    else if (bb->loop_father->header == bb)\n+      {\n+\terror (\"non-loop with header %d not marked for removal\", bb->index);\n \terr = 1;\n       }\n \n-  /* Check get_loop_body.  */\n+  /* Check the recorded loop father and sizes of loops.  */\n   visited = sbitmap_alloc (last_basic_block);\n   bitmap_clear (visited);\n+  bbs = XNEWVEC (basic_block, n_basic_blocks);\n   FOR_EACH_LOOP (li, loop, LI_FROM_INNERMOST)\n     {\n-      basic_block *bbs = get_loop_body (loop);\n+      unsigned n;\n \n-      for (j = 0; j < loop->num_nodes; j++)\n+      if (loop->header == NULL)\n+\t{\n+\t  error (\"removed loop %d in loop tree\", loop->num);\n+\t  err = 1;\n+\t  continue;\n+\t}\n+\n+      n = get_loop_body_with_size (loop, bbs, n_basic_blocks);\n+      if (loop->num_nodes != n)\n+\t{\n+\t  error (\"size of loop %d should be %d, not %d\",\n+\t\t loop->num, n, loop->num_nodes);\n+\t  err = 1;\n+\t}\n+\n+      for (j = 0; j < n; j++)\n \t{\n \t  bb = bbs[j];\n \n@@ -1394,16 +1402,16 @@ verify_loop_structure (void)\n \t      err = 1;\n \t    }\n \t}\n-\n-      free (bbs);\n     }\n+  free (bbs);\n   sbitmap_free (visited);\n \n   /* Check headers and latches.  */\n   FOR_EACH_LOOP (li, loop, 0)\n     {\n       i = loop->num;\n-\n+      if (loop->header == NULL)\n+\tcontinue;\n       if (!bb_loop_header_p (loop->header))\n \t{\n \t  error (\"loop %d%'s header is not a loop header\", i);\n@@ -1561,6 +1569,7 @@ verify_loop_structure (void)\n     {\n       unsigned n_exits = 0, eloops;\n \n+      sizes = XCNEWVEC (unsigned, num);\n       memset (sizes, 0, sizeof (unsigned) * num);\n       FOR_EACH_BB (bb)\n \t{\n@@ -1624,11 +1633,12 @@ verify_loop_structure (void)\n \t      err = 1;\n \t    }\n \t}\n+\n+      free (sizes);\n     }\n \n   gcc_assert (!err);\n \n-  free (sizes);\n   if (!dom_available)\n     free_dominance_info (CDI_DOMINATORS);\n }"}, {"sha": "1ecfdf0b76126606b769c9a3b8835346b5a4b55b", "filename": "gcc/graph.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a271b42dfb37eba7e6e4c567496d5b58d9f2e012/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a271b42dfb37eba7e6e4c567496d5b58d9f2e012/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=a271b42dfb37eba7e6e4c567496d5b58d9f2e012", "patch": "@@ -213,7 +213,8 @@ draw_cfg_nodes_for_loop (pretty_printer *pp, int funcdef_no,\n   unsigned int i;\n   const char *fillcolors[3] = { \"grey88\", \"grey77\", \"grey66\" };\n \n-  if (loop->latch != EXIT_BLOCK_PTR)\n+  if (loop->header != NULL\n+      && loop->latch != EXIT_BLOCK_PTR)\n     pp_printf (pp,\n \t       \"\\tsubgraph cluster_%d_%d {\\n\"\n \t       \"\\tstyle=\\\"filled\\\";\\n\"\n@@ -229,6 +230,9 @@ draw_cfg_nodes_for_loop (pretty_printer *pp, int funcdef_no,\n   for (struct loop *inner = loop->inner; inner; inner = inner->next)\n     draw_cfg_nodes_for_loop (pp, funcdef_no, inner);\n \n+  if (loop->header == NULL)\n+    return;\n+\n   if (loop->latch == EXIT_BLOCK_PTR)\n     body = get_loop_body (loop);\n   else"}]}