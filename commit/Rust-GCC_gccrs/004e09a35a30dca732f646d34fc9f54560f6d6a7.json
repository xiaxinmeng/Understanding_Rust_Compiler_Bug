{"sha": "004e09a35a30dca732f646d34fc9f54560f6d6a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA0ZTA5YTM1YTMwZGNhNzMyZjY0NmQzNGZjOWY1NDU2MGY2ZDZhNw==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2005-08-04T21:01:50Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2005-08-04T21:01:50Z"}, "message": "builtin-wctype-1.c: Use __WCHAR_TYPE__ and __WINT_TYPE__ in generated prototypes if possible.\n\n\t* gcc.dg/torture/builtin-wctype-1.c: Use __WCHAR_TYPE__ and\n\t__WINT_TYPE__ in generated prototypes if possible.\n\nFrom-SVN: r102747", "tree": {"sha": "0ddd2e91959bcf134d25fcb613d84599d25a2001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ddd2e91959bcf134d25fcb613d84599d25a2001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/004e09a35a30dca732f646d34fc9f54560f6d6a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/004e09a35a30dca732f646d34fc9f54560f6d6a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/004e09a35a30dca732f646d34fc9f54560f6d6a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/004e09a35a30dca732f646d34fc9f54560f6d6a7/comments", "author": null, "committer": null, "parents": [{"sha": "9427924ef875340a2563e542e973935b7927e672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9427924ef875340a2563e542e973935b7927e672", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9427924ef875340a2563e542e973935b7927e672"}], "stats": {"total": 54, "additions": 37, "deletions": 17}, "files": [{"sha": "4786280ad4f3e1fff2a26d600fe30dd76e123e78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/004e09a35a30dca732f646d34fc9f54560f6d6a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/004e09a35a30dca732f646d34fc9f54560f6d6a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=004e09a35a30dca732f646d34fc9f54560f6d6a7", "patch": "@@ -1,3 +1,8 @@\n+2005-08-04  Danny Smith  <dannysmith@users.sourceforge.net>\n+\t\n+\t* gcc.dg/torture/builtin-wctype-1.c: Use __WCHAR_TYPE__ and\n+\t__WINT_TYPE__ in generated prototypes if possible.\n+\n 2005-08-04  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR 22037"}, {"sha": "476bccaf6b6230579fd29ce84f0258df6d1a35e1", "filename": "gcc/testsuite/gcc.dg/torture/builtin-wctype-1.c", "status": "modified", "additions": 32, "deletions": 17, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/004e09a35a30dca732f646d34fc9f54560f6d6a7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-wctype-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/004e09a35a30dca732f646d34fc9f54560f6d6a7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-wctype-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-wctype-1.c?ref=004e09a35a30dca732f646d34fc9f54560f6d6a7", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2004  Free Software Foundation.\n+/* Copyright (C) 2004, 2005  Free Software Foundation.\n \n    Verify that built-in wctype function attributes are correctly set\n    by the compiler.\n@@ -7,32 +7,47 @@\n \n /* { dg-do link } */\n \n+/* Use the target type definitions if we can.  */ \n+#ifndef __WINT_TYPE__\n+#define __WINT_TYPE__ int\n+#endif\n+\n+#ifndef __WCHAR_TYPE__\n+#define __WCHAR_TYPE__ int\n+#endif\n \n void test(int i)\n {\n   /* All of these ctype functions should be const/pure and thus\n      eliminated.  */\n-#define TEST_CTYPE(FN) \\\n-  extern int FN(int); \\\n+#define TEST_IS_WCTYPE(FN) \\\n+  extern int FN(__WINT_TYPE__); \\\n+  extern void link_failure_##FN(void); \\\n+  if (FN(i) != FN(i)) \\\n+    link_failure_##FN()\n+\n+#define TEST_TO_WCTYPE(FN) \\\n+  extern __WCHAR_TYPE__ FN(__WCHAR_TYPE__); \\\n   extern void link_failure_##FN(void); \\\n   if (FN(i) != FN(i)) \\\n     link_failure_##FN()\n+\n   \n #ifdef __OPTIMIZE__\n-  TEST_CTYPE(iswalnum);\n-  TEST_CTYPE(iswalpha);\n-  TEST_CTYPE(iswblank);\n-  TEST_CTYPE(iswcntrl);\n-  TEST_CTYPE(iswdigit);\n-  TEST_CTYPE(iswgraph);\n-  TEST_CTYPE(iswlower);\n-  TEST_CTYPE(iswprint);\n-  TEST_CTYPE(iswpunct);\n-  TEST_CTYPE(iswspace);\n-  TEST_CTYPE(iswupper);\n-  TEST_CTYPE(iswxdigit);\n-  TEST_CTYPE(towlower);\n-  TEST_CTYPE(towupper);\n+  TEST_IS_WCTYPE(iswalnum);\n+  TEST_IS_WCTYPE(iswalpha);\n+  TEST_IS_WCTYPE(iswblank);\n+  TEST_IS_WCTYPE(iswcntrl);\n+  TEST_IS_WCTYPE(iswdigit);\n+  TEST_IS_WCTYPE(iswgraph);\n+  TEST_IS_WCTYPE(iswlower);\n+  TEST_IS_WCTYPE(iswprint);\n+  TEST_IS_WCTYPE(iswpunct);\n+  TEST_IS_WCTYPE(iswspace);\n+  TEST_IS_WCTYPE(iswupper);\n+  TEST_IS_WCTYPE(iswxdigit);\n+  TEST_TO_WCTYPE(towlower);\n+  TEST_TO_WCTYPE(towupper);\n #endif /* __OPTIMIZE__ */\n }\n "}]}