{"sha": "119a46778041b73124128fa39a2d4b28ce8836a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5YTQ2Nzc4MDQxYjczMTI0MTI4ZmEzOWEyZDRiMjhjZTg4MzZhNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "1999-12-02T00:38:56Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1999-12-02T00:38:56Z"}, "message": "sparc.md (movsf_const_intreg): Add constraints for regclass' sake.\n\n\t* config/sparc/sparc.md (movsf_const_intreg): Add constraints for\n\tregclass' sake.\n\t(movdf_const_intreg_sp32): Likewise. Prefer the memory load\n\talternative because setting up 64bit constant is usually costly,\n\tespecially when reload is in progress or completed.\n\t(movdf_const_intreg_sp64): Likewise.\n\t(movdf_const_intreg split): Fix building up constants when\n\tHOST_BITS_PER_WIDE_INT is 64 yet long is 32bit.\n\nFrom-SVN: r30750", "tree": {"sha": "255562d61a77abe8039f3238b537a23925cda44a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/255562d61a77abe8039f3238b537a23925cda44a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/119a46778041b73124128fa39a2d4b28ce8836a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/119a46778041b73124128fa39a2d4b28ce8836a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/119a46778041b73124128fa39a2d4b28ce8836a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/119a46778041b73124128fa39a2d4b28ce8836a5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e8758a3a01c83e84cecf517e2c89d38be83a61b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8758a3a01c83e84cecf517e2c89d38be83a61b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8758a3a01c83e84cecf517e2c89d38be83a61b0"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "0737719128a03fbe4c64f771c262582b57aaf953", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/119a46778041b73124128fa39a2d4b28ce8836a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/119a46778041b73124128fa39a2d4b28ce8836a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=119a46778041b73124128fa39a2d4b28ce8836a5", "patch": "@@ -1,3 +1,14 @@\n+1999-12-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/sparc/sparc.md (movsf_const_intreg): Add constraints for\n+\tregclass' sake.\n+\t(movdf_const_intreg_sp32): Likewise. Prefer the memory load\n+\talternative because setting up 64bit constant is usually costly,\n+\tespecially when reload is in progress or completed.\n+\t(movdf_const_intreg_sp64): Likewise.\n+\t(movdf_const_intreg split): Fix building up constants when\n+\tHOST_BITS_PER_WIDE_INT is 64 yet long is 32bit.\n+\n Wed Dec  1 16:51:22 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* combine.c (if_then_else_cond): Use const_true_rtx instead of"}, {"sha": "1dcbf35499eb8d8b87827c50bf20fc90f19e94e2", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/119a46778041b73124128fa39a2d4b28ce8836a5/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/119a46778041b73124128fa39a2d4b28ce8836a5/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=119a46778041b73124128fa39a2d4b28ce8836a5", "patch": "@@ -2765,7 +2765,7 @@\n \n (define_insn \"*movsf_const_intreg\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,r\")\n-        (match_operand:SF 1 \"const_double_operand\" \"m,F\"))]\n+        (match_operand:SF 1 \"const_double_operand\" \"m#F,F\"))]\n   \"TARGET_FPU\"\n   \"*\n {\n@@ -2932,8 +2932,8 @@\n    (set_attr \"length\" \"1\")])\n \n (define_insn \"*movdf_const_intreg_sp32\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=e,e,r\")\n-        (match_operand:DF 1 \"const_double_operand\" \"T,o,F\"))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e,e,?r\")\n+        (match_operand:DF 1 \"const_double_operand\" \"T#F,o#F,F\"))]\n   \"TARGET_FPU && ! TARGET_ARCH64\"\n   \"@\n    ldd\\\\t%1, %0\n@@ -2945,8 +2945,8 @@\n ;; Now that we redo life analysis with a clean slate after\n ;; instruction splitting for sched2 this can work.\n (define_insn \"*movdf_const_intreg_sp64\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=e,r\")\n-        (match_operand:DF 1 \"const_double_operand\" \"m,F\"))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e,?r\")\n+        (match_operand:DF 1 \"const_double_operand\" \"m#F,F\"))]\n   \"TARGET_FPU && TARGET_ARCH64\"\n   \"@\n    ldd\\\\t%1, %0\n@@ -2978,8 +2978,8 @@\n #if HOST_BITS_PER_WIDE_INT == 64\n       HOST_WIDE_INT val;\n \n-      val = ((HOST_WIDE_INT)l[1] |\n-             ((HOST_WIDE_INT)l[0] << 32));\n+      val = ((HOST_WIDE_INT)(unsigned long)l[1] |\n+             ((HOST_WIDE_INT)(unsigned long)l[0] << 32));\n       emit_insn (gen_movdi (operands[0], GEN_INT (val)));\n #else\n       emit_insn (gen_movdi (operands[0],"}]}