{"sha": "c5aad5a41838dbfd29ff114692ff9533b52746b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVhYWQ1YTQxODM4ZGJmZDI5ZmYxMTQ2OTJmZjk1MzNiNTI3NDZiNA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-10-12T17:46:24Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-10-12T17:46:24Z"}, "message": "libstdc++: Apply proposed resolution for LWG 3450\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (take_while_view::begin): Constrain the\n\tconst overload further as per LWG 3450.\n\t(take_while_view::end): Likewise.\n\t* testsuite/std/ranges/adaptors/take_while.cc: Add test for LWG\n\t3450.", "tree": {"sha": "b8c2de4f7b24bd6225243ee44817633b950caac2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8c2de4f7b24bd6225243ee44817633b950caac2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5aad5a41838dbfd29ff114692ff9533b52746b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5aad5a41838dbfd29ff114692ff9533b52746b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5aad5a41838dbfd29ff114692ff9533b52746b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5aad5a41838dbfd29ff114692ff9533b52746b4/comments", "author": null, "committer": null, "parents": [{"sha": "e066821b6f6b7332c7a67981f7b33c9ba0ccaee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e066821b6f6b7332c7a67981f7b33c9ba0ccaee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e066821b6f6b7332c7a67981f7b33c9ba0ccaee7"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "55e7c4de234c5db3a865b778a0e809e7ad738eba", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5aad5a41838dbfd29ff114692ff9533b52746b4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5aad5a41838dbfd29ff114692ff9533b52746b4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=c5aad5a41838dbfd29ff114692ff9533b52746b4", "patch": "@@ -1888,6 +1888,7 @@ namespace views\n \n       constexpr auto\n       begin() const requires range<const _Vp>\n+\t&& indirect_unary_predicate<const _Pred, iterator_t<const _Vp>>\n       { return ranges::begin(_M_base); }\n \n       constexpr auto\n@@ -1897,6 +1898,7 @@ namespace views\n \n       constexpr auto\n       end() const requires range<const _Vp>\n+\t&& indirect_unary_predicate<const _Pred, iterator_t<const _Vp>>\n       { return _Sentinel<true>(ranges::end(_M_base),\n \t\t\t       std::__addressof(*_M_pred)); }\n     };"}, {"sha": "48771397f1d8be0c30025094a1a41dc1af1122dd", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/take_while.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5aad5a41838dbfd29ff114692ff9533b52746b4/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Ftake_while.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5aad5a41838dbfd29ff114692ff9533b52746b4/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Ftake_while.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Ftake_while.cc?ref=c5aad5a41838dbfd29ff114692ff9533b52746b4", "patch": "@@ -70,10 +70,20 @@ test03()\n   b = ranges::end(v);\n }\n \n+void\n+test04()\n+{\n+  // LWG 3450\n+  auto v = views::single(1) | views::take_while([](int& x) { return true;});\n+  static_assert(ranges::range<decltype(v)>);\n+  static_assert(!ranges::range<decltype(v) const>);\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n }"}]}