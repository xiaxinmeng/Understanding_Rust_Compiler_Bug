{"sha": "ea4f1fce751a54c91ac3a4bc72141709499bf36b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE0ZjFmY2U3NTFhNTRjOTFhYzNhNGJjNzIxNDE3MDk0OTliZjM2Yg==", "commit": {"author": {"name": "Jeffrey Oldham", "email": "oldham@codesourcery.com", "date": "2001-01-15T03:33:56Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2001-01-15T03:33:56Z"}, "message": "defaults.h (SUPPORTS_INIT_PRIORITY): New macro to indicate the linker supports the init_priority C++ attribute.\n\ngcc/ChangeLog:\n2001-01-14  Jeffrey Oldham  <oldham@codesourcery.com>\n\n\t* defaults.h (SUPPORTS_INIT_PRIORITY): New macro to indicate the\n\tlinker supports the init_priority C++ attribute.\n\t* tm.texi (SUPPORTS_INIT_PRIORITY): Documentation for new macro.\n\t* config/mips/iris6.h (SUPPORTS_INIT_PRIORITY): Indicate Irix\n\tlinker does not support init_priority C++ attribute.\n\ngcc/cp/ChangeLog:\n2001-01-14  Jeffrey Oldham  <oldham@codesourcery.com>\n\n\t* tree.c: Add defaults.h\n\t(cp_valid_lang_attribute): Incorporate SUPPORTS_INIT_PRIORITY.\n\t* Make-lang.in (cp/tree.o): Add defaults.h.\n\nFrom-SVN: r39023", "tree": {"sha": "5b522cca0fe69fade7ce32a3bd076b8b4accee35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b522cca0fe69fade7ce32a3bd076b8b4accee35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea4f1fce751a54c91ac3a4bc72141709499bf36b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea4f1fce751a54c91ac3a4bc72141709499bf36b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea4f1fce751a54c91ac3a4bc72141709499bf36b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea4f1fce751a54c91ac3a4bc72141709499bf36b/comments", "author": null, "committer": null, "parents": [{"sha": "bfeee001eb0d6f6a782f12c91bfd39f61229b88c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfeee001eb0d6f6a782f12c91bfd39f61229b88c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfeee001eb0d6f6a782f12c91bfd39f61229b88c"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "12d67febc80485f46f8ac4c0ab2e9411978f762d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea4f1fce751a54c91ac3a4bc72141709499bf36b", "patch": "@@ -1,3 +1,11 @@\n+2001-01-14  Jeffrey Oldham  <oldham@codesourcery.com>\n+\n+\t* defaults.h (SUPPORTS_INIT_PRIORITY): New macro to indicate the\n+\tlinker supports the init_priority C++ attribute.\n+\t* tm.texi (SUPPORTS_INIT_PRIORITY): Documentation for new macro.\n+\t* config/mips/iris6.h (SUPPORTS_INIT_PRIORITY): Indicate Irix\n+\tlinker does not support init_priority C++ attribute.\n+\n Sun Jan 14 22:31:30 2001  J\"orn Rennecke <amylaar@redhat.com>\n \n \t* Makefile.in (libgcc1-test.o): Depends on stmp-int-hdrs."}, {"sha": "b7a6f8f64e37a2feb52e8fe8242bd1510c3a8c7e", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=ea4f1fce751a54c91ac3a4bc72141709499bf36b", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Iris version 6.\n-   Copyright (C) 1994, 1995, 1996, 1997, 1998, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1997, 1998, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -205,6 +205,10 @@ Boston, MA 02111-1307, USA.  */\n \n #define ASM_WEAKEN_LABEL(FILE,NAME) ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,0)\n \n+/* Irix assembler does not support the init_priority C++ attribute.  */\n+#undef SUPPORTS_INIT_PRIORITY\n+#define SUPPORTS_INIT_PRIORITY 0\n+\n #define POPSECTION_ASM_OP\t\"\\t.popsection\"\n \n #define DEBUG_INFO_SECTION\t\".debug_info,0x7000001e,0,0,1\""}, {"sha": "21ca094f989fc41be862600acad01f7f6567af4f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ea4f1fce751a54c91ac3a4bc72141709499bf36b", "patch": "@@ -1,3 +1,9 @@\n+2001-01-14  Jeffrey Oldham  <oldham@codesourcery.com>\n+\n+\t* tree.c: Add defaults.h\n+\t(cp_valid_lang_attribute): Incorporate SUPPORTS_INIT_PRIORITY.\n+\t* Make-lang.in (cp/tree.o): Add defaults.h.\n+\n 2001-01-13  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* Make-lang.in (CXX_C_OBJS): Add c-format.o."}, {"sha": "b6bbd37516af667ceeb486f33561010c158c24f6", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=ea4f1fce751a54c91ac3a4bc72141709499bf36b", "patch": "@@ -274,7 +274,7 @@ cp/method.o: cp/method.c $(CXX_TREE_H) toplev.h $(GGC_H) $(RTL_H) $(EXPR_H)\n cp/cvt.o: cp/cvt.c $(CXX_TREE_H) cp/decl.h flags.h toplev.h convert.h\n cp/search.o: cp/search.c $(CXX_TREE_H) stack.h flags.h toplev.h $(RTL_H)\n cp/tree.o: cp/tree.c $(CXX_TREE_H) flags.h toplev.h $(GGC_H) $(RTL_H) \\\n-  insn-config.h integrate.h\n+  insn-config.h integrate.h defaults.h\n cp/ptree.o: cp/ptree.c $(CXX_TREE_H) system.h\n cp/rtti.o: cp/rtti.c $(CXX_TREE_H) flags.h toplev.h defaults.h\n cp/except.o: cp/except.c $(CXX_TREE_H) flags.h $(RTL_H) except.h toplev.h \\"}, {"sha": "88f07be94dcc3a17bbcbf11960432dff4b22260a", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=ea4f1fce751a54c91ac3a4bc72141709499bf36b", "patch": "@@ -1,6 +1,6 @@\n /* Language-dependent node constructors for parse phase of GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -31,6 +31,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"ggc.h\"\n #include \"insn-config.h\"\n #include \"integrate.h\"\n+#include \"defaults.h\"\n \n static tree bot_manip PARAMS ((tree *, int *, void *));\n static tree bot_replace PARAMS ((tree *, int *, void *));\n@@ -2312,8 +2313,16 @@ cp_valid_lang_attribute (attr_name, attr_args, decl, type)\n \t    (\"requested init_priority is reserved for internal use\");\n \t}\n \n-      DECL_INIT_PRIORITY (decl) = pri;\n-      return 1;\n+      if (SUPPORTS_INIT_PRIORITY)\n+\t{\n+\t  DECL_INIT_PRIORITY (decl) = pri;\n+\t  return 1;\n+\t}\n+      else\n+\t{\n+\t  error (\"init_priority attribute is not supported on this platform\");\n+\t  return 0;\n+\t}\n     }\n \n   return 0;"}, {"sha": "2aa5218d464180ef1f2b39c31779ea9fd8f9baa3", "filename": "gcc/defaults.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=ea4f1fce751a54c91ac3a4bc72141709499bf36b", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of various defaults for how to do assembler output\n    (most of which are designed to be appropriate for GAS or for\n    some BSD assembler).\n-   Copyright (C) 1992, 1996, 1997, 1998, 1999, 2000\n+   Copyright (C) 1992, 1996, 1997, 1998, 1999, 2000, 2001\n    Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com)\n \n@@ -167,6 +167,12 @@ do { ASM_OUTPUT_LABEL(FILE,LABEL_ALTERNATE_NAME (INSN)); } while (0)\n # endif\n #endif\n \n+/* If the target supports init_priority C++ attribute, give\n+   SUPPORTS_INIT_PRIORITY a nonzero value.  */\n+#ifndef SUPPORTS_INIT_PRIORITY\n+#define SUPPORTS_INIT_PRIORITY 1\n+#endif /* SUPPORTS_INIT_PRIORITY */\n+\n /* If we have a definition of INCOMING_RETURN_ADDR_RTX, assume that\n    the rest of the DWARF 2 frame unwind support is also provided.  */\n #if !defined (DWARF2_UNWIND_INFO) && defined (INCOMING_RETURN_ADDR_RTX)"}, {"sha": "16afc46b00853fc9eb958ad256fe7cfdd2cf4bd5", "filename": "gcc/tm.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4f1fce751a54c91ac3a4bc72141709499bf36b/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=ea4f1fce751a54c91ac3a4bc72141709499bf36b", "patch": "@@ -6387,6 +6387,13 @@ If defined, @code{main} will call @code{__main} despite the presence of\n where the init section is not actually run automatically, but is still\n useful for collecting the lists of constructors and destructors.\n \n+@item SUPPORTS_INIT_PRIORITY\n+@findex SUPPORTS_INIT_PRIORITY\n+If nonzero, the C++ @code{init_priority} attribute is supported and the\n+compiler should emit instructions to control the order of initialization\n+of objects.  If zero, the compiler will issue an error message upon\n+encountering an @code{init_priority} attribute.\n+\n @item ASM_OUTPUT_CONSTRUCTOR (@var{stream}, @var{name})\n @findex ASM_OUTPUT_CONSTRUCTOR\n Define this macro as a C statement to output on the stream @var{stream}"}]}