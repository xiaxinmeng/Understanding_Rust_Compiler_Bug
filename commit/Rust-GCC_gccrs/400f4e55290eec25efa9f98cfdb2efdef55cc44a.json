{"sha": "400f4e55290eec25efa9f98cfdb2efdef55cc44a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAwZjRlNTUyOTBlZWMyNWVmYTlmOThjZmRiMmVmZGVmNTVjYzQ0YQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-03-28T21:18:21Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-03-28T21:18:21Z"}, "message": "Makefile.am (CXXLINK): Add --tag disable-shared after --tag CXX.\n\n* libsupc++/Makefile.am (CXXLINK): Add --tag disable-shared after\n--tag CXX.\n(LIBTOOL): Let automake take care of its definition.\n* libsupc++/Makefile.in: Rebuilt.\n\nFrom-SVN: r40947", "tree": {"sha": "0fdca5afc004715ac4ee8cd1fd121d95d85a8af8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fdca5afc004715ac4ee8cd1fd121d95d85a8af8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/400f4e55290eec25efa9f98cfdb2efdef55cc44a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400f4e55290eec25efa9f98cfdb2efdef55cc44a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/400f4e55290eec25efa9f98cfdb2efdef55cc44a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400f4e55290eec25efa9f98cfdb2efdef55cc44a/comments", "author": null, "committer": null, "parents": [{"sha": "a7fd218666dd9df0226411a88d8ea2a355026456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fd218666dd9df0226411a88d8ea2a355026456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7fd218666dd9df0226411a88d8ea2a355026456"}], "stats": {"total": 85, "additions": 60, "deletions": 25}, "files": [{"sha": "17bb717bdb29d5023c83c776add7abc5a2558ab5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400f4e55290eec25efa9f98cfdb2efdef55cc44a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400f4e55290eec25efa9f98cfdb2efdef55cc44a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=400f4e55290eec25efa9f98cfdb2efdef55cc44a", "patch": "@@ -1,3 +1,10 @@\n+2001-03-28  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* libsupc++/Makefile.am (CXXLINK): Add --tag disable-shared after\n+\t--tag CXX.\n+\t(LIBTOOL): Let automake take care of its definition.\n+\t* libsupc++/Makefile.in: Rebuilt.\n+\n 2001-03-28  Richard Henderson  <rth@redhat.com>\n \n \tIA-64 ABI Exception Handling:"}, {"sha": "34b8801aa8c12c7ad47b4e5dfa143ea838ad5670", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400f4e55290eec25efa9f98cfdb2efdef55cc44a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400f4e55290eec25efa9f98cfdb2efdef55cc44a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=400f4e55290eec25efa9f98cfdb2efdef55cc44a", "patch": "@@ -99,8 +99,6 @@ libsupc__convenience_la_SOURCES = $(sources)\n glibcppinstalldir = @gxx_include_dir@\n glibcppinstall_HEADERS = $(headers)\n \n-# Flags to force separate libtool library to be static only.\n-LIBTOOL = @LIBTOOL@ --tag disable-shared\n LIBSUPCXX_CXXFLAGS = -prefer-pic\n \n # AM_CXXFLAGS needs to be in each subdirectory so that it can be\n@@ -146,11 +144,6 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \\\n-\t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n-\n-\n-\n-\n-\n-\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+          --mode=link $(CXX) \\\n+          @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@"}, {"sha": "598550d66811968667ed4009ce63aa02c2ef13d7", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 50, "deletions": 15, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400f4e55290eec25efa9f98cfdb2efdef55cc44a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400f4e55290eec25efa9f98cfdb2efdef55cc44a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=400f4e55290eec25efa9f98cfdb2efdef55cc44a", "patch": "@@ -79,6 +79,7 @@ GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBSTRINGOBJS = @LIBSTRINGOBJS@\n+LIBTOOL = @LIBTOOL@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n@@ -127,11 +128,13 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-CONFIG_CXXFLAGS =  \t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n+CONFIG_CXXFLAGS = \\\n+\t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Warning flags to use.\n-WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n+WARN_CXXFLAGS = \\\n+\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n@@ -143,13 +146,38 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES =  \t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \t $(LIBSUPCXX_INCLUDES)\n-\n-\n-headers =  \texception new typeinfo cxxabi.h exception_defines.h \n-\n-\n-sources =  \tdel_op.cc \tdel_opnt.cc \tdel_opv.cc \tdel_opvnt.cc \teh_alloc.cc \teh_aux_runtime.cc \teh_catch.cc \teh_exception.cc \teh_globals.cc \teh_personality.cc \teh_terminate.cc \teh_throw.cc \tnew_handler.cc \tnew_op.cc \tnew_opnt.cc \tnew_opv.cc \tnew_opvnt.cc \tpure.cc \ttinfo.cc \ttinfo2.cc \tvec.cc\n+INCLUDES = \\\n+\t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \\\n+\t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \\\n+\t $(LIBSUPCXX_INCLUDES)\n+\n+\n+headers = \\\n+\texception new typeinfo cxxabi.h exception_defines.h \n+\n+\n+sources = \\\n+\tdel_op.cc \\\n+\tdel_opnt.cc \\\n+\tdel_opv.cc \\\n+\tdel_opvnt.cc \\\n+\teh_alloc.cc \\\n+\teh_aux_runtime.cc \\\n+\teh_catch.cc \\\n+\teh_exception.cc \\\n+\teh_globals.cc \\\n+\teh_personality.cc \\\n+\teh_terminate.cc \\\n+\teh_throw.cc \\\n+\tnew_handler.cc \\\n+\tnew_op.cc \\\n+\tnew_opnt.cc \\\n+\tnew_opv.cc \\\n+\tnew_opvnt.cc \\\n+\tpure.cc \\\n+\ttinfo.cc \\\n+\ttinfo2.cc \\\n+\tvec.cc\n \n \n libsupc___la_SOURCES = $(sources)\n@@ -158,16 +186,19 @@ libsupc__convenience_la_SOURCES = $(sources)\n glibcppinstalldir = @gxx_include_dir@\n glibcppinstall_HEADERS = $(headers)\n \n-# Flags to force separate libtool library to be static only.\n-LIBTOOL = @LIBTOOL@ --tag disable-shared\n LIBSUPCXX_CXXFLAGS = -prefer-pic\n \n # AM_CXXFLAGS needs to be in each subdirectory so that it can be\n # modified in a per-library or per-sub-library way.  Need to manually\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it. (ie, --enable-debug)\n-AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS) \n+AM_CXXFLAGS = \\\n+\t-fno-implicit-templates \\\n+\t$(LIBSUPCXX_CXXFLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS) \n \n \n # libstdc++ libtool notes\n@@ -191,7 +222,9 @@ AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS)\n #\n # We have to put --tag disable-shared after --tag CXX lest things\n # CXX undo the affect of disable-shared.\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared                --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+               --mode=compile $(CXX) $(INCLUDES) \\\n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # 3) We'd have a problem when building the shared libstdc++ object if\n@@ -200,7 +233,9 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared                --mode=c\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+          --mode=link $(CXX) \\\n+          @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n@@ -392,7 +427,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  if test -f $$file; then d=.; else d=$(srcdir); fi; \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}]}