{"sha": "c67a1cf6a842249a064d479b455321e6663e4708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY3YTFjZjZhODQyMjQ5YTA2NGQ0NzliNDU1MzIxZTY2NjNlNDcwOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-07-22T00:23:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-07-22T00:23:47Z"}, "message": "emit-rtl.c (set_mem_attributes): Preserve indirection of PARM_DECL when flag_argument_noalias == 2.\n\n        * emit-rtl.c (set_mem_attributes): Preserve indirection of PARM_DECL\n        when flag_argument_noalias == 2.\n        * alias.c (nonoverlapping_memrefs_p): Handle that.\n        * print-rtl.c (print_mem_expr): Likewise.\n\nFrom-SVN: r55633", "tree": {"sha": "270dccb5bfc81ab3da7eb1b086e39f7ee7bdafe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/270dccb5bfc81ab3da7eb1b086e39f7ee7bdafe0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c67a1cf6a842249a064d479b455321e6663e4708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67a1cf6a842249a064d479b455321e6663e4708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c67a1cf6a842249a064d479b455321e6663e4708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67a1cf6a842249a064d479b455321e6663e4708/comments", "author": null, "committer": null, "parents": [{"sha": "b68daef415643d8b384f939917b8802e300f1893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b68daef415643d8b384f939917b8802e300f1893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b68daef415643d8b384f939917b8802e300f1893"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "a852ef736ae424d7ed3d1e2fcafebf99be583c1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67a1cf6a842249a064d479b455321e6663e4708/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67a1cf6a842249a064d479b455321e6663e4708/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c67a1cf6a842249a064d479b455321e6663e4708", "patch": "@@ -1,3 +1,10 @@\n+2002-07-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* emit-rtl.c (set_mem_attributes): Preserve indirection of PARM_DECL\n+\twhen flag_argument_noalias == 2.\n+\t* alias.c (nonoverlapping_memrefs_p): Handle that.\n+\t* print-rtl.c (print_mem_expr): Likewise.\n+\n 2002-07-21  Hartmut Schirmer  <hartmut.schirmer@arcor.de>\n \n \t* libgcc2.c (__divdi3, __moddi3): Use unary minus operator"}, {"sha": "68a827224fab98991cc404165e0cc993b817c26b", "filename": "gcc/alias.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67a1cf6a842249a064d479b455321e6663e4708/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67a1cf6a842249a064d479b455321e6663e4708/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=c67a1cf6a842249a064d479b455321e6663e4708", "patch": "@@ -1957,6 +1957,14 @@ nonoverlapping_memrefs_p (x, y)\n       moffsetx = adjust_offset_for_component_ref (exprx, moffsetx);\n       exprx = t;\n     }\n+  else if (TREE_CODE (exprx) == INDIRECT_REF)\n+    {\n+      exprx = TREE_OPERAND (exprx, 0);\n+      if (flag_argument_noalias < 2\n+\t  || TREE_CODE (exprx) != PARM_DECL)\n+\treturn 0;\n+    }\n+\n   moffsety = MEM_OFFSET (y);\n   if (TREE_CODE (expry) == COMPONENT_REF)\n     {\n@@ -1966,6 +1974,13 @@ nonoverlapping_memrefs_p (x, y)\n       moffsety = adjust_offset_for_component_ref (expry, moffsety);\n       expry = t;\n     }\n+  else if (TREE_CODE (expry) == INDIRECT_REF)\n+    {\n+      expry = TREE_OPERAND (expry, 0);\n+      if (flag_argument_noalias < 2\n+\t  || TREE_CODE (expry) != PARM_DECL)\n+\treturn 0;\n+    }\n \n   if (! DECL_P (exprx) || ! DECL_P (expry))\n     return 0;"}, {"sha": "ab73f00c6bbd36daebf0de220b4026da70b8a23b", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67a1cf6a842249a064d479b455321e6663e4708/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67a1cf6a842249a064d479b455321e6663e4708/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=c67a1cf6a842249a064d479b455321e6663e4708", "patch": "@@ -1805,14 +1805,41 @@ set_mem_attributes (ref, t, objectp)\n \t    }\n \t  while (TREE_CODE (t) == ARRAY_REF);\n \n-\t  if (TREE_CODE (t) == COMPONENT_REF)\n+\t  if (DECL_P (t))\n+\t    {\n+\t      expr = t;\n+\t      if (host_integerp (off_tree, 1))\n+\t\toffset = GEN_INT (tree_low_cst (off_tree, 1));\n+\t      size = (DECL_SIZE_UNIT (t)\n+\t\t      && host_integerp (DECL_SIZE_UNIT (t), 1)\n+\t\t      ? GEN_INT (tree_low_cst (DECL_SIZE_UNIT (t), 1)) : 0);\n+\t      align = DECL_ALIGN (t);\n+\t    }\n+\t  else if (TREE_CODE (t) == COMPONENT_REF)\n \t    {\n \t      expr = component_ref_for_mem_expr (t);\n \t      if (host_integerp (off_tree, 1))\n \t\toffset = GEN_INT (tree_low_cst (off_tree, 1));\n \t      /* ??? Any reason the field size would be different than\n \t\t the size we got from the type?  */\n \t    }\n+\t  else if (flag_argument_noalias > 1\n+\t\t   && TREE_CODE (t) == INDIRECT_REF\n+\t\t   && TREE_CODE (TREE_OPERAND (t, 0)) == PARM_DECL)\n+\t    {\n+\t      expr = t;\n+\t      offset = NULL;\n+\t    }\n+\t}\n+\n+      /* If this is a Fortran indirect argument reference, record the\n+\t parameter decl.  */\n+      else if (flag_argument_noalias > 1\n+\t       && TREE_CODE (t) == INDIRECT_REF\n+\t       && TREE_CODE (TREE_OPERAND (t, 0)) == PARM_DECL)\n+\t{\n+\t  expr = t;\n+\t  offset = NULL;\n \t}\n     }\n "}, {"sha": "25704eb39a0da10ab51ec5bce2610b131828e870", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67a1cf6a842249a064d479b455321e6663e4708/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67a1cf6a842249a064d479b455321e6663e4708/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=c67a1cf6a842249a064d479b455321e6663e4708", "patch": "@@ -92,6 +92,12 @@ print_mem_expr (outfile, expr)\n \tfprintf (outfile, \".%s\",\n \t\t IDENTIFIER_POINTER (DECL_NAME (TREE_OPERAND (expr, 1))));\n     }\n+  else if (TREE_CODE (expr) == INDIRECT_REF)\n+    {\n+      fputs (\" (*\", outfile);\n+      print_mem_expr (outfile, TREE_OPERAND (expr, 0));\n+      fputs (\")\", outfile);\n+    }\n   else if (DECL_NAME (expr))\n     fprintf (outfile, \" %s\", IDENTIFIER_POINTER (DECL_NAME (expr)));\n   else if (TREE_CODE (expr) == RESULT_DECL)"}]}