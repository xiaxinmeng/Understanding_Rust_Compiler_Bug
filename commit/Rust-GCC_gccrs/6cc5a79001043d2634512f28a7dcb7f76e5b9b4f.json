{"sha": "6cc5a79001043d2634512f28a7dcb7f76e5b9b4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNjNWE3OTAwMTA0M2QyNjM0NTEyZjI4YTdkY2I3Zjc2ZTViOWI0Zg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2010-02-09T04:49:49Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2010-02-09T04:49:49Z"}, "message": "[multiple changes]\n\n2010-02-08  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/42460\n\t* include/tr1_impl/regex: Fix quoting issues in doxygen markup.\n\t* include/bits/random.h: Fix multi-line doxygen function markup.\n\n2010-02-08  Matthias Klose  <doko@debian.org>\n\n\tPR libstdc++/42460\n\t* include/std/istream: Fix '\\' quoting in doxygen markup.\n\nFrom-SVN: r156617", "tree": {"sha": "fbea89e38d7c0d2261c5e2f386f0bda2f19d55c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbea89e38d7c0d2261c5e2f386f0bda2f19d55c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f/comments", "author": null, "committer": null, "parents": [{"sha": "85db3dc16cc90a81c547405436b684968aa318b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85db3dc16cc90a81c547405436b684968aa318b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85db3dc16cc90a81c547405436b684968aa318b9"}], "stats": {"total": 173, "additions": 98, "deletions": 75}, "files": [{"sha": "2e58c6036a9926eb14cf96d6fbae7bfdd53bb7e5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6cc5a79001043d2634512f28a7dcb7f76e5b9b4f", "patch": "@@ -1,3 +1,14 @@\n+2010-02-08  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/42460\n+\t* include/tr1_impl/regex: Fix quoting issues in doxygen markup.\n+\t* include/bits/random.h: Fix multi-line doxygen function markup.\n+\n+2010-02-08  Matthias Klose  <doko@debian.org>\n+\n+\tPR libstdc++/42460\n+\t* include/std/istream: Fix '\\' quoting in doxygen markup.\n+\n 2010-02-08  Ed Smith-Rowland  <3dw4rd@verizon.net>\n \n \t* include/bits/random.tcc (uniform_int_distribution<>::"}, {"sha": "b7ba1e0db51e96abcb09b87554c6afc45e094b64", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 73, "deletions": 63, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=6cc5a79001043d2634512f28a7dcb7f76e5b9b4f", "patch": "@@ -137,16 +137,19 @@ namespace std\n   /**\n    * @brief A model of a linear congruential random number generator.\n    *\n-   * A random number generator that produces pseudorandom numbers using the\n-   * linear function @f$x_{i+1}\\leftarrow(ax_{i} + c) \\bmod m @f$.\n+   * A random number generator that produces pseudorandom numbers via\n+   * linear function:\n+   * @f[\n+   *     x_{i+1}\\leftarrow(ax_{i} + c) \\bmod m \n+   * @f]\n    *\n    * The template parameter @p _UIntType must be an unsigned integral type\n    * large enough to store values up to (__m-1). If the template parameter\n    * @p __m is 0, the modulus @p __m used is\n    * std::numeric_limits<_UIntType>::max() plus 1. Otherwise, the template\n    * parameters @p __a and @p __c must be less than @p __m.\n    *\n-   * The size of the state is @f$ 1 @f$.\n+   * The size of the state is @f$1@f$.\n    */\n   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>\n     class linear_congruential_engine\n@@ -527,11 +530,13 @@ namespace std\n    * generator, sometimes referred to as the SWC generator.\n    *\n    * A discrete random number generator that produces pseudorandom\n-   * numbers using @f$x_{i}\\leftarrow(x_{i - s} - x_{i - r} -\n-   * carry_{i-1}) \\bmod m @f$.\n+   * numbers using:\n+   * @f[\n+   *     x_{i}\\leftarrow(x_{i - s} - x_{i - r} - carry_{i-1}) \\bmod m \n+   * @f]\n    *\n-   * The size of the state is @f$ r @f$\n-   * and the maximum period of the generator is @f$ m^r - m^s - 1 @f$.\n+   * The size of the state is @f$r@f$\n+   * and the maximum period of the generator is @f$(m^r - m^s - 1)@f$.\n    *\n    * @var _M_x     The state of the generator.  This is a ring buffer.\n    * @var _M_carry The carry.\n@@ -578,7 +583,7 @@ namespace std\n         { seed<_Sseq>(__q); }\n \n       /**\n-       * @brief Seeds the initial state @f$ x_0 @f$ of the random number\n+       * @brief Seeds the initial state @f$x_0@f$ of the random number\n        *        generator.\n        *\n        * N1688[4.19] modifies this as follows.  If @p __value == 0,\n@@ -593,7 +598,7 @@ namespace std\n       seed(result_type __sd = default_seed);\n \n       /**\n-       * @brief Seeds the initial state @f$ x_0 @f$ of the\n+       * @brief Seeds the initial state @f$x_0@f$ of the\n        * % subtract_with_carry_engine random number generator.\n        */\n       template<typename _Sseq, typename\n@@ -1331,7 +1336,7 @@ namespace std\n   minstd_rand0;\n \n   /**\n-   * An alternative LCR (Lehmer Generator function) .\n+   * An alternative LCR (Lehmer Generator function).\n    */\n   typedef linear_congruential_engine<uint_fast32_t, 48271UL, 0UL, 2147483647UL>\n   minstd_rand;\n@@ -1364,9 +1369,6 @@ namespace std\n     0xfff7eee000000000ULL, 43,\n     6364136223846793005ULL> mt19937_64;\n \n-  /**\n-   * .\n-   */\n   typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>\n     ranlux24_base;\n \n@@ -1377,14 +1379,8 @@ namespace std\n \n   typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;\n \n-  /**\n-   * .\n-   */\n   typedef shuffle_order_engine<minstd_rand0, 256> knuth_b;\n \n-  /**\n-   * .\n-   */\n   typedef minstd_rand0 default_random_engine;\n \n   /**\n@@ -1809,8 +1805,10 @@ namespace std\n    * @brief A normal continuous distribution for random numbers.\n    *\n    * The formula for the normal probability density function is\n-   * @f$ p(x|\\mu,\\sigma) = \\frac{1}{\\sigma \\sqrt{2 \\pi}}\n-   *            e^{- \\frac{{x - \\mu}^ {2}}{2 \\sigma ^ {2}} } @f$.\n+   * @f[\n+   *     p(x|\\mu,\\sigma) = \\frac{1}{\\sigma \\sqrt{2 \\pi}}\n+   *            e^{- \\frac{{x - \\mu}^ {2}}{2 \\sigma ^ {2}} } \n+   * @f]\n    */\n   template<typename _RealType = double>\n     class normal_distribution\n@@ -1849,7 +1847,7 @@ namespace std\n \n     public:\n       /**\n-       * Constructs a normal distribution with parameters @f$ mean @f$ and\n+       * Constructs a normal distribution with parameters @f$mean@f$ and\n        * standard deviation.\n        */\n       explicit\n@@ -1964,8 +1962,10 @@ namespace std\n    * @brief A lognormal_distribution random number distribution.\n    *\n    * The formula for the normal probability mass function is\n-   * @f$ p(x|m,s) = \\frac{1}{sx\\sqrt{2\\pi}}\n-   *             \\exp{-\\frac{(\\ln{x} - m)^2}{2s^2}} @f$\n+   * @f[\n+   *     p(x|m,s) = \\frac{1}{sx\\sqrt{2\\pi}}\n+   *                \\exp{-\\frac{(\\ln{x} - m)^2}{2s^2}} \n+   * @f]\n    */\n   template<typename _RealType = double>\n     class lognormal_distribution\n@@ -2109,9 +2109,11 @@ namespace std\n   /**\n    * @brief A gamma continuous distribution for random numbers.\n    *\n-   * The formula for the gamma probability density function is\n-   * @f$ p(x|\\alpha,\\beta) = \\frac{1}{\\beta\\Gamma(\\alpha)}\n-   *                         (x/\\beta)^{\\alpha - 1} e^{-x/\\beta} @f$.\n+   * The formula for the gamma probability density function is:\n+   * @f[\n+   *     p(x|\\alpha,\\beta) = \\frac{1}{\\beta\\Gamma(\\alpha)}\n+   *                         (x/\\beta)^{\\alpha - 1} e^{-x/\\beta} \n+   * @f]\n    */\n   template<typename _RealType = double>\n     class gamma_distribution\n@@ -2158,7 +2160,7 @@ namespace std\n     public:\n       /**\n        * @brief Constructs a gamma distribution with parameters\n-       * @f$ \\alpha @f$ and @f$ \\beta @f$.\n+       * @f$\\alpha@f$ and @f$\\beta@f$.\n        */\n       explicit\n       gamma_distribution(_RealType __alpha_val = _RealType(1),\n@@ -2179,14 +2181,14 @@ namespace std\n       { _M_nd.reset(); }\n \n       /**\n-       * @brief Returns the @f$ \\alpha @f$ of the distribution.\n+       * @brief Returns the @f$\\alpha@f$ of the distribution.\n        */\n       _RealType\n       alpha() const\n       { return _M_param.alpha(); }\n \n       /**\n-       * @brief Returns the @f$ \\beta @f$ of the distribution.\n+       * @brief Returns the @f$\\beta@f$ of the distribution.\n        */\n       _RealType\n       beta() const\n@@ -2271,7 +2273,7 @@ namespace std\n    * @brief A chi_squared_distribution random number distribution.\n    *\n    * The formula for the normal probability mass function is\n-   * @f$ p(x|n) = \\frac{x^{(n/2) - 1}e^{-x/2}}{\\Gamma(n/2) 2^{n/2}} @f$\n+   * @f$p(x|n) = \\frac{x^{(n/2) - 1}e^{-x/2}}{\\Gamma(n/2) 2^{n/2}}@f$\n    */\n   template<typename _RealType = double>\n     class chi_squared_distribution\n@@ -2409,7 +2411,7 @@ namespace std\n    * @brief A cauchy_distribution random number distribution.\n    *\n    * The formula for the normal probability mass function is\n-   * @f$ p(x|a,b) = (\\pi b (1 + (\\frac{x-a}{b})^2))^{-1} @f$\n+   * @f$p(x|a,b) = (\\pi b (1 + (\\frac{x-a}{b})^2))^{-1}@f$\n    */\n   template<typename _RealType = double>\n     class cauchy_distribution\n@@ -2551,9 +2553,11 @@ namespace std\n    * @brief A fisher_f_distribution random number distribution.\n    *\n    * The formula for the normal probability mass function is\n-   * @f$ p(x|m,n) = \\frac{\\Gamma((m+n)/2)}{\\Gamma(m/2)\\Gamma(n/2)}\n+   * @f[\n+   *     p(x|m,n) = \\frac{\\Gamma((m+n)/2)}{\\Gamma(m/2)\\Gamma(n/2)}\n    *                (\\frac{m}{n})^{m/2} x^{(m/2)-1}\n-   *                (1 + \\frac{mx}{n})^{-(m+n)/2} @f$\n+   *                (1 + \\frac{mx}{n})^{-(m+n)/2} \n+   * @f]\n    */\n   template<typename _RealType = double>\n     class fisher_f_distribution\n@@ -2705,9 +2709,11 @@ namespace std\n   /**\n    * @brief A student_t_distribution random number distribution.\n    *\n-   * The formula for the normal probability mass function is\n-   * @f$ p(x|n) = \\frac{1}{\\sqrt(n\\pi)} \\frac{\\Gamma((n+1)/2)}{\\Gamma(n/2)}\n-   *              (1 + \\frac{x^2}{n}) ^{-(n+1)/2} @f$\n+   * The formula for the normal probability mass function is:\n+   * @f[\n+   *     p(x|n) = \\frac{1}{\\sqrt(n\\pi)} \\frac{\\Gamma((n+1)/2)}{\\Gamma(n/2)}\n+   *              (1 + \\frac{x^2}{n}) ^{-(n+1)/2} \n+   * @f]\n    */\n   template<typename _RealType = double>\n     class student_t_distribution\n@@ -2857,8 +2863,8 @@ namespace std\n   /**\n    * @brief A Bernoulli random number distribution.\n    *\n-   * Generates a sequence of true and false values with likelihood @f$ p @f$\n-   * that true will come up and @f$ (1 - p) @f$ that false will appear.\n+   * Generates a sequence of true and false values with likelihood @f$p@f$\n+   * that true will come up and @f$(1 - p)@f$ that false will appear.\n    */\n   class bernoulli_distribution\n   {\n@@ -2890,7 +2896,7 @@ namespace std\n      * @brief Constructs a Bernoulli distribution with likelihood @p p.\n      *\n      * @param __p  [IN]  The likelihood of a true result being returned.\n-     *                   Must be in the interval @f$ [0, 1] @f$.\n+     *                   Must be in the interval @f$[0, 1]@f$.\n      */\n     explicit\n     bernoulli_distribution(double __p = 0.5)\n@@ -3011,8 +3017,8 @@ namespace std\n    * @brief A discrete binomial random number distribution.\n    *\n    * The formula for the binomial probability density function is\n-   * @f$ p(i|t,p) = \\binom{n}{i} p^i (1 - p)^{t - i} @f$ where @f$ t @f$\n-   * and @f$ p @f$ are the parameters of the distribution.\n+   * @f$p(i|t,p) = \\binom{n}{i} p^i (1 - p)^{t - i}@f$ where @f$t@f$\n+   * and @f$p@f$ are the parameters of the distribution.\n    */\n   template<typename _IntType = int>\n     class binomial_distribution\n@@ -3182,7 +3188,7 @@ namespace std\n    * @brief A discrete geometric random number distribution.\n    *\n    * The formula for the geometric probability density function is\n-   * @f$ p(i|p) = (1 - p)p^{i-1} @f$ where @f$ p @f$ is the parameter of the\n+   * @f$p(i|p) = (1 - p)p^{i-1}@f$ where @f$p@f$ is the parameter of the\n    * distribution.\n    */\n   template<typename _IntType = int>\n@@ -3328,8 +3334,8 @@ namespace std\n    * @brief A negative_binomial_distribution random number distribution.\n    *\n    * The formula for the negative binomial probability mass function is\n-   * @f$ p(i) = \\binom{n}{i} p^i (1 - p)^{t - i} @f$ where @f$ t @f$\n-   * and @f$ p @f$ are the parameters of the distribution.\n+   * @f$p(i) = \\binom{n}{i} p^i (1 - p)^{t - i}@f$ where @f$t@f$\n+   * and @f$p@f$ are the parameters of the distribution.\n    */\n   template<typename _IntType = int>\n     class negative_binomial_distribution\n@@ -3381,14 +3387,14 @@ namespace std\n       { _M_gd.reset(); }\n \n       /**\n-       * @brief Return the @f$ k @f$ parameter of the distribution.\n+       * @brief Return the @f$k@f$ parameter of the distribution.\n        */\n       _IntType\n       k() const\n       { return _M_param.k(); }\n \n       /**\n-       * @brief Return the @f$ p @f$ parameter of the distribution.\n+       * @brief Return the @f$p@f$ parameter of the distribution.\n        */\n       double\n       p() const\n@@ -3481,7 +3487,7 @@ namespace std\n    * @brief A discrete Poisson random number distribution.\n    *\n    * The formula for the Poisson probability density function is\n-   * @f$ p(i|\\mu) = \\frac{\\mu^i}{i!} e^{-\\mu} @f$ where @f$ \\mu @f$ is the\n+   * @f$p(i|\\mu) = \\frac{\\mu^i}{i!} e^{-\\mu}@f$ where @f$\\mu@f$ is the\n    * parameter of the distribution.\n    */\n   template<typename _IntType = int>\n@@ -3629,15 +3635,15 @@ namespace std\n    * @brief An exponential continuous distribution for random numbers.\n    *\n    * The formula for the exponential probability density function is\n-   * @f$ p(x|\\lambda) = \\lambda e^{-\\lambda x} @f$.\n+   * @f$p(x|\\lambda) = \\lambda e^{-\\lambda x}@f$.\n    *\n    * <table border=1 cellpadding=10 cellspacing=0>\n    * <caption align=top>Distribution Statistics</caption>\n-   * <tr><td>Mean</td><td>@f$ \\frac{1}{\\lambda} @f$</td></tr>\n-   * <tr><td>Median</td><td>@f$ \\frac{\\ln 2}{\\lambda} @f$</td></tr>\n-   * <tr><td>Mode</td><td>@f$ zero @f$</td></tr>\n+   * <tr><td>Mean</td><td>@f$\\frac{1}{\\lambda}@f$</td></tr>\n+   * <tr><td>Median</td><td>@f$\\frac{\\ln 2}{\\lambda}@f$</td></tr>\n+   * <tr><td>Mode</td><td>@f$zero@f$</td></tr>\n    * <tr><td>Range</td><td>@f$[0, \\infty]@f$</td></tr>\n-   * <tr><td>Standard Deviation</td><td>@f$ \\frac{1}{\\lambda} @f$</td></tr>\n+   * <tr><td>Standard Deviation</td><td>@f$\\frac{1}{\\lambda}@f$</td></tr>\n    * </table>\n    */\n   template<typename _RealType = double>\n@@ -3672,7 +3678,7 @@ namespace std\n     public:\n       /**\n        * @brief Constructs an exponential distribution with inverse scale\n-       *        parameter @f$ \\lambda @f$.\n+       *        parameter @f$\\lambda@f$.\n        */\n       explicit\n       exponential_distribution(const result_type& __lambda = result_type(1))\n@@ -3781,9 +3787,11 @@ namespace std\n   /**\n    * @brief A weibull_distribution random number distribution.\n    *\n-   * The formula for the normal probability density function is\n-   * @f$ p(x|\\alpha,\\beta) = \\frac{\\alpha}{\\beta} (\\frac{x}{\\beta})^{\\alpha-1}\n-   *                         \\exp{(-(\\frac{x}{\\beta})^\\alpha)} @f$.\n+   * The formula for the normal probability density function is:\n+   * @f[\n+   *     p(x|\\alpha,\\beta) = \\frac{\\alpha}{\\beta} (\\frac{x}{\\beta})^{\\alpha-1}\n+   *                         \\exp{(-(\\frac{x}{\\beta})^\\alpha)} \n+   * @f]\n    */\n   template<typename _RealType = double>\n     class weibull_distribution\n@@ -3837,14 +3845,14 @@ namespace std\n       { }\n \n       /**\n-       * @brief Return the @f$ a @f$ parameter of the distribution.\n+       * @brief Return the @f$a@f$ parameter of the distribution.\n        */\n       _RealType\n       a() const\n       { return _M_param.a(); }\n \n       /**\n-       * @brief Return the @f$ b @f$ parameter of the distribution.\n+       * @brief Return the @f$b@f$ parameter of the distribution.\n        */\n       _RealType\n       b() const\n@@ -3928,8 +3936,10 @@ namespace std\n    * @brief A extreme_value_distribution random number distribution.\n    *\n    * The formula for the normal probability mass function is\n-   * @f$ p(x|a,b) = \\frac{1}{b}\n-   *                \\exp( \\frac{a-x}{b} - \\exp(\\frac{a-x}{b})) @f$\n+   * @f[\n+   *     p(x|a,b) = \\frac{1}{b}\n+   *                \\exp( \\frac{a-x}{b} - \\exp(\\frac{a-x}{b})) \n+   * @f]\n    */\n   template<typename _RealType = double>\n     class extreme_value_distribution\n@@ -3983,14 +3993,14 @@ namespace std\n       { }\n \n       /**\n-       * @brief Return the @f$ a @f$ parameter of the distribution.\n+       * @brief Return the @f$a@f$ parameter of the distribution.\n        */\n       _RealType\n       a() const\n       { return _M_param.a(); }\n \n       /**\n-       * @brief Return the @f$ b @f$ parameter of the distribution.\n+       * @brief Return the @f$b@f$ parameter of the distribution.\n        */\n       _RealType\n       b() const"}, {"sha": "542396b123afacaf07fd47e13aef8b899bcca6c7", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=6cc5a79001043d2634512f28a7dcb7f76e5b9b4f", "patch": "@@ -327,7 +327,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  @param  n  Maximum number of characters to store in @a s.\n        *  @return  *this\n        *\n-       *  Returns @c get(s,n,widen(&apos;\\n&apos;)).\n+       *  Returns @c get(s,n,widen(&apos;\\\\n&apos;)).\n       */\n       __istream_type& \n       get(char_type* __s, streamsize __n)\n@@ -360,7 +360,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  @param  sb  A streambuf in which to store data.\n        *  @return  *this\n        *\n-       *  Returns @c get(sb,widen(&apos;\\n&apos;)).\n+       *  Returns @c get(sb,widen(&apos;\\\\n&apos;)).\n       */\n       __istream_type&\n       get(__streambuf_type& __sb)\n@@ -400,7 +400,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  @param  n  Maximum number of characters to extract.\n        *  @return  *this\n        *\n-       *  Returns @c getline(s,n,widen(&apos;\\n&apos;)).\n+       *  Returns @c getline(s,n,widen(&apos;\\\\n&apos;)).\n       */\n       __istream_type& \n       getline(char_type* __s, streamsize __n)"}, {"sha": "efe79e954770bc4a78612edca591c71bc2fae2c2", "filename": "libstdc++-v3/include/tr1_impl/regex", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc5a79001043d2634512f28a7dcb7f76e5b9b4f/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex?ref=6cc5a79001043d2634512f28a7dcb7f76e5b9b4f", "patch": "@@ -135,9 +135,11 @@ namespace regex_constants\n    * Specifies that the grammar recognized by the regular expression engine is\n    * that used by POSIX utility awk in IEEE Std 1003.1-2001.  This option is\n    * identical to syntax_option_type extended, except that C-style escape\n-   * sequences are supported.  These sequences are, explicitly, '\\\\', '\\a',\n-   * '\\b', '\\f', '\\n', '\\r', '\\t' , '\\v', '\\'', ''',\n-   * and '\\ddd' (where ddd is one, two, or three octal digits).  \n+   * sequences are supported.  These sequences are: \n+   * \\\\\\\\, \\\\a, \\\\b, \\\\f, \n+   * \\\\n, \\\\r, \\\\t , \\\\v, \n+   * \\\\&apos;, &apos;, and \\\\ddd \n+   * (where ddd is one, two, or three octal digits).  \n    */\n   static const syntax_option_type awk        = 1 << _S_awk;\n \n@@ -202,26 +204,26 @@ namespace regex_constants\n \n   /**\n    * The first character in the sequence [first, last) is treated as though it\n-   * is not at the beginning of a line, so the character '^' in the regular\n+   * is not at the beginning of a line, so the character (^) in the regular\n    * expression shall not match [first, first).\n    */\n   static const match_flag_type match_not_bol     = 1 << _S_not_bol;\n \n   /**\n    * The last character in the sequence [first, last) is treated as though it\n-   * is not at the end of a line, so the character '$' in the regular\n+   * is not at the end of a line, so the character ($) in the regular\n    * expression shall not match [last, last).\n    */\n   static const match_flag_type match_not_eol     = 1 << _S_not_eol;\n    \n   /**\n-   * The expression '\\b' is not matched against the sub-sequence\n+   * The expression \\\\b is not matched against the sub-sequence\n    * [first,first).\n    */\n   static const match_flag_type match_not_bow     = 1 << _S_not_bow;\n    \n   /**\n-   * The expression '\\b' should not be matched against the sub-sequence\n+   * The expression \\\\b should not be matched against the sub-sequence\n    * [last,last).\n    */\n   static const match_flag_type match_not_eow     = 1 << _S_not_eow;\n@@ -363,7 +365,7 @@ namespace regex_constants\n   static const error_type error_space(_S_error_space);\n \n   /**\n-   * One of '*?+{' was not preceded by a valid regular expression.\n+   * One of <em>*?+{</em> was not preceded by a valid regular expression.\n    */\n   static const error_type error_badrepeat(_S_error_badrepeat);\n \n@@ -2532,7 +2534,7 @@ namespace regex_constants\n \n   // [7.12.2] Class template regex_token_iterator\n   /**\n-   * Iterates over submatches in a range (or 'splits' a text string).\n+   * Iterates over submatches in a range (or @a splits a text string).\n    *\n    * The purpose of this iterator is to enumerate all, or all specified,\n    * matches of a regular expression within a text range.  The dereferenced"}]}