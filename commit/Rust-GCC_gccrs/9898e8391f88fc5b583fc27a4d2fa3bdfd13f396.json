{"sha": "9898e8391f88fc5b583fc27a4d2fa3bdfd13f396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg5OGU4MzkxZjg4ZmM1YjU4M2ZjMjdhNGQyZmEzYmRmZDEzZjM5Ng==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2007-04-28T01:05:36Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2007-04-28T01:05:36Z"}, "message": "Jdwp.class: Regenerated.\n\n        * classpath/lib/gnu/classpath/jdwp/Jdwp.class: Regenerated.\n        * classpath/lib/gnu/classpath/jdwp/event/EventManager.class:\n        Regenerated.\n        * gnu/classpath/jdwp/event/EventManager.h: Regenerated.\n\n        * gnu/classpath/jdwp/event/EventManager.java\n        (getEventRequest): Rename to...\n        (getEventRequests): ...this.\n        Change return type to array of requests.\n        Construct a list of all matching events and return\n        them all.\n        * gnu/classpath/jdwp/Jdwp.java (notify): Use getEventRequests\n        and send event notifications for all matching requests.\n\nFrom-SVN: r124250", "tree": {"sha": "ee628e5f4d4000c3c7082911308b76851000899a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee628e5f4d4000c3c7082911308b76851000899a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e91ada38adfe05db8334483df3306eef91463a88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91ada38adfe05db8334483df3306eef91463a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e91ada38adfe05db8334483df3306eef91463a88"}], "stats": {"total": 72, "additions": 46, "deletions": 26}, "files": [{"sha": "a66338cd4a4dbdbb4607bc640a9c9db08060bb5a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9898e8391f88fc5b583fc27a4d2fa3bdfd13f396", "patch": "@@ -1,3 +1,10 @@\n+2007-04-27  Keith Seitz  <keiths@redhat.com>\n+\n+\t* classpath/lib/gnu/classpath/jdwp/Jdwp.class: Regenerated.\n+\t* classpath/lib/gnu/classpath/jdwp/event/EventManager.class:\n+\tRegenerated.\n+\t* gnu/classpath/jdwp/event/EventManager.h: Regenerated.\n+\n 2007-04-27  Keith Seitz  <keiths@redhat.com>\n \n \t* classpath/lib/gnu/classpath/jdwp/event/filters/"}, {"sha": "12c9b8b1d0e81f9afab832774f35eda607190896", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=9898e8391f88fc5b583fc27a4d2fa3bdfd13f396", "patch": "@@ -1,3 +1,14 @@\n+2007-04-27  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/event/EventManager.java\n+\t(getEventRequest): Rename to...\n+\t(getEventRequests): ...this.\n+\tChange return type to array of requests.\n+\tConstruct a list of all matching events and return\n+\tthem all.\n+\t* gnu/classpath/jdwp/Jdwp.java (notify): Use getEventRequests\n+\tand send event notifications for all matching requests.\n+\n 2007-04-27  Keith Seitz  <keiths@redhat.com>\n \n \t* gnu/classpath/jdwp/event/filters/LocationOnlyFilter.java"}, {"sha": "ca92f2f0d55b98e64900a5c0403757380a1bd912", "filename": "libjava/classpath/gnu/classpath/jdwp/Jdwp.java", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.java?ref=9898e8391f88fc5b583fc27a4d2fa3bdfd13f396", "patch": "@@ -1,5 +1,5 @@\n /* Jdwp.java -- Virtual machine to JDWP back-end programming interface\n-   Copyright (C) 2005, 2006 Free Software Foundation\n+   Copyright (C) 2005, 2006, 2007 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -207,23 +207,22 @@ public void shutdown ()\n    * The event is filtered through the event manager before being\n    * sent.\n    *\n-   * FIXME: Probably need logic to send multiple events\n+   * FIXME: Probably need logic to send multiple (different) events\n    * @param event the event to report\n    */\n-  public static void notify (Event event)\n+  public static void notify(Event event)\n   {\n-    Jdwp jdwp = getDefault ();\n+    Jdwp jdwp = getDefault();\n     if (jdwp != null)\n       {\n-\tEventManager em = EventManager.getDefault ();\n-\tEventRequest request = em.getEventRequest (event);\n-\tif (request != null)\n+\tEventManager em = EventManager.getDefault();\n+\tEventRequest[] requests = em.getEventRequests(event);\n+\tfor (int i = 0; i < requests.length; ++i)\n \t  {\n \t    try\n \t      {\n-\t\tSystem.out.println (\"Jdwp.notify: sending event \" + event);\n-\t\tsendEvent (request, event);\n-\t\tjdwp._enforceSuspendPolicy (request.getSuspendPolicy ());\n+\t\tsendEvent(requests[i], event);\n+\t\tjdwp._enforceSuspendPolicy(requests[i].getSuspendPolicy());\n \t      }\n \t    catch (Exception e)\n \t      {"}, {"sha": "aa3d5d6292cb07bdceae1a5ef9c4f5f35bf8b641", "filename": "libjava/classpath/gnu/classpath/jdwp/event/EventManager.java", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.java?ref=9898e8391f88fc5b583fc27a4d2fa3bdfd13f396", "patch": "@@ -44,6 +44,7 @@\n import gnu.classpath.jdwp.exception.InvalidEventTypeException;\n import gnu.classpath.jdwp.exception.JdwpException;\n \n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Hashtable;\n import java.util.Iterator;\n@@ -146,39 +147,39 @@ private EventManager ()\n   }\n \n   /**\n-   * Returns a request for the given event. This method will only\n+   * Returns all requests for the given event. This method will only\n    * be used if the <code>EventManager</code> is handling event filtering.\n    *\n    * @param  event  the event\n-   * @return request that was interested in this event\n+   * @return requests that are interested in this event\n    *         or <code>null</code> if none (and event should not be sent)\n    * @throws IllegalArgumentException for invalid event kind\n    */\n-  public EventRequest getEventRequest (Event event)\n+  public EventRequest[] getEventRequests(Event event)\n   {\n-    EventRequest interestedRequest = null;\n+    ArrayList interestedEvents = new ArrayList();\n     Hashtable requests;\n-    Byte kind = new Byte (event.getEventKind ());\n-    requests = (Hashtable) _requests.get (kind);\n+    Byte kind = new Byte(event.getEventKind());\n+    requests = (Hashtable) _requests.get(kind);\n     if (requests == null)\n       {\n \t// Did not get a valid event type\n-\tthrow new IllegalArgumentException (\"invalid event kind: \" + kind);\n+\tthrow new IllegalArgumentException(\"invalid event kind: \" + kind);\n       }\n-    boolean match = false;\n \n     // Loop through the requests. Must look at ALL requests in order\n     // to evaluate all filters (think count filter).\n-    // TODO: What if multiple matches? Spec isn't so clear on this.\n-    Iterator rIter = requests.values().iterator ();\n-    while (rIter.hasNext ())\n+    Iterator rIter = requests.values().iterator();\n+    while (rIter.hasNext())\n       {\n-\tEventRequest request = (EventRequest) rIter.next ();\n-\tif (request.matches (event))\n-\t  interestedRequest = request;\n+\tEventRequest request = (EventRequest) rIter.next();\n+\tif (request.matches(event))\n+\t  interestedEvents.add(request);\n       }\n \n-    return interestedRequest;\n+    EventRequest[] r = new EventRequest[interestedEvents.size()];\n+    interestedEvents.toArray(r);\n+    return r;\n   }\n \n   /**"}, {"sha": "616beaa1fabd1db583446ed3b2f720ecea3ca6a8", "filename": "libjava/classpath/lib/gnu/classpath/jdwp/Jdwp.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.class?ref=9898e8391f88fc5b583fc27a4d2fa3bdfd13f396"}, {"sha": "df7926f3956c773c6894911a177c2178b8c053e0", "filename": "libjava/classpath/lib/gnu/classpath/jdwp/event/EventManager.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.class?ref=9898e8391f88fc5b583fc27a4d2fa3bdfd13f396"}, {"sha": "45b47622c8a72d3b370e465fc45931828cef5713", "filename": "libjava/gnu/classpath/jdwp/event/EventManager.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9898e8391f88fc5b583fc27a4d2fa3bdfd13f396/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.h?ref=9898e8391f88fc5b583fc27a4d2fa3bdfd13f396", "patch": "@@ -7,6 +7,8 @@\n #pragma interface\n \n #include <java/lang/Object.h>\n+#include <gcj/array.h>\n+\n extern \"Java\"\n {\n   namespace gnu\n@@ -34,7 +36,7 @@ class gnu::classpath::jdwp::event::EventManager : public ::java::lang::Object\n private:\n   EventManager();\n public:\n-  virtual ::gnu::classpath::jdwp::event::EventRequest * getEventRequest(::gnu::classpath::jdwp::event::Event *);\n+  virtual JArray< ::gnu::classpath::jdwp::event::EventRequest * > * getEventRequests(::gnu::classpath::jdwp::event::Event *);\n   virtual void requestEvent(::gnu::classpath::jdwp::event::EventRequest *);\n   virtual void deleteRequest(jbyte, jint);\n   virtual void clearRequests(jbyte);"}]}