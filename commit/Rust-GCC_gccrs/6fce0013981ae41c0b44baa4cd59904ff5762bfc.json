{"sha": "6fce0013981ae41c0b44baa4cd59904ff5762bfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZjZTAwMTM5ODFhZTQxYzBiNDRiYWE0Y2Q1OTkwNGZmNTc2MmJmYw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2016-11-21T16:04:15Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2016-11-21T16:04:15Z"}, "message": "avr.c (avr_popcount): Remove static function.\n\ngcc/\n\t* config/avr/avr.c (avr_popcount): Remove static function.\n\t(avr_popcount_each_byte, avr_out_bitop): Use popcount_hwi instead.\n\nFrom-SVN: r242670", "tree": {"sha": "f15bf870ea8ef2140d19f38333c1dac6909c6f9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f15bf870ea8ef2140d19f38333c1dac6909c6f9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fce0013981ae41c0b44baa4cd59904ff5762bfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fce0013981ae41c0b44baa4cd59904ff5762bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fce0013981ae41c0b44baa4cd59904ff5762bfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fce0013981ae41c0b44baa4cd59904ff5762bfc/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c30752be91a7c2dd914b0e882bed7eaa379774fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30752be91a7c2dd914b0e882bed7eaa379774fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c30752be91a7c2dd914b0e882bed7eaa379774fd"}], "stats": {"total": 26, "additions": 7, "deletions": 19}, "files": [{"sha": "74fb05716629e08c439e27ebcb1ff9aabfdd1309", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fce0013981ae41c0b44baa4cd59904ff5762bfc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fce0013981ae41c0b44baa4cd59904ff5762bfc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fce0013981ae41c0b44baa4cd59904ff5762bfc", "patch": "@@ -1,3 +1,8 @@\n+2016-11-21  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.c (avr_popcount): Remove static function.\n+\t(avr_popcount_each_byte, avr_out_bitop): Use popcount_hwi instead.\n+\n 2016-11-21  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.opt (mapcs-float): Delete option."}, {"sha": "0cfebf0b84e75f4316becd6f26346920f7247dbb", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fce0013981ae41c0b44baa4cd59904ff5762bfc/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fce0013981ae41c0b44baa4cd59904ff5762bfc/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=6fce0013981ae41c0b44baa4cd59904ff5762bfc", "patch": "@@ -243,23 +243,6 @@ avr_tolower (char *lo, const char *up)\n }\n \n \n-/* Custom function to count number of set bits.  */\n-\n-static inline int\n-avr_popcount (unsigned int val)\n-{\n-  int pop = 0;\n-\n-  while (val)\n-    {\n-      val &= val-1;\n-      pop++;\n-    }\n-\n-  return pop;\n-}\n-\n-\n /* Constraint helper function.  XVAL is a CONST_INT or a CONST_DOUBLE.\n    Return true if the least significant N_BYTES bytes of XVAL all have a\n    popcount in POP_MASK and false, otherwise.  POP_MASK represents a subset\n@@ -280,7 +263,7 @@ avr_popcount_each_byte (rtx xval, int n_bytes, int pop_mask)\n       rtx xval8 = simplify_gen_subreg (QImode, xval, mode, i);\n       unsigned int val8 = UINTVAL (xval8) & GET_MODE_MASK (QImode);\n \n-      if (0 == (pop_mask & (1 << avr_popcount (val8))))\n+      if (0 == (pop_mask & (1 << popcount_hwi (val8))))\n         return false;\n     }\n \n@@ -8135,7 +8118,7 @@ avr_out_bitop (rtx insn, rtx *xop, int *plen)\n       unsigned int val8 = UINTVAL (xval8) & GET_MODE_MASK (QImode);\n \n       /* Number of bits set in the current byte of the constant.  */\n-      int pop8 = avr_popcount (val8);\n+      int pop8 = popcount_hwi (val8);\n \n       /* Registers R16..R31 can operate with immediate.  */\n       bool ld_reg_p = test_hard_reg_class (LD_REGS, reg8);"}]}