{"sha": "f062a9757ac2d2cf368f1a0d82fedac54ca365fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA2MmE5NzU3YWMyZDJjZjM2OGYxYTBkODJmZWRhYzU0Y2EzNjVmYg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2018-06-11T09:17:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-06-11T09:17:51Z"}, "message": "[Ada] Fix handling of Pre/Post contracts with AND THEN expressions\n\nPre- and postconditions with top-level AND THEN expressions are broken down\ninto checks of indivudial conjuncts for more precise error reporting. This\nrewrite interfers with detection of potentially unevaluadted use of 'Old,\ne.g. a contract like \"Pre => Foo and then Bar\" is rewritten into a two\npragmas Check, for expressions \"Foo\" and \"Bar\", but the latter remains\npotentially unevaluted. This patch fixes detection of the AND THEN rewrite.\n\nThis fixes inlining in the GNATprove mode, i.e. the following testc case must\nnot emit a warning like:\n\ncontract1.adb:14:07: info:\n  no contextual analysis of \"Foo\" (in potentially unevaluated context)\n\n2018-06-11  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* sem_util.adb (Is_Potentially_Unevaluated): Fix detection of contracts\n\twith AND THEN expressions broken down into individual conjuncts.\n\ngcc/testsuite/\n\n\t* gnat.dg/contract1.adb: New testcase.\n\nFrom-SVN: r261410", "tree": {"sha": "4271aca4b3aa089d1fb1f075ec3f762399afdc78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4271aca4b3aa089d1fb1f075ec3f762399afdc78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f062a9757ac2d2cf368f1a0d82fedac54ca365fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f062a9757ac2d2cf368f1a0d82fedac54ca365fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f062a9757ac2d2cf368f1a0d82fedac54ca365fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f062a9757ac2d2cf368f1a0d82fedac54ca365fb/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "acc257bbf0fe5cc6560d8fe1607d1be64528a96f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc257bbf0fe5cc6560d8fe1607d1be64528a96f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc257bbf0fe5cc6560d8fe1607d1be64528a96f"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "f35a232fc7c2ea960c895785aaf7f565315cca80", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f062a9757ac2d2cf368f1a0d82fedac54ca365fb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f062a9757ac2d2cf368f1a0d82fedac54ca365fb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f062a9757ac2d2cf368f1a0d82fedac54ca365fb", "patch": "@@ -1,3 +1,8 @@\n+2018-06-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_util.adb (Is_Potentially_Unevaluated): Fix detection of contracts\n+\twith AND THEN expressions broken down into individual conjuncts.\n+\n 2018-06-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch7.adb (Check_Unnesting_Elaboration_Code): Add guard."}, {"sha": "ec2640946412eddaaec6e4482880262b4df8812c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f062a9757ac2d2cf368f1a0d82fedac54ca365fb/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f062a9757ac2d2cf368f1a0d82fedac54ca365fb/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=f062a9757ac2d2cf368f1a0d82fedac54ca365fb", "patch": "@@ -16453,7 +16453,9 @@ package body Sem_Util is\n       while Present (Par)\n         and then Nkind (Par) /= N_Pragma_Argument_Association\n       loop\n-         if Nkind (Original_Node (Par)) = N_And_Then then\n+         if Is_Rewrite_Substitution (Par)\n+           and then Nkind (Original_Node (Par)) = N_And_Then\n+         then\n             return True;\n          end if;\n "}, {"sha": "a34c710adbc81b172d14282ab564f73c1e7132aa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f062a9757ac2d2cf368f1a0d82fedac54ca365fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f062a9757ac2d2cf368f1a0d82fedac54ca365fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f062a9757ac2d2cf368f1a0d82fedac54ca365fb", "patch": "@@ -1,3 +1,7 @@\n+2018-06-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* gnat.dg/contract1.adb: New testcase.\n+\n 2018-06-11  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat.dg/aggr23.adb, gnat.dg/aggr23_q.adb, gnat.dg/aggr23_tt.ads: New"}, {"sha": "286fbc557ca962a0d4181f092e86e21c1c0ed06e", "filename": "gcc/testsuite/gnat.dg/contract1.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f062a9757ac2d2cf368f1a0d82fedac54ca365fb/gcc%2Ftestsuite%2Fgnat.dg%2Fcontract1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f062a9757ac2d2cf368f1a0d82fedac54ca365fb/gcc%2Ftestsuite%2Fgnat.dg%2Fcontract1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fcontract1.adb?ref=f062a9757ac2d2cf368f1a0d82fedac54ca365fb", "patch": "@@ -0,0 +1,20 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatd.F -gnatwa\" }\n+\n+with Ada.Dispatching;\n+\n+procedure Contract1 with SPARK_Mode is\n+\n+   function Foo return Boolean is\n+   begin\n+      Ada.Dispatching.Yield;\n+      return True;\n+   end Foo;\n+\n+   Dummy : constant Integer := 0;\n+\n+begin\n+   if Foo and then True then\n+      raise Program_Error;\n+   end if;\n+end Contract1;"}]}