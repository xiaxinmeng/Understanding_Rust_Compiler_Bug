{"sha": "7345b714005c24a7d74525cd57562420b3a6d716", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM0NWI3MTQwMDVjMjRhN2Q3NDUyNWNkNTc1NjI0MjBiM2E2ZDcxNg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2017-08-08T22:06:21Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2017-08-08T22:06:21Z"}, "message": "PR driver/81523: Make -static override -pie\n\n-static and -pie together behave differently depending on whether GCC is\nconfigured with --enable-default-pie.  On x86, \"-static -pie\" fails to\ncreate executable when --enable-default-pie isn't used, but creates a\nstatic executable when --enable-default-pie is used.  This patch makes\n-static completely override -pie to create a static executable, regardless\nif --enable-default-pie is used to configure GCC.\n\ngcc/\n\n\tPR driver/81523\n\t* gcc.c (NO_PIE_SPEC): Delete.\n\t(PIE_SPEC): Define as !no-pie/pie.  Move static|shared|r\n\texclusion..\n\t(LINK_PIE_SPEC): ..to here.\n\t(LINK_COMMAND_SPEC): Support -no-pie.\n\t* config/gnu-user.h (GNU_USER_TARGET_STARTFILE_SPEC): Correct\n\tchain of crtbegin*.o selection, update for PIE_SPEC changes and\n\tformat.\n\t(GNU_USER_TARGET_ENDFILE_SPEC): Similarly.\n\t* config/sol2.h (STARTFILE_CRTBEGIN_SPEC): Similarly.\n\t(ENDFILE_CRTEND_SPEC): Similarly.\n\ngcc/testsuite/\n\n\tPR driver/81523\n\t* gcc.dg/pie-7.c: New test.\n\t* gcc.dg/pie-static-1.c: Likewise.\n\t* gcc.dg/pie-static-2.c: Likewise.\n\nFrom-SVN: r250974", "tree": {"sha": "07a5613ddad59abf64333e6a154a92353fc98b9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07a5613ddad59abf64333e6a154a92353fc98b9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7345b714005c24a7d74525cd57562420b3a6d716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7345b714005c24a7d74525cd57562420b3a6d716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7345b714005c24a7d74525cd57562420b3a6d716", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7345b714005c24a7d74525cd57562420b3a6d716/comments", "author": null, "committer": null, "parents": [{"sha": "d5bf81b30f7d3faf58d52784013749ca0f9f980f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5bf81b30f7d3faf58d52784013749ca0f9f980f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5bf81b30f7d3faf58d52784013749ca0f9f980f"}], "stats": {"total": 104, "additions": 81, "deletions": 23}, "files": [{"sha": "448f98cf26ea52a2735ca084566c19ee0a479c0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7345b714005c24a7d74525cd57562420b3a6d716", "patch": "@@ -1,3 +1,19 @@\n+2017-08-08  Alan Modra  <amodra@gmail.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR driver/81523\n+\t* gcc.c (NO_PIE_SPEC): Delete.\n+\t(PIE_SPEC): Define as !no-pie/pie.  Move static|shared|r\n+\texclusion..\n+\t(LINK_PIE_SPEC): ..to here.\n+\t(LINK_COMMAND_SPEC): Support -no-pie.\n+\t* config/gnu-user.h (GNU_USER_TARGET_STARTFILE_SPEC): Correct\n+\tchain of crtbegin*.o selection, update for PIE_SPEC changes and\n+\tformat.\n+\t(GNU_USER_TARGET_ENDFILE_SPEC): Similarly.\n+\t* config/sol2.h (STARTFILE_CRTBEGIN_SPEC): Similarly.\n+\t(ENDFILE_CRTEND_SPEC): Similarly.\n+\n 2017-08-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/81708"}, {"sha": "de605b0c46657f37dfff2ee2cd1c575bbe880a03", "filename": "gcc/config/gnu-user.h", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=7345b714005c24a7d74525cd57562420b3a6d716", "patch": "@@ -50,19 +50,28 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined HAVE_LD_PIE\n #define GNU_USER_TARGET_STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p|profile:gcrt1.o%s;: \\\n-    %{\" PIE_SPEC \":Scrt1.o%s} %{\" NO_PIE_SPEC \":crt1.o%s}}} \\\n-   crti.o%s %{static:crtbeginT.o%s;: %{shared:crtbeginS.o%s} \\\n-\t      %{\" PIE_SPEC \":crtbeginS.o%s} \\\n-\t      %{\" NO_PIE_SPEC \":crtbegin.o%s}} \\\n+  \"%{shared:; \\\n+     pg|p|profile:gcrt1.o%s; \\\n+     static:crt1.o%s; \\\n+     \" PIE_SPEC \":Scrt1.o%s; \\\n+     :crt1.o%s} \\\n+   crti.o%s \\\n+   %{static:crtbeginT.o%s; \\\n+     shared|\" PIE_SPEC \":crtbeginS.o%s; \\\n+     :crtbegin.o%s} \\\n    %{fvtable-verify=none:%s; \\\n      fvtable-verify=preinit:vtv_start_preinit.o%s; \\\n      fvtable-verify=std:vtv_start.o%s} \\\n    \" CRTOFFLOADBEGIN\n #else\n #define GNU_USER_TARGET_STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p|profile:gcrt1.o%s;:crt1.o%s}} \\\n-   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s} \\\n+  \"%{shared:; \\\n+     pg|p|profile:gcrt1.o%s; \\\n+     :crt1.o%s} \\\n+   crti.o%s \\\n+   %{static:crtbeginT.o%s; \\\n+     shared|pie:crtbeginS.o%s; \\\n+     :crtbegin.o%s} \\\n    %{fvtable-verify=none:%s; \\\n      fvtable-verify=preinit:vtv_start_preinit.o%s; \\\n      fvtable-verify=std:vtv_start.o%s} \\\n@@ -82,15 +91,20 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n   \"%{fvtable-verify=none:%s; \\\n      fvtable-verify=preinit:vtv_end_preinit.o%s; \\\n      fvtable-verify=std:vtv_end.o%s} \\\n-   %{shared:crtendS.o%s;: %{\" PIE_SPEC \":crtendS.o%s} \\\n-   %{\" NO_PIE_SPEC \":crtend.o%s}} crtn.o%s \\\n+   %{static:crtend.o%s; \\\n+     shared|\" PIE_SPEC \":crtendS.o%s; \\\n+     :crtend.o%s} \\\n+   crtn.o%s \\\n    \" CRTOFFLOADEND\n #else\n #define GNU_USER_TARGET_ENDFILE_SPEC \\\n   \"%{fvtable-verify=none:%s; \\\n      fvtable-verify=preinit:vtv_end_preinit.o%s; \\\n      fvtable-verify=std:vtv_end.o%s} \\\n-   %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s \\\n+   %{static:crtend.o%s; \\\n+     shared|pie:crtendS.o%s; \\\n+     :crtend.o%s} \\\n+   crtn.o%s \\\n    \" CRTOFFLOADEND\n #endif\n #undef  ENDFILE_SPEC"}, {"sha": "bf5203b8c163783fae3e83d87c723c52d49bae35", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=7345b714005c24a7d74525cd57562420b3a6d716", "patch": "@@ -174,9 +174,9 @@ along with GCC; see the file COPYING3.  If not see\n \t\t\t    %{!ansi:values-Xa.o%s}\"\n \n #if defined(HAVE_LD_PIE) && defined(HAVE_SOLARIS_CRTS)\n-#define STARTFILE_CRTBEGIN_SPEC \"%{shared:crtbeginS.o%s} \\\n-\t\t\t\t %{\" PIE_SPEC \":crtbeginS.o%s} \\\n-\t\t\t\t %{\" NO_PIE_SPEC \":crtbegin.o%s}\"\n+#define STARTFILE_CRTBEGIN_SPEC \"%{static:crtbegin.o%s; \\\n+\t\t\t\t   shared|\" PIE_SPEC \":crtbeginS.o%s; \\\n+\t\t\t\t   :crtbegin.o%s}\"\n #else\n #define STARTFILE_CRTBEGIN_SPEC\t\"crtbegin.o%s\"\n #endif\n@@ -224,9 +224,9 @@ along with GCC; see the file COPYING3.  If not see\n #endif\n \n #if defined(HAVE_LD_PIE) && defined(HAVE_SOLARIS_CRTS)\n-#define ENDFILE_CRTEND_SPEC \"%{shared:crtendS.o%s;: \\\n-\t\t\t       %{\" PIE_SPEC \":crtendS.o%s} \\\n-\t\t\t       %{\" NO_PIE_SPEC \":crtend.o%s}}\"\n+#define ENDFILE_CRTEND_SPEC \"%{static:crtend.o%s; \\\n+\t\t\t       shared|\" PIE_SPEC \":crtendS.o%s; \\\n+\t\t\t       :crtend.o%s}\"\n #else\n #define ENDFILE_CRTEND_SPEC \"crtend.o%s\"\n #endif"}, {"sha": "987eff55aa63abeed9a0d935c97816821fe2943d", "filename": "gcc/gcc.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=7345b714005c24a7d74525cd57562420b3a6d716", "patch": "@@ -878,8 +878,7 @@ proper position among the other output files.  */\n #endif\n \n #ifdef ENABLE_DEFAULT_PIE\n-#define NO_PIE_SPEC\t\t\"no-pie|static\"\n-#define PIE_SPEC\t\tNO_PIE_SPEC \"|r|shared:;\"\n+#define PIE_SPEC\t\t\"!no-pie\"\n #define NO_FPIE1_SPEC\t\t\"fno-pie\"\n #define FPIE1_SPEC\t\tNO_FPIE1_SPEC \":;\"\n #define NO_FPIE2_SPEC\t\t\"fno-PIE\"\n@@ -900,7 +899,6 @@ proper position among the other output files.  */\n #define FPIE_OR_FPIC_SPEC\tNO_FPIE_AND_FPIC_SPEC \":;\"\n #else\n #define PIE_SPEC\t\t\"pie\"\n-#define NO_PIE_SPEC\t\tPIE_SPEC \"|r|shared:;\"\n #define FPIE1_SPEC\t\t\"fpie\"\n #define NO_FPIE1_SPEC\t\tFPIE1_SPEC \":;\"\n #define FPIE2_SPEC\t\t\"fPIE\"\n@@ -929,7 +927,7 @@ proper position among the other output files.  */\n #else\n #define LD_PIE_SPEC \"\"\n #endif\n-#define LINK_PIE_SPEC \"%{no-pie:} \" \"%{\" PIE_SPEC \":\" LD_PIE_SPEC \"} \"\n+#define LINK_PIE_SPEC \"%{static|shared|r:;\" PIE_SPEC \":\" LD_PIE_SPEC \"} \"\n #endif\n \n #ifndef LINK_BUILDID_SPEC\n@@ -1017,8 +1015,10 @@ proper position among the other output files.  */\n #endif\n \n /* -u* was put back because both BSD and SysV seem to support it.  */\n-/* %{static:} simply prevents an error message if the target machine\n-   doesn't handle -static.  */\n+/* %{static|no-pie:} simply prevents an error message:\n+   1. If the target machine doesn't handle -static.\n+   2. If PIE isn't enabled by default.\n+ */\n /* We want %{T*} after %{L*} and %D so that it can be used to specify linker\n    scripts which exist in user specified directories, or in standard\n    directories.  */\n@@ -1035,7 +1035,7 @@ proper position among the other output files.  */\n    \"%{fuse-ld=*:-fuse-ld=%*} \" LINK_COMPRESS_DEBUG_SPEC \\\n    \"%X %{o*} %{e*} %{N} %{n} %{r}\\\n     %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!nostartfiles:%S}} \\\n-    %{static:} %{L*} %(mfwrap) %(link_libgcc) \" \\\n+    %{static|no-pie:} %{L*} %(mfwrap) %(link_libgcc) \" \\\n     VTABLE_VERIFICATION_SPEC \" \" SANITIZER_EARLY_SPEC \" %o \" CHKP_SPEC \" \\\n     %{fopenacc|fopenmp|%:gt(%{ftree-parallelize-loops=*:%*} 1):\\\n \t%:include(libgomp.spec)%(link_gomp)}\\"}, {"sha": "23fbb8c3377b53ba3a493f7649cc6634ed0ef770", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7345b714005c24a7d74525cd57562420b3a6d716", "patch": "@@ -1,3 +1,10 @@\n+2017-08-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR driver/81523\n+\t* gcc.dg/pie-7.c: New test.\n+\t* gcc.dg/pie-static-1.c: Likewise.\n+\t* gcc.dg/pie-static-2.c: Likewise.\n+\n 2017-08-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/81708"}, {"sha": "e118a98bafd2159486a723a11f15714f685ff588", "filename": "gcc/testsuite/gcc.dg/pie-7.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-7.c?ref=7345b714005c24a7d74525cd57562420b3a6d716", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do run { target pie } } */\n+/* { dg-options \"-fno-pie -no-pie\" } */\n+\n+int main(void)\n+{\n+  return 0;\n+}"}, {"sha": "f3580efdfe66d5a9394a65ac948467255744182b", "filename": "gcc/testsuite/gcc.dg/pie-static-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-static-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-static-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-static-1.c?ref=7345b714005c24a7d74525cd57562420b3a6d716", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do run { target pie } } */\n+/* { dg-options \"-static -fpie -pie\" } */\n+\n+int main(void)\n+{\n+  return 0;\n+}"}, {"sha": "49608c5fb2a994dfac06e767a67db0b109fade05", "filename": "gcc/testsuite/gcc.dg/pie-static-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-static-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7345b714005c24a7d74525cd57562420b3a6d716/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-static-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-static-2.c?ref=7345b714005c24a7d74525cd57562420b3a6d716", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do run { target pie } } */\n+/* { dg-options \"-fpie -pie -static\" } */\n+\n+int main(void)\n+{\n+  return 0;\n+}"}]}