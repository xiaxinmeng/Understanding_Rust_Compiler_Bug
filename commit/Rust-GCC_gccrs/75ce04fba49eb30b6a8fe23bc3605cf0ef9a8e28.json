{"sha": "75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVjZTA0ZmJhNDllYjMwYjZhOGZlMjNiYzM2MDVjZjBlZjlhOGUyOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-10-27T22:15:46Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-10-27T22:15:46Z"}, "message": "c: Allow duplicate C2x standard attributes\n\nN2557, accepted into C2x at the October WG14 meeting, removes the\nrequirement that duplicates of standard attributes cannot appear\nwithin an attribute list (so allowing e.g. [[deprecated, deprecated]],\nwhere previously that was disallowed but [[deprecated]] [[deprecated]]\nwas OK).  Remove the code checking for this (standard attributes\naren't in any released version of the C standard) and update tests\naccordingly.\n\nBootstrapped with no regressions on x86_64-pc-linux-gnu.\n\ngcc/c/\n2020-10-27  Joseph Myers  <joseph@codesourcery.com>\n\n\t* c-parser.c (c_parser_std_attribute_specifier): Allow duplicate\n\tstandard attributes.\n\ngcc/testsuite/\n2020-10-27  Joseph Myers  <joseph@codesourcery.com>\n\n\t* gcc.dg/c2x-attr-deprecated-4.c, gcc.dg/c2x-attr-fallthrough-4.c,\n\tgcc.dg/c2x-attr-maybe_unused-4.c: Allow duplicate attributes.", "tree": {"sha": "4dd84b104dc8e59b2dca26841152fe0abc57e07e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dd84b104dc8e59b2dca26841152fe0abc57e07e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "668894d7b584b40ddb46e9e2e2ffa637f4d732e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668894d7b584b40ddb46e9e2e2ffa637f4d732e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/668894d7b584b40ddb46e9e2e2ffa637f4d732e5"}], "stats": {"total": 85, "additions": 14, "deletions": 71}, "files": [{"sha": "d49e508ce6d87a6dfebc2ea8ae0fde660329c93b", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 2, "deletions": 52, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28", "patch": "@@ -4977,9 +4977,6 @@ c_parser_std_attribute (c_parser *parser, bool for_tm)\n static tree\n c_parser_std_attribute_specifier (c_parser *parser, bool for_tm)\n {\n-  bool seen_deprecated = false;\n-  bool seen_fallthrough = false;\n-  bool seen_maybe_unused = false;\n   location_t loc = c_parser_peek_token (parser)->location;\n   if (!c_parser_require (parser, CPP_OPEN_SQUARE, \"expected %<[%>\"))\n     return NULL_TREE;\n@@ -5005,55 +5002,8 @@ c_parser_std_attribute_specifier (c_parser *parser, bool for_tm)\n       tree attribute = c_parser_std_attribute (parser, for_tm);\n       if (attribute != error_mark_node)\n \t{\n-\t  bool duplicate = false;\n-\t  tree name = get_attribute_name (attribute);\n-\t  tree ns = get_attribute_namespace (attribute);\n-\t  if (ns == NULL_TREE)\n-\t    {\n-\t      /* Some standard attributes may appear at most once in\n-\t\t each attribute list.  Diagnose duplicates and remove\n-\t\t them from the list to avoid subsequent diagnostics\n-\t\t such as the more general one for multiple\n-\t\t \"fallthrough\" attributes in the same place (including\n-\t\t in separate attribute lists in the same attribute\n-\t\t specifier sequence, which is not a constraint\n-\t\t violation).  */\n-\t      if (is_attribute_p (\"deprecated\", name))\n-\t\t{\n-\t\t  if (seen_deprecated)\n-\t\t    {\n-\t\t      error (\"attribute %<deprecated%> can appear at most \"\n-\t\t\t     \"once in an attribute-list\");\n-\t\t      duplicate = true;\n-\t\t    }\n-\t\t  seen_deprecated = true;\n-\t\t}\n-\t      else if (is_attribute_p (\"fallthrough\", name))\n-\t\t{\n-\t\t  if (seen_fallthrough)\n-\t\t    {\n-\t\t      error (\"attribute %<fallthrough%> can appear at most \"\n-\t\t\t     \"once in an attribute-list\");\n-\t\t      duplicate = true;\n-\t\t    }\n-\t\t  seen_fallthrough = true;\n-\t\t}\n-\t      else if (is_attribute_p (\"maybe_unused\", name))\n-\t\t{\n-\t\t  if (seen_maybe_unused)\n-\t\t    {\n-\t\t      error (\"attribute %<maybe_unused%> can appear at most \"\n-\t\t\t     \"once in an attribute-list\");\n-\t\t      duplicate = true;\n-\t\t    }\n-\t\t  seen_maybe_unused = true;\n-\t\t}\n-\t    }\n-\t  if (!duplicate)\n-\t    {\n-\t      TREE_CHAIN (attribute) = attributes;\n-\t      attributes = attribute;\n-\t    }\n+\t  TREE_CHAIN (attribute) = attributes;\n+\t  attributes = attribute;\n \t}\n       if (c_parser_next_token_is_not (parser, CPP_COMMA))\n \tbreak;"}, {"sha": "7698434cc6d9a2bf1c0b2048d8437b2504086f4a", "filename": "gcc/testsuite/gcc.dg/c2x-attr-deprecated-4.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-deprecated-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-deprecated-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-deprecated-4.c?ref=75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28", "patch": "@@ -1,13 +1,11 @@\n-/* Test C2x deprecated attribute: duplicates.  */\n+/* Test C2x deprecated attribute: duplicates (allowed after N2557).  */\n /* { dg-do compile } */\n /* { dg-options \"-std=c2x -pedantic-errors\" } */\n \n-[[deprecated, __deprecated__]] int a; /* { dg-error \"can appear at most once\" } */\n-[[__deprecated__, deprecated(\"message\")]] int b; /* { dg-error \"can appear at most once\" } */\n-int c [[deprecated(\"message\"), deprecated]]; /* { dg-error \"can appear at most once\" } */\n-[[deprecated, deprecated]]; /* { dg-error \"can appear at most once\" } */\n+[[deprecated, __deprecated__]] int a;\n+[[__deprecated__, deprecated(\"message\")]] int b;\n+int c [[deprecated(\"message\"), deprecated]];\n+[[deprecated, deprecated]];\n /* { dg-error \"ignored\" \"ignored\" { target *-*-* } .-1 } */\n \n-/* Separate attribute lists in the same attribute specifier sequence,\n-   with the same attribute in them, are OK.  */\n [[deprecated]] [[deprecated]] int d [[deprecated]] [[deprecated]];"}, {"sha": "a6cedcd0042bbaf6136ff470460e44a7e0e9285e", "filename": "gcc/testsuite/gcc.dg/c2x-attr-fallthrough-4.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-4.c?ref=75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28", "patch": "@@ -1,4 +1,4 @@\n-/* Test C2x fallthrough attribute: duplicates.  */\n+/* Test C2x fallthrough attribute: duplicates (allowed after N2557).  */\n /* { dg-do compile } */\n /* { dg-options \"-std=c2x -pedantic-errors\" } */\n \n@@ -9,12 +9,9 @@ f (int a)\n     {\n     case 1:\n       a++;\n-      [[fallthrough, __fallthrough__]]; /* { dg-error \"can appear at most once\" } */\n+      [[fallthrough, __fallthrough__]]; /* { dg-warning \"specified multiple times\" } */\n     case 2:\n       a++;\n-      /* Separate attribute lists in the same attribute specifier\n-\t sequence, with the same attribute in them, are OK (but\n-\t receive a warning).  */\n       [[fallthrough]] [[fallthrough]]; /* { dg-warning \"specified multiple times\" } */\n     case 3:\n       a++;"}, {"sha": "6b997aa00334513a7fcc125f2e52f305b6910fae", "filename": "gcc/testsuite/gcc.dg/c2x-attr-maybe_unused-4.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-4.c?ref=75ce04fba49eb30b6a8fe23bc3605cf0ef9a8e28", "patch": "@@ -1,13 +1,11 @@\n-/* Test C2x maybe_unused attribute: duplicates.  */\n+/* Test C2x maybe_unused attribute: duplicates (allowed after N2557).  */\n /* { dg-do compile } */\n /* { dg-options \"-std=c2x -pedantic-errors\" } */\n \n-[[maybe_unused, __maybe_unused__]] int a; /* { dg-error \"can appear at most once\" } */\n-[[__maybe_unused__, maybe_unused]] int b; /* { dg-error \"can appear at most once\" } */\n-int c [[maybe_unused, maybe_unused]]; /* { dg-error \"can appear at most once\" } */\n-[[maybe_unused, maybe_unused]]; /* { dg-error \"can appear at most once\" } */\n+[[maybe_unused, __maybe_unused__]] int a;\n+[[__maybe_unused__, maybe_unused]] int b;\n+int c [[maybe_unused, maybe_unused]];\n+[[maybe_unused, maybe_unused]];\n /* { dg-error \"ignored\" \"ignored\" { target *-*-* } .-1 } */\n \n-/* Separate attribute lists in the same attribute specifier sequence,\n-   with the same attribute in them, are OK.  */\n [[maybe_unused]] [[maybe_unused]] int d [[maybe_unused]] [[maybe_unused]];"}]}