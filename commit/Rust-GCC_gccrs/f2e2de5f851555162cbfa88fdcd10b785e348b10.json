{"sha": "f2e2de5f851555162cbfa88fdcd10b785e348b10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJlMmRlNWY4NTE1NTUxNjJjYmZhODhmZGNkMTBiNzg1ZTM0OGIxMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-04-07T16:44:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-04-07T16:44:40Z"}, "message": "Makefile.am: Add ext/aligned_buffer.h\n\n\t* include/Makefile.am: Add ext/aligned_buffer.h\n\t* include/Makefile.in: Regenerate.\n\t* include/ext/aligned_buffer.h: New.\n\t* include/std/future (_Result): Use __aligned_buffer.\n\t* include/bits/forward_list.h (_Fwd_list_node): Likewise.\n\t* include/bits/shared_ptr_base.h (_Sp_counted_ptr_inplace): Likewise.\n\t* testsuite/20_util/shared_ptr/cons/43820_neg.cc: Adjust dg-error line\n\tnumber.\n\nFrom-SVN: r197554", "tree": {"sha": "a427b2c8c95bf6fd4b43a6ee8922094857bb694e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a427b2c8c95bf6fd4b43a6ee8922094857bb694e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2e2de5f851555162cbfa88fdcd10b785e348b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e2de5f851555162cbfa88fdcd10b785e348b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e2de5f851555162cbfa88fdcd10b785e348b10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e2de5f851555162cbfa88fdcd10b785e348b10/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb037b5da5351a714aaf3421836196f645e25347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb037b5da5351a714aaf3421836196f645e25347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb037b5da5351a714aaf3421836196f645e25347"}], "stats": {"total": 128, "additions": 102, "deletions": 26}, "files": [{"sha": "0dfa2f92cc24b7d7e08763f37ea0ed2adcd837a5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f2e2de5f851555162cbfa88fdcd10b785e348b10", "patch": "@@ -1,3 +1,14 @@\n+2013-04-07  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/Makefile.am: Add ext/aligned_buffer.h\n+\t* include/Makefile.in: Regenerate.\n+\t* include/ext/aligned_buffer.h: New.\n+\t* include/std/future (_Result): Use __aligned_buffer.\n+\t* include/bits/forward_list.h (_Fwd_list_node): Likewise.\n+\t* include/bits/shared_ptr_base.h (_Sp_counted_ptr_inplace): Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/43820_neg.cc: Adjust dg-error line\n+\tnumber.\n+\n 2013-04-07  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/bits/forward_list.h: Only include required headers."}, {"sha": "b0ea41d7d714bb42262e9dc350f184a65b658845", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=f2e2de5f851555162cbfa88fdcd10b785e348b10", "patch": "@@ -495,6 +495,7 @@ ext_srcdir = ${glibcxx_srcdir}/include/ext\n ext_builddir = ./ext\n ext_headers = \\\n \t${ext_srcdir}/algorithm \\\n+\t${ext_srcdir}/aligned_buffer.h \\\n \t${ext_srcdir}/alloc_traits.h \\\n \t${ext_srcdir}/atomicity.h \\\n \t${ext_srcdir}/array_allocator.h \\"}, {"sha": "a644155422c1b92442757510617a77f77bced265", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=f2e2de5f851555162cbfa88fdcd10b785e348b10", "patch": "@@ -755,6 +755,7 @@ ext_srcdir = ${glibcxx_srcdir}/include/ext\n ext_builddir = ./ext\n ext_headers = \\\n \t${ext_srcdir}/algorithm \\\n+\t${ext_srcdir}/aligned_buffer.h \\\n \t${ext_srcdir}/alloc_traits.h \\\n \t${ext_srcdir}/atomicity.h \\\n \t${ext_srcdir}/array_allocator.h \\"}, {"sha": "e7c4bdd816eccb9d169c9309589bbefd4c2661b5", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=f2e2de5f851555162cbfa88fdcd10b785e348b10", "patch": "@@ -39,6 +39,7 @@\n #include <bits/stl_function.h>\n #include <bits/allocator.h>\n #include <ext/alloc_traits.h>\n+#include <ext/aligned_buffer.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -99,20 +100,15 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     {\n       _Fwd_list_node() = default;\n \n-      typename aligned_storage<sizeof(_Tp), alignment_of<_Tp>::value>::type\n-\t_M_storage;\n+      __gnu_cxx::__aligned_buffer<_Tp> _M_storage;\n \n       _Tp*\n       _M_valptr() noexcept\n-      {\n-\treturn static_cast<_Tp*>(static_cast<void*>(&_M_storage));\n-      }\n+      { return _M_storage._M_ptr(); }\n \n       const _Tp*\n       _M_valptr() const noexcept\n-      {\n-\treturn static_cast<const _Tp*>(static_cast<const void*>(&_M_storage));\n-      }\n+      { return _M_storage._M_ptr(); }\n     };\n \n   /**"}, {"sha": "f46364500bc9f94b801945bf3fb5a25652f33af6", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=f2e2de5f851555162cbfa88fdcd10b785e348b10", "patch": "@@ -49,6 +49,8 @@\n #ifndef _SHARED_PTR_BASE_H\n #define _SHARED_PTR_BASE_H 1\n \n+#include <ext/aligned_buffer.h>\n+\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -393,7 +395,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t_Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)\n \t: _M_impl(__a), _M_storage()\n \t{\n-\t  _M_impl._M_ptr = static_cast<_Tp*>(static_cast<void*>(&_M_storage));\n+\t  _M_impl._M_ptr = _M_storage._M_ptr();\n \t  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n \t  // 2070.  allocate_shared should use allocator_traits<A>::construct\n \t  allocator_traits<_Alloc>::construct(__a, _M_impl._M_ptr,\n@@ -422,18 +424,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _M_get_deleter(const std::type_info& __ti) noexcept\n       {\n #ifdef __GXX_RTTI\n-\treturn __ti == typeid(_Sp_make_shared_tag)\n-\t       ? static_cast<void*>(&_M_storage)\n-\t       : 0;\n+\treturn __ti == typeid(_Sp_make_shared_tag) ? _M_storage._M_addr() : 0;\n #else\n         return 0;\n #endif\n       }\n \n     private:\n       _Impl _M_impl;\n-      typename aligned_storage<sizeof(_Tp), alignment_of<_Tp>::value>::type\n-\t_M_storage;\n+      __gnu_cxx::__aligned_buffer<_Tp> _M_storage;\n     };\n \n   template<_Lock_policy _Lp>"}, {"sha": "ffed88cd7d10096e775435cd591020da6f44d6a6", "filename": "libstdc++-v3/include/ext/aligned_buffer.h", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2Fext%2Faligned_buffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2Fext%2Faligned_buffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Faligned_buffer.h?ref=f2e2de5f851555162cbfa88fdcd10b785e348b10", "patch": "@@ -0,0 +1,73 @@\n+// Aligned memory buffer -*- C++ -*-\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file ext/aligned_buffer.h\n+ *  This file is a GNU extension to the Standard C++ Library.\n+ */\n+\n+#ifndef _ALIGNED_BUFFER_H\n+#define _ALIGNED_BUFFER_H 1\n+\n+#pragma GCC system_header\n+\n+#if __cplusplus >= 201103L\n+# include <type_traits>\n+#else\n+# include <bits/c++0x_warning.h>\n+#endif\n+\n+namespace __gnu_cxx\n+{\n+  template<typename _Tp>\n+    struct __aligned_buffer\n+    : std::aligned_storage<sizeof(_Tp), std::alignment_of<_Tp>::value>\n+    {\n+      typename\n+\tstd::aligned_storage<sizeof(_Tp), std::alignment_of<_Tp>::value>::type\n+\t_M_storage;\n+\n+      void*\n+      _M_addr() noexcept\n+      {\n+        return static_cast<void*>(&_M_storage);\n+      }\n+\n+      const void*\n+      _M_addr() const noexcept\n+      {\n+        return static_cast<const void*>(&_M_storage);\n+      }\n+\n+      _Tp*\n+      _M_ptr() noexcept\n+      { return static_cast<_Tp*>(_M_addr()); }\n+\n+      const _Tp*\n+      _M_ptr() const noexcept\n+      { return static_cast<const _Tp*>(_M_addr()); }\n+    };\n+\n+} // namespace\n+\n+#endif /* _ALIGNED_BUFFER_H */"}, {"sha": "a86a7ca1ee04d1ef7332899aa5e3d71343ed117e", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=f2e2de5f851555162cbfa88fdcd10b785e348b10", "patch": "@@ -46,6 +46,7 @@\n #include <bits/shared_ptr.h>\n #include <bits/uses_allocator.h>\n #include <bits/alloc_traits.h>\n+#include <ext/aligned_buffer.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -206,12 +207,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       struct _Result : _Result_base\n       {\n       private:\n-\ttypedef alignment_of<_Res>\t\t\t\t__a_of;\n-\ttypedef aligned_storage<sizeof(_Res), __a_of::value>\t__align_storage;\n-\ttypedef typename __align_storage::type\t\t\t__align_type;\n-\n-\t__align_type\t\t_M_storage;\n-\tbool \t\t\t_M_initialized;\n+\t__gnu_cxx::__aligned_buffer<_Res>\t_M_storage;\n+\tbool \t\t\t\t\t_M_initialized;\n \n       public:\n \ttypedef _Res result_type;\n@@ -226,26 +223,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \t// Return lvalue, future will add const or rvalue-reference\n \t_Res&\n-\t_M_value() noexcept { return *static_cast<_Res*>(_M_addr()); }\n+\t_M_value() noexcept { return *_M_storage._M_ptr(); }\n \n \tvoid\n \t_M_set(const _Res& __res)\n \t{\n-\t  ::new (_M_addr()) _Res(__res);\n+\t  ::new (_M_storage._M_addr()) _Res(__res);\n \t  _M_initialized = true;\n \t}\n \n \tvoid\n \t_M_set(_Res&& __res)\n \t{\n-\t  ::new (_M_addr()) _Res(std::move(__res));\n+\t  ::new (_M_storage._M_addr()) _Res(std::move(__res));\n \t  _M_initialized = true;\n \t}\n \n       private:\n \tvoid _M_destroy() { delete this; }\n-\n-\tvoid* _M_addr() noexcept { return static_cast<void*>(&_M_storage); }\n     };\n \n     /// A unique_ptr based on the instantiating type."}, {"sha": "3a5f0539a59c128018106266dd029683a26fc6b4", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/43820_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e2de5f851555162cbfa88fdcd10b785e348b10/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820_neg.cc?ref=f2e2de5f851555162cbfa88fdcd10b785e348b10", "patch": "@@ -32,7 +32,7 @@ void test01()\n {\n   X* px = 0;\n   std::shared_ptr<X> p1(px);   // { dg-error \"here\" }\n-  // { dg-error \"incomplete\" \"\" { target *-*-* } 771 }\n+  // { dg-error \"incomplete\" \"\" { target *-*-* } 770 }\n \n   std::shared_ptr<X> p9(ap());  // { dg-error \"here\" }\n   // { dg-error \"incomplete\" \"\" { target *-*-* } 307 }"}]}