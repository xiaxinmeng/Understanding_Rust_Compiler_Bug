{"sha": "2e2ed7d22dec064200e1548f21dc99625e2be999", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUyZWQ3ZDIyZGVjMDY0MjAwZTE1NDhmMjFkYzk5NjI1ZTJiZTk5OQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2001-05-17T11:26:04Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2001-05-17T11:26:04Z"}, "message": "Fix c/2728\n\nFrom-SVN: r42195", "tree": {"sha": "5c297988c5b100706aafa72a34b9d8a1dc9fd9c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c297988c5b100706aafa72a34b9d8a1dc9fd9c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e2ed7d22dec064200e1548f21dc99625e2be999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2ed7d22dec064200e1548f21dc99625e2be999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e2ed7d22dec064200e1548f21dc99625e2be999", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2ed7d22dec064200e1548f21dc99625e2be999/comments", "author": null, "committer": null, "parents": [{"sha": "8d2b611685ccdcf5815f307bf1371d0fc41d93d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2b611685ccdcf5815f307bf1371d0fc41d93d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2b611685ccdcf5815f307bf1371d0fc41d93d5"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "72ea1fd02c2c0fbffe322b1d276018dfef7eddc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2ed7d22dec064200e1548f21dc99625e2be999/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2ed7d22dec064200e1548f21dc99625e2be999/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e2ed7d22dec064200e1548f21dc99625e2be999", "patch": "@@ -1,3 +1,8 @@\n+2001-05-17  Bernd Schmidt  <bernds@redhat.com>\n+\n+\t* stmt.c (expand_asm_operands): For inout operands, make sure\n+\tthe substitution of '=' for '+' makes it into the rtl.\n+\n 2001-05-17  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* gcc.texi (gccbug): Refer to the web pages for detailed information"}, {"sha": "433908aa02421274891070f29a364ef0fb2881a8", "filename": "gcc/stmt.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2ed7d22dec064200e1548f21dc99625e2be999/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2ed7d22dec064200e1548f21dc99625e2be999/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=2e2ed7d22dec064200e1548f21dc99625e2be999", "patch": "@@ -1328,6 +1328,8 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n   rtx *real_output_rtx = (rtx *) alloca (noutputs * sizeof (rtx));\n   enum machine_mode *inout_mode\n     = (enum machine_mode *) alloca (noutputs * sizeof (enum machine_mode));\n+  const char **output_constraints\n+    = alloca (noutputs * sizeof (const char *));\n   /* The insn we have emitted.  */\n   rtx insn;\n   int old_generating_concat_p = generating_concat_p;\n@@ -1426,6 +1428,7 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \t message.  */\n \n       constraint = TREE_STRING_POINTER (TREE_PURPOSE (tail));\n+      output_constraints[i] = constraint;\n       c_len = strlen (constraint);\n \n       /* Allow the `=' or `+' to not be at the beginning of the string,\n@@ -1455,6 +1458,7 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \t    memcpy (buf + 1, constraint, j);\n \t  memcpy (buf + 1 + j, p + 1, c_len - j);  /* not -j-1 - copy null */\n \t  constraint = ggc_alloc_string (buf, c_len);\n+\t  output_constraints[i] = constraint;\n \n \t  if (j)\n \t    warning (\n@@ -1824,7 +1828,7 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n   if (noutputs == 1 && nclobbers == 0)\n     {\n       ASM_OPERANDS_OUTPUT_CONSTRAINT (body)\n-\t= TREE_STRING_POINTER (TREE_PURPOSE (outputs));\n+\t= output_constraints[0];\n       insn = emit_insn (gen_rtx_SET (VOIDmode, output_rtx[0], body));\n     }\n \n@@ -1853,7 +1857,7 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \t\t\t   gen_rtx_ASM_OPERANDS\n \t\t\t   (GET_MODE (output_rtx[i]),\n \t\t\t    TREE_STRING_POINTER (string),\n-\t\t\t    TREE_STRING_POINTER (TREE_PURPOSE (tail)),\n+\t\t\t    output_constraints[i],\n \t\t\t    i, argvec, constraints,\n \t\t\t    filename, line));\n "}]}