{"sha": "c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAyYWUzYWUzZDY5YWU4MWE4OWNlN2M5MDIxYTliNzkwZGM1ZjZkYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-01-14T05:28:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-01-14T05:28:50Z"}, "message": "tree-profile.c (init_ic_make_global_vars): Drop workaround for bintuils bug 14342.\n\n\n\t* tree-profile.c (init_ic_make_global_vars): Drop workaround\n\tfor bintuils bug 14342.\n\t(init_ic_make_global_vars): Likewise.\n\t(gimple_init_edge_profiler): Likewise.\n\t(gimple_gen_ic_func_profiler): Likewise.\n\nFrom-SVN: r219574", "tree": {"sha": "8848c3b051bd94d46e1bb215e70668503a21f7ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8848c3b051bd94d46e1bb215e70668503a21f7ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc/comments", "author": null, "committer": null, "parents": [{"sha": "9e145afd37cd9d50a94aa001900c2efeeb69048a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e145afd37cd9d50a94aa001900c2efeeb69048a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e145afd37cd9d50a94aa001900c2efeeb69048a"}], "stats": {"total": 141, "additions": 45, "deletions": 96}, "files": [{"sha": "83304ac24aafcfaa81fd8b1ae32893ee82a0cb32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc", "patch": "@@ -1,3 +1,11 @@\n+2015-01-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-profile.c (init_ic_make_global_vars): Drop workaround\n+\tfor bintuils bug 14342.\n+\t(init_ic_make_global_vars): Likewise.\n+\t(gimple_init_edge_profiler): Likewise.\n+\t(gimple_gen_ic_func_profiler): Likewise.\n+\n 2015-01-15  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \t* ipa-inline.c (inline_small_functions): Swap the operands in"}, {"sha": "563610b3d630da39635c962417ebe354453b2856", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 37, "deletions": 96, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=c02ae3ae3d69ae81a89ce7c9021a9b790dc5f6dc", "patch": "@@ -105,30 +105,15 @@ init_ic_make_global_vars (void)\n \n   ptr_void = build_pointer_type (void_type_node);\n \n-  /* Workaround for binutils bug 14342.  Once it is fixed, remove lto path.  */\n-  if (flag_lto)\n-    {\n-      ic_void_ptr_var\n-\t= build_decl (UNKNOWN_LOCATION, VAR_DECL,\n-\t\t      get_identifier (\"__gcov_indirect_call_callee_ltopriv\"),\n-\t\t      ptr_void);\n-      TREE_PUBLIC (ic_void_ptr_var) = 1;\n-      DECL_COMMON (ic_void_ptr_var) = 1;\n-      DECL_VISIBILITY (ic_void_ptr_var) = VISIBILITY_HIDDEN;\n-      DECL_VISIBILITY_SPECIFIED (ic_void_ptr_var) = true;\n-    }\n-  else\n-    {\n-      ic_void_ptr_var\n-\t= build_decl (UNKNOWN_LOCATION, VAR_DECL,\n-\t\t      get_identifier (\n-\t\t\t      (PARAM_VALUE (PARAM_INDIR_CALL_TOPN_PROFILE) ?\n-\t\t\t       \"__gcov_indirect_call_topn_callee\" :\n-\t\t\t       \"__gcov_indirect_call_callee\")),\n-\t\t      ptr_void);\n-      TREE_PUBLIC (ic_void_ptr_var) = 1;\n-      DECL_EXTERNAL (ic_void_ptr_var) = 1;\n-    }\n+  ic_void_ptr_var\n+    = build_decl (UNKNOWN_LOCATION, VAR_DECL,\n+\t\t  get_identifier (\n+\t\t\t  (PARAM_VALUE (PARAM_INDIR_CALL_TOPN_PROFILE) ?\n+\t\t\t   \"__gcov_indirect_call_topn_callee\" :\n+\t\t\t   \"__gcov_indirect_call_callee\")),\n+\t\t  ptr_void);\n+  TREE_PUBLIC (ic_void_ptr_var) = 1;\n+  DECL_EXTERNAL (ic_void_ptr_var) = 1;\n   TREE_STATIC (ic_void_ptr_var) = 1;\n   DECL_ARTIFICIAL (ic_void_ptr_var) = 1;\n   DECL_INITIAL (ic_void_ptr_var) = NULL;\n@@ -138,30 +123,16 @@ init_ic_make_global_vars (void)\n   varpool_node::finalize_decl (ic_void_ptr_var);\n \n   gcov_type_ptr = build_pointer_type (get_gcov_type ());\n-  /* Workaround for binutils bug 14342.  Once it is fixed, remove lto path.  */\n-  if (flag_lto)\n-    {\n-      ic_gcov_type_ptr_var\n-\t= build_decl (UNKNOWN_LOCATION, VAR_DECL,\n-\t\t      get_identifier (\"__gcov_indirect_call_counters_ltopriv\"),\n-\t\t      gcov_type_ptr);\n-      TREE_PUBLIC (ic_gcov_type_ptr_var) = 1;\n-      DECL_COMMON (ic_gcov_type_ptr_var) = 1;\n-      DECL_VISIBILITY (ic_gcov_type_ptr_var) = VISIBILITY_HIDDEN;\n-      DECL_VISIBILITY_SPECIFIED (ic_gcov_type_ptr_var) = true;\n-    }\n-  else\n-    {\n-      ic_gcov_type_ptr_var\n-\t= build_decl (UNKNOWN_LOCATION, VAR_DECL,\n-\t\t      get_identifier (\n-\t\t\t      (PARAM_VALUE (PARAM_INDIR_CALL_TOPN_PROFILE) ?\n-\t\t\t       \"__gcov_indirect_call_topn_counters\" :\n-\t\t               \"__gcov_indirect_call_counters\")),\n-\t\t      gcov_type_ptr);\n-      TREE_PUBLIC (ic_gcov_type_ptr_var) = 1;\n-      DECL_EXTERNAL (ic_gcov_type_ptr_var) = 1;\n-    }\n+\n+  ic_gcov_type_ptr_var\n+    = build_decl (UNKNOWN_LOCATION, VAR_DECL,\n+\t\t  get_identifier (\n+\t\t\t  (PARAM_VALUE (PARAM_INDIR_CALL_TOPN_PROFILE) ?\n+\t\t\t   \"__gcov_indirect_call_topn_counters\" :\n+\t\t\t   \"__gcov_indirect_call_counters\")),\n+\t\t  gcov_type_ptr);\n+  TREE_PUBLIC (ic_gcov_type_ptr_var) = 1;\n+  DECL_EXTERNAL (ic_gcov_type_ptr_var) = 1;\n   TREE_STATIC (ic_gcov_type_ptr_var) = 1;\n   DECL_ARTIFICIAL (ic_gcov_type_ptr_var) = 1;\n   DECL_INITIAL (ic_gcov_type_ptr_var) = NULL;\n@@ -230,33 +201,18 @@ gimple_init_edge_profiler (void)\n \n       init_ic_make_global_vars ();\n \n-      /* Workaround for binutils bug 14342.  Once it is fixed, remove lto path.  */\n-      if (flag_lto)\n-        {\n-\t  /* void (*) (gcov_type, void *)  */\n-\t  ic_profiler_fn_type\n-\t\t   = build_function_type_list (void_type_node,\n-\t\t\t\t\t      gcov_type_ptr, gcov_type_node,\n-\t\t\t\t\t      ptr_void, ptr_void,\n-\t\t\t\t\t      NULL_TREE);\n-\t  tree_indirect_call_profiler_fn\n-\t\t  = build_fn_decl (\"__gcov_indirect_call_profiler\",\n-\t\t\t\t\t ic_profiler_fn_type);\n-        }\n-      else\n-        {\n-\t  /* void (*) (gcov_type, void *)  */\n-\t  ic_profiler_fn_type\n-\t\t   = build_function_type_list (void_type_node,\n-\t\t\t\t\t      gcov_type_node,\n-\t\t\t\t\t      ptr_void,\n-\t\t\t\t\t      NULL_TREE);\n-\t  tree_indirect_call_profiler_fn\n-\t\t  = build_fn_decl ( (PARAM_VALUE (PARAM_INDIR_CALL_TOPN_PROFILE) ?\n-\t\t\t\t     \"__gcov_indirect_call_topn_profiler\":\n-\t\t\t\t     \"__gcov_indirect_call_profiler_v2\"),\n-\t\t\t\t   ic_profiler_fn_type);\n-        }\n+      /* void (*) (gcov_type, void *)  */\n+      ic_profiler_fn_type\n+\t       = build_function_type_list (void_type_node,\n+\t\t\t\t\t  gcov_type_node,\n+\t\t\t\t\t  ptr_void,\n+\t\t\t\t\t  NULL_TREE);\n+      tree_indirect_call_profiler_fn\n+\t      = build_fn_decl ( (PARAM_VALUE (PARAM_INDIR_CALL_TOPN_PROFILE) ?\n+\t\t\t\t \"__gcov_indirect_call_topn_profiler\":\n+\t\t\t\t \"__gcov_indirect_call_profiler_v2\"),\n+\t\t\t       ic_profiler_fn_type);\n+\n       TREE_NOTHROW (tree_indirect_call_profiler_fn) = 1;\n       DECL_ATTRIBUTES (tree_indirect_call_profiler_fn)\n \t= tree_cons (get_identifier (\"leaf\"), NULL,\n@@ -477,34 +433,19 @@ gimple_gen_ic_func_profiler (void)\n     stmt1: __gcov_indirect_call_profiler_v2 (profile_id,\n \t\t\t\t\t     &current_function_decl)\n    */\n-  gsi = gsi_after_labels (split_edge (single_succ_edge (ENTRY_BLOCK_PTR_FOR_FN (cfun))));\n+  gsi = gsi_after_labels (split_edge (single_succ_edge\n+\t\t\t\t\t (ENTRY_BLOCK_PTR_FOR_FN (cfun))));\n \n   cur_func = force_gimple_operand_gsi (&gsi,\n \t\t\t\t       build_addr (current_function_decl,\n \t\t\t\t\t\t   current_function_decl),\n \t\t\t\t       true, NULL_TREE,\n \t\t\t\t       true, GSI_SAME_STMT);\n   tree_uid = build_int_cst\n-\t      (gcov_type_node, cgraph_node::get (current_function_decl)->profile_id);\n-  /* Workaround for binutils bug 14342.  Once it is fixed, remove lto path.  */\n-  if (flag_lto)\n-    {\n-      tree counter_ptr, ptr_var;\n-      counter_ptr = force_gimple_operand_gsi (&gsi, ic_gcov_type_ptr_var,\n-\t\t\t\t\t      true, NULL_TREE, true,\n-\t\t\t\t\t      GSI_SAME_STMT);\n-      ptr_var = force_gimple_operand_gsi (&gsi, ic_void_ptr_var,\n-\t\t\t\t\t  true, NULL_TREE, true,\n-\t\t\t\t\t  GSI_SAME_STMT);\n-\n-      stmt1 = gimple_build_call (tree_indirect_call_profiler_fn, 4,\n-\t\t\t\t counter_ptr, tree_uid, cur_func, ptr_var);\n-    }\n-  else\n-    {\n-      stmt1 = gimple_build_call (tree_indirect_call_profiler_fn, 2,\n-\t\t\t\t tree_uid, cur_func);\n-    }\n+\t      (gcov_type_node,\n+\t       cgraph_node::get (current_function_decl)->profile_id);\n+  stmt1 = gimple_build_call (tree_indirect_call_profiler_fn, 2,\n+\t\t\t     tree_uid, cur_func);\n   gsi_insert_before (&gsi, stmt1, GSI_SAME_STMT);\n \n   /* Set __gcov_indirect_call_callee to 0,"}]}