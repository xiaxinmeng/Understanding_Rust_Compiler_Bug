{"sha": "44b1fa1152d5a382080da9d0391f0630a72becb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRiMWZhMTE1MmQ1YTM4MjA4MGRhOWQwMzkxZjA2MzBhNzJiZWNiNQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-02-11T03:47:48Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-02-11T03:47:48Z"}, "message": "mips-tfile.c (init_file): Add missing initializers in the \"#ifdef __alpha\" case.\n\n\n\t* mips-tfile.c (init_file): Add missing initializers in the\n\t\"#ifdef __alpha\" case.\n\t(file_offset, max_file_offset): Declare as unsigned long.\n\t(write_varray): Cast to \"unsigned long\" in comparisons against\n\teither file_offset or max_file_offset.\n\t(write_object): Likewise.\n\t(read_seek): Likewise.\n\t(copy_object): Likewise. Declare \"ifd\" as int to match its use\n\tin add_ext_symbol, and avoid signed/unsigned conditional warning.\n\nFrom-SVN: r62671", "tree": {"sha": "ef6f94ee13d4cbe3f2097dd91edeeb0121e105db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef6f94ee13d4cbe3f2097dd91edeeb0121e105db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44b1fa1152d5a382080da9d0391f0630a72becb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b1fa1152d5a382080da9d0391f0630a72becb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44b1fa1152d5a382080da9d0391f0630a72becb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b1fa1152d5a382080da9d0391f0630a72becb5/comments", "author": null, "committer": null, "parents": [{"sha": "9ecd389eb1c6bf2890f6ebd44e6e06cb7530d63d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ecd389eb1c6bf2890f6ebd44e6e06cb7530d63d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ecd389eb1c6bf2890f6ebd44e6e06cb7530d63d"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "f0e06c80920d440dc97582b0e0fdf1bc5426d752", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44b1fa1152d5a382080da9d0391f0630a72becb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44b1fa1152d5a382080da9d0391f0630a72becb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44b1fa1152d5a382080da9d0391f0630a72becb5", "patch": "@@ -1,3 +1,15 @@\n+2003-02-10  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* mips-tfile.c (init_file): Add missing initializers in the\n+\t\"#ifdef __alpha\" case.\n+\t(file_offset, max_file_offset): Declare as unsigned long.\n+\t(write_varray): Cast to \"unsigned long\" in comparisons against\n+\teither file_offset or max_file_offset.\n+\t(write_object): Likewise.\n+\t(read_seek): Likewise.\n+\t(copy_object): Likewise. Declare \"ifd\" as int to match its use\n+\tin add_ext_symbol, and avoid signed/unsigned conditional warning.\n+\n 2003-02-10  Nick Clifton  <nickc@redhat.com>\n             Aldy Hernandez  <aldyh@redhat.com>\n "}, {"sha": "2d364fd93651ea92e42ac13a6b9a7df0caedcc86", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44b1fa1152d5a382080da9d0391f0630a72becb5/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44b1fa1152d5a382080da9d0391f0630a72becb5/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=44b1fa1152d5a382080da9d0391f0630a72becb5", "patch": "@@ -2,8 +2,8 @@\n    contain debugging information specified by the GNU compiler\n    in the form of comments (the mips assembler does not support\n    assembly access to debug information).\n-   Copyright (C) 1991, 1993, 1994, 1995, 1997, 1998, 1999, 2000, 2001\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 1994, 1995, 1997, 1998, 1999, 2000, 2001,\n+   2002, 2003 Free Software Foundation, Inc.\n    Contributed by Michael Meissner (meissner@cygnus.com).\n    \n This file is part of GCC.\n@@ -1099,6 +1099,8 @@ static efdr_t init_file =\n     0,\t\t\t/* fTrim:\twhether the symbol table was trimmed */\n     GLEVEL_2,\t\t/* glevel:\tlevel this file was compiled with */\n     0,\t\t\t/* reserved:\treserved for future use */\n+    0,\t\t\t/* cbLineOffset: byte offset from header for this file ln's */\n+    0,\t\t\t/* cbLine:\tsize of lines for this file */\n #else\n     0,\t\t\t/* adr:\t\tmemory address of beginning of file */\n     0,\t\t\t/* rss:\t\tfile name (of source, if known) */\n@@ -1570,8 +1572,8 @@ static SYMR    *cur_oproc_begin\t= (SYMR *) 0;\t/* original proc. sym begin info *\n static SYMR    *cur_oproc_end\t= (SYMR *) 0;\t/* original proc. sym end info */\n static PDR     *cur_oproc_ptr\t= (PDR *) 0;\t/* current original procedure*/\n static thead_t *cur_tag_head\t= (thead_t *) 0;/* current tag head */\n-static long\tfile_offset\t= 0;\t\t/* current file offset */\n-static long\tmax_file_offset\t= 0;\t\t/* maximum file offset */\n+static unsigned long file_offset\t= 0;\t/* current file offset */\n+static unsigned long max_file_offset\t= 0;\t/* maximum file offset */\n static FILE    *object_stream\t= (FILE *) 0;\t/* file desc. to output .o */\n static FILE    *obj_in_stream\t= (FILE *) 0;\t/* file desc. to input .o */\n static char    *progname\t= (char *) 0;\t/* program name for errors */\n@@ -4102,7 +4104,7 @@ write_varray (vp, offset, str)\n \t       (unsigned long) offset, vp->num_allocated * vp->object_size, str);\n     }\n   \n-  if (file_offset != offset\n+  if (file_offset != (unsigned long) offset\n       && fseek (object_stream, (long) offset, SEEK_SET) < 0)\n     pfatal_with_name (object_name);\n \n@@ -4165,7 +4167,7 @@ write_object ()\n     {\n       long sys_write;\n \n-      if (file_offset != symbolic_header.cbLineOffset\n+      if (file_offset != (unsigned long) symbolic_header.cbLineOffset\n \t  && fseek (object_stream, symbolic_header.cbLineOffset, SEEK_SET) != 0)\n \tpfatal_with_name (object_name);\n \n@@ -4200,7 +4202,7 @@ write_object ()\n       long sys_write;\n       long num_write = symbolic_header.ioptMax * sizeof (OPTR);\n \n-      if (file_offset != symbolic_header.cbOptOffset\n+      if (file_offset != (unsigned long) symbolic_header.cbOptOffset\n \t  && fseek (object_stream, symbolic_header.cbOptOffset, SEEK_SET) != 0)\n \tpfatal_with_name (object_name);\n \n@@ -4287,7 +4289,7 @@ write_object ()\n   if (symbolic_header.ifdMax > 0)\t\t/* file tables */\n     {\n       offset = symbolic_header.cbFdOffset;\n-      if (file_offset != offset\n+      if (file_offset != (unsigned long) offset\n \t  && fseek (object_stream, (long) offset, SEEK_SET) < 0)\n \tpfatal_with_name (object_name);\n \n@@ -4328,7 +4330,7 @@ write_object ()\n       long sys_write;\n       symint_t num_write = symbolic_header.crfd * sizeof (symint_t);\n \n-      if (file_offset != symbolic_header.cbRfdOffset\n+      if (file_offset != (unsigned long) symbolic_header.cbRfdOffset\n \t  && fseek (object_stream, symbolic_header.cbRfdOffset, SEEK_SET) != 0)\n \tpfatal_with_name (object_name);\n \n@@ -4393,7 +4395,7 @@ read_seek (size, offset, str)\n \n   /* If we need to seek, and the distance is nearby, just do some reads,\n      to speed things up.  */\n-  if (file_offset != offset)\n+  if (file_offset != (unsigned long) offset)\n     {\n       symint_t difference = offset - file_offset;\n \n@@ -4571,7 +4573,7 @@ copy_object ()\n \n \n   /* Abort if the symbol table is not last.  */\n-  if (max_file_offset != stat_buf.st_size)\n+  if (max_file_offset != (unsigned long) stat_buf.st_size)\n     fatal (\"symbol table is not last (symbol table ends at %ld, .o ends at %ld\",\n \t   max_file_offset,\n \t   (long) stat_buf.st_size);\n@@ -4625,7 +4627,7 @@ copy_object ()\n   for (es = 0; es < orig_sym_hdr.iextMax; es++)\n     {\n       EXTR *eptr = orig_ext_syms + es;\n-      unsigned ifd = eptr->ifd;\n+      int ifd = eptr->ifd;\n \n       (void) add_ext_symbol (eptr, ((long) ifd < orig_sym_hdr.ifdMax)\n \t\t\t     ? remap_file_number[ ifd ] : ifd );"}]}