{"sha": "9912dbe5c7d8c715d6506380ef62a3377297f4b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkxMmRiZTVjN2Q4YzcxNWQ2NTA2MzgwZWY2MmEzMzc3Mjk3ZjRiNA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-06-05T12:41:55Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-06-05T12:41:55Z"}, "message": "arm.c (MAX_INSN_PER_IT_BLOCK): New macro.\n\n2013-06-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.c (MAX_INSN_PER_IT_BLOCK): New macro.\n\t(arm_option_override): Override arm_restrict_it where appropriate.\n\t(thumb2_final_prescan_insn): Use MAX_INSN_PER_IT_BLOCK.\n\t* config/arm/arm.opt (mrestrict-it): New command-line option.\n\t* doc/invoke.texi: Document -mrestrict-it.\n\nFrom-SVN: r199694", "tree": {"sha": "1efc3d0a144ca0a1ed163a5df5d9ef9585bc6367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1efc3d0a144ca0a1ed163a5df5d9ef9585bc6367"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9912dbe5c7d8c715d6506380ef62a3377297f4b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9912dbe5c7d8c715d6506380ef62a3377297f4b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9912dbe5c7d8c715d6506380ef62a3377297f4b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9912dbe5c7d8c715d6506380ef62a3377297f4b4/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05fe45b882c57025c95f37d1132840a376700eb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fe45b882c57025c95f37d1132840a376700eb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05fe45b882c57025c95f37d1132840a376700eb3"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "391a5292fd16317a3c9c29f0e600a63f33ededc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9912dbe5c7d8c715d6506380ef62a3377297f4b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9912dbe5c7d8c715d6506380ef62a3377297f4b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9912dbe5c7d8c715d6506380ef62a3377297f4b4", "patch": "@@ -1,3 +1,11 @@\n+2013-06-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (MAX_INSN_PER_IT_BLOCK): New macro.\n+\t(arm_option_override): Override arm_restrict_it where appropriate.\n+\t(thumb2_final_prescan_insn): Use MAX_INSN_PER_IT_BLOCK.\n+\t* config/arm/arm.opt (mrestrict-it): New command-line option.\n+\t* doc/invoke.texi: Document -mrestrict-it.\n+\n 2013-06-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* tsan.c (tsan_atomic_table): Make const."}, {"sha": "63eb2b7608963f74731cf515cf8fae9dca341543", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9912dbe5c7d8c715d6506380ef62a3377297f4b4/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9912dbe5c7d8c715d6506380ef62a3377297f4b4/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=9912dbe5c7d8c715d6506380ef62a3377297f4b4", "patch": "@@ -662,6 +662,10 @@ static const struct attribute_spec arm_attribute_table[] =\n #undef TARGET_ASAN_SHADOW_OFFSET\n #define TARGET_ASAN_SHADOW_OFFSET arm_asan_shadow_offset\n \n+#undef MAX_INSN_PER_IT_BLOCK\n+#define MAX_INSN_PER_IT_BLOCK (arm_restrict_it ? 1 : 4)\n+\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Obstack for minipool constant handling.  */\n@@ -1871,6 +1875,11 @@ arm_option_override (void)\n   arm_arch_thumb_hwdiv = (insn_flags & FL_THUMB_DIV) != 0;\n   arm_arch_arm_hwdiv = (insn_flags & FL_ARM_DIV) != 0;\n   arm_tune_cortex_a9 = (arm_tune == cortexa9) != 0;\n+  if (arm_restrict_it == 2)\n+    arm_restrict_it = arm_arch8 && TARGET_THUMB2;\n+\n+  if (!TARGET_THUMB2)\n+    arm_restrict_it = 0;\n \n   /* If we are not using the default (ARM mode) section anchor offset\n      ranges, then set the correct ranges now.  */\n@@ -19593,7 +19602,7 @@ thumb2_final_prescan_insn (rtx insn)\n \tbreak;\n       /* Allow up to 4 conditionally executed instructions in a block.  */\n       n = get_attr_ce_count (insn);\n-      if (arm_condexec_masklen + n > 4)\n+      if (arm_condexec_masklen + n > MAX_INSN_PER_IT_BLOCK)\n \tbreak;\n \n       predicate = COND_EXEC_TEST (body);"}, {"sha": "b9ae2b096825affb44a76dd403af0e2f779bbe26", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9912dbe5c7d8c715d6506380ef62a3377297f4b4/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9912dbe5c7d8c715d6506380ef62a3377297f4b4/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=9912dbe5c7d8c715d6506380ef62a3377297f4b4", "patch": "@@ -239,6 +239,10 @@ mword-relocations\n Target Report Var(target_word_relocations) Init(TARGET_DEFAULT_WORD_RELOCATIONS)\n Only generate absolute relocations on word sized values.\n \n+mrestrict-it\n+Target Report Var(arm_restrict_it) Init(2)\n+Generate IT blocks appropriate for ARMv8.\n+\n mfix-cortex-m3-ldrd\n Target Report Var(fix_cm3_ldrd) Init(2)\n Avoid overlapping destination and address registers on LDRD instructions"}, {"sha": "b7b32f73b75b501084cf20de948326199a0d2525", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9912dbe5c7d8c715d6506380ef62a3377297f4b4/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9912dbe5c7d8c715d6506380ef62a3377297f4b4/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9912dbe5c7d8c715d6506380ef62a3377297f4b4", "patch": "@@ -512,7 +512,8 @@ Objective-C and Objective-C++ Dialects}.\n -mword-relocations @gol\n -mfix-cortex-m3-ldrd @gol\n -munaligned-access @gol\n--mneon-for-64bits}\n+-mneon-for-64bits @gol\n+-mrestrict-it}\n \n @emph{AVR Options}\n @gccoptlist{-mmcu=@var{mcu} -maccumulate-args -mbranch-cost=@var{cost} @gol\n@@ -11633,6 +11634,12 @@ defined.\n Enables using Neon to handle scalar 64-bits operations. This is\n disabled by default since the cost of moving data from core registers\n to Neon is high.\n+\n+@item -mrestrict-it\n+@opindex mrestrict-it\n+Restricts generation of IT blocks to conform to the rules of ARMv8.\n+IT blocks can only contain a single 16-bit instruction from a select\n+set of instructions. This option is on by default for ARMv8 Thumb mode.\n @end table\n \n @node AVR Options"}]}