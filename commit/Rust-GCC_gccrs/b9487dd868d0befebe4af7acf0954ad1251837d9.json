{"sha": "b9487dd868d0befebe4af7acf0954ad1251837d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk0ODdkZDg2OGQwYmVmZWJlNGFmN2FjZjA5NTRhZDEyNTE4MzdkOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-03-26T19:16:35Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-03-26T19:16:35Z"}, "message": "gcc.c (LINK_COMMAND_SPEC): Use libcilkrts.spec for -fcilkplus.\n\ngcc/\n2014-03-26  Tobias Burnus  <burnus@net-b.de>\n\n        * gcc.c (LINK_COMMAND_SPEC): Use libcilkrts.spec for -fcilkplus.\n        (CILK_SELF_SPECS): New define.\n        (driver_self_specs): Use it.\n\nlibcilkrts/\n2014-03-26  Tobias Burnus  <burnus@net-b.de>\n\n        * libcilkrts.spec.in: New.\n        * Makefile.am: Handle libcilkrts.spec.\n        * configure.ac: Determine link options for libcilkrts.spec.\n        * Makefile.in: Regenerate.\n        * configure: Regenerate.\n        * aclocal.m4: Regenerate.\n\nFrom-SVN: r208847", "tree": {"sha": "223f64ccc65d033a347369720cfd2fb11f1d0dc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/223f64ccc65d033a347369720cfd2fb11f1d0dc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9487dd868d0befebe4af7acf0954ad1251837d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9487dd868d0befebe4af7acf0954ad1251837d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9487dd868d0befebe4af7acf0954ad1251837d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9487dd868d0befebe4af7acf0954ad1251837d9/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8707b3bcc00e1026c0ff9c98b68d2d3e97cf0a24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8707b3bcc00e1026c0ff9c98b68d2d3e97cf0a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8707b3bcc00e1026c0ff9c98b68d2d3e97cf0a24"}], "stats": {"total": 191, "additions": 157, "deletions": 34}, "files": [{"sha": "9b124fbe982d569e328f55f311e54dfd798364e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9487dd868d0befebe4af7acf0954ad1251837d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9487dd868d0befebe4af7acf0954ad1251837d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9487dd868d0befebe4af7acf0954ad1251837d9", "patch": "@@ -1,3 +1,9 @@\n+2014-03-26  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gcc.c (LINK_COMMAND_SPEC): Use libcilkrts.spec for -fcilkplus.\n+\t(CILK_SELF_SPECS): New define.\n+\t(driver_self_specs): Use it.\n+\n 2014-03-26  Richard Biener  <rguenther@suse.de>\n \n \t* tree-pretty-print.c (percent_K_format): Implement special"}, {"sha": "5cb485acbd3470c7161fc6a3393643bfd07053a8", "filename": "gcc/gcc.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9487dd868d0befebe4af7acf0954ad1251837d9/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9487dd868d0befebe4af7acf0954ad1251837d9/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=b9487dd868d0befebe4af7acf0954ad1251837d9", "patch": "@@ -766,6 +766,7 @@ proper position among the other output files.  */\n     %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!nostartfiles:%S}} \" VTABLE_VERIFICATION_SPEC \" \\\n     %{static:} %{L*} %(mfwrap) %(link_libgcc) \" SANITIZER_EARLY_SPEC \" %o\\\n     %{fopenmp|ftree-parallelize-loops=*:%:include(libgomp.spec)%(link_gomp)}\\\n+    %{fcilkplus:%:include(libcilkrts.spec)%(link_cilkrts)}\\\n     %{fgnu-tm:%:include(libitm.spec)%(link_itm)}\\\n     %(mflib) \" STACK_SPLIT_SPEC \"\\\n     %{fprofile-arcs|fprofile-generate*|coverage:-lgcov} \" SANITIZER_SPEC \" \\\n@@ -932,9 +933,15 @@ static const char *const multilib_defaults_raw[] = MULTILIB_DEFAULTS;\n #define GTM_SELF_SPECS \"%{fgnu-tm: -pthread}\"\n #endif\n \n+/* Likewise for -fcilkplus.  */\n+#ifndef CILK_SELF_SPECS\n+#define CILK_SELF_SPECS \"%{fcilkplus: -pthread}\"\n+#endif\n+\n static const char *const driver_self_specs[] = {\n   \"%{fdump-final-insns:-fdump-final-insns=.} %<fdump-final-insns\",\n-  DRIVER_SELF_SPECS, CONFIGURE_SPECS, GOMP_SELF_SPECS, GTM_SELF_SPECS\n+  DRIVER_SELF_SPECS, CONFIGURE_SPECS, GOMP_SELF_SPECS, GTM_SELF_SPECS,\n+  CILK_SELF_SPECS\n };\n \n #ifndef OPTION_DEFAULT_SPECS"}, {"sha": "80b35c1405d37d153766495ee3ab8d4d9029f330", "filename": "libcilkrts/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FChangeLog?ref=b9487dd868d0befebe4af7acf0954ad1251837d9", "patch": "@@ -1,3 +1,12 @@\n+2014-03-26  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* libcilkrts.spec.in: New.\n+\t* Makefile.am: Handle libcilkrts.spec.\n+\t* configure.ac: Determine link options for libcilkrts.spec.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\n 2014-03-20  Tobias Burnus  <burnus@net-b.de>\n \n \tPR other/60589"}, {"sha": "84551c842274ec642c51e18b9d9b423e8eba5e46", "filename": "libcilkrts/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FMakefile.am?ref=b9487dd868d0befebe4af7acf0954ad1251837d9", "patch": "@@ -51,6 +51,7 @@ AM_LDFLAGS = -lpthread\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n \n # Target list.\n+nodist_toolexeclib_HEADERS = libcilkrts.spec\n toolexeclib_LTLIBRARIES = libcilkrts.la\n \n libcilkrts_la_SOURCES =            \\\n@@ -110,7 +111,7 @@ libcilkrts_la_LDFLAGS += -no-undefined\n # C/C++ header files for Cilk.\n # cilkincludedir = $(includedir)/cilk\n cilkincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)/include/cilk\n-cilkinclude_HEADERS =              \\\n+nodist_cilkinclude_HEADERS =       \\\n   include/cilk/cilk_api.h          \\\n   include/cilk/cilk_api_linux.h    \\\n   include/cilk/cilk.h              \\"}, {"sha": "1ee4d8270e52e931af657a3b2db97ac2d2b65251", "filename": "libcilkrts/Makefile.in", "status": "modified", "additions": 50, "deletions": 26, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FMakefile.in?ref=b9487dd868d0befebe4af7acf0954ad1251837d9", "patch": "@@ -112,8 +112,8 @@ target_triplet = @target@\n DIST_COMMON = $(srcdir)/include/internal/rev.mk README ChangeLog \\\n \t$(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n-\t$(srcdir)/../mkinstalldirs $(srcdir)/../depcomp \\\n-\t$(cilkinclude_HEADERS)\n+\t$(srcdir)/../mkinstalldirs $(srcdir)/libcilkrts.spec.in \\\n+\t$(srcdir)/../depcomp\n \n # If we're building on Linux, use the Linux version script\n @LINUX_LINKER_SCRIPT_TRUE@am__append_1 = -Wl,--version-script,$(srcdir)/runtime/linux-symbols.ver\n@@ -122,10 +122,8 @@ DIST_COMMON = $(srcdir)/include/internal/rev.mk README ChangeLog \\\n @MAC_LINKER_SCRIPT_TRUE@am__append_2 = -Wl,-exported_symbols_list,$(srcdir)/runtime/mac-symbols.txt\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n-\t$(top_srcdir)/../config/depstand.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../config/libstdc++-raw-cxx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n@@ -136,7 +134,7 @@ am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n  configure.lineno config.status.lineno\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n-CONFIG_CLEAN_FILES =\n+CONFIG_CLEAN_FILES = libcilkrts.spec\n CONFIG_CLEAN_VPATH_FILES =\n am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n am__vpath_adj = case $$p in \\\n@@ -160,7 +158,7 @@ am__base_list = \\\n   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n   sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \\\n-\t\"$(DESTDIR)$(cilkincludedir)\"\n+\t\"$(DESTDIR)$(cilkincludedir)\" \"$(DESTDIR)$(toolexeclibdir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n libcilkrts_la_LIBADD =\n am_libcilkrts_la_OBJECTS = cilk-abi-vla.lo os-unix-sysdep.lo bug.lo \\\n@@ -204,7 +202,7 @@ MULTIDIRS =\n MULTISUBDIR = \n MULTIDO = true\n MULTICLEAN = true\n-HEADERS = $(cilkinclude_HEADERS)\n+HEADERS = $(nodist_cilkinclude_HEADERS) $(nodist_toolexeclib_HEADERS)\n ETAGS = etags\n CTAGS = ctags\n ACLOCAL = @ACLOCAL@\n@@ -245,8 +243,6 @@ LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n-LIBSTDCXX_RAW_CXX_CXXFLAGS = @LIBSTDCXX_RAW_CXX_CXXFLAGS@\n-LIBSTDCXX_RAW_CXX_LDFLAGS = @LIBSTDCXX_RAW_CXX_LDFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -310,6 +306,7 @@ infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n+link_cilkrts = @link_cilkrts@\n localedir = @localedir@\n localstatedir = @localstatedir@\n lt_cv_dlopen_libs = @lt_cv_dlopen_libs@\n@@ -328,7 +325,6 @@ sysconfdir = @sysconfdir@\n target = @target@\n target_alias = @target_alias@\n target_cpu = @target_cpu@\n-target_noncanonical = @target_noncanonical@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexecdir = @toolexecdir@\n@@ -356,6 +352,7 @@ AM_LDFLAGS = -lpthread\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n \n # Target list.\n+nodist_toolexeclib_HEADERS = libcilkrts.spec\n toolexeclib_LTLIBRARIES = libcilkrts.la\n libcilkrts_la_SOURCES = \\\n   runtime/config/$(config_dir)/cilk-abi-vla.c           \\\n@@ -403,7 +400,7 @@ libcilkrts_la_LDFLAGS = -version-info 5:0:0 -lpthread \\\n # C/C++ header files for Cilk.\n # cilkincludedir = $(includedir)/cilk\n cilkincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)/include/cilk\n-cilkinclude_HEADERS = \\\n+nodist_cilkinclude_HEADERS = \\\n   include/cilk/cilk_api.h          \\\n   include/cilk/cilk_api_linux.h    \\\n   include/cilk/cilk.h              \\\n@@ -505,6 +502,8 @@ $(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n \t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n $(am__aclocal_m4_deps):\n+libcilkrts.spec: $(top_builddir)/config.status $(srcdir)/libcilkrts.spec.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n \t@$(NORMAL_INSTALL)\n \ttest -z \"$(toolexeclibdir)\" || $(MKDIR_P) \"$(DESTDIR)$(toolexeclibdir)\"\n@@ -853,10 +852,10 @@ distclean-multi:\n \t$(MULTICLEAN) $(AM_MAKEFLAGS) DO=distclean multi-clean # $(MAKE)\n maintainer-clean-multi:\n \t$(MULTICLEAN) $(AM_MAKEFLAGS) DO=maintainer-clean multi-clean # $(MAKE)\n-install-cilkincludeHEADERS: $(cilkinclude_HEADERS)\n+install-nodist_cilkincludeHEADERS: $(nodist_cilkinclude_HEADERS)\n \t@$(NORMAL_INSTALL)\n \ttest -z \"$(cilkincludedir)\" || $(MKDIR_P) \"$(DESTDIR)$(cilkincludedir)\"\n-\t@list='$(cilkinclude_HEADERS)'; test -n \"$(cilkincludedir)\" || list=; \\\n+\t@list='$(nodist_cilkinclude_HEADERS)'; test -n \"$(cilkincludedir)\" || list=; \\\n \tfor p in $$list; do \\\n \t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n \t  echo \"$$d$$p\"; \\\n@@ -866,13 +865,33 @@ install-cilkincludeHEADERS: $(cilkinclude_HEADERS)\n \t  $(INSTALL_HEADER) $$files \"$(DESTDIR)$(cilkincludedir)\" || exit $$?; \\\n \tdone\n \n-uninstall-cilkincludeHEADERS:\n+uninstall-nodist_cilkincludeHEADERS:\n \t@$(NORMAL_UNINSTALL)\n-\t@list='$(cilkinclude_HEADERS)'; test -n \"$(cilkincludedir)\" || list=; \\\n+\t@list='$(nodist_cilkinclude_HEADERS)'; test -n \"$(cilkincludedir)\" || list=; \\\n \tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n \ttest -n \"$$files\" || exit 0; \\\n \techo \" ( cd '$(DESTDIR)$(cilkincludedir)' && rm -f\" $$files \")\"; \\\n \tcd \"$(DESTDIR)$(cilkincludedir)\" && rm -f $$files\n+install-nodist_toolexeclibHEADERS: $(nodist_toolexeclib_HEADERS)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(toolexeclibdir)\" || $(MKDIR_P) \"$(DESTDIR)$(toolexeclibdir)\"\n+\t@list='$(nodist_toolexeclib_HEADERS)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_HEADER) $$files '$(DESTDIR)$(toolexeclibdir)'\"; \\\n+\t  $(INSTALL_HEADER) $$files \"$(DESTDIR)$(toolexeclibdir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-nodist_toolexeclibHEADERS:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(nodist_toolexeclib_HEADERS)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\ttest -n \"$$files\" || exit 0; \\\n+\techo \" ( cd '$(DESTDIR)$(toolexeclibdir)' && rm -f\" $$files \")\"; \\\n+\tcd \"$(DESTDIR)$(toolexeclibdir)\" && rm -f $$files\n \n ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n \tlist='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\\n@@ -929,7 +948,7 @@ check-am: all-am\n check: check-am\n all-am: Makefile $(LTLIBRARIES) all-multi $(HEADERS)\n installdirs:\n-\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(cilkincludedir)\"; do \\\n+\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(cilkincludedir)\" \"$(DESTDIR)$(toolexeclibdir)\"; do \\\n \t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n \tdone\n install: install-am\n@@ -981,13 +1000,14 @@ info: info-am\n \n info-am:\n \n-install-data-am: install-cilkincludeHEADERS\n+install-data-am: install-nodist_cilkincludeHEADERS\n \n install-dvi: install-dvi-am\n \n install-dvi-am:\n \n-install-exec-am: install-multi install-toolexeclibLTLIBRARIES\n+install-exec-am: install-multi install-nodist_toolexeclibHEADERS \\\n+\tinstall-toolexeclibLTLIBRARIES\n \n install-html: install-html-am\n \n@@ -1029,7 +1049,8 @@ ps: ps-am\n \n ps-am:\n \n-uninstall-am: uninstall-cilkincludeHEADERS \\\n+uninstall-am: uninstall-nodist_cilkincludeHEADERS \\\n+\tuninstall-nodist_toolexeclibHEADERS \\\n \tuninstall-toolexeclibLTLIBRARIES\n \n .MAKE: all-multi clean-multi distclean-multi install-am install-multi \\\n@@ -1040,17 +1061,20 @@ uninstall-am: uninstall-cilkincludeHEADERS \\\n \tclean-toolexeclibLTLIBRARIES ctags distclean distclean-compile \\\n \tdistclean-generic distclean-libtool distclean-multi \\\n \tdistclean-tags dvi dvi-am html html-am info info-am install \\\n-\tinstall-am install-cilkincludeHEADERS install-data \\\n-\tinstall-data-am install-dvi install-dvi-am install-exec \\\n-\tinstall-exec-am install-html install-html-am install-info \\\n-\tinstall-info-am install-man install-multi install-pdf \\\n-\tinstall-pdf-am install-ps install-ps-am install-strip \\\n+\tinstall-am install-data install-data-am install-dvi \\\n+\tinstall-dvi-am install-exec install-exec-am install-html \\\n+\tinstall-html-am install-info install-info-am install-man \\\n+\tinstall-multi install-nodist_cilkincludeHEADERS \\\n+\tinstall-nodist_toolexeclibHEADERS install-pdf install-pdf-am \\\n+\tinstall-ps install-ps-am install-strip \\\n \tinstall-toolexeclibLTLIBRARIES installcheck installcheck-am \\\n \tinstalldirs maintainer-clean maintainer-clean-generic \\\n \tmaintainer-clean-multi mostlyclean mostlyclean-compile \\\n \tmostlyclean-generic mostlyclean-libtool mostlyclean-multi pdf \\\n \tpdf-am ps ps-am tags uninstall uninstall-am \\\n-\tuninstall-cilkincludeHEADERS uninstall-toolexeclibLTLIBRARIES\n+\tuninstall-nodist_cilkincludeHEADERS \\\n+\tuninstall-nodist_toolexeclibHEADERS \\\n+\tuninstall-toolexeclibLTLIBRARIES\n \n \n # Tell versions [3.59,3.63) of GNU make to not export all variables."}, {"sha": "68107caffa075b0a8a198f60a0e1ee574eb6d58d", "filename": "libcilkrts/aclocal.m4", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Faclocal.m4?ref=b9487dd868d0befebe4af7acf0954ad1251837d9", "patch": "@@ -968,10 +968,8 @@ AC_SUBST([am__tar])\n AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n-m4_include([../config/acx.m4])\n m4_include([../config/depstand.m4])\n m4_include([../config/lead-dot.m4])\n-m4_include([../config/libstdc++-raw-cxx.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n m4_include([../libtool.m4])"}, {"sha": "0dadbbda035885252acda1029d21ee4b9143ae44", "filename": "libcilkrts/configure", "status": "modified", "additions": 55, "deletions": 3, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure?ref=b9487dd868d0befebe4af7acf0954ad1251837d9", "patch": "@@ -604,6 +604,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+link_cilkrts\n lt_cv_dlopen_libs\n toolexeclibdir\n toolexecdir\n@@ -4214,7 +4215,7 @@ fi\n \n # AC_PROG_LIBTOOL\n # AC_CONFIG_MACRO_DIR([..])\n-ac_config_files=\"$ac_config_files Makefile\"\n+ac_config_files=\"$ac_config_files Makefile libcilkrts.spec\"\n \n # Default to --enable-multilib\n # Check whether --enable-multilib was given.\n@@ -11056,7 +11057,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11059 \"configure\"\n+#line 11060 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11162,7 +11163,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11165 \"configure\"\n+#line 11166 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14451,6 +14452,56 @@ fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n \n+# Check to see if -pthread or -lpthread is needed.  Prefer the former.\n+# Note that the CILK_SELF_SPEC in gcc.c may force -pthread.\n+# In case the pthread.h system header is not found, this test will fail.\n+CFLAGS=\"$CFLAGS -pthread\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <pthread.h>\n+   void *g(void *d) { return NULL; }\n+int\n+main ()\n+{\n+pthread_t t; pthread_create(&t,NULL,g,NULL);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+\n+else\n+  CFLAGS=\"$save_CFLAGS\" LIBS=\"-lpthread $LIBS\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <pthread.h>\n+     void *g(void *d) { return NULL; }\n+int\n+main ()\n+{\n+pthread_t t; pthread_create(&t,NULL,g,NULL);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+\n+else\n+  as_fn_error \"Pthreads are required to build libcilkrts\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+\n+if test $enable_shared = yes; then\n+  link_cilkrts=\"-lcilkrts %{static: $LIBS}\"\n+else\n+  link_cilkrts=\"-lcilkrts $LIBS\"\n+fi\n+\n+\n \n # Must be last\n cat >confcache <<\\_ACEOF\n@@ -15567,6 +15618,7 @@ do\n   case $ac_config_target in\n     \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n+    \"libcilkrts.spec\") CONFIG_FILES=\"$CONFIG_FILES libcilkrts.spec\" ;;\n     \"default-1\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n     \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n "}, {"sha": "fb215052dd63dd49d42aff36feebde93ea4ace60", "filename": "libcilkrts/configure.ac", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9487dd868d0befebe4af7acf0954ad1251837d9/libcilkrts%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure.ac?ref=b9487dd868d0befebe4af7acf0954ad1251837d9", "patch": "@@ -49,7 +49,7 @@ AC_PROG_CC\n AC_PROG_CXX\n # AC_PROG_LIBTOOL\n # AC_CONFIG_MACRO_DIR([..])\n-AC_CONFIG_FILES([Makefile])\n+AC_CONFIG_FILES([Makefile libcilkrts.spec])\n AM_ENABLE_MULTILIB(, ..)\n AC_FUNC_ALLOCA\n \n@@ -183,6 +183,32 @@ AC_LINK_IFELSE(\n   AC_DEFINE(HAVE_PTHREAD_AFFINITY_NP, 1,\n [       Define if pthread_{,attr_}{g,s}etaffinity_np is supported.]))\n \n+# Check to see if -pthread or -lpthread is needed.  Prefer the former.\n+# Note that the CILK_SELF_SPEC in gcc.c may force -pthread.\n+# In case the pthread.h system header is not found, this test will fail.\n+CFLAGS=\"$CFLAGS -pthread\"\n+AC_LINK_IFELSE(\n+ [AC_LANG_PROGRAM(\n+  [#include <pthread.h>\n+   void *g(void *d) { return NULL; }],\n+  [pthread_t t; pthread_create(&t,NULL,g,NULL);])],\n+ [],\n+ [CFLAGS=\"$save_CFLAGS\" LIBS=\"-lpthread $LIBS\"\n+  AC_LINK_IFELSE(\n+   [AC_LANG_PROGRAM(\n+    [#include <pthread.h>\n+     void *g(void *d) { return NULL; }],\n+    [pthread_t t; pthread_create(&t,NULL,g,NULL);])],\n+   [],\n+   [AC_MSG_ERROR([Pthreads are required to build libcilkrts])])])\n+\n+if test $enable_shared = yes; then\n+  link_cilkrts=\"-lcilkrts %{static: $LIBS}\"\n+else\n+  link_cilkrts=\"-lcilkrts $LIBS\"\n+fi\n+AC_SUBST(link_cilkrts)\n+\n \n # Must be last\n AC_OUTPUT"}]}