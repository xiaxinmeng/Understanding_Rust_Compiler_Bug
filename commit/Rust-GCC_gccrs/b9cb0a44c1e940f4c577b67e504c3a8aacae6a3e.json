{"sha": "b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjljYjBhNDRjMWU5NDBmNGM1NzdiNjdlNTA0YzNhOGFhY2FlNmEzZQ==", "commit": {"author": {"name": "Tejas Belagod", "email": "tejas.belagod@arm.com", "date": "2013-12-19T15:00:53Z"}, "committer": {"name": "Tejas Belagod", "email": "belagod@gcc.gnu.org", "date": "2013-12-19T15:00:53Z"}, "message": "Implement support for AArch64 Crypto SHA256.\n\ngcc/\n\t* config/aarch64/aarch64-simd-builtins.def: Update builtins table.\n\t* config/aarch64/aarch64-simd.md (aarch64_crypto_sha256h<sha256_op>v4si,\n\taarch64_crypto_sha256su0v4si, aarch64_crypto_sha256su1v4si): New.\n\t* config/aarch64/arm_neon.h (vsha256hq_u32, vsha256h2q_u32,\n\tvsha256su0q_u32, vsha256su1q_u32): New.\n\t* config/aarch64/iterators.md (UNSPEC_SHA256H<2>, UNSPEC_SHA256SU<01>):\n\tNew.\n\t(CRYPTO_SHA256): New int iterator.\n\t(sha256_op): New int attribute.\n\ntestsuite/\n\t* gcc.target/aarch64/sha256_1.c: New.\n\nFrom-SVN: r206119", "tree": {"sha": "695849f4730191105684f43accd89989e382a4c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/695849f4730191105684f43accd89989e382a4c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/comments", "author": {"login": "tejas-belagod-arm", "id": 92718852, "node_id": "U_kgDOBYbHBA", "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejas-belagod-arm", "html_url": "https://github.com/tejas-belagod-arm", "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers", "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}", "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions", "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs", "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos", "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3044268251b2f9a92e876d2b84a5d4b4568ec0c2"}], "stats": {"total": 128, "additions": 128, "deletions": 0}, "files": [{"sha": "1c4a9fc58adc2c410ccad657b451a3a4c913cea7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "patch": "@@ -1,3 +1,15 @@\n+2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def: Update builtins table.\n+\t* config/aarch64/aarch64-simd.md (aarch64_crypto_sha256h<sha256_op>v4si,\n+\taarch64_crypto_sha256su0v4si, aarch64_crypto_sha256su1v4si): New.\n+\t* config/aarch64/arm_neon.h (vsha256hq_u32, vsha256h2q_u32,\n+\tvsha256su0q_u32, vsha256su1q_u32): New.\n+\t* config/aarch64/iterators.md (UNSPEC_SHA256H<2>, UNSPEC_SHA256SU<01>):\n+\tNew.\n+\t(CRYPTO_SHA256): New int iterator.\n+\t(sha256_op): New int attribute.\n+\n 2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def: Update builtins table."}, {"sha": "c7e1120660d860e407886c9bcf0949d94c1b5044", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "patch": "@@ -380,3 +380,9 @@\n   VAR1 (TERNOPU, crypto_sha1m, 0, v4si)\n   VAR1 (TERNOPU, crypto_sha1p, 0, v4si)\n   VAR1 (TERNOPU, crypto_sha1su0, 0, v4si)\n+\n+  /* Implemented by aarch64_crypto_sha256<op><mode>.  */\n+  VAR1 (TERNOPU, crypto_sha256h, 0, v4si)\n+  VAR1 (TERNOPU, crypto_sha256h2, 0, v4si)\n+  VAR1 (BINOPU, crypto_sha256su0, 0, v4si)\n+  VAR1 (TERNOPU, crypto_sha256su1, 0, v4si)"}, {"sha": "874d5324ffede4eafceb9e477c0ed4372f65889d", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "patch": "@@ -4139,3 +4139,37 @@\n   \"sha1su0\\\\t%0.4s, %2.4s, %3.4s\"\n   [(set_attr \"type\" \"crypto_sha1_xor\")]\n )\n+\n+;; sha256\n+\n+(define_insn \"aarch64_crypto_sha256h<sha256_op>v4si\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=w\")\n+        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"0\")\n+                      (match_operand:V4SI 2 \"register_operand\" \"w\")\n+                      (match_operand:V4SI 3 \"register_operand\" \"w\")]\n+         CRYPTO_SHA256))]\n+  \"TARGET_SIMD && TARGET_CRYPTO\"\n+  \"sha256h<sha256_op>\\\\t%q0, %q2, %3.4s\"\n+  [(set_attr \"type\" \"crypto_sha256_slow\")]\n+)\n+\n+(define_insn \"aarch64_crypto_sha256su0v4si\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=w\")\n+        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"0\")\n+                      (match_operand:V4SI 2 \"register_operand\" \"w\")]\n+         UNSPEC_SHA256SU0))]\n+  \"TARGET_SIMD &&TARGET_CRYPTO\"\n+  \"sha256su0\\\\t%0.4s, %2.4s\"\n+  [(set_attr \"type\" \"crypto_sha256_fast\")]\n+)\n+\n+(define_insn \"aarch64_crypto_sha256su1v4si\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=w\")\n+        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"0\")\n+                      (match_operand:V4SI 2 \"register_operand\" \"w\")\n+                      (match_operand:V4SI 3 \"register_operand\" \"w\")]\n+         UNSPEC_SHA256SU1))]\n+  \"TARGET_SIMD &&TARGET_CRYPTO\"\n+  \"sha256su1\\\\t%0.4s, %2.4s, %3.4s\"\n+  [(set_attr \"type\" \"crypto_sha256_slow\")]\n+)"}, {"sha": "709c6a14c5f853317edbbc9f5164cec44e00d14b", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "patch": "@@ -22990,6 +22990,30 @@ vsha1su1q_u32 (uint32x4_t tw0_3, uint32x4_t w12_15)\n   return __builtin_aarch64_crypto_sha1su1v4si_uuu (tw0_3, w12_15);\n }\n \n+static __inline uint32x4_t\n+vsha256hq_u32 (uint32x4_t hash_abcd, uint32x4_t hash_efgh, uint32x4_t wk)\n+{\n+  return __builtin_aarch64_crypto_sha256hv4si_uuuu (hash_abcd, hash_efgh, wk);\n+}\n+\n+static __inline uint32x4_t\n+vsha256h2q_u32 (uint32x4_t hash_efgh, uint32x4_t hash_abcd, uint32x4_t wk)\n+{\n+  return __builtin_aarch64_crypto_sha256h2v4si_uuuu (hash_efgh, hash_abcd, wk);\n+}\n+\n+static __inline uint32x4_t\n+vsha256su0q_u32 (uint32x4_t w0_3, uint32x4_t w4_7)\n+{\n+  return __builtin_aarch64_crypto_sha256su0v4si_uuu (w0_3, w4_7);\n+}\n+\n+static __inline uint32x4_t\n+vsha256su1q_u32 (uint32x4_t tw0_3, uint32x4_t w8_11, uint32x4_t w12_15)\n+{\n+  return __builtin_aarch64_crypto_sha256su1v4si_uuuu (tw0_3, w8_11, w12_15);\n+}\n+\n #endif\n \n /* vshl */"}, {"sha": "88eddddf77cddd6c340288271d2ed982f91d2bea", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "patch": "@@ -277,6 +277,10 @@\n     UNSPEC_SHA1H        ; Used in aarch64-simd.md.\n     UNSPEC_SHA1SU0      ; Used in aarch64-simd.md.\n     UNSPEC_SHA1SU1      ; Used in aarch64-simd.md.\n+    UNSPEC_SHA256H      ; Used in aarch64-simd.md.\n+    UNSPEC_SHA256H2     ; Used in aarch64-simd.md.\n+    UNSPEC_SHA256SU0    ; Used in aarch64-simd.md.\n+    UNSPEC_SHA256SU1    ; Used in aarch64-simd.md.\n ])\n \n ;; -------------------------------------------------------------------\n@@ -863,6 +867,8 @@\n \n (define_int_iterator CRYPTO_SHA1 [UNSPEC_SHA1C UNSPEC_SHA1M UNSPEC_SHA1P])\n \n+(define_int_iterator CRYPTO_SHA256 [UNSPEC_SHA256H UNSPEC_SHA256H2])\n+\n ;; -------------------------------------------------------------------\n ;; Int Iterators Attributes.\n ;; -------------------------------------------------------------------\n@@ -985,3 +991,5 @@\n \n (define_int_attr sha1_op [(UNSPEC_SHA1C \"c\") (UNSPEC_SHA1P \"p\")\n \t\t\t  (UNSPEC_SHA1M \"m\")])\n+\n+(define_int_attr sha256_op [(UNSPEC_SHA256H \"\") (UNSPEC_SHA256H2 \"2\")])"}, {"sha": "2ee577e4a250c7621ff366acbc6f2e411b0cfc1e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "patch": "@@ -1,3 +1,7 @@\n+2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* gcc.target/aarch64/sha256_1.c: New.\n+\n 2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* gcc.target/aarch64/sha1_1.c: New."}, {"sha": "569817eb083694f6ab2a523cf2c4fd2327b01af1", "filename": "gcc/testsuite/gcc.target/aarch64/sha256_1.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsha256_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsha256_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsha256_1.c?ref=b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "patch": "@@ -0,0 +1,40 @@\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8-a+crypto\" } */\n+\n+#include \"arm_neon.h\"\n+\n+uint32x4_t\n+test_vsha256hq_u32 (uint32x4_t hash_abcd, uint32x4_t hash_efgh, uint32x4_t wk)\n+{\n+  return vsha256hq_u32 (hash_abcd, hash_efgh, wk);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha256h\\\\tq\" 1 } } */\n+\n+uint32x4_t\n+test_vsha256h2q_u32 (uint32x4_t hash_efgh, uint32x4_t hash_abcd, uint32x4_t wk)\n+{\n+  return vsha256h2q_u32 (hash_efgh, hash_abcd, wk);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha256h2\\\\tq\" 1 } } */\n+\n+uint32x4_t\n+test_vsha256su0q_u32 (uint32x4_t w0_3, uint32x4_t w4_7)\n+{\n+  return vsha256su0q_u32 (w0_3, w4_7);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha256su0\\\\tv\" 1 } } */\n+\n+uint32x4_t\n+test_vsha256su1q_u32 (uint32x4_t tw0_3, uint32x4_t w8_11, uint32x4_t w12_15)\n+{\n+  return vsha256su1q_u32 (tw0_3, w8_11, w12_15);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha256su1\\\\tv\" 1 } } */\n+\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}