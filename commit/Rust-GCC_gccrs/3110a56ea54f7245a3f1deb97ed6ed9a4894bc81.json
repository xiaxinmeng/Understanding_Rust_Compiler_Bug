{"sha": "3110a56ea54f7245a3f1deb97ed6ed9a4894bc81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzExMGE1NmVhNTRmNzI0NWEzZjFkZWI5N2VkNmVkOWE0ODk0YmM4MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-07T01:43:38Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-07T01:43:38Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1490", "tree": {"sha": "2cb69fd8802d25dceeb65d82f44d5f4f8a0f6bad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cb69fd8802d25dceeb65d82f44d5f4f8a0f6bad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81/comments", "author": null, "committer": null, "parents": [{"sha": "0c20aabf3b16172469d9edefac055ca01a173292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c20aabf3b16172469d9edefac055ca01a173292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c20aabf3b16172469d9edefac055ca01a173292"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "27d1591a5415fd32a2ffc2679e505092f3458b99", "filename": "gcc/print-tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=3110a56ea54f7245a3f1deb97ed6ed9a4894bc81", "patch": "@@ -287,6 +287,8 @@ print_node (file, prefix, node, indent)\n     fputs (\" asm_written\", file);\n   if (TREE_USED (node))\n     fputs (\" used\", file);\n+  if (TREE_RAISES (node))\n+    fputs (\" raises\", file);\n   if (TREE_PERMANENT (node))\n     fputs (\" permanent\", file);\n   if (TREE_PUBLIC (node))\n@@ -331,6 +333,8 @@ print_node (file, prefix, node, indent)\n \tfputs (\" from_inline\", file);\n       if (DECL_IGNORED_P (node))\n \tfputs (\" ignored\", file);\n+      if (DECL_IN_SYSTEM_HEADER (node))\n+\tfputs (\" in_system_header\", file);\n       if (DECL_LANG_FLAG_0 (node))\n \tfputs (\" decl_0\", file);\n       if (DECL_LANG_FLAG_1 (node))"}, {"sha": "93ebeac17f7a2b88e8a4d8cdeff675f209482693", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=3110a56ea54f7245a3f1deb97ed6ed9a4894bc81", "patch": "@@ -856,6 +856,8 @@ make_node (code)\n \n     case 'd':\n       if (code != FUNCTION_DECL)\n+      DECL_IN_SYSTEM_HEADER (t) =\n+\tin_system_header && (obstack == &permanent_obstack);\n \tDECL_ALIGN (t) = 1;\n       DECL_SOURCE_LINE (t) = lineno;\n       DECL_SOURCE_FILE (t) = (input_filename) ? input_filename : \"<built-in>\";"}, {"sha": "e632cdca8417cdad004362002a1c0735ca31bf02", "filename": "gcc/tree.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3110a56ea54f7245a3f1deb97ed6ed9a4894bc81/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=3110a56ea54f7245a3f1deb97ed6ed9a4894bc81", "patch": "@@ -733,6 +733,11 @@ struct tree_type\n    for symbolic debug purposes.  */\n #define DECL_IGNORED_P(NODE) ((NODE)->decl.ignored_flag)\n \n+/* Nonzero if a _DECL means that no warnings should be generated just\n+   because this decl is unused.  */\n+#define DECL_IN_SYSTEM_HEADER(NODE) ((NODE)->decl.in_system_header_flag)\n+\n+/* Language-specific decl information.  */\n #define DECL_LANG_SPECIFIC(NODE) ((NODE)->decl.lang_specific)\n \n /* In a VAR_DECL or FUNCTION_DECL,\n@@ -810,6 +815,9 @@ struct tree_decl\n   unsigned from_inline_flag : 1;\n   unsigned ignored_flag : 1;\n \n+  unsigned in_system_header_flag : 1;\n+  /* room for seven more */\n+\n   unsigned lang_flag_0 : 1;\n   unsigned lang_flag_1 : 1;\n   unsigned lang_flag_2 : 1;"}]}