{"sha": "14548a194ac5ad6dc5a363eab16d37991ec24f0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ1NDhhMTk0YWM1YWQ2ZGM1YTM2M2VhYjE2ZDM3OTkxZWMyNGYwZQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-08-08T22:18:19Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-08-08T22:18:19Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r12603", "tree": {"sha": "82f567583dc8106e5bed2a1e844e3483c57c0e36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82f567583dc8106e5bed2a1e844e3483c57c0e36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14548a194ac5ad6dc5a363eab16d37991ec24f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14548a194ac5ad6dc5a363eab16d37991ec24f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14548a194ac5ad6dc5a363eab16d37991ec24f0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14548a194ac5ad6dc5a363eab16d37991ec24f0e/comments", "author": null, "committer": null, "parents": [{"sha": "6467930b062a0adc1562ad54dfa0075ec29eda97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6467930b062a0adc1562ad54dfa0075ec29eda97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6467930b062a0adc1562ad54dfa0075ec29eda97"}], "stats": {"total": 209, "additions": 208, "deletions": 1}, "files": [{"sha": "0dcd56593d6f9808991a91c27a9a009f65a5a232", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 208, "deletions": 1, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14548a194ac5ad6dc5a363eab16d37991ec24f0e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14548a194ac5ad6dc5a363eab16d37991ec24f0e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=14548a194ac5ad6dc5a363eab16d37991ec24f0e", "patch": "@@ -1,3 +1,205 @@\n+Thu Aug  1 11:53:51 1996  Bob Manson  <manson@charmed.cygnus.com>\n+\n+\t* error.c (dump_decl): Don't explode (or explode more gracefully\n+ \tas appropriate) if the object being dumped has a null type.\n+\t(dump_expr): Ditto.\n+\n+\t* search.c (build_mi_matrix): Ensure that mi_size is large enough,\n+ \tby counting the number of nodes that we'll need before allocating\n+ \tthe array.\n+\t(lookup_fnfields): Fix comment.\n+\t(breadth_first_search): Fix comment.\n+\n+Wed Jul 31 09:57:05 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* pt.c (instantiate_class_template): Propagate TYPE_PACKED and\n+ \tTYPE_ALIGN.\n+\t* class.c (finish_struct): Call cplus_decl_attributes here.\n+\t(finish_struct_1): Not here.\n+\t* cp-tree.h: Adjust.\n+\n+\t* pt.c (type_unification): New parameter STRICT.\n+\t(unify): If STRICT, don't allow cv addition or base deduction.\n+\t* call.c, class.c, cvt.c, cp-tree.h: Adjust.\n+\n+Tue Jul 30 13:06:13 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* search.c (get_template_base{_recursive}): New fns.\n+\t* pt.c (more_specialized): New fn.\n+\t(do_function_instantiation): Use it.\n+\t(unify): Handle base deduction.\n+\t* cvt.c (joust): Use more_specialized.\n+\tDon't arbitrarily choose between non-builtin candidates.\n+\t(build_over_call): Call require_complete_type.\n+\n+\t* decl.c (start_function): Statics are static even in a #pragma\n+ \tinterface file.\n+\n+\t* decl2.c (import_export_vtable): Disable vtable heuristic on\n+ \tsystems with ASM_OUTPUT_EXTERNAL.\n+\n+\t* cvt.c (compare_ics): Fix comparison of PMEM_CONV and BASE_CONV.\n+\t(standard_conversion): No std conv to enum type.\n+\n+\t* cvt.c (standard_conversion): Fix order of args to DERIVED_FROM_P\n+\tfor ptm's.\n+\n+\t* cvt.c (reference_binding): Bind directly to a base subobject of\n+ \ta class rvalue.\n+\n+\t* cvt.c (build_new_op): Enforce access control.\n+\n+Tue Jul 30 09:22:53 1996  Bob Manson  <manson@charmed.cygnus.com>\n+\n+\t* typeck2.c (process_init_constructor): When scanning the\n+\tunion for a named field, skip things that aren't FIELD_DECLs.\n+\n+\t* method.c (synthesize_method): Don't scan fndecl's rtl if\n+\twe're at the end of the file; just assume the function can't\n+\tbe inlined.\n+\n+Mon Jul 29 15:48:30 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cvt.c (build_builtin_candidate): Stick a dummy conversion in if\n+ \tit failed.\n+\n+\t* cvt.c (build_user_type_conversion_1): Handle overloaded\n+ \tconversion ops.\n+\n+\t* cvt.c (add_builtin_candidates): Don't consider type conversion\n+ \toperators for the first parameter of operator=.\n+\n+Mon Jul 29 15:33:55 1996  Bob Manson  <manson@charmed.cygnus.com>\n+\n+\t* typeck.c (complete_type): Only call layout_type if we're not\n+ \texpanding a template.\n+\n+Mon Jul 29 14:40:38 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cvt.c (compare_ics): Oops.\n+\n+\t* cvt.c (op_error): Oops.\n+\n+\t* cp-tree.def: Add RVALUE_CONV, rename EXACT_CONV to IDENTITY_CONV.\n+\t* cvt.c: Add IDENTITY_RANK before others.  Use real_lvalue_p.\n+\t(build_conv): Use them.\n+\t(implicit_conversion): Use them.\n+\t(convert_like): Handle them.\n+\t(build_new_op): Handle builtin COND_EXPR again.\n+\t(add_builtin_candidates): Strip cv-quals.  Fix oops.  Include enums\n+\tin lists of types for COND_EXPR.\n+\t(add_builtin_candidate): Add enum candidates for COND_EXPR.\n+\n+Mon Jul 29 12:05:40 1996  Bob Manson  <manson@charmed.cygnus.com>\n+\n+\t* typeck.c (build_modify_expr): Always attempt to build a call to\n+ \tthe assignment operator, even if we're using a default one.\n+\t(convert_for_initialization): Call complete_type.\n+\n+Mon Jul 29 11:25:08 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cvt.c (reference_binding): A REF_BIND gets the reference type.\n+\t(implicit_conversion): Likewise.\n+\t(convert_like): Likewise.\n+\t(compare_ics): Likewise.\n+\t(compare_qual): Likewise.\n+\t(print_z_candidates): Handle no candidates.\n+\t(build_new_op): Don't handle builtin COND_EXPR for now.\n+\n+Sat Jul 27 11:27:47 1996  Stan Shebs  <shebs@andros.cygnus.com>\n+\n+\t* cvt.c (build_builtin_candidate): Init local var in an ANSI way.\n+\n+Fri Jul 26 01:07:22 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cvt.c (joust): If the candidates are the same, arbitrarily pick one.\n+\n+\t* cvt.c (build_builtin_candidate): Oops.\n+\t(build_new_op): Oops.\n+\n+\t* method.c (build_opfncall): Pass COND_EXPR on.\n+\t* cvt.c (build_builtin_candidate): Reorganize, support COND_EXPR.\n+\t(add_builtin_candidate{,s}): Likewise.\n+\t(add_builtin_candidates): Likewise.\n+\t(print_z_candidates, op_error, build_new_op): Likewise.\n+\t(type_decays_to): New fn.\n+\t* lex.c (init_lex): Just say ?: for COND_EXPR.\n+\n+Thu Jul 25 09:33:33 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* typeck.c (complete_type): Call layout_type rather than building\n+ \ta new array type.\n+\n+\t* cvt.c (add_builtin_candidate): Pointer arithmetic candidates\n+ \tonly use ptrdiff_t.\n+\n+Wed Jul 24 12:45:08 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cvt.c: Always compile the new overloading code (but don't use it).\n+\t(implicit_conversion): Add a BASE_CONV when converting to\n+ \tthe same class type.\n+\t(convert_like): Handle BASE_CONV.\n+\n+Tue Jul 23 12:46:30 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cvt.c (build_new_op): Support {MAX,MIN}_EXPR.\n+\t(add_builtin_candidate): Likewise.\n+\n+\tNEW_OVER changes:\n+\t* typeck.c (build_x_function_call): Try an operator function\n+ \twhenever we call an object of class type.\n+\t* method.c (build_opfncall): Pass CALL_EXPRs through.\n+\t* cvt.c (implicit_conversion): Do const-ref case first.\n+\t(add_conv_candidate, build_object_call, op_error): New fns.\n+\t(ptr_complete_ob, TYPE_PTROB_P): void is not an object type.\n+\t({add,build}_builtin_candidate{,s}, print_z_candidates): Display \n+\tbuiltin candidates.\n+\t(build_new_op): Handle CALL_EXPR.  Don't try to decay void.\n+\tFall back on preincrement handling.  Use op_error.  \n+\tHandle warn_synth.\n+\t(convert_like): Pass INDIRECT_BIND.  Don't try to do anything with \n+\tan error_mark_node.\n+\t(build_over_call): Handle PROMOTE_PROTOTYPES and ellipsis promotions\n+\tproperly.\n+\n+Mon Jul 22 16:21:55 1996  Bob Manson  <manson@charmed.cygnus.com>\n+\n+\t* pt.c (tsubst_expr): Handle CONTINUE_STMT.\n+\n+Mon Jul 22 15:38:58 1996  Mike Stump  <mrs@cygnus.com>\n+\n+\t* typeck.c (build_component_ref_1): Use build_component_ref\n+\tinstead of open coding it here.\n+\n+Mon Jul 22 12:18:54 1996  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* g++.c (main): Don't link with -lg++.\n+\n+\tNEW_OVER changes:\n+\t* cvt.c (convert_to_reference): Don't use convert_from_refeence on\n+ \tresult of build_type_conversion.\n+\t(cp_convert): Only call build_method_call for ctors if\n+\tbuild_type_conversion failed.\n+\t(ptr_complete_ob): New function.\n+\t(TYPE_PTR{,OB,MEM}_P): New macros.\n+\t({add,build}_builtin_candidate{,s}): New functions.\n+\t(print_z_candidates): Handle builtins.\n+\t(build_user_type_conversion_1): Don't use conversion fns for \n+\tconverting to a base type.\n+\t(build_user_type_conversion_1): Set ICS_USER_FLAG on AMBIG_CONVs.\n+\t(build_user_type_conversion): Use convert_from_reference.\n+\t(build_new_op): New function.\n+\t(build_over_call): Fix handling of methods.\n+\t(compare_ics): Handle AMBIG_CONV properly.\n+\t* typeck2.c: Increment abort count.\n+\t* method.c (build_opfncall): Forward most requests to build_new_op.\n+\t* cp-tree.h (IS_OVERLOAD_TYPE): Tweak.\n+\n+Fri Jul 19 17:59:29 1996  Brendan Kehoe  <brendan@lisa.cygnus.com>\n+\n+\t* error.c (dump_expr, case CONSTRUCTOR, case CAST_EXPR): Take out\n+\tinvalid second argument to dump_expr_list.\n+\n Fri Jul 19 14:04:05 1996  Mike Stump  <mrs@cygnus.com>\n \n \t* decl.c (lookup_name_real): Make sure we do obj->X::i correctly.\n@@ -321,6 +523,11 @@ Mon Jun  3 15:30:52 1996  Jason Merrill  <jason@yorick.cygnus.com>\n \t* method.c (emit_thunk): Pretend this is a FUNCTION_DECL for the\n  \tbackend's benefit.\n \n+Mon Jun 10 18:58:19 1996  Mike Stump  <mrs@cygnus.com>\n+\n+\t* except.c (expand_start_catch_block): Add a dummy region, if we\n+\tget an error, so that we can avoid core dumping later.\n+\n Fri May 31 14:56:13 1996  Mike Stump  <mrs@cygnus.com>\n \n \t* cp-tree.h (OFFSET_REF): Remove.\n@@ -6775,7 +6982,7 @@ Thu Nov  3 00:10:46 1994  Jason Merrill  (jason@phydeaux.cygnus.com)\n \n Wed Nov  2 15:08:24 1994  Kung Hsu  (kung@mexican.cygnus.com)\n \n-\t* decl.c (finish_function): emit types used in method parameters\n+\t* decl.c (finish_function): Emit types used in method parameters\n \tinto symbol table.\n \n Wed Nov  2 15:05:47 1994  Jason Merrill  (jason@phydeaux.cygnus.com)"}]}