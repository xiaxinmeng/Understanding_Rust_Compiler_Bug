{"sha": "3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I5YmM1MTFlZTQ4YzdjMmU4NjhiYWFhNDhmMDJlN2U3ZTExNWNlNw==", "commit": {"author": {"name": "Ilya Verbin", "email": "ilya.verbin@intel.com", "date": "2016-06-21T14:38:02Z"}, "committer": {"name": "Ilya Verbin", "email": "iverbin@gcc.gnu.org", "date": "2016-06-21T14:38:02Z"}, "message": "[AVX-512ER] vrsqrt28ps auto generation\n\ngcc/\n\t* config/i386/i386.c (ix86_emit_swsqrtsf): Emit vrsqrt28ps.\n\t* config/i386/sse.md (define_expand \"rsqrtv16sf2\"): New.\ngcc/testsuite/\n\t* gcc.target/i386/avx512er-vrsqrt28ps-3.c: New test.\n\t* gcc.target/i386/avx512er-vrsqrt28ps-4.c: New test.\n\t* gcc.target/i386/avx512er-vrsqrt28ps-5.c: New test.\n\t* gcc.target/i386/avx512er-vrsqrt28ps-6.c: New test.\n\nFrom-SVN: r237649", "tree": {"sha": "472112598083fd9265e7e97a3fe19079b8d23fcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/472112598083fd9265e7e97a3fe19079b8d23fcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/comments", "author": null, "committer": null, "parents": [{"sha": "21db1c786740b7de9e375f0dd54f78eaa4aa2339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21db1c786740b7de9e375f0dd54f78eaa4aa2339", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21db1c786740b7de9e375f0dd54f78eaa4aa2339"}], "stats": {"total": 149, "additions": 149, "deletions": 0}, "files": [{"sha": "a1719d0d6cdaac8b97c131e09810064bdfd84ffc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "patch": "@@ -1,3 +1,8 @@\n+2016-06-21  Ilya Verbin  <ilya.verbin@intel.com>\n+\n+\t* config/i386/i386.c (ix86_emit_swsqrtsf): Emit vrsqrt28ps.\n+\t* config/i386/sse.md (define_expand \"rsqrtv16sf2\"): New.\n+\n 2016-06-21  Ilya Verbin  <ilya.verbin@intel.com>\n \n \t* config/i386/i386.c (ix86_emit_swdivsf): Emit vrcp28ps."}, {"sha": "9d3610647f036245efa43d777a37a37dd1150528", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "patch": "@@ -48774,6 +48774,24 @@ void ix86_emit_swsqrtsf (rtx res, rtx a, machine_mode mode, bool recip)\n   e2 = gen_reg_rtx (mode);\n   e3 = gen_reg_rtx (mode);\n \n+  if (TARGET_AVX512ER && mode == V16SFmode)\n+    {\n+      if (recip)\n+\t/* res = rsqrt28(a) estimate */\n+\temit_insn (gen_rtx_SET (res, gen_rtx_UNSPEC (mode, gen_rtvec (1, a),\n+\t\t\t\t\t\t     UNSPEC_RSQRT28)));\n+      else\n+\t{\n+\t  /* x0 = rsqrt28(a) estimate */\n+\t  emit_insn (gen_rtx_SET (x0, gen_rtx_UNSPEC (mode, gen_rtvec (1, a),\n+\t\t\t\t\t\t      UNSPEC_RSQRT28)));\n+\t  /* res = rcp28(x0) estimate */\n+\t  emit_insn (gen_rtx_SET (res, gen_rtx_UNSPEC (mode, gen_rtvec (1, x0),\n+\t\t\t\t\t\t       UNSPEC_RCP28)));\n+\t}\n+      return;\n+    }\n+\n   real_from_integer (&r, VOIDmode, -3, SIGNED);\n   mthree = const_double_from_real_value (r, SFmode);\n "}, {"sha": "c1ea04ffca8aa04ec210d926d25b8d1d2c0f96ae", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "patch": "@@ -1559,6 +1559,17 @@\n   DONE;\n })\n \n+(define_expand \"rsqrtv16sf2\"\n+  [(set (match_operand:V16SF 0 \"register_operand\")\n+\t(unspec:V16SF\n+\t  [(match_operand:V16SF 1 \"vector_operand\")]\n+\t  UNSPEC_RSQRT28))]\n+  \"TARGET_SSE_MATH && TARGET_AVX512ER\"\n+{\n+  ix86_emit_swsqrtsf (operands[0], operands[1], V16SFmode, true);\n+  DONE;\n+})\n+\n (define_insn \"<sse>_rsqrt<mode>2\"\n   [(set (match_operand:VF1_128_256 0 \"register_operand\" \"=x\")\n \t(unspec:VF1_128_256"}, {"sha": "461665e6833a90dedab41c4ba45374417e0a3180", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "patch": "@@ -1,3 +1,10 @@\n+2016-06-21  Ilya Verbin  <ilya.verbin@intel.com>\n+\n+\t* gcc.target/i386/avx512er-vrsqrt28ps-3.c: New test.\n+\t* gcc.target/i386/avx512er-vrsqrt28ps-4.c: New test.\n+\t* gcc.target/i386/avx512er-vrsqrt28ps-5.c: New test.\n+\t* gcc.target/i386/avx512er-vrsqrt28ps-6.c: New test.\n+\n 2016-06-21  Ilya Verbin  <ilya.verbin@intel.com>\n \n \t* gcc.target/i386/avx512er-vrcp28ps-3.c: New test."}, {"sha": "1ba8172d6e30a0c5e722aa03e765bb7f05019d48", "filename": "gcc/testsuite/gcc.target/i386/avx512er-vrsqrt28ps-3.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-3.c?ref=3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx512er } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -mavx512er\" } */\n+\n+#include <math.h>\n+#include \"avx512er-check.h\"\n+\n+#define MAX 1000\n+#define EPS 0.00001\n+\n+__attribute__ ((noinline, optimize (1)))\n+void static\n+compute_rsqrt_ref (float *a, float *r)\n+{\n+  for (int i = 0; i < MAX; i++)\n+    r[i] = 1.0 / sqrtf (a[i]);\n+}\n+\n+__attribute__ ((noinline))\n+void static\n+compute_rsqrt_exp (float *a, float *r)\n+{\n+  for (int i = 0; i < MAX; i++)\n+    r[i] = 1.0 / sqrtf (a[i]);\n+}\n+\n+void static\n+avx512er_test (void)\n+{\n+  float in[MAX];\n+  float ref[MAX];\n+  float exp[MAX];\n+\n+  for (int i = 0; i < MAX; i++)\n+    in[i] = 8765.987 - 8.6756 * i;\n+\n+  compute_rsqrt_ref (in, ref);\n+  compute_rsqrt_exp (in, exp);\n+\n+  for (int i = 0; i < MAX; i++)\n+    {\n+      float rel_err = (ref[i] - exp[i]) / ref[i];\n+      rel_err = rel_err > 0.0 ? rel_err : -rel_err;\n+      if (rel_err > EPS)\n+\tabort ();\n+    }\n+}"}, {"sha": "2f5f73fd781de970d69097866f6ff97798315584", "filename": "gcc/testsuite/gcc.target/i386/avx512er-vrsqrt28ps-4.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-4.c?ref=3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -mavx512er\" } */\n+\n+#include \"avx512er-vrsqrt28ps-3.c\"\n+\n+/* { dg-final { scan-assembler-times \"vrsqrt28ps\\[^\\n\\r\\]*zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vrcp28ps\\[^\\n\\r\\]*zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" } } */"}, {"sha": "e067a81e5620b7203ba4ed0732f57294f573768f", "filename": "gcc/testsuite/gcc.target/i386/avx512er-vrsqrt28ps-5.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-5.c?ref=3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx512er } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -mavx512er\" } */\n+\n+#include <math.h>\n+#include \"avx512er-check.h\"\n+\n+#define MAX 1000\n+#define EPS 0.00001\n+\n+__attribute__ ((noinline, optimize (1)))\n+void static\n+compute_sqrt_ref (float *a, float *r)\n+{\n+  for (int i = 0; i < MAX; i++)\n+    r[i] = sqrtf (a[i]);\n+}\n+\n+__attribute__ ((noinline))\n+void static\n+compute_sqrt_exp (float *a, float *r)\n+{\n+  for (int i = 0; i < MAX; i++)\n+    r[i] = sqrtf (a[i]);\n+}\n+\n+void static\n+avx512er_test (void)\n+{\n+  float in[MAX];\n+  float ref[MAX];\n+  float exp[MAX];\n+\n+  for (int i = 0; i < MAX; i++)\n+    in[i] = 8765.987 - 8.6756 * i;\n+\n+  compute_sqrt_ref (in, ref);\n+  compute_sqrt_exp (in, exp);\n+\n+  for (int i = 0; i < MAX; i++)\n+    {\n+      float rel_err = (ref[i] - exp[i]) / ref[i];\n+      rel_err = rel_err > 0.0 ? rel_err : -rel_err;\n+      if (rel_err > EPS)\n+\tabort ();\n+    }\n+}"}, {"sha": "77c5cba1cef75fcb394523883e6ed410af4fe1ee", "filename": "gcc/testsuite/gcc.target/i386/avx512er-vrsqrt28ps-6.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-vrsqrt28ps-6.c?ref=3b9bc511ee48c7c2e868baaa48f02e7e7e115ce7", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -mavx512er\" } */\n+\n+#include \"avx512er-vrsqrt28ps-5.c\"\n+\n+/* { dg-final { scan-assembler-times \"vrsqrt28ps\\[^\\n\\r\\]*zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vrcp28ps\\[^\\n\\r\\]*zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}]}