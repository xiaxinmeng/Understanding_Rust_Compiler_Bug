{"sha": "6bd8d119227ff9a4740739e91898258bcd854b9b", "node_id": "C_kwDOANBUbNoAKDZiZDhkMTE5MjI3ZmY5YTQ3NDA3MzllOTE4OTgyNThiY2Q4NTRiOWI", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-24T21:13:36Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-25T15:01:49Z"}, "message": "libstdc++: Add always_inline to trivial iterator operations\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/stl_iterator_base_funcs.h (__distance):\n\tAdd always_inline attribute to overload for random\n\taccess iterators.\n\t(advance, distance, next, prev): Add always_inline attribute to\n\tinline functions that just forward to another function.", "tree": {"sha": "f1e8f17267f379a57c5f6f3b4da3bc1be59122af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1e8f17267f379a57c5f6f3b4da3bc1be59122af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bd8d119227ff9a4740739e91898258bcd854b9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd8d119227ff9a4740739e91898258bcd854b9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bd8d119227ff9a4740739e91898258bcd854b9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd8d119227ff9a4740739e91898258bcd854b9b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71f3036b8a83da7fb559923bc80687ea1dabe14a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f3036b8a83da7fb559923bc80687ea1dabe14a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71f3036b8a83da7fb559923bc80687ea1dabe14a"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "25dddb3e7e8045976397933b327d5b2f8e0d3fdc", "filename": "libstdc++-v3/include/bits/stl_iterator_base_funcs.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd8d119227ff9a4740739e91898258bcd854b9b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd8d119227ff9a4740739e91898258bcd854b9b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h?ref=6bd8d119227ff9a4740739e91898258bcd854b9b", "patch": "@@ -94,6 +94,7 @@ _GLIBCXX_END_NAMESPACE_CONTAINER\n     }\n \n   template<typename _RandomAccessIterator>\n+    __attribute__((__always_inline__))\n     inline _GLIBCXX14_CONSTEXPR\n     typename iterator_traits<_RandomAccessIterator>::difference_type\n     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,\n@@ -141,7 +142,7 @@ _GLIBCXX_END_NAMESPACE_CONTAINER\n    *  and are constant time.  For other %iterator classes they are linear time.\n   */\n   template<typename _InputIterator>\n-    _GLIBCXX_NODISCARD\n+    _GLIBCXX_NODISCARD __attribute__((__always_inline__))\n     inline _GLIBCXX17_CONSTEXPR\n     typename iterator_traits<_InputIterator>::difference_type\n     distance(_InputIterator __first, _InputIterator __last)\n@@ -214,6 +215,7 @@ _GLIBCXX_END_NAMESPACE_CONTAINER\n    *  and are constant time.  For other %iterator classes they are linear time.\n   */\n   template<typename _InputIterator, typename _Distance>\n+    __attribute__((__always_inline__))\n     inline _GLIBCXX17_CONSTEXPR void\n     advance(_InputIterator& __i, _Distance __n)\n     {\n@@ -225,7 +227,7 @@ _GLIBCXX_END_NAMESPACE_CONTAINER\n #if __cplusplus >= 201103L\n \n   template<typename _InputIterator>\n-    _GLIBCXX_NODISCARD\n+    _GLIBCXX_NODISCARD [[__gnu__::__always_inline__]]\n     inline _GLIBCXX17_CONSTEXPR _InputIterator\n     next(_InputIterator __x, typename\n \t iterator_traits<_InputIterator>::difference_type __n = 1)\n@@ -237,7 +239,7 @@ _GLIBCXX_END_NAMESPACE_CONTAINER\n     }\n \n   template<typename _BidirectionalIterator>\n-    _GLIBCXX_NODISCARD\n+    _GLIBCXX_NODISCARD [[__gnu__::__always_inline__]]\n     inline _GLIBCXX17_CONSTEXPR _BidirectionalIterator\n     prev(_BidirectionalIterator __x, typename\n \t iterator_traits<_BidirectionalIterator>::difference_type __n = 1) "}]}