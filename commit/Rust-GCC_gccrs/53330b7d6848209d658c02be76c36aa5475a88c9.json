{"sha": "53330b7d6848209d658c02be76c36aa5475a88c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMzMzBiN2Q2ODQ4MjA5ZDY1OGMwMmJlNzZjMzZhYTU0NzVhODhjOQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-06-23T16:46:04Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-06-23T16:56:41Z"}, "message": "tree-inline: Fix TREE_READONLY of parameter replacements\n\ntree-inline leaves behind VAR_DECLs which are TREE_READONLY (because\nthey are copies of const parameters) but are written to because they\nneed to be initialized.  This patch resets the flag unconditionally so\nthat this does not happen.\n\nThere are other sources of variables which are incorrectly marked as\nTREE_READOLY, but with this patch and a verifier catching them I can\nat least compile the Ada run-time library.\n\ngcc/ChangeLog:\n\n2021-06-22  Richard Biener  <rguenther@suse.de>\n\t    Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-inline.c (setup_one_parameter): Set TREE_READONLY of the\n\tparam replacement unconditionally.  Adjust comment.", "tree": {"sha": "f96b56fd0d4dc325d56ec800aab5df549f184314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f96b56fd0d4dc325d56ec800aab5df549f184314"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53330b7d6848209d658c02be76c36aa5475a88c9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE5elVTFt/d09Vsoczv2PBvD+kNUAFAmDTZ8kACgkQv2PBvD+k\nNUC20hAAvXEdTboPTLw1BiMM8A75zunJoNZsFOgANpG+PQqao+jUNCaFX/63n90W\nRGggMFq7UFdGfbnyJo7cAOIN5HrANACLLKCfMOKWhvNw8Su6FuATYU72ubPbHc23\nYEukdjVVzxPX+c+pmnbZVz7tLjbX6imqgZInt4UWVUPCe+SRBvbFe/4tP2nuL0Yd\nMXkJYUnNgc0toui/5iWuCn3QtLw6cfDq72HVIu3p5DV8vlFMA8pUdL11hC7r9ml3\nM6AScUcJE/S4loKJCvh4dNC9HxX09F/yZtsXkE+kguMclDSPvOGBKWT+6IgoTsFm\nCU4x0OR8dBfQ2ewQdHO1XiNLrX83uZs57P2O3NlbR5kq7n/4iI0Gr9W9g6XQQ4wN\ncEO10Q6axJCqGoXPgTtWbslUPxUYrfpgLpe8KFuvp4MdemsP3kfkfRlcGVxTQzxl\nbaYxo9ynRg42pm/4E+I8PCPmcmytaTZjh7x6n0otJ36KEOA1Tk5vapanQydDsoak\nnxLf+TrfCsW6vVgnxrlGy39WJwaEuCdg0rHQphR0DvvHGPpO/PMcUzOe1AKIaStv\n6/yHermUnn2xGD9guFmeM5l6LyPvO41trozt81PWl0LoUGbA9EonkFcNzHqdqMiA\nvK8uP2tGJRQlo7Ixh7dQSWB2u34oZZuSvXR8mq6Fua02j1/c644=\n=KrLr\n-----END PGP SIGNATURE-----", "payload": "tree f96b56fd0d4dc325d56ec800aab5df549f184314\nparent 4c85ff754927c518ed97da5e0221eeea742c9aa7\nauthor Martin Jambor <mjambor@suse.cz> 1624466764 +0200\ncommitter Martin Jambor <mjambor@suse.cz> 1624467401 +0200\n\ntree-inline: Fix TREE_READONLY of parameter replacements\n\ntree-inline leaves behind VAR_DECLs which are TREE_READONLY (because\nthey are copies of const parameters) but are written to because they\nneed to be initialized.  This patch resets the flag unconditionally so\nthat this does not happen.\n\nThere are other sources of variables which are incorrectly marked as\nTREE_READOLY, but with this patch and a verifier catching them I can\nat least compile the Ada run-time library.\n\ngcc/ChangeLog:\n\n2021-06-22  Richard Biener  <rguenther@suse.de>\n\t    Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-inline.c (setup_one_parameter): Set TREE_READONLY of the\n\tparam replacement unconditionally.  Adjust comment.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53330b7d6848209d658c02be76c36aa5475a88c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53330b7d6848209d658c02be76c36aa5475a88c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53330b7d6848209d658c02be76c36aa5475a88c9/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c85ff754927c518ed97da5e0221eeea742c9aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c85ff754927c518ed97da5e0221eeea742c9aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c85ff754927c518ed97da5e0221eeea742c9aa7"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "c5f6ba5fe182226fd98036390a626a0638bdad75", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53330b7d6848209d658c02be76c36aa5475a88c9/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53330b7d6848209d658c02be76c36aa5475a88c9/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=53330b7d6848209d658c02be76c36aa5475a88c9", "patch": "@@ -3491,17 +3491,11 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n      automatically replaced by the VAR_DECL.  */\n   insert_decl_map (id, p, var);\n \n-  /* Even if P was TREE_READONLY, the new VAR should not be.\n-     In the original code, we would have constructed a\n-     temporary, and then the function body would have never\n-     changed the value of P.  However, now, we will be\n-     constructing VAR directly.  The constructor body may\n-     change its value multiple times as it is being\n-     constructed.  Therefore, it must not be TREE_READONLY;\n-     the back-end assumes that TREE_READONLY variable is\n-     assigned to only once.  */\n-  if (TYPE_NEEDS_CONSTRUCTING (TREE_TYPE (p)))\n-    TREE_READONLY (var) = 0;\n+  /* Even if P was TREE_READONLY, the new VAR should not be.  In the original\n+     code, we would have constructed a temporary, and then the function body\n+     would have never changed the value of P.  However, now, we will be\n+     constructing VAR directly.  Therefore, it must not be TREE_READONLY.  */\n+  TREE_READONLY (var) = 0;\n \n   tree rhs = value;\n   if (value"}]}