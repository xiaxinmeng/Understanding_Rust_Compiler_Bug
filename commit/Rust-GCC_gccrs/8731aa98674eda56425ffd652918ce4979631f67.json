{"sha": "8731aa98674eda56425ffd652918ce4979631f67", "node_id": "C_kwDOANBUbNoAKDg3MzFhYTk4Njc0ZWRhNTY0MjVmZmQ2NTI5MThjZTQ5Nzk2MzFmNjc", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-08-18T10:03:51Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-08-18T19:59:46Z"}, "message": "xtensa: Improve indirect sibling call handling\n\nNo longer needs the dedicated hard register (A11) for the address of the\ncall and the split patterns for fixups, due to the introduction of appropriate\nregister class and constraint.\n\n(Note: \"ISC_REGS\" contains a hard register A8 used as a \"static chain\"\n pointer for nested functions, but no problem;  Pointer to nested function\n actually points to \"trampoline\", and trampoline itself doesn't receive\n \"static chain\" pointer to its parent's stack frame from the caller.)\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.h\n\t(enum reg_class, REG_CLASS_NAMES, REG_CLASS_CONTENTS):\n\tAdd new register class \"ISC_REGS\".\n\t* config/xtensa/constraints.md (c): Add new register constraint.\n\t* config/xtensa/xtensa.md (define_constants): Remove \"A11_REG\".\n\t(sibcall_internal, sibcall_value_internal):\n\tChange to use the new register constraint, and remove two split\n\tpatterns for fixups that are no longer needed.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/xtensa/sibcalls.c: Add a new test function to ensure\n\tthat registers for arguments (occupy from A2 to A7) and for indirect\n\tsibcall (should be assigned to A8) neither conflict nor spill out.", "tree": {"sha": "74d4511009454b412ebef7537aaf7bff327b4bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74d4511009454b412ebef7537aaf7bff327b4bbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8731aa98674eda56425ffd652918ce4979631f67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8731aa98674eda56425ffd652918ce4979631f67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8731aa98674eda56425ffd652918ce4979631f67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8731aa98674eda56425ffd652918ce4979631f67/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca170ed9f8a086ca7e1eec841882b6bed9ec1a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca170ed9f8a086ca7e1eec841882b6bed9ec1a3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca170ed9f8a086ca7e1eec841882b6bed9ec1a3a"}], "stats": {"total": 42, "additions": 15, "deletions": 27}, "files": [{"sha": "e4c314b267c77cf3183aeb1164efceabb710bfe6", "filename": "gcc/config/xtensa/constraints.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8731aa98674eda56425ffd652918ce4979631f67/gcc%2Fconfig%2Fxtensa%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8731aa98674eda56425ffd652918ce4979631f67/gcc%2Fconfig%2Fxtensa%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fconstraints.md?ref=8731aa98674eda56425ffd652918ce4979631f67", "patch": "@@ -27,6 +27,11 @@\n  \"Boolean registers @code{b0}-@code{b15}; only available if the Xtensa\n   Boolean Option is configured.\")\n \n+(define_register_constraint \"c\" \"TARGET_WINDOWED_ABI ? NO_REGS : ISC_REGS\"\n+ \"@internal\n+  General-purpose AR registers for indirect sibling calls, @code{a2}-\n+  @code{a8}.\")\n+\n (define_register_constraint \"d\" \"TARGET_DENSITY ? AR_REGS: NO_REGS\"\n  \"@internal\n   All AR registers, including sp, but only if the Xtensa Code Density"}, {"sha": "d51658afa89e1817151d7973c8da5105376e9512", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8731aa98674eda56425ffd652918ce4979631f67/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8731aa98674eda56425ffd652918ce4979631f67/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=8731aa98674eda56425ffd652918ce4979631f67", "patch": "@@ -378,6 +378,7 @@ enum reg_class\n   FP_REGS,\t\t\t/* floating point registers */\n   ACC_REG,\t\t\t/* MAC16 accumulator */\n   SP_REG,\t\t\t/* sp register (aka a1) */\n+  ISC_REGS,\t\t\t/* registers for indirect sibling calls */\n   RL_REGS,\t\t\t/* preferred reload regs (not sp or fp) */\n   GR_REGS,\t\t\t/* integer registers except sp */\n   AR_REGS,\t\t\t/* all integer registers */\n@@ -399,6 +400,7 @@ enum reg_class\n   \"FP_REGS\",\t\t\t\t\t\t\t\t\\\n   \"ACC_REG\",\t\t\t\t\t\t\t\t\\\n   \"SP_REG\",\t\t\t\t\t\t\t\t\\\n+  \"ISC_REGS\",\t\t\t\t\t\t\t\t\\\n   \"RL_REGS\",\t\t\t\t\t\t\t\t\\\n   \"GR_REGS\",\t\t\t\t\t\t\t\t\\\n   \"AR_REGS\",\t\t\t\t\t\t\t\t\\\n@@ -415,6 +417,7 @@ enum reg_class\n   { 0xfff80000, 0x00000007 }, /* floating-point registers */ \\\n   { 0x00000000, 0x00000008 }, /* MAC16 accumulator */ \\\n   { 0x00000002, 0x00000000 }, /* stack pointer register */ \\\n+  { 0x000001fc, 0x00000000 }, /* registers for indirect sibling calls */ \\\n   { 0x0000fffd, 0x00000000 }, /* preferred reload registers */ \\\n   { 0x0000fffd, 0x00000000 }, /* general-purpose registers */ \\\n   { 0x0003ffff, 0x00000000 }, /* integer registers */ \\"}, {"sha": "3ed269249a436c0dc8edf441859324e7c45b17f0", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8731aa98674eda56425ffd652918ce4979631f67/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8731aa98674eda56425ffd652918ce4979631f67/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=8731aa98674eda56425ffd652918ce4979631f67", "patch": "@@ -25,7 +25,6 @@\n   (A7_REG\t\t7)\n   (A8_REG\t\t8)\n   (A9_REG\t\t9)\n-  (A11_REG\t\t11)\n \n   (UNSPEC_NOP\t\t2)\n   (UNSPEC_PLT\t\t3)\n@@ -2279,7 +2278,7 @@\n })\n \n (define_insn \"sibcall_internal\"\n-  [(call (mem:SI (match_operand:SI 0 \"call_insn_operand\" \"nir\"))\n+  [(call (mem:SI (match_operand:SI 0 \"call_insn_operand\" \"nic\"))\n \t (match_operand 1 \"\" \"i\"))]\n   \"!TARGET_WINDOWED_ABI && SIBLING_CALL_P (insn)\"\n {\n@@ -2289,17 +2288,6 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_split\n-  [(call (mem:SI (match_operand:SI 0 \"register_operand\"))\n-\t (match_operand 1 \"\"))]\n-  \"reload_completed\n-   && !TARGET_WINDOWED_ABI && SIBLING_CALL_P (insn)\n-   && ! call_used_or_fixed_reg_p (REGNO (operands[0]))\"\n-  [(set (reg:SI A11_REG)\n-\t(match_dup 0))\n-   (call (mem:SI (reg:SI A11_REG))\n-\t (match_dup 1))])\n-\n (define_expand \"sibcall_value\"\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(call (match_operand 1 \"memory_operand\" \"\")\n@@ -2311,7 +2299,7 @@\n \n (define_insn \"sibcall_value_internal\"\n   [(set (match_operand 0 \"register_operand\" \"=a\")\n-\t(call (mem:SI (match_operand:SI 1 \"call_insn_operand\" \"nir\"))\n+\t(call (mem:SI (match_operand:SI 1 \"call_insn_operand\" \"nic\"))\n \t      (match_operand 2 \"\" \"i\")))]\n   \"!TARGET_WINDOWED_ABI && SIBLING_CALL_P (insn)\"\n {\n@@ -2321,19 +2309,6 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_split\n-  [(set (match_operand 0 \"register_operand\")\n-\t(call (mem:SI (match_operand:SI 1 \"register_operand\"))\n-\t      (match_operand 2 \"\")))]\n-  \"reload_completed\n-   && !TARGET_WINDOWED_ABI && SIBLING_CALL_P (insn)\n-   && ! call_used_or_fixed_reg_p (REGNO (operands[1]))\"\n-  [(set (reg:SI A11_REG)\n-\t(match_dup 1))\n-   (set (match_dup 0)\n-\t(call (mem:SI (reg:SI A11_REG))\n-\t      (match_dup 2)))])\n-\n (define_insn \"entry\"\n   [(set (reg:SI A1_REG)\n \t(unspec_volatile:SI [(match_operand:SI 0 \"const_int_operand\" \"i\")]"}, {"sha": "31bb4a3ad79d02d05851785466cba3fed27de9fb", "filename": "gcc/testsuite/gcc.target/xtensa/sibcalls.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8731aa98674eda56425ffd652918ce4979631f67/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fsibcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8731aa98674eda56425ffd652918ce4979631f67/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fsibcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fsibcalls.c?ref=8731aa98674eda56425ffd652918ce4979631f67", "patch": "@@ -17,4 +17,9 @@ int test_2(int (*a)(void)) {\n     return a();\n }\n \n+_Complex double test_3(_Complex double a, _Complex double (*b)(_Complex double, double)) {\n+    bar(-1);\n+    return b(a, 3.141592653589795);\n+}\n+\n /* { dg-final { scan-assembler-not \"ret\" } } */"}]}