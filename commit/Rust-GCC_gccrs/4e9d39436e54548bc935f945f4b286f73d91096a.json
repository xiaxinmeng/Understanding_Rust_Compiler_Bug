{"sha": "4e9d39436e54548bc935f945f4b286f73d91096a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU5ZDM5NDM2ZTU0NTQ4YmM5MzVmOTQ1ZjRiMjg2ZjczZDkxMDk2YQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-01-22T20:48:17Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-01-22T20:48:17Z"}, "message": "* config/rs6000/aix.h (STACK_BOUNDARY): Define.\n\nFrom-SVN: r110095", "tree": {"sha": "280f92046d77423e3ce20946aa8709bf8087e17c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/280f92046d77423e3ce20946aa8709bf8087e17c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e9d39436e54548bc935f945f4b286f73d91096a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9d39436e54548bc935f945f4b286f73d91096a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e9d39436e54548bc935f945f4b286f73d91096a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9d39436e54548bc935f945f4b286f73d91096a/comments", "author": null, "committer": null, "parents": [{"sha": "a27b516f94c73993c7a2311b05f85b2eebf3ecb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a27b516f94c73993c7a2311b05f85b2eebf3ecb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a27b516f94c73993c7a2311b05f85b2eebf3ecb7"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "c5f72b231006a8c933998955a1a0d007a948d32f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9d39436e54548bc935f945f4b286f73d91096a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9d39436e54548bc935f945f4b286f73d91096a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e9d39436e54548bc935f945f4b286f73d91096a", "patch": "@@ -1,3 +1,7 @@\n+2006-01-22  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/aix.h (STACK_BOUNDARY): Define.\n+\n 2006-01-22  Paul Brook  <paul@codesourcery.com>\n \tPeter Barada  <peter@the-baradas.com>\n \n@@ -1352,7 +1356,7 @@\n \t* basic-block.h: Remove the prototype for\n \tpartition_hot_cold_basic_blocks.\n \n-2006-01-16  Rafael \ufffd\ufffd\u00c1vila de Esp\ufffd\ufffd\u00c1\ufffd\ufffdndola <rafael.espindola@gmail.com>\n+2006-01-16  Rafael \ufffdvila de Esp\u00edndola <rafael.espindola@gmail.com>\n \n \t* cppspec.c (lang_specific_spec_functions): remove\n \t* gcc.c (lookup_spec_function): use static_spec_functions directelly"}, {"sha": "e7e2dbd7420dbb2ce2629194affe5566eadfd23a", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9d39436e54548bc935f945f4b286f73d91096a/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9d39436e54548bc935f945f4b286f73d91096a/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=4e9d39436e54548bc935f945f4b286f73d91096a", "patch": "@@ -33,6 +33,10 @@\n /* AIX allows r13 to be used in 32-bit mode.  */\n #define FIXED_R13 0\n \n+/* 32-bit and 64-bit AIX stack boundary is 128.  */\n+#undef  STACK_BOUNDARY\n+#define STACK_BOUNDARY 128\n+\n /* AIX does not support Altivec.  */\n #undef  TARGET_ALTIVEC\n #define TARGET_ALTIVEC 0\n@@ -164,12 +168,12 @@\n \n /* AIX increases natural record alignment to doubleword if the first\n    field is an FP double while the FP fields remain word aligned.  */\n-#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\t\t\t\\\n-  ((TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\t\t\t\\\n-    || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\t\t\t\\\n-    || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\t\t\t\\\n-   && TARGET_ALIGN_NATURAL == 0\t\t\t\t\t\t\t\\\n-   ? rs6000_special_round_type_align (STRUCT, COMPUTED, SPECIFIED)\t\t\\\n+#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\t\t\\\n+  ((TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\t\t\\\n+    || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\t\t\\\n+    || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\t\t\\\n+   && TARGET_ALIGN_NATURAL == 0\t\t\t\t\t\t\\\n+   ? rs6000_special_round_type_align (STRUCT, COMPUTED, SPECIFIED)\t\\\n    : MAX ((COMPUTED), (SPECIFIED)))\n \n /* The AIX ABI isn't explicit on whether aggregates smaller than a"}]}