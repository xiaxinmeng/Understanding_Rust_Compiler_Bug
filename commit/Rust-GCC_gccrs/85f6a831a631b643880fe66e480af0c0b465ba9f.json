{"sha": "85f6a831a631b643880fe66e480af0c0b465ba9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVmNmE4MzFhNjMxYjY0Mzg4MGZlNjZlNDgwYWYwYzBiNDY1YmE5Zg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-07-08T07:46:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-08T07:46:22Z"}, "message": "sem_ch8.adb, [...]: Minor reformatting.\n\n2013-07-08  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch8.adb, sem_ch8.ads: Minor reformatting.\n\nFrom-SVN: r200755", "tree": {"sha": "6d6a2a6184ed688b0a87365ae4a2948303b33441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d6a2a6184ed688b0a87365ae4a2948303b33441"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85f6a831a631b643880fe66e480af0c0b465ba9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85f6a831a631b643880fe66e480af0c0b465ba9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85f6a831a631b643880fe66e480af0c0b465ba9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85f6a831a631b643880fe66e480af0c0b465ba9f/comments", "author": null, "committer": null, "parents": [{"sha": "e530a2d13b66e9ce876c4a2a0a677e3d5cc8e1ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e530a2d13b66e9ce876c4a2a0a677e3d5cc8e1ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e530a2d13b66e9ce876c4a2a0a677e3d5cc8e1ec"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "0fa4a2e6a3b4bcb6a74c354ac7bb8ebf3e601186", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85f6a831a631b643880fe66e480af0c0b465ba9f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85f6a831a631b643880fe66e480af0c0b465ba9f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=85f6a831a631b643880fe66e480af0c0b465ba9f", "patch": "@@ -1,3 +1,7 @@\n+2013-07-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch8.adb, sem_ch8.ads: Minor reformatting.\n+\n 2013-07-08  Gary Dismukes  <dismukes@adacore.com>\n \n \t* gnat_rm.texi: Minor reformatting and rewording for consistency."}, {"sha": "c0795b7f7688e357d68a89a21b38173eeb7f3b11", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85f6a831a631b643880fe66e480af0c0b465ba9f/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85f6a831a631b643880fe66e480af0c0b465ba9f/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=85f6a831a631b643880fe66e480af0c0b465ba9f", "patch": "@@ -7664,6 +7664,8 @@ package body Sem_Ch8 is\n    begin\n       --  Restore visibility of previous scope stack, if any\n \n+      --  Should use Remove_Elmt, so that elements can be reused ???\n+\n       Elmt := First_Elmt (List);\n       while Present (Elmt) loop\n          Set_Is_Immediately_Visible (Node (Elmt));\n@@ -7690,7 +7692,13 @@ package body Sem_Ch8 is\n \n       procedure Remove_From_Visibility (E : Entity_Id);\n       --  If E is immediately visible then append it to the result and remove\n-      --  it temporarily from visibility\n+      --  it temporarily from visibility.\n+\n+      ----------------------------\n+      -- Remove_From_Visibility --\n+      ----------------------------\n+\n+      --  Need comment on why we do this instead of old approach???\n \n       procedure Remove_From_Visibility (E : Entity_Id) is\n       begin\n@@ -7700,6 +7708,8 @@ package body Sem_Ch8 is\n          end if;\n       end Remove_From_Visibility;\n \n+   --  Start of processing for Save_Scope_Stack\n+\n    begin\n       if SS_Last >= Scope_Stack.First\n         and then Scope_Stack.Table (SS_Last).Entity /= Standard_Standard"}, {"sha": "99d2b1485d46870deac461e753f31e30409a7f96", "filename": "gcc/ada/sem_ch8.ads", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85f6a831a631b643880fe66e480af0c0b465ba9f/gcc%2Fada%2Fsem_ch8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85f6a831a631b643880fe66e480af0c0b465ba9f/gcc%2Fada%2Fsem_ch8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.ads?ref=85f6a831a631b643880fe66e480af0c0b465ba9f", "patch": "@@ -148,18 +148,22 @@ package Sem_Ch8 is\n    --  with-clause on system. N is absent when the function is called to find\n    --  the visibility of implicit operators.\n \n-   function Save_Scope_Stack (Handle_Use : Boolean := True) return Elist_Id;\n+   function Save_Scope_Stack\n+     (Handle_Use : Boolean := True) return Elist_Id;\n    procedure Restore_Scope_Stack\n      (List       : Elist_Id;\n       Handle_Use : Boolean := True);\n    --  These two subprograms are called from Semantics, when a unit U1 is to\n    --  be compiled in the course of the compilation of another unit U2. This\n    --  happens whenever Rtsfind is called. U1, the unit retrieved by Rtsfind,\n    --  must be compiled in its own context, and the current scope stack\n-   --  containing U2 and local scopes must be made unreachable. On return, the\n-   --  contents of the scope stack must be made accessible again. The flag\n-   --  Handle_Use indicates whether local use clauses must be removed or\n-   --  installed. In the case of inlining of instance bodies, the visibility\n+   --  containing U2 and local scopes must be made unreachable. This is\n+   --  achieved using a call to Save_Scope_Stack. On return, the contents\n+   --  of the scope stack must be made accessible again with a call to\n+   --  Restore_Scope_Stack.\n+   --\n+   --  The flag Handle_Use indicates whether local use clauses must be removed\n+   --  or installed. In the case of inlining of instance bodies, the visibility\n    --  handling is done fully in Inline_Instance_Body, and use clauses are\n    --  handled there. Save_Scope_Stack returns the list of entities which have\n    --  been temporarily removed from visibility; that list must be passed to"}]}