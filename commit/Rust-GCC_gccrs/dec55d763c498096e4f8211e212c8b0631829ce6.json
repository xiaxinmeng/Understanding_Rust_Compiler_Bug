{"sha": "dec55d763c498096e4f8211e212c8b0631829ce6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVjNTVkNzYzYzQ5ODA5NmU0ZjgyMTFlMjEyYzhiMDYzMTgyOWNlNg==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-03-31T19:28:19Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-03-31T19:28:19Z"}, "message": "g-table.adb, [...]: Fix comment typos.\n\ngcc/ada/\n\t* g-table.adb, g-tasloc.adb, g-traceb.ads,\n\tg-trasym.adb, g-utf_32.adb, gen-soccon.c, gigi.h, gmem.c,\n\tgnatbind.adb, gnatchop.adb, gnatcmd.adb,\n\tgnatcmd.ads, gnatdll.adb, gnatfind.adb,\n\tgnatlink.adb, gnatmem.adb, gprep.adb,\n\ti-cstrea-vms.adb, i-cstrin.adb, i-pacdec.ads,\n\ti-vxwork.ads, impunit.adb, init.c, initialize.c, inline.adb,\n\tlayout.adb, lib-writ.adb, lib-writ.ads, lib-xref.adb,\n\tlib-xref.ads, lib.adb, link.c, live.ads,\n\tmake.adb, makegpr.adb, makeutl.adb, math_lib.adb,\n\tmdll-utl.adb, mdll.ads, memroot.adb, memroot.ads,\n\tmisc.c, mlib-prj.adb, mlib-tgt-hpux.adb,\n\tmlib-tgt-linux.adb, mlib-tgt-tru64.adb, mlib-tgt.ads,\n\tnamet.adb, namet.h, nlists.adb, nlists.ads,\n\tnlists.h, opt.ads, osint-b.ads, osint-c.adb,\n\tosint-c.ads, osint.adb, osint.ads, output.ads,\n\tpar-ch10.adb, par-ch12.adb, par-ch2.adb, par-ch3.adb,\n\tpar-ch4.adb, par-ch5.adb, par-ch6.adb, par-ch9.adb,\n\tpar-endh.adb, par-labl.adb, par-prag.adb,\n\tpar-sync.adb, par-tchk.adb, par-util.adb,\n\tpar.adb, prep.adb, prep.ads, prepcomp.adb, prj-attr.ads,\n\tprj-dect.adb, prj-env.adb, prj-ext.adb, prj-nmsc.adb,\n\tprj-nmsc.ads, prj-pp.adb, prj-proc.adb,\n\tprj-strt.ads, prj-tree.ads, prj.adb, prj.ads: Fix comment typos.\n\nFrom-SVN: r133770", "tree": {"sha": "fface9c358993512af2d42d8da781b1ceb75942a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fface9c358993512af2d42d8da781b1ceb75942a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dec55d763c498096e4f8211e212c8b0631829ce6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec55d763c498096e4f8211e212c8b0631829ce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dec55d763c498096e4f8211e212c8b0631829ce6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec55d763c498096e4f8211e212c8b0631829ce6/comments", "author": null, "committer": null, "parents": [{"sha": "5a864002b8608352188f6019d28ba15878e05363", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a864002b8608352188f6019d28ba15878e05363", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a864002b8608352188f6019d28ba15878e05363"}], "stats": {"total": 418, "additions": 224, "deletions": 194}, "files": [{"sha": "143601c902ff97625759eaeae9dcbaae0065bd53", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -1,3 +1,30 @@\n+2008-03-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* g-table.adb, g-tasloc.adb, g-traceb.ads,\n+\tg-trasym.adb, g-utf_32.adb, gen-soccon.c, gigi.h, gmem.c,\n+\tgnatbind.adb, gnatchop.adb, gnatcmd.adb,\n+\tgnatcmd.ads, gnatdll.adb, gnatfind.adb,\n+\tgnatlink.adb, gnatmem.adb, gprep.adb,\n+\ti-cstrea-vms.adb, i-cstrin.adb, i-pacdec.ads,\n+\ti-vxwork.ads, impunit.adb, init.c, initialize.c, inline.adb,\n+\tlayout.adb, lib-writ.adb, lib-writ.ads, lib-xref.adb,\n+\tlib-xref.ads, lib.adb, link.c, live.ads,\n+\tmake.adb, makegpr.adb, makeutl.adb, math_lib.adb,\n+\tmdll-utl.adb, mdll.ads, memroot.adb, memroot.ads,\n+\tmisc.c, mlib-prj.adb, mlib-tgt-hpux.adb,\n+\tmlib-tgt-linux.adb, mlib-tgt-tru64.adb, mlib-tgt.ads,\n+\tnamet.adb, namet.h, nlists.adb, nlists.ads,\n+\tnlists.h, opt.ads, osint-b.ads, osint-c.adb,\n+\tosint-c.ads, osint.adb, osint.ads, output.ads,\n+\tpar-ch10.adb, par-ch12.adb, par-ch2.adb, par-ch3.adb,\n+\tpar-ch4.adb, par-ch5.adb, par-ch6.adb, par-ch9.adb,\n+\tpar-endh.adb, par-labl.adb, par-prag.adb,\n+\tpar-sync.adb, par-tchk.adb, par-util.adb,\n+\tpar.adb, prep.adb, prep.ads, prepcomp.adb, prj-attr.ads,\n+\tprj-dect.adb, prj-env.adb, prj-ext.adb, prj-nmsc.adb,\n+\tprj-nmsc.ads, prj-pp.adb, prj-proc.adb,\n+\tprj-strt.ads, prj-tree.ads, prj.adb, prj.ads: Fix comment typos.\n+\n 2008-03-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* decl.c (gnat_to_gnu_entity) <object>: Do not force a non-null"}, {"sha": "cd73a4aba9b87f90daca02b150e5a89908e8ea37", "filename": "gcc/ada/g-table.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-table.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-table.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-table.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -256,7 +256,7 @@ package body GNAT.Table is\n       --  current allocation). Range checks are suppressed because this unit\n       --  uses direct calls to System.Memory for allocation, and this can\n       --  yield misaligned storage (and we cannot rely on the bootstrap\n-      --  compiler supporting specifically disabling alignment cheks, so we\n+      --  compiler supporting specifically disabling alignment checks, so we\n       --  need to suppress all range checks). It is safe to suppress this check\n       --  here because we know that a (possibly misaligned) object of that type\n       --  does actually exist at that address.\n@@ -268,7 +268,7 @@ package body GNAT.Table is\n       --  involve moving table contents around).\n \n    begin\n-      --  If we're going to reallocate, check wheter Item references an\n+      --  If we're going to reallocate, check whether Item references an\n       --  element of the currently allocated table.\n \n       if Need_Realloc"}, {"sha": "52bd0e9cfa8891584391c21d21adde712fe50d8c", "filename": "gcc/ada/g-tasloc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-tasloc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-tasloc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-tasloc.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -33,6 +33,6 @@\n \n --  This package does not require a body, since it is a package renaming. We\n --  provide a dummy file containing a No_Body pragma so that previous versions\n---  of the body (which did exist) will not intefere.\n+--  of the body (which did exist) will not interfere.\n \n pragma No_Body;"}, {"sha": "3c0e62c71c12db10e0a5653c9e88b32121d1842b", "filename": "gcc/ada/g-traceb.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-traceb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-traceb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-traceb.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -43,7 +43,7 @@\n --  using the external addr2line utility, or from within GDB.\n \n --  In order to use this facility, in some cases the binder must be invoked\n---  with -E switch (store the backtrace with exception occurence). Please\n+--  with -E switch (store the backtrace with exception occurrence). Please\n --  refer to gnatbind documentation for more information.\n \n --  To analyze the code locations later using addr2line or gdb, the necessary"}, {"sha": "70e9c538c440093e550015bf1ca3ecf86767c174", "filename": "gcc/ada/g-trasym.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-trasym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-trasym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -114,7 +114,7 @@ package body GNAT.Traceback.Symbolic is\n       --  be found. If the executable file name resolution fails, we have no\n       --  sensible basis to invoke the symbolizer at all.\n \n-      --  Protect all this against concurrent accesses explicitely, as the\n+      --  Protect all this against concurrent accesses explicitly, as the\n       --  underlying services are potentially thread unsafe.\n \n       TSL.Lock_Task.all;"}, {"sha": "76c0f0843de60e2022d39a01c9fad5acc96960ce", "filename": "gcc/ada/g-utf_32.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-utf_32.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fg-utf_32.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-utf_32.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -33,6 +33,6 @@\n \n --  This package does not require a body, since it is a package renaming. We\n --  provide a dummy file containing a No_Body pragma so that previous versions\n---  of the body (which did exist) will not intefere.\n+--  of the body (which did exist) will not interfere.\n \n pragma No_Body;"}, {"sha": "a4dd957d67ccef55cc6ff239ad928d0aff66f25b", "filename": "gcc/ada/gen-soccon.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgen-soccon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgen-soccon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen-soccon.c?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -639,7 +639,7 @@ _NL\n \n CND(WSASYSNOTREADY,     \"System not ready\")\n CND(WSAVERNOTSUPPORTED, \"Version not supported\")\n-CND(WSANOTINITIALISED,  \"Winsock not intialized\")\n+CND(WSANOTINITIALISED,  \"Winsock not initialized\")\n CND(WSAEDISCON,         \"Disconnected\")\n \n #endif"}, {"sha": "5b98771d4f50b89d61b6404080c73b03416bba77", "filename": "gcc/ada/gigi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgigi.h?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -787,7 +787,7 @@ extern tree build_component_ref (tree record_variable, tree component,\n \n /* Build a GCC tree to call an allocation or deallocation function.\n    If GNU_OBJ is nonzero, it is an object to deallocate.  Otherwise,\n-   genrate an allocator.\n+   generate an allocator.\n \n    GNU_SIZE is the size of the object and ALIGN is the alignment.\n    GNAT_PROC, if present is a procedure to call and GNAT_POOL is the"}, {"sha": "b319993ea5ab292a683add6f2ad12683b1c60135", "filename": "gcc/ada/gmem.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgmem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgmem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgmem.c?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -79,7 +79,7 @@ __gnat_convert_addresses (void *addrs[], int n_addrs, void *buf, int *len);\n    routine.  The latter examines debug info from a provided executable file\n    name to perform the translation into symbolic form of an input sequence of\n    raw binary addresses.  It attempts to open the file from the provided name\n-   \"as is\", so an an absolute path must be provided to ensure the file is\n+   \"as is\", so an absolute path must be provided to ensure the file is\n    always found.  We compute this name once, at initialization time.  */\n \n static const char * exename = 0;"}, {"sha": "6581c6fc62e34d3ad030de4c1279f70502023b25", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -317,7 +317,7 @@ procedure Gnatbind is\n                then\n                   null;\n \n-               --  Invalid -S switch, let Switch give error, set defalut of IN\n+               --  Invalid -S switch, let Switch give error, set default of IN\n \n                else\n                   Scan_Binder_Switches (Argv);"}, {"sha": "e38d51bcf5370e40dd8b5c6e1ca5af0ed04bfd6e", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -280,7 +280,7 @@ procedure Gnatchop is\n \n    function Report_Duplicate_Units return Boolean;\n    --  Output messages about duplicate units in the input files in Unit.Table\n-   --  Returns True if any duplicates found, Fals if no duplicates found.\n+   --  Returns True if any duplicates found, False if no duplicates found.\n \n    function Scan_Arguments return Boolean;\n    --  Scan command line options and set global variables accordingly.\n@@ -761,7 +761,7 @@ procedure Gnatchop is\n \n          --  Note that the unit name can be an operator name in quotes.\n          --  This is of course illegal, but both GNAT and gnatchop handle\n-         --  the case so that this error does not intefere with chopping.\n+         --  the case so that this error does not interfere with chopping.\n \n          --  The SR ir present indicates that a source reference pragma\n          --  was processed as part of this unit (and that therefore no"}, {"sha": "13ddf63f8d4dc0569329df2c3e0edf22ec4fb974", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -66,7 +66,7 @@ procedure GNATCmd is\n \n    Old_Project_File_Used : Boolean := False;\n    --  This flag indicates a switch -p (for gnatxref and gnatfind) for\n-   --  an old fashioned project file. -p cannot be used in conjonction\n+   --  an old fashioned project file. -p cannot be used in conjunction\n    --  with -P.\n \n    Max_Files_On_The_Command_Line : constant := 30; --  Arbitrary\n@@ -326,7 +326,7 @@ procedure GNATCmd is\n          declare\n             Current_Last : constant Integer := Last_Switches.Last;\n          begin\n-            --  Gnatstack needs to add the the .ci file for the binder\n+            --  Gnatstack needs to add the .ci file for the binder\n             --  generated files corresponding to all of the library projects\n             --  and main units belonging to the application.\n \n@@ -846,7 +846,7 @@ procedure GNATCmd is\n          raise Error_Exit;\n \n       else\n-         --  Get each file name in the file, find its path and add it the the\n+         --  Get each file name in the file, find its path and add it the\n          --  list of arguments.\n \n          while not End_Of_File (File) loop\n@@ -2242,7 +2242,7 @@ begin\n \n          --  For gnatmetric, the generated files should be put in the object\n          --  directory. This must be the first switch, because it may be\n-         --  overriden by a switch in package Metrics in the project file or\n+         --  overridden by a switch in package Metrics in the project file or\n          --  by a command line option. Note that we don't add the -d= switch\n          --  if there is no object directory available.\n "}, {"sha": "d592256352a299af587bb3f591c6ae97ae4d1a32", "filename": "gcc/ada/gnatcmd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatcmd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatcmd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -29,7 +29,7 @@\n --  style switches that are accepted directly.\n \n --    The program is typically called GNAT when it is installed and\n---    the two possibile styles of use are:\n+--    the two possible styles of use are:\n \n --  To call gcc:\n "}, {"sha": "7ac560475b73ad829c7c928b54ebd09c41ed6390", "filename": "gcc/ada/gnatdll.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatdll.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -51,14 +51,14 @@ procedure Gnatdll is\n    --  Parse the command line arguments passed to gnatdll\n \n    procedure Check_Context;\n-   --  Check the context before runing any commands to build the library\n+   --  Check the context before running any commands to build the library\n \n    Syntax_Error : exception;\n    --  Raised when a syntax error is detected, in this case a usage info will\n    --  be displayed.\n \n    Context_Error : exception;\n-   --  Raised when some files (specifed on the command line) are missing to\n+   --  Raised when some files (specified on the command line) are missing to\n    --  build the DLL.\n \n    Help : Boolean := False;\n@@ -89,7 +89,7 @@ procedure Gnatdll is\n    --  List of objects to put inside the library\n \n    Ali_Files : Argument_List_Access := MDLL.Null_Argument_List_Access;\n-   --  For each Ada file specified, we keep arecord of the corresponding\n+   --  For each Ada file specified, we keep a record of the corresponding\n    --  ALI file. This list of SLI files is used to build the binder program.\n \n    Options : Argument_List_Access := MDLL.Null_Argument_List_Access;\n@@ -200,7 +200,7 @@ procedure Gnatdll is\n       --  A list of -bargs options (B is next entry to be used)\n \n       Build_Import : Boolean := True;\n-      --  Set to Fals if option -n if specified (no-import)\n+      --  Set to False if option -n if specified (no-import)\n \n       --------------\n       -- Add_File --"}, {"sha": "5592d528a2cf808e04713a6dbc8a74011a72bbcd", "filename": "gcc/ada/gnatfind.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatfind.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -314,8 +314,8 @@ begin\n    end if;\n \n    --  Special case to speed things up: if the user has a command line of the\n-   --  form 'gnatfind entity:file', ie has specified a file and only wants the\n-   --  bodies and specs, then we can restrict the search to the .ali file\n+   --  form 'gnatfind entity:file', i.e. has specified a file and only wants\n+   --  the bodies and specs, then we can restrict the search to the .ali file\n    --  associated with 'file'.\n \n    if Has_File_In_Entity"}, {"sha": "d3d10edcf52580e7e4c61319db9ae7ed3df9928d", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -104,7 +104,7 @@ procedure Gnatlink is\n    --  important because on the GNU linker command line the -L switch is not\n    --  used to look for objects files but -L switch is used to look for\n    --  objects listed in the response file. This is not a problem with the\n-   --  applications objects as they are specified with a fullname.\n+   --  applications objects as they are specified with a full name.\n \n    package Response_File_Objects is new Table.Table (\n      Table_Component_Type => String_Access,\n@@ -1303,7 +1303,7 @@ procedure Gnatlink is\n                      else\n                         --  If gnatlib library not found, then\n                         --  add it anyway in case some other\n-                        --  mechanimsm may find it.\n+                        --  mechanism may find it.\n \n                         Linker_Options.Increment_Last;\n                         Linker_Options.Table (Linker_Options.Last) :=\n@@ -1475,7 +1475,7 @@ begin\n    --  switches:\n \n    --    -gnatA   stops reading gnat.adc, since we don't know what\n-   --             pagmas would work, and we do not need it anyway.\n+   --             pragmas would work, and we do not need it anyway.\n \n    --    -gnatWb  allows brackets coding for wide characters\n \n@@ -1843,7 +1843,7 @@ begin\n          --  one. And any subsequent stack setting option will overwrite the\n          --  previous one. This is done especially for GNAT/NT where we set\n          --  the stack size for tasking programs by a pragma in the NT\n-         --  specific tasking package System.Task_Primitives.Oparations.\n+         --  specific tasking package System.Task_Primitives.Operations.\n \n          --  Note: This is not a FOR loop that runs from Linker_Options.First\n          --  to Linker_Options.Last, since operations within the loop can\n@@ -2008,7 +2008,7 @@ begin\n \n             System.OS_Lib.Spawn (Linker_Path.all, Args, Success);\n \n-            --  Delete the temporary file used in conjuction with linking if\n+            --  Delete the temporary file used in conjunction with linking if\n             --  one was created. See Process_Bind_File for details.\n \n             if Tname_FD /= Invalid_FD then"}, {"sha": "a279ca3c8d3db3366988d96270149a366c911638", "filename": "gcc/ada/gnatmem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatmem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgnatmem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatmem.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -27,7 +27,7 @@\n --  idea:\n \n --      - Read the allocation log generated by the application linked using\n---        instrumented memory allocation and dealocation (see memtrack.adb for\n+--        instrumented memory allocation and deallocation (see memtrack.adb for\n --        this circuitry). To get access to this functionality, the application\n --        must be relinked with library libgmem.a:\n "}, {"sha": "040a726f572d5427ff7c846e478b5e1466c344eb", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -444,7 +444,7 @@ package body GPrep is\n \n       Symbol := Index_Of (Data.Symbol);\n \n-      --  If symbol does not alrady exist, create a new entry in the mapping\n+      --  If symbol does not already exist, create a new entry in the mapping\n       --  table.\n \n       if Symbol = No_Symbol then"}, {"sha": "cc1083d8a5200a03d2105737db7d9960eeffc335", "filename": "gcc/ada/i-cstrea-vms.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fi-cstrea-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fi-cstrea-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea-vms.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -229,7 +229,7 @@ package body Interfaces.C_Streams is\n       --  In order for the above fwrite hack to work, we must always buffer\n       --  stdout and stderr. Is_regular_file on VMS cannot detect when\n       --  these are redirected to a file, so checking for that condition\n-      --  doesnt help.\n+      --  doesn't help.\n \n       if mode = IONBF\n         and then (stream = stdout or else stream = stderr)"}, {"sha": "c7ec0ceb62f0c52262f9fa1f14c885c96fa0d9aa", "filename": "gcc/ada/i-cstrin.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fi-cstrin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fi-cstrin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -109,7 +109,7 @@ package body Interfaces.C.Strings is\n       Pointer : chars_ptr;\n \n    begin\n-      --  Get index of position of null. If Index > Chars'last,\n+      --  Get index of position of null. If Index > Chars'Last,\n       --  nul is absent and must be added explicitly.\n \n       Index := Position_Of_Nul (Into => Chars);"}, {"sha": "240c0672964589459ddf31561b12ccd4f337b24b", "filename": "gcc/ada/i-pacdec.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fi-pacdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fi-pacdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-pacdec.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -33,7 +33,7 @@\n ------------------------------------------------------------------------------\n \n --  This unit defines the packed decimal format used by GNAT in response to\n---  a specication of Machine_Radix 10 for a decimal fixed-point type. The\n+--  a specification of Machine_Radix 10 for a decimal fixed-point type. The\n --  format and operations are completely encapsulated in this unit, so all\n --  that is necessary to compile using different packed decimal formats is\n --  to replace this single unit."}, {"sha": "ffb28ae821133c93609e0dae5f4e6bf38c68f5c6", "filename": "gcc/ada/i-vxwork.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fi-vxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fi-vxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-vxwork.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -47,7 +47,7 @@\n \n pragma Warnings (Off, \"*foreign convention*\");\n pragma Warnings (Off, \"*add Convention pragma*\");\n---  These are temporary pragmas to supress warnings about mismatching\n+--  These are temporary pragmas to suppress warnings about mismatching\n --  conventions, which will be a problem when we get rid of trampolines ???\n \n with System.VxWorks;\n@@ -175,7 +175,7 @@ package Interfaces.VxWorks is\n    --  Binding to the C routine sysBusIntGen. Note that the T2\n    --  documentation implies that a vector address is the proper\n    --  argument - it's not. The interrupt number in the range\n-   --  0 .. 255 (for 68K and PPC) is the correct agument.\n+   --  0 .. 255 (for 68K and PPC) is the correct argument.\n \n    procedure logMsg\n      (fmt : String; arg1, arg2, arg3, arg4, arg5, arg6 : int := 0);"}, {"sha": "0b17ec2a8b5089bbe1b2c8a9dd92b8431cdf8d70", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -181,7 +181,7 @@ package body Impunit is\n    --  attempt to WITH one of these units will be diagnosed as an error later\n    --  on, but for now we do not consider these internal implementation units\n    --  (if we did, then we would get a junk warning which would be confusing\n-   --  and unecessary, given that we generate a clear error message).\n+   --  and unnecessary, given that we generate a clear error message).\n \n      \"a-tideio\",    -- Ada.Text_IO.Decimal_IO\n      \"a-tienio\",    -- Ada.Text_IO.Enumeration_IO"}, {"sha": "2210ec89559193202191bbf33a9bcaa24f86432b", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -174,7 +174,7 @@ __gnat_get_specific_dispatching (int priority)\n /* __gnat_set_globals */\n /**********************/\n \n-/* This routine is kept for boostrapping purposes, since the binder generated\n+/* This routine is kept for bootstrapping purposes, since the binder generated\n    file now sets the __gl_* variables directly. */\n \n void"}, {"sha": "999351a8d97dbe286900752b7114dbd9430988c6", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -135,7 +135,7 @@ __gnat_initialize (void *eh)\n      dynamic unloader.\n \n      Note that since the tables shall be registered against a common\n-     datastructure, libgcc should be one of the modules (vs being partially\n+     data structure, libgcc should be one of the modules (vs being partially\n      linked against all the others at build time) and shall be loaded first.\n \n      For applications linked with the kernel, the scheme above would lead to"}, {"sha": "3aa16de88e9c389fa2c6c7adaf813daa907f19fc", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -329,7 +329,7 @@ package body Inline is\n \n             if Pack = Standard_Standard then\n \n-               --  Library-level inlined function. Add function iself to\n+               --  Library-level inlined function. Add function itself to\n                --  list of needed units.\n \n                Inlined_Bodies.Increment_Last;\n@@ -368,7 +368,7 @@ package body Inline is\n       --    mode it will lead to undefined symbols at link time.\n       --\n       --    b) If a body contains inlined function instances, it cannot be\n-      --    inlined under ZCX because the numerix suffix generated by gigi\n+      --    inlined under ZCX because the numeric suffix generated by gigi\n       --    will be different in the body and the place of the inlined call.\n       --\n       --  This procedure must be carefully coordinated with the back end"}, {"sha": "45cc66247bb7d85061a6eb38435c839608724520", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -956,7 +956,7 @@ package body Layout is\n \n       Make_Size_Function : Boolean := False;\n       --  Indicates whether to request that SO_Ref_From_Expr should\n-      --  encapsulate the array size expresion in a function.\n+      --  encapsulate the array size expression in a function.\n \n       procedure Discrimify (N : in out Node_Id);\n       --  If N represents a discriminant, then the Size.Status is set to\n@@ -2490,7 +2490,7 @@ package body Layout is\n                end;\n             end if;\n \n-         --  For non-discrete sclar types, if the RM_Size is not set,\n+         --  For non-discrete scalar types, if the RM_Size is not set,\n          --  then set it now to a copy of the Esize if the Esize is set.\n \n          else\n@@ -2591,7 +2591,7 @@ package body Layout is\n                Set_Composite_Alignment (E);\n             end if;\n \n-         --  Procressing for array types\n+         --  Processing for array types\n \n          elsif Is_Array_Type (E) then\n \n@@ -2804,7 +2804,7 @@ package body Layout is\n       --  the setting of the Optimize_Alignment mode.\n \n       --  If Optimize_Alignment is set to Space, then packed records always\n-      --  have an aligmment of 1. But don't do anything for atomic records\n+      --  have an alignment of 1. But don't do anything for atomic records\n       --  since we may need higher alignment for indivisible access.\n \n       if Optimize_Alignment = 'S'\n@@ -2818,7 +2818,7 @@ package body Layout is\n \n       else\n          --  The only other cases we worry about here are where the size is\n-         --  staticallly known at compile time.\n+         --  statically known at compile time.\n \n          if Known_Static_Esize (E) then\n             Siz := Esize (E);\n@@ -2910,7 +2910,7 @@ package body Layout is\n          --  Check components. If any component requires a higher alignment,\n          --  then we set that higher alignment in any case. Don't do this if\n          --  we have Optimize_Alignment set to Space. Note that that covers\n-         --  the case of packed records, where we arleady set alignment to 1.\n+         --  the case of packed records, where we already set alignment to 1.\n \n          if Optimize_Alignment  /= 'S' then\n             declare"}, {"sha": "68a5a74c0dfb176a1603afb1d9db79f0aec94170", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -667,7 +667,7 @@ package body Lib.Writ is\n          --  Loop to build the with table. A with on the main unit itself\n          --  is ignored (AARM 10.2(14a)). Such a with-clause can occur if\n          --  the main unit is a subprogram with no spec, and a subunit of\n-         --  it unecessarily withs the parent.\n+         --  it unnecessarily withs the parent.\n \n          for J in Units.First + 1 .. Last_Unit loop\n \n@@ -904,7 +904,7 @@ package body Lib.Writ is\n          end if;\n       end Output_Main_Program_Line;\n \n-      --  Write command argmument ('A') lines\n+      --  Write command argument ('A') lines\n \n       for A in 1 .. Compilation_Switches.Last loop\n          Write_Info_Initiate ('A');"}, {"sha": "316a494185eb6c00465d881d647fc9c170386b0e", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -77,7 +77,7 @@ package Lib.Writ is\n \n    --    Adding entirely new lines (with a new key letter) to the ali\n    --    file is always safe, at any point (other than before the V\n-   --    line), since suchy lines will be ignored.\n+   --    line), since such lines will be ignored.\n \n    --  Following the guidelines in this section should ensure that this\n    --  problem is minimized and that old tools will be able to deal\n@@ -399,7 +399,7 @@ package Lib.Writ is\n    --  each compilation unit that appears in the corresponding object file.\n    --  In particular, when a package body or subprogram body is compiled,\n    --  there will be two sets of information, one for the spec and one for\n-   --  the body. with the entry for the body appearing first. This is the\n+   --  the body, with the entry for the body appearing first. This is the\n    --  only case in which a single ALI file contains more than one unit (in\n    --  particular note that subunits do *not* count as compilation units for\n    --  this purpose, and generate no library information, since they are\n@@ -540,7 +540,7 @@ package Lib.Writ is\n \n    --  Following the W lines (if any, or the U line if not), are an\n    --  optional series of lines that indicates the usage of the pragma\n-   --  Linker_Options in the associated unit. For each appearence of a\n+   --  Linker_Options in the associated unit. For each appearance of a\n    --  pragma Linker_Options (or Link_With) in the unit, a line is\n    --  present with the form:\n "}, {"sha": "690cde9eb62bf092a24d7b048ebf45f385d49214", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -864,7 +864,7 @@ package body Lib.Xref is\n       --  set to Empty, and Left/Right are set to space.\n \n       procedure Output_Import_Export_Info (Ent : Entity_Id);\n-      --  Ouput language and external name information for an interfaced\n+      --  Output language and external name information for an interfaced\n       --  entity, using the format <language, external_name>,\n \n       ------------------------"}, {"sha": "0bb85492980862047dc7f980bc68a27ddec21c3a", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -73,7 +73,7 @@ package Lib.Xref is\n    --        in the visible part of a generic package, and space otherwise.\n \n    --        entity is the name of the referenced entity, with casing in\n-   --        the canical casing for the source file where it is defined.\n+   --        the canonical casing for the source file where it is defined.\n \n    --        renameref provides information on renaming. If the entity is\n    --        a package, object or overloadable entity which is declared by\n@@ -276,7 +276,7 @@ package Lib.Xref is\n    --           Pq of this type, then an entry in the list of references to\n    --           Tx will point to the declaration of Pq. Note that this entry\n    --           type is unusual because it an implicit rather than explicit,\n-   --           and the name of the refrerence does not match the name of the\n+   --           and the name of the reference does not match the name of the\n    --           entity for which a reference is generated. These entries are\n    --           generated only for entities declared in the extended main\n    --           source unit (main unit itself, its separate spec (if any).\n@@ -324,7 +324,7 @@ package Lib.Xref is\n    --           instantiations, this can be nested [...[...[...]]] etc.\n    --           The reference is of the form [file|line] no column is\n    --           present since it is assumed that only one instantiation\n-   --           appears on a single source line. Note that the appearence\n+   --           appears on a single source line. Note that the appearance\n    --           of file numbers in such references follows the normal\n    --           rules (present only if needed, and resets the current\n    --           file for subsequent references).\n@@ -358,7 +358,7 @@ package Lib.Xref is\n    --              a reference (e.g. a call) at line 8 column 4 of the\n    --              of the current file.\n \n-   --              the END line of the body has an explict reference to\n+   --              the END line of the body has an explicit reference to\n    --              the name of the procedure at line 12, column 13.\n \n    --              the body ends at line 12, column 15, just past this label"}, {"sha": "d39723a85e4d79a313c0fc0e2f14e3b8ca69814d", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -334,7 +334,7 @@ package body Lib is\n          end if;\n \n          --  At this stage we know that neither is a subunit, so we deal\n-         --  with instantiations, since we culd have a common ancestor\n+         --  with instantiations, since we could have a common ancestor\n \n          Inst1 := Instantiation (Sind1);\n          Inst2 := Instantiation (Sind2);"}, {"sha": "7e941d19cab3a4f7fe4c1574d52955d144d77b66", "filename": "gcc/ada/link.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -50,14 +50,14 @@\n /*  link_max is a conservative system specific threshold (in bytes) of the  */\n /*  argument length passed to the linker which will trigger a file being    */\n /*  used instead of the command line directly. If the argument length is    */\n-/*  greater than this threshhold, then an objlist_file will be generated    */\n+/*  greater than this threshold, then an objlist_file will be generated     */\n /*  and object_file_option and objlist_file_supported must be set. If       */\n /*  objlist_file_supported is set to 0 (unsupported), then link_max is      */\n /*  set to 2**31-1 so that the limit will never be exceeded.                */\n \n /*  run_path_option is the system dependent linker option which specifies   */\n /*  the run time path to use when loading dynamic libraries. This should    */\n-/*  be set to the null string if the system does not support dynmamic       */\n+/*  be set to the null string if the system does not support dynamic        */\n /*  loading of libraries.                                                   */\n \n /*  shared_libgnat_default gives the system dependent link method that      */"}, {"sha": "4cc623771a7b2ac736daf88620c854fe404f3c21", "filename": "gcc/ada/live.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flive.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Flive.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flive.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -31,6 +31,6 @@ package Live is\n \n    procedure Collect_Garbage_Entities;\n    --  Eliminate unreachable entities using a mark-and-sweep from\n-   --  the set of root entities, ie. those having Is_Public set.\n+   --  the set of root entities, i.e. those having Is_Public set.\n \n end Live;"}, {"sha": "bf817de158a068f3a37530ddb4f16043ab2ed709", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -415,7 +415,7 @@ package body Make is\n    Do_Link_Step    : Boolean := True;\n    --  Flags to indicate what step should be executed. Can be set to False\n    --  with the switches -c, -b and -l. These flags are reset to True for\n-   --  each invokation of procedure Gnatmake.\n+   --  each invocation of procedure Gnatmake.\n \n    Shared_String           : aliased String := \"-shared\";\n    Force_Elab_Flags_String : aliased String := \"-F\";\n@@ -739,8 +739,8 @@ package body Make is\n       And_Save      : Boolean := True);\n    --  Make invokes one of three programs (the compiler, the binder or the\n    --  linker). For the sake of convenience, some program specific switches\n-   --  can be passed directly on the gnatmake commande line. This procedure\n-   --  records these switches so that gnamake can pass them to the right\n+   --  can be passed directly on the gnatmake command line. This procedure\n+   --  records these switches so that gnatmake can pass them to the right\n    --  program.  S is the switch to be added at the end of the command line\n    --  for Program if Append_Switch is True. If Append_Switch is False S is\n    --  added at the beginning of the command line.\n@@ -1473,7 +1473,8 @@ package body Make is\n             File_Name : File_Name_Type;\n \n          begin\n-            --  Test whether Uname is the name of a body unit (ie ends with %b)\n+            --  Test whether Uname is the name of a body unit (i.e. ends\n+            --  with %b)\n \n             Get_Name_String (Uname);\n             pragma\n@@ -2978,7 +2979,7 @@ package body Make is\n \n          --  Set -gnatpg for predefined files (for this purpose the renamings\n          --  such as Text_IO do not count as predefined). Note that we strip\n-         --  the directory name from the source file name becase the call to\n+         --  the directory name from the source file name because the call to\n          --  Fname.Is_Predefined_File_Name cannot deal with directory prefixes.\n \n          declare\n@@ -3225,7 +3226,7 @@ package body Make is\n             exit Make_Loop;\n          end if;\n \n-         --  PHASE 1: Check if there is more work that we can do (ie the Q\n+         --  PHASE 1: Check if there is more work that we can do (i.e. the Q\n          --  is non empty). If there is, do it only if we have not yet used\n          --  up all the available processes.\n \n@@ -5051,7 +5052,7 @@ package body Make is\n                   --  If there are several mains, we always get the general\n                   --  gnatmake switches (if any).\n \n-                  --  Warn the user, if necessary, so that he is not surprized\n+                  --  Warn the user, if necessary, so that he is not surprised\n                   --  that specific switches are not taken into account.\n \n                   declare\n@@ -5105,7 +5106,7 @@ package body Make is\n \n             --  Record the current last switch index for table Binder_Switches\n             --  and Linker_Switches, so that these tables may be reset before\n-            --  for each main, before adding swiches from the project file\n+            --  for each main, before adding switches from the project file\n             --  and from the command line.\n \n             Last_Binder_Switch := Binder_Switches.Last;\n@@ -5486,7 +5487,7 @@ package body Make is\n             else\n                --  If we are using a project file, we attempt to remove the\n                --  body (or spec) termination of the main subprogram. We find\n-               --  it the the naming scheme of the project file. This avoids\n+               --  it the naming scheme of the project file. This avoids\n                --  generating an executable \"main.2\" for a main subprogram\n                --  \"main.2.ada\", when the body termination is \".2.ada\".\n \n@@ -7136,7 +7137,7 @@ package body Make is\n                begin\n                   --  For directories, Normalize_Pathname may or may not put\n                   --  a directory separator at the end, depending on its input.\n-                  --  Remove any last directory separator before comparaison.\n+                  --  Remove any last directory separator before comparison.\n                   --  Returns True only if the two directories are the same.\n \n                   if Object_Directory (Olast) = Directory_Separator then\n@@ -7422,7 +7423,7 @@ package body Make is\n       Write_Line (\"*** Interrupted ***\");\n       Delete_All_Temp_Files;\n \n-      --  Send SIGINT to all oustanding compilation processes spawned\n+      --  Send SIGINT to all outstanding compilation processes spawned\n \n       for J in 1 .. Outstanding_Compiles loop\n          Kill (Running_Compile (J).Pid, SIGINT, 1);"}, {"sha": "2d655e148fe74c858f4fe5d48acf980e10298d17", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -447,7 +447,7 @@ package body Makegpr is\n    --  Create the archive dependency file for a library project\n \n    procedure Create_Global_Archive_Dependency_File (Name : String);\n-   --  Create the archive depenency file for the main project\n+   --  Create the archive dependency file for the main project\n \n    procedure Display_Command\n      (Name    : String;\n@@ -1283,7 +1283,7 @@ package body Makegpr is\n                     Project_Tree.Other_Sources.Table (Source_Id);\n \n                   --  Only include object file name that have not been\n-                  --  overriden in extending projects.\n+                  --  overridden in extending projects.\n \n                   if Is_Included_In_Global_Archive\n                        (Source.Object_Name, Proj)\n@@ -1921,7 +1921,7 @@ package body Makegpr is\n       --  Loop Big_Loop is executed several times only when the dependency file\n       --  contains several times\n       --     <object file>: <source1> ...\n-      --  When there is only one of such occurence, Big_Loop is exited\n+      --  When there is only one of such occurrence, Big_Loop is exited\n       --  successfully at the beginning of the second loop.\n \n       Big_Loop :\n@@ -3375,7 +3375,7 @@ package body Makegpr is\n \n       --  Add the directory where gprmake is invoked in front of the path,\n       --  if gprmake is invoked from a bin directory or with directory\n-      --  information. information. Only do this if the platform is not VMS,\n+      --  information. Only do this if the platform is not VMS,\n       --  where the notion of path does not really exist.\n \n       --  Below code shares nasty code duplication with make.adb code???"}, {"sha": "773256d176e8dc9b5a55b87a54bf0bd7875a774e", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -191,7 +191,7 @@ package body Makeutl is\n       Exec_Name : constant String := Command_Name;\n \n       function Get_Install_Dir (S : String) return String;\n-      --  S is the executable name preceeded by the absolute or relative\n+      --  S is the executable name preceded by the absolute or relative\n       --  path, e.g. \"c:\\usr\\bin\\gcc.exe\". Returns the absolute directory\n       --  where \"bin\" lies (in the example \"C:\\usr\").\n       --  If the executable is not in a \"bin\" directory, return \"\".\n@@ -657,7 +657,7 @@ package body Makeutl is\n          Start := Start - 1;\n       end loop;\n \n-      --  If there is no difits, or if the digits are not preceded by\n+      --  If there are no digits, or if the digits are not preceded by\n       --  the character that precedes a unit index, this is not the ALI file\n       --  of a unit in a multi-unit source.\n "}, {"sha": "8014f8412cfc9b1c8b1ac1d65b5e84cc2ec82f80", "filename": "gcc/ada/math_lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmath_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmath_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmath_lib.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -93,7 +93,7 @@ package body Math_Lib is\n      (Y    : Real;\n       A    : Real := 1.0)\n       return Real;\n-   --  Common code for arc tangent after cyele reduction\n+   --  Common code for arc tangent after cycle reduction\n \n    function Log_Inverse_Epsilon return Real;\n    --  Function to provide constant: Log (1.0 / Epsilon)"}, {"sha": "4011db1323bd90dbce8386b92e72d8db006b1211", "filename": "gcc/ada/mdll-utl.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmdll-utl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmdll-utl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll-utl.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -51,7 +51,7 @@ package body MDLL.Utl is\n    procedure Print_Command\n      (Tool_Name : String;\n       Arguments : OS_Lib.Argument_List);\n-   --  display the command runned when in Verbose mode\n+   --  display the command run when in Verbose mode\n \n    -------------------\n    -- Print_Command --"}, {"sha": "49174d405cd13767d4889e1c3f6ac63449fdeb3d", "filename": "gcc/ada/mdll.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmdll.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmdll.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -40,7 +40,7 @@ package MDLL is\n                                  new Argument_List (1 .. 0);\n \n    Tools_Error : exception;\n-   --  Commment required\n+   --  Comment required\n \n    Verbose : Boolean := False;\n    Quiet   : Boolean := False;"}, {"sha": "2ece4fae68b36c026e70942c57e911ea6463c373", "filename": "gcc/ada/memroot.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmemroot.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmemroot.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmemroot.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -86,7 +86,7 @@ package body Memroot is\n    --  Returns an image for F containing the file name, the Line number,\n    --  and if 'Short' is not true, the subprogram name. When possible, spaces\n    --  are inserted between the line number and the subprogram name in order\n-   --  to align images of the same frame. Alignement is cimputed with Max_Fil\n+   --  to align images of the same frame. Alignment is computed with Max_Fil\n    --  & Max_Lin representing the max number of character in a filename or\n    --  length in a given frame.\n "}, {"sha": "1b3d9ba467ad2c2b491bc592db51ec266a4cbfa6", "filename": "gcc/ada/memroot.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmemroot.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmemroot.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmemroot.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -77,7 +77,7 @@ package Memroot is\n    --  Create an allocation root from the frames that compose it\n \n    function Frames_Of   (B  : Root_Id) return Frame_Array;\n-   --  Retreives the Frames of the root's backtrace\n+   --  Retrieves the Frames of the root's backtrace\n \n    procedure Print_BT (B  : Root_Id; Short : Boolean := False);\n    --  Prints on standard out the backtrace associated with the root B"}, {"sha": "317ec2d6cdcc10a4c7d23fd82fb513393f24056a", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -301,7 +301,7 @@ gnat_handle_option (size_t scode, const char *arg, int value)\n \n     case OPT_feliminate_unused_debug_types:\n       /* We arrange for post_option to be able to only set the corresponding\n-\t flag to 1 when explicitely requested by the user.  We expect the\n+\t flag to 1 when explicitly requested by the user.  We expect the\n \t default flag value to be either 0 or positive, and expose a positive\n \t -f as a negative value to post_option.  */\n       flag_eliminate_unused_debug_types = -value;"}, {"sha": "88d33811b1d26c5927761b342289211b712e6a15", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -446,7 +446,7 @@ package body MLib.Prj is\n       --  Start of processing for Add_Rpath\n \n       begin\n-         --  If firt path, allocate initial Rpath\n+         --  If first path, allocate initial Rpath\n \n          if Rpath = null then\n             Rpath := new String (1 .. Initial_Rpath_Length);\n@@ -2118,9 +2118,9 @@ package body MLib.Prj is\n                      Obj_TS := File_Stamp (File_Name_Type'(Name_Find));\n \n                      --  If library file time stamp is earlier, set\n-                     --  Need_To_Build_Lib and return. String comparaison is\n+                     --  Need_To_Build_Lib and return. String comparison is\n                      --  used, otherwise time stamps may be too close and the\n-                     --  comparaison would return True, which would trigger\n+                     --  comparison would return True, which would trigger\n                      --  an unnecessary rebuild of the library.\n \n                      if String (Lib_TS) < String (Obj_TS) then"}, {"sha": "c00bd9b2dc355ce1389aac980bbbb9f412184b04", "filename": "gcc/ada/mlib-tgt-hpux.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-tgt-hpux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-tgt-hpux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-hpux.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -83,7 +83,7 @@ package body MLib.Tgt.Specific is\n       --  Common set of options to the gcc command performing the link.\n       --  On HPUX, this command eventually resorts to collect2, which may\n       --  generate a C file and compile it on the fly. This compilation shall\n-      --  also generate position independant code for the final link to\n+      --  also generate position independent code for the final link to\n       --  succeed.\n    begin\n       if Opt.Verbose_Mode then"}, {"sha": "493d8011187ea4a312a83eac088d5952d4a05464", "filename": "gcc/ada/mlib-tgt-linux.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-tgt-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-tgt-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-linux.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -68,7 +68,7 @@ package body MLib.Tgt.Specific is\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n       pragma Unreferenced (Auto_Init);\n-      --  Initialization is done through the contructor mechanism\n+      --  Initialization is done through the constructor mechanism\n \n       Lib_File : constant String :=\n                    \"lib\" & Fil.Append_To (Lib_Filename, DLL_Ext);"}, {"sha": "43c1e97972d0216a5b1c1a752491315728b530bf", "filename": "gcc/ada/mlib-tgt-tru64.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-tgt-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-tgt-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-tru64.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -3,7 +3,7 @@\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n --                    M L I B . T G T . S P E C I F I C                     --\n---                             (True64 Version)                             --\n+--                             (Tru64 Version)                              --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -24,7 +24,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the True64 version of the body\n+--  This is the Tru64 version of the body\n \n with MLib.Fil;\n with MLib.Utl;\n@@ -74,7 +74,7 @@ package body MLib.Tgt.Specific is\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n       pragma Unreferenced (Auto_Init);\n-      --  Initialization is done through the contructor mechanism\n+      --  Initialization is done through the constructor mechanism\n \n       Lib_File : constant String :=\n                    \"lib\" & Fil.Append_To (Lib_Filename, DLL_Ext);"}, {"sha": "21aae82813adf44ccfbbc6e725bbf486d92e9933", "filename": "gcc/ada/mlib-tgt.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-tgt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fmlib-tgt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -132,7 +132,7 @@ package MLib.Tgt is\n    --  \"libtoto.so\" will be a symbolic link to \"libtoto.so.2.1\" which\n    --  will be the actual library file.\n    --\n-   --  Symbol_Data is used for some patforms, including VMS, to generate\n+   --  Symbol_Data is used for some platforms, including VMS, to generate\n    --  the symbols to be exported by the library.\n    --\n    --  Note: Depending on the OS, some of the parameters may not be taken into\n@@ -153,7 +153,7 @@ package MLib.Tgt is\n    function Library_Major_Minor_Id_Supported return Boolean;\n    --  Indicates if major and minor ids are supported for libraries.\n    --  If they are supported, then a Library_Version such as libtoto.so.1.2\n-   --  will have a major id of 1 and a minor id of 2. Then litoto.so,\n+   --  will have a major id of 1 and a minor id of 2. Then libtoto.so,\n    --  libtoto.so.1 and libtoto.so.1.2 will be created, all three designating\n    --  the same file.\n "}, {"sha": "533144a42ee1dfc18488fdf25db7afb45370d3d4", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -55,7 +55,7 @@ package body Namet is\n    Hash_Num : constant Int := 2**12;\n    --  Number of headers in the hash table. Current hash algorithm is closely\n    --  tailored to this choice, so it can only be changed if a corresponding\n-   --  change is made to the hash alogorithm.\n+   --  change is made to the hash algorithm.\n \n    Hash_Max : constant Int := Hash_Num - 1;\n    --  Indexes in the hash header table run from 0 to Hash_Num - 1"}, {"sha": "2a1b9cbc0778b230d4d2e6af1ecec3a2ee976303", "filename": "gcc/ada/namet.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnamet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnamet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.h?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -85,7 +85,7 @@ Get_Decoded_Name_String (Name_Id Id)\n \n /* Like Get_Decoded_Name_String, but the result has all qualification and\n    package body entity suffixes stripped, and also all letters are upper\n-   cased.  This is used fo rbuilding the enumeration literal table. */\n+   cased.  This is used for building the enumeration literal table. */\n \n extern void casing__set_all_upper_case (void);\n "}, {"sha": "768e130dce579084f8ff9a7b20515e630ec6378f", "filename": "gcc/ada/nlists.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnlists.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnlists.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -139,7 +139,7 @@ package body Nlists is\n       Prev_Node.Set_Last (N);\n \n       --  Make sure we have no uninitialized junk in any new entires added.\n-      --  This ensures that Tree_Gen will not write out any unitialized junk.\n+      --  This ensures that Tree_Gen will not write out any uninitialized junk.\n \n       for J in Old_Last + 1 .. N loop\n          Next_Node.Table (J) := Empty;\n@@ -538,7 +538,7 @@ package body Nlists is\n          end if;\n       end Insert_List_Before_Debug;\n \n-   --  Start of prodcessing for Insert_List_Before\n+   --  Start of processing for Insert_List_Before\n \n    begin\n       pragma Assert (Is_List_Member (Before));"}, {"sha": "b3f6209ec5221d7cb1124aa6b2231bf41b6216df", "filename": "gcc/ada/nlists.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnlists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnlists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -129,7 +129,7 @@ package Nlists is\n    --  returned. It is an error to call First_Non_Pragma with a Node_Id value\n    --  or No_List (No_List is not considered to be the same as an empty list).\n    --  This function also skips N_Null nodes which can result from rewriting\n-   --  unrecognized or incorrrect pragmas.\n+   --  unrecognized or incorrect pragmas.\n \n    function Last (List : List_Id) return Node_Id;\n    pragma Inline (Last);"}, {"sha": "d30423b09a6389102800a92d28560b29e2b1f974", "filename": "gcc/ada/nlists.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnlists.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fnlists.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.h?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -24,7 +24,7 @@\n  ****************************************************************************/\n \n /* This is the C header corresponding to the Ada package specification for\n-   Nlists. It also contains the implementations of inlined functions from the\n+   Nlists. It also contains the implementations of inlined functions from\n    the package body for Nlists.  It was generated manually from nlists.ads and\n    nlists.adb and must be kept synchronized with changes in these files.\n "}, {"sha": "5d28a344d3387bc6125caed06393836016a0e9aa", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -55,7 +55,7 @@ package Opt is\n \n    --  The following mode values represent the current state of processing.\n    --  The values set here are the default values. Unless otherwise noted,\n-   --  the value may be reset in Switch-? with an appropropiate switch. In\n+   --  the value may be reset in Switch-? with an appropriate switch. In\n    --  some cases, the values can also be modified by pragmas, and in the\n    --  case of some binder variables, Gnatbind.Scan_Bind_Arg may modify\n    --  the default values.\n@@ -525,7 +525,7 @@ package Opt is\n    Generating_Code : Boolean := False;\n    --  GNAT\n    --  True if the frontend finished its work and has called the backend to\n-   --  processs the tree and generate the object file.\n+   --  process the tree and generate the object file.\n \n    Global_Discard_Names : Boolean := False;\n    --  GNAT, GNATBIND\n@@ -646,7 +646,7 @@ package Opt is\n \n    In_Place_Mode : Boolean := False;\n    --  GNATMAKE\n-   --  Set True to store ALI and object files in place ie in the object\n+   --  Set True to store ALI and object files in place i.e. in the object\n    --  directory if these files already exist or in the source directory\n    --  if not.\n \n@@ -859,7 +859,7 @@ package Opt is\n    --  Check_Semantics after generating an error message.\n \n    Optimize_Alignment : Character := 'O';\n-   --  Settinng of Optimize_Alignment, set to T/S/O for time/space/off. Can\n+   --  Setting of Optimize_Alignment, set to T/S/O for time/space/off. Can\n    --  be modified by use of pragma Optimize_Alignment.\n \n    Original_Operating_Mode : Operating_Mode_Type := Generate_Code;\n@@ -908,7 +908,7 @@ package Opt is\n \n    Preprocessing_Data_File : String_Ptr := null;\n    --  GNAT\n-   --  Set by switch -gnatep=. The file name of the prepocessing data file.\n+   --  Set by switch -gnatep=. The file name of the preprocessing data file.\n \n    Print_Generated_Code : Boolean := False;\n    --  GNAT\n@@ -1266,7 +1266,7 @@ package Opt is\n \n    Warn_On_Questionable_Missing_Parens : Boolean := True;\n    --  GNAT\n-   --  Set to True to generate warnings for cases where parenthese are missing\n+   --  Set to True to generate warnings for cases where parentheses are missing\n    --  and the usage is questionable, because the intent is unclear.\n \n    Warn_On_Redundant_Constructs : Boolean := False;\n@@ -1366,7 +1366,7 @@ package Opt is\n    --  This is set in the same manner as Ada_Version_Config. The difference is\n    --  that the setting of this flag is not ignored for internal and predefined\n    --  units, which for some purposes do indeed access this value, regardless\n-   --  of the fact that they are compiled the the most up to date ada version).\n+   --  of the fact that they are compiled the most up to date ada version).\n \n    Assertions_Enabled_Config : Boolean;\n    --  GNAT\n@@ -1454,7 +1454,7 @@ package Opt is\n    Use_VADS_Size_Config : Boolean;\n    --  GNAT\n    --  This is the value of the configuration switch that controls the use of\n-   --  VADS_Size instead of Size whereever the attribute Size is used. It can\n+   --  VADS_Size instead of Size wherever the attribute Size is used. It can\n    --  be set True by the use of the pragma Use_VADS_Size in the gnat.adc file.\n    --  This flag is used to set the initial value for Use_VADS_Size at the\n    --  start of analyzing each unit. Note however that the setting of this flag"}, {"sha": "d3ecee64c38015cc67a869bb1ef455bdabcf7631", "filename": "gcc/ada/osint-b.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint-b.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint-b.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-b.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -76,7 +76,7 @@ package Osint.B is\n \n    procedure Close_Binder_Output;\n    --  Closes the file created by Create_Binder_Output, flushing any\n-   --  buffers etc from writes by Write_Binder_Info.\n+   --  buffers etc. from writes by Write_Binder_Info.\n \n    procedure Set_Current_File_Name_Index (To : Int);\n    --  Set value of Current_File_Name_Index (in private part of Osint) to To"}, {"sha": "d93214cd60692e11ba4791838caf146caf4a80fa", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -43,7 +43,7 @@ package body Osint.C is\n       Suffix : String) return File_Name_Type;\n    --  Common processing for Create_List_File, Create_Repinfo_File and\n    --  Create_Debug_File. Src is the file name used to create the required\n-   --  output file and Suffix is the desired suffic (dg/rep/xxx for debug/\n+   --  output file and Suffix is the desired suffix (dg/rep/xxx for debug/\n    --  repinfo/list file where xxx is specified extension.\n \n    procedure Set_Library_Info_Name;\n@@ -439,7 +439,7 @@ package body Osint.C is\n \n       pragma Assert (Dot_Index /= 0);\n \n-      --  Change exctension to adt\n+      --  Change extension to adt\n \n       Name_Buffer (Dot_Index) := '.';\n       Name_Buffer (Dot_Index + 1) := 'a';"}, {"sha": "7a2872d2bf6b680766a5ecbd02ff4f31b3915301", "filename": "gcc/ada/osint-c.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -128,7 +128,7 @@ package Osint.C is\n \n    procedure Close_Output_Library_Info;\n    --  Closes the file created by Create_Output_Library_Info, flushing any\n-   --  buffers etc from writes by Write_Library_Info.\n+   --  buffers etc. from writes by Write_Library_Info.\n \n    procedure Read_Library_Info\n      (Name : out File_Name_Type;"}, {"sha": "d7272025b945e4f4af872e150b07e66f0be80754", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -63,10 +63,10 @@ package body Osint is\n    --  that are used to locate the actual file and for the purpose of message\n    --  construction. These names need not be accessible by Name_Find, and can\n    --  be therefore created by using routine Name_Enter. The files in question\n-   --  are file names with a prefix directory (ie the files not in the current\n-   --  directory). File names without a prefix directory are entered with\n-   --  Name_Find because special values might be attached to the various Info\n-   --  fields of the corresponding name table entry.\n+   --  are file names with a prefix directory (i.e., the files not in the\n+   --  current directory). File names without a prefix directory are entered\n+   --  with Name_Find because special values might be attached to the various\n+   --  Info fields of the corresponding name table entry.\n \n    -----------------------\n    -- Local Subprograms --\n@@ -124,7 +124,7 @@ package body Osint is\n    Look_In_Primary_Directory_For_Current_Main : Boolean := False;\n    --  When this variable is True, Find_File only looks in Primary_Directory\n    --  for the Current_Main file. This variable is always set to True for the\n-   --  compiler. It is also True for gnatmake, when the soucr name given on\n+   --  compiler. It is also True for gnatmake, when the source name given on\n    --  the command line has directory information.\n \n    Current_Full_Source_Name  : File_Name_Type  := No_File;\n@@ -177,7 +177,7 @@ package body Osint is\n    --  The file hash table is provided to free the programmer from any\n    --  efficiency concern when retrieving full file names or time stamps of\n    --  source files. If the programmer calls Source_File_Data (Cache => True)\n-   --  he is guaranteed that the price to retrieve the full name (ie with\n+   --  he is guaranteed that the price to retrieve the full name (i.e. with\n    --  directory info) or time stamp of the file will be payed only once, the\n    --  first time the full name is actually searched (or the first time the\n    --  time stamp is actually retrieved). This is achieved by employing a hash\n@@ -803,7 +803,7 @@ package body Osint is\n    function Executable_Prefix return String_Ptr is\n \n       function Get_Install_Dir (Exec : String) return String_Ptr;\n-      --  S is the executable name preceeded by the absolute or relative\n+      --  S is the executable name preceded by the absolute or relative\n       --  path, e.g. \"c:\\usr\\bin\\gcc.exe\" or \"..\\bin\\gcc\".\n \n       ---------------------\n@@ -2556,7 +2556,7 @@ package body Osint is\n          Canonical_File_Len  : Integer;\n \n       begin\n-         --  Retrieve the expanded directoy names and build the list\n+         --  Retrieve the expanded directory names and build the list\n \n          for J in 1 .. Num_Files loop\n             Canonical_File_Addr := To_Canonical_File_List_Next;"}, {"sha": "80c516ede6989414d2c9829cce0001ed5ae80d6e", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -62,7 +62,7 @@ package Osint is\n       T : File_Type) return File_Name_Type;\n    --  Finds a source, library or config file depending on the value of T\n    --  following the directory search order rules unless N is the name of the\n-   --  file just read with Next_Main_File and already contains directiory\n+   --  file just read with Next_Main_File and already contains directory\n    --  information, in which case just look in the Primary_Directory. Returns\n    --  File_Name_Type of the full file name if found, No_File if file not\n    --  found. Note that for the special case of gnat.adc, only the compilation\n@@ -160,7 +160,7 @@ package Osint is\n    --  Same as above for a path name\n \n    type String_Access_List is array (Positive range <>) of String_Access;\n-   --  Deferenced type used to return a list of file specs in\n+   --  Dereferenced type used to return a list of file specs in\n    --  To_Canonical_File_List.\n \n    type String_Access_List_Access is access all String_Access_List;\n@@ -282,7 +282,7 @@ package Osint is\n                            new String'(\"ada_source_path\");\n    Objects_Search_File : constant String_Access :=\n                            new String'(\"ada_object_path\");\n-   --  Names of the files containg the default include or objects search\n+   --  Names of the files containing the default include or objects search\n    --  directories. These files, located in Sdefault.Search_Dir_Prefix, do\n    --  not necessarily exist.\n \n@@ -344,7 +344,7 @@ package Osint is\n    --    LF\n \n    --  The source is terminated by an EOF (16#1A#) character, which is\n-   --  the last charcater of the returned source bufer (note that any\n+   --  the last character of the returned source buffer (note that any\n    --  EOF characters in positions other than the last source character\n    --  are treated as representing blanks).\n    --\n@@ -405,7 +405,7 @@ package Osint is\n    --  Source_File_Stamp (N) is made. This may be undesirable in certain\n    --  applications as this is uselessly slow if source file data does not\n    --  change during program execution. When this procedure is called with\n-   --  Cache => True access to source file data does not encurr a penalty if\n+   --  Cache => True access to source file data does not incur a penalty if\n    --  this data was previously retrieved.\n \n    -------------------------------------------\n@@ -458,7 +458,7 @@ package Osint is\n    --  whose name is given by the parameter Name.\n    --\n    --  See description of Read_Source_File for details on the format of the\n-   --  returned text buffer (the format is identical). THe lower bound of\n+   --  returned text buffer (the format is identical). The lower bound of\n    --  the Text_Buffer is always zero\n    --\n    --  If the specified file cannot be opened, then the action depends on\n@@ -484,7 +484,7 @@ package Osint is\n    --  using Read_Library_Info, including appropriate directory information.\n    --  Calling this routine entails no library file directory lookup\n    --  penalty. Note that the object file corresponding to a library file\n-   --  is not actually read. Its time stamp is fected when the flag\n+   --  is not actually read. Its time stamp is affected when the flag\n    --  Opt.Check_Object_Consistency is set.\n \n    function Current_Library_File_Stamp return Time_Stamp_Type;"}, {"sha": "7f7ef93fb3b8a8b3289d7a40fb26a3e11cf4778e", "filename": "gcc/ada/output.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Foutput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Foutput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -139,7 +139,7 @@ package Output is\n \n    procedure Restore_Output_Buffer (S : Saved_Output_Buffer);\n    --  Restore previously saved output buffer. The value in S is not affected\n-   --  so it is legtimate to restore a buffer more than once.\n+   --  so it is legitimate to restore a buffer more than once.\n \n    --------------------------\n    -- Debugging Procedures --"}, {"sha": "eb16fb1737b32463f8d398e01a29432abbffe61f", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -47,7 +47,7 @@ package body Ch10 is\n      (Cunit      : Node_Id;\n       Loc        : Source_Ptr;\n       SR_Present : Boolean);\n-   --  This procedure is used to generate a line of output for the a unit in\n+   --  This procedure is used to generate a line of output for a unit in\n    --  the source program. Cunit is the node for the compilation unit, and\n    --  Loc is the source location for the start of the unit in the source\n    --  file (which is not necessarily the Sloc of the Cunit node). This\n@@ -118,7 +118,7 @@ package body Ch10 is\n       Cunit_Error_Flag   : Boolean := False;\n       --  This flag is set True if we have to scan for a compilation unit\n       --  token. It is used to ensure clean termination in such cases by\n-      --  not insisting on being at the end of file, and, in the sytax only\n+      --  not insisting on being at the end of file, and, in the syntax only\n       --  case by not scanning for additional compilation units.\n \n       Cunit_Location : Source_Ptr;\n@@ -665,7 +665,7 @@ package body Ch10 is\n       if Token /= Tok_EOF then\n \n          --  If we already had to scan for a compilation unit, then don't\n-         --  give any further error message, since it just sems to make\n+         --  give any further error message, since it just seems to make\n          --  things worse, and we already gave a serious error message.\n \n          if Cunit_Error_Flag then\n@@ -899,7 +899,7 @@ package body Ch10 is\n                First_Flag := True;\n \n                --  Loop through names in one with clause, generating a separate\n-               --  N_With_Clause node for each nam encountered.\n+               --  N_With_Clause node for each name encountered.\n \n                loop\n                   With_Node := New_Node (N_With_Clause, Token_Ptr);"}, {"sha": "2ac26fee2c41bf163a6e6c7e3de7e1d0ab53dd01", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -830,7 +830,7 @@ package body Ch12 is\n    --    [abstract] [limited | synchronized]\n    --         new SUBTYPE_MARK [[and INTERFACE_LIST] with private]\n \n-   --  The caller has checked the initial token(s) is/are NEW, ASTRACT NEW,\n+   --  The caller has checked the initial token(s) is/are NEW, ABSTRACT NEW,\n    --  or LIMITED NEW, ABSTRACT LIMITED NEW, SYNCHRONIZED NEW or ABSTRACT\n    --  SYNCHRONIZED NEW.\n "}, {"sha": "d77e2c5a2b479a0fbdd8fc3131048069eda43cf1", "filename": "gcc/ada/par-ch2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch2.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -118,7 +118,7 @@ package body Ch2 is\n \n    --  DECIMAL_LITERAL ::= NUMERAL [.NUMERAL] [EXPONENT]\n \n-   --  Handled by scanner as part of numeric lIteral handing (see 2.4)\n+   --  Handled by scanner as part of numeric literal handing (see 2.4)\n \n    --------------------\n    -- 2.4.1  Numeral --"}, {"sha": "3a6fc11103266121b4019d5c0cbb8473624ab34d", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -412,7 +412,7 @@ package body Ch3 is\n          Scan; -- past ALIASED\n       end if;\n \n-      --  The following procesing deals with either a private type declaration\n+      --  The following processing deals with either a private type declaration\n       --  or a full type declaration. In the private type case, we build the\n       --  N_Private_Type_Declaration node, setting its Tagged_Present and\n       --  Limited_Present flags, on encountering the Private keyword, and\n@@ -2070,7 +2070,7 @@ package body Ch3 is\n          return Range_Node;\n \n       --  Case of subtype mark (optionally qualified simple name or an\n-      --  attribute whose prefix is an optionally qualifed simple name)\n+      --  attribute whose prefix is an optionally qualified simple name)\n \n       elsif Expr_Form = EF_Simple_Name\n         or else Nkind (Expr_Node) = N_Attribute_Reference\n@@ -2883,7 +2883,7 @@ package body Ch3 is\n    end P_Known_Discriminant_Part_Opt;\n \n    -------------------------------------\n-   -- 3.7  DIscriminant Specification --\n+   -- 3.7  Discriminant Specification --\n    -------------------------------------\n \n    --  Parsed by P_Known_Discriminant_Part_Opt (3.7)\n@@ -3657,7 +3657,7 @@ package body Ch3 is\n \n       --  Ada 2005 (AI-251): In case of not-synchronized interfaces that have\n       --  a list of interfaces we build a derived_type_definition node. This\n-      --  simplifies the semantic analysis (and hence further mainteinance)\n+      --  simplifies the semantic analysis (and hence further maintenance)\n \n       else\n          if Token /= Tok_And then"}, {"sha": "cd2d6c9976cf3c8f030deb614f79e230ea56f8bb", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -1143,9 +1143,9 @@ package body Ch4 is\n       end if;\n    end P_Aggregate;\n \n-   -------------------------------------------------\n-   -- 4.3  Aggregate or Parenthesized Expresssion --\n-   -------------------------------------------------\n+   ------------------------------------------------\n+   -- 4.3  Aggregate or Parenthesized Expression --\n+   ------------------------------------------------\n \n    --  This procedure parses out either an aggregate or a parenthesized\n    --  expression (these two constructs are closely related, since a\n@@ -1898,7 +1898,7 @@ package body Ch4 is\n             Node1 := P_Term;\n          end if;\n \n-         --  In the following, we special-case a sequence of concatentations of\n+         --  In the following, we special-case a sequence of concatenations of\n          --  string literals, such as \"aaa\" & \"bbb\" & ... & \"ccc\", with nothing\n          --  else mixed in. For such a sequence, we return a tree representing\n          --  \"\" & \"aaabbb...ccc\" (a single concatenation). This is done only if"}, {"sha": "5129b1e867ffd6a69536356059a3c7fb25dbcea1", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -984,7 +984,7 @@ package body Ch5 is\n \n    --  LABEL ::= <<label_STATEMENT_IDENTIFIER>>\n \n-   --  STATEMENT_INDENTIFIER ::= DIRECT_NAME\n+   --  STATEMENT_IDENTIFIER ::= DIRECT_NAME\n \n    --  The IDENTIFIER of a STATEMENT_IDENTIFIER shall be an identifier\n    --  (not an OPERATOR_SYMBOL)"}, {"sha": "7879b1dd83e1308553e8d95a65c05f4d5a6fef86", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -202,7 +202,7 @@ package body Ch6 is\n \n       --  Note: in the case of OVERRIDING keyword used in Ada 95 mode, the\n       --  declaration circuit already gave an error message and changed the\n-      --  tokem to Tok_Overriding.\n+      --  token to Tok_Overriding.\n \n       elsif Token = Tok_Overriding then\n          Scan;  --  past OVERRIDING"}, {"sha": "6a24776e488880e90bb2bb6c5ad9a81d78729a6c", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -847,7 +847,8 @@ package body Ch9 is\n                Restore_Scan_State (Scan_State); -- to Id\n                Set_Parameter_Specifications (Decl_Node, P_Formal_Part);\n \n-            --  Else if Id wi no comma or colon, must be discrete subtype defn\n+            --  Else if Id without comma or colon, must be discrete subtype\n+            --  defn\n \n             else\n                Restore_Scan_State (Scan_State); -- to Id\n@@ -1358,7 +1359,7 @@ package body Ch9 is\n             Ecall_Node := P_Name;\n \n             --  ??  The following two clauses exactly parallel code in ch5\n-            --      and should be commoned sometime\n+            --      and should be combined sometime\n \n             if Nkind (Ecall_Node) = N_Indexed_Component then\n                declare\n@@ -1477,7 +1478,7 @@ package body Ch9 is\n \n          End_Statements;\n \n-      --  Here we have a selective accept or an an asynchronous select (first\n+      --  Here we have a selective accept or an asynchronous select (first\n       --  token after SELECT is other than a designator token).\n \n       else\n@@ -1668,7 +1669,7 @@ package body Ch9 is\n \n       --  Note: the reason that we accept THEN ABORT as a terminator for\n       --  the sequence of statements is for error recovery which allows\n-      --  for misuse of an accept statement as a triggering statememt.\n+      --  for misuse of an accept statement as a triggering statement.\n \n       Set_Statements\n         (Accept_Alt_Node, P_Sequence_Of_Statements (SS_Eltm_Ortm_Tatm));\n@@ -1696,7 +1697,7 @@ package body Ch9 is\n \n       --  Note: the reason that we accept THEN ABORT as a terminator for\n       --  the sequence of statements is for error recovery which allows\n-      --  for misuse of an accept statement as a triggering statememt.\n+      --  for misuse of an accept statement as a triggering statement.\n \n       Set_Statements\n         (Delay_Alt_Node, P_Sequence_Of_Statements (SS_Eltm_Ortm_Tatm));"}, {"sha": "585e9c7d45a77dbcec81468dcfedea7408160f20", "filename": "gcc/ada/par-endh.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-endh.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-endh.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-endh.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -302,7 +302,7 @@ package body Endh is\n                   --  opening label, with the components all marked as not\n                   --  from source, and Is_End_Label set in the identifier\n                   --  or operator symbol. The location for all components\n-                  --  is the curent token location.\n+                  --  is the current token location.\n \n                   --  Case of child unit name\n \n@@ -975,7 +975,7 @@ package body Endh is\n       else\n          --  A special check. If we have END; followed by an end of file,\n          --  WITH or SEPARATE, then if we are not at the outer level, then\n-         --  we have a sytax error. Consider the example:\n+         --  we have a syntax error. Consider the example:\n \n          --   ...\n          --      declare\n@@ -1128,7 +1128,7 @@ package body Endh is\n \n          --  First we see how good the current END entry is with respect to\n          --  what we expect. It is considered pretty good if the token is OK,\n-         --  and either the label or the column matches. an END for RECORD is\n+         --  and either the label or the column matches. An END for RECORD is\n          --  always considered to be pretty good in the record case. This is\n          --  because not only does a record disallow a nested structure, but\n          --  also it is unlikely that such nesting could occur by accident."}, {"sha": "bc2a47eeec66ddd2e72ec17736937955cdf79619", "filename": "gcc/ada/par-labl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-labl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-labl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-labl.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -177,10 +177,10 @@ procedure Labl is\n \n       procedure No_Header (N : Elmt_Id);\n       --  The label N is known not to be a loop header. Scan forward and\n-      --  remove all subsequent goto's that may have this node as a target.\n+      --  remove all subsequent gotos that may have this node as a target.\n \n       procedure Process_Goto (N : Elmt_Id);\n-      --  N is a forward jump. Scan forward and remove all subsequent goto's\n+      --  N is a forward jump. Scan forward and remove all subsequent gotos\n       --  that may have the same target, to preclude spurious loops.\n \n       procedure Rewrite_As_Loop"}, {"sha": "20375423f7f7f224b79f9a4b70b0e9d8f5118e8e", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -527,7 +527,7 @@ begin\n             --  Process Casing argument of pattern form of pragma\n \n             procedure Process_Dot_Replacement (Arg : Node_Id);\n-            --  Process Dot_Replacement argument of patterm form of pragma\n+            --  Process Dot_Replacement argument of pattern form of pragma\n \n             ---------------\n             -- Get_Fname --"}, {"sha": "b4f4189f1237ea04a4a08ad78dd7b2a246626755", "filename": "gcc/ada/par-sync.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-sync.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-sync.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-sync.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -81,7 +81,7 @@ package body Sync is\n       loop\n          --  Terminating tokens are those in class Eterm and also RANGE,\n          --  DIGITS or DELTA if not preceded by an apostrophe (if they are\n-         --  preceded by an apostrophe, then they are attributes). In addiion,\n+         --  preceded by an apostrophe, then they are attributes). In addition,\n          --  at the outer parentheses level only, we also consider a comma,\n          --  right parenthesis or vertical bar to terminate an expression.\n \n@@ -132,7 +132,7 @@ package body Sync is\n    procedure Resync_Init is\n    begin\n       --  The following check makes sure we do not get stuck in an infinite\n-      --  loop resynchonizing and getting nowhere. If we are called to do a\n+      --  loop resynchronizing and getting nowhere. If we are called to do a\n       --  resynchronize and we are exactly at the same point that we left off\n       --  on the last resynchronize call, then we force at least one token to\n       --  be skipped so that we make progress!\n@@ -255,7 +255,7 @@ package body Sync is\n          end if;\n       end loop;\n \n-      --  Fall out of loop with resyncrhonization complete\n+      --  Fall out of loop with resynchronization complete\n \n       Resync_Resume;\n    end Resync_Past_Semicolon_Or_To_Loop_Or_Then;\n@@ -299,7 +299,7 @@ package body Sync is\n          end if;\n       end loop;\n \n-      --  Fall out of loop with resyncrhonization complete\n+      --  Fall out of loop with resynchronization complete\n \n       Resync_Resume;\n    end Resync_To_When;"}, {"sha": "634e5b322e1cf66f3632f0678e8db5f4902ad80c", "filename": "gcc/ada/par-tchk.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-tchk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-tchk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-tchk.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -692,7 +692,7 @@ package body Tchk is\n       else\n          --  Deal with pragma. If pragma is not at start of line, it is\n          --  considered misplaced otherwise we treat it as a normal\n-         --  missing semicolong case.\n+         --  missing semicolon case.\n \n          if Token = Tok_Pragma\n            and then not Token_Is_At_Start_Of_Line"}, {"sha": "6ce3187535163754ae9832f2ba74fe0d3fb14855", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -76,7 +76,7 @@ package body Util is\n          Token := T;\n          return True;\n \n-      --  A special check for an illegal abbrevation\n+      --  A special check for an illegal abbreviation\n \n       elsif Name_Len < S'Length\n         and then Name_Len >= 4"}, {"sha": "a76ee2593e98b2bb77d0d9213a5f2c9c6731cea7", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -187,7 +187,7 @@ is\n    --   4. We encounter a valid pragma INTERFACE or IMPORT that effectively\n    --   supplies the missing body. In this case we reset the entry.\n \n-   --   5. We encounter the end of the declarative region without encoutering\n+   --   5. We encounter the end of the declarative region without encountering\n    --   a BEGIN first. In this situation we simply reset the entry. We know\n    --   that there is a missing body, but it seems more reasonable to let the\n    --   later semantic checking discover this.\n@@ -197,7 +197,7 @@ is\n    ----------------------------------------------------\n \n    --  Note: throughout the parser, the terms reserved word and keyword\n-   --  are used interchangably to refer to the same set of reserved\n+   --  are used interchangeably to refer to the same set of reserved\n    --  keywords (including until, protected, etc).\n \n    --  If a reserved word is used in place of an identifier, the parser\n@@ -213,14 +213,14 @@ is\n    --  further confirmation.\n \n    --  In the case of an identifier appearing in the identifier list of a\n-   --  declaration, the appearence of a comma or colon right after the\n+   --  declaration, the appearance of a comma or colon right after the\n    --  keyword on the same line is taken as confirmation. For an enumeration\n    --  literal, a comma or right paren right after the identifier is also\n    --  treated as adequate confirmation.\n \n    --  The following type is used in calls to Is_Reserved_Identifier and\n    --  also to P_Defining_Identifier and P_Identifier. The default for all\n-   --  these functins is that reserved words in reserved word case are not\n+   --  these functions is that reserved words in reserved word case are not\n    --  considered to be reserved identifiers. The Id_Check value indicates\n    --  tokens, which if they appear immediately after the identifier, are\n    --  taken as confirming that the use of an identifier was expected\n@@ -282,7 +282,7 @@ is\n    --    end;\n \n    --  The trouble is that the section of text from PROCEDURE B through END;\n-   --  consitutes a valid procedure body, and the danger is that we find out\n+   --  constitutes a valid procedure body, and the danger is that we find out\n    --  far too late that something is wrong (indeed most compilers will behave\n    --  uncomfortably on the above example).\n \n@@ -296,7 +296,7 @@ is\n    --  reserve the END; for the outer level.) For more details on this aspect\n    --  of the handling, see package Par.Endh.\n \n-   --  If we can avoid eating up the END; then the result in the absense of\n+   --  If we can avoid eating up the END; then the result in the absence of\n    --  any additional steps would be to post a missing END referring back to\n    --  the subprogram with the bogus IS. Similarly, if the enclosing package\n    --  has no BEGIN, then the result is a missing BEGIN message, which again\n@@ -637,7 +637,7 @@ is\n       --  allowed).\n \n       procedure Skip_Declaration (S : List_Id);\n-      --  Used when scanning statements to skip past a mispaced declaration\n+      --  Used when scanning statements to skip past a misplaced declaration\n       --  The declaration is scanned out and appended to the given list.\n       --  Token is known to be a declaration token (in Token_Class_Declk)\n       --  on entry, so there definition is a declaration to be scanned.\n@@ -914,7 +914,7 @@ is\n       --  Used if an error occurs while scanning a parenthesized list of items\n       --  separated by semicolons. The scan pointer is advanced to the next\n       --  semicolon or right parenthesis at the outer parenthesis level, or\n-      --  to the next is or RETURN keyword occurence, whichever comes first.\n+      --  to the next is or RETURN keyword occurrence, whichever comes first.\n \n       procedure Resync_Cunit;\n       --  Synchronize to next token which could be the start of a compilation"}, {"sha": "eb739a752745f70d7d555f68b3da2ae619f6276d", "filename": "gcc/ada/prep.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprep.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -732,7 +732,7 @@ package body Prep is\n    procedure List_Symbols (Foreword : String) is\n       Order : array (0 ..  Integer (Symbol_Table.Last (Mapping)))\n                  of Symbol_Id;\n-      --  After alphabetical sorting, this array stores thehe indices of\n+      --  After alphabetical sorting, this array stores the indices of\n       --  the symbols in the order they are displayed.\n \n       function Lt (Op1, Op2 : Natural) return Boolean;\n@@ -1438,7 +1438,7 @@ package body Prep is\n          end if;\n \n          --  Now, scan the first token of the next line. If the token is EOF,\n-         --  the scan ponter will not move, and the token will still be EOF.\n+         --  the scan pointer will not move, and the token will still be EOF.\n \n          Set_Ignore_Errors (To => True);\n          Scan.all;"}, {"sha": "198ddb4159f2e88ba9d8d8814e92e9b5234e5541", "filename": "gcc/ada/prep.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprep.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprep.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprep.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -124,7 +124,7 @@ package Prep is\n    --  Tok_Identifier with the corresponding Token_Name.\n \n    procedure List_Symbols (Foreword : String);\n-   --  List the symbols used por preprocessing a file, with their values.\n+   --  List the symbols used for preprocessing a file, with their values.\n    --  If Foreword is not empty, Output Foreword before the list.\n \n end Prep;"}, {"sha": "818bb49e22b480f7ce4f63dd341916f6ffdcedc6", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -245,7 +245,8 @@ package body Prepcomp is\n                \"\"\" not found\");\n       end if;\n \n-      --  Initialize the sanner and set its behavior for a processing data file\n+      --  Initialize the scanner and set its behavior for a processing data\n+      --  file\n \n       Scn.Scanner.Initialize_Scanner (Source_Index_Of_Preproc_Data_File);\n       Scn.Scanner.Set_End_Of_Line_As_Token (True);"}, {"sha": "fd615b08604cd4b2eaacaef372ad0fc29d3979ee", "filename": "gcc/ada/prj-attr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -38,7 +38,7 @@ package Prj.Attr is\n    function Package_Name_List return Strings.String_List;\n    --  Returns the list of valid package names, including those added by\n    --  procedures Register_New_Package below. The String_Access components of\n-   --  the returned String_List should never be feeed.\n+   --  the returned String_List should never be freed.\n \n    procedure Initialize;\n    --  Initialize the predefined project level attributes and the predefined"}, {"sha": "5fb13eaa27f2d1804d8884c197f8c6c5c9a0fe92", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -75,7 +75,7 @@ package body Prj.Dect is\n       Current_Package   : Project_Node_Id;\n       Packages_To_Check : String_List_Access);\n    --  Parse declarative items. Depending on In_Zone, some declarative\n-   --  items may be forbiden.\n+   --  items may be forbidden.\n \n    procedure Parse_Package_Declaration\n      (In_Tree             : Project_Node_Tree_Ref;\n@@ -916,7 +916,7 @@ package body Prj.Dect is\n             when others =>\n                exit;\n \n-               --  We are leaving Parse_Declarative_Items positionned\n+               --  We are leaving Parse_Declarative_Items positioned\n                --  at the first token after the list of declarative items.\n                --  It could be \"end\" (for a project, a package declaration or\n                --  a case construction) or \"when\" (for a case construction)"}, {"sha": "bbc45c57d3c076721e994b800779fb2045d0afcf", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -2351,7 +2351,7 @@ package body Prj.Env is\n                         --  For a non-library project, add the object\n                         --  directory, if it is not a virtual project, and if\n                         --  there are Ada sources or if the project is an\n-                        --  extending project. if There Are No Ada sources,\n+                        --  extending project. If there are no Ada sources,\n                         --  adding the object directory could disrupt the order\n                         --  of the object dirs in the path.\n "}, {"sha": "384fe104cb29ae25368ca86d0d55970e554c52a5", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -180,7 +180,7 @@ package body Prj.Ext is\n       end if;\n \n       --  Scan the directory path to see if \"-\" is one of the directories.\n-      --  Remove each occurence of \"-\" and set Add_Default_Dir to False.\n+      --  Remove each occurrence of \"-\" and set Add_Default_Dir to False.\n       --  Also resolve relative paths and symbolic links.\n \n       First := 3;"}, {"sha": "f5ff22b84cc55515a974411e4cc1ff063a74805c", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -4127,7 +4127,7 @@ package body Prj.Nmsc is\n             Suffix2 : Array_Element_Id;\n \n          begin\n-            --  If some suffixs have been specified, we make sure that\n+            --  If some suffixes have been specified, we make sure that\n             --  for each language for which a default suffix has been\n             --  specified, there is a suffix specified, either the one\n             --  in the project file or if there were none, the default.\n@@ -4169,7 +4169,7 @@ package body Prj.Nmsc is\n                   Suffix := Element.Next;\n                end loop;\n \n-               --  Put the resulting array as the specification suffixs\n+               --  Put the resulting array as the specification suffixes\n \n                Data.Naming.Spec_Suffix := Spec_Suffixs;\n             end if;\n@@ -4251,7 +4251,7 @@ package body Prj.Nmsc is\n                   Suffix := Element.Next;\n                end loop;\n \n-               --  Put the resulting array as the implementation suffixs\n+               --  Put the resulting array as the implementation suffixes\n \n                Data.Naming.Body_Suffix := Impl_Suffixs;\n             end if;\n@@ -5179,7 +5179,7 @@ package body Prj.Nmsc is\n          end if;\n \n          --  If attribute Library_Reference_Symbol_File is not defined,\n-         --  symbol policy cannot be Compilant or Controlled.\n+         --  symbol policy cannot be Compliant or Controlled.\n \n          if Lib_Ref_Symbol_File.Default then\n             if Data.Symbol_Data.Symbol_Policy = Compliant"}, {"sha": "c4626b15deddee0d77306267c8767fd83d972e19", "filename": "gcc/ada/prj-nmsc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-nmsc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-nmsc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -28,7 +28,7 @@\n private package Prj.Nmsc is\n \n    --  It would be nicer to have a higher level statement of what these\n-   --  procedures do (related to their names), rather than just an english\n+   --  procedures do (related to their names), rather than just an English\n    --  language summary of the implementation ???\n \n    procedure Check"}, {"sha": "c8dc931a98253d5576693ee60003cb785f8cf9e6", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -40,7 +40,7 @@ package body Prj.PP is\n \n    Column : Natural := 0;\n    --  Column number of the last character in the line. Used to avoid\n-   --  outputing lines longer than Max_Line_Length.\n+   --  outputting lines longer than Max_Line_Length.\n \n    First_With_In_List : Boolean := True;\n    --  Indicate that the next with clause is first in a list such as"}, {"sha": "c0554223a3109c4fba4acfa755538af307ed17bd", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -2001,7 +2001,7 @@ package body Prj.Proc is\n \n                            --  If no such element were found, create a new one\n                            --  and insert it in the element list, with the\n-                           --  propoer value.\n+                           --  proper value.\n \n                            if The_Array_Element = No_Array_Element then\n                               Array_Element_Table.Increment_Last\n@@ -2680,9 +2680,9 @@ package body Prj.Proc is\n                                            From_Project_Node_Tree));\n \n             --  If it is an extending project, inherit all packages\n-            --  from the extended project that are not explicitely defined\n+            --  from the extended project that are not explicitly defined\n             --  or renamed. Also inherit the languages, if attribute Languages\n-            --  is not explicitely defined.\n+            --  is not explicitly defined.\n \n             Processed_Data := In_Tree.Projects.Table (Project);\n "}, {"sha": "19173003eac20831b18f2ac4fa8c1b94ee41aa91", "filename": "gcc/ada/prj-strt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-strt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-strt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -101,6 +101,6 @@ private package Prj.Strt is\n    --  On exit, Variable is the node of the variable or attribute reference.\n    --  A variable reference is made of one to three simple names.\n    --  An attribute reference is made of one or two simple names,\n-   --  followed by an apostroph, followed by the attribute simple name.\n+   --  followed by an apostrophe, followed by the attribute simple name.\n \n end Prj.Strt;"}, {"sha": "19d600f4f6cd5be46de15ad4d41a66b7c0ea09e2", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -63,7 +63,7 @@ package Prj.Tree is\n    --  N_Variable_Reference.\n \n    subtype Package_Declaration_Id is Project_Node_Id;\n-   --  Used to designate a node whose expected kind is N_Proect_Declaration\n+   --  Used to designate a node whose expected kind is N_Project_Declaration\n \n    type Project_Node_Kind is\n      (N_Project,\n@@ -941,7 +941,7 @@ package Prj.Tree is\n \n          Src_Index : Int := 0;\n          --  Index of a unit in a multi-unit source.\n-         --  Onli for some N_Attribute_Declaration and N_Literal_String.\n+         --  Only for some N_Attribute_Declaration and N_Literal_String.\n \n          Path_Name : Path_Name_Type := No_Path;\n          --  See below for what Project_Node_Kind it is used\n@@ -960,7 +960,7 @@ package Prj.Tree is\n \n          Flag1 : Boolean := False;\n          --  This flag is significant only for:\n-         --    N_Attribute_Declaration and N_Atribute_Reference\n+         --    N_Attribute_Declaration and N_Attribute_Reference\n          --      It indicates for an associative array attribute, that the\n          --      index is case insensitive.\n          --    N_Comment - it indicates that the comment is preceded by an"}, {"sha": "f5752161297dcf7fa02e203fc78911c97d1e43bb", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -881,7 +881,7 @@ package body Prj is\n       Name_Buffer (1 .. Name_Len) := To_Lower (Name_Buffer (1 .. Name_Len));\n       Lang := Name_Find;\n \n-      --  Look for an element of the spec sufix array indexed by the language\n+      --  Look for an element of the spec suffix array indexed by the language\n       --  name. If one is found, put the default value.\n \n       Suffix := In_Tree.Private_Part.Default_Naming.Spec_Suffix;\n@@ -921,7 +921,7 @@ package body Prj is\n            Array_Element_Table.Last (In_Tree.Array_Elements);\n       end if;\n \n-      --  Look for an element of the body sufix array indexed by the language\n+      --  Look for an element of the body suffix array indexed by the language\n       --  name. If one is found, put the default value.\n \n       Suffix := In_Tree.Private_Part.Default_Naming.Body_Suffix;"}, {"sha": "4f6f37f45b7139138d6c78cc845e8a261687e9b6", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec55d763c498096e4f8211e212c8b0631829ce6/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=dec55d763c498096e4f8211e212c8b0631829ce6", "patch": "@@ -371,7 +371,7 @@ package Prj is\n       --  unit based.\n \n       Naming_Data : Lang_Naming_Data;\n-      --  The naming data for the languages (prefixs, etc)\n+      --  The naming data for the languages (prefixes, etc.)\n \n       Compiler_Driver : File_Name_Type := No_File;\n       --  The name of the executable for the compiler of the language\n@@ -470,7 +470,7 @@ package Prj is\n       --  Hold the value of attribute Binder'Required_Switches for the language\n \n       Binder_Prefix              : Name_Id         := No_Name;\n-      --  Hold the value of attribute Binder'Prefixthe language\n+      --  Hold the value of attribute Binder'Prefix for the language\n \n       Toolchain_Version          : Name_Id         := No_Name;\n       --  Hold the value of attribute Toolchain_Version for the language"}]}