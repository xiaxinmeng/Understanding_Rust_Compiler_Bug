{"sha": "41e0c1a3ad9655a4a7bef8337f9940528181a2a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFlMGMxYTNhZDk2NTVhNGE3YmVmODMzN2Y5OTQwNTI4MTgxYTJhMQ==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2006-01-13T23:26:47Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2006-01-13T23:26:47Z"}, "message": "20060110-1.c: New test.\n\n\t* gcc.c-torture/execute/20060110-1.c: New test.\n\t* gcc.c-torture/execute/20060110-2.c: New test.\n\nFrom-SVN: r109680", "tree": {"sha": "01e7279356791dbc65b1b824a2d655e88e05111f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01e7279356791dbc65b1b824a2d655e88e05111f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41e0c1a3ad9655a4a7bef8337f9940528181a2a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e0c1a3ad9655a4a7bef8337f9940528181a2a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41e0c1a3ad9655a4a7bef8337f9940528181a2a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e0c1a3ad9655a4a7bef8337f9940528181a2a1/comments", "author": null, "committer": null, "parents": [{"sha": "4df8acd3c82998c4f18ec1fd3ee97b6d81c61135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4df8acd3c82998c4f18ec1fd3ee97b6d81c61135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4df8acd3c82998c4f18ec1fd3ee97b6d81c61135"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "cca26ea953d872f3ba964bc5043d868d70e6d8ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41e0c1a3ad9655a4a7bef8337f9940528181a2a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41e0c1a3ad9655a4a7bef8337f9940528181a2a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41e0c1a3ad9655a4a7bef8337f9940528181a2a1", "patch": "@@ -1,3 +1,8 @@\n+2006-01-13  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* gcc.c-torture/execute/20060110-1.c: New test.\n+\t* gcc.c-torture/execute/20060110-2.c: New test.\n+\n 2006-01-13  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* gcc.c-torture/compile/pr25310.c: Disable test on 16-bit targets."}, {"sha": "112528ecf70f9e6796288aae8268034bdc1e4530", "filename": "gcc/testsuite/gcc.c-torture/execute/20060110-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41e0c1a3ad9655a4a7bef8337f9940528181a2a1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060110-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41e0c1a3ad9655a4a7bef8337f9940528181a2a1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060110-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060110-1.c?ref=41e0c1a3ad9655a4a7bef8337f9940528181a2a1", "patch": "@@ -0,0 +1,16 @@\n+extern void abort (void);\n+\n+long long \n+f (long long a) \n+{ \n+  return (a << 32) >> 32; \n+} \n+long long a = 0x1234567876543210LL;\n+long long b = (0x1234567876543210LL << 32) >> 32;\n+int\n+main ()\n+{\n+  if (f (a) != b)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "bf60f94366a94124a734677a5e747521ee0f9433", "filename": "gcc/testsuite/gcc.c-torture/execute/20060110-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41e0c1a3ad9655a4a7bef8337f9940528181a2a1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060110-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41e0c1a3ad9655a4a7bef8337f9940528181a2a1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060110-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060110-2.c?ref=41e0c1a3ad9655a4a7bef8337f9940528181a2a1", "patch": "@@ -0,0 +1,19 @@\n+extern void abort (void);\n+\n+long long \n+f (long long a, long long b) \n+{ \n+  return ((a + b) << 32) >> 32; \n+} \n+\n+long long a = 0x1234567876543210LL;\n+long long b = 0x2345678765432101LL;\n+long long c = ((0x1234567876543210LL + 0x2345678765432101LL) << 32) >> 32;\n+\n+int\n+main ()\n+{\n+  if (f (a, b) != c)\n+    abort ();\n+  return 0;\n+}"}]}