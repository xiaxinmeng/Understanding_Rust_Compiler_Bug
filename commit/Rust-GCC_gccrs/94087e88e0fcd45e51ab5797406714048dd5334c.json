{"sha": "94087e88e0fcd45e51ab5797406714048dd5334c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQwODdlODhlMGZjZDQ1ZTUxYWI1Nzk3NDA2NzE0MDQ4ZGQ1MzM0Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-02T17:11:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-02T17:11:42Z"}, "message": "re PR sanitizer/77396 (address  sanitizer crashes if all static global variables are optimized)\n\n\tPR sanitizer/77396\n\t* sanopt.c: Include gimple-ssa.h, tree-phinodes.h and ssa-iterators.h.\n\t(sanopt_optimize_walker): Optimize away\n\t__asan_before_dynamic_init (...) followed by\n\t__asan_after_dynamic_init () without intervening memory loads/stores.\n\t* ipa-pure-const.c (special_builtin_state): Handle\n\tBUILT_IN_ASAN_BEFORE_DYNAMIC_INIT and\n\tBUILT_IN_ASAN_AFTER_DYNAMIC_INIT.\n\n\t* decl2.c (do_static_initialization_or_destruction): Only\n\tcall asan_dynamic_init_call if INITP is true.\n\n\t* g++.dg/asan/pr77396.C: New test.\n\nFrom-SVN: r239961", "tree": {"sha": "fbe11b6178ba7e9156879fe0f685cee7e04473c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbe11b6178ba7e9156879fe0f685cee7e04473c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94087e88e0fcd45e51ab5797406714048dd5334c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94087e88e0fcd45e51ab5797406714048dd5334c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94087e88e0fcd45e51ab5797406714048dd5334c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94087e88e0fcd45e51ab5797406714048dd5334c/comments", "author": null, "committer": null, "parents": [{"sha": "af711c232d854adacd147897c1886cadeb4391f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af711c232d854adacd147897c1886cadeb4391f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af711c232d854adacd147897c1886cadeb4391f2"}], "stats": {"total": 87, "additions": 74, "deletions": 13}, "files": [{"sha": "c57c89ef80d111f635ca06dfe99fe56d34e88549", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94087e88e0fcd45e51ab5797406714048dd5334c", "patch": "@@ -1,3 +1,14 @@\n+2016-09-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/77396\n+\t* sanopt.c: Include gimple-ssa.h, tree-phinodes.h and ssa-iterators.h.\n+\t(sanopt_optimize_walker): Optimize away\n+\t__asan_before_dynamic_init (...) followed by\n+\t__asan_after_dynamic_init () without intervening memory loads/stores.\n+\t* ipa-pure-const.c (special_builtin_state): Handle\n+\tBUILT_IN_ASAN_BEFORE_DYNAMIC_INIT and\n+\tBUILT_IN_ASAN_AFTER_DYNAMIC_INIT.\n+\n 2016-09-02  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* cfg.c (free_original_copy_tables): Replace second assignment of\n@@ -28,7 +39,7 @@\n \t* ipa-cp.c (ipcp_store_bits_results): Change option name from\n \t-fipa-cp-bit to -fipa-bit-cp.\n \n-2016-09-01 Martin Sebor  <msebor@redhat.com>\n+2016-09-01  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/71831\n \t* tree-object-size.h: Return bool instead of the size and add\n@@ -45,7 +56,7 @@\n \t* doc/extend.texi (Object Size Checking): Update.\n \t* ubsan.c (instrument_object_size): Adjust.\n \n-2016-09-01 Martin Sebor  <msebor@redhat.com>\n+2016-09-01  Martin Sebor  <msebor@redhat.com>\n \n \t* genmatch.c (parser::parse_expr): Increase buffer size to guarantee\n \tit fits the output of the formatted function regardless of its\n@@ -3487,11 +3498,11 @@\n \t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):\n \tReformat two multi-line strings.\n \n-2016-07-22 Martin Sebor  <msebor@redhat.com>\n+2016-07-22  Martin Sebor  <msebor@redhat.com>\n \n \t* doc/extend.texi (Compound Literals): Add '@' missed in last commit.\n \n-2016-07-22 Martin Sebor  <msebor@redhat.com>\n+2016-07-22  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/71560\n \t* doc/extend.texi (Compound Literals): Correct and clarify."}, {"sha": "2073e2778573c08b9e6b8f45a7611eac2f5ace82", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=94087e88e0fcd45e51ab5797406714048dd5334c", "patch": "@@ -1,4 +1,10 @@\n-2016-09-01 Martin Sebor  <msebor@redhat.com>\n+2016-09-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/77396\n+\t* decl2.c (do_static_initialization_or_destruction): Only\n+\tcall asan_dynamic_init_call if INITP is true.\n+\n+2016-09-01  Martin Sebor  <msebor@redhat.com>\n \n \t* mangle.c: Increase buffer size to guarantee it fits the output\n \tof the formatted function regardless of its arguments.\n@@ -299,7 +305,7 @@\n \t* cp-gimplify.c (cp_fully_fold): Only maybe_constant_value in\n \tC++11 and up.\n \n-2016-07-30 Martin Sebor  <msebor@redhat.com>\n+2016-07-30  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/60760\n \tPR c++/71091"}, {"sha": "2ba5ffb31dca4ebd015b9dc5d49e537d2dc00736", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=94087e88e0fcd45e51ab5797406714048dd5334c", "patch": "@@ -3861,7 +3861,7 @@ do_static_initialization_or_destruction (tree vars, bool initp)\n      in other compilation units, or at least those that haven't been\n      initialized yet.  Variables that need dynamic construction in\n      the current compilation unit are kept accessible.  */\n-  if (flag_sanitize & SANITIZE_ADDRESS)\n+  if (initp && (flag_sanitize & SANITIZE_ADDRESS))\n     finish_expr_stmt (asan_dynamic_init_call (/*after_p=*/false));\n \n   node = vars;\n@@ -3914,7 +3914,7 @@ do_static_initialization_or_destruction (tree vars, bool initp)\n \n   /* Revert what __asan_before_dynamic_init did by calling\n      __asan_after_dynamic_init.  */\n-  if (flag_sanitize & SANITIZE_ADDRESS)\n+  if (initp && (flag_sanitize & SANITIZE_ADDRESS))\n     finish_expr_stmt (asan_dynamic_init_call (/*after_p=*/true));\n \n   /* Finish up the init/destruct if-stmt body.  */"}, {"sha": "9732cbff12e401d183a08678c3f0fad359751430", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=94087e88e0fcd45e51ab5797406714048dd5334c", "patch": "@@ -508,6 +508,8 @@ special_builtin_state (enum pure_const_state_e *state, bool *looping,\n \tcase BUILT_IN_FRAME_ADDRESS:\n \tcase BUILT_IN_APPLY:\n \tcase BUILT_IN_APPLY_ARGS:\n+\tcase BUILT_IN_ASAN_BEFORE_DYNAMIC_INIT:\n+\tcase BUILT_IN_ASAN_AFTER_DYNAMIC_INIT:\n \t  *looping = false;\n \t  *state = IPA_CONST;\n \t  return true;"}, {"sha": "eeb4cd00de0c8c29ab15a64a7db1996f58dcb728", "filename": "gcc/sanopt.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Fsanopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Fsanopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanopt.c?ref=94087e88e0fcd45e51ab5797406714048dd5334c", "patch": "@@ -33,6 +33,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ubsan.h\"\n #include \"params.h\"\n #include \"tree-hash-traits.h\"\n+#include \"gimple-ssa.h\"\n+#include \"tree-phinodes.h\"\n+#include \"ssa-iterators.h\"\n \n \n /* This is used to carry information about basic blocks.  It is\n@@ -538,6 +541,28 @@ sanopt_optimize_walker (basic_block bb, struct sanopt_ctx *ctx)\n       if (asan_check_optimize && !nonfreeing_call_p (stmt))\n \tinfo->freeing_call_events++;\n \n+      /* If __asan_before_dynamic_init (\"module\"); is followed by\n+\t __asan_after_dynamic_init (); without intervening memory loads/stores,\n+\t there is nothing to guard, so optimize both away.  */\n+      if (asan_check_optimize\n+\t  && gimple_call_builtin_p (stmt, BUILT_IN_ASAN_BEFORE_DYNAMIC_INIT))\n+\t{\n+\t  use_operand_p use;\n+\t  gimple *use_stmt;\n+\t  if (single_imm_use (gimple_vdef (stmt), &use, &use_stmt))\n+\t    {\n+\t      if (is_gimple_call (use_stmt)\n+\t\t  && gimple_call_builtin_p (use_stmt,\n+\t\t\t\t\t    BUILT_IN_ASAN_AFTER_DYNAMIC_INIT))\n+\t\t{\n+\t\t  unlink_stmt_vdef (use_stmt);\n+\t\t  gimple_stmt_iterator gsi2 = gsi_for_stmt (use_stmt);\n+\t\t  gsi_remove (&gsi2, true);\n+\t\t  remove = true;\n+\t\t}\n+\t    }\n+\t}\n+\n       if (gimple_call_internal_p (stmt))\n \tswitch (gimple_call_internal_fn (stmt))\n \t  {"}, {"sha": "4e31cbea08809f33062223959ff56ea0f7182b68", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94087e88e0fcd45e51ab5797406714048dd5334c", "patch": "@@ -1,4 +1,9 @@\n-2016-09-01 Martin Sebor  <msebor@redhat.com>\n+2016-09-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/77396\n+\t* g++.dg/asan/pr77396.C: New test.\n+\n+2016-09-01  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/71831\n \t* gcc.dg/builtin-object-size-16.c: New test.\n@@ -1105,7 +1110,7 @@\n \t* gcc.dg/tree-ssa/vrp105.c: New test.\n \t* gcc.dg/tree-ssa/vrp106.c: New test.\n \n-2016-08-05 Martin Sebor  <msebor@redhat.com>\n+2016-08-05  Martin Sebor  <msebor@redhat.com>\n \n \t* g++.dg/cpp0x/constexpr-cast.C: Avoid assuming (void*)1 is spelled\n \t1ul in diagnostics.  Remove hyphen from \"constant-expression.\"\n@@ -1339,7 +1344,7 @@\n \tPR fortran/68566\n \t* gfortran.dg/pr68566.f90: new test.\n \n-2016-07-30 Martin Sebor  <msebor@redhat.com>\n+2016-07-30  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/60760\n \tPR c++/71091\n@@ -1687,7 +1692,7 @@\n \t* gfortran.dg/c_sizeof_6.f90: here.  Test for error.\n \t* gfortran.dg/pr71935.f90: New test.\n \n-2016-07-22 Martin Sebor  <msebor@redhat.com>\n+2016-07-22  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/71675\n \t* g++.dg/ext/atomic-3.C: New test.\n@@ -3340,7 +3345,7 @@\n \tPR target/71103\n \t* gcc.target/avr/torture/pr71103-2.c: New test.\n \n-2016-06-19 Martin Sebor  <msebor@redhat.com>\n+2016-06-19  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/69507\n \t* gcc.dg/alignof.c: New test."}, {"sha": "3b3195ec1eca65ccb68b35c572610810ad16df3f", "filename": "gcc/testsuite/g++.dg/asan/pr77396.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr77396.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94087e88e0fcd45e51ab5797406714048dd5334c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr77396.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr77396.C?ref=94087e88e0fcd45e51ab5797406714048dd5334c", "patch": "@@ -0,0 +1,12 @@\n+// PR sanitizer/77396\n+// { dg-do run }\n+// { dg-set-target-env-var ASAN_OPTIONS \"check_initialization_order=true\" }\n+\n+static int a = 0; \n+static int b = a; \n+\n+int\n+main ()\n+{\n+  return 0;\n+}"}]}