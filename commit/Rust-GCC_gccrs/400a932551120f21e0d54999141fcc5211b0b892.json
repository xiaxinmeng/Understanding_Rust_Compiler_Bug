{"sha": "400a932551120f21e0d54999141fcc5211b0b892", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAwYTkzMjU1MTEyMGYyMWUwZDU0OTk5MTQxZmNjNTIxMWIwYjg5Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-23T07:23:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-23T07:23:00Z"}, "message": "mips.h (ISA_HAS_DCLZ_DCLO): Delete.\n\n\t* config/mips/mips.h (ISA_HAS_DCLZ_DCLO): Delete.\n\t* config/mips/mips.md (abs[sd]i2): Redefine using :GPR.  Only use\n\tbranch-likely insns for absdi2 if GENERATE_BRANCHLIKELY.  Use \"%.\"\n\trather than \"%z2\" (with a fake const0_rtx for operand 2).\n\t(ffs[sd]i2): Redefine using :GPR.\n\t(clz[sd]i2): Likewise.  Use ISA_HAS_CLO_CLZ for the 64-bit case.\n\nFrom-SVN: r86409", "tree": {"sha": "5bce0befa23b44c339bf36142931c7592927773a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bce0befa23b44c339bf36142931c7592927773a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/400a932551120f21e0d54999141fcc5211b0b892", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400a932551120f21e0d54999141fcc5211b0b892", "html_url": "https://github.com/Rust-GCC/gccrs/commit/400a932551120f21e0d54999141fcc5211b0b892", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400a932551120f21e0d54999141fcc5211b0b892/comments", "author": null, "committer": null, "parents": [{"sha": "2222da3a18cdb5d8885fe3a05008f8283ad8fc65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2222da3a18cdb5d8885fe3a05008f8283ad8fc65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2222da3a18cdb5d8885fe3a05008f8283ad8fc65"}], "stats": {"total": 129, "additions": 35, "deletions": 94}, "files": [{"sha": "29ac16e831fc741f841f2473088dbc0fb5c50c72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400a932551120f21e0d54999141fcc5211b0b892/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400a932551120f21e0d54999141fcc5211b0b892/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=400a932551120f21e0d54999141fcc5211b0b892", "patch": "@@ -1,3 +1,12 @@\n+2004-08-23  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.h (ISA_HAS_DCLZ_DCLO): Delete.\n+\t* config/mips/mips.md (abs[sd]i2): Redefine using :GPR.  Only use\n+\tbranch-likely insns for absdi2 if GENERATE_BRANCHLIKELY.  Use \"%.\"\n+\trather than \"%z2\" (with a fake const0_rtx for operand 2).\n+\t(ffs[sd]i2): Redefine using :GPR.\n+\t(clz[sd]i2): Likewise.  Use ISA_HAS_CLO_CLZ for the 64-bit case.\n+\n 2004-08-23  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md ({,u}divmod[sd]i4): Redefine using :GPR."}, {"sha": "eea1e7b1af8792e6a5eff9c49f14052a908838fd", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 26, "deletions": 94, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400a932551120f21e0d54999141fcc5211b0b892/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400a932551120f21e0d54999141fcc5211b0b892/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=400a932551120f21e0d54999141fcc5211b0b892", "patch": "@@ -1986,48 +1986,19 @@\n ;; Do not use the integer abs macro instruction, since that signals an\n ;; exception on -2147483648 (sigh).\n \n-(define_insn \"abssi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-\t(abs:SI (match_operand:SI 1 \"register_operand\" \"d\")))]\n+(define_insn \"abs<mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n+\t(abs:GPR (match_operand:GPR 1 \"register_operand\" \"d\")))]\n   \"!TARGET_MIPS16\"\n {\n-  operands[2] = const0_rtx;\n-\n-  if (REGNO (operands[0]) == REGNO (operands[1]))\n-    {\n-      if (GENERATE_BRANCHLIKELY)\n-\treturn \"%(bltzl\\t%1,1f\\;subu\\t%0,%z2,%0\\n%~1:%)\";\n-      else\n-\treturn \"bgez\\t%1,1f%#\\;subu\\t%0,%z2,%0\\n%~1:\";\n-    }\n-  else\n-    return \"%(bgez\\t%1,1f\\;move\\t%0,%1\\;subu\\t%0,%z2,%0\\n%~1:%)\";\n-}\n-  [(set_attr \"type\"\t\"multi\")\n-   (set_attr \"mode\"\t\"SI\")\n-   (set_attr \"length\"\t\"12\")])\n-\n-(define_insn \"absdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-\t(abs:DI (match_operand:DI 1 \"register_operand\" \"d\")))]\n-  \"TARGET_64BIT && !TARGET_MIPS16\"\n-{\n-  unsigned int regno1;\n-  operands[2] = const0_rtx;\n-\n-  if (GET_CODE (operands[1]) == REG)\n-    regno1 = REGNO (operands[1]);\n-  else\n-    regno1 = REGNO (XEXP (operands[1], 0));\n-\n-  if (REGNO (operands[0]) == regno1)\n-    return \"%(bltzl\\t%1,1f\\;dsubu\\t%0,%z2,%0\\n%~1:%)\";\n+  if (REGNO (operands[0]) == REGNO (operands[1]) && GENERATE_BRANCHLIKELY)\n+    return \"%(bltzl\\t%1,1f\\;<d>subu\\t%0,%.,%0\\n%~1:%)\";\n   else\n-    return \"%(bgez\\t%1,1f\\;move\\t%0,%1\\;dsubu\\t%0,%z2,%0\\n%~1:%)\";\n+    return \"%(bgez\\t%1,1f\\;move\\t%0,%1\\;<d>subu\\t%0,%.,%0\\n%~1:%)\";\n }\n-  [(set_attr \"type\"\t\"multi\")\n-   (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"\t\"12\")])\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"mode\" \"<MODE>\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -2053,67 +2024,36 @@\n ;;  ....................\n ;;\n \n-(define_insn \"ffssi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=&d\")\n-\t(ffs:SI (match_operand:SI 1 \"register_operand\" \"d\")))\n-   (clobber (match_scratch:SI 2 \"=&d\"))\n-   (clobber (match_scratch:SI 3 \"=&d\"))]\n+(define_insn \"ffs<mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=&d\")\n+\t(ffs:GPR (match_operand:GPR 1 \"register_operand\" \"d\")))\n+   (clobber (match_scratch:GPR 2 \"=&d\"))\n+   (clobber (match_scratch:GPR 3 \"=&d\"))]\n   \"!TARGET_MIPS16\"\n {\n   if (optimize && find_reg_note (insn, REG_DEAD, operands[1]))\n     return \"%(\\\n move\\t%0,%.\\;\\\n beq\\t%1,%.,2f\\n\\\n %~1:\\tand\\t%2,%1,0x0001\\;\\\n-addu\\t%0,%0,1\\;\\\n+<d>addu\\t%0,%0,1\\;\\\n beq\\t%2,%.,1b\\;\\\n-srl\\t%1,%1,1\\n\\\n+<d>srl\\t%1,%1,1\\n\\\n %~2:%)\";\n \n   return \"%(\\\n move\\t%0,%.\\;\\\n move\\t%3,%1\\;\\\n beq\\t%3,%.,2f\\n\\\n %~1:\\tand\\t%2,%3,0x0001\\;\\\n-addu\\t%0,%0,1\\;\\\n+<d>addu\\t%0,%0,1\\;\\\n beq\\t%2,%.,1b\\;\\\n-srl\\t%3,%3,1\\n\\\n+<d>srl\\t%3,%3,1\\n\\\n %~2:%)\";\n }\n-  [(set_attr \"type\"\t\"multi\")\n-   (set_attr \"mode\"\t\"SI\")\n-   (set_attr \"length\"\t\"28\")])\n-\n-(define_insn \"ffsdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n-\t(ffs:DI (match_operand:DI 1 \"register_operand\" \"d\")))\n-   (clobber (match_scratch:DI 2 \"=&d\"))\n-   (clobber (match_scratch:DI 3 \"=&d\"))]\n-  \"TARGET_64BIT && !TARGET_MIPS16\"\n-{\n-  if (optimize && find_reg_note (insn, REG_DEAD, operands[1]))\n-    return \"%(\\\n-move\\t%0,%.\\;\\\n-beq\\t%1,%.,2f\\n\\\n-%~1:\\tand\\t%2,%1,0x0001\\;\\\n-daddu\\t%0,%0,1\\;\\\n-beq\\t%2,%.,1b\\;\\\n-dsrl\\t%1,%1,1\\n\\\n-%~2:%)\";\n-\n-  return \"%(\\\n-move\\t%0,%.\\;\\\n-move\\t%3,%1\\;\\\n-beq\\t%3,%.,2f\\n\\\n-%~1:\\tand\\t%2,%3,0x0001\\;\\\n-daddu\\t%0,%0,1\\;\\\n-beq\\t%2,%.,1b\\;\\\n-dsrl\\t%3,%3,1\\n\\\n-%~2:%)\";\n-}\n-  [(set_attr \"type\"\t\"multi\")\n-   (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"\t\"28\")])\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"mode\" \"<MODE>\")\n+   (set_attr \"length\" \"28\")])\n \f\n ;;\n ;;  ...................\n@@ -2123,21 +2063,13 @@ dsrl\\t%3,%3,1\\n\\\n ;;  ...................\n ;;\n \n-(define_insn \"clzsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-\t(clz:SI (match_operand:SI 1 \"register_operand\" \"d\")))]\n+(define_insn \"clz<mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n+\t(clz:GPR (match_operand:GPR 1 \"register_operand\" \"d\")))]\n   \"ISA_HAS_CLZ_CLO\"\n-  \"clz\\t%0,%1\"\n+  \"<d>clz\\t%0,%1\"\n   [(set_attr \"type\" \"clz\")\n-   (set_attr \"mode\" \"SI\")])\n-\n-(define_insn \"clzdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-\t(clz:DI (match_operand:DI 1 \"register_operand\" \"d\")))]\n-  \"ISA_HAS_DCLZ_DCLO\"\n-  \"dclz\\t%0,%1\"\n-  [(set_attr \"type\" \"clz\")\n-   (set_attr \"mode\" \"DI\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \f\n ;;\n ;;  ...................."}]}