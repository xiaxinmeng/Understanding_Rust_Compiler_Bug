{"sha": "000b5f54b57877f731db1ae7d5ef51f9d02a1014", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAwYjVmNTRiNTc4NzdmNzMxZGIxYWU3ZDVlZjUxZjlkMDJhMTAxNA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@stanford.edu", "date": "2001-02-25T05:23:38Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-02-25T05:23:38Z"}, "message": "xm-interix.h, [...]: Don't define any of...\n\n\t* xm-interix.h, xm-lynx.h, alpha/xm-vms.h, convex/xm-convex.h,\n\ti370/xm-i370.h, i370/xm-linux.h, i370/xm-mvs.h, i370/xm-oe.h,\n\ti386/xm-beos.h, i386/xm-dos.h, i386/xm-mingw32.h,\n\ti860/xm-i860.h, m68k/xm-3b1.h, m68k/xm-amix.h, m68k/xm-aux.h,\n\tm68k/xm-crds.h, m68k/xm-mot3300.h, m88k/xm-sysv3.h,\n\tmips/xm-mips.h, rs6000/xm-beos.h, vax/xm-vms.h:\n\tDon't define any of:\n\tUSE_PROTOTYPES, vfork, mktemp, SVR3, NO_SYS_PARAMS_H,\n\tP_tmpdir, MVS, NO_DBX_FORMAT, USE_STDARGS, STDC_HEADERS,\n\tNO_PRECOMPILES, i860, __PTR_TO_INT, __INT_TO_PTR, rindex,\n\tindex, FULL_PROTOTYPES, AUX, R_OK, W_OK, X_OK, F_OK,\n\tSTACK_DIRECTION, MIPS, MAX_READ_LEN, MAX_WRITE_LEN.\n\n\t* alpha/xm-alpha.h, clipper/xm-clix.h, d30v/xm-d30v.h,\n\tfr30/xm-fr30.h, i370/xm-linux.h: Remove commented-out macro\n\tdefinitions.\n\n\t* m68k/xm-3b1.h, m68k/xm-crds.h, m88k/xm-sysv3.h:\n\tDelete now-empty file.\n\n\t* alpha/vms.h: Define NEED_ATEXIT here...\n\t* alpha/xm-vms.h: ...not here.\n\n\t* i386/cygwin.h: Don't define PARAMS.\n\t* mips/mips.c: Don't prototype mktemp.  Don't define\n\tP_tmpdir.  Use make_temp_file to create temporary files.\n\tDon't be clever and delete temporary files early.\n\t* f/com.c: Don't define STDC_HEADERS, autoconf handles it.\n\t* config.gcc: Drop references to deleted files.  Don't define\n\tFULL_PROTOTYPES.\n\t* gcc.texi: Don't mention USE_PROTOTYPES.\n\nFrom-SVN: r40048", "tree": {"sha": "8fb8976db3ab6eab6495ba295e4851a9fb4ded39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb8976db3ab6eab6495ba295e4851a9fb4ded39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/000b5f54b57877f731db1ae7d5ef51f9d02a1014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000b5f54b57877f731db1ae7d5ef51f9d02a1014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/000b5f54b57877f731db1ae7d5ef51f9d02a1014", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000b5f54b57877f731db1ae7d5ef51f9d02a1014/comments", "author": null, "committer": null, "parents": [{"sha": "0e4970d732f9128e86dd49a94fd0273f4ad6e5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e4970d732f9128e86dd49a94fd0273f4ad6e5da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e4970d732f9128e86dd49a94fd0273f4ad6e5da"}], "stats": {"total": 483, "additions": 75, "deletions": 408}, "files": [{"sha": "3509136205c161b0efd2075dde449f7e0c22a50e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,3 +1,36 @@\n+2001-02-24  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* xm-interix.h, xm-lynx.h, alpha/xm-vms.h, convex/xm-convex.h,\n+\ti370/xm-i370.h, i370/xm-linux.h, i370/xm-mvs.h, i370/xm-oe.h,\n+\ti386/xm-beos.h, i386/xm-dos.h, i386/xm-mingw32.h,\n+\ti860/xm-i860.h, m68k/xm-3b1.h, m68k/xm-amix.h, m68k/xm-aux.h,\n+\tm68k/xm-crds.h, m68k/xm-mot3300.h, m88k/xm-sysv3.h,\n+\tmips/xm-mips.h, rs6000/xm-beos.h, vax/xm-vms.h:\n+\tDon't define any of:\n+\tUSE_PROTOTYPES, vfork, mktemp, SVR3, NO_SYS_PARAMS_H,\n+\tP_tmpdir, MVS, NO_DBX_FORMAT, USE_STDARGS, STDC_HEADERS,\n+\tNO_PRECOMPILES, i860, __PTR_TO_INT, __INT_TO_PTR, rindex,\n+\tindex, FULL_PROTOTYPES, AUX, R_OK, W_OK, X_OK, F_OK,\n+\tSTACK_DIRECTION, MIPS, MAX_READ_LEN, MAX_WRITE_LEN.\n+\n+\t* alpha/xm-alpha.h, clipper/xm-clix.h, d30v/xm-d30v.h,\n+\tfr30/xm-fr30.h, i370/xm-linux.h: Remove commented-out macro\n+\tdefinitions.\n+\n+\t* m68k/xm-3b1.h, m68k/xm-crds.h, m88k/xm-sysv3.h:\n+\tDelete now-empty file.\n+\n+\t* alpha/vms.h: Define NEED_ATEXIT here...\n+\t* alpha/xm-vms.h: ...not here.\n+\n+\t* i386/cygwin.h: Don't define PARAMS.\n+\t* mips/mips.c: Don't prototype mktemp.  Don't define\n+\tP_tmpdir.  Use make_temp_file to create temporary files.\n+\tDon't be clever and delete temporary files early.\n+\t* config.gcc: Drop references to deleted files.  Don't define\n+\tFULL_PROTOTYPES.\n+\t* gcc.texi: Don't mention USE_PROTOTYPES.\n+\n Sat Feb 24 20:25:29 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* config/i386/i386.c (ix86_set_move_mem_attrs): New function."}, {"sha": "a58a6736e63766cd1f1c0cda2bf7d24cbd1f8ed0", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1621,7 +1621,6 @@ m68hc12-*-*|m6812-*-*)\n         ;;\n m68000-convergent-sysv*)\n \ttm_file=m68k/ctix.h\n-\txm_file=\"m68k/xm-3b1.h ${xm_file}\"\n \txm_defines=USG\n \tuse_collect2=yes\n \textra_headers=math-68881.h\n@@ -1658,7 +1657,6 @@ m68000-sun-sunos4*)\n \textra_headers=math-68881.h\n \t;;\n m68000-att-sysv*)\n-\txm_file=\"m68k/xm-3b1.h ${xm_file}\"\n \txm_defines=USG\n \tif test x$gas = xyes\n \tthen\n@@ -1730,7 +1728,7 @@ m68k-bull-sysv*)\t\t# Bull DPX/2\n m68k-atari-sysv4*)              # Atari variant of V.4.\n \ttm_file=m68k/atari.h\n \txm_file=\"xm-alloca.h ${xm_file}\"\n-\txm_defines=\"USG FULL_PROTOTYPES\"\n+\txm_defines=USG\n \ttmake_file=t-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n \textra_headers=math-68881.h\n@@ -1785,7 +1783,7 @@ m68k-tti-*)\n \textra_headers=math-68881.h\n \t;;\n m68k-crds-unos*)\n-\txm_file=\"xm-alloca.h m68k/xm-crds.h ${xm_file}\"\n+\txm_file=\"xm-alloca.h ${xm_file}\"\n \txm_defines=\"USG unos\"\n \txmake_file=m68k/x-crds\n \ttm_file=m68k/crds.h\n@@ -1795,7 +1793,7 @@ m68k-crds-unos*)\n m68k-cbm-sysv4*)\t\t# Commodore variant of V.4.\n \ttm_file=m68k/amix.h\n \txm_file=\"xm-alloca.h ${xm_file}\"\n-\txm_defines=\"USG FULL_PROTOTYPES\"\n+\txm_defines=USG\n \txmake_file=m68k/x-amix\n \ttmake_file=t-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n@@ -2081,7 +2079,6 @@ m88k-dg-dgux*)\n m88k-dolphin-sysv3*)\n \ttm_file=m88k/dolph.h\n \textra_parts=\"crtbegin.o crtend.o\"\n-\txm_file=\"m88k/xm-sysv3.h ${xm_file}\"\n \txmake_file=m88k/x-dolph\n \tif test x$gas = xyes\n \tthen\n@@ -2091,7 +2088,6 @@ m88k-dolphin-sysv3*)\n m88k-tektronix-sysv3)\n \ttm_file=m88k/tekXD88.h\n \textra_parts=\"crtbegin.o crtend.o\"\n-\txm_file=\"m88k/xm-sysv3.h ${xm_file}\"\n \txmake_file=m88k/x-tekXD88\n \tif test x$gas = xyes\n \tthen\n@@ -2123,7 +2119,6 @@ m88k-*-openbsd*)\n m88k-*-sysv3*)\n \ttm_file=m88k/sysv3.h\n \textra_parts=\"crtbegin.o crtend.o\"\n-\txm_file=\"m88k/xm-sysv3.h ${xm_file}\"\n \txmake_file=m88k/x-sysv3\n \tif test x$gas = xyes\n \tthen"}, {"sha": "870acd233c5f6831dcf0aaa69c7f73441a4bdda2", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Output variables, constants and external declarations, for GNU compiler.\n-   Copyright (C) 1996, 1997, 1998, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -470,3 +470,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define DIR_SEPARATOR ']'\n \n #define PREFIX \"GNU_ROOT:\"\n+\n+/* XXX Really? Even with modern CRTL? */\n+#define NEED_ATEXIT"}, {"sha": "9e38cfc45f373052335374ba1728fe27ea63f087", "filename": "gcc/config/alpha/xm-alpha.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Falpha%2Fxm-alpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Falpha%2Fxm-alpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-alpha.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for DEC Alpha.\n-   Copyright (C) 1990, 1992, 1993, 1994, 1995, 1998\n+   Copyright (C) 1990, 1992, 1993, 1994, 1995, 1998, 2001\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu).\n \n@@ -32,8 +32,6 @@ Boston, MA 02111-1307, USA.  */\n #define\tHOST_BITS_PER_LONG\t64\n #define HOST_BITS_PER_LONGLONG  64\n \n-/* #define\tHOST_WORDS_BIG_ENDIAN  */\n-\n /* target machine dependencies.\n    tm.h is a symbolic link to the actual target specific file.   */\n #include \"tm.h\""}, {"sha": "16e89c81016c2ab976a8c7ed2c1a2ed4e0dc53ec", "filename": "gcc/config/alpha/xm-vms.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Falpha%2Fxm-vms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Falpha%2Fxm-vms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-vms.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for openVMS/Alpha.\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2001 Free Software Foundation, Inc.\n    Contributed by Klaus Kaempf (kkaempf@progis.de).\n \n This file is part of GNU CC.\n@@ -64,13 +64,11 @@ Boston, MA 02111-1307, USA.  */\n /* Define a local equivalent (sort of) for unlink */\n #define unlink remove\n \n-#define NEED_ATEXIT\n #define HAVE_VPRINTF\n #define HAVE_PUTENV\n #define HAVE_STRERROR\n #define HAVE_ATOLL\n \n-#define NO_SYS_PARAMS_H\t\t/* Don't have <sys/params.h> */\n #define USE_C_ALLOCA\t\t/* Using alloca.c */\n \n #define HAVE_FCNTL_H 1"}, {"sha": "544fe45e33e780f4f9372083fffa4c6230aa6d09", "filename": "gcc/config/arm/xm-arm.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Farm%2Fxm-arm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Farm%2Fxm-arm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxm-arm.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for Acorn RISC Machine.\n-   Copyright (C) 1991, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 2001 Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n               and Martin Simmons (@harleqn.co.uk).\n    More major hacks by Richard Earnshaw (rwe11@cl.cam.ac.uk)\n@@ -45,11 +45,6 @@ Boston, MA 02111-1307, USA.  */\n #define USE_C_ALLOCA\n #endif\n \n-/* Define this to be 1 if you know the host compiler supports prototypes, even\n-   if it doesn't define __STDC__, or define it to be 0 if you do not want any\n-   prototypes when compiling GNU CC. */\n-#define USE_PROTOTYPES 1\n-\n /* target machine dependencies.\n    tm.h is a symbolic link to the actual target specific file.  */\n #include \"tm.h\""}, {"sha": "519ddf589eacdb5a56f3e0b5555d82bf9ca9bed4", "filename": "gcc/config/clipper/xm-clix.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fclipper%2Fxm-clix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fclipper%2Fxm-clix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fxm-clix.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,6 +1,5 @@\n /* Config file for Clipper running Clix, system V. 3.2 clone  */\n \n-\n /* #defines that need visibility everywhere.  */\n #define FALSE 0\n #define TRUE 1\n@@ -17,9 +16,6 @@\n #define HOST_BITS_PER_LONG 32\n #define HOST_BITS_PER_LONGLONG 64\n \n-/* This machine uses IEEE floats.  */\n-/* #define HOST_FLOAT_FORMAT IEEE_FLOAT_FORMAT */\n-\n /* Arguments to use with `exit'.  */\n #define SUCCESS_EXIT_CODE 0\n #define FATAL_EXIT_CODE 33"}, {"sha": "c3e0fe2c1e7906d5ce0c6354a1e1a4fb05776b49", "filename": "gcc/config/convex/xm-convex.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fconvex%2Fxm-convex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fconvex%2Fxm-convex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fxm-convex.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for Convex.\n-   Copyright (C) 1989, 1993, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1997, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -37,11 +37,6 @@ Boston, MA 02111-1307, USA.  */\n #define SUCCESS_EXIT_CODE 0\n #define FATAL_EXIT_CODE 33\n \n-/* Convex ships /tmp as a separate file system - thus it\n-   usually has more free space than /usr/tmp */\n-\n-#define P_tmpdir\t\"/tmp/\"\n-\n /* Convex uses Vax or IEEE floats.\n    Both formats have Vax semantics. */\n "}, {"sha": "aa8c40ef738310354a05bad2b6bf15f6abb20431", "filename": "gcc/config/d30v/xm-d30v.h", "status": "modified", "additions": 2, "deletions": 135, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fd30v%2Fxm-d30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fd30v%2Fxm-d30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fxm-d30v.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for Mitsubishi D30V.\n-   Copyright (C) 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Cygnus Solutions.\n \n    This file is part of GNU CC.\n@@ -23,12 +23,6 @@\n #define\tFALSE\t0\n #define\tTRUE\t1\n \n-/* Define this macro if the host system is System V.  */\n-/* #define USG */\n-\n-/* Define this macro if the host system is VMS.  */\n-/* #define VMS */\n-\n /* A C expression for the status code to be returned when the compiler exits\n    after serious errors.  */\n #define FATAL_EXIT_CODE 33\n@@ -41,19 +35,6 @@\n    order.  (GNU CC does not depend on the host byte ordering within a word.)  */\n #define HOST_WORDS_BIG_ENDIAN\n \n-/* Define this macro to be 1 if the host machine stores `DFmode', `XFmode' or\n-   `TFmode' floating point numbers in memory with the word containing the sign\n-   bit at the lowest address; otherwise, define it to be zero.\n-\n-   This macro need not be defined if the ordering is the same as for multi-word\n-   integers.  */\n-/* #define HOST_FLOAT_WORDS_BIG_ENDIAN */\n-\n-/* A numeric code distinguishing the floating point format for the host\n-   machine.  See `TARGET_FLOAT_FORMAT' in *Note Storage Layout:: for the\n-   alternatives and default.  */\n-/* #define HOST_FLOAT_FORMAT */\n-\n /* A C expression for the number of bits in `char' on the host machine.  */\n #define HOST_BITS_PER_CHAR 8\n \n@@ -66,128 +47,14 @@\n /* A C expression for the number of bits in `long' on the host machine.  */\n #define HOST_BITS_PER_LONG 32\n \n-/* Define this macro to indicate that the host compiler only supports `int' bit\n-   fields, rather than other integral types, including `enum', as do most C\n-   compilers.  */\n-/* #define ONLY_INT_FIELDS */\n-\n-/* A C expression for the size of ordinary obstack chunks.  If you don't define\n-   this, a usually-reasonable default is used.  */\n-/* #define OBSTACK_CHUNK_SIZE */\n-\n-/* The function used to allocate obstack chunks.  If you don't define this,\n-   `xmalloc' is used.  */\n-/* #define OBSTACK_CHUNK_ALLOC */\n-\n-/* The function used to free obstack chunks.  If you don't define this, `free'\n-   is used.  */\n-/* #define OBSTACK_CHUNK_FREE */\n-\n /* Define this macro to indicate that the compiler is running with the `alloca'\n-   implemented in C.  This version of `alloca' can be found in the file\n-   `alloca.c'; to use it, you must also alter the `Makefile' variable `ALLOCA'.\n-   (This is done automatically for the systems on which we know it is needed.)\n-\n-   If you do define this macro, you should probably do it as follows:\n-\n-        #ifndef __GNUC__\n-        #define USE_C_ALLOCA\n-        #else\n-        #define alloca __builtin_alloca\n-        #endif\n-\n-   so that when the compiler is compiled with GNU CC it uses the more efficient\n-   built-in `alloca' function.  */\n-\n+   implemented in C.  */\n #ifndef __GNUC__\n #define USE_C_ALLOCA\n #else\n #define alloca __builtin_alloca\n #endif\n \n-/* Define this macro to indicate that the host compiler does not properly\n-   handle converting a function value to a pointer-to-function when it is used\n-   in an expression.  */\n-/* #define FUNCTION_CONVERSION_BUG */\n-\n-/* Define this if the library function `vprintf' is available on your system.  */\n-/* #define HAVE_VPRINTF */\n-\n-/* Define this macro to enable support for multibyte characters in the input to\n-   GNU CC.  This requires that the host system support the ANSI C library\n-   functions for converting multibyte characters to wide characters.  */\n-/* #define MULTIBYTE_CHARS */\n-\n-/* Define this if the library function `putenv' is available on your system.  */\n-/* #define HAVE_PUTENV */\n-\n-/* Define this if your system is POSIX.1 compliant.  */\n-/* #define POSIX */\n-\n-/* Define this if your system has the variable `sys_siglist', and there is\n-   already a declaration of it in the system header files.  */\n-/* #define DONT_DECLARE_SYS_SIGLIST */\n-\n-/* Define this to be 1 if you know that the host compiler supports prototypes,\n-   even if it doesn't define __STDC__, or define it to be 0 if you do not want\n-   any prototypes used in compiling GNU CC.  If `USE_PROTOTYPES' is not\n-   defined, it will be determined automatically whether your compiler supports\n-   prototypes by checking if `__STDC__' is defined.  */\n-/* #define USE_PROTOTYPES */\n-\n-/* Define this if you wish suppression of prototypes generated from the machine\n-   description file, but to use other prototypes within GNU CC.  If\n-   `USE_PROTOTYPES' is defined to be 0, or the host compiler does not support\n-   prototypes, this macro has no effect.  */\n-/* #define NO_MD_PROTOTYPES */\n-\n-/* Define this if you wish to generate prototypes for the `gen_call' or\n-   `gen_call_value' functions generated from the machine description file.  If\n-   `USE_PROTOTYPES' is defined to be 0, or the host compiler does not support\n-   prototypes, or `NO_MD_PROTOTYPES' is defined, this macro has no effect.  As\n-   soon as all of the machine descriptions are modified to have the appropriate\n-   number of arguments, this macro will be removed.\n-\n-   Some systems do provide this variable, but with a different name such as\n-   `_sys_siglist'.  On these systems, you can define `sys_siglist' as a macro\n-   which expands into the name actually provided.  */\n-/* #define MD_CALL_PROTOTYPES */\n-\n-/* Define this macro to be a C character constant representing the character\n-   used to separate components in paths.  The default value is.  the colon\n-   character */\n-/* #define PATH_SEPARATOR */\n-\n-/* If your system uses some character other than slash to separate directory\n-   names within a file specification, define this macro to be a C character\n-   constant specifying that character.  When GNU CC displays file names, the\n-   character you specify will be used.  GNU CC will test for both slash and the\n-   character you specify when parsing filenames.  */\n-/* #define DIR_SEPARATOR */\n-\n-/* Define this macro to be a C string representing the suffix for object files\n-   on your machine.  If you do not define this macro, GNU CC will use `.o' as\n-   the suffix for object files.  */\n-/* #define OBJECT_SUFFIX */\n-\n-/* Define this macro to be a C string representing the suffix for executable\n-   files on your machine.  If you do not define this macro, GNU CC will use the\n-   null string as the suffix for object files.  */\n-/* #define EXECUTABLE_SUFFIX */\n-\n-/* If defined, `collect2' will scan the individual object files specified on\n-   its command line and create an export list for the linker.  Define this\n-   macro for systems like AIX, where the linker discards object files that are\n-   not referenced from `main' and uses export lists.  */\n-/* #define COLLECT_EXPORT_LIST */\n-\n-/* In addition, configuration files for system V define `bcopy', `bzero' and\n-   `bcmp' as aliases.  Some files define `alloca' as a macro when compiled with\n-   GNU CC, in order to take advantage of the benefit of GNU CC's built-in\n-   `alloca'.  */\n-\n /* target machine dependencies.\n    tm.h is a symbolic link to the actual target specific file.   */\n #include \"tm.h\"\n-\n-/* end of xm-generic.h */"}, {"sha": "54b1e5354fc4135b98841948cefa57c27e402c3f", "filename": "gcc/config/fr30/xm-fr30.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Ffr30%2Fxm-fr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Ffr30%2Fxm-fr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Fxm-fr30.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of FR30 target.\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n    Contributed by Cygnus Solutions.\n \n This file is part of GNU CC.\n@@ -31,15 +31,6 @@ Boston, MA 02111-1307, USA.  */\n    without serious errors.  */\n #define SUCCESS_EXIT_CODE 0\n \n-/* Defined if the host machine stores words of multi-word values in big-endian\n-   order.  (GNU CC does not depend on the host byte ordering within a word.)  */\n-/* #define HOST_WORDS_BIG_ENDIAN 1 */\n-\n-/* In addition, configuration files for system V define `bcopy', `bzero' and\n-   `bcmp' as aliases.  Some files define `alloca' as a macro when compiled with\n-   GNU CC, in order to take advantage of the benefit of GNU CC's built-in\n-   `alloca'.  */\n-\n /* target machine dependencies.\n    tm.h is a symbolic link to the actual target specific file.   */\n #include \"tm.h\""}, {"sha": "939dc8917527969335f1f30ef64c54aea80a74d3", "filename": "gcc/config/i370/xm-i370.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi370%2Fxm-i370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi370%2Fxm-i370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fxm-i370.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for System/370.\n-   Copyright (C) 1989, 1993, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1997, 2001 Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for MVS C/370 by Dave Pitts (dpitts@nyx.cs.du.edu)\n \n@@ -36,9 +36,6 @@ Boston, MA 02111-1307, USA.  */\n #define HOST_EBCDIC\t\t1\n \n #define USG\n-#ifndef MVS\n-#define MVS\n-#endif\n \n /* Target machine dependencies.  tm.h is a symbolic link to the actual\n    target specific file.  */\n@@ -49,6 +46,3 @@ Boston, MA 02111-1307, USA.  */\n \n #define SUCCESS_EXIT_CODE\t0\n #define FATAL_EXIT_CODE\t\t12\n-\n-#define NO_DBX_FORMAT\n-"}, {"sha": "08ab6983c11f5326ae37662aefde32e24f813abe", "filename": "gcc/config/i370/xm-linux.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi370%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi370%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fxm-linux.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for System/370.\n-   Copyright (C) 1989, 1993, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1997, 2001 Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for OS/390 OpenEdition by Dave Pitts (dpitts@cozx.com)\n    Modified for 390/Linux by Linas Vepstas (linas@linas.org)\n@@ -26,9 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #define FALSE 0\n #define TRUE 1\n \n-#define USE_STDARGS 1\n-#define USE_PROTOTYPES 1\n-\n /* This describes the machine the compiler is hosted on.  */\n \n #define HOST_BITS_PER_CHAR\t8\n@@ -51,8 +48,6 @@ extern char *alloca ();\n #define ONLY_INT_FIELDS\n #endif\n \n-// #define USG\n-\n /* Target machine dependencies.  tm.h is a symbolic link to the actual\n    target specific file.  */\n \n@@ -62,6 +57,3 @@ extern char *alloca ();\n \n #define SUCCESS_EXIT_CODE\t0\n #define FATAL_EXIT_CODE\t\t12\n-\n-// #define NO_DBX_FORMAT\n-"}, {"sha": "b070acda4f7be407abeae166106c3610d43a93b5", "filename": "gcc/config/i370/xm-mvs.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi370%2Fxm-mvs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi370%2Fxm-mvs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fxm-mvs.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for System/370.\n-   Copyright (C) 1989, 1993, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1997, 2001 Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for OS/390 LanguageEnvironment C by Dave Pitts (dpitts@cozx.com)\n \n@@ -36,9 +36,6 @@ Boston, MA 02111-1307, USA.  */\n #define HOST_EBCDIC\t\t1\n \n #define USG\n-#ifndef MVS\n-#define MVS\n-#endif\n \n /* Target machine dependencies.  tm.h is a symbolic link to the actual\n    target specific file.  */\n@@ -49,6 +46,3 @@ Boston, MA 02111-1307, USA.  */\n \n #define SUCCESS_EXIT_CODE\t0\n #define FATAL_EXIT_CODE\t\t12\n-\n-#define NO_DBX_FORMAT\n-"}, {"sha": "52dd2831613304ffe9c8c2995d583f6189af593f", "filename": "gcc/config/i370/xm-oe.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi370%2Fxm-oe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi370%2Fxm-oe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fxm-oe.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for System/370.\n-   Copyright (C) 1989, 1993, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1997, 2001 Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for OS/390 OpenEdition by Dave Pitts (dpitts@cozx.com)\n \n@@ -25,9 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #define FALSE 0\n #define TRUE 1\n \n-#define USE_STDARGS 1\n-#define USE_PROTOTYPES 1\n-\n /* This describes the machine the compiler is hosted on.  */\n \n #define HOST_BITS_PER_CHAR\t8\n@@ -51,6 +48,3 @@ Boston, MA 02111-1307, USA.  */\n \n #define SUCCESS_EXIT_CODE\t0\n #define FATAL_EXIT_CODE\t\t12\n-\n-#define NO_DBX_FORMAT\n-"}, {"sha": "81e995dffcfb9a68296a7b610c31b2dd74af3f72", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific defines to be used when targeting GCC for\n    hosting on Windows32, using a Unix style C library and tools.\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001\n    Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -534,14 +534,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* External function declarations.  */\n \n-#ifndef PARAMS\n-#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#define PARAMS(ARGS) ARGS\n-#else\n-#define PARAMS(ARGS) ()\n-#endif\n-#endif\n-\n extern void i386_pe_record_external_function PARAMS ((char *));\n /* extern void i386_pe_declare_function_type PARAMS ((FILE *, char *, int)); */\n extern void i386_pe_record_exported_symbol PARAMS ((char *, int));"}, {"sha": "e386878228a80e6b1e3cdbd2cd8f1444ab148c89", "filename": "gcc/config/i386/xm-beos.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi386%2Fxm-beos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi386%2Fxm-beos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-beos.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for BeOS host.\n-   Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Fred Fish (fnf@cygnus.com), based on xm-rs6000.h\n    by Richard Kenner (kenner@vlsi1.ultra.nyu.edu).\n \n@@ -52,5 +52,3 @@ Boston, MA 02111-1307, USA.  */\n #define HAVE_PUTENV\n #endif\n #define HAVE_RENAME\n-\n-#define STDC_HEADERS 1"}, {"sha": "2abdbfce794c58a7980cab33c1163f93013e7a2f", "filename": "gcc/config/i386/xm-dos.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi386%2Fxm-dos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi386%2Fxm-dos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-dos.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for Intel 80386 running DOS.\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -36,5 +36,3 @@ Boston, MA 02111-1307, USA.  */\n /* Tell GCC about DOS's bit bucket. */\n \n #define HOST_BIT_BUCKET \"NUL\"\n-\n-#define NO_PRECOMPILES 1"}, {"sha": "7d04ddc85e4f3205b077a3c408ed030acfbc0a35", "filename": "gcc/config/i386/xm-mingw32.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi386%2Fxm-mingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi386%2Fxm-mingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-mingw32.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,6 +1,6 @@\n /* Configuration for GNU C-compiler for hosting on Windows32.\n    using GNU tools and the Windows32 API Library.\n-   Copyright (C) 1997, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 1999, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -27,10 +27,6 @@ Boston, MA 02111-1307, USA. */\n #define ONLY_INT_FIELDS 1\n #endif\n \n-#ifndef USE_PROTOTYPES\n-#define USE_PROTOTYPES 1\n-#endif\n-\n #define environ _environ\n \n /* Even though we support \"/\", allow \"\\\" since everybody tests both.  */"}, {"sha": "9b8c0a30fc262f02e4fc0097c7c3e09a4b65bc54", "filename": "gcc/config/i860/xm-i860.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi860%2Fxm-i860.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fi860%2Fxm-i860.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fxm-i860.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for Intel i860.\n-   Copyright (C) 1988, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,10 +18,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef i860\n-#define i860\n-#endif\n-\n /* #defines that need visibility everywhere.  */\n #define FALSE 0\n #define TRUE 1"}, {"sha": "035004f10027a1a881fa6a3ededc77df6c4ef2b9", "filename": "gcc/config/m68k/xm-3b1.h", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e4970d732f9128e86dd49a94fd0273f4ad6e5da/gcc%2Fconfig%2Fm68k%2Fxm-3b1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e4970d732f9128e86dd49a94fd0273f4ad6e5da/gcc%2Fconfig%2Fm68k%2Fxm-3b1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-3b1.h?ref=0e4970d732f9128e86dd49a94fd0273f4ad6e5da", "patch": "@@ -1,4 +0,0 @@\n-/* Override part of the obstack macros.  */\n-\n-#define __PTR_TO_INT(P) ((int)(P))\n-#define __INT_TO_PTR(P) ((char *)(P))"}, {"sha": "588b15ecd68621f3a9d4a1e85d8543b37d1ae43d", "filename": "gcc/config/m68k/xm-amix.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fm68k%2Fxm-amix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fm68k%2Fxm-amix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-amix.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of host machine for GNU compiler.\n    Commodore Amiga A3000UX version.\n-   Copyright (C) 1991, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1997, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -21,14 +21,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"m68k/xm-m68kv.h\"\t/* Use the System V flavor of m68k host */\n \n-#define rindex strrchr\n-#define index strchr\n-\n-/* Define FULL_PROTOTYPES for protoize.c, to get <unistd.h> included.\n-   We need this file for things like R_OK, not necessarily prototypes. */\n-\n-#define FULL_PROTOTYPES\n-\n #if defined (__GNUC__) && __GNUC__ == 1\n #define alloca __builtin_alloca\n #endif"}, {"sha": "994a721e1351398da68a15dfe2743610cf155580", "filename": "gcc/config/m68k/xm-aux.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fm68k%2Fxm-aux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fm68k%2Fxm-aux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-aux.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -2,8 +2,4 @@\n #define USG\n #endif\n \n-#ifndef AUX\n-#define AUX\n-#endif\n-\n #include \"m68k/xm-m68k.h\""}, {"sha": "2bf1bdbc40613800b33bc0c2436d4b7b0719e83e", "filename": "gcc/config/m68k/xm-crds.h", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e4970d732f9128e86dd49a94fd0273f4ad6e5da/gcc%2Fconfig%2Fm68k%2Fxm-crds.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e4970d732f9128e86dd49a94fd0273f4ad6e5da/gcc%2Fconfig%2Fm68k%2Fxm-crds.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-crds.h?ref=0e4970d732f9128e86dd49a94fd0273f4ad6e5da", "patch": "@@ -1,7 +0,0 @@\n-/* Avoid conflict with C library by changing name of this symbol.  */\n-#define gettime gcc_gettime\n-\n-/* Override part of the obstack macros.  */\n-\n-#define __PTR_TO_INT(P) ((int)(P))\n-#define __INT_TO_PTR(P) ((char *)(P))"}, {"sha": "f8eabbd5d975043114e23b764c47682e0df7afd0", "filename": "gcc/config/m68k/xm-mot3300.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fm68k%2Fxm-mot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fm68k%2Fxm-mot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-mot3300.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,6 +1,7 @@\n /* Configuration for GNU C-compiler for Motorola 68000 family.\n    SysV68 Motorola 3300 Delta Series\n-   Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2001\n+   Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -19,7 +20,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-\n #define USG 1\n \n /* do not use alloca from -lPW with cc, because function epilogues use %sp */\n@@ -30,8 +30,3 @@ extern void *alloca ();\n extern char *alloca ();\n #endif\n #endif\n-\n-/* Override part of the obstack macros.  */\n-\n-#define __PTR_TO_INT(P) ((int)(P))\n-#define __INT_TO_PTR(P) ((char *)(P))"}, {"sha": "a15fbbaaa54a3802dac0ed996cf5787fb9da7f5c", "filename": "gcc/config/m88k/xm-sysv3.h", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e4970d732f9128e86dd49a94fd0273f4ad6e5da/gcc%2Fconfig%2Fm88k%2Fxm-sysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e4970d732f9128e86dd49a94fd0273f4ad6e5da/gcc%2Fconfig%2Fm88k%2Fxm-sysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fxm-sysv3.h?ref=0e4970d732f9128e86dd49a94fd0273f4ad6e5da", "patch": "@@ -1,28 +0,0 @@\n-/* Configuration for GNU C-compiler.\n-   Motorola m88100 running the AT&T/Unisoft/Motorola V.3 reference port.\n-   Copyright (C) 1990, 1998, 1999 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#define R_OK 4\n-#define W_OK 2\n-#define X_OK 1\n-#define F_OK 0\n-\n-/* for the emacs version of alloca */\n-#define STACK_DIRECTION -1"}, {"sha": "0c18ddb2a47387fe1a19449da976bb3871415592", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 45, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -64,7 +64,6 @@ Boston, MA 02111-1307, USA.  */\n #define STAB_CODE_TYPE int\n #endif\n \n-extern char  *mktemp PARAMS ((char *));\n extern tree   lookup_name PARAMS ((tree));\n \n /* Enumeration for all of the relational tests, so that we can build\n@@ -5785,54 +5784,16 @@ mips_output_external_libcall (file, name)\n \f\n /* Compute a string to use as a temporary file name.  */\n \n-/* On MSDOS, write temp files in current dir\n-   because there's no place else we can expect to use.  */\n-#if __MSDOS__\n-#ifndef P_tmpdir\n-#define P_tmpdir \"./\"\n-#endif\n-#endif\n-\n static FILE *\n mips_make_temp_file ()\n {\n   FILE *stream;\n-  const char *base = getenv (\"TMPDIR\");\n-  int len;\n+  char *filename = make_temp_file (0);\n \n-  if (base == 0)\n-    {\n-#ifdef P_tmpdir\n-      if (access (P_tmpdir, R_OK | W_OK) == 0)\n-\tbase = P_tmpdir;\n-      else\n-#endif\n-\tif (access (\"/usr/tmp\", R_OK | W_OK) == 0)\n-\t  base = \"/usr/tmp/\";\n-\telse\n-\t  base = \"/tmp/\";\n-    }\n-\n-  len = strlen (base);\n-  /* temp_filename is global, so we must use malloc, not alloca.  */\n-  temp_filename = (char *) xmalloc (len + sizeof(\"/ctXXXXXX\"));\n-  strcpy (temp_filename, base);\n-  if (len > 0 && temp_filename[len-1] != '/')\n-    temp_filename[len++] = '/';\n-\n-  strcpy (temp_filename + len, \"ctXXXXXX\");\n-  mktemp (temp_filename);\n-\n-  stream = fopen (temp_filename, \"w+\");\n+  stream = fopen (filename, \"w+\");\n   if (!stream)\n-    fatal_io_error (\"can't open %s\", temp_filename);\n-\n-#ifndef __MSDOS__\n-  /* In MSDOS, we cannot unlink the temporary file until we are finished using\n-     it.  Otherwise, we delete it now, so that it will be gone even if the\n-     compiler happens to crash.  */\n-  unlink (temp_filename);\n-#endif\n+    fatal_io_error (\"can't open %s\", filename);\n+  free (filename);\n   return stream;\n }\n \f\n@@ -6087,9 +6048,7 @@ mips_asm_file_end (file)\n       if (fclose (asm_out_text_file) != 0)\n \tfatal_io_error (\"can't close %s\", temp_filename);\n \n-#ifdef __MSDOS__\n       unlink (temp_filename);\n-#endif\n     }\n }\n "}, {"sha": "fee5bd384cc4c7626c13e26d9bfa6f3537071db7", "filename": "gcc/config/mips/xm-mips.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fmips%2Fxm-mips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fmips%2Fxm-mips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-mips.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,6 @@\n /* Configuration for GNU C-compiler for MIPS Rx000 family\n-   Copyright (C) 1989, 1990, 1991, 1993, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1990, 1991, 1993, 1997, 2001\n+   Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -34,11 +35,6 @@ Boston, MA 02111-1307, USA.  */\n #define HOST_WORDS_BIG_ENDIAN\n #endif\n \n-/* Enable host-conditionals for MIPS machines.  */\n-#ifndef MIPS\n-#define MIPS 1\n-#endif\n-\n /* A code distinguishing the floating point format of the host\n    machine.  There are three defined values: IEEE_FLOAT_FORMAT,\n    VAX_FLOAT_FORMAT, and UNKNOWN_FLOAT_FORMAT.  */\n@@ -70,7 +66,5 @@ extern void * alloca ();\n extern char * alloca ();\n #endif\n \n-/* for the emacs version of alloca */\n-#define STACK_DIRECTION\t-1\n #endif\n #endif /* not MIPS_OVERRIDE_ALLOCA */"}, {"sha": "cadbbe378856fe8a112c8fbdce7d9edcd9b94dcc", "filename": "gcc/config/rs6000/xm-beos.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Frs6000%2Fxm-beos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Frs6000%2Fxm-beos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxm-beos.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for BeOS host.\n-   Copyright (C) 1997, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1999, 2001 Free Software Foundation, Inc.\n    Contributed by Fred Fish (fnf@cygnus.com), based on xm-rs6000.h\n    by Richard Kenner (kenner@vlsi1.ultra.nyu.edu).\n \n@@ -74,8 +74,6 @@ extern void *alloca ();\n #define HAVE_RENAME\n #endif\n \n-#define STDC_HEADERS 1\n-\n /* STANDARD_INCLUDE_DIR is the equivalent of \"/usr/include\" on UNIX. */\n \n #define STANDARD_INCLUDE_DIR\t\"/boot/develop/headers/posix\""}, {"sha": "35115a0884e52bf0fe4f4ead13a1e5b7b3259fbe", "filename": "gcc/config/vax/xm-vms.h", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fvax%2Fxm-vms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fvax%2Fxm-vms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fxm-vms.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,6 @@\n /* Configuration for GNU C-compiler for Vax.\n-   Copyright (C) 1987, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1994, 1995, 1996, 1997, 2001\n+   Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -64,26 +65,11 @@ Boston, MA 02111-1307, USA.  */\n #define VMS\n #endif\n \n-#ifndef __GNUC__\n-/* not present, at least in VAX-11 C (VMS) v2.2 */\n-#define R_OK 4\n-#define W_OK 2\n-#define X_OK 1\n-#define F_OK 0\n-#endif\n-\n #define GCC_INCLUDE_DIR \"///not used with VMS///\"\t/* nonsense string for now */\n \n /* and define a local equivalent (sort of) for unlink */\n #define unlink remove\n \n-/* Used by the preprocessor to limit size of disk I/O chunks.\n-   64K - 1 is the maximum supported by VAXCRTL.  Amounts in excess\n-   of 35 blocks will bypass the VMS V6.x VIOC [Virtual I/O Cache],\n-   so we'll pick a limit of 16K (32 blocks).  */\n-#define MAX_READ_LEN\t(32 * 512)\n-#define MAX_WRITE_LEN\t(32 * 512)\n-\n /* Under VMS a directory specification can be enclosed either in square\n    brackets or in angle brackets.  Thus we need to check both.  This\n    macro is used to help compare filenames in cp-lex.c.\n@@ -138,7 +124,6 @@ Boston, MA 02111-1307, USA.  */\n /* Customizations/kludges for building with DEC's VAX C compiler\n    rather than GCC.  */\n \n-#define NO_SYS_PARAMS_H\t\t/* don't have <sys/params.h> */\n #define USE_C_ALLOCA\t\t/* using alloca.c */\n #define QSORT_WORKAROUND\t/* do not use VAXCRTL's qsort */\n \n@@ -179,7 +164,6 @@ Boston, MA 02111-1307, USA.  */\n    after having previously sorted something that was a multiple of 4\n    can produce wrong results and result in data corruption.)  We'll\n    use our own substitute (in vax.c) instead.  */\n-/* #define QSORT_WORKAROUND */\n #ifdef QSORT_WORKAROUND\n #define qsort not_qsort\n #endif"}, {"sha": "d3b9b274a42af5f4d017878c58c1ae4879e386aa", "filename": "gcc/config/xm-interix.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fxm-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fxm-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-interix.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU compiler for processor running Interix\n-   Copyright (C) 1993, 1995, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1999, 2001 Free Software Foundation, Inc.\n    Donn Terry, Softway Systems, Inc,\n    from code\n       Contributed by Douglas B. Rupp (drupp@cs.washington.edu)\n@@ -31,10 +31,6 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #endif\n \n-#ifndef USE_PROTOTYPES\n-#define USE_PROTOTYPES 1\n-#endif\n-\n /* If not compiled with GNU C, use the portable alloca.  */\n #ifndef __GNUC__\n #define USE_C_ALLOCA 1"}, {"sha": "72ee3423d5b1da1ab409493c79de8672771774aa", "filename": "gcc/config/xm-lynx.h", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fxm-lynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fxm-lynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-lynx.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for Lynx.\n-   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -29,23 +29,3 @@ Boston, MA 02111-1307, USA.  */\n /* Arguments to use with `exit'.  */\n #define SUCCESS_EXIT_CODE 0\n #define FATAL_EXIT_CODE 33\n-\n-/* Lynx has no vfork system call.  */\n-#define vfork fork\n-\n-/* Lynx has a non-standard mktemp function.  */\n-/* ??? This is simpler than creating YATM: Yet Another Target Macro.  */\n-#define mktemp lynx_mktemp\n-\n-#define lynx_mktemp(template) \\\n-do {\t\t\t\t\\\n-  int pid = getpid ();\t\t\\\n-  char *t = template;\t\t\\\n-  char *p;\t\t\t\\\n-  p = t + strlen (t);\t\t\\\n-  while (*--p == 'X')\t\t\\\n-    {\t\t\t\t\\\n-      *p = (pid % 10) + '0';\t\\\n-      pid /= 10;\t\t\\\n-    }\t\t\t\t\\\n-} while (0)"}, {"sha": "e6bf52bae6d220c7481befa41fbcb1a0d4cf15c5", "filename": "gcc/config/xm-svr3.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fxm-svr3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fconfig%2Fxm-svr3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-svr3.h?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for hosts running System V Release 3\n-   Copyright (C) 1991, 1993, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 1996, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -19,7 +19,3 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #define USG\n-\n-#ifndef SVR3\n-#define SVR3\n-#endif"}, {"sha": "7ce616e01b9e19dd0edade9f1ae7e732f138daa2", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -1,3 +1,7 @@\n+2001-02-24  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* com.c: Don't define STDC_HEADERS, autoconf handles it.\n+\n Fri Feb 23 15:28:39 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* com.c (set_block): Set NAMES and BLOCKS from BLOCK."}, {"sha": "b4a188609c1e56669e807abf6a3ef2bde3b8ba29", "filename": "gcc/f/com.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -100,7 +100,6 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \tHAVE_STDLIB_H\n \tHAVE_SYS_TIME_H\n \tHAVE_UNISTD_H\n-\tSTDC_HEADERS\n \tTIME_WITH_SYS_TIME\n    In the mean time, we'll get by with approximations based\n    on existing GCC configuration symbols.  */\n@@ -112,9 +111,6 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n # ifndef HAVE_UNISTD_H\n # define HAVE_UNISTD_H 1\n # endif\n-# ifndef STDC_HEADERS\n-# define STDC_HEADERS 1\n-# endif\n #endif /* defined (POSIX) */\n \n #if defined (POSIX) || (defined (USG) && !defined (VMS))"}, {"sha": "08dd6e2b6550583af9bdd2dd262f020809bc2c4d", "filename": "gcc/gcc.texi", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000b5f54b57877f731db1ae7d5ef51f9d02a1014/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=000b5f54b57877f731db1ae7d5ef51f9d02a1014", "patch": "@@ -4194,15 +4194,6 @@ characters.\n @item POSIX\n Define this if your system is POSIX.1 compliant.\n \n-@findex USE_PROTOTYPES\n-@item USE_PROTOTYPES\n-Define this to be 1 if you know that the host compiler supports\n-prototypes, even if it doesn't define __STDC__, or define\n-it to be 0 if you do not want any prototypes used in compiling\n-GCC.  If @samp{USE_PROTOTYPES} is not defined, it will be\n-determined automatically whether your compiler supports\n-prototypes by checking if @samp{__STDC__} is defined.\n-\n @findex PATH_SEPARATOR\n @item PATH_SEPARATOR\n Define this macro to be a C character constant representing the"}]}