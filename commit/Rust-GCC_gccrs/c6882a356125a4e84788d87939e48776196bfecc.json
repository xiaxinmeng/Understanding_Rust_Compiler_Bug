{"sha": "c6882a356125a4e84788d87939e48776196bfecc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4ODJhMzU2MTI1YTRlODQ3ODhkODc5MzllNDg3NzYxOTZiZmVjYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-27T23:47:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-27T23:47:42Z"}, "message": "lex.c (do_identifier): Also generate LOOKUP_EXPR for RESULT_DECL.\n\n\t* lex.c (do_identifier): Also generate LOOKUP_EXPR for RESULT_DECL.\n\t* method.c (hack_identifier): Also check for using RESULT_DECL\n\tfrom outer context.\n\nFrom-SVN: r23381", "tree": {"sha": "b2d4edeb25133dd9406454b8da14ade8f20a818c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2d4edeb25133dd9406454b8da14ade8f20a818c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6882a356125a4e84788d87939e48776196bfecc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6882a356125a4e84788d87939e48776196bfecc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6882a356125a4e84788d87939e48776196bfecc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6882a356125a4e84788d87939e48776196bfecc/comments", "author": null, "committer": null, "parents": [{"sha": "c75d528421db70afbe9477aa5ba8615503dcb847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75d528421db70afbe9477aa5ba8615503dcb847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c75d528421db70afbe9477aa5ba8615503dcb847"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "328039aaec25da7b4e7b9f30ae2f7bb5165f50d7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6882a356125a4e84788d87939e48776196bfecc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6882a356125a4e84788d87939e48776196bfecc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c6882a356125a4e84788d87939e48776196bfecc", "patch": "@@ -1,3 +1,9 @@\n+1998-10-27  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* lex.c (do_identifier): Also generate LOOKUP_EXPR for RESULT_DECL.\n+\t* method.c (hack_identifier): Also check for using RESULT_DECL\n+\tfrom outer context.\n+\n 1998-10-27  Mark Mitchell  <mark@markmitchell.com>\n \n \t* decl.c (grokdeclarator): Use type_quals, rather than constp,"}, {"sha": "30c70489abc56a88f3cb4837988fcb8b81a2c97c", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6882a356125a4e84788d87939e48776196bfecc/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6882a356125a4e84788d87939e48776196bfecc/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=c6882a356125a4e84788d87939e48776196bfecc", "patch": "@@ -3070,6 +3070,7 @@ do_identifier (token, parsing, args)\n \t      && CP_DECL_CONTEXT (id)\n \t      && TREE_CODE (CP_DECL_CONTEXT (id)) == FUNCTION_DECL)\n \t  || TREE_CODE (id) == PARM_DECL\n+\t  || TREE_CODE (id) == RESULT_DECL\n \t  || TREE_CODE (id) == USING_DECL))\n     id = build_min_nt (LOOKUP_EXPR, token);\n       "}, {"sha": "ee0185b761b6cc7c076d3d422088fc9f8441519c", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6882a356125a4e84788d87939e48776196bfecc/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6882a356125a4e84788d87939e48776196bfecc/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=c6882a356125a4e84788d87939e48776196bfecc", "patch": "@@ -1924,7 +1924,8 @@ hack_identifier (value, name)\n   else\n     mark_used (value);\n \n-  if (TREE_CODE (value) == VAR_DECL || TREE_CODE (value) == PARM_DECL)\n+  if (TREE_CODE (value) == VAR_DECL || TREE_CODE (value) == PARM_DECL\n+      || TREE_CODE (value) == RESULT_DECL)\n     {\n       tree context = decl_function_context (value);\n       if (context != NULL_TREE && context != current_function_decl"}]}