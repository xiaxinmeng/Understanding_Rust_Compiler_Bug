{"sha": "69927b59f2c4b5de206b5fb336821ba8dd645e59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk5MjdiNTlmMmM0YjVkZTIwNmI1ZmIzMzY4MjFiYThkZDY0NWU1OQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-12-04T22:26:16Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-12-04T22:26:16Z"}, "message": "cppspec.c (lang_specific_driver): Set is_cpp_driver.\n\n\t* cppspec.c (lang_specific_driver): Set is_cpp_driver.\n\t* gcc.c (process_command): Ensure the cpp driver sees\n\t--help and --target-help, and that the help is printed\n\texactly once.\n\nFrom-SVN: r47627", "tree": {"sha": "4aec21524555a6f1865b61882e878e800162659f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4aec21524555a6f1865b61882e878e800162659f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69927b59f2c4b5de206b5fb336821ba8dd645e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69927b59f2c4b5de206b5fb336821ba8dd645e59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69927b59f2c4b5de206b5fb336821ba8dd645e59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69927b59f2c4b5de206b5fb336821ba8dd645e59/comments", "author": null, "committer": null, "parents": [{"sha": "e288604a6a9e320c3d1434733ce5bd6609e87042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e288604a6a9e320c3d1434733ce5bd6609e87042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e288604a6a9e320c3d1434733ce5bd6609e87042"}], "stats": {"total": 91, "additions": 55, "deletions": 36}, "files": [{"sha": "b968b3bce1ab18633858c172f1119b457a8b03bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69927b59f2c4b5de206b5fb336821ba8dd645e59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69927b59f2c4b5de206b5fb336821ba8dd645e59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69927b59f2c4b5de206b5fb336821ba8dd645e59", "patch": "@@ -1,3 +1,10 @@\n+2001-12-04  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cppspec.c (lang_specific_driver): Set is_cpp_driver.\n+\t* gcc.c (process_command): Ensure the cpp driver sees\n+\t--help and --target-help, and that the help is printed\n+\texactly once.\n+\n 2001-12-04  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/elfos.h (ASM_OUTPUT_INTERNAL_LABEL): Display count unsigned.\n@@ -140,7 +147,7 @@\n 2001-12-03  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \tPR c/4988\n-\t* (process_command): Don't add a preprocessor option for\n+\t* gcc.c (process_command): Don't add a preprocessor option for\n \t--help and --target-help; cc1 is enough.\n \n 2001-12-03  Neil Booth  <neil@daikokuya.demon.co.uk>"}, {"sha": "5f787d61c8dbbe8cfaa97a4b98c9386a78e6e048", "filename": "gcc/cppspec.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69927b59f2c4b5de206b5fb336821ba8dd645e59/gcc%2Fcppspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69927b59f2c4b5de206b5fb336821ba8dd645e59/gcc%2Fcppspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppspec.c?ref=69927b59f2c4b5de206b5fb336821ba8dd645e59", "patch": "@@ -103,6 +103,9 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n   int i, j, quote = 0;\n   const char **new_argv;\n   int new_argc;\n+  extern int is_cpp_driver;\n+\n+  is_cpp_driver = 1;\n \n   /* First pass.  If we see an -S or -c, barf.  If we see an input file,\n      turn off read_stdin.  If we see a second input file, it is actually"}, {"sha": "b65cbb3c388b86f4925cebbdec7b185e12f0a243", "filename": "gcc/gcc.c", "status": "modified", "additions": 44, "deletions": 35, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69927b59f2c4b5de206b5fb336821ba8dd645e59/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69927b59f2c4b5de206b5fb336821ba8dd645e59/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=69927b59f2c4b5de206b5fb336821ba8dd645e59", "patch": "@@ -143,6 +143,9 @@ static const char dir_separator_str[] = { DIR_SEPARATOR, 0 };\n \n #define MIN_FATAL_STATUS 1\n \n+/* Flag set by cppspec.c to 1.  */\n+int is_cpp_driver;\n+\n /* Flag saying to pass the greatest exit code returned by a sub-process\n    to the calling program.  */\n static int pass_exit_codes;\n@@ -3310,6 +3313,9 @@ process_command (argc, argv)\n \t  n_infiles++;\n \t  n_switches++;\n \n+\t  /* CPP driver cannot obtain switch from cc1_options.  */\n+\t  if (is_cpp_driver)\n+\t    add_preprocessor_option (\"--help\", 6);\n \t  add_assembler_option (\"--help\", 6);\n \t  add_linker_option (\"--help\", 6);\n \t}\n@@ -3322,6 +3328,9 @@ process_command (argc, argv)\n           n_infiles++;\n           n_switches++;\n \n+\t  /* CPP driver cannot obtain switch from cc1_options.  */\n+\t  if (is_cpp_driver)\n+\t    add_preprocessor_option (\"--target-help\", 13);\n           add_assembler_option (\"--target-help\", 13);\n           add_linker_option (\"--target-help\", 13);\n         }\n@@ -3792,41 +3801,10 @@ process_command (argc, argv)\n \t;\n       else if (! strcmp (argv[i], \"-print-multi-directory\"))\n \t;\n-      else if (strcmp (argv[i], \"-ftarget-help\") == 0)\n-        {\n-           /* Create a dummy input file, so that we can pass --target-help on to\n-              the various sub-processes.  */\n-           infiles[n_infiles].language = \"c\";\n-           infiles[n_infiles++].name   = \"target-dummy\";\n-\n-           /* Preserve the --target-help switch so that it can be caught by\n-              the cc1 spec string.  */\n-           switches[n_switches].part1     = \"--target-help\";\n-           switches[n_switches].args      = 0;\n-           switches[n_switches].live_cond = SWITCH_OK;\n-           switches[n_switches].validated = 0;\n-\n-           n_switches++;\n-        }\n-      else if (strcmp (argv[i], \"-fhelp\") == 0)\n-\t{\n-\t  if (verbose_flag)\n-\t    {\n-\t      /* Create a dummy input file, so that we can pass --help on to\n-\t\t the various sub-processes.  */\n-\t      infiles[n_infiles].language = \"c\";\n-\t      infiles[n_infiles++].name   = \"help-dummy\";\n-\n-\t      /* Preserve the --help switch so that it can be caught by the\n-\t\t cc1 spec string.  */\n-\t      switches[n_switches].part1     = \"--help\";\n-\t      switches[n_switches].args      = 0;\n-\t      switches[n_switches].live_cond = SWITCH_OK;\n-\t      switches[n_switches].validated = 0;\n-\n-\t      n_switches++;\n-\t    }\n-\t}\n+      else if (! strcmp (argv[i], \"-ftarget-help\"))\n+\t;\n+      else if (! strcmp (argv[i], \"-fhelp\"))\n+\t;\n       else if (argv[i][0] == '+' && argv[i][1] == 'e')\n \t{\n \t  /* Compensate for the +e options to the C++ front-end;\n@@ -3989,6 +3967,37 @@ process_command (argc, argv)\n   if (n_infiles == last_language_n_infiles && spec_lang != 0)\n     error (\"warning: `-x %s' after last input file has no effect\", spec_lang);\n \n+  /* Ensure we only invoke each subprocess once.  */\n+  if (target_help_flag || print_help_list)\n+    {\n+      n_infiles = 1;\n+\n+      /* Create a dummy input file, so that we can pass --target-help on to\n+\t the various sub-processes.  */\n+      infiles[0].language = \"c\";\n+      infiles[0].name   = \"help-dummy\";\n+\n+      if (target_help_flag)\n+\t{\n+\t  switches[n_switches].part1     = \"--target-help\";\n+\t  switches[n_switches].args      = 0;\n+\t  switches[n_switches].live_cond = SWITCH_OK;\n+\t  switches[n_switches].validated = 0;\n+\n+\t  n_switches++;\n+\t}\n+\n+      if (print_help_list)\n+\t{\n+\t  switches[n_switches].part1     = \"--help\";\n+\t  switches[n_switches].args      = 0;\n+\t  switches[n_switches].live_cond = SWITCH_OK;\n+\t  switches[n_switches].validated = 0;\n+\n+\t  n_switches++;\n+\t}\n+    }\n+\n   switches[n_switches].part1 = 0;\n   infiles[n_infiles].name = 0;\n }"}]}