{"sha": "7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QwN2RlMGIyZTUxZWMwMDQ5NGI2ZjVmZmQwYTBhYjlmNDA5ZGZiNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-11-19T13:28:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-11-19T13:28:35Z"}, "message": "re PR middle-end/58956 (wrong code at -O1 and above (affecting gcc 4.6 to trunk))\n\n2013-11-19  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/58956\n\t* tree-ssa-ter.c (find_replaceable_in_bb): Avoid forwarding\n\tloads into stmts that may clobber it.\n\n\t* gcc.dg/torture/pr58956.c: New testcase.\n\nFrom-SVN: r205026", "tree": {"sha": "d1606dd653bef02ed1c44555e1bf88b1429b3874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1606dd653bef02ed1c44555e1bf88b1429b3874"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4d05578efc40cd1eaa1370d1bba58029c545ea0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d05578efc40cd1eaa1370d1bba58029c545ea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d05578efc40cd1eaa1370d1bba58029c545ea0"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "fdfb2ef64bda148b68e54f3b7a5abd96ca3829f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4", "patch": "@@ -1,3 +1,9 @@\n+2013-11-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/58956\n+\t* tree-ssa-ter.c (find_replaceable_in_bb): Avoid forwarding\n+\tloads into stmts that may clobber it.\n+\n 2013-11-19  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* cgraphunit.c (symtab_terminator): New variable."}, {"sha": "89776eaab1a048d981ce291e800405c8ef5ba924", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4", "patch": "@@ -1,3 +1,8 @@\n+2013-11-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/58956\n+\t* gcc.dg/torture/pr58956.c: New testcase.\n+\n 2013-11-19  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/ubsan/null-1.c: New test."}, {"sha": "7576ba7fb5cad0b2ded6f89791905b7406e9f3b3", "filename": "gcc/testsuite/gcc.dg/torture/pr58956.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58956.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58956.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58956.c?ref=7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+struct S\n+{\n+  int f0;\n+} a = {1}, b, g, *c = &b, **f = &c;\n+\n+int *d, **e = &d, h;\n+\n+struct S\n+foo ()\n+{\n+  *e = &h;\n+  if (!d) \n+    __builtin_unreachable ();\n+  *f = &g;\n+  return a;\n+}\n+\n+int\n+main ()\n+{\n+  struct S *i = c;\n+  *i = foo ();\n+  if (b.f0 != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "9b9e655b7263a7740f8f93891046dde2944a1c34", "filename": "gcc/tree-ssa-ter.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4/gcc%2Ftree-ssa-ter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4/gcc%2Ftree-ssa-ter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ter.c?ref=7d07de0b2e51ec00494b6f5ffd0a0ab9f409dfb4", "patch": "@@ -602,8 +602,7 @@ find_replaceable_in_bb (temp_expr_table_p tab, basic_block bb)\n \t      /* If the stmt does a memory store and the replacement\n \t         is a load aliasing it avoid creating overlapping\n \t\t assignments which we cannot expand correctly.  */\n-\t      if (gimple_vdef (stmt)\n-\t\t  && gimple_assign_single_p (stmt))\n+\t      if (gimple_vdef (stmt))\n \t\t{\n \t\t  gimple def_stmt = SSA_NAME_DEF_STMT (use);\n \t\t  while (is_gimple_assign (def_stmt)\n@@ -612,8 +611,8 @@ find_replaceable_in_bb (temp_expr_table_p tab, basic_block bb)\n \t\t      = SSA_NAME_DEF_STMT (gimple_assign_rhs1 (def_stmt));\n \t\t  if (gimple_vuse (def_stmt)\n \t\t      && gimple_assign_single_p (def_stmt)\n-\t\t      && refs_may_alias_p (gimple_assign_lhs (stmt),\n-\t\t\t\t\t   gimple_assign_rhs1 (def_stmt)))\n+\t\t      && stmt_may_clobber_ref_p (stmt,\n+\t\t\t\t\t\t gimple_assign_rhs1 (def_stmt)))\n \t\t    same_root_var = true;\n \t\t}\n "}]}