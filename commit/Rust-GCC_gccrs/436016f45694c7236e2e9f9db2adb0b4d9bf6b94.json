{"sha": "436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM2MDE2ZjQ1Njk0YzcyMzZlMmU5ZjlkYjJhZGIwYjRkOWJmNmI5NA==", "commit": {"author": {"name": "Dennis Zhang", "email": "dennis.zhang@arm.com", "date": "2020-02-21T15:36:13Z"}, "committer": {"name": "Dennis Zhang", "email": "dennis.zhang@arm.com", "date": "2020-02-21T15:36:13Z"}, "message": "arm: ACLE I8MM multiply-accumulate\n\nThis patch adds intrinsics for matrix multiply-accumulate instructions\nincluding vmmlaq_s32, vmmlaq_u32, and vusmmlaq_s32.\n\ngcc/ChangeLog:\n\n2020-02-21  Dennis Zhang  <dennis.zhang@arm.com>\n\n\t* config/arm/arm_neon.h (vmmlaq_s32, vmmlaq_u32, vusmmlaq_s32): New.\n\t* config/arm/arm_neon_builtins.def (smmla, ummla, usmmla): New.\n\t* config/arm/iterators.md (MATMUL): New iterator.\n\t(sup): Add UNSPEC_MATMUL_S, UNSPEC_MATMUL_U, and UNSPEC_MATMUL_US.\n\t(mmla_sfx): New attribute.\n\t* config/arm/neon.md (neon_<sup>mmlav16qi): New.\n\t* config/arm/unspecs.md (UNSPEC_MATMUL_S, UNSPEC_MATMUL_U): New.\n\t(UNSPEC_MATMUL_US): New.\n\ngcc/testsuite/ChangeLog:\n\n2020-02-21  Dennis Zhang  <dennis.zhang@arm.com>\n\n\t* gcc.target/arm/simd/vmmla_1.c: New test.", "tree": {"sha": "02de5ac2ba0cf5b55459d05ccf280431add435a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02de5ac2ba0cf5b55459d05ccf280431add435a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/comments", "author": null, "committer": null, "parents": [{"sha": "b59506cd8b9f92293fc154c1470691534e29ddcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b59506cd8b9f92293fc154c1470691534e29ddcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b59506cd8b9f92293fc154c1470691534e29ddcf"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "833fa6a8383abfb893814ed218e4f6cd371664cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "patch": "@@ -1,3 +1,14 @@\n+2020-02-21  Dennis Zhang  <dennis.zhang@arm.com>\n+\n+\t* config/arm/arm_neon.h (vmmlaq_s32, vmmlaq_u32, vusmmlaq_s32): New.\n+\t* config/arm/arm_neon_builtins.def (smmla, ummla, usmmla): New.\n+\t* config/arm/iterators.md (MATMUL): New iterator.\n+\t(sup): Add UNSPEC_MATMUL_S, UNSPEC_MATMUL_U, and UNSPEC_MATMUL_US.\n+\t(mmla_sfx): New attribute.\n+\t* config/arm/neon.md (neon_<sup>mmlav16qi): New.\n+\t* config/arm/unspecs.md (UNSPEC_MATMUL_S, UNSPEC_MATMUL_U): New.\n+\t(UNSPEC_MATMUL_US): New.\n+\n 2020-02-21  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n \n \t* config/arm/arm.md: Prevent scalar shifts from being used when big"}, {"sha": "e81681aa415437e61857e7edcc09b1a3ef4eeaa8", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "patch": "@@ -18791,6 +18791,34 @@ vsudotq_lane_s32 (int32x4_t __r, int8x16_t __a,\n #pragma GCC pop_options\n #endif\n \n+/* AdvSIMD 8-bit Integer Matrix Multiply (I8MM) intrinsics.  */\n+\n+#pragma GCC push_options\n+#pragma GCC target (\"arch=armv8.2-a+i8mm\")\n+\n+__extension__ extern __inline int32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vmmlaq_s32 (int32x4_t __r, int8x16_t __a, int8x16_t __b)\n+{\n+  return __builtin_neon_smmlav16qi (__r, __a, __b);\n+}\n+\n+__extension__ extern __inline uint32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vmmlaq_u32 (uint32x4_t __r, uint8x16_t __a, uint8x16_t __b)\n+{\n+  return __builtin_neon_ummlav16qi_uuuu (__r, __a, __b);\n+}\n+\n+__extension__ extern __inline int32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vusmmlaq_s32 (int32x4_t __r, uint8x16_t __a, int8x16_t __b)\n+{\n+  return __builtin_neon_usmmlav16qi_ssus (__r, __a, __b);\n+}\n+\n+#pragma GCC pop_options\n+\n #ifdef __cplusplus\n }\n #endif"}, {"sha": "f4a97fd764c3f92f850afeecfb1f997cb66bd207", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "patch": "@@ -377,3 +377,7 @@ VAR2 (MAC_LANE_PAIR, vcmlaq_lane0, v4sf, v8hf)\n VAR2 (MAC_LANE_PAIR, vcmlaq_lane90, v4sf, v8hf)\n VAR2 (MAC_LANE_PAIR, vcmlaq_lane180, v4sf, v8hf)\n VAR2 (MAC_LANE_PAIR, vcmlaq_lane270, v4sf, v8hf)\n+\n+VAR1 (TERNOP, smmla, v16qi)\n+VAR1 (UTERNOP, ummla, v16qi)\n+VAR1 (USTERNOP, usmmla, v16qi)"}, {"sha": "136c45274aef61c7c41b553898e41b3838300a4c", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "patch": "@@ -487,6 +487,8 @@\n (define_int_iterator VCADD [UNSPEC_VCADD90 UNSPEC_VCADD270])\n (define_int_iterator VCMLA [UNSPEC_VCMLA UNSPEC_VCMLA90 UNSPEC_VCMLA180 UNSPEC_VCMLA270])\n \n+(define_int_iterator MATMUL [UNSPEC_MATMUL_S UNSPEC_MATMUL_U UNSPEC_MATMUL_US])\n+\n ;;----------------------------------------------------------------------------\n ;; Mode attributes\n ;;----------------------------------------------------------------------------\n@@ -942,6 +944,7 @@\n   (UNSPEC_DOT_S \"s\") (UNSPEC_DOT_U \"u\")\n   (UNSPEC_DOT_US \"us\") (UNSPEC_DOT_SU \"su\")\n   (UNSPEC_SSAT16 \"s\") (UNSPEC_USAT16 \"u\")\n+  (UNSPEC_MATMUL_S \"s\") (UNSPEC_MATMUL_U \"u\") (UNSPEC_MATMUL_US \"us\")\n ])\n \n (define_int_attr vfml_half\n@@ -1110,6 +1113,9 @@\n \t\t\t    (UNSPEC_SMUADX \"smuadx\") (UNSPEC_SSAT16 \"ssat16\")\n \t\t\t    (UNSPEC_USAT16 \"usat16\")])\n \n+(define_int_attr mmla_sfx [(UNSPEC_MATMUL_S \"s8\") (UNSPEC_MATMUL_U \"u8\")\n+\t\t\t   (UNSPEC_MATMUL_US \"s8\")])\n+\n ;; Both kinds of return insn.\n (define_code_iterator RETURNS [return simple_return])\n (define_code_attr return_str [(return \"\") (simple_return \"simple_\")])"}, {"sha": "039cd90c3da140f48db764d51dda80036d8a7c76", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "patch": "@@ -6585,3 +6585,14 @@ if (BYTES_BIG_ENDIAN)\n  \"vabd.<V_if_elem> %<V_reg>0, %<V_reg>1, %<V_reg>2\"\n  [(set_attr \"type\" \"neon_fp_abd_s<q>\")]\n )\n+\n+(define_insn \"neon_<sup>mmlav16qi\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=w\")\n+\t(plus:V4SI\n+\t (unspec:V4SI [(match_operand:V16QI 2 \"register_operand\" \"w\")\n+\t\t       (match_operand:V16QI 3 \"register_operand\" \"w\")] MATMUL)\n+\t (match_operand:V4SI 1 \"register_operand\" \"0\")))]\n+  \"TARGET_I8MM\"\n+  \"v<sup>mmla.<mmla_sfx>\\t%q0, %q2, %q3\"\n+  [(set_attr \"type\" \"neon_mla_s_q\")]\n+)"}, {"sha": "c8f3f95c7f3176cae1ad9d9db9647b961078965d", "filename": "gcc/config/arm/unspecs.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Funspecs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Fconfig%2Farm%2Funspecs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funspecs.md?ref=436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "patch": "@@ -503,4 +503,7 @@\n   UNSPEC_VCMLA90\n   UNSPEC_VCMLA180\n   UNSPEC_VCMLA270\n+  UNSPEC_MATMUL_S\n+  UNSPEC_MATMUL_U\n+  UNSPEC_MATMUL_US\n ])"}, {"sha": "b608a1aa83b9eaf6bbebc5004628d28f09bf14dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "patch": "@@ -1,3 +1,7 @@\n+2020-02-21  Dennis Zhang  <dennis.zhang@arm.com>\n+\n+\t* gcc.target/arm/simd/vmmla_1.c: New test.\n+\n 2020-02-21  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n \n \t* gcc.target/arm/armv8_1m-shift-imm-1.c: Add MVE target checks."}, {"sha": "b766a9141cee971445dbba72a71985a6a60ef428", "filename": "gcc/testsuite/gcc.target/arm/simd/vmmla_1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvmmla_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436016f45694c7236e2e9f9db2adb0b4d9bf6b94/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvmmla_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvmmla_1.c?ref=436016f45694c7236e2e9f9db2adb0b4d9bf6b94", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do assemble } */\n+/* { dg-require-effective-target arm_v8_2a_i8mm_ok } */\n+/* { dg-options \"-save-temps -O2\" } */\n+/* { dg-additional-options \"-march=armv8.2-a+i8mm\" } */\n+\n+#include \"arm_neon.h\"\n+\n+int32x4_t\n+test_vmmlaq_s32 (int32x4_t r, int8x16_t a, int8x16_t b)\n+{\n+  return vmmlaq_s32 (r, a, b);\n+}\n+\n+uint32x4_t\n+test_vmmlaq_u32 (uint32x4_t r, uint8x16_t a, uint8x16_t b)\n+{\n+  return vmmlaq_u32 (r, a, b);\n+}\n+\n+int32x4_t\n+test_vusmmlaq_s32 (int32x4_t r, uint8x16_t a, int8x16_t b)\n+{\n+  return vusmmlaq_s32 (r, a, b);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tvsmmla.s8\\tq[0-9]+, q[0-9]+, q[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvummla.u8\\tq[0-9]+, q[0-9]+, q[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvusmmla.s8\\tq[0-9]+, q[0-9]+, q[0-9]+} 1 } } */"}]}