{"sha": "6d32822515d3fee23547ea9a680f13e27e877795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQzMjgyMjUxNWQzZmVlMjM1NDdlYTlhNjgwZjEzZTI3ZTg3Nzc5NQ==", "commit": {"author": {"name": "Petr Machata", "email": "machata@post.cz", "date": "2005-12-13T08:01:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-12-13T08:01:53Z"}, "message": "re PR c++/24907 (\"int x, ;\" accepted)\n\n2005-12-13  Petr Machata  <machata@post.cz>\n\n\tPR c++/24907\n\t* parser.c (cp_parser_simple_declaration): Require comma at the\n\tbeginning of processing second and later declarators, instead of\n\tallowing the comma at the end of each iteration.\n\n\t* g++.dg/parse/comma2.C: New test.\n\nFrom-SVN: r108462", "tree": {"sha": "bf8b55646f941b7eb59488051cdbb6a754b306e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf8b55646f941b7eb59488051cdbb6a754b306e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d32822515d3fee23547ea9a680f13e27e877795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d32822515d3fee23547ea9a680f13e27e877795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d32822515d3fee23547ea9a680f13e27e877795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d32822515d3fee23547ea9a680f13e27e877795/comments", "author": null, "committer": null, "parents": [{"sha": "7e825da03edc82020de4d245b22fb123f5e976d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e825da03edc82020de4d245b22fb123f5e976d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e825da03edc82020de4d245b22fb123f5e976d8"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "e9cfad72a4bf392c1c2a0b82a485f2beb49e1fe2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d32822515d3fee23547ea9a680f13e27e877795/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d32822515d3fee23547ea9a680f13e27e877795/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6d32822515d3fee23547ea9a680f13e27e877795", "patch": "@@ -1,3 +1,10 @@\n+2005-12-13  Petr Machata  <machata@post.cz>\n+\n+\tPR c++/24907\n+\t* parser.c (cp_parser_simple_declaration): Require comma at the\n+\tbeginning of processing second and later declarators, instead of\n+\tallowing the comma at the end of each iteration.\n+\n 2005-12-12  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/25300"}, {"sha": "25488c725408277547e800504d8d20b711b5e910", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d32822515d3fee23547ea9a680f13e27e877795/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d32822515d3fee23547ea9a680f13e27e877795/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=6d32822515d3fee23547ea9a680f13e27e877795", "patch": "@@ -7145,7 +7145,16 @@ cp_parser_simple_declaration (cp_parser* parser,\n       bool function_definition_p;\n       tree decl;\n \n-      saw_declarator = true;\n+      if (saw_declarator)\n+\t{\n+\t  /* If we are processing next declarator, coma is expected */\n+\t  token = cp_lexer_peek_token (parser->lexer);\n+\t  gcc_assert (token->type == CPP_COMMA);\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t}\n+      else\n+\tsaw_declarator = true;\n+\n       /* Parse the init-declarator.  */\n       decl = cp_parser_init_declarator (parser, &decl_specifiers,\n \t\t\t\t\tfunction_definition_allowed_p,\n@@ -7180,7 +7189,7 @@ cp_parser_simple_declaration (cp_parser* parser,\n       token = cp_lexer_peek_token (parser->lexer);\n       /* If it's a `,', there are more declarators to come.  */\n       if (token->type == CPP_COMMA)\n-\tcp_lexer_consume_token (parser->lexer);\n+\t/* will be consumed next time around */;\n       /* If it's a `;', we are done.  */\n       else if (token->type == CPP_SEMICOLON)\n \tbreak;"}, {"sha": "ce14f6a9b4a4f3932ddf84553016845c78b8eb45", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d32822515d3fee23547ea9a680f13e27e877795/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d32822515d3fee23547ea9a680f13e27e877795/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d32822515d3fee23547ea9a680f13e27e877795", "patch": "@@ -1,3 +1,8 @@\n+2005-12-13  Petr Machata  <machata@post.cz>\n+\n+\tPR c++/24907\n+\t* g++.dg/parse/comma2.C: New test.\n+\n 2005-12-13  Mark Mitchell  <mark@codesourcery.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "0f405876d5753759c74aa7eaf78cffd63d47b0ba", "filename": "gcc/testsuite/g++.dg/parse/comma2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d32822515d3fee23547ea9a680f13e27e877795/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcomma2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d32822515d3fee23547ea9a680f13e27e877795/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcomma2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcomma2.C?ref=6d32822515d3fee23547ea9a680f13e27e877795", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+// PR c++/24907 [3.4/4.0/4.1/4.2 Regression] \"int x, ;\" accepted\n+\n+int x;\n+int y,; /* { dg-error \"expected\" } */\n+\n+int main()\n+{\n+  int a;\n+  int b,;    /* { dg-error \"expected\" } */\n+  int c,d;\n+  int e,f,;  /* { dg-error \"expected\" } */\n+  int g,h,i;\n+  int j,k,l,;/* { dg-error \"expected\" } */\n+  int m,,,n; /* { dg-error \"expected\" } */\n+}"}]}