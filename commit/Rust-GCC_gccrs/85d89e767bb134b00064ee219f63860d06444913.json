{"sha": "85d89e767bb134b00064ee219f63860d06444913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVkODllNzY3YmIxMzRiMDAwNjRlZTIxOWY2Mzg2MGQwNjQ0NDkxMw==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2006-08-21T16:01:03Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2006-08-21T16:01:03Z"}, "message": "gimplify.c (gimplify_init_constructor): Arrange for the temporary captures of components overlapping the lhs to happen...\n\n\t* gimplify.c (gimplify_init_constructor) <RECORD,UNION,ARRAY types>:\n\tArrange for the temporary captures of components overlapping the lhs\n\tto happen before the lhs is possibly cleared.\n\ntestsuite/\n\t* gnat.dg/self_aggregate_with_zeros.adb: New test.\n\t* gnat.dg/self_aggregate_with_array.adb: New test.\n\nFrom-SVN: r116300", "tree": {"sha": "8acf15334fbe025b7be884c79c7e9d4f19fa984c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8acf15334fbe025b7be884c79c7e9d4f19fa984c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85d89e767bb134b00064ee219f63860d06444913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d89e767bb134b00064ee219f63860d06444913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d89e767bb134b00064ee219f63860d06444913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d89e767bb134b00064ee219f63860d06444913/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5d434177058f2357999cdd060d5fe84c0a8cc64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d434177058f2357999cdd060d5fe84c0a8cc64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5d434177058f2357999cdd060d5fe84c0a8cc64"}], "stats": {"total": 76, "additions": 66, "deletions": 10}, "files": [{"sha": "8e3a0ad12fd7573ac25edfd8edc87b7c0403e463", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d89e767bb134b00064ee219f63860d06444913/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d89e767bb134b00064ee219f63860d06444913/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85d89e767bb134b00064ee219f63860d06444913", "patch": "@@ -1,3 +1,9 @@\n+2006-08-21  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gimplify.c (gimplify_init_constructor) <RECORD,UNION,ARRAY types>:\n+\tArrange for the temporary captures of components overlapping the lhs\n+\tto happen before the lhs is possibly cleared.\n+\t\n 2006-08-21  Mark Shinwell  <shinwell@codesourcery.com>\n  \n \t* config/arm/pr-support.c (__gnu_unwind_execute): Insert \" + 1\" in"}, {"sha": "6ade10cca2990034dd5fedd5cc65697b72c8a338", "filename": "gcc/gimplify.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d89e767bb134b00064ee219f63860d06444913/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d89e767bb134b00064ee219f63860d06444913/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=85d89e767bb134b00064ee219f63860d06444913", "patch": "@@ -3061,6 +3061,20 @@ gimplify_init_constructor (tree *expr_p, tree *pre_p,\n \t      }\n \t  }\n \n+\t/* If there are nonzero elements, pre-evaluate to capture elements\n+\t   overlapping with the lhs into temporaries.  We must do this before\n+\t   clearing to fetch the values before they are zeroed-out.  */\n+\tif (num_nonzero_elements > 0)\n+\t  {\n+\t    preeval_data.lhs_base_decl = get_base_address (object);\n+\t    if (!DECL_P (preeval_data.lhs_base_decl))\n+\t      preeval_data.lhs_base_decl = NULL;\n+\t    preeval_data.lhs_alias_set = get_alias_set (object);\n+\n+\t    gimplify_init_ctor_preeval (&TREE_OPERAND (*expr_p, 1),\n+\t\t\t\t\tpre_p, post_p, &preeval_data);\n+\t  }\n+\n \tif (cleared)\n \t  {\n \t    /* Zap the CONSTRUCTOR element list, which simplifies this case.\n@@ -3076,16 +3090,7 @@ gimplify_init_constructor (tree *expr_p, tree *pre_p,\n \t   elements in the constructor, add assignments to the individual\n \t   scalar fields of the object.  */\n \tif (!cleared || num_nonzero_elements > 0)\n-\t  {\n-\t    preeval_data.lhs_base_decl = get_base_address (object);\n-\t    if (!DECL_P (preeval_data.lhs_base_decl))\n-\t      preeval_data.lhs_base_decl = NULL;\n-\t    preeval_data.lhs_alias_set = get_alias_set (object);\n-\n-\t    gimplify_init_ctor_preeval (&TREE_OPERAND (*expr_p, 1),\n-\t\t\t\t\tpre_p, post_p, &preeval_data);\n-\t    gimplify_init_ctor_eval (object, elts, pre_p, cleared);\n-\t  }\n+\t  gimplify_init_ctor_eval (object, elts, pre_p, cleared);\n \n \t*expr_p = NULL_TREE;\n       }"}, {"sha": "d6e011ce9b471cd44162d67e98cb2cd5c222aa3c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d89e767bb134b00064ee219f63860d06444913/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d89e767bb134b00064ee219f63860d06444913/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85d89e767bb134b00064ee219f63860d06444913", "patch": "@@ -1,3 +1,8 @@\n+2006-08-21  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gnat.dg/self_aggregate_with_zeros.adb: New test.\n+\t* gnat.dg/self_aggregate_with_array.adb: New test.\n+\n 2006-08-21  Mark Shinwell  <shinwell@codesourcery.com>\n  \n  \t* g++.dg/eh/arm-vfp-unwind.C: New test."}, {"sha": "850e5defffc54da34c59a9056b9a97c56698063c", "filename": "gcc/testsuite/gnat.dg/self_aggregate_with_array.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d89e767bb134b00064ee219f63860d06444913/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_array.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d89e767bb134b00064ee219f63860d06444913/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_array.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_array.adb?ref=85d89e767bb134b00064ee219f63860d06444913", "patch": "@@ -0,0 +1,21 @@\n+-- { dg-do run }\n+\n+procedure self_aggregate_with_array is\n+\n+   type Value_Bounds is array (1 .. 2) of Natural;\n+\n+   type Sensor is record\n+      Value  : Natural;\n+      Bounds : Value_Bounds;\n+   end record;\n+\n+   Pressure : Sensor;\n+\n+begin\n+   Pressure.Value := 256;\n+   Pressure := (Value => Pressure.Value, Bounds => (1, 2));\n+\n+   if Pressure.Value /= 256 then\n+      raise Program_Error;\n+   end if;\n+end;"}, {"sha": "f774fcdf6a5a4ad365512042234072f0c3277ecc", "filename": "gcc/testsuite/gnat.dg/self_aggregate_with_zeros.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d89e767bb134b00064ee219f63860d06444913/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_zeros.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d89e767bb134b00064ee219f63860d06444913/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_zeros.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_zeros.adb?ref=85d89e767bb134b00064ee219f63860d06444913", "patch": "@@ -0,0 +1,19 @@\n+-- { dg-do run }\n+\n+procedure self_aggregate_with_zeros is\n+\n+   type Sensor is record\n+      Value  : Natural;\n+      A, B, C, D, E, F, G, H, I, J, K, L, M : Natural;\n+   end record;\n+\n+   Pressure : Sensor;\n+\n+begin\n+   Pressure.Value := 256;\n+   Pressure := (Pressure.Value, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n+\n+   if Pressure.Value /= 256 then\n+      raise Program_Error;\n+   end if;\n+end;"}]}