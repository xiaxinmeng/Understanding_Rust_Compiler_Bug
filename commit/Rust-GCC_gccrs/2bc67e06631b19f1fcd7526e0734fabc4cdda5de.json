{"sha": "2bc67e06631b19f1fcd7526e0734fabc4cdda5de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJjNjdlMDY2MzFiMTlmMWZjZDc1MjZlMDczNGZhYmM0Y2RkYTVkZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-04-12T13:56:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-04-12T13:56:37Z"}, "message": "re PR libstdc++/9533 (Can't read from tty with ifstream)\n\n2003-04-12  Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/9533\n\t* testsuite/27_io/basic_filebuf/showmanyc/char/9533-1.cc: New.\n\t* testsuite/27_io/basic_filebuf/showmanyc/char/9533-2.cc: Ditto.\n\nFrom-SVN: r65507", "tree": {"sha": "596e7f5651bb1ea24ad0757655e8d86819205676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/596e7f5651bb1ea24ad0757655e8d86819205676"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bc67e06631b19f1fcd7526e0734fabc4cdda5de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc67e06631b19f1fcd7526e0734fabc4cdda5de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bc67e06631b19f1fcd7526e0734fabc4cdda5de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc67e06631b19f1fcd7526e0734fabc4cdda5de/comments", "author": null, "committer": null, "parents": [{"sha": "17a15c67ee16211c074c290d45d5d32b3b3686bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a15c67ee16211c074c290d45d5d32b3b3686bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17a15c67ee16211c074c290d45d5d32b3b3686bc"}], "stats": {"total": 162, "additions": 162, "deletions": 0}, "files": [{"sha": "03b30776ede5390971ad3c9593c3a7217455c2cf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc67e06631b19f1fcd7526e0734fabc4cdda5de/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc67e06631b19f1fcd7526e0734fabc4cdda5de/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2bc67e06631b19f1fcd7526e0734fabc4cdda5de", "patch": "@@ -1,3 +1,9 @@\n+2003-04-12  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/9533\n+\t* testsuite/27_io/basic_filebuf/showmanyc/char/9533-1.cc: New.\n+\t* testsuite/27_io/basic_filebuf/showmanyc/char/9533-2.cc: Ditto.\n+\n 2003-04-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/22_locale/locale/cons/3.cc: Split."}, {"sha": "4c4bcdd225a22cf9d0c92de59c43d2b80253d7f5", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/showmanyc/char/9533-1.cc", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc67e06631b19f1fcd7526e0734fabc4cdda5de/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fshowmanyc%2Fchar%2F9533-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc67e06631b19f1fcd7526e0734fabc4cdda5de/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fshowmanyc%2Fchar%2F9533-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fshowmanyc%2Fchar%2F9533-1.cc?ref=2bc67e06631b19f1fcd7526e0734fabc4cdda5de", "patch": "@@ -0,0 +1,93 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <unistd.h>\n+#include <signal.h>\n+#include <fcntl.h>\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/9533\n+void test_01()\n+{\n+  using namespace std;\n+  bool test = true;\n+  const char* name = \"tmp_fifo1\";\n+\n+  const int count = 10000;\n+\n+  signal(SIGPIPE, SIG_IGN);\n+  unlink(name);\n+  \n+  if (0 != mkfifo(name, S_IRWXU))\n+    {\n+      VERIFY( false );\n+    }\n+  \n+  int fval = fork();\n+  if (fval == -1)\n+    {\n+      unlink(name);\n+      VERIFY( false );\n+    }\n+  else if (fval == 0)\n+    {\n+      filebuf ofbuf;\n+      ofbuf.open(name, ios_base::out);\n+      VERIFY( ofbuf.is_open() );\n+      sleep(1);\n+\n+      for (int i = 0; i < count; ++i)\n+\tofbuf.sputc(i % 100);\n+\n+      ofbuf.pubsync();\n+      sleep(1);\n+      ofbuf.close();\n+      exit(0);\n+    }\n+\n+  filebuf ifbuf;\n+  ifbuf.open(name, ios_base::in);\n+  VERIFY( ifbuf.is_open() );\n+\n+  for (int j = 0; j < count; ++j)\n+    {\n+      filebuf::int_type c1 = ifbuf.sbumpc();\n+      VERIFY( c1 == j % 100 );\n+    }\n+\n+  filebuf::int_type c6 = ifbuf.sbumpc();\n+  VERIFY( c6 == filebuf::traits_type::eof() );\n+\n+  sleep(2);\n+  ifbuf.close();\n+\n+  unlink(name);\n+}\n+\n+int\n+main() \n+{\n+  test_01();\n+  return 0;\n+}\n+"}, {"sha": "fb12e427cceaee0c6c98fa9aa253abf5505feedd", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/showmanyc/char/9533-2.cc", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc67e06631b19f1fcd7526e0734fabc4cdda5de/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fshowmanyc%2Fchar%2F9533-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc67e06631b19f1fcd7526e0734fabc4cdda5de/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fshowmanyc%2Fchar%2F9533-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fshowmanyc%2Fchar%2F9533-2.cc?ref=2bc67e06631b19f1fcd7526e0734fabc4cdda5de", "patch": "@@ -0,0 +1,63 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/9533\n+void test_02()\n+{\n+  using namespace std;\n+  bool test = true;  \n+  const char* name = \"tmp_file1\";\n+\n+  const char* strlit = \"0123456789\";\n+  \n+  filebuf fbout;\n+  fbout.open(name, ios_base::out | ios_base::trunc);\n+\t\n+  int written = 0;\n+  for (int i = 0; i < BUFSIZ; ++i)\n+    written += fbout.sputn(strlit, 10);\n+\n+  fbout.close();\n+  \n+  ifstream in(name);\n+  int sum = 0;\n+  bool gotsome;\n+\n+  do\n+    {\n+      char buf[100];\n+      int n = in.readsome(buf, sizeof(buf));\n+      gotsome = (n > 0);\n+      sum += n;\n+    }\n+  while (gotsome);\n+\n+  VERIFY( sum == written );\n+}\n+\n+int\n+main()\n+{\n+  test_02();\n+  return 0;\n+}"}]}