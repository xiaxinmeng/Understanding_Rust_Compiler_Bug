{"sha": "3282420874458112fcf9c8664548ffc27613ccb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI4MjQyMDg3NDQ1ODExMmZjZjljODY2NDU0OGZmYzI3NjEzY2NiNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-09-26T11:04:18Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-09-26T11:04:18Z"}, "message": "Remove HIST_TYPE_CONST_DELTA counter type (PR gcov-profile/23332)\n\n\tPR gcov-profile/23332\n\t* profile.c (instrument_values): Do not handle\n\tHIST_TYPE_CONST_DELTA.\n\t* tree-profile.c (gimple_gen_const_delta_profiler):\n\tRemove.\n\t* value-prof.c (dump_histogram_value): Do not handle\n\tHIST_TYPE_CONST_DELTA.\n\t(stream_in_histogram_value): Likewise.\n\t(gimple_find_values_to_profile): Likewise.\n\t* value-prof.h (enum hist_type): Likewise.\n\nFrom-SVN: r240492", "tree": {"sha": "160005ecf3d90729196495129c39b7744b937c54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/160005ecf3d90729196495129c39b7744b937c54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3282420874458112fcf9c8664548ffc27613ccb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3282420874458112fcf9c8664548ffc27613ccb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3282420874458112fcf9c8664548ffc27613ccb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3282420874458112fcf9c8664548ffc27613ccb7/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5cc6c41c2ee95585418a5820d34a4356b91dda18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc6c41c2ee95585418a5820d34a4356b91dda18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc6c41c2ee95585418a5820d34a4356b91dda18"}], "stats": {"total": 64, "additions": 13, "deletions": 51}, "files": [{"sha": "d796a592e9b77cd762698cc4e9910140790ccd8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3282420874458112fcf9c8664548ffc27613ccb7", "patch": "@@ -1,3 +1,16 @@\n+2016-09-26  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/23332\n+\t* profile.c (instrument_values): Do not handle\n+\tHIST_TYPE_CONST_DELTA.\n+\t* tree-profile.c (gimple_gen_const_delta_profiler):\n+\tRemove.\n+\t* value-prof.c (dump_histogram_value): Do not handle\n+\tHIST_TYPE_CONST_DELTA.\n+\t(stream_in_histogram_value): Likewise.\n+\t(gimple_find_values_to_profile): Likewise.\n+\t* value-prof.h (enum hist_type): Likewise.\n+\n 2016-09-26  Martin Liska  <mliska@suse.cz>\n \n \t* common.opt: Exclude SANITIZE_UNREACHABLE and SANITIZE_RETURN"}, {"sha": "791225b106d74db34a07cea7bcaca40c0cf36a30", "filename": "gcc/profile.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=3282420874458112fcf9c8664548ffc27613ccb7", "patch": "@@ -179,10 +179,6 @@ instrument_values (histogram_values values)\n \t  gimple_gen_one_value_profiler (hist, t, 0);\n \t  break;\n \n-\tcase HIST_TYPE_CONST_DELTA:\n-\t  gimple_gen_const_delta_profiler (hist, t, 0);\n-\t  break;\n-\n  \tcase HIST_TYPE_INDIR_CALL:\n  \tcase HIST_TYPE_INDIR_CALL_TOPN:\n  \t  gimple_gen_ic_profiler (hist, t, 0);"}, {"sha": "1f45b995d0f4cdb9f98a8edb3d33854a16927ada", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=3282420874458112fcf9c8664548ffc27613ccb7", "patch": "@@ -471,22 +471,6 @@ gimple_gen_time_profiler (unsigned tag, unsigned base,\n   gsi_insert_before (&gsi, call, GSI_NEW_STMT);\n }\n \n-/* Output instructions as GIMPLE trees for code to find the most common value\n-   of a difference between two evaluations of an expression.\n-   VALUE is the expression whose value is profiled.  TAG is the tag of the\n-   section for counters, BASE is offset of the counter position.  */\n-\n-void\n-gimple_gen_const_delta_profiler (histogram_value value ATTRIBUTE_UNUSED,\n-\t\t\t       unsigned tag ATTRIBUTE_UNUSED,\n-\t\t\t       unsigned base ATTRIBUTE_UNUSED)\n-{\n-  /* FIXME implement this.  */\n-  if (flag_checking)\n-    internal_error (\"unimplemented functionality\");\n-  gcc_unreachable ();\n-}\n-\n /* Output instructions as GIMPLE trees to increment the average histogram\n    counter.  VALUE is the expression whose value is profiled.  TAG is the\n    tag of the section for counters, BASE is offset of the counter position.  */"}, {"sha": "e794e6d5aefd45de86522453b9f152e9954786c9", "filename": "gcc/value-prof.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=3282420874458112fcf9c8664548ffc27613ccb7", "patch": "@@ -95,12 +95,6 @@ along with GCC; see the file COPYING3.  If not see\n \n    Limitations / FIXME / TODO:\n    * Only one histogram of each type can be associated with a statement.\n-   * Currently, HIST_TYPE_CONST_DELTA is not implemented.\n-     (This type of histogram was originally used to implement a form of\n-     stride profiling based speculative prefetching to improve SPEC2000\n-     scores for memory-bound benchmarks, mcf and equake.  However, this\n-     was an RTL value-profiling transformation, and those have all been\n-     removed.)\n    * Some value profile transformations are done in builtins.c (?!)\n    * Updating of histograms needs some TLC.\n    * The value profiling code could be used to record analysis results\n@@ -306,19 +300,6 @@ dump_histogram_value (FILE *dump_file, histogram_value hist)\n       fprintf (dump_file, \".\\n\");\n       break;\n \n-    case HIST_TYPE_CONST_DELTA:\n-      fprintf (dump_file, \"Constant delta \");\n-      if (hist->hvalue.counters)\n-\t{\n-\t   fprintf (dump_file, \"value:%\" PRId64\n-\t\t    \" match:%\" PRId64\n-\t\t    \" wrong:%\" PRId64,\n-\t\t    (int64_t) hist->hvalue.counters[0],\n-\t\t    (int64_t) hist->hvalue.counters[1],\n-\t\t    (int64_t) hist->hvalue.counters[2]);\n-\t}\n-      fprintf (dump_file, \".\\n\");\n-      break;\n     case HIST_TYPE_INDIR_CALL:\n       fprintf (dump_file, \"Indirect call \");\n       if (hist->hvalue.counters)\n@@ -426,10 +407,6 @@ stream_in_histogram_value (struct lto_input_block *ib, gimple *stmt)\n \t  ncounters = 3;\n \t  break;\n \n-\tcase HIST_TYPE_CONST_DELTA:\n-\t  ncounters = 4;\n-\t  break;\n-\n \tcase HIST_TYPE_IOR:\n         case HIST_TYPE_TIME_PROFILE:\n \t  ncounters = 1;\n@@ -2080,10 +2057,6 @@ gimple_find_values_to_profile (histogram_values *values)\n \t  hist->n_counters = 3;\n \t  break;\n \n-\tcase HIST_TYPE_CONST_DELTA:\n-\t  hist->n_counters = 4;\n-\t  break;\n-\n  \tcase HIST_TYPE_INDIR_CALL:\n  \t  hist->n_counters = 3;\n \t  break;"}, {"sha": "07e2b3b584085361c0d8c0ddda660f0120d78272", "filename": "gcc/value-prof.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2Fvalue-prof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3282420874458112fcf9c8664548ffc27613ccb7/gcc%2Fvalue-prof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.h?ref=3282420874458112fcf9c8664548ffc27613ccb7", "patch": "@@ -28,8 +28,6 @@ enum hist_type\n   HIST_TYPE_POW2,\t/* Histogram of power of 2 values.  */\n   HIST_TYPE_SINGLE_VALUE, /* Tries to identify the value that is (almost)\n \t\t\t   always constant.  */\n-  HIST_TYPE_CONST_DELTA, /* Tries to identify the (almost) always constant\n-\t\t\t   difference between two evaluations of a value.  */\n   HIST_TYPE_INDIR_CALL,   /* Tries to identify the function that is (almost)\n \t\t\t    called in indirect call */\n   HIST_TYPE_AVERAGE,\t/* Compute average value (sum of all values).  */\n@@ -107,8 +105,6 @@ extern void gimple_gen_ic_profiler (histogram_value, unsigned, unsigned);\n extern void gimple_gen_ic_func_profiler (void);\n extern void gimple_gen_time_profiler (unsigned, unsigned,\n                                       gimple_stmt_iterator &);\n-extern void gimple_gen_const_delta_profiler (histogram_value,\n-\t\t\t\t\t     unsigned, unsigned);\n extern void gimple_gen_average_profiler (histogram_value, unsigned, unsigned);\n extern void gimple_gen_ior_profiler (histogram_value, unsigned, unsigned);\n extern void stream_out_histogram_value (struct output_block *, histogram_value);"}]}