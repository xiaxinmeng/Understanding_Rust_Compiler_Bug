{"sha": "600db6ca89bc1f93d9f6f72c629e1c5d5c176068", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAwZGI2Y2E4OWJjMWY5M2Q5ZjZmNzJjNjI5ZTFjNWQ1YzE3NjA2OA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2019-09-18T08:31:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-18T08:31:56Z"}, "message": "[Ada] Fix 32/64bit mistake on SYSTEM_INFO component in s-win32\n\nThe dwActiveProcessorMask field in a SYSTEM_INFO structure on Windows\nshould be DWORD_PTR, an integer the size of a pointer.\n\nIn s-win32, it is currently declared as DWORD. This happens to work on\n32bit hosts and is wrong on 64bit hosts, causing mishaps in accesses to\nthis component and all the following ones.\n\nThe proposed correction adds a definition for DWORD_PTR and uses it for\ndwActiveProcessorMask in System.Win32.SYSTEM_INFO.\n\n2019-09-18  Olivier Hainque  <hainque@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-win32.ads (DWORD_PTR): New type, pointer size\n\tunsigned int.\n\t(SYSTEM_INFO): Use it for dwActiveProcessorMask.\n\ngcc/testsuite/\n\n\t* gnat.dg/system_info1.adb: New testcase.\n\nFrom-SVN: r275843", "tree": {"sha": "8a406b36529cc4fc49603e29d850cb18e1e17b8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a406b36529cc4fc49603e29d850cb18e1e17b8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/600db6ca89bc1f93d9f6f72c629e1c5d5c176068", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600db6ca89bc1f93d9f6f72c629e1c5d5c176068", "html_url": "https://github.com/Rust-GCC/gccrs/commit/600db6ca89bc1f93d9f6f72c629e1c5d5c176068", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600db6ca89bc1f93d9f6f72c629e1c5d5c176068/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f934861c1eb93234e63483e04975bf0cd612da7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f934861c1eb93234e63483e04975bf0cd612da7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f934861c1eb93234e63483e04975bf0cd612da7"}], "stats": {"total": 54, "additions": 44, "deletions": 10}, "files": [{"sha": "02628c9a154fde0d2b10ef0cb889278d97df3d7d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600db6ca89bc1f93d9f6f72c629e1c5d5c176068/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600db6ca89bc1f93d9f6f72c629e1c5d5c176068/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=600db6ca89bc1f93d9f6f72c629e1c5d5c176068", "patch": "@@ -1,3 +1,9 @@\n+2019-09-18  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* libgnat/s-win32.ads (DWORD_PTR): New type, pointer size\n+\tunsigned int.\n+\t(SYSTEM_INFO): Use it for dwActiveProcessorMask.\n+\n 2019-09-18  Arnaud Charlet  <charlet@adacore.com>\n \n \t* doc/gnat_rm/implementation_defined_pragmas.rst: Improve doc on"}, {"sha": "853cef0ace000c6412101e288674ce8f44ef0f8b", "filename": "gcc/ada/libgnat/s-win32.ads", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600db6ca89bc1f93d9f6f72c629e1c5d5c176068/gcc%2Fada%2Flibgnat%2Fs-win32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600db6ca89bc1f93d9f6f72c629e1c5d5c176068/gcc%2Fada%2Flibgnat%2Fs-win32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-win32.ads?ref=600db6ca89bc1f93d9f6f72c629e1c5d5c176068", "patch": "@@ -57,15 +57,16 @@ package System.Win32 is\n    INVALID_HANDLE_VALUE : constant HANDLE := -1;\n    INVALID_FILE_SIZE    : constant := 16#FFFFFFFF#;\n \n-   type ULONG  is new Interfaces.C.unsigned_long;\n-   type DWORD  is new Interfaces.C.unsigned_long;\n-   type WORD   is new Interfaces.C.unsigned_short;\n-   type BYTE   is new Interfaces.C.unsigned_char;\n-   type LONG   is new Interfaces.C.long;\n-   type CHAR   is new Interfaces.C.char;\n-   type SIZE_T is new Interfaces.C.size_t;\n-\n-   type BOOL   is new Interfaces.C.int;\n+   type ULONG     is new Interfaces.C.unsigned_long;\n+   type DWORD     is new Interfaces.C.unsigned_long;\n+   type WORD      is new Interfaces.C.unsigned_short;\n+   type BYTE      is new Interfaces.C.unsigned_char;\n+   type LONG      is new Interfaces.C.long;\n+   type CHAR      is new Interfaces.C.char;\n+   type SIZE_T    is new Interfaces.C.size_t;\n+   type DWORD_PTR is mod 2 ** Standard'Address_Size;\n+\n+   type BOOL      is new Interfaces.C.int;\n    for BOOL'Size use Interfaces.C.int'Size;\n \n    type Bits1  is range 0 .. 2 ** 1 - 1;\n@@ -265,7 +266,7 @@ package System.Win32 is\n       dwPageSize                  : DWORD;\n       lpMinimumApplicationAddress : PVOID;\n       lpMaximumApplicationAddress : PVOID;\n-      dwActiveProcessorMask       : DWORD;\n+      dwActiveProcessorMask       : DWORD_PTR;\n       dwNumberOfProcessors        : DWORD;\n       dwProcessorType             : DWORD;\n       dwAllocationGranularity     : DWORD;"}, {"sha": "1db62e260977f4a54b7b9abca3eba872e0353a00", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600db6ca89bc1f93d9f6f72c629e1c5d5c176068/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600db6ca89bc1f93d9f6f72c629e1c5d5c176068/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=600db6ca89bc1f93d9f6f72c629e1c5d5c176068", "patch": "@@ -1,3 +1,7 @@\n+2019-09-18  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gnat.dg/system_info1.adb: New testcase.\n+\n 2019-09-18  Bob Duff  <duff@adacore.com>\n \n \t* gnat.dg/containers1.adb, gnat.dg/containers1.ads: New"}, {"sha": "493a18e9077cd61625b8d6eccc359b61644a4dd5", "filename": "gcc/testsuite/gnat.dg/system_info1.adb", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600db6ca89bc1f93d9f6f72c629e1c5d5c176068/gcc%2Ftestsuite%2Fgnat.dg%2Fsystem_info1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600db6ca89bc1f93d9f6f72c629e1c5d5c176068/gcc%2Ftestsuite%2Fgnat.dg%2Fsystem_info1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsystem_info1.adb?ref=600db6ca89bc1f93d9f6f72c629e1c5d5c176068", "patch": "@@ -0,0 +1,23 @@\n+--  { dg-do run }\n+\n+with System.Multiprocessors;\n+with System.Task_Info;\n+\n+procedure System_Info1 is\n+   Ncpus : constant System.Multiprocessors.CPU :=\n+     System.Multiprocessors.Number_Of_CPUS;\n+   Nprocs : constant Integer :=\n+     System.Task_Info.Number_Of_Processors;\n+\n+   use type System.Multiprocessors.CPU;\n+begin\n+   if Nprocs <= 0 or else Nprocs > 1024 then\n+      raise Program_Error;\n+   end if;\n+   if Ncpus <= 0 or else Ncpus > 1024 then\n+      raise Program_Error;\n+   end if;\n+   if Nprocs /= Integer (Ncpus) then\n+      raise Program_Error;\n+   end if;\n+end;\n\\ No newline at end of file"}]}