{"sha": "a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcxOTRiZmVhOTk1YzRiZmM4ZjAxY2UxOGUzNmVmOGJkYTdlYmUxNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-11-23T14:56:58Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2009-11-23T14:56:58Z"}, "message": "re PR ada/42153 (s-osinte.adb:46:21: missing body for \"To_Duration\" declared at s-osinte.ads:216)\n\n2009-11-23  Eric Botcazou  <ebotcazou@adacore.com>\n            Laurent GUERBY  <laurent@guerby.net>\n\n\tPR ada/42153\n        * s-osinte-linux.ads (struct_timeval): Delete.\n        * s-osinte-hpux.ads (struct_timeval, To_Duration, To_Timeval): \n        Delete.\n        * s-osinte-kfreebsd-gnu.ads: Likewise.\n        * s-osinte-rtems.ads: Likewise.\n        * s-osinte-aix.ads: Likewise.\n        * s-osinte-hpux-dce.ads: Likewise.\n        * s-osinte-darwin.ads: Likewise.\n        * s-osinte-solaris-posix.ads: Likewise.\n        * s-osinte-irix.ads: Likewise.\n        * s-osinte-solaris.ads: Likewise.\n        * s-osinte-hpux-dce.adb (To_Duration, To_Timeval): Delete.\n        * s-osinte-irix.adb: Likewise.\n        * s-osinte-solaris.adb: Likewise.\n        * s-osinte-rtems.adb: Likewise. Minor reformatting.\n        * s-osinte-aix.adb (To_Duration, To_Timeval): Delete.\n        (clock_gettime): Use cal.c timeval_to_duration.\n        * s-osinte-darwin.adb: Likewise.\n\n\nCo-Authored-By: Laurent GUERBY <laurent@guerby.net>\n\nFrom-SVN: r154446", "tree": {"sha": "95a5c8e808a83305f6684ff799d355fecbaf01f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95a5c8e808a83305f6684ff799d355fecbaf01f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/comments", "author": null, "committer": null, "parents": [{"sha": "aa373032bfd895dc6eb671308b68163f2971ffd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa373032bfd895dc6eb671308b68163f2971ffd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa373032bfd895dc6eb671308b68163f2971ffd2"}], "stats": {"total": 412, "additions": 82, "deletions": 330}, "files": [{"sha": "02c9efe138631d31e4e42c3bafe4d30fcc6b9608", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -1,3 +1,26 @@\n+2009-11-23  Eric Botcazou  <ebotcazou@adacore.com>\n+            Laurent GUERBY  <laurent@guerby.net>\n+\n+\tPR ada/42153\n+        * s-osinte-linux.ads (struct_timeval): Delete.\n+        * s-osinte-hpux.ads (struct_timeval, To_Duration, To_Timeval): \n+        Delete.\n+        * s-osinte-kfreebsd-gnu.ads: Likewise.\n+        * s-osinte-rtems.ads: Likewise.\n+        * s-osinte-aix.ads: Likewise.\n+        * s-osinte-hpux-dce.ads: Likewise.\n+        * s-osinte-darwin.ads: Likewise.\n+        * s-osinte-solaris-posix.ads: Likewise.\n+        * s-osinte-irix.ads: Likewise.\n+        * s-osinte-solaris.ads: Likewise.\n+        * s-osinte-hpux-dce.adb (To_Duration, To_Timeval): Delete.\n+        * s-osinte-irix.adb: Likewise.\n+        * s-osinte-solaris.adb: Likewise.\n+        * s-osinte-rtems.adb: Likewise. Minor reformatting.\n+        * s-osinte-aix.adb (To_Duration, To_Timeval): Delete.\n+        (clock_gettime): Use cal.c timeval_to_duration.\n+        * s-osinte-darwin.adb: Likewise.\n+\n 2009-11-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* adaint.h: Assume large file support on IRIX only if _LFAPI."}, {"sha": "15b4d63db43a6213a426ccb1606acae264ab5d5f", "filename": "gcc/ada/s-osinte-aix.adb", "status": "modified", "additions": 24, "deletions": 37, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-aix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-aix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.adb?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -48,11 +48,6 @@ package body System.OS_Interface is\n       return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n    end To_Duration;\n \n-   function To_Duration (TV : struct_timeval) return Duration is\n-   begin\n-      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n-   end To_Duration;\n-\n    ------------------------\n    -- To_Target_Priority --\n    ------------------------\n@@ -104,31 +99,6 @@ package body System.OS_Interface is\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n-   ----------------\n-   -- To_Timeval --\n-   ----------------\n-\n-   function To_Timeval (D : Duration) return struct_timeval is\n-      S : long;\n-      F : Duration;\n-\n-   begin\n-      S := long (Long_Long_Integer (D));\n-      F := D - Duration (S);\n-\n-      --  If F is negative due to a round-up, adjust for positive F value\n-\n-      if F < 0.0 then\n-         S := S - 1;\n-         F := F + 1.0;\n-      end if;\n-\n-      return\n-        struct_timeval'\n-          (tv_sec => S,\n-           tv_usec => long (Long_Long_Integer (F * 10#1#E6)));\n-   end To_Timeval;\n-\n    -------------------\n    -- clock_gettime --\n    -------------------\n@@ -138,20 +108,37 @@ package body System.OS_Interface is\n       tp       : access timespec)\n       return     int\n    is\n-      pragma Warnings (Off, clock_id);\n+      pragma Unreferenced (clock_id);\n+\n+      --  Darwin threads don't have clock_gettime, so use\n+      --  gettimeofday() instead.\n+\n+      use Interfaces;\n+\n+      type timeval is array (1 .. 2) of C.long;\n+\n+      procedure timeval_to_duration\n+        (T    : not null access timeval;\n+         sec  : not null access C.long;\n+         usec : not null access C.long);\n+      pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n \n+      Micro  : constant := 10**6;\n+      sec    : aliased C.long;\n+      usec   : aliased C.long;\n+      TV     : aliased timeval;\n       Result : int;\n-      tv     : aliased struct_timeval;\n \n       function gettimeofday\n-        (tv   : access struct_timeval;\n-         tz   : System.Address := System.Null_Address)\n-         return int;\n+        (Tv : access timeval;\n+         Tz : System.Address := System.Null_Address) return int;\n       pragma Import (C, gettimeofday, \"gettimeofday\");\n \n    begin\n-      Result := gettimeofday (tv'Unchecked_Access);\n-      tp.all := To_Timespec (To_Duration (tv));\n+      Result := gettimeofday (TV'Access, System.Null_Address);\n+      pragma Assert (Result = 0);\n+      timeval_to_duration (TV'Access, sec'Access, usec'Access);\n+      tp.all := To_Timespec (Duration (sec) + Duration (usec) / Micro);\n       return Result;\n    end clock_gettime;\n "}, {"sha": "b1639a77e3f28c444c4702d763ecefb449e468a6", "filename": "gcc/ada/s-osinte-aix.ads", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -206,7 +206,6 @@ package System.OS_Interface is\n    function clock_gettime\n      (clock_id : clockid_t;\n       tp       : access timespec) return int;\n-   --  AIX threads don't have clock_gettime, so use gettimeofday() instead\n \n    function To_Duration (TS : timespec) return Duration;\n    pragma Inline (To_Duration);\n@@ -221,16 +220,6 @@ package System.OS_Interface is\n    pragma Convention (C, struct_timezone);\n    type struct_timezone_ptr is access all struct_timezone;\n \n-   type struct_timeval is private;\n-   --  This is needed on systems that do not have clock_gettime() but do have\n-   --  gettimeofday().\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n    -------------------------\n    -- Priority Scheduling --\n    -------------------------\n@@ -554,12 +543,6 @@ private\n    type clockid_t is new int;\n    CLOCK_REALTIME : constant clockid_t := 0;\n \n-   type struct_timeval is record\n-      tv_sec  : long;\n-      tv_usec : long;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    type pthread_attr_t is new System.Address;\n    pragma Convention (C, pthread_attr_t);\n    --  typedef struct __pt_attr        *pthread_attr_t;"}, {"sha": "1f47ddeb409eb33c70c33c663d65639712883dbc", "filename": "gcc/ada/s-osinte-darwin.adb", "status": "modified", "additions": 24, "deletions": 35, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.adb?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -48,11 +48,6 @@ package body System.OS_Interface is\n       return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n    end To_Duration;\n \n-   function To_Duration (TV : struct_timeval) return Duration is\n-   begin\n-      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n-   end To_Duration;\n-\n    ------------------------\n    -- To_Target_Priority --\n    ------------------------\n@@ -88,31 +83,6 @@ package body System.OS_Interface is\n         tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n-   ----------------\n-   -- To_Timeval --\n-   ----------------\n-\n-   function To_Timeval (D : Duration) return struct_timeval is\n-      S : time_t;\n-      F : Duration;\n-\n-   begin\n-      S := time_t (D);\n-      F := D - Duration (S);\n-\n-      --  If F has negative value due to a round-up, adjust for positive F\n-      --  value.\n-\n-      if F < 0.0 then\n-         S := S - 1;\n-         F := F + 1.0;\n-      end if;\n-\n-      return struct_timeval'\n-               (Tv_Sec  => S,\n-                tv_usec => int32_t (Long_Long_Integer (F * 10#1#E6)));\n-   end To_Timeval;\n-\n    -------------------\n    -- clock_gettime --\n    -------------------\n@@ -122,17 +92,36 @@ package body System.OS_Interface is\n       tp       : access timespec) return int\n    is\n       pragma Unreferenced (clock_id);\n+\n+      --  AIX threads don't have clock_gettime, so use\n+      --  gettimeofday() instead.\n+\n+      use Interfaces;\n+\n+      type timeval is array (1 .. 2) of C.long;\n+\n+      procedure timeval_to_duration\n+        (T    : not null access timeval;\n+         sec  : not null access C.long;\n+         usec : not null access C.long);\n+      pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n+\n+      Micro  : constant := 10**6;\n+      sec    : aliased C.long;\n+      usec   : aliased C.long;\n+      TV     : aliased timeval;\n       Result : int;\n-      tv     : aliased struct_timeval;\n \n       function gettimeofday\n-        (tv : access struct_timeval;\n-         tz : System.Address := System.Null_Address) return int;\n+        (Tv : access timeval;\n+         Tz : System.Address := System.Null_Address) return int;\n       pragma Import (C, gettimeofday, \"gettimeofday\");\n \n    begin\n-      Result := gettimeofday (tv'Unchecked_Access);\n-      tp.all := To_Timespec (To_Duration (tv));\n+      Result := gettimeofday (TV'Access, System.Null_Address);\n+      pragma Assert (Result = 0);\n+      timeval_to_duration (TV'Access, sec'Access, usec'Access);\n+      tp.all := To_Timespec (Duration (sec) + Duration (usec) / Micro);\n       return Result;\n    end clock_gettime;\n "}, {"sha": "99bdc6d8ea62a77acbd90241413f560e28833118", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -199,14 +199,6 @@ package System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n \n-   type struct_timeval is private;\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n    -------------------------\n    -- Priority Scheduling --\n    -------------------------\n@@ -528,12 +520,6 @@ private\n    type clockid_t is new int;\n    CLOCK_REALTIME : constant clockid_t := 0;\n \n-   type struct_timeval is record\n-      tv_sec  : time_t;\n-      tv_usec : int32_t;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    --\n    --  Darwin specific signal implementation\n    --"}, {"sha": "45a5ed1dc56c1bf463d7cdf6b33bce486482b571", "filename": "gcc/ada/s-osinte-hpux-dce.adb", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-hpux-dce.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-hpux-dce.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux-dce.adb?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -78,32 +78,6 @@ package body System.OS_Interface is\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n-   function To_Duration (TV : struct_timeval) return Duration is\n-   begin\n-      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n-   end To_Duration;\n-\n-   function To_Timeval (D : Duration) return struct_timeval is\n-      S : time_t;\n-      F : Duration;\n-   begin\n-      S := time_t (Long_Long_Integer (D));\n-      F := D - Duration (S);\n-\n-      --  If F has negative value due to a round-up, adjust for positive F\n-      --  value.\n-\n-      if F < 0.0 then\n-         S := S - 1;\n-         F := F + 1.0;\n-      end if;\n-\n-      return\n-        struct_timeval'\n-          (tv_sec => S,\n-           tv_usec => time_t (Long_Long_Integer (F * 10#1#E6)));\n-   end To_Timeval;\n-\n    -------------------------\n    -- POSIX.1c  Section 3 --\n    -------------------------"}, {"sha": "417aae98e9102498301e7a65b2af228d9ea604ee", "filename": "gcc/ada/s-osinte-hpux-dce.ads", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-hpux-dce.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-hpux-dce.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux-dce.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -207,14 +207,6 @@ package System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n \n-   type struct_timeval is private;\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n    -------------------------\n    -- Priority Scheduling --\n    -------------------------\n@@ -459,12 +451,6 @@ private\n    type clockid_t is new int;\n    CLOCK_REALTIME : constant clockid_t := 1;\n \n-   type struct_timeval is record\n-      tv_sec  : time_t;\n-      tv_usec : time_t;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    type cma_t_address is new System.Address;\n \n    type cma_t_handle is record"}, {"sha": "5c4003d30a30c3f0999352c78e03e85cdd08eda5", "filename": "gcc/ada/s-osinte-hpux.ads", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -209,16 +209,6 @@ package System.OS_Interface is\n    pragma Convention (C, struct_timezone);\n    type struct_timezone_ptr is access all struct_timezone;\n \n-   type struct_timeval is private;\n-   --  This is needed on systems that do not have clock_gettime()\n-   --  but do have gettimeofday().\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n    -------------------------\n    -- Priority Scheduling --\n    -------------------------\n@@ -535,12 +525,6 @@ private\n    type clockid_t is new int;\n    CLOCK_REALTIME : constant clockid_t := 1;\n \n-   type struct_timeval is record\n-      tv_sec  : time_t;\n-      tv_usec : time_t;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    type pthread_attr_t is new int;\n    type pthread_condattr_t is new int;\n    type pthread_mutexattr_t is new int;"}, {"sha": "cc3e015f742128d2d3b7382add2347c4b957272f", "filename": "gcc/ada/s-osinte-irix.adb", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-irix.adb?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -60,11 +60,6 @@ package body System.OS_Interface is\n       return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n    end To_Duration;\n \n-   function To_Duration (TV : struct_timeval) return Duration is\n-   begin\n-      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n-   end To_Duration;\n-\n    -----------------\n    -- To_Timespec --\n    -----------------\n@@ -89,30 +84,4 @@ package body System.OS_Interface is\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n-   ----------------\n-   -- To_Timeval --\n-   ----------------\n-\n-   function To_Timeval (D : Duration) return struct_timeval is\n-      S : time_t;\n-      F : Duration;\n-\n-   begin\n-      S := time_t (Long_Long_Integer (D));\n-      F := D - Duration (S);\n-\n-      --  If F has negative value due to a round-up, adjust for positive F\n-      --  value.\n-\n-      if F < 0.0 then\n-         S := S - 1;\n-         F := F + 1.0;\n-      end if;\n-\n-      return\n-        struct_timeval'\n-          (tv_sec => S,\n-           tv_usec => time_t (Long_Long_Integer (F * 10#1#E6)));\n-   end To_Timeval;\n-\n end System.OS_Interface;"}, {"sha": "7231c39e9eb7569598202dc42603bf7e5335c972", "filename": "gcc/ada/s-osinte-irix.ads", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-irix.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -201,14 +201,6 @@ package System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n \n-   type struct_timeval is private;\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n    -------------------------\n    -- Priority Scheduling --\n    -------------------------\n@@ -493,12 +485,6 @@ private\n    CLOCK_SGI_CYCLE : constant clockid_t := 2;\n    CLOCK_SGI_FAST  : constant clockid_t := 3;\n \n-   type struct_timeval is record\n-      tv_sec  : time_t;\n-      tv_usec : time_t;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    type array_type_9 is array (Integer range 0 .. 4) of long;\n    type pthread_attr_t is record\n       X_X_D : array_type_9;"}, {"sha": "958d4217de4cf572c40d135bf199ef864ff3b4bf", "filename": "gcc/ada/s-osinte-kfreebsd-gnu.ads", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-kfreebsd-gnu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-kfreebsd-gnu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-kfreebsd-gnu.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -208,19 +208,6 @@ package System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n \n-   type struct_timeval is private;\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n-   function gettimeofday\n-     (tv : access struct_timeval;\n-      tz : System.Address := System.Null_Address) return int;\n-   pragma Import (C, gettimeofday, \"gettimeofday\");\n-\n    function sysconf (name : int) return long;\n    pragma Import (C, sysconf);\n \n@@ -511,12 +498,6 @@ private\n    end record;\n    pragma Convention (C, timespec);\n \n-   type struct_timeval is record\n-      tv_sec  : time_t;\n-      tv_usec : time_t;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    type pthread_attr_t is record\n       detachstate   : int;\n       schedpolicy   : int;"}, {"sha": "323fc158f05ec484fcbba18e114c9ebec3c49e8c", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -518,12 +518,6 @@ private\n    end record;\n    pragma Convention (C, timespec);\n \n-   type struct_timeval is record\n-      tv_sec  : time_t;\n-      tv_usec : time_t;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    type pthread_attr_t is record\n       detachstate   : int;\n       schedpolicy   : int;"}, {"sha": "d8e57f692d4119d76f083769a9ce2854f1560e7d", "filename": "gcc/ada/s-osinte-rtems.adb", "status": "modified", "additions": 11, "deletions": 23, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-rtems.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-rtems.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-rtems.adb?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -89,42 +89,30 @@ package body System.OS_Interface is\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n-   function To_Duration (TV : struct_timeval) return Duration is\n-   begin\n-      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n-   end To_Duration;\n-\n-   function To_Timeval (D : Duration) return struct_timeval is\n-      S : int;\n-      F : Duration;\n-   begin\n-      S := int (Long_Long_Integer (D));\n-      F := D - Duration (S);\n-\n-      --  If F has negative value due to a round-up, adjust for positive F\n-      --  value.\n-      if F < 0.0 then\n-         S := S - 1;\n-         F := F + 1.0;\n-      end if;\n-      return\n-        struct_timeval'\n-          (tv_sec  => S,\n-           tv_usec => int (Long_Long_Integer (F * 10#1#E6)));\n-   end To_Timeval;\n+   ------------------\n+   -- pthread_init --\n+   ------------------\n \n    procedure pthread_init is\n    begin\n       null;\n    end pthread_init;\n \n+   --------------------\n+   -- Get_Stack_Base --\n+   --------------------\n+\n    function Get_Stack_Base (thread : pthread_t) return Address is\n       pragma Warnings (Off, thread);\n \n    begin\n       return Null_Address;\n    end Get_Stack_Base;\n \n+   -----------------\n+   -- sigaltstack --\n+   -----------------\n+\n    function sigaltstack\n      (ss  : not null access stack_t;\n       oss : access stack_t) return int is"}, {"sha": "eb8b17d5f5c42d7c41cee1e57af6e59f00a84f50", "filename": "gcc/ada/s-osinte-rtems.ads", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-rtems.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -191,14 +191,6 @@ package System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n \n-   type struct_timeval is private;\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n    -------------------------\n    -- Priority Scheduling --\n    -------------------------\n@@ -595,12 +587,6 @@ private\n    type clockid_t is new rtems_id;\n    CLOCK_REALTIME : constant clockid_t := 1;\n \n-   type struct_timeval is record\n-      tv_sec  : int;\n-      tv_usec : int;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    type pthread_attr_t is record\n       is_initialized  : int;\n       stackaddr       : System.Address;"}, {"sha": "c5885e72a9ab32050aed3be096d186b155e4139d", "filename": "gcc/ada/s-osinte-solaris-posix.ads", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris-posix.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -204,14 +204,6 @@ package System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n \n-   type struct_timeval is private;\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n    -------------------------\n    -- Priority Scheduling --\n    -------------------------\n@@ -524,12 +516,6 @@ private\n    type clockid_t is new int;\n    CLOCK_REALTIME : constant clockid_t := 0;\n \n-   type struct_timeval is record\n-      tv_sec  : time_t;\n-      tv_usec : time_t;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    type pthread_attr_t is record\n       pthread_attrp : System.Address;\n    end record;"}, {"sha": "3f40bc677d33734f3bf9207ba2dc53d2eab4d02e", "filename": "gcc/ada/s-osinte-solaris.adb", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris.adb?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -77,40 +77,6 @@ package body System.OS_Interface is\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n-   -----------------\n-   -- To_Duration --\n-   -----------------\n-\n-   function To_Duration (TV : struct_timeval) return Duration is\n-   begin\n-      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n-   end To_Duration;\n-\n-   ----------------\n-   -- To_Timeval --\n-   ----------------\n-\n-   function To_Timeval (D : Duration) return struct_timeval is\n-      S : long;\n-      F : Duration;\n-\n-   begin\n-      S := long (Long_Long_Integer (D));\n-      F := D - Duration (S);\n-\n-      --  If F has negative value due to a round-up, adjust for positive F\n-\n-      if F < 0.0 then\n-         S := S - 1;\n-         F := F + 1.0;\n-      end if;\n-\n-      return\n-        struct_timeval'\n-          (tv_sec  => S,\n-           tv_usec => long (Long_Long_Integer (F * 10#1#E6)));\n-   end To_Timeval;\n-\n    ------------------\n    -- pthread_init --\n    ------------------"}, {"sha": "0728b18ef8ef8c7b4a6f2fd49a007806d20885f1", "filename": "gcc/ada/s-osinte-solaris.ads", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16/gcc%2Fada%2Fs-osinte-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris.ads?ref=a7194bfea995c4bfc8f01ce18e36ef8bda7ebe16", "patch": "@@ -263,16 +263,6 @@ package System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n \n-   type struct_timeval is private;\n-   --  This is needed on systems that do not have clock_gettime()\n-   --  but do have gettimeofday().\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n    -------------\n    -- Process --\n    -------------\n@@ -528,12 +518,6 @@ private\n    type clockid_t is new int;\n    CLOCK_REALTIME : constant clockid_t := 0;\n \n-   type struct_timeval is record\n-      tv_sec  : long;\n-      tv_usec : long;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n    type array_type_9 is array (0 .. 3) of unsigned_char;\n    type record_type_3 is record\n       flag  : array_type_9;"}]}