{"sha": "74e299b9299a03ddf44cfa7f0660c908c3257dfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRlMjk5YjkyOTlhMDNkZGY0NGNmYTdmMDY2MGM5MDhjMzI1N2RmYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-05-15T15:11:07Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-15T15:11:07Z"}, "message": "i386: Emulate MMX vec_dupv2si with SSE\n\nEmulate MMX vec_dupv2si with SSE.  Add the \"Yw\" constraint to allow\nbroadcast from integer register for AVX512BW with TARGET_AVX512VL.\nOnly SSE register source operand is allowed.\n\n\tPR target/89021\n\t* config/i386/constraints.md (Yw): New constraint.\n\t* config/i386/mmx.md (*vec_dupv2si): Changed to\n\tdefine_insn_and_split and also allow TARGET_MMX_WITH_SSE to\n\tsupport SSE emulation.\n\nFrom-SVN: r271225", "tree": {"sha": "d7a166c49fd1a00a60d893dd4a63642f3fe04bae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7a166c49fd1a00a60d893dd4a63642f3fe04bae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74e299b9299a03ddf44cfa7f0660c908c3257dfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e299b9299a03ddf44cfa7f0660c908c3257dfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e299b9299a03ddf44cfa7f0660c908c3257dfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e299b9299a03ddf44cfa7f0660c908c3257dfc/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2629da835003ae3ca3f39a4888fa447fe966b011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2629da835003ae3ca3f39a4888fa447fe966b011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2629da835003ae3ca3f39a4888fa447fe966b011"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "4d2080fef9929f4ac22dcfd6f930cd01f2961bfb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e299b9299a03ddf44cfa7f0660c908c3257dfc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e299b9299a03ddf44cfa7f0660c908c3257dfc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74e299b9299a03ddf44cfa7f0660c908c3257dfc", "patch": "@@ -1,3 +1,11 @@\n+2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89021\n+\t* config/i386/constraints.md (Yw): New constraint.\n+\t* config/i386/mmx.md (*vec_dupv2si): Changed to\n+\tdefine_insn_and_split and also allow TARGET_MMX_WITH_SSE to\n+\tsupport SSE emulation.\n+\n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89021"}, {"sha": "c546b20d9dcde1ec099db30e7a2b5ff99a3e2196", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e299b9299a03ddf44cfa7f0660c908c3257dfc/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e299b9299a03ddf44cfa7f0660c908c3257dfc/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=74e299b9299a03ddf44cfa7f0660c908c3257dfc", "patch": "@@ -110,6 +110,8 @@\n ;;  v\tany EVEX encodable SSE register for AVX512VL target,\n ;;\totherwise any SSE register\n ;;  h\tEVEX encodable SSE register with number factor of four\n+;;  w\tany EVEX encodable SSE register for AVX512BW with TARGET_AVX512VL\n+;;\ttarget.\n \n (define_register_constraint \"Yz\" \"TARGET_SSE ? SSE_FIRST_REG : NO_REGS\"\n  \"First SSE register (@code{%xmm0}).\")\n@@ -146,6 +148,10 @@\n  \"TARGET_AVX512VL ? ALL_SSE_REGS : TARGET_SSE ? SSE_REGS : NO_REGS\"\n  \"@internal For AVX512VL, any EVEX encodable SSE register (@code{%xmm0-%xmm31}), otherwise any SSE register.\")\n \n+(define_register_constraint \"Yw\"\n+ \"TARGET_AVX512BW && TARGET_AVX512VL ? ALL_SSE_REGS : NO_REGS\"\n+ \"@internal Any EVEX encodable SSE register (@code{%xmm0-%xmm31}) for AVX512BW with TARGET_AVX512VL target.\")\n+\n ;; We use the B prefix to denote any number of internal operands:\n ;;  f  FLAGS_REG\n ;;  g  GOT memory operand."}, {"sha": "80859d59140b4befe6490fdf52b9626831ea5dae", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e299b9299a03ddf44cfa7f0660c908c3257dfc/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e299b9299a03ddf44cfa7f0660c908c3257dfc/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=74e299b9299a03ddf44cfa7f0660c908c3257dfc", "patch": "@@ -1406,14 +1406,24 @@\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*vec_dupv2si\"\n-  [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n+(define_insn_and_split \"*vec_dupv2si\"\n+  [(set (match_operand:V2SI 0 \"register_operand\" \"=y,x,Yv,Yw\")\n \t(vec_duplicate:V2SI\n-\t  (match_operand:SI 1 \"register_operand\" \"0\")))]\n-  \"TARGET_MMX\"\n-  \"punpckldq\\t%0, %0\"\n-  [(set_attr \"type\" \"mmxcvt\")\n-   (set_attr \"mode\" \"DI\")])\n+\t  (match_operand:SI 1 \"register_operand\" \"0,0,Yv,r\")))]\n+  \"TARGET_MMX || TARGET_MMX_WITH_SSE\"\n+  \"@\n+   punpckldq\\t%0, %0\n+   #\n+   #\n+   #\"\n+  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  [(set (match_dup 0)\n+\t(vec_duplicate:V4SI (match_dup 1)))]\n+  \"operands[0] = lowpart_subreg (V4SImode, operands[0],\n+\t\t\t\t GET_MODE (operands[0]));\"\n+  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx,x64_avx\")\n+   (set_attr \"type\" \"mmxcvt,ssemov,ssemov,ssemov\")\n+   (set_attr \"mode\" \"DI,TI,TI,TI\")])\n \n (define_insn \"*mmx_concatv2si\"\n   [(set (match_operand:V2SI 0 \"register_operand\"     \"=y,y\")"}]}