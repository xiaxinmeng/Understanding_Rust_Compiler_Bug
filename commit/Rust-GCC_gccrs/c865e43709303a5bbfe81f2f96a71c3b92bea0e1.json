{"sha": "c865e43709303a5bbfe81f2f96a71c3b92bea0e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg2NWU0MzcwOTMwM2E1YmJmZTgxZjJmOTZhNzFjM2I5MmJlYTBlMQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2011-03-31T00:01:53Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2011-03-31T00:01:53Z"}, "message": "reload1.c (reload): Fix botch in last change.\n\n\t* reload1.c (reload): Fix botch in last change.\n\t* reload.h (struct reload): Fix typo introduced in last change.\n\nFrom-SVN: r171759", "tree": {"sha": "a34078da79ba1f5ad0ba109f73374c42574c22ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a34078da79ba1f5ad0ba109f73374c42574c22ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c865e43709303a5bbfe81f2f96a71c3b92bea0e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c865e43709303a5bbfe81f2f96a71c3b92bea0e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c865e43709303a5bbfe81f2f96a71c3b92bea0e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c865e43709303a5bbfe81f2f96a71c3b92bea0e1/comments", "author": null, "committer": null, "parents": [{"sha": "0b3189e79f87c6d8927a96918b2ee53456df4928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b3189e79f87c6d8927a96918b2ee53456df4928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b3189e79f87c6d8927a96918b2ee53456df4928"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "9cb926b7b17e62c1b7434988ab1f12255f703038", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c865e43709303a5bbfe81f2f96a71c3b92bea0e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c865e43709303a5bbfe81f2f96a71c3b92bea0e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c865e43709303a5bbfe81f2f96a71c3b92bea0e1", "patch": "@@ -1,3 +1,9 @@\n+2011-03-30  Jeff Law  <law@redhat.com>\n+\n+\t* reload1.c (reload): Fix botch in last change.\n+\n+\t* reload.h (struct reload): Fix typo introduced in last change.\n+\n 2011-03-30  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/arm/arm.opt (mhard-float, msoft-float): Mark"}, {"sha": "c57178045e911a359fc1a0897505c07a02c034b1", "filename": "gcc/reload.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c865e43709303a5bbfe81f2f96a71c3b92bea0e1/gcc%2Freload.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c865e43709303a5bbfe81f2f96a71c3b92bea0e1/gcc%2Freload.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.h?ref=c865e43709303a5bbfe81f2f96a71c3b92bea0e1", "patch": "@@ -100,7 +100,7 @@ struct reload\n   int inc;\n   /* A reg for which reload_in is the equivalent.\n      If reload_in is a symbol_ref which came from\n-     reg_equiv_consant, then this is the pseudo\n+     reg_equiv_constant, then this is the pseudo\n      which has that symbol_ref as equivalent.  */\n   rtx in_reg;\n   rtx out_reg;"}, {"sha": "100f14800c81c3e71c6042e027fa85caa0854dac", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c865e43709303a5bbfe81f2f96a71c3b92bea0e1/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c865e43709303a5bbfe81f2f96a71c3b92bea0e1/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=c865e43709303a5bbfe81f2f96a71c3b92bea0e1", "patch": "@@ -895,7 +895,7 @@ reload (rtx first, int global)\n \t\t\t && (REGNO (XEXP (XEXP (x, 0), 0))\n \t\t\t     < FIRST_PSEUDO_REGISTER)\n \t\t\t && CONSTANT_P (XEXP (XEXP (x, 0), 1))))\n-\t      reg_equiv_mem (i) = XEXP (x, 0), reg_equiv_mem (i) = 0;\n+\t      reg_equiv_address (i) = XEXP (x, 0), reg_equiv_mem (i) = 0;\n \t    else\n \t      {\n \t\t/* Make a new stack slot.  Then indicate that something"}]}