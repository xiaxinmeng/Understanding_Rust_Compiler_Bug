{"sha": "838d4970791ec968ffcf28a2ddcd6e4b988b4c55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM4ZDQ5NzA3OTFlYzk2OGZmY2YyOGEyZGRjZDZlNGI5ODhiNGM1NQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-09-18T21:05:26Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-09-18T21:05:26Z"}, "message": "SSLSocket.java (isBound, [...]): Removed old comment.\n\n\t* gnu/javax/net/ssl/provider/SSLSocket.java (isBound, isClosed,\n\tisConnected): Removed old comment.\n\t(getRemoteSocketAddress): Uncommented.\n\t(setOOBInline, getOOBInline, setKeepAlive, getKeepAlive,\n\tsetTrafficClass, getTrafficClass, setReuseAddress,\n\tgetReuseAddress, shutdownInput, shutdownOutput, isInputShutdown,\n\tisOutputShutdown): Uncommented.\n\nFrom-SVN: r117035", "tree": {"sha": "faa2cf40d1a5eee1c9eaec50daa6c263d3af8be4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faa2cf40d1a5eee1c9eaec50daa6c263d3af8be4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/838d4970791ec968ffcf28a2ddcd6e4b988b4c55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838d4970791ec968ffcf28a2ddcd6e4b988b4c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/838d4970791ec968ffcf28a2ddcd6e4b988b4c55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838d4970791ec968ffcf28a2ddcd6e4b988b4c55/comments", "author": null, "committer": null, "parents": [{"sha": "fd2aa7ad9f4fe9fdbe36bbdb3a249e55cb4080ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd2aa7ad9f4fe9fdbe36bbdb3a249e55cb4080ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd2aa7ad9f4fe9fdbe36bbdb3a249e55cb4080ca"}], "stats": {"total": 239, "additions": 117, "deletions": 122}, "files": [{"sha": "fa1bbf37bf53b10def90c73213ca9b70f32ea1c4", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838d4970791ec968ffcf28a2ddcd6e4b988b4c55/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838d4970791ec968ffcf28a2ddcd6e4b988b4c55/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=838d4970791ec968ffcf28a2ddcd6e4b988b4c55", "patch": "@@ -1,3 +1,13 @@\n+2006-09-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gnu/javax/net/ssl/provider/SSLSocket.java (isBound, isClosed,\n+\tisConnected): Removed old comment.\n+\t(getRemoteSocketAddress): Uncommented.\n+\t(setOOBInline, getOOBInline, setKeepAlive, getKeepAlive,\n+\tsetTrafficClass, getTrafficClass, setReuseAddress,\n+\tgetReuseAddress, shutdownInput, shutdownOutput, isInputShutdown,\n+\tisOutputShutdown): Uncommented.\n+\n 2006-09-11 David Daney  <ddaney@avtrex.com>\n \n \tPR classpath/28580"}, {"sha": "d08bc50f1c947cc58b2b35692df28984354418ec", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/SSLSocket.java", "status": "modified", "additions": 107, "deletions": 122, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838d4970791ec968ffcf28a2ddcd6e4b988b4c55/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838d4970791ec968ffcf28a2ddcd6e4b988b4c55/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLSocket.java?ref=838d4970791ec968ffcf28a2ddcd6e4b988b4c55", "patch": "@@ -845,7 +845,6 @@ public boolean isBound()\n       {\n         return super.isBound();\n       }\n-    //throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n   }\n \n   public boolean isClosed()\n@@ -858,149 +857,138 @@ public boolean isClosed()\n       {\n         return super.isClosed();\n       }\n-    //throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n   }\n \n-  //public SocketAddress getRemoteSocketAddress()\n-  //{\n-  //  if (underlyingSocket != null)\n-  //    {\n-  //      return underlyingSocket.getRemoteSocketAddress();\n-  //    }\n-  //  else\n-  //    {\n-  //      return super.getRemoteSocketAddress();\n-  //    }\n-  //}\n+  public SocketAddress getRemoteSocketAddress()\n+  {\n+   if (underlyingSocket != null)\n+     {\n+       return underlyingSocket.getRemoteSocketAddress();\n+     }\n+   else\n+     {\n+       return super.getRemoteSocketAddress();\n+     }\n+  }\n \n   public void setOOBInline(boolean flag) throws SocketException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    underlyingSocket.setOOBInline(flag);\n-    //  }\n-    //else\n-    //  {\n-    //    super.setOOBInline(flag);\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\tunderlyingSocket.setOOBInline(flag);\n+      }\n+    else\n+      {\n+\tsuper.setOOBInline(flag);\n+      }\n   }\n \n   public boolean getOOBInline() throws SocketException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    return underlyingSocket.getOOBInline();\n-    //  }\n-    //else\n-    //  {\n-    //    return super.getOOBInline();\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\treturn underlyingSocket.getOOBInline();\n+      }\n+    else\n+      {\n+\treturn super.getOOBInline();\n+      }\n   }\n \n   public void setKeepAlive(boolean flag) throws SocketException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    underlyingSocket.setKeepAlive(flag);\n-    //  }\n-    //else\n-    //  {\n-    //    super.setKeepAlive(flag);\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\tunderlyingSocket.setKeepAlive(flag);\n+      }\n+    else\n+      {\n+\tsuper.setKeepAlive(flag);\n+      }\n   }\n \n   public boolean getKeepAlive() throws SocketException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    return underlyingSocket.getKeepAlive();\n-    //  }\n-    //else\n-    //  {\n-    //    return super.getKeepAlive();\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\treturn underlyingSocket.getKeepAlive();\n+      }\n+    else\n+      {\n+\treturn super.getKeepAlive();\n+      }\n   }\n \n   public void setTrafficClass(int clazz) throws SocketException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    underlyingSocket.setTrafficClass(clazz);\n-    //  }\n-    //else\n-    //  {\n-    //    super.setTrafficClass(clazz);\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\tunderlyingSocket.setTrafficClass(clazz);\n+      }\n+    else\n+      {\n+\tsuper.setTrafficClass(clazz);\n+      }\n   }\n \n   public int getTrafficClass() throws SocketException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    return underlyingSocket.getTrafficClass();\n-    //  }\n-    //else\n-    //  {\n-    //    return super.getTrafficClass();\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\treturn underlyingSocket.getTrafficClass();\n+      }\n+    else\n+      {\n+\treturn super.getTrafficClass();\n+      }\n   }\n \n   public void setReuseAddress(boolean flag) throws SocketException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    underlyingSocket.setReuseAddress(flag);\n-    //  }\n-    //else\n-    //  {\n-    //    super.setReuseAddress(flag);\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\tunderlyingSocket.setReuseAddress(flag);\n+      }\n+    else\n+      {\n+\tsuper.setReuseAddress(flag);\n+      }\n   }\n \n   public boolean getReuseAddress() throws SocketException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    return underlyingSocket.getReuseAddress();\n-    //  }\n-    //else\n-    //  {\n-    //    return super.getReuseAddress();\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\treturn underlyingSocket.getReuseAddress();\n+      }\n+    else\n+      {\n+\treturn super.getReuseAddress();\n+      }\n   }\n \n   public void shutdownInput() throws IOException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    underlyingSocket.shutdownInput();\n-    //  }\n-    //else\n-    //  {\n-    //    super.shutdownInput();\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\tunderlyingSocket.shutdownInput();\n+      }\n+    else\n+      {\n+\tsuper.shutdownInput();\n+      }\n   }\n \n   public void shutdownOutput() throws IOException\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    underlyingSocket.shutdownOutput();\n-    //  }\n-    //else\n-    //  {\n-    //    super.shutdownOutput();\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\tunderlyingSocket.shutdownOutput();\n+      }\n+    else\n+      {\n+\tsuper.shutdownOutput();\n+      }\n   }\n \n   public boolean isConnected()\n@@ -1013,33 +1001,30 @@ public boolean isConnected()\n       {\n         return super.isConnected();\n       }\n-    //throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n   }\n \n   public boolean isInputShutdown()\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    return underlyingSocket.isInputShutdown();\n-    //  }\n-    //else\n-    //  {\n-    //    return super.isInputShutdown();\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\treturn underlyingSocket.isInputShutdown();\n+      }\n+    else\n+      {\n+\treturn super.isInputShutdown();\n+      }\n   }\n \n   public boolean isOutputShutdown()\n   {\n-    //if (underlyingSocket != null)\n-    //  {\n-    //    return underlyingSocket.isOutputShutdown();\n-    //  }\n-    //else\n-    //  {\n-    //    return super.isOutputShutdown();\n-    //  }\n-    throw new UnsupportedOperationException(\"1.4 methods not enabled\");\n+    if (underlyingSocket != null)\n+      {\n+\treturn underlyingSocket.isOutputShutdown();\n+      }\n+    else\n+      {\n+\treturn super.isOutputShutdown();\n+      }\n   }\n \n   protected void finalize()"}]}