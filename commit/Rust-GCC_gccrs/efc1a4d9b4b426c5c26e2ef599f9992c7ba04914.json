{"sha": "efc1a4d9b4b426c5c26e2ef599f9992c7ba04914", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZjMWE0ZDliNGI0MjZjNWMyNmUyZWY1OTlmOTk5MmM3YmEwNDkxNA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-09-18T04:43:29Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-09-18T04:43:29Z"}, "message": "(invert_truthvalue):  Allow arbitrary BOOLEAN_TYPE arguments.\n\nFrom-SVN: r5351", "tree": {"sha": "65b55ac5b9156abb7b7349edf877f614fcfd667a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65b55ac5b9156abb7b7349edf877f614fcfd667a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efc1a4d9b4b426c5c26e2ef599f9992c7ba04914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc1a4d9b4b426c5c26e2ef599f9992c7ba04914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc1a4d9b4b426c5c26e2ef599f9992c7ba04914", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc1a4d9b4b426c5c26e2ef599f9992c7ba04914/comments", "author": null, "committer": null, "parents": [{"sha": "925d5bbfe9aab62d196da3cc1afb238c6d8b5b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925d5bbfe9aab62d196da3cc1afb238c6d8b5b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/925d5bbfe9aab62d196da3cc1afb238c6d8b5b4c"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "62ead45de86dee8471298fb9f2e8cf6b6e13a628", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc1a4d9b4b426c5c26e2ef599f9992c7ba04914/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc1a4d9b4b426c5c26e2ef599f9992c7ba04914/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=efc1a4d9b4b426c5c26e2ef599f9992c7ba04914", "patch": "@@ -2181,12 +2181,14 @@ invert_truthvalue (arg)\n \t\t     invert_truthvalue (TREE_OPERAND (arg, 0)));\n \n     case BIT_AND_EXPR:\n-      if (! integer_onep (TREE_OPERAND (arg, 1)))\n-\tabort ();\n+      if (!integer_onep (TREE_OPERAND (arg, 1)))\n+\tbreak;\n       return build (EQ_EXPR, type, arg, convert (type, integer_zero_node));\n-    }\n \n-  abort ();\n+    }\n+  if (TREE_CODE (TREE_TYPE (arg)) != BOOLEAN_TYPE)\n+    abort();\n+  return build1 (TRUTH_NOT_EXPR, type, arg);\n }\n \n /* Given a bit-wise operation CODE applied to ARG0 and ARG1, see if both"}]}