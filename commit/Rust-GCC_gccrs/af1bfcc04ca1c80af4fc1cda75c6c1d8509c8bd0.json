{"sha": "af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0", "node_id": "C_kwDOANBUbNoAKGFmMWJmY2MwNGNhMWM4MGFmNGZjMWNkYTc1YzZjMWQ4NTA5YzhiZDA", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-04T13:58:27Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-04T14:01:52Z"}, "message": "Add -v option for git_check_commit.py.\n\nDoing so, one can see:\n$ git gcc-verify a50914d2111c72d2cd5cb8cf474133f4f85a25f6 -v\nChecking a50914d2111c72d2cd5cb8cf474133f4f85a25f6: FAILED\nERR: unchanged file mentioned in a ChangeLog: \"gcc/common.opt\"\nERR: unchanged file mentioned in a ChangeLog (did you mean \"gcc/testsuite/g++.dg/pr102955.C\"?): \"gcc/testsuite/gcc.dg/pr102955.c\"\n- gcc/testsuite/gcc.dg/pr102955.c\n?                ^^             ^\n\n+ gcc/testsuite/g++.dg/pr102955.C\n?                ^^             ^\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_check_commit.py: Add -v option.\n\t* gcc-changelog/git_commit.py: Print verbose diff for wrong\n\tfilename.", "tree": {"sha": "179e12d7a4efde4eaa10e79e4d5a49a14edc6c5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/179e12d7a4efde4eaa10e79e4d5a49a14edc6c5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5914a7b5c637c9007283226f200dcab8b745abc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5914a7b5c637c9007283226f200dcab8b745abc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5914a7b5c637c9007283226f200dcab8b745abc8"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "d6aff3cef918d295072f82c372b53aef7b0a124d", "filename": "contrib/gcc-changelog/git_check_commit.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_check_commit.py?ref=af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0", "patch": "@@ -29,6 +29,8 @@\n                     help='Path to git repository')\n parser.add_argument('-p', '--print-changelog', action='store_true',\n                     help='Print final changelog entires')\n+parser.add_argument('-v', '--verbose', action='store_true',\n+                    help='Print verbose information')\n args = parser.parse_args()\n \n retval = 0\n@@ -41,6 +43,8 @@\n     else:\n         for error in git_commit.errors:\n             print('ERR: %s' % error)\n+            if args.verbose and error.details:\n+                print(error.details)\n         retval = 1\n \n exit(retval)"}, {"sha": "27a1d59b211f47aa595f5d5292abb96bc35fa1c2", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0", "patch": "@@ -197,9 +197,10 @@ def decode_path(path):\n \n \n class Error:\n-    def __init__(self, message, line=None):\n+    def __init__(self, message, line=None, details=None):\n         self.message = message\n         self.line = line\n+        self.details = details\n \n     def __repr__(self):\n         s = self.message\n@@ -687,9 +688,11 @@ def check_mentioned_files(self):\n         for file in sorted(mentioned_files - changed_files):\n             msg = 'unchanged file mentioned in a ChangeLog'\n             candidates = difflib.get_close_matches(file, changed_files, 1)\n+            details = None\n             if candidates:\n                 msg += f' (did you mean \"{candidates[0]}\"?)'\n-            self.errors.append(Error(msg, file))\n+                details = '\\n'.join(difflib.Differ().compare([file], [candidates[0]])).rstrip()\n+            self.errors.append(Error(msg, file, details))\n         for file in sorted(changed_files - mentioned_files):\n             if not self.in_ignored_location(file):\n                 if file in self.new_files:"}]}