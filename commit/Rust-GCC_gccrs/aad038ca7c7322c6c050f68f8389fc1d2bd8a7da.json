{"sha": "aad038ca7c7322c6c050f68f8389fc1d2bd8a7da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFkMDM4Y2E3YzczMjJjNmMwNTBmNjhmODM4OWZjMWQyYmQ4YTdkYQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-01-19T13:57:04Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-01-19T13:57:04Z"}, "message": "re PR lto/51280 (ICE when lto1 does not have -fgnu-tm and object file uses TM)\n\n        PR lto/51280\n        * lto-wrapper.c (run_gcc): Pass -fgnu_tm on.\n        (merge_and_complain): Same.\n\nFrom-SVN: r183303", "tree": {"sha": "0bff4647655980e1e4ad09a583414e68daa83969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bff4647655980e1e4ad09a583414e68daa83969"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01ddefeba765c4d86ea452b41179cb8508196c4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ddefeba765c4d86ea452b41179cb8508196c4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ddefeba765c4d86ea452b41179cb8508196c4e"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "91b7f26719942693bf85556cf3f693f1beda83d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aad038ca7c7322c6c050f68f8389fc1d2bd8a7da", "patch": "@@ -1,3 +1,9 @@\n+2012-01-19  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR lto/51280\n+\t* lto-wrapper.c (run_gcc): Pass -fgnu_tm on.\n+\t(merge_and_complain): Same.\n+\n 2012-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/50237"}, {"sha": "6d262e8040bbde1fe4da7251798dd61c70b3729b", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=aad038ca7c7322c6c050f68f8389fc1d2bd8a7da", "patch": "@@ -403,6 +403,7 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \tcase OPT_fpie:\n \tcase OPT_fcommon:\n \tcase OPT_fexceptions:\n+\tcase OPT_fgnu_tm:\n \t  /* Do what the old LTO code did - collect exactly one option\n \t     setting per OPT code, we pick the first we encounter.\n \t     ???  This doesn't make too much sense, but when it doesn't\n@@ -555,6 +556,7 @@ run_gcc (unsigned argc, char *argv[])\n \tcase OPT_fpie:\n \tcase OPT_fcommon:\n \tcase OPT_fexceptions:\n+\tcase OPT_fgnu_tm:\n \t  break;\n \n \tdefault:"}, {"sha": "dd578907da09dd4799b79770fd9ccff9a11c3677", "filename": "gcc/testsuite/gcc.dg/lto/trans-mem-3_0.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_0.c?ref=aad038ca7c7322c6c050f68f8389fc1d2bd8a7da", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-lto-options {{-flto}} } */\n+/* { dg-lto-do link } */\n+\n+/* Test that we can build one object file with -fgnu-tm\n+   (trans-mem-3_1.c), but do the final link of all objects without\n+   -fgnu-tm.  */\n+\n+int i;"}, {"sha": "d907f68384fd1bb5fbb03af02849f973d746d98f", "filename": "gcc/testsuite/gcc.dg/lto/trans-mem-3_1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad038ca7c7322c6c050f68f8389fc1d2bd8a7da/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_1.c?ref=aad038ca7c7322c6c050f68f8389fc1d2bd8a7da", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-options \"-fgnu-tm\" } */\n+\n+extern int i;\n+\n+main()\n+{\n+  __transaction_atomic { i = 0; }\n+}\n+\n+#define dummy(func)\t\t\t\t\t\t\t\\\n+  __attribute__((noinline,noclone,used)) void func() { asm (\"\"); }\n+\n+dummy(_ITM_beginTransaction)\n+dummy(_ITM_commitTransaction)\n+dummy(_ITM_WU4)\n+dummy(_ITM_WU8)\n+dummy(_ITM_registerTMCloneTable)\n+dummy(_ITM_deregisterTMCloneTable)"}]}