{"sha": "34599780d0de72faf5719ea08d11a061722b9d19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ1OTk3ODBkMGRlNzJmYWY1NzE5ZWEwOGQxMWEwNjE3MjJiOWQxOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-20T07:48:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-20T08:38:22Z"}, "message": "tree-optimization/98758 - fix integer arithmetic in data-ref analysis\n\nThis fixes some int arithmetic issues and a bogus truncation.\n\n2021-01-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/98758\n\t* tree-data-ref.c (int_divides_p): Use lambda_int arguments.\n\t(lambda_matrix_right_hermite): Avoid undefinedness with\n\tsigned integer abs and multiplication.\n\t(analyze_subscript_affine_affine): Use lambda_int.\n\n\t* gcc.dg/torture/pr98758.c: New testcase.", "tree": {"sha": "7d7bed343ddc84aed63c12baad330f9d792b4171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d7bed343ddc84aed63c12baad330f9d792b4171"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34599780d0de72faf5719ea08d11a061722b9d19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34599780d0de72faf5719ea08d11a061722b9d19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34599780d0de72faf5719ea08d11a061722b9d19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34599780d0de72faf5719ea08d11a061722b9d19/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ab1abf3b82a3bcfff9b7bc596166fef6a0d83ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab1abf3b82a3bcfff9b7bc596166fef6a0d83ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab1abf3b82a3bcfff9b7bc596166fef6a0d83ab"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "7b9fdb2b61339c2c772ec3b48ad8f7c251175199", "filename": "gcc/testsuite/gcc.dg/torture/pr98758.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34599780d0de72faf5719ea08d11a061722b9d19/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr98758.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34599780d0de72faf5719ea08d11a061722b9d19/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr98758.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr98758.c?ref=34599780d0de72faf5719ea08d11a061722b9d19", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+\n+long *a, *b;\n+long c;\n+void d(void)\n+{\n+  b = a;\n+  while (c) {\n+    *a = (__INTPTR_TYPE__)(a += (long)1 << (sizeof(long) * 8 - 10));\n+    c = b[0];\n+    b = a;\n+  }\n+}"}, {"sha": "9d07b415e9d1a7acadcdbda188fa216a7c6de3c2", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34599780d0de72faf5719ea08d11a061722b9d19/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34599780d0de72faf5719ea08d11a061722b9d19/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=34599780d0de72faf5719ea08d11a061722b9d19", "patch": "@@ -143,7 +143,7 @@ tree_fold_divides_p (const_tree a, const_tree b)\n /* Returns true iff A divides B.  */\n \n static inline bool\n-int_divides_p (int a, int b)\n+int_divides_p (lambda_int a, lambda_int b)\n {\n   return ((b % a) == 0);\n }\n@@ -4280,10 +4280,10 @@ lambda_matrix_right_hermite (lambda_matrix A, int m, int n,\n \n \t\t  a = S[i-1][j];\n \t\t  b = S[i][j];\n-\t\t  sigma = (a * b < 0) ? -1: 1;\n-\t\t  a = abs_hwi (a);\n-\t\t  b = abs_hwi (b);\n-\t\t  factor = sigma * (a / b);\n+\t\t  sigma = ((a < 0) ^ (b < 0)) ? -1: 1;\n+\t\t  unsigned HOST_WIDE_INT abs_a = absu_hwi (a);\n+\t\t  unsigned HOST_WIDE_INT abs_b = absu_hwi (b);\n+\t\t  factor = sigma * (lambda_int)(abs_a / abs_b);\n \n \t\t  lambda_matrix_row_add (S, n, i, i-1, -factor);\n \t\t  std::swap (S[i], S[i-1]);\n@@ -4309,7 +4309,7 @@ analyze_subscript_affine_affine (tree chrec_a,\n \t\t\t\t tree *last_conflicts)\n {\n   unsigned nb_vars_a, nb_vars_b, dim;\n-  HOST_WIDE_INT gamma, gcd_alpha_beta;\n+  lambda_int gamma, gcd_alpha_beta;\n   lambda_matrix A, U, S;\n   struct obstack scratch_obstack;\n "}]}