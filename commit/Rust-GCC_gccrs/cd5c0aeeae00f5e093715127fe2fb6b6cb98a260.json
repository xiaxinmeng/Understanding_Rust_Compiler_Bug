{"sha": "cd5c0aeeae00f5e093715127fe2fb6b6cb98a260", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q1YzBhZWVhZTAwZjVlMDkzNzE1MTI3ZmUyZmI2YjZjYjk4YTI2MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-07T08:04:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-07T08:04:38Z"}, "message": "re PR rtl-optimization/79901 (ICE in prepare_cmp_insn, at optabs.c:3904)\n\n\tPR rtl-optimization/79901\n\t* expr.c (expand_expr_real_2): For vector MIN/MAX, if there is no\n\tmin/max expander, expand it using expand_vec_cond_expr.\n\nFrom-SVN: r245946", "tree": {"sha": "5c0a6264e9bcf6fb5da8b83c4d77cd086033575d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c0a6264e9bcf6fb5da8b83c4d77cd086033575d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd5c0aeeae00f5e093715127fe2fb6b6cb98a260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5c0aeeae00f5e093715127fe2fb6b6cb98a260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5c0aeeae00f5e093715127fe2fb6b6cb98a260", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5c0aeeae00f5e093715127fe2fb6b6cb98a260/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f6dba54da4c437e74fbb1c92621adb33582efff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f6dba54da4c437e74fbb1c92621adb33582efff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f6dba54da4c437e74fbb1c92621adb33582efff"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "efeee1a1796404ab6a8c9e8cef130308aedc53f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5c0aeeae00f5e093715127fe2fb6b6cb98a260/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5c0aeeae00f5e093715127fe2fb6b6cb98a260/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd5c0aeeae00f5e093715127fe2fb6b6cb98a260", "patch": "@@ -1,5 +1,9 @@\n 2017-03-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/79901\n+\t* expr.c (expand_expr_real_2): For vector MIN/MAX, if there is no\n+\tmin/max expander, expand it using expand_vec_cond_expr.\n+\n \tPR sanitizer/79897\n \t* ubsan.c (ubsan_encode_value): Call mark_addressable on the\n \ttemporary."}, {"sha": "91d7ea217229fac62380b5d4b646961bf7c836c1", "filename": "gcc/expr.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5c0aeeae00f5e093715127fe2fb6b6cb98a260/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5c0aeeae00f5e093715127fe2fb6b6cb98a260/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=cd5c0aeeae00f5e093715127fe2fb6b6cb98a260", "patch": "@@ -8943,6 +8943,18 @@ expand_expr_real_2 (sepops ops, rtx target, machine_mode tmode,\n       if (temp != 0)\n \treturn temp;\n \n+      /* For vector MIN <x, y>, expand it a VEC_COND_EXPR <x <= y, x, y>\n+\t and similarly for MAX <x, y>.  */\n+      if (VECTOR_TYPE_P (type))\n+\t{\n+\t  tree t0 = make_tree (type, op0);\n+\t  tree t1 = make_tree (type, op1);\n+\t  tree comparison = build2 (code == MIN_EXPR ? LE_EXPR : GE_EXPR,\n+\t\t\t\t    type, t0, t1);\n+\t  return expand_vec_cond_expr (type, comparison, t0, t1,\n+\t\t\t\t       original_target);\n+\t}\n+\n       /* At this point, a MEM target is no longer useful; we will get better\n \t code without it.  */\n "}]}