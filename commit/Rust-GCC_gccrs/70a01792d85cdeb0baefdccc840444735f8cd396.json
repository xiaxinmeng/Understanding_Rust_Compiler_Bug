{"sha": "70a01792d85cdeb0baefdccc840444735f8cd396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhMDE3OTJkODVjZGViMGJhZWZkY2NjODQwNDQ0NzM1ZjhjZDM5Ng==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-10-06T22:47:32Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-10-06T22:47:32Z"}, "message": "real.h (REAL_MODE_FORMAT): New macro.\n\n\t* real.h (REAL_MODE_FORMAT): New macro.\n\t* c-cppbuiltin.c, optabs.c, real.c, config/alpha/alpha.c\n\t* config/c4x/c4x.c, config/i370/i370.c, config/i386/freebsd.h\n\t* config/i386/i386.c, config/i960/i960.c, config/ia64/ia64.c\n\t* config/m68k/m68k.c, config/mips/mips.c, config/rs6000/rs6000.c\n\t* config/vax/vax.c: Use REAL_MODE_FORMAT instead of referring\n\tdirectly to real_format_for_mode array, wherever possible.\n\nFrom-SVN: r72168", "tree": {"sha": "972d12bd6146ca789109687592f05e46952b0f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/972d12bd6146ca789109687592f05e46952b0f67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70a01792d85cdeb0baefdccc840444735f8cd396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a01792d85cdeb0baefdccc840444735f8cd396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a01792d85cdeb0baefdccc840444735f8cd396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a01792d85cdeb0baefdccc840444735f8cd396/comments", "author": null, "committer": null, "parents": [{"sha": "ba9b12d1d29019dc0f200cbfaea484e7a3762481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9b12d1d29019dc0f200cbfaea484e7a3762481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9b12d1d29019dc0f200cbfaea484e7a3762481"}], "stats": {"total": 78, "additions": 44, "deletions": 34}, "files": [{"sha": "a60682cb1fc59e9c4f0123a31a1ce6fb02f604fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -1,10 +1,20 @@\n+2003-10-06  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* real.h (REAL_MODE_FORMAT): New macro.\n+\t* c-cppbuiltin.c, optabs.c, real.c, config/alpha/alpha.c\n+\t* config/c4x/c4x.c, config/i370/i370.c, config/i386/freebsd.h\n+\t* config/i386/i386.c, config/i960/i960.c, config/ia64/ia64.c\n+\t* config/m68k/m68k.c, config/mips/mips.c, config/rs6000/rs6000.c\n+\t* config/vax/vax.c: Use REAL_MODE_FORMAT instead of referring\n+\tdirectly to real_format_for_mode array, wherever possible.\n+\n 2003-10-06  Devang Patel  <dpatel@apple.com>\n \n \t* dwarf2out.c (is_main_source): Remove variable.\n \t(dwarf2out_start_source_file): Do not check is_main_source.\n \tDo not reset is_main_source.\n \t(dwarf2out_init): Do not initialize is_main_source.\n-\t\n+\n 2003-10-06  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* fixinc/inclhack.def (stdio_va_list): Removed _ap fix.\n@@ -103,7 +113,7 @@\n \n 2003-10-05  Andrew Pinski <apinski@apple.com>\n \n-\t* config/darwin.c (machopic_non_lazy_ptr_name): \n+\t* config/darwin.c (machopic_non_lazy_ptr_name):\n \tChange strcat to memcpy and add length together.\n \t(machopic_stub_name): Likewise.\n \n@@ -191,7 +201,7 @@\n \t* gengtype-lex.l: Recognize typedef of functions without PARAMS macro.\n \n 2003-10-04  Nathanael Nerode  <neroden@gcc.gnu.org>\n-        \n+\n \t* config/v850/v850-c.c, config/v850/v850-protos.h, config/v850/v850.c:\n \tConvert to ISO C90 function declarations and definitions.\n "}, {"sha": "19a9cf481069d63729a646334bad1077d8dacd9a", "filename": "gcc/c-cppbuiltin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-cppbuiltin.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -85,7 +85,7 @@ builtin_define_float_constants (const char *name_prefix, const char *fp_suffix,\n   int dig, min_10_exp, max_10_exp;\n   int decimal_dig;\n \n-  fmt = real_format_for_mode[TYPE_MODE (type) - QFmode];\n+  fmt = REAL_MODE_FORMAT (TYPE_MODE (type));\n \n   /* The radix of the exponent representation.  */\n   if (type == float_type_node)"}, {"sha": "f7998cc994c6f7c5e2a00c0e7993aa0300985c9c", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -472,9 +472,9 @@ override_options (void)\n   /* Tell the compiler when we're using VAX floating point.  */\n   if (TARGET_FLOAT_VAX)\n     {\n-      real_format_for_mode[SFmode - QFmode] = &vax_f_format;\n-      real_format_for_mode[DFmode - QFmode] = &vax_g_format;\n-      real_format_for_mode[TFmode - QFmode] = NULL;\n+      REAL_MODE_FORMAT (SFmode) = &vax_f_format;\n+      REAL_MODE_FORMAT (DFmode) = &vax_g_format;\n+      REAL_MODE_FORMAT (TFmode) = NULL;\n     }\n }\n \f"}, {"sha": "a50cbb8a88c00f9be39f0e2b5698d9946dd46d59", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -317,8 +317,8 @@ c4x_override_options (void)\n \n   /* We're C4X floating point, not IEEE floating point.  */\n   memset (real_format_for_mode, 0, sizeof real_format_for_mode);\n-  real_format_for_mode[QFmode - QFmode] = &c4x_single_format;\n-  real_format_for_mode[HFmode - QFmode] = &c4x_extended_format;\n+  REAL_MODE_FORMAT (QFmode) = &c4x_single_format;\n+  REAL_MODE_FORMAT (HFmode) = &c4x_extended_format;\n }\n \n "}, {"sha": "0dfa3c4559b185436136b64228952b9c0aa656cb", "filename": "gcc/config/i370/i370.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fi370%2Fi370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fi370%2Fi370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -213,8 +213,8 @@ override_options ()\n {\n   /* We're 370 floating point, not IEEE floating point.  */\n   memset (real_format_for_mode, 0, sizeof real_format_for_mode);\n-  real_format_for_mode[SFmode - QFmode] = &i370_single_format;\n-  real_format_for_mode[DFmode - QFmode] = &i370_double_format;\n+  REAL_MODE_FORMAT (SFmode) = &i370_single_format;\n+  REAL_MODE_FORMAT (DFmode) = &i370_double_format;\n }\n \n /* ===================================================== */"}, {"sha": "7396a47ce42bec1af8639d7352be064549c9766e", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -137,9 +137,9 @@ Boston, MA 02111-1307, USA.  */\n #define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\\\n   do {\t\t\t\t\t\t\t\\\n     if (!TARGET_64BIT) {\t\t\t\t\\\n-      real_format_for_mode[XFmode - QFmode]\t\t\\\n+      REAL_MODE_FORMAT (XFmode)\t\t\t\t\\\n \t= &ieee_extended_intel_96_round_53_format;\t\\\n-      real_format_for_mode[TFmode - QFmode]\t\t\\\n+      REAL_MODE_FORMAT (TFmode)\t\t\t\t\\\n \t= &ieee_extended_intel_96_round_53_format;\t\\\n     }\t\t\t\t\t\t\t\\\n   } while (0)"}, {"sha": "1c606df7694c2add18aa67a8c7716ed7c6a946fa", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -1113,8 +1113,8 @@ override_options (void)\n \n   /* By default our XFmode is the 80-bit extended format.  If we have\n      use TFmode instead, it's also the 80-bit format, but with padding.  */\n-  real_format_for_mode[XFmode - QFmode] = &ieee_extended_intel_96_format;\n-  real_format_for_mode[TFmode - QFmode] = &ieee_extended_intel_128_format;\n+  REAL_MODE_FORMAT (XFmode) = &ieee_extended_intel_96_format;\n+  REAL_MODE_FORMAT (TFmode) = &ieee_extended_intel_128_format;\n \n   /* Set the default values for switches whose default depends on TARGET_64BIT\n      in case they weren't overwritten by command line options.  */"}, {"sha": "f62693a91765a51c06fcfb41495df5a6e467130a", "filename": "gcc/config/i960/i960.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fi960%2Fi960.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fi960%2Fi960.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -169,7 +169,7 @@ i960_initialize ()\n     }\n \n   /* Tell the compiler which flavor of TFmode we're using.  */\n-  real_format_for_mode[TFmode - QFmode] = &ieee_extended_intel_128_format;\n+  REAL_MODE_FORMAT (TFmode) = &ieee_extended_intel_128_format;\n }\n \f\n /* Return true if OP can be used as the source of an fp move insn.  */"}, {"sha": "b632d8b8c641f9516679b9cb4b3115ec1234d755", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -4509,7 +4509,7 @@ ia64_override_options (void)\n \n   /* Tell the compiler which flavor of TFmode we're using.  */\n   if (INTEL_EXTENDED_IEEE_FORMAT)\n-    real_format_for_mode[TFmode - QFmode] = &ieee_extended_intel_128_format;\n+    REAL_MODE_FORMAT (TFmode) = &ieee_extended_intel_128_format;\n }\n \f\n static enum attr_itanium_class ia64_safe_itanium_class (rtx);"}, {"sha": "105f2417ce4c68494402f2c998f8ad0f728509a4", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -212,7 +212,7 @@ override_options (void)\n   SUBTARGET_OVERRIDE_OPTIONS;\n \n   /* Tell the compiler which flavor of XFmode we're using.  */\n-  real_format_for_mode[XFmode - QFmode] = &ieee_extended_motorola_format;\n+  REAL_MODE_FORMAT (XFmode) = &ieee_extended_motorola_format;\n }\n \f\n /* Structure describing stack frame layout. */"}, {"sha": "9478ec1ad1e594fc5ac987b93a33d244d6dec44f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -4859,12 +4859,12 @@ override_options (void)\n       flag_delayed_branch = 0;\n     }\n \n-  real_format_for_mode[SFmode - QFmode] = &mips_single_format;\n-  real_format_for_mode[DFmode - QFmode] = &mips_double_format;\n+  REAL_MODE_FORMAT (SFmode) = &mips_single_format;\n+  REAL_MODE_FORMAT (DFmode) = &mips_double_format;\n #ifdef MIPS_TFMODE_FORMAT\n-  real_format_for_mode[TFmode - QFmode] = &MIPS_TFMODE_FORMAT;\n+  REAL_MODE_FORMAT (TFmode) = &MIPS_TFMODE_FORMAT;\n #else\n-  real_format_for_mode[TFmode - QFmode] = &mips_quad_format;\n+  REAL_MODE_FORMAT (TFmode) = &mips_quad_format;\n #endif\n \n   mips_print_operand_punct['?'] = 1;"}, {"sha": "4316b23cf3927122cfe62a42af1c9a51c8c8495a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -845,7 +845,7 @@ rs6000_override_options (const char *default_cpu)\n \n   if (TARGET_LONG_DOUBLE_128\n       && (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_DARWIN))\n-    real_format_for_mode[TFmode - QFmode] = &ibm_extended_format;\n+    REAL_MODE_FORMAT (TFmode) = &ibm_extended_format;\n \n   /* Allocate an alias set for register saves & restores from stack.  */\n   rs6000_sr_alias_set = new_alias_set ();"}, {"sha": "a4ec09191e638e8d0c5b60100fb53ba86c0bbd9e", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -86,9 +86,8 @@ override_options (void)\n {\n   /* We're VAX floating point, not IEEE floating point.  */\n   memset (real_format_for_mode, 0, sizeof real_format_for_mode);\n-  real_format_for_mode[SFmode - QFmode] = &vax_f_format;\n-  real_format_for_mode[DFmode - QFmode]\n-    = (TARGET_G_FLOAT ? &vax_g_format : &vax_d_format);\n+  REAL_MODE_FORMAT (SFmode) = &vax_f_format;\n+  REAL_MODE_FORMAT (DFmode) = (TARGET_G_FLOAT ? &vax_g_format : &vax_d_format);\n }\n \n /* Generate the assembly code for function entry.  FILE is a stdio"}, {"sha": "f05b999972ad89ca3be5a8926e30d9b50e418297", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -2582,7 +2582,7 @@ expand_unop (enum machine_mode mode, optab unoptab, rtx op0, rtx target,\n   if (unoptab->code == NEG && class == MODE_FLOAT\n       && GET_MODE_BITSIZE (mode) <= 2 * HOST_BITS_PER_WIDE_INT)\n     {\n-      const struct real_format *fmt = real_format_for_mode[mode - QFmode];\n+      const struct real_format *fmt = REAL_MODE_FORMAT (mode);\n       enum machine_mode imode = int_mode_for_mode (mode);\n       int bitpos = (fmt != 0) ? fmt->signbit : -1;\n \n@@ -2756,7 +2756,7 @@ expand_abs_nojump (enum machine_mode mode, rtx op0, rtx target,\n   if (GET_MODE_CLASS (mode) == MODE_FLOAT\n       && GET_MODE_BITSIZE (mode) <= 2 * HOST_BITS_PER_WIDE_INT)\n     {\n-      const struct real_format *fmt = real_format_for_mode[mode - QFmode];\n+      const struct real_format *fmt = REAL_MODE_FORMAT (mode);\n       enum machine_mode imode = int_mode_for_mode (mode);\n       int bitpos = (fmt != 0) ? fmt->signbit : -1;\n "}, {"sha": "f902ebda82473a08462721dde10ecdf5a1dda960", "filename": "gcc/real.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -2105,7 +2105,7 @@ real_nan (REAL_VALUE_TYPE *r, const char *str, int quiet,\n {\n   const struct real_format *fmt;\n \n-  fmt = real_format_for_mode[mode - QFmode];\n+  fmt = REAL_MODE_FORMAT (mode);\n   if (fmt == NULL)\n     abort ();\n \n@@ -2195,7 +2195,7 @@ real_maxval (REAL_VALUE_TYPE *r, int sign, enum machine_mode mode)\n   const struct real_format *fmt;\n   int np2;\n \n-  fmt = real_format_for_mode[mode - QFmode];\n+  fmt = REAL_MODE_FORMAT (mode);\n   if (fmt == NULL)\n     abort ();\n \n@@ -2368,7 +2368,7 @@ real_convert (REAL_VALUE_TYPE *r, enum machine_mode mode,\n {\n   const struct real_format *fmt;\n \n-  fmt = real_format_for_mode[mode - QFmode];\n+  fmt = REAL_MODE_FORMAT (mode);\n   if (fmt == NULL)\n     abort ();\n \n@@ -2430,7 +2430,7 @@ real_to_target (long *buf, const REAL_VALUE_TYPE *r, enum machine_mode mode)\n {\n   const struct real_format *fmt;\n \n-  fmt = real_format_for_mode[mode - QFmode];\n+  fmt = REAL_MODE_FORMAT (mode);\n   if (fmt == NULL)\n     abort ();\n \n@@ -2455,7 +2455,7 @@ real_from_target (REAL_VALUE_TYPE *r, const long *buf, enum machine_mode mode)\n {\n   const struct real_format *fmt;\n \n-  fmt = real_format_for_mode[mode - QFmode];\n+  fmt = REAL_MODE_FORMAT (mode);\n   if (fmt == NULL)\n     abort ();\n \n@@ -2470,7 +2470,7 @@ significand_size (enum machine_mode mode)\n {\n   const struct real_format *fmt;\n \n-  fmt = real_format_for_mode[mode - QFmode];\n+  fmt = REAL_MODE_FORMAT (mode);\n   if (fmt == NULL)\n     return 0;\n "}, {"sha": "e897098507c561ef57d12234afbcef3df8bb51ea", "filename": "gcc/real.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a01792d85cdeb0baefdccc840444735f8cd396/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=70a01792d85cdeb0baefdccc840444735f8cd396", "patch": "@@ -145,6 +145,7 @@ struct real_format\n    Indexed by MODE - QFmode.  */\n extern const struct real_format *real_format_for_mode[TFmode - QFmode + 1];\n \n+#define REAL_MODE_FORMAT(MODE) (real_format_for_mode[(MODE) - QFmode])\n \n /* Declare functions in real.c.  */\n "}]}