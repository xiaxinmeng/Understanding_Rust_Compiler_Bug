{"sha": "e26feb2c6033e706c1b56e33e38e530adb06aabe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI2ZmViMmM2MDMzZTcwNmMxYjU2ZTMzZTM4ZTUzMGFkYjA2YWFiZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2006-11-30T06:54:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-11-30T06:54:47Z"}, "message": "re PR target/29852 (x86_64: SSE version missing for fmod{d,s,x}f3)\n\n\tPR target/29852\n\t* config/i386/i386.md (*truncxfsf2_mixed, *truncxfdf2_mixed): Enable\n\tinsn patterns for TARGET_80387.\n\t(*truncxfsf2_i387, *truncxfdf2_i387): Remove.\n\t(*truncxfsf2_i387_1): Rename to *truncxfsf2_i387.\n\t(*truncxfdf2_i387_1): Rename to *truncxfdf2_i387.\n\t(fmod<mode>3, remainder<mode>3): Enable expaders for SSE math.\n\tGenerate truncxf<mode>2 insn patterns for strict SSE math.\n\nFrom-SVN: r119356", "tree": {"sha": "07004bd89debe373faf6e2d7e577f65d43f24a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07004bd89debe373faf6e2d7e577f65d43f24a58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e26feb2c6033e706c1b56e33e38e530adb06aabe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e26feb2c6033e706c1b56e33e38e530adb06aabe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e26feb2c6033e706c1b56e33e38e530adb06aabe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e26feb2c6033e706c1b56e33e38e530adb06aabe/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8002331ec5517e4aa946e561f43b578c8fad71b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8002331ec5517e4aa946e561f43b578c8fad71b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8002331ec5517e4aa946e561f43b578c8fad71b3"}], "stats": {"total": 81, "additions": 33, "deletions": 48}, "files": [{"sha": "035324e7aa03b9537ab958ac2f21757920f2a638", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26feb2c6033e706c1b56e33e38e530adb06aabe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26feb2c6033e706c1b56e33e38e530adb06aabe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e26feb2c6033e706c1b56e33e38e530adb06aabe", "patch": "@@ -1,3 +1,14 @@\n+2006-11-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/29852\n+\t* config/i386/i386.md (*truncxfsf2_mixed, *truncxfdf2_mixed): Enable\n+\tinsn patterns for TARGET_80387.\n+\t(*truncxfsf2_i387, *truncxfdf2_i387): Remove.\n+\t(*truncxfsf2_i387_1): Rename to *truncxfsf2_i387.\n+\t(*truncxfdf2_i387_1): Rename to *truncxfdf2_i387.\n+\t(fmod<mode>3, remainder<mode>3): Enable expaders for SSE math.\n+\tGenerate truncxf<mode>2 insn patterns for strict SSE math.\n+\n 2006-11-30  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (movsf_1): Enable pattern for standard"}, {"sha": "e6a3d7b973f6a3a8149040e91b348a1cb275e7ec", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 22, "deletions": 48, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26feb2c6033e706c1b56e33e38e530adb06aabe/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26feb2c6033e706c1b56e33e38e530adb06aabe/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e26feb2c6033e706c1b56e33e38e530adb06aabe", "patch": "@@ -3947,7 +3947,7 @@\n \t(float_truncate:SF\n \t (match_operand:XF 1 \"register_operand\" \"f,f,f,f\")))\n    (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,m,m\"))]\n-  \"TARGET_MIX_SSE_I387\"\n+  \"TARGET_80387\"\n {\n   gcc_assert (!which_alternative);\n   if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n@@ -3968,23 +3968,6 @@\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*truncxfsf2_i387\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f,?r\")\n-\t(float_truncate:SF\n-\t (match_operand:XF 1 \"register_operand\" \"f,f,f\")))\n-   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,m\"))]\n-  \"TARGET_80387\"\n-{\n-  gcc_assert (!which_alternative);\n-  if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-    return \"fstp%z0\\t%y0\";\n-   else\n-     return \"fst%z0\\t%y0\";\n-}\n-  [(set_attr \"type\" \"fmov,multi,multi\")\n-   (set_attr \"unit\" \"*,i387,i387\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"*truncxfsf2_i387_1\"\n   [(set (match_operand:SF 0 \"memory_operand\" \"=m\")\n \t(float_truncate:SF\n \t (match_operand:XF 1 \"register_operand\" \"f\")))]\n@@ -4043,7 +4026,7 @@\n \t(float_truncate:DF\n \t (match_operand:XF 1 \"register_operand\" \"f,f,f,f\")))\n    (clobber (match_operand:DF 2 \"memory_operand\" \"=X,m,m,m\"))]\n-  \"TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n+  \"TARGET_80387\"\n {\n   gcc_assert (!which_alternative);\n   if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n@@ -4064,23 +4047,6 @@\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*truncxfdf2_i387\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,?f,?r\")\n-\t(float_truncate:DF\n-\t (match_operand:XF 1 \"register_operand\" \"f,f,f\")))\n-   (clobber (match_operand:DF 2 \"memory_operand\" \"=X,m,m\"))]\n-  \"TARGET_80387\"\n-{\n-  gcc_assert (!which_alternative);\n-  if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-    return \"fstp%z0\\t%y0\";\n-  else\n-    return \"fst%z0\\t%y0\";\n-}\n-  [(set_attr \"type\" \"fmov,multi,multi\")\n-   (set_attr \"unit\" \"*,i387,i387\")\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_insn \"*truncxfdf2_i387_1\"\n   [(set (match_operand:DF 0 \"memory_operand\" \"=m\")\n \t(float_truncate:DF\n \t  (match_operand:XF 1 \"register_operand\" \"f\")))]\n@@ -15674,23 +15640,27 @@\n   [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n    (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))\n    (use (match_operand:X87MODEF12 2 \"general_operand\" \"\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n-       || TARGET_MIX_SSE_I387)\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx label = gen_label_rtx ();\n \n   rtx op1 = gen_reg_rtx (XFmode);\n   rtx op2 = gen_reg_rtx (XFmode);\n \n-  emit_insn(gen_extend<mode>xf2 (op1, operands[1]));\n-  emit_insn(gen_extend<mode>xf2 (op2, operands[2]));\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_extend<mode>xf2 (op2, operands[2]));\n \n   emit_label (label);\n   emit_insn (gen_fpremxf4_i387 (op1, op2, op1, op2));\n   ix86_emit_fp_unordered_jump (label);\n \n-  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op1));\n+  /* Truncate the result properly for strict SSE math.  */\n+  if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n+      && !TARGET_MIX_SSE_I387)\n+    emit_insn (gen_truncxf<mode>2 (operands[0], op1));\n+  else\n+    emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op1));\n+\n   DONE;\n })\n \n@@ -15731,24 +15701,28 @@\n   [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n    (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))\n    (use (match_operand:X87MODEF12 2 \"general_operand\" \"\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n-       || TARGET_MIX_SSE_I387)\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx label = gen_label_rtx ();\n \n   rtx op1 = gen_reg_rtx (XFmode);\n   rtx op2 = gen_reg_rtx (XFmode);\n \n-  emit_insn(gen_extend<mode>xf2 (op1, operands[1]));\n-  emit_insn(gen_extend<mode>xf2 (op2, operands[2]));\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_extend<mode>xf2 (op2, operands[2]));\n \n   emit_label (label);\n \n   emit_insn (gen_fprem1xf4_i387 (op1, op2, op1, op2));\n   ix86_emit_fp_unordered_jump (label);\n \n-  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op1));\n+  /* Truncate the result properly for strict SSE math.  */\n+  if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n+      && !TARGET_MIX_SSE_I387)\n+    emit_insn (gen_truncxf<mode>2 (operands[0], op1));\n+  else\n+    emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op1));\n+\n   DONE;\n })\n "}]}