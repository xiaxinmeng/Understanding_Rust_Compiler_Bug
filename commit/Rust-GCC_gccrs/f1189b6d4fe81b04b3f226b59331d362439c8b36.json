{"sha": "f1189b6d4fe81b04b3f226b59331d362439c8b36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjExODliNmQ0ZmU4MWIwNGIzZjIyNmI1OTMzMWQzNjI0MzljOGIzNg==", "commit": {"author": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-01-25T06:43:48Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-01-25T06:43:48Z"}, "message": "Add changelogs of patches that will not be merged to trunk.\n\nFrom-SVN: r169193", "tree": {"sha": "950da2c0be3a6416436654712f4b7a09e0194c8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/950da2c0be3a6416436654712f4b7a09e0194c8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1189b6d4fe81b04b3f226b59331d362439c8b36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1189b6d4fe81b04b3f226b59331d362439c8b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1189b6d4fe81b04b3f226b59331d362439c8b36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1189b6d4fe81b04b3f226b59331d362439c8b36/comments", "author": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0544ed0caad36b3ec9df997932375e49eb63a4d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0544ed0caad36b3ec9df997932375e49eb63a4d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0544ed0caad36b3ec9df997932375e49eb63a4d2"}], "stats": {"total": 126, "additions": 126, "deletions": 0}, "files": [{"sha": "3d99630fb8c46c48a5495a64380e4a2a6dc1ae74", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1189b6d4fe81b04b3f226b59331d362439c8b36/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1189b6d4fe81b04b3f226b59331d362439c8b36/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=f1189b6d4fe81b04b3f226b59331d362439c8b36", "patch": "@@ -1,3 +1,129 @@\n+2010-12-29  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* Makefile.in (graphite-opencl-codegen.o): Update dependences.\n+\t(graphite-opencl-meta-clast.o): Same.\n+\t(graphite-opencl.o): Same.\n+\t(refined-regions.o): Same.\n+\t* graphite-opencl-codegen.c: Do not include unnecessary .h files.\n+\t* graphite-opencl-meta-clast.c: Same.\n+\t* graphite-opencl.c: Same.\n+\t* refined-regions.c: Same.\n+\n+2010-12-27  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-opencl-codegen.c: Use FOR_EACH_VEC_ELT.\n+\t* graphite-opencl-meta-clast.c: Same.\n+\t* graphite-opencl.c: Same.\n+\n+2010-12-27  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-opencl-codegen.c: Do not include sys/time.h.\n+\t* graphite-opencl.c: Same.\n+\n+2010-12-27  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-opencl.c (h_context, h_cmd_queue, h_program): Moved\n+\tout of ifdef HAVE_cloog section.\n+\n+2010-12-27  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* Makefile.in (graphite-opencl.o): Depends on\n+\tgraphite-opencl-functions.def.\n+\t* graphite-opencl-functions.def: New.\n+\t* graphite-opencl.c (enum OPENCL_FUNCTIONS): Read data from\n+\tgraphite-opencl-functions.def.\n+\t(opencl_function_names): Same.\n+\t(opencl_create_function_decl): Use the enum OPENCL_FUNCTIONS\n+\tas indices of opencl_function_names.\n+\n+2010-12-27  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-opencl-codegen.c: Fix formatting.\n+\t* graphite-opencl-meta-clast.c: Same.\n+\t* graphite-opencl.c: Same.\n+\n+2010-12-27  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-opencl-codegen.c: Fix formating problems.\n+\t* graphite-opencl-meta-clast.c: Same.\n+\t* graphite-opencl.c: Same.\n+\t* graphite-opencl.h: Same.\n+\n+2010-12-27  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-opencl-codegen.c: Sort topologically static functions.\n+\t* graphite-opencl.c: Same.\n+\n+2010-12-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-cloog-compat.h (cloog_names_nb_scattering): New.\n+\t(cloog_names_scattering): New.\n+\t* graphite-opencl-codegen.c (opencl_constant_expression_p): Use\n+\tclast_expr_* instead of expr_*.  Call clast_name_to_str.\n+\t(opencl_clast_name_to_tree): Now takes a clast_name_p in parameter.\n+\t(opencl_get_scat_real_name): Same.  Call clast_name_to_str.\n+\t(opencl_add_scat_as_arg): Same.\n+\t(opencl_print_local_vars): Call cloog_names_scattering and\n+\tcloog_names_nb_scattering.\n+\t(opencl_print_for): Do not call value_*.\n+\t(opencl_print_term): Same.\n+\t(opencl_print_expr): Use clast_expr_* instead of expr_*.\n+\t(opencl_print_sum): Same.\n+\t(opencl_print_binary): Same.\n+\n+2010-12-25  Alexey Kravets  <kayrick@ispras.ru>\n+\n+\t* Makefile.in (OBJS-common): Add graphite-opencl-codegen.o,\n+\tgraphite-opencl-meta-clast.o and graphite-opencl.o.\n+\t(graphite-opencl-codegen.o): New.\n+\t(graphite-opencl-meta-clast.o): New.\n+\t(graphite-opencl.o): New.\n+\t(GTFILES): Add graphite-opencl.c.\n+\t* common.opt (fgraphite-opencl): New.\n+\t(fgraphite-opencl-cpu): New.\n+\t(fgraphite-opencl-ignore-depth-heuristic): New.\n+\t(fgraphite-opencl-ignore-mem-heuristic): New.\n+\t(fgraphite-opencl-ignore-dep): New.\n+\t(fgraphite-opencl-ignore-types): New.\n+\t(fgraphite-opencl-depth-base): New.\n+\t(fgraphite-opencl-debug): New.\n+\t* graphite-opencl-codegen.c: New file.\n+\t* graphite-opencl-meta-clast.c: New file.\n+\t* graphite-opencl.c: New file.\n+\t* graphite-opencl.h: New file.\n+\t* graphite.c (graphite_transform_loops): Call graphite_opencl_init and\n+\tgraphite_opencl_finalize.\n+\t* tree-ssa-loop.c (gate_graphite_transforms): Handle\n+\tflag_graphite_opencl.\n+\t* graphite-clast-to-gimple.c (gloog): Call opencl_transform_clast.\n+\t* dbgcnt.def (opencl_scop_cnt): New counter.\n+\n+2010-12-25  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* graphite-dependences.c (graphite_outer_subscript_bound): New.\n+\t(graphite_carried_dependence_level_k): Export.\n+\t* graphite-dependences.h (graphite_outer_subscript_bound): Declare.\n+\t(graphite_carried_dependence_level_k): Ditto.\n+\n+2010-12-25  Alexey Kravets  <kayrick@ispras.ru>\n+\n+\t* graphite-clast-to-gimple.c (struct clast_name_index): Move\n+\tdefinition to graphite-clast-to-gimple.h.\n+\t(clast_name_to_index): Ditto.\n+\t(clast_name_index_elt_info): Ditto.\n+\t(eq_clast_name_indexes): Ditto.\n+\t(save_clast_name_index): Export.\n+\t(clast_name_to_gcc): Ditto.\n+\t(clast_to_gcc_expression): Ditto.\n+\t(gcc_type_for_clast_expr): Ditto.\n+\t(graphite_create_new_guard): Ditto.\n+\t(gcc_type_for_iv_of_clast_loop): Ditto.\n+\t(graphite_create_new_loop): Ditto.\n+\t(build_iv_mapping): Ditto.\n+\t(graphite_create_new_loop_guard): Ditto.\n+\t(debug_clast_name_index): New.\n+\t(debug_clast_name_indices): New debug function.\n+\n 2010-12-21  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR tree-optimization/47021"}]}