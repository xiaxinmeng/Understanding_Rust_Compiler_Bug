{"sha": "8fb3ae15370ca9d3dfde796e7fc2931851c09eb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZiM2FlMTUzNzBjYTlkM2RmZGU3OTZlN2ZjMjkzMTg1MWMwOWViOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-02-11T00:46:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-11T00:46:41Z"}, "message": "Makefile.in (dwarf2out.o, [...]): Depend on insn-codes.h, it gets included indirectly via expr.h.\n\n        * Makefile.in (dwarf2out.o, emit-rtl.o, jump.o, cse.o, unroll.o,\n        reorg.o, regmove.o): Depend on insn-codes.h, it gets included\n        indirectly via expr.h.\n\nFrom-SVN: r17849", "tree": {"sha": "3ecba93ba040857e23b269306762cea673bbf2f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ecba93ba040857e23b269306762cea673bbf2f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fb3ae15370ca9d3dfde796e7fc2931851c09eb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fb3ae15370ca9d3dfde796e7fc2931851c09eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fb3ae15370ca9d3dfde796e7fc2931851c09eb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fb3ae15370ca9d3dfde796e7fc2931851c09eb8/comments", "author": null, "committer": null, "parents": [{"sha": "7bd52f251fe46fcef6e3390b6d6a462ff5664f0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd52f251fe46fcef6e3390b6d6a462ff5664f0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd52f251fe46fcef6e3390b6d6a462ff5664f0a"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "cec857fa2a0737e5b85138ca3740412d86ee88cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb3ae15370ca9d3dfde796e7fc2931851c09eb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb3ae15370ca9d3dfde796e7fc2931851c09eb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fb3ae15370ca9d3dfde796e7fc2931851c09eb8", "patch": "@@ -1,3 +1,9 @@\n+Wed Feb 11 01:47:54 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (dwarf2out.o, emit-rtl.o, jump.o, cse.o, unroll.o,\n+\treorg.o, regmove.o): Depend on insn-codes.h, it gets included\n+\tindirectly via expr.h.\n+\n Wed Feb 11 01:44:13 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* stor-layout.c (layout_type): Do upper - lower in the native type,"}, {"sha": "a15292b3de7e5cbf7ec07c5ec422421fc3c52e57", "filename": "gcc/Makefile.in", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb3ae15370ca9d3dfde796e7fc2931851c09eb8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb3ae15370ca9d3dfde796e7fc2931851c09eb8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8fb3ae15370ca9d3dfde796e7fc2931851c09eb8", "patch": "@@ -1357,10 +1357,12 @@ sdbout.o : sdbout.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h except.h \\\n dwarfout.o : dwarfout.c $(CONFIG_H) $(TREE_H) $(RTL_H) dwarf.h flags.h \\\n    insn-config.h reload.h output.h defaults.h\n dwarf2out.o : dwarf2out.c $(CONFIG_H) $(TREE_H) $(RTL_H) dwarf2.h flags.h \\\n-   insn-config.h reload.h output.h defaults.h hard-reg-set.h regs.h expr.h\n+   insn-config.h insn-codes.h reload.h output.h defaults.h hard-reg-set.h \\\n+   regs.h expr.h\n xcoffout.o : xcoffout.c $(CONFIG_H) $(TREE_H) $(RTL_H) xcoffout.h flags.h\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h except.h \\\n-   function.h regs.h insn-config.h $(RECOG_H) real.h expr.h obstack.h\n+   function.h regs.h insn-config.h insn-codes.h $(RECOG_H) real.h expr.h \\\n+   obstack.h\n real.o : real.c $(CONFIG_H) $(TREE_H)\n getpwd.o : getpwd.c $(CONFIG_H)\n \n@@ -1369,17 +1371,17 @@ integrate.o : integrate.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h integrate.h \\\n    output.h $(RECOG_H) except.h\n \n jump.o : jump.c $(CONFIG_H) $(RTL_H) flags.h hard-reg-set.h regs.h \\\n-   insn-config.h insn-flags.h $(RECOG_H) expr.h real.h except.h\n+   insn-config.h insn-codes.h insn-flags.h $(RECOG_H) expr.h real.h except.h\n stupid.o : stupid.c $(CONFIG_H) $(RTL_H) regs.h hard-reg-set.h flags.h\n \n cse.o : cse.c $(CONFIG_H) $(RTL_H) regs.h hard-reg-set.h flags.h real.h \\\n-   insn-config.h $(RECOG_H) expr.h\n+   insn-config.h insn-codes.h $(RECOG_H) expr.h\n profile.o : profile.c $(CONFIG_H) $(RTL_H) flags.h insn-flags.h gcov-io.h \\\n    $(TREE_H) output.h regs.h\n loop.o : loop.c $(CONFIG_H) $(RTL_H) flags.h loop.h insn-config.h \\\n    insn-flags.h insn-codes.h regs.h hard-reg-set.h $(RECOG_H) expr.h real.h\n-unroll.o : unroll.c $(CONFIG_H) $(RTL_H) insn-config.h integrate.h regs.h \\\n-   $(RECOG_H) flags.h expr.h loop.h\n+unroll.o : unroll.c $(CONFIG_H) $(RTL_H) insn-config.h insn-codes.h \\\n+   integrate.h regs.h $(RECOG_H) flags.h expr.h loop.h\n flow.o : flow.c $(CONFIG_H) $(RTL_H) flags.h insn-config.h \\\n    $(BASIC_BLOCK_H) regs.h hard-reg-set.h output.h\n combine.o : combine.c $(CONFIG_H) $(RTL_H) flags.h  \\\n@@ -1402,12 +1404,12 @@ caller-save.o : caller-save.c $(CONFIG_H) $(RTL_H) flags.h \\\n    regs.h hard-reg-set.h insn-codes.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) \\\n    reload.h expr.h\n reorg.o : reorg.c $(CONFIG_H) $(RTL_H) conditions.h hard-reg-set.h \\\n-   $(BASIC_BLOCK_H) regs.h insn-config.h insn-attr.h insn-flags.h $(RECOG_H) \\\n-   flags.h output.h expr.h\n+   $(BASIC_BLOCK_H) regs.h insn-config.h insn-codes.h insn-attr.h \\\n+   insn-flags.h $(RECOG_H) flags.h output.h expr.h\n alias.o : alias.c $(CONFIG_H) $(RTL_H) flags.h hard-reg-set.h regs.h \\\n    insn-codes.h\n-regmove.o : regmove.c $(CONFIG_H) $(RTL_H) insn-config.h recog.h output.h \\\n-  reload.h regs.h hard-reg-set.h flags.h expr.h insn-flags.h\n+regmove.o : regmove.c $(CONFIG_H) $(RTL_H) insn-config.h insn-codes.h \\\n+   recog.h output.h reload.h regs.h hard-reg-set.h flags.h expr.h insn-flags.h\n $(SCHED_PREFIX)sched.o : $(SCHED_PREFIX)sched.c $(CONFIG_H) $(RTL_H) $(BASIC_BLOCK_H) regs.h hard-reg-set.h \\\n    flags.h insn-config.h insn-attr.h\n final.o : final.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h regs.h \\"}]}