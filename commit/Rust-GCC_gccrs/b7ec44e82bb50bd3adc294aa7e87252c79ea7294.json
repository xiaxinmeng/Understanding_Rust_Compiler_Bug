{"sha": "b7ec44e82bb50bd3adc294aa7e87252c79ea7294", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdlYzQ0ZTgyYmI1MGJkM2FkYzI5NGFhN2U4NzI1MmM3OWVhNzI5NA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-01-15T23:21:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-01-15T23:21:24Z"}, "message": "runtime: add padding to FFI type of struct ending with zero-sized field\n    \n    CL 157557 changes the compiler to add one byte padding to\n    non-empty struct ending with a zero-sized field. Add the same\n    padding to the FFI type, so reflect.Call works.\n    \n    This fixes test/fixedbugs/issue26335.go in the main repo.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/158018\n\nFrom-SVN: r267956", "tree": {"sha": "05ae442ca2773c5cbe254e50ce99ba0604f24614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05ae442ca2773c5cbe254e50ce99ba0604f24614"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7ec44e82bb50bd3adc294aa7e87252c79ea7294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7ec44e82bb50bd3adc294aa7e87252c79ea7294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7ec44e82bb50bd3adc294aa7e87252c79ea7294", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7ec44e82bb50bd3adc294aa7e87252c79ea7294/comments", "author": null, "committer": null, "parents": [{"sha": "5e95646e734c1c64ea4e1a761b414581534e1d8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e95646e734c1c64ea4e1a761b414581534e1d8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e95646e734c1c64ea4e1a761b414581534e1d8c"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "b13915110b9685135adfcf2d0601e82c4946b05f", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ec44e82bb50bd3adc294aa7e87252c79ea7294/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ec44e82bb50bd3adc294aa7e87252c79ea7294/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=b7ec44e82bb50bd3adc294aa7e87252c79ea7294", "patch": "@@ -1,4 +1,4 @@\n-87005025fcd0d7e7908b3aae7062b52cb80eb0f3\n+9a79c333e896ea49f6a708d459148074d29a2af6\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "e8088ec394723de24bdb8d9bf0c63b495e22297a", "filename": "libgo/go/runtime/ffi.go", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ec44e82bb50bd3adc294aa7e87252c79ea7294/libgo%2Fgo%2Fruntime%2Fffi.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ec44e82bb50bd3adc294aa7e87252c79ea7294/libgo%2Fgo%2Fruntime%2Fffi.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fffi.go?ref=b7ec44e82bb50bd3adc294aa7e87252c79ea7294", "patch": "@@ -227,6 +227,7 @@ func structToFFI(typ *structtype) *__ffi_type {\n \n \tfields := make([]*__ffi_type, 0, c+1)\n \tcheckPad := false\n+\tlastzero := false\n \tfor i, v := range typ.fields {\n \t\t// Skip zero-sized fields; they confuse libffi,\n \t\t// and there is no value to pass in any case.\n@@ -235,8 +236,10 @@ func structToFFI(typ *structtype) *__ffi_type {\n \t\t// next field.\n \t\tif v.typ.size == 0 {\n \t\t\tcheckPad = true\n+\t\t\tlastzero = true\n \t\t\tcontinue\n \t\t}\n+\t\tlastzero = false\n \n \t\tif checkPad {\n \t\t\toff := uintptr(0)\n@@ -257,6 +260,13 @@ func structToFFI(typ *structtype) *__ffi_type {\n \t\tfields = append(fields, typeToFFI(v.typ))\n \t}\n \n+\tif lastzero {\n+\t\t// The compiler adds one byte padding to non-empty struct ending\n+\t\t// with a zero-sized field (types.cc:get_backend_struct_fields).\n+\t\t// Add this padding to the FFI type.\n+\t\tfields = append(fields, ffi_type_uint8())\n+\t}\n+\n \tfields = append(fields, nil)\n \n \treturn &__ffi_type{"}]}