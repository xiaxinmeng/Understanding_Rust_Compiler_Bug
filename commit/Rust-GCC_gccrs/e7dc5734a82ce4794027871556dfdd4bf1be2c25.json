{"sha": "e7dc5734a82ce4794027871556dfdd4bf1be2c25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdkYzU3MzRhODJjZTQ3OTQwMjc4NzE1NTZkZmRkNGJmMWJlMmMyNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-02-27T08:13:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-02-27T08:13:28Z"}, "message": "re PR c++/47904 (ICE with DECL_PARM_INDEX (this) in cp_tree_equal)\n\n\tPR c++/47904\n\t* tree.c (cp_tree_equal): Compare DECL_PARM_LEVEL.\n\t* pt.c (iterative_hash_template_arg): And hash it.\n\nFrom-SVN: r170533", "tree": {"sha": "6bed5ed34eaae4d954a3959ec8c4f1d711e46720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bed5ed34eaae4d954a3959ec8c4f1d711e46720"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7dc5734a82ce4794027871556dfdd4bf1be2c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7dc5734a82ce4794027871556dfdd4bf1be2c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7dc5734a82ce4794027871556dfdd4bf1be2c25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7dc5734a82ce4794027871556dfdd4bf1be2c25/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "acfd3fffee80262c74de0e4480b983d7bf7fbd8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acfd3fffee80262c74de0e4480b983d7bf7fbd8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acfd3fffee80262c74de0e4480b983d7bf7fbd8e"}], "stats": {"total": 53, "additions": 46, "deletions": 7}, "files": [{"sha": "50e4b48d5ea36262a9af8840014651ebbf3c8c5c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e7dc5734a82ce4794027871556dfdd4bf1be2c25", "patch": "@@ -1,5 +1,9 @@\n 2011-02-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/47904\n+\t* tree.c (cp_tree_equal): Compare DECL_PARM_LEVEL.\n+\t* pt.c (iterative_hash_template_arg): And hash it.\n+\n \tPR c++/47897\n \t* semantics.c (non_const_var_error): Split out from...\n \t(cxx_eval_constant_expression): ...here."}, {"sha": "4b262d00016d78c54a472cac32567b20a37d0295", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e7dc5734a82ce4794027871556dfdd4bf1be2c25", "patch": "@@ -1533,7 +1533,10 @@ iterative_hash_template_arg (tree arg, hashval_t val)\n \n     case PARM_DECL:\n       if (!DECL_ARTIFICIAL (arg))\n-\tval = iterative_hash_object (DECL_PARM_INDEX (arg), val);\n+\t{\n+\t  val = iterative_hash_object (DECL_PARM_INDEX (arg), val);\n+\t  val = iterative_hash_object (DECL_PARM_LEVEL (arg), val);\n+\t}\n       return iterative_hash_template_arg (TREE_TYPE (arg), val);\n \n     case TARGET_EXPR:"}, {"sha": "ed4f67bbb0f08353fef56e807c4d607b35b3fb27", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=e7dc5734a82ce4794027871556dfdd4bf1be2c25", "patch": "@@ -2154,12 +2154,19 @@ cp_tree_equal (tree t1, tree t2)\n \n     case PARM_DECL:\n       /* For comparing uses of parameters in late-specified return types\n-\t with an out-of-class definition of the function.  */\n-      if (same_type_p (TREE_TYPE (t1), TREE_TYPE (t2))\n-\t  && DECL_PARM_INDEX (t1) == DECL_PARM_INDEX (t2))\n-\treturn true;\n-      else\n-\treturn false;\n+\t with an out-of-class definition of the function, but can also come\n+\t up for expressions that involve 'this' in a member function\n+\t template.  */\n+      if (same_type_p (TREE_TYPE (t1), TREE_TYPE (t2)))\n+\t{\n+\t  if (DECL_ARTIFICIAL (t1) ^ DECL_ARTIFICIAL (t2))\n+\t    return false;\n+\t  if (DECL_ARTIFICIAL (t1)\n+\t      || (DECL_PARM_LEVEL (t1) == DECL_PARM_LEVEL (t2)\n+\t\t  && DECL_PARM_INDEX (t1) == DECL_PARM_INDEX (t2)))\n+\t    return true;\n+\t}\n+      return false;\n \n     case VAR_DECL:\n     case CONST_DECL:"}, {"sha": "8c5a37982c91ce6aea41f97f8e8d47798f415182", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7dc5734a82ce4794027871556dfdd4bf1be2c25", "patch": "@@ -1,5 +1,7 @@\n 2011-02-26  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/template/this-targ1.C: New.\n+\n \t* g++.dg/cpp0x/regress/template-const1.C: New.\n \t* g++.dg/cpp0x/regress/template-function1.C: Adjust.\n \t* g++.dg/template/function1.C: Adjust."}, {"sha": "6864be5abbc30a87cad11bad86fd1dbfe023f917", "filename": "gcc/testsuite/g++.dg/template/this-targ1.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fthis-targ1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dc5734a82ce4794027871556dfdd4bf1be2c25/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fthis-targ1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fthis-targ1.C?ref=e7dc5734a82ce4794027871556dfdd4bf1be2c25", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/47904\n+\n+template <bool>\n+struct S\n+{\n+};\n+\n+template <class T>\n+class U\n+{\n+  T t;\n+  int foo () const\n+  {\n+    S <sizeof (t) == 1> s;\n+    return 1;\n+  }\n+  int bar () const\n+  {\n+    S <sizeof (t) == 1> s;\n+    return 1;\n+  }\n+};\n+"}]}