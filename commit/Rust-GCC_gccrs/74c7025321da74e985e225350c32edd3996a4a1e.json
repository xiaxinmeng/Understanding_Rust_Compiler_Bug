{"sha": "74c7025321da74e985e225350c32edd3996a4a1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRjNzAyNTMyMWRhNzRlOTg1ZTIyNTM1MGMzMmVkZDM5OTZhNGExZQ==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim@codesourcery.com", "date": "2010-05-27T11:54:48Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2010-05-27T11:54:48Z"}, "message": "Add support for Bionic C library\n\n\tAdd support for Bionic C library\n\tgcc/\n\t* config.gcc (LIBC_GLIBC, LIBC_BIONIC, LIBC_UCLIBC): New tm_define\n\tmacro.\n\t(DEFAULT_LIBC): New tm_define macro set to one of LIBC_*.\n\t(bfin*-uclinux, moxie-*-uclinux*, m68k-*-uclinux*): Update.\n\n\t* config/linux.h (OPTION_GLIBC, OPTION_UCLIBC, OPTION_BIONIC): Define.\n\t(LINUX_TARGET_OS_CPP_BUILTINS): Define __gnu_linux__ only for GLIBC.\n\t(CHOOSE_DYNAMIC_LINKER1, CHOOSE_DYNAMIC_LINKER): Make it easier\n\tto support multiple C libraries.  Handle Bionic.\n\t(BIONIC_DYNAMIC_LINKER, BIONIC_DYNAMIC_LINKER32,)\n\t(BIONIC_DYNAMIC_LINKER64): Define.\n\t(LINUX_DYNAMIC_LINKER, LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64):\n\tUpdate.\n\t(TARGET_HAS_SINCOS): Enable for Bionic.\n\n\t* config/linux.opt: Rewrite to handle more than 2 C libraries.  Make\n\tthe last option specified on command line take effect.\n\t(linux_uclibc): Rename to linux_libc, initialize using DEFAULT_LIBC.\n\t(mbionic): New.\n\t(mglibc, muclibc): Update.\n\n\t* config/alpha/linux-elf.h, config/rs6000/linux64.h,\n\t* config/rs6000/sysv4.h (CHOOSE_DYNAMIC_LINKER): Update to use\n\tDEFAULT_LIBC.\n\n\t* doc/invoke.texi (-mglibc, -muclibc): Update.\n\t(-mbionic): Document.\n\n\tgcc/testsuite/\n\t* gcc.dg/glibc-uclibc-1.c, gcc.dg/glibc-uclibc-2.c: Remove, no longer\n\tnecessary.\n\nFrom-SVN: r159917", "tree": {"sha": "f583a304408b8d7b266afd0bba3b9cd4657fcb85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f583a304408b8d7b266afd0bba3b9cd4657fcb85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74c7025321da74e985e225350c32edd3996a4a1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c7025321da74e985e225350c32edd3996a4a1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74c7025321da74e985e225350c32edd3996a4a1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c7025321da74e985e225350c32edd3996a4a1e/comments", "author": null, "committer": null, "parents": [{"sha": "3ef0694cb173c80c3466885de23fa937c8903653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef0694cb173c80c3466885de23fa937c8903653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ef0694cb173c80c3466885de23fa937c8903653"}], "stats": {"total": 176, "additions": 123, "deletions": 53}, "files": [{"sha": "4c4163e7e30e322952fec7b6f6009a5f750d78c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74c7025321da74e985e225350c32edd3996a4a1e", "patch": "@@ -1,3 +1,35 @@\n+2010-05-27  Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\tAdd support for Bionic C library\n+\n+\t* config.gcc (LIBC_GLIBC, LIBC_BIONIC, LIBC_UCLIBC): New tm_define\n+\tmacro.\n+\t(DEFAULT_LIBC): New tm_define macro set to one of LIBC_*.\n+\t(bfin*-uclinux, moxie-*-uclinux*, m68k-*-uclinux*): Update.\n+\n+\t* config/linux.h (OPTION_GLIBC, OPTION_UCLIBC, OPTION_BIONIC): Define.\n+\t(LINUX_TARGET_OS_CPP_BUILTINS): Define __gnu_linux__ only for GLIBC.\n+\t(CHOOSE_DYNAMIC_LINKER1, CHOOSE_DYNAMIC_LINKER): Make it easier\n+\tto support multiple C libraries.  Handle Bionic.\n+\t(BIONIC_DYNAMIC_LINKER, BIONIC_DYNAMIC_LINKER32,)\n+\t(BIONIC_DYNAMIC_LINKER64): Define.\n+\t(LINUX_DYNAMIC_LINKER, LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64):\n+\tUpdate.\n+\t(TARGET_HAS_SINCOS): Enable for Bionic.\n+\n+\t* config/linux.opt: Rewrite to handle more than 2 C libraries.  Make\n+\tthe last option specified on command line take effect.\n+\t(linux_uclibc): Rename to linux_libc, initialize using DEFAULT_LIBC.\n+\t(mbionic): New.\n+\t(mglibc, muclibc): Update.\n+\n+\t* config/alpha/linux-elf.h, config/rs6000/linux64.h,\n+\t* config/rs6000/sysv4.h (CHOOSE_DYNAMIC_LINKER): Update to use\n+\tDEFAULT_LIBC.\n+\n+\t* doc/invoke.texi (-mglibc, -muclibc): Update.\n+\t(-mbionic): Document.\n+\n 2010-05-27  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* c-common.h (c_register_addr_space): Add prototype."}, {"sha": "d3fcaca39cace4fb308ab79bc61b096524416e5b", "filename": "gcc/config.gcc", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=74c7025321da74e985e225350c32edd3996a4a1e", "patch": "@@ -508,23 +508,29 @@ case ${target} in\n     *-*-gnu*)\n       tmake_file=\"$tmake_file t-gnu\";;\n   esac\n-  # glibc / uclibc switch.  uclibc isn't usable for GNU/Hurd and neither for\n-  # GNU/k*BSD.\n+  # Common C libraries.\n+  tm_defines=\"$tm_defines LIBC_GLIBC=1 LIBC_UCLIBC=2 LIBC_BIONIC=3\"\n+  # glibc / uclibc / bionic switch.\n+  # uclibc and bionic aren't usable for GNU/Hurd and neither for GNU/k*BSD.\n   case $target in\n     *linux*)\n       extra_options=\"$extra_options linux.opt\";;\n     *)\n       tm_defines=\"$tm_defines OPTION_GLIBC=1\";;\n   esac\n-  case ${target} in\n+  case $target in\n+    *-*-*android*)\n+      tm_defines=\"$tm_defines DEFAULT_LIBC=LIBC_BIONIC\"\n+      ;;\n     *-*-*uclibc*)\n-      tm_defines=\"${tm_defines} UCLIBC_DEFAULT=1\"\n+      tm_defines=\"$tm_defines DEFAULT_LIBC=LIBC_UCLIBC\"\n       ;;\n     *)\n-      tm_defines=\"${tm_defines} UCLIBC_DEFAULT=0\"\n+      tm_defines=\"$tm_defines DEFAULT_LIBC=LIBC_GLIBC\"\n       ;;\n   esac\n-  # Assume that glibc or uClibc are being used and so __cxa_atexit is provided.\n+  # Assume that glibc or uClibc or Bionic are being used and so __cxa_atexit\n+  # is provided.\n   default_use_cxa_atexit=yes\n   use_gcc_tgmath=no\n   use_gcc_stdint=wrap\n@@ -826,7 +832,7 @@ bfin*-elf*)\n bfin*-uclinux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h linux.h glibc-stdint.h bfin/uclinux.h\"\n \ttmake_file=bfin/t-bfin-uclinux\n-\ttm_defines=\"${tm_defines} UCLIBC_DEFAULT=1\"\n+\ttm_defines=\"${tm_defines} DEFAULT_LIBC=LIBC_UCLIBC\"\n \textra_options=\"${extra_options} linux.opt\"\n \tuse_collect2=no\n \t;;\n@@ -907,7 +913,7 @@ moxie-*-uclinux*)\n \ttm_file=\"dbxelf.h elfos.h svr4.h ${tm_file} linux.h glibc-stdint.h moxie/uclinux.h\"\n \textra_parts=\"crti.o crtn.o crtbegin.o crtend.o\"\n \ttmake_file=\"${tmake_file} moxie/t-moxie moxie/t-moxie-softfp soft-fp/t-softfp\"\n-\ttm_defines=\"${tm_defines} UCLIBC_DEFAULT=1\"\n+\ttm_defines=\"${tm_defines} DEFAULT_LIBC=LIBC_UCLIBC\"\n \textra_options=\"${extra_options} linux.opt\"\n \t;;\n h8300-*-rtems*)\n@@ -1632,7 +1638,7 @@ m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux\n \tdefault_m68k_cpu=68020\n \tdefault_cf_cpu=5206\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h linux.h glibc-stdint.h flat.h m68k/linux.h m68k/uclinux.h ./sysroot-suffix.h\"\n- \ttm_defines=\"${tm_defines} MOTOROLA=1 UCLIBC_DEFAULT=1\"\n+ \ttm_defines=\"${tm_defines} MOTOROLA=1 DEFAULT_LIBC=LIBC_UCLIBC\"\n \textra_options=\"${extra_options} linux.opt\"\n \ttmake_file=\"m68k/t-floatlib m68k/t-uclinux m68k/t-mlibs\"\n \t;;"}, {"sha": "262404b233bd3ffb7b0591c3b060246699a64795", "filename": "gcc/config/alpha/linux-elf.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux-elf.h?ref=74c7025321da74e985e225350c32edd3996a4a1e", "patch": "@@ -29,10 +29,12 @@ along with GCC; see the file COPYING3.  If not see\n \n #define GLIBC_DYNAMIC_LINKER\t\"/lib/ld-linux.so.2\"\n #define UCLIBC_DYNAMIC_LINKER \"/lib/ld-uClibc.so.0\"\n-#if UCLIBC_DEFAULT\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n+#if DEFAULT_LIBC == LIBC_UCLIBC\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:\" G \";:\" U \"}\"\n+#elif DEFAULT_LIBC == LIBC_GLIBC\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:\" U \";:\" G \"}\"\n #else\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n+#error \"Unsupported DEFAULT_LIBC\"\n #endif\n #define LINUX_DYNAMIC_LINKER \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER)"}, {"sha": "f86cc7bbaea2cc16e8bebc5bbb1275a08ca24653", "filename": "gcc/config/linux.h", "status": "modified", "additions": 39, "deletions": 15, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=74c7025321da74e985e225350c32edd3996a4a1e", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for Linux-based GNU systems with ELF format\n    Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004, 2005, 2006,\n-   2007, 2009 Free Software Foundation, Inc.\n+   2007, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu (hjl@lucon.org).\n \n@@ -78,9 +78,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    %{shared:-lc} \\\n    %{!shared:%{mieee-fp:-lieee} %{profile:-lc_p}%{!profile:-lc}}\"\n \n+/* C libraries supported on Linux.  */\n+#define OPTION_GLIBC  (linux_libc == LIBC_GLIBC)\n+#define OPTION_UCLIBC (linux_libc == LIBC_UCLIBC)\n+#define OPTION_BIONIC (linux_libc == LIBC_BIONIC)\n+\n #define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__gnu_linux__\");\t\t\t\\\n+\tif (OPTION_GLIBC)\t\t\t\t\t\\\n+\t  builtin_define (\"__gnu_linux__\");\t\t\t\\\n \tbuiltin_define_std (\"linux\");\t\t\t\t\\\n \tbuiltin_define_std (\"unix\");\t\t\t\t\\\n \tbuiltin_assert (\"system=linux\");\t\t\t\\\n@@ -105,13 +111,24 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #endif\n \n /* Determine which dynamic linker to use depending on whether GLIBC or\n-   uClibc is the default C library and whether -muclibc or -mglibc has\n-   been passed to change the default.  */\n-#if UCLIBC_DEFAULT\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n+   uClibc or Bionic is the default C library and whether\n+   -muclibc or -mglibc or -mbionic has been passed to change the default.  */\n+\n+#define CHOOSE_DYNAMIC_LINKER1(LIBC1, LIBC2, LIBC3, LD1, LD2, LD3)\t\\\n+  \"%{\" LIBC2 \":\" LD2 \";:%{\" LIBC3 \":\" LD3 \";:\" LD1 \"}}\"\n+\n+#if DEFAULT_LIBC == LIBC_GLIBC\n+#define CHOOSE_DYNAMIC_LINKER(G, U, B) \\\n+  CHOOSE_DYNAMIC_LINKER1 (\"mglibc\", \"muclibc\", \"mbionic\", G, U, B)\n+#elif DEFAULT_LIBC == LIBC_UCLIBC\n+#define CHOOSE_DYNAMIC_LINKER(G, U, B) \\\n+  CHOOSE_DYNAMIC_LINKER1 (\"muclibc\", \"mglibc\", \"mbionic\", U, G, B)\n+#elif DEFAULT_LIBC == LIBC_BIONIC\n+#define CHOOSE_DYNAMIC_LINKER(G, U, B) \\\n+  CHOOSE_DYNAMIC_LINKER1 (\"mbionic\", \"mglibc\", \"muclibc\", B, G, U)\n #else\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n-#endif\n+#error \"Unsupported DEFAULT_LIBC\"\n+#endif /* DEFAULT_LIBC */\n \n /* For most targets the following definitions suffice;\n    GLIBC_DYNAMIC_LINKER must be defined for each target using them, or\n@@ -120,18 +137,25 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define UCLIBC_DYNAMIC_LINKER \"/lib/ld-uClibc.so.0\"\n #define UCLIBC_DYNAMIC_LINKER32 \"/lib/ld-uClibc.so.0\"\n #define UCLIBC_DYNAMIC_LINKER64 \"/lib/ld64-uClibc.so.0\"\n-#define LINUX_DYNAMIC_LINKER \\\n-  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER)\n-#define LINUX_DYNAMIC_LINKER32 \\\n-  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER32)\n-#define LINUX_DYNAMIC_LINKER64 \\\n-  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER64)\n+#define BIONIC_DYNAMIC_LINKER \"/system/bin/linker\"\n+#define BIONIC_DYNAMIC_LINKER32 \"/system/bin/linker\"\n+#define BIONIC_DYNAMIC_LINKER64 \"/system/bin/linker64\"\n+\n+#define LINUX_DYNAMIC_LINKER\t\t\t\t\t\t\\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER,\t\\\n+\t\t\t BIONIC_DYNAMIC_LINKER)\n+#define LINUX_DYNAMIC_LINKER32\t\t\t\t\t\t\\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER32, \\\n+\t\t\t BIONIC_DYNAMIC_LINKER32)\n+#define LINUX_DYNAMIC_LINKER64\t\t\t\t\t\t\\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER64, \\\n+\t\t\t BIONIC_DYNAMIC_LINKER64)\n \n /* Determine whether the entire c99 runtime\n    is present in the runtime library.  */\n #define TARGET_C99_FUNCTIONS (OPTION_GLIBC)\n \n /* Whether we have sincos that follows the GNU extension.  */\n-#define TARGET_HAS_SINCOS (OPTION_GLIBC)\n+#define TARGET_HAS_SINCOS (OPTION_GLIBC | OPTION_BIONIC)\n \n #define TARGET_POSIX_IO"}, {"sha": "9ace3e39b13c63a5aba034cdca69e485e86c3d8b", "filename": "gcc/config/linux.opt", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Flinux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Flinux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.opt?ref=74c7025321da74e985e225350c32edd3996a4a1e", "patch": "@@ -1,6 +1,6 @@\n ; Processor-independent options for GNU/Linux.\n ;\n-; Copyright (C) 2006, 2007, 2009 Free Software Foundation, Inc.\n+; Copyright (C) 2006, 2007, 2009, 2010 Free Software Foundation, Inc.\n ; Contributed by CodeSourcery.\n ;\n ; This file is part of GCC.\n@@ -19,10 +19,14 @@\n ; along with GCC; see the file COPYING3.  If not see\n ; <http://www.gnu.org/licenses/>.\n \n+mbionic\n+Target Report RejectNegative Var(linux_libc,LIBC_BIONIC) Init(DEFAULT_LIBC) Negative(mglibc)\n+Use Bionic C library\n+\n mglibc\n-Target RejectNegative Report InverseMask(UCLIBC, GLIBC) Var(linux_uclibc) Init(UCLIBC_DEFAULT ? OPTION_MASK_UCLIBC : 0)\n-Use GNU libc instead of uClibc\n+Target Report RejectNegative Var(linux_libc,LIBC_GLIBC) VarExists Negative(muclibc)\n+Use GNU C library\n \n muclibc\n-Target RejectNegative Report Mask(UCLIBC) Var(linux_uclibc) VarExists\n-Use uClibc instead of GNU libc\n+Target Report RejectNegative Var(linux_libc,LIBC_UCLIBC) VarExists Negative(mbionic)\n+Use uClibc C library"}, {"sha": "502342c3de6e4921430e56de99b894954b433fed", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=74c7025321da74e985e225350c32edd3996a4a1e", "patch": "@@ -352,10 +352,12 @@ extern int dot_symbols;\n #define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld64.so.1\"\n #define UCLIBC_DYNAMIC_LINKER32 \"/lib/ld-uClibc.so.0\"\n #define UCLIBC_DYNAMIC_LINKER64 \"/lib/ld64-uClibc.so.0\"\n-#if UCLIBC_DEFAULT\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n+#if DEFAULT_LIBC == LIBC_UCLIBC\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:\" G \";:\" U \"}\"\n+#elif DEFAULT_LIBC == LIBC_GLIBC\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:\" U \";:\" G \"}\"\n #else\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n+#error \"Unsupported DEFAULT_LIBC\"\n #endif\n #define LINUX_DYNAMIC_LINKER32 \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER32)"}, {"sha": "2e6fbc7cbd243958f10597388742945781043edc", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=74c7025321da74e985e225350c32edd3996a4a1e", "patch": "@@ -903,10 +903,12 @@ SVR4_ASM_SPEC \\\n \n #define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n #define UCLIBC_DYNAMIC_LINKER \"/lib/ld-uClibc.so.0\"\n-#if UCLIBC_DEFAULT\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n+#if DEFAULT_LIBC == LIBC_UCLIBC\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:\" G \";:\" U \"}\"\n+#elif DEFAULT_LIBC == LIBC_GLIBC\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:\" U \";:\" G \"}\"\n #else\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n+#error \"Unsupported DEFAULT_LIBC\"\n #endif\n #define LINUX_DYNAMIC_LINKER \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER)"}, {"sha": "20fa3477210f5c9e4f23fff4e77ac8c043e837ef", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=74c7025321da74e985e225350c32edd3996a4a1e", "patch": "@@ -11477,13 +11477,18 @@ These @samp{-m} options are defined for GNU/Linux targets:\n @table @gcctabopt\n @item -mglibc\n @opindex mglibc\n-Use the GNU C library instead of uClibc.  This is the default except\n-on @samp{*-*-linux-*uclibc*} targets.\n+Use the GNU C library.  This is the default except\n+on @samp{*-*-linux-*uclibc*} and @samp{*-*-linux-*android*} targets.\n \n @item -muclibc\n @opindex muclibc\n-Use uClibc instead of the GNU C library.  This is the default on\n+Use uClibc C library.  This is the default on\n @samp{*-*-linux-*uclibc*} targets.\n+\n+@item -mbionic\n+@opindex mbionic\n+Use Bionic C library.  This is the default on\n+@samp{*-*-linux-*android*} targets.\n @end table\n \n @node H8/300 Options"}, {"sha": "cdcbc2fe8a673fe1e2b193913370feb40ba062ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c7025321da74e985e225350c32edd3996a4a1e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74c7025321da74e985e225350c32edd3996a4a1e", "patch": "@@ -1,3 +1,8 @@\n+2010-05-27  Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\t* gcc.dg/glibc-uclibc-1.c, gcc.dg/glibc-uclibc-2.c: Remove, no longer\n+\tnecessary.\n+\n 2010-05-26  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/lto/materialize-1_0.c: New file."}, {"sha": "a3764046b0d4aead4c42c31c9173ae177ff97a1e", "filename": "gcc/testsuite/gcc.dg/glibc-uclibc-1.c", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef0694cb173c80c3466885de23fa937c8903653/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef0694cb173c80c3466885de23fa937c8903653/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-1.c?ref=3ef0694cb173c80c3466885de23fa937c8903653", "patch": "@@ -1,6 +0,0 @@\n-/* Test -mglibc and -muclibc not allowed together.  */\n-/* Origin: Joseph Myers <joseph@codesourcery.com> */\n-/* { dg-do link { target *-*-linux* } } */\n-/* { dg-options \"-mglibc -muclibc\" } */\n-\n-/* { dg-message \"-mglibc and -muclibc used together\" \"\" { target *-*-* } 0 } */"}, {"sha": "cb52260730bd1cf509b61e4288f41a1bcd559eda", "filename": "gcc/testsuite/gcc.dg/glibc-uclibc-2.c", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef0694cb173c80c3466885de23fa937c8903653/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef0694cb173c80c3466885de23fa937c8903653/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-2.c?ref=3ef0694cb173c80c3466885de23fa937c8903653", "patch": "@@ -1,6 +0,0 @@\n-/* Test -mglibc and -muclibc not allowed together.  */\n-/* Origin: Joseph Myers <joseph@codesourcery.com> */\n-/* { dg-do link { target *-*-linux* } } */\n-/* { dg-options \"-muclibc -mglibc\" } */\n-\n-/* { dg-message \"-mglibc and -muclibc used together\" \"\" { target *-*-* } 0 } */"}]}