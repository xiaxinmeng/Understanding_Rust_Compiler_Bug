{"sha": "ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ2MmUwZDliN2Y5MWU2NWY5YzdjMzg0NWQwZDVjOGRjZTYwMDg4OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-10-26T22:42:53Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-10-26T22:42:53Z"}, "message": "ipa.c (process_references): Enqueue all referenced nodes; mark as reachable only non-external nodes.\n\n\n\t* ipa.c (process_references): Enqueue all referenced nodes;\n\tmark as reachable only non-external nodes.\n\t(cgraph_remove_unreachable_nodes): All referenced nodes should\n\tbe enqueued; remove bogues node->needed check.\n\nFrom-SVN: r165990", "tree": {"sha": "720a1c9202abf0413ef0563ab046a20ae17bcc6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/720a1c9202abf0413ef0563ab046a20ae17bcc6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889/comments", "author": null, "committer": null, "parents": [{"sha": "8c3800373fa39db275e4bea68fa775a0defb3daf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3800373fa39db275e4bea68fa775a0defb3daf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c3800373fa39db275e4bea68fa775a0defb3daf"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "7c6b89a2a7b09332d252b9978a5a34c8cd5d8de6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889", "patch": "@@ -1,14 +1,14 @@\n-2010-10-26  Jan Hubicka  <jh@suse.cz>\n-\n-\t* cgraphbuild.c (build_cgraph_edges): Use ipa-reference to represent OMP.\n-\n 2010-10-26  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa.c (process_references): Enqueue all referenced nodes;\n \tmark as reachable only non-external nodes.\n \t(cgraph_remove_unreachable_nodes): All referenced nodes should\n \tbe enqueued; remove bogues node->needed check.\n \n+2010-10-26  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraphbuild.c (build_cgraph_edges): Use ipa-reference to represent OMP.\n+\n 2010-10-26  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.md (split_stack_return): Replace"}, {"sha": "7c2c7f23baf5efcb4d51e15edf8d75d7975353e7", "filename": "gcc/ipa.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=ed62e0d9b7f91e65f9c7c3845d0d5c8dce600889", "patch": "@@ -170,12 +170,11 @@ process_references (struct ipa_ref_list *list,\n \t{\n \t  struct cgraph_node *node = ipa_ref_node (ref);\n \t  if (!node->reachable\n+\t      && node->analyzed\n \t      && (!DECL_EXTERNAL (node->decl)\n \t          || before_inlining_p))\n-\t    {\n-\t      node->reachable = true;\n-\t      enqueue_cgraph_node (node, first);\n-\t    }\n+\t    node->reachable = true;\n+\t  enqueue_cgraph_node (node, first);\n \t}\n       else\n \t{\n@@ -304,15 +303,15 @@ cgraph_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n \t  if (node->reachable)\n \t    {\n \t      for (e = node->callees; e; e = e->next_callee)\n-\t\tif (!e->callee->reachable\n-\t\t    && node->analyzed\n-\t\t    && (!e->inline_failed || !e->callee->analyzed\n-\t\t\t|| (!DECL_EXTERNAL (e->callee->decl))\n-\t\t\t|| before_inlining_p))\n-\t\t  {\n+\t\t{\n+\t\t  if (!e->callee->reachable\n+\t\t      && node->analyzed\n+\t\t      && (!e->inline_failed\n+\t\t\t  || !DECL_EXTERNAL (e->callee->decl)\n+\t\t\t  || before_inlining_p))\n \t\t    e->callee->reachable = true;\n-\t\t    enqueue_cgraph_node (e->callee, &first);\n-\t\t  }\n+\t\t  enqueue_cgraph_node (e->callee, &first);\n+\t\t}\n \t      process_references (&node->ref_list, &first, &first_varpool, before_inlining_p);\n \t    }\n \n@@ -416,7 +415,7 @@ cgraph_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n \t      found = true;\n \n \t  /* If so, we need to keep node in the callgraph.  */\n-\t  if (found || node->needed)\n+\t  if (found)\n \t    {\n \t      if (node->analyzed)\n \t\t{"}]}