{"sha": "55142f01b22fb057cbc9f6794c18b7ed2d6f0e52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUxNDJmMDFiMjJmYjA1N2NiYzlmNjc5NGMxOGI3ZWQyZDZmMGU1Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-23T05:29:03Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-23T05:29:03Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r575", "tree": {"sha": "085dc63da11c4bd24d63519ae66220b999744df5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/085dc63da11c4bd24d63519ae66220b999744df5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55142f01b22fb057cbc9f6794c18b7ed2d6f0e52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55142f01b22fb057cbc9f6794c18b7ed2d6f0e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55142f01b22fb057cbc9f6794c18b7ed2d6f0e52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55142f01b22fb057cbc9f6794c18b7ed2d6f0e52/comments", "author": null, "committer": null, "parents": [{"sha": "3ed8294e3200bbc003211f9b7eeb64a9c407a626", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed8294e3200bbc003211f9b7eeb64a9c407a626", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ed8294e3200bbc003211f9b7eeb64a9c407a626"}], "stats": {"total": 38, "additions": 6, "deletions": 32}, "files": [{"sha": "a92406cc4adca847ab0cbf2a8731c196ef500f64", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 6, "deletions": 32, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55142f01b22fb057cbc9f6794c18b7ed2d6f0e52/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55142f01b22fb057cbc9f6794c18b7ed2d6f0e52/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=55142f01b22fb057cbc9f6794c18b7ed2d6f0e52", "patch": "@@ -1105,26 +1105,9 @@ build_selector_translation_table ()\n   int idx = 0;\n   char buf[256];\n #else\n-  tree _OBJC_SELECTOR_REFERENCES_id\n-    = get_identifier (\"_OBJC_SELECTOR_REFERENCES\");\n-\n-  sc_spec = tree_cons (NULLT, ridpointers[(int) RID_STATIC], NULLT);\n-\n-#ifdef OBJC_INT_SELECTORS\n-  /* static unsigned int _OBJC_SELECTOR_REFERENCES[] = { 1, 2, ... }; */\n-  decl_specs = tree_cons (NULLT, ridpointers[(int) RID_UNSIGNED], sc_spec);\n-  decl_specs = tree_cons (NULLT, ridpointers[(int) RID_INT], decl_specs);\n-  expr_decl = _OBJC_SELECTOR_REFERENCES_id;\n-#else /* not OBJC_INT_SELECTORS */\n-  /* static struct objc_selector *_OBJC_SELECTOR_REFERENCES[] = { 1, 2, .}; */\n-  decl_specs = build_tree_list (NULLT,\n-\t\t\t\txref_tag (RECORD_TYPE,\n-\t\t\t\t\t  get_identifier (TAG_SELECTOR)));\n-  expr_decl = build1 (INDIRECT_REF, NULLT, _OBJC_SELECTOR_REFERENCES_id);\n-#endif /* not OBJC_INT_SELECTORS */\n-\n-  expr_decl = build_nt (ARRAY_REF, expr_decl, NULLT);\n-  _OBJC_SELECTOR_REFERENCES_decl = start_decl (expr_decl, decl_specs, 1);\n+  /* The corresponding pop_obstacks is in finish_decl,\n+     called at the end of this function.  */\n+  push_obstacks_nochange ();\n #endif\n \n   for (chain = sel_ref_chain; chain; chain = TREE_CHAIN (chain))\n@@ -1135,19 +1118,9 @@ build_selector_translation_table ()\n       sprintf (buf, \"_OBJC_SELECTOR_REFERENCES_%d\", idx);\n       sc_spec = build_tree_list (NULLT, ridpointers[(int) RID_STATIC]);\n \n-#ifdef OBJC_INT_SELECTORS\n-      /* static unsigned int _OBJC_SELECTOR_REFERENCES_n = ...; */\n-      decl_specs = tree_cons (NULLT, ridpointers[(int) RID_UNSIGNED], sc_spec);\n-      decl_specs = tree_cons (NULLT, ridpointers[(int) RID_INT], decl_specs);\n+      /* static SEL _OBJC_SELECTOR_REFERENCES_n = ...; */\n+      decl_specs = tree_cons (NULLT, selector_type, sc_spec);\n       var_decl = get_identifier (buf);\n-#else /* not OBJC_INT_SELECTORS */\n-      /* static struct objc_selector *_OBJC_SELECTOR_REFERENCES_n = ...; */\n-      decl_specs = tree_cons (NULLT,\n-\t\t\t      xref_tag (RECORD_TYPE,\n-\t\t\t\t\tget_identifier (TAG_SELECTOR)),\n-\t\t\t      sc_spec);\n-      var_decl = build1 (INDIRECT_REF, NULLT, get_identifier (buf));\n-#endif /* not OBJC_INT_SELECTORS */\n \n       /* the `decl' that is returned from start_decl is the one that we\n \t* forward declared in `build_selector_reference()'\n@@ -1169,6 +1142,7 @@ build_selector_translation_table ()\n     }\n \n #ifdef OBJC_NONUNIQUE_SELECTORS\n+  DECL_INITIAL (_OBJC_SELECTOR_REFERENCES_decl) = (tree) 1;\n   initlist = build_nt (CONSTRUCTOR, NULLT, nreverse (initlist));\n   finish_decl (_OBJC_SELECTOR_REFERENCES_decl, initlist, NULLT);\n #endif"}]}