{"sha": "f7e62b09300b6935bceaffb4c42f6edab80f52dc", "node_id": "C_kwDOANBUbNoAKGY3ZTYyYjA5MzAwYjY5MzViY2VhZmZiNGM0MmY2ZWRhYjgwZjUyZGM", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-09-20T22:21:04Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-09-22T18:48:29Z"}, "message": "Convert CFN_BUILT_IN_CLRSB to range-ops.\n\n\t* gimple-range-fold.cc (range_of_builtin_int_call): Remove case\n\tfor CFN_BUILT_IN_CLRSB.\n\t* gimple-range-op.cc (class cfn_clrsb): New.\n\t(gimple_range_op_handler::maybe_builtin_call): Set arguments.", "tree": {"sha": "4917004fc6270dadff0155a9b2b5ca8b25b7ca66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4917004fc6270dadff0155a9b2b5ca8b25b7ca66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7e62b09300b6935bceaffb4c42f6edab80f52dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e62b09300b6935bceaffb4c42f6edab80f52dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7e62b09300b6935bceaffb4c42f6edab80f52dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e62b09300b6935bceaffb4c42f6edab80f52dc/comments", "author": null, "committer": null, "parents": [{"sha": "55738d8d96bb4f39a72cf5e3739d35b39fc2146a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55738d8d96bb4f39a72cf5e3739d35b39fc2146a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55738d8d96bb4f39a72cf5e3739d35b39fc2146a"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "1d7d1da7bbe8412108809682c244c46887bf5d64", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7e62b09300b6935bceaffb4c42f6edab80f52dc/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7e62b09300b6935bceaffb4c42f6edab80f52dc/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=f7e62b09300b6935bceaffb4c42f6edab80f52dc", "patch": "@@ -916,8 +916,6 @@ fold_using_range::range_of_builtin_int_call (irange &r, gcall *call,\n     return false;\n \n   tree type = gimple_range_type (call);\n-  tree arg;\n-  int prec;\n   scalar_int_mode mode;\n \n   switch (func)\n@@ -926,11 +924,6 @@ fold_using_range::range_of_builtin_int_call (irange &r, gcall *call,\n       r.set (build_zero_cst (type), build_one_cst (type));\n       return true;\n \n-    CASE_CFN_CLRSB:\n-      arg = gimple_call_arg (call, 0);\n-      prec = TYPE_PRECISION (TREE_TYPE (arg));\n-      r.set (build_int_cst (type, 0), build_int_cst (type, prec - 1));\n-      return true;\n     case CFN_UBSAN_CHECK_ADD:\n       range_of_builtin_ubsan_call (r, call, PLUS_EXPR, src);\n       return true;"}, {"sha": "bee225431e884c9125f5b7c3537b937eadc8ee21", "filename": "gcc/gimple-range-op.cc", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7e62b09300b6935bceaffb4c42f6edab80f52dc/gcc%2Fgimple-range-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7e62b09300b6935bceaffb4c42f6edab80f52dc/gcc%2Fgimple-range-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-op.cc?ref=f7e62b09300b6935bceaffb4c42f6edab80f52dc", "patch": "@@ -559,6 +559,23 @@ cfn_ctz::fold_range (irange &r, tree type, const irange &lh,\n   return true;\n }\n \n+\n+// Implement range operator for CFN_BUILT_IN_\n+class cfn_clrsb : public range_operator\n+{\n+public:\n+  using range_operator::fold_range;\n+  virtual bool fold_range (irange &r, tree type, const irange &lh,\n+\t\t\t   const irange &, relation_kind) const\n+  {\n+    if (lh.undefined_p ())\n+      return false;\n+    int prec = TYPE_PRECISION (lh.type ());\n+    r.set (build_int_cst (type, 0), build_int_cst (type, prec - 1));\n+    return true;\n+  }\n+} op_cfn_clrsb;\n+\n // Set up a gimple_range_op_handler for any built in function which can be\n // supported via range-ops.\n \n@@ -632,6 +649,12 @@ gimple_range_op_handler::maybe_builtin_call ()\n \tm_int = &op_cfn_ctz;\n       break;\n \n+    CASE_CFN_CLRSB:\n+      m_op1 = gimple_call_arg (call, 0);\n+      m_valid = true;\n+      m_int = &op_cfn_clrsb;\n+      break;\n+\n     default:\n       break;\n     }"}]}