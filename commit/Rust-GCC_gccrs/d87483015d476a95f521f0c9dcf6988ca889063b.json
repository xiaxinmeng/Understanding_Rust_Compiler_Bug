{"sha": "d87483015d476a95f521f0c9dcf6988ca889063b", "node_id": "C_kwDOANBUbNoAKGQ4NzQ4MzAxNWQ0NzZhOTVmNTIxZjBjOWRjZjY5ODhjYTg4OTA2M2I", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-12-24T20:50:21Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-12-26T13:09:22Z"}, "message": "i386: Check AX input in any_mul_highpart peepholes\n\nWhen applying peephole optimization to transform\n\n\tmov imm, %reg0\n\tmov %reg1, %AX_REG\n\timul %reg0\n\nto\n\n\tmov imm, %AX_REG\n\timul %reg1\n\ndisable peephole optimization if reg1 == AX_REG.\n\ngcc/\n\n\tPR target/103785\n\t* config/i386/i386.md: Swap operand order in comments and check\n\tAX input in any_mul_highpart peepholes.\n\ngcc/testsuite/\n\n\tPR target/103785\n\t* gcc.target/i386/pr103785.c: New test.", "tree": {"sha": "f14bea73b5701ee6a518e70956110b1a378734c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f14bea73b5701ee6a518e70956110b1a378734c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d87483015d476a95f521f0c9dcf6988ca889063b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d87483015d476a95f521f0c9dcf6988ca889063b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d87483015d476a95f521f0c9dcf6988ca889063b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d87483015d476a95f521f0c9dcf6988ca889063b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9525c26bf19318bed72d3bc3b99dceac5217102f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9525c26bf19318bed72d3bc3b99dceac5217102f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9525c26bf19318bed72d3bc3b99dceac5217102f"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "eea5d5d3f012c732a421f04e300bef0591cbaca7", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d87483015d476a95f521f0c9dcf6988ca889063b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d87483015d476a95f521f0c9dcf6988ca889063b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d87483015d476a95f521f0c9dcf6988ca889063b", "patch": "@@ -8578,7 +8578,7 @@\n    (set_attr \"mode\" \"SI\")])\n \n ;; Highpart multiplication peephole2s to tweak register allocation.\n-;; mov %rdx,imm; mov %rax,%rdi; imulq %rdx  ->  mov %rax,imm; imulq %rdi\n+;; mov imm,%rdx; mov %rdi,%rax; imulq %rdx  ->  mov imm,%rax; imulq %rdi\n (define_peephole2\n   [(set (match_operand:SWI48 0 \"general_reg_operand\")\n \t(match_operand:SWI48 1 \"immediate_operand\"))\n@@ -8588,7 +8588,8 @@\n \t\t   (any_mul_highpart:SWI48 (match_dup 2) (match_dup 0)))\n \t      (clobber (match_dup 2))\n \t      (clobber (reg:CC FLAGS_REG))])]\n-  \"REGNO (operands[0]) != REGNO (operands[2])\n+  \"REGNO (operands[3]) != AX_REG\n+   && REGNO (operands[0]) != REGNO (operands[2])\n    && REGNO (operands[0]) != REGNO (operands[3])\n    && (REGNO (operands[0]) == REGNO (operands[4])\n        || peep2_reg_dead_p (3, operands[0]))\"\n@@ -8608,7 +8609,10 @@\n \t\t     (any_mul_highpart:SI (match_dup 2) (match_dup 0))))\n \t      (clobber (match_dup 2))\n \t      (clobber (reg:CC FLAGS_REG))])]\n-  \"REGNO (operands[0]) != REGNO (operands[2])\n+  \"TARGET_64BIT\n+   && REGNO (operands[3]) != AX_REG\n+   && REGNO (operands[0]) != REGNO (operands[2])\n+   && REGNO (operands[2]) != REGNO (operands[3])\n    && REGNO (operands[0]) != REGNO (operands[3])\n    && (REGNO (operands[0]) == REGNO (operands[4])\n        || peep2_reg_dead_p (3, operands[0]))\""}, {"sha": "5503b965256ba72490ff7d8c1149d032f297380c", "filename": "gcc/testsuite/gcc.target/i386/pr103785.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d87483015d476a95f521f0c9dcf6988ca889063b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103785.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d87483015d476a95f521f0c9dcf6988ca889063b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103785.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103785.c?ref=d87483015d476a95f521f0c9dcf6988ca889063b", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <stdlib.h>\n+\n+struct wrapper_t\n+{\n+  long k;\n+  long e;\n+};\n+\n+struct wrapper_t **table;\n+\n+__attribute__ ((weak, regparm (2)))\n+void\n+update (long k, long e)\n+{\n+  struct wrapper_t *elmt;\n+\n+  elmt = table[k % 3079];\n+  if (elmt == 0)\n+    return;\n+  elmt->e = e;\n+}\n+\n+int\n+main ()\n+{\n+  table = (struct wrapper_t **) malloc (20 * sizeof (struct wrapper_t *));\n+  for (int i = 0; i < 20; i++)\n+    table[i] = (struct wrapper_t *) calloc (sizeof (struct wrapper_t), 1);\n+  if (table[10]->e != 0)\n+    abort ();\n+  update (10, 20);\n+  if (table[10]->e != 20)\n+    abort ();\n+  return 0;\n+}"}]}