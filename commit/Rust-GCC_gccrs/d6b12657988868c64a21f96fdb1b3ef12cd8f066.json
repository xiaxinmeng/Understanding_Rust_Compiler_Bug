{"sha": "d6b12657988868c64a21f96fdb1b3ef12cd8f066", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZiMTI2NTc5ODg4NjhjNjRhMjFmOTZmZGIxYjNlZjEyY2Q4ZjA2Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T19:23:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T19:23:35Z"}, "message": "If RTX_CODE undefined, make an incomplete struct for rtx.\n\nAdd some missing declarations of functions in stmt.c.\n(STDIO_PROTO): Define here if not already defined.\n\nFrom-SVN: r7107", "tree": {"sha": "d3dece92e012bd851c4b43e75cc56cb8261b7b7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3dece92e012bd851c4b43e75cc56cb8261b7b7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6b12657988868c64a21f96fdb1b3ef12cd8f066", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b12657988868c64a21f96fdb1b3ef12cd8f066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b12657988868c64a21f96fdb1b3ef12cd8f066", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b12657988868c64a21f96fdb1b3ef12cd8f066/comments", "author": null, "committer": null, "parents": [{"sha": "88efc60a699446d45ab56c4b80719c2e590db8c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88efc60a699446d45ab56c4b80719c2e590db8c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88efc60a699446d45ab56c4b80719c2e590db8c7"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "e455c078f25c74aad2034b8e094c80f777cfac05", "filename": "gcc/tree.h", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6b12657988868c64a21f96fdb1b3ef12cd8f066/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6b12657988868c64a21f96fdb1b3ef12cd8f066/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d6b12657988868c64a21f96fdb1b3ef12cd8f066", "patch": "@@ -19,7 +19,11 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include \"machmode.h\"\n \n-/* codes of tree nodes */\n+#ifndef RTX_CODE\n+struct rtx_def;\n+#endif\n+\n+/* Codes of tree nodes */\n \n #define DEFTREECODE(SYM, STRING, TYPE, NARGS)   SYM,\n \n@@ -1007,6 +1011,14 @@ union tree_node\n #endif\n #endif\n \n+#ifndef STDIO_PROTO\n+#ifdef BUFSIZ\n+#define STDIO_PROTO(ARGS) PROTO(ARGS)\n+#else\n+#define STDIO_PROTO(ARGS) ()\n+#endif\n+#endif\n+\n #define NULL_TREE (tree) NULL\n \n /* Define a generic NULL if one hasn't already been defined.  */\n@@ -1428,6 +1440,7 @@ extern char *perm_calloc\t\t\tPROTO((int, long));\n \f\n /* In stmt.c */\n \n+extern void expand_fixups\t\t\tPROTO((struct rtx_def *));\n extern tree expand_start_stmt_expr\t\tPROTO((void));\n extern tree expand_end_stmt_expr\t\tPROTO((tree));\n extern void expand_expr_stmt\t\t\tPROTO((tree));\n@@ -1446,18 +1459,24 @@ extern void expand_loop_continue_here\t\tPROTO((void));\n extern void expand_end_loop\t\t\tPROTO((void));\n extern int expand_continue_loop\t\t\tPROTO((struct nesting *));\n extern int expand_exit_loop\t\t\tPROTO((struct nesting *));\n-extern int expand_exit_loop_if_false\t\tPROTO((struct nesting *, tree));\n+extern int expand_exit_loop_if_false\t\tPROTO((struct nesting *,\n+\t\t\t\t\t\t       tree));\n extern int expand_exit_something\t\tPROTO((void));\n \n extern void expand_null_return\t\t\tPROTO((void));\n extern void expand_return\t\t\tPROTO((tree));\n extern void expand_start_bindings\t\tPROTO((int));\n extern void expand_end_bindings\t\t\tPROTO((tree, int, int));\n extern tree last_cleanup_this_contour\t\tPROTO((void));\n-extern void expand_start_case\t\t\tPROTO((int, tree, tree, char *));\n+extern void expand_start_case\t\t\tPROTO((int, tree, tree,\n+\t\t\t\t\t\t       char *));\n extern void expand_end_case\t\t\tPROTO((tree));\n-extern int pushcase\t\t\t\tPROTO((tree, tree (*) (tree, tree), tree, tree *));\n-extern int pushcase_range\t\t\tPROTO((tree, tree, tree (*) (tree, tree), tree, tree *));\n+extern int pushcase\t\t\t\tPROTO((tree,\n+\t\t\t\t\t\t       tree (*) (tree, tree),\n+\t\t\t\t\t\t       tree, tree *));\n+extern int pushcase_range\t\t\tPROTO((tree, tree,\n+\t\t\t\t\t\t       tree (*) (tree, tree),\n+\t\t\t\t\t\t       tree, tree *));\n \n /* In fold-const.c */\n "}]}