{"sha": "2947d3b29ca4008d6ed4bf53851c04972c56ede1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk0N2QzYjI5Y2E0MDA4ZDZlZDRiZjUzODUxYzA0OTcyYzU2ZWRlMQ==", "commit": {"author": {"name": "Ilya Enkovich", "email": "enkovich.gnu@gmail.com", "date": "2016-01-25T12:48:54Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-01-25T12:48:54Z"}, "message": "re PR target/69421 (ICE in maybe_legitimize_operand, at optabs.c:6888 with -O3)\n\ngcc/\n\n\tPR target/69421\n\t* tree-vect-stmts.c (vectorizable_condition): Check vectype\n\tof operands is compatible with a statement vectype.\n\ngcc/testsuite/\n\n\tPR target/69421\n\t* gcc.dg/pr69421.c: New test.\n\nFrom-SVN: r232792", "tree": {"sha": "5938fade9440c8d2ae287cda71cb73ce387b839a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5938fade9440c8d2ae287cda71cb73ce387b839a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2947d3b29ca4008d6ed4bf53851c04972c56ede1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2947d3b29ca4008d6ed4bf53851c04972c56ede1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2947d3b29ca4008d6ed4bf53851c04972c56ede1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2947d3b29ca4008d6ed4bf53851c04972c56ede1/comments", "author": null, "committer": null, "parents": [{"sha": "1cf11fe62a4318f6188b6cd74272ab7311b3b717", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf11fe62a4318f6188b6cd74272ab7311b3b717", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cf11fe62a4318f6188b6cd74272ab7311b3b717"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "bd851ed77f826959fb2f84e5fdfb47764a2f1189", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2947d3b29ca4008d6ed4bf53851c04972c56ede1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2947d3b29ca4008d6ed4bf53851c04972c56ede1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2947d3b29ca4008d6ed4bf53851c04972c56ede1", "patch": "@@ -1,3 +1,9 @@\n+2016-01-25  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\tPR target/69421\n+\t* tree-vect-stmts.c (vectorizable_condition): Check vectype\n+\tof operands is compatible with a statement vectype.\n+\n 2016-01-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/extend.texi (scalar_storage_order type attribute): Fix typo and"}, {"sha": "bd3f89229ca5c4c532c28668f4815e9426699da3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2947d3b29ca4008d6ed4bf53851c04972c56ede1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2947d3b29ca4008d6ed4bf53851c04972c56ede1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2947d3b29ca4008d6ed4bf53851c04972c56ede1", "patch": "@@ -1,3 +1,8 @@\n+2016-01-25  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\tPR target/69421\n+\t* gcc.dg/pr69421.c: New test.\n+\n 2016-01-25  Bilyan Borisov  <bilyan.borisov@arm.com>\n \n \t* gcc.target/aarch64/simd/vcvt_s64_f64_1.c: New."}, {"sha": "252e22c18528674d776d834f88b301988d0e210d", "filename": "gcc/testsuite/gcc.dg/pr69421.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2947d3b29ca4008d6ed4bf53851c04972c56ede1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69421.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2947d3b29ca4008d6ed4bf53851c04972c56ede1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69421.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69421.c?ref=2947d3b29ca4008d6ed4bf53851c04972c56ede1", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+struct A { double a; };\n+double a;\n+\n+void\n+foo (_Bool *x)\n+{\n+  long i;\n+  for (i = 0; i < 64; i++)\n+    {\n+      struct A c;\n+      x[i] = c.a || a;\n+    }\n+}"}, {"sha": "1dcd12959307c0fb0b6b83b655265a4cb009a528", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2947d3b29ca4008d6ed4bf53851c04972c56ede1/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2947d3b29ca4008d6ed4bf53851c04972c56ede1/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=2947d3b29ca4008d6ed4bf53851c04972c56ede1", "patch": "@@ -7528,6 +7528,7 @@ vectorizable_condition (gimple *stmt, gimple_stmt_iterator *gsi,\n \n   tree vectype = STMT_VINFO_VECTYPE (stmt_info);\n   int nunits = TYPE_VECTOR_SUBPARTS (vectype);\n+  tree vectype1 = NULL_TREE, vectype2 = NULL_TREE;\n \n   if (slp_node || PURE_SLP_STMT (stmt_info))\n     ncopies = 1;\n@@ -7547,9 +7548,17 @@ vectorizable_condition (gimple *stmt, gimple_stmt_iterator *gsi,\n     return false;\n \n   gimple *def_stmt;\n-  if (!vect_is_simple_use (then_clause, stmt_info->vinfo, &def_stmt, &dt))\n+  if (!vect_is_simple_use (then_clause, stmt_info->vinfo, &def_stmt, &dt,\n+\t\t\t   &vectype1))\n+    return false;\n+  if (!vect_is_simple_use (else_clause, stmt_info->vinfo, &def_stmt, &dt,\n+\t\t\t   &vectype2))\n     return false;\n-  if (!vect_is_simple_use (else_clause, stmt_info->vinfo, &def_stmt, &dt))\n+\n+  if (vectype1 && !useless_type_conversion_p (vectype, vectype1))\n+    return false;\n+\n+  if (vectype2 && !useless_type_conversion_p (vectype, vectype2))\n     return false;\n \n   masked = !COMPARISON_CLASS_P (cond_expr);"}]}