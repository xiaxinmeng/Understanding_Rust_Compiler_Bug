{"sha": "60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2", "node_id": "C_kwDOANBUbNoAKDYwYjZmNWMwYTMzNGRiM2Y4ZjZkZmZhZjBiOWFhYjQyZmQ1YzU0YTI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-10T19:38:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-10T19:38:13Z"}, "message": "c++: Don't clear TREE_READONLY for -fmerge-all-constants for non-aggregates [PR107558]\n\nThe following testcase ICEs, because OpenMP lowering for shared clause\non l variable with REFERENCE_TYPE creates POINTER_TYPE to REFERENCE_TYPE.\nThe reason is that the automatic variable has non-trivial construction\n(reference to a lambda) and -fmerge-all-constants is on and so TREE_READONLY\nisn't set - omp-low will handle automatic TREE_READONLY vars in shared\nspecially and only copy to the construct and not back, while !TREE_READONLY\nare assumed to be changeable.\nThe PR91529 change rationale was that the gimplification can change\nsome non-addressable automatic variables to TREE_STATIC with\n-fmerge-all-constants and therefore TREE_READONLY on them is undesirable.\nBut, the gimplifier does that only for aggregate variables:\n  switch (TREE_CODE (type))\n    {\n    case RECORD_TYPE:\n    case UNION_TYPE:\n    case QUAL_UNION_TYPE:\n    case ARRAY_TYPE:\nand not for anything else.  So, I think clearing TREE_READONLY for\nautomatic integral or reference or pointer etc. vars for\n-fmerge-all-constants only is unnecessary.\n\n2023-03-10  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/107558\n\t* decl.cc (cp_finish_decl): Don't clear TREE_READONLY on\n\tautomatic non-aggregate variables just because of\n\t-fmerge-all-constants.\n\n\t* g++.dg/gomp/pr107558.C: New test.", "tree": {"sha": "95ca6b2bfe6591b68ab19f0886659ab67a820ef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95ca6b2bfe6591b68ab19f0886659ab67a820ef9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "991f9eb2da3a268b7b08346761fa0078ab55f506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991f9eb2da3a268b7b08346761fa0078ab55f506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/991f9eb2da3a268b7b08346761fa0078ab55f506"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "1d1ae0226061d1851ffec11c4611b085bccb0af6", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2", "patch": "@@ -8685,8 +8685,10 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \n       if (var_definition_p\n \t  /* With -fmerge-all-constants, gimplify_init_constructor\n-\t     might add TREE_STATIC to the variable.  */\n-\t  && (TREE_STATIC (decl) || flag_merge_constants >= 2))\n+\t     might add TREE_STATIC to aggregate variables.  */\n+\t  && (TREE_STATIC (decl)\n+\t      || (flag_merge_constants >= 2\n+\t\t  && AGGREGATE_TYPE_P (type))))\n \t{\n \t  /* If a TREE_READONLY variable needs initialization\n \t     at runtime, it is no longer readonly and we need to"}, {"sha": "8a6b8d45df74bdf23cd1918b1e9492972cd60541", "filename": "gcc/testsuite/g++.dg/gomp/pr107558.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr107558.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr107558.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr107558.C?ref=60b6f5c0a334db3f8f6dffaf0b9aab42fd5c54a2", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/107558\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-fmerge-all-constants\" }\n+// { dg-additional-options \"-flto\" { target lto } }\n+\n+int a = 15;\n+\n+void\n+foo ()\n+{\n+  auto &&l = [&]() { return a; };\n+#pragma omp target parallel\n+  l ();\n+}"}]}