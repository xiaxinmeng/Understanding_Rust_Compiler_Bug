{"sha": "3876db74dca466947ed4a8e4ba768cd7e97ae4d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg3NmRiNzRkY2E0NjY5NDdlZDRhOGU0YmE3NjhjZDdlOTdhZTRkOA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-04-26T20:56:07Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-04-26T20:56:07Z"}, "message": "Add alpha support.\n\nFrom-SVN: r4236", "tree": {"sha": "ade5ca39287f7c6f35232bd9265140280040de4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ade5ca39287f7c6f35232bd9265140280040de4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3876db74dca466947ed4a8e4ba768cd7e97ae4d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3876db74dca466947ed4a8e4ba768cd7e97ae4d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3876db74dca466947ed4a8e4ba768cd7e97ae4d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3876db74dca466947ed4a8e4ba768cd7e97ae4d8/comments", "author": null, "committer": null, "parents": [{"sha": "a7ab3794a9967ba1aedecacdbb4cb700dcb03fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ab3794a9967ba1aedecacdbb4cb700dcb03fbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ab3794a9967ba1aedecacdbb4cb700dcb03fbb"}], "stats": {"total": 75, "additions": 58, "deletions": 17}, "files": [{"sha": "cf6024797f43e8f116a51ec7462fdbf589850520", "filename": "gcc/mips-tdump.c", "status": "modified", "additions": 58, "deletions": 17, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3876db74dca466947ed4a8e4ba768cd7e97ae4d8/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3876db74dca466947ed4a8e4ba768cd7e97ae4d8/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=3876db74dca466947ed4a8e4ba768cd7e97ae4d8", "patch": "@@ -40,6 +40,20 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define ST_RFDESCAPE    0xfff\n #endif\n \n+#ifndef MIPS_IS_STAB\n+/* Macros for mips-tfile.c to encapsulate stabs in ECOFF, and for\n+   and mips-tdump.c to print them out.  This is used on the Alpha,\n+   which does not include mips.h.\n+\n+   These must match the corresponding definitions in gdb/mipsread.c.\n+   Unfortunately, gcc and gdb do not currently share any directories. */\n+\n+#define CODE_MASK 0x8F300\n+#define MIPS_IS_STAB(sym) (((sym)->index & 0xFFF00) == CODE_MASK)\n+#define MIPS_MARK_STAB(code) ((code)+CODE_MASK)\n+#define MIPS_UNMARK_STAB(code) ((code)-CODE_MASK)\n+#endif\n+\n #ifdef __STDC__\n typedef void *PTR_T;\n typedef const void *CPTR_T;\n@@ -223,6 +237,7 @@ int\t want_aux\t= 0;\t/* print aux table */\n int\t want_line\t= 0;\t/* print line numbers */\n int\t want_rfd\t= 0;\t/* print relative file desc's */\n int\t want_scope\t= 0;\t/* print scopes for every symbol */\n+int\t tfile\t\t= 0;\t/* no global header file */\n int\t tfile_fd;\t\t/* file descriptor of .T file */\n off_t\t tfile_offset;\t\t/* current offset in .T file */\n scope_t\t*cur_scope\t= 0;\t/* list of active scopes */\n@@ -256,10 +271,12 @@ char *glevel_to_string\t__proto((glevel_t));\n char *lang_to_string\t__proto((lang_t));\n char *type_to_string\t__proto((AUXU *, int));\n \n+#ifndef __alpha\n extern PTR_T\tmalloc\t__proto((size_t));\n extern PTR_T\tcalloc\t__proto((size_t, size_t));\n extern PTR_T\trealloc\t__proto((PTR_T, size_t));\n extern void\tfree\t__proto((PTR_T));\n+#endif\n extern char    *ctime\t__proto((time_t *));\n \n extern char *optarg;\n@@ -808,37 +825,60 @@ print_sym_hdr (sym_ptr)\n   printf(\"    %-*s %11s %11s %11s\\n\", width, \"====\", \"======\", \"======\", \"=====\\n\");\n \n   printf(\"    %-*s %11ld %11d %11d [%d]\\n\", width, \"Line numbers\",\n-\t sym_ptr->cbLineOffset, sym_ptr->cbLine, sym_ptr->cbLine, sym_ptr->ilineMax);\n+\t (long)sym_ptr->cbLineOffset,\n+\t (long)sym_ptr->cbLine,\n+\t (long)sym_ptr->cbLine,\n+\t (int)sym_ptr->ilineMax);\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"Dense numbers\",\n-\t sym_ptr->cbDnOffset, sym_ptr->idnMax, sym_ptr->idnMax * sizeof (DNR));\n+\t (long)sym_ptr->cbDnOffset,\n+\t (long)sym_ptr->idnMax,\n+\t (long)(sym_ptr->idnMax * sizeof (DNR)));\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"Procedures Tables\",\n-\t sym_ptr->cbPdOffset, sym_ptr->ipdMax, sym_ptr->ipdMax * sizeof (PDR));\n+\t (long)sym_ptr->cbPdOffset,\n+\t (long)sym_ptr->ipdMax,\n+\t (long)(sym_ptr->ipdMax * sizeof (PDR)));\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"Local Symbols\",\n-\t sym_ptr->cbSymOffset, sym_ptr->isymMax, sym_ptr->isymMax * sizeof (SYMR));\n+\t (long)sym_ptr->cbSymOffset,\n+\t (long)sym_ptr->isymMax,\n+\t (long)(sym_ptr->isymMax * sizeof (SYMR)));\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"Optimization Symbols\",\n-\t sym_ptr->cbOptOffset, sym_ptr->ioptMax, sym_ptr->ioptMax * sizeof (OPTR));\n+\t (long)sym_ptr->cbOptOffset,\n+\t (long)sym_ptr->ioptMax,\n+\t (long)(sym_ptr->ioptMax * sizeof (OPTR)));\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"Auxiliary Symbols\",\n-\t sym_ptr->cbAuxOffset, sym_ptr->iauxMax, sym_ptr->iauxMax * sizeof (AUXU));\n+\t (long)sym_ptr->cbAuxOffset,\n+\t (long)sym_ptr->iauxMax,\n+\t (long)(sym_ptr->iauxMax * sizeof (AUXU)));\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"Local Strings\",\n-\t sym_ptr->cbSsOffset, sym_ptr->issMax, sym_ptr->issMax);\n+\t (long)sym_ptr->cbSsOffset,\n+\t (long)sym_ptr->issMax,\n+\t (long)sym_ptr->issMax);\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"External Strings\",\n-\t sym_ptr->cbSsExtOffset, sym_ptr->issExtMax, sym_ptr->issExtMax);\n+\t (long)sym_ptr->cbSsExtOffset,\n+\t (long)sym_ptr->issExtMax,\n+\t (long)sym_ptr->issExtMax);\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"File Tables\",\n-\t sym_ptr->cbFdOffset, sym_ptr->ifdMax, sym_ptr->ifdMax * sizeof (FDR));\n+\t (long)sym_ptr->cbFdOffset,\n+\t (long)sym_ptr->ifdMax,\n+\t (long)(sym_ptr->ifdMax * sizeof (FDR)));\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"Relative Files\",\n-\t sym_ptr->cbRfdOffset, sym_ptr->crfd, sym_ptr->crfd * sizeof (ulong));\n+\t (long)sym_ptr->cbRfdOffset,\n+\t (long)sym_ptr->crfd,\n+\t (long)(sym_ptr->crfd * sizeof (ulong)));\n \n   printf(\"    %-*s %11ld %11d %11d\\n\", width, \"External Symbols\",\n-\t sym_ptr->cbExtOffset, sym_ptr->iextMax, sym_ptr->iextMax * sizeof (EXTR));\n+\t (long)sym_ptr->cbExtOffset,\n+\t (long)sym_ptr->iextMax,\n+\t (long)(sym_ptr->iextMax * sizeof (EXTR)));\n }\n \n \f\n@@ -1303,12 +1343,11 @@ read_tfile __proto((void))\n   short magic;\n   off_t sym_hdr_offset = 0;\n \n-  /* Determine if this is a .T file (which has no file header), or some\n-     sort of object file (which does have a file header) via the magic\n-     number.  */\n   (void) read_seek ((PTR_T) &magic, sizeof (magic), (off_t)0, \"Magic number\");\n-  if (magic == MIPSELMAGIC || magic == MIPSEBMAGIC)\n+  if (!tfile)\n     {\n+      /* Print out the global header, since this is not a T-file.  */\n+\n       (void) read_seek ((PTR_T) &global_hdr, sizeof (global_hdr), (off_t)0,\n \t\t\t\"Global file header\");\n \n@@ -1408,26 +1447,28 @@ main (argc, argv)\n   /*\n    * Process arguments\n    */\n-  while ((opt = getopt (argc, argv, \"alrs\")) != EOF)\n+  while ((opt = getopt (argc, argv, \"alrst\")) != EOF)\n     switch (opt)\n       {\n       default:\terrors++;\tbreak;\n       case 'a': want_aux++;\tbreak;\t/* print aux table */\n       case 'l': want_line++;\tbreak;\t/* print line numbers */\n       case 'r': want_rfd++;\tbreak;\t/* print relative fd's */\n       case 's':\twant_scope++;\tbreak;\t/* print scope info */\n+      case 't': tfile++;\tbreak;\t/* this is a tfile (without header), and not a .o */\n       }\n \n   if (errors || optind != argc - 1)\n     {\n       fprintf (stderr, \"Calling Sequence:\\n\");\n-      fprintf (stderr, \"\\t%0 [-alrs] <object-or-T-file>\\n\", argv[0]);\n+      fprintf (stderr, \"\\t%0 [-alrst] <object-or-T-file>\\n\", argv[0]);\n       fprintf (stderr, \"\\n\");\n       fprintf (stderr, \"switches:\\n\");\n       fprintf (stderr, \"\\t-a Print out auxiliary table.\\n\");\n       fprintf (stderr, \"\\t-l Print out line numbers.\\n\");\n       fprintf (stderr, \"\\t-r Print out relative file descriptors.\\n\");\n       fprintf (stderr, \"\\t-s Print out the current scopes for an item.\\n\");\n+      fprintf (stderr, \"\\t-t Assume there is no global header (ie, a T-file).\\n\");\n       return 1;\n     }\n "}]}