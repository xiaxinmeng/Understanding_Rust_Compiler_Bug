{"sha": "896aa4eae3cd9f463597e8717ac8722ff7050965", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk2YWE0ZWFlM2NkOWY0NjM1OTdlODcxN2FjODcyMmZmNzA1MDk2NQ==", "commit": {"author": {"name": "David Daney", "email": "ddaney@caviumnetworks.com", "date": "2009-09-03T05:01:40Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2009-09-03T05:01:40Z"}, "message": "cfgbuild.c (find_bb_boundaries): Split blocks containing a barrier.\n\n2009-09-02  David Daney  <ddaney@caviumnetworks.com>\n\n\t* cfgbuild.c (find_bb_boundaries): Split blocks containing a\n\tbarrier.\n\t* emit-rtl.c (prev_nonnote_insn_bb): New function.\n\t* rtl.h (prev_nonnote_insn_bb): Declare it.\n\n2009-09-02  David Daney  <ddaney@caviumnetworks.com>\n\n\t* gcc.c-torture/compile/builtin_unreachable-1.c: New testcase.\n\nFrom-SVN: r151361", "tree": {"sha": "bcd50e973902119516f03bdc0a265a1b5dc16135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcd50e973902119516f03bdc0a265a1b5dc16135"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/896aa4eae3cd9f463597e8717ac8722ff7050965", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/896aa4eae3cd9f463597e8717ac8722ff7050965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/896aa4eae3cd9f463597e8717ac8722ff7050965", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/896aa4eae3cd9f463597e8717ac8722ff7050965/comments", "author": null, "committer": null, "parents": [{"sha": "4537ec0c8652889bc6decbcf5647f889d2a14733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4537ec0c8652889bc6decbcf5647f889d2a14733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4537ec0c8652889bc6decbcf5647f889d2a14733"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "df2129678bc385fe96e26d1edf243d610ec56619", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=896aa4eae3cd9f463597e8717ac8722ff7050965", "patch": "@@ -1,3 +1,10 @@\n+2009-09-02  David Daney  <ddaney@caviumnetworks.com>\n+\n+\t* cfgbuild.c (find_bb_boundaries): Split blocks containing a\n+\tbarrier.\n+\t* emit-rtl.c (prev_nonnote_insn_bb): New function.\n+\t* rtl.h (prev_nonnote_insn_bb): Declare it.\n+\n 2009-09-03  Diego Novillo  <dnovillo@google.com>\n \n \t* cgraph.c (cgraph_node_for_decl): New."}, {"sha": "6e941bf55e9fe5e592b9daae4cddadf52719f5db", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=896aa4eae3cd9f463597e8717ac8722ff7050965", "patch": "@@ -469,6 +469,13 @@ find_bb_boundaries (basic_block bb)\n \t    make_edge (ENTRY_BLOCK_PTR, bb, 0);\n \t}\n \n+      /* __builtin_unreachable () may cause a barrier to be emitted in\n+\t the middle of a BB.  We need to split it in the same manner\n+\t as if the barrier were preceded by a control_flow_insn_p\n+\t insn.  */\n+      if (code == BARRIER && !flow_transfer_insn)\n+\tflow_transfer_insn = prev_nonnote_insn_bb (insn);\n+\n       /* In case we've previously seen an insn that effects a control\n \t flow transfer, split the block.  */\n       if (flow_transfer_insn && inside_basic_block_p (insn))"}, {"sha": "65022fc65e31699d2ccf0d3764c146b65bf97178", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=896aa4eae3cd9f463597e8717ac8722ff7050965", "patch": "@@ -3082,6 +3082,25 @@ prev_nonnote_insn (rtx insn)\n   return insn;\n }\n \n+/* Return the previous insn before INSN that is not a NOTE, but stop\n+   the search before we enter another basic block.  This routine does\n+   not look inside SEQUENCEs.  */\n+\n+rtx\n+prev_nonnote_insn_bb (rtx insn)\n+{\n+  while (insn)\n+    {\n+      insn = PREV_INSN (insn);\n+      if (insn == 0 || !NOTE_P (insn))\n+\tbreak;\n+      if (NOTE_INSN_BASIC_BLOCK_P (insn))\n+\treturn NULL_RTX;\n+    }\n+\n+  return insn;\n+}\n+\n /* Return the next insn after INSN that is not a DEBUG_INSN.  This\n    routine does not look inside SEQUENCEs.  */\n "}, {"sha": "c5839df4ecb6fe4965d89629f2c68cc5a8b1eeb4", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=896aa4eae3cd9f463597e8717ac8722ff7050965", "patch": "@@ -1675,6 +1675,7 @@ extern rtx last_call_insn (void);\n extern rtx previous_insn (rtx);\n extern rtx next_insn (rtx);\n extern rtx prev_nonnote_insn (rtx);\n+extern rtx prev_nonnote_insn_bb (rtx);\n extern rtx next_nonnote_insn (rtx);\n extern rtx next_nonnote_insn_bb (rtx);\n extern rtx prev_nondebug_insn (rtx);"}, {"sha": "06e50502bc49940a087c76600f5b66bfb94e6c80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=896aa4eae3cd9f463597e8717ac8722ff7050965", "patch": "@@ -1,3 +1,7 @@\n+2009-09-02  David Daney  <ddaney@caviumnetworks.com>\n+\n+\t* gcc.c-torture/compile/builtin_unreachable-1.c: New testcase.\n+\n 2009-09-03  Diego Novillo  <dnovillo@google.com>\n \n \t* gcc.dg/gomp/combined-1.c: Adjust expected pattern."}, {"sha": "dd32ca8066d2436eb4d427998154e88d26644bf4", "filename": "gcc/testsuite/gcc.c-torture/compile/builtin_unreachable-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fbuiltin_unreachable-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896aa4eae3cd9f463597e8717ac8722ff7050965/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fbuiltin_unreachable-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fbuiltin_unreachable-1.c?ref=896aa4eae3cd9f463597e8717ac8722ff7050965", "patch": "@@ -0,0 +1,6 @@\n+void bar (const char *);\n+void foo (void)\n+{\n+  bar (\"foo\");\n+  __builtin_unreachable ();\n+}"}]}