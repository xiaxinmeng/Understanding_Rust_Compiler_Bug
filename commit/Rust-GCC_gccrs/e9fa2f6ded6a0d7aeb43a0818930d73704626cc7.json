{"sha": "e9fa2f6ded6a0d7aeb43a0818930d73704626cc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlmYTJmNmRlZDZhMGQ3YWViNDNhMDgxODkzMGQ3MzcwNDYyNmNjNw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-02-01T00:30:46Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-02-01T00:30:46Z"}, "message": "PR c++/88983 - ICE with switch in constexpr function.\n\n\t* constexpr.c (cxx_eval_switch_expr): Use SWITCH_COND and SWITCH_BODY.\n\t(cxx_eval_constant_expression) <case COND_EXPR>: Don't look for the\n\tlabel in the else branch if we found it in the then branch.\n\n\t* g++.dg/cpp1y/constexpr-88983.C: New test.\n\nFrom-SVN: r268438", "tree": {"sha": "80a02bf472408a511fef7f08648d67741d08a72c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80a02bf472408a511fef7f08648d67741d08a72c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb9160aeb0a10681b1328f097fa5c9be6264d88f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb9160aeb0a10681b1328f097fa5c9be6264d88f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb9160aeb0a10681b1328f097fa5c9be6264d88f"}], "stats": {"total": 100, "additions": 97, "deletions": 3}, "files": [{"sha": "2a2aba3ad44bd5d049d097a950fbe7e2170035d6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e9fa2f6ded6a0d7aeb43a0818930d73704626cc7", "patch": "@@ -6,6 +6,11 @@\n \t* decl.c (reshape_init_r): Don't reshape a digested initializer.\n \tReturn the initializer for COMPOUND_LITERAL_P.\n \n+\tPR c++/88983 - ICE with switch in constexpr function.\n+\t* constexpr.c (cxx_eval_switch_expr): Use SWITCH_COND and SWITCH_BODY.\n+\t(cxx_eval_constant_expression) <case COND_EXPR>: Don't look for the\n+\tlabel in the else branch if we found it in the then branch.\n+\n 2019-01-30  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/88752 - ICE with lambda and constexpr if."}, {"sha": "923763faa0a03d57deb64de9ce63d2cb2314a207", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=e9fa2f6ded6a0d7aeb43a0818930d73704626cc7", "patch": "@@ -4140,13 +4140,13 @@ cxx_eval_switch_expr (const constexpr_ctx *ctx, tree t,\n \t\t      bool *non_constant_p, bool *overflow_p,\n \t\t      tree *jump_target)\n {\n-  tree cond = TREE_OPERAND (t, 0);\n+  tree cond = SWITCH_COND (t);\n   cond = cxx_eval_constant_expression (ctx, cond, false,\n \t\t\t\t       non_constant_p, overflow_p);\n   VERIFY_CONSTANT (cond);\n   *jump_target = cond;\n \n-  tree body = TREE_OPERAND (t, 1);\n+  tree body = SWITCH_BODY (t);\n   constexpr_ctx new_ctx = *ctx;\n   constexpr_switch_state css = css_default_not_seen;\n   new_ctx.css_state = &css;\n@@ -4681,14 +4681,27 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n     case COND_EXPR:\n       if (jump_target && *jump_target)\n \t{\n+\t  tree orig_jump = *jump_target;\n \t  /* When jumping to a label, the label might be either in the\n \t     then or else blocks, so process then block first in skipping\n \t     mode first, and if we are still in the skipping mode at its end,\n \t     process the else block too.  */\n \t  r = cxx_eval_constant_expression (ctx, TREE_OPERAND (t, 1),\n \t\t\t\t\t    lval, non_constant_p, overflow_p,\n \t\t\t\t\t    jump_target);\n-\t  if (*jump_target)\n+\t  /* It's possible that we found the label in the then block.  But\n+\t     it could have been followed by another jumping statement, e.g.\n+\t     say we're looking for case 1:\n+\t      if (cond)\n+\t\t{\n+\t\t  // skipped statements\n+\t\t  case 1:; // clears up *jump_target\n+\t\t  return 1; // and sets it to a RETURN_EXPR\n+\t\t}\n+\t      else { ... }\n+\t     in which case we need not go looking to the else block.\n+\t     (goto is not allowed in a constexpr function.)  */\n+\t  if (*jump_target == orig_jump)\n \t    r = cxx_eval_constant_expression (ctx, TREE_OPERAND (t, 2),\n \t\t\t\t\t      lval, non_constant_p, overflow_p,\n \t\t\t\t\t      jump_target);"}, {"sha": "989f4c5acec9b526cc13a15f1952d3b757a1051d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9fa2f6ded6a0d7aeb43a0818930d73704626cc7", "patch": "@@ -1,3 +1,8 @@\n+2019-01-31  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88983 - ICE with switch in constexpr function.\n+\t* g++.dg/cpp1y/constexpr-88983.C: New test.\n+\n 2019-01-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/88669"}, {"sha": "9d70601d4277c50a1ebb1a92ea3b122bd2dd1c8b", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-88983.C", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-88983.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9fa2f6ded6a0d7aeb43a0818930d73704626cc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-88983.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-88983.C?ref=e9fa2f6ded6a0d7aeb43a0818930d73704626cc7", "patch": "@@ -0,0 +1,71 @@\n+// PR c++/88983\n+// { dg-do compile { target c++14 } }\n+\n+constexpr int\n+fn1 (int ay)\n+{\n+  switch (ay)\n+    {\n+      if (1)\n+        {\n+          case 1:\n+            return 1;\n+        }\n+      else\n+        {\n+          default:;\n+        }\n+    }\n+\n+  return 0;\n+}\n+\n+constexpr int\n+fn2 (int ay)\n+{\n+  switch (ay)\n+    {\n+      if (1)\n+        {\n+          case 1:\n+\t    break;\n+        }\n+      else\n+        {\n+          default:;\n+        }\n+    }\n+\n+  return 0;\n+}\n+\n+constexpr int\n+fn3 (int ay)\n+{\n+  int i = 0;\n+  while (i++ < 100)\n+    {\n+      if (i == 1)\n+\treturn 1;\n+      switch (ay)\n+\t{\n+\t  if (1)\n+\t    {\n+\t      case 1:\n+\t\tcontinue;\n+\t    }\n+\t  else\n+\t    {\n+\t      default:;\n+\t      return -1;\n+\t    }\n+\t}\n+      return -1;\n+    }\n+\n+  return -1;\n+}\n+\n+static_assert (fn1 (1) == 1, \"\");\n+static_assert (fn2 (1) == 0, \"\");\n+static_assert (fn3 (1) == 1, \"\");"}]}