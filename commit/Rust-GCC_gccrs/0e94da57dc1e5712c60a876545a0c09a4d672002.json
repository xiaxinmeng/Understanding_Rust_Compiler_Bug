{"sha": "0e94da57dc1e5712c60a876545a0c09a4d672002", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU5NGRhNTdkYzFlNTcxMmM2MGE4NzY1NDVhMGMwOWE0ZDY3MjAwMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-04-23T04:58:00Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-04-23T04:58:00Z"}, "message": "compiler: Expose runtime code through Func_expression.\n\n    \n    Enables us to easily check if a Call_expression is a call to a runtime\n    function and, if so, which runtime function is corresponds to.\n    This will be used during escape analysis.\n    \n    Reviewed-on: https://go-review.googlesource.com/18544\n\nFrom-SVN: r235383", "tree": {"sha": "2cfb99ced2bf497d3daed25f022fed99a6e01693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cfb99ced2bf497d3daed25f022fed99a6e01693"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e94da57dc1e5712c60a876545a0c09a4d672002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e94da57dc1e5712c60a876545a0c09a4d672002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e94da57dc1e5712c60a876545a0c09a4d672002", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e94da57dc1e5712c60a876545a0c09a4d672002/comments", "author": null, "committer": null, "parents": [{"sha": "216f7526fef4db4a7f6510f4d48827bb4c55fc64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216f7526fef4db4a7f6510f4d48827bb4c55fc64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/216f7526fef4db4a7f6510f4d48827bb4c55fc64"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "6b2e105a2d31bf437c65ef3e79251bd6f63762b7", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=0e94da57dc1e5712c60a876545a0c09a4d672002", "patch": "@@ -1,4 +1,4 @@\n-97b358f525584e45fa2e3d83fc7d3a091900927a\n+944c3ca6ac7c204585fd73936894fe05de535b94\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "170d95703c6abfb0c4145334d010988d8e79a8fc", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=0e94da57dc1e5712c60a876545a0c09a4d672002", "patch": "@@ -1141,7 +1141,13 @@ Expression*\n Expression::make_func_reference(Named_object* function, Expression* closure,\n \t\t\t\tLocation location)\n {\n-  return new Func_expression(function, closure, location);\n+  Func_expression* fe = new Func_expression(function, closure, location);\n+\n+  // Detect references to builtin functions and set the runtime code if\n+  // appropriate.\n+  if (function->is_function_declaration())\n+    fe->set_runtime_code(Runtime::name_to_code(function->name()));\n+  return fe;\n }\n \n // Class Func_descriptor_expression."}, {"sha": "6c780607f2ddb937ac8622e9c0d0faac8e5f61a4", "filename": "gcc/go/gofrontend/expressions.h", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.h?ref=0e94da57dc1e5712c60a876545a0c09a4d672002", "patch": "@@ -11,6 +11,7 @@\n #include <mpc.h>\n \n #include \"operator.h\"\n+#include \"runtime.h\"\n \n class Gogo;\n class Translate_context;\n@@ -2149,7 +2150,8 @@ class Func_expression : public Expression\n   Func_expression(Named_object* function, Expression* closure,\n \t\t  Location location)\n     : Expression(EXPRESSION_FUNC_REFERENCE, location),\n-      function_(function), closure_(closure)\n+      function_(function), closure_(closure),\n+      runtime_code_(Runtime::NUMBER_OF_FUNCTIONS)\n   { }\n \n   // Return the object associated with the function.\n@@ -2163,6 +2165,23 @@ class Func_expression : public Expression\n   closure()\n   { return this->closure_; }\n \n+  // Return whether this is a reference to a runtime function.\n+  bool\n+  is_runtime_function() const\n+  { return this->runtime_code_ != Runtime::NUMBER_OF_FUNCTIONS; }\n+\n+  // Return the runtime code for this function expression.\n+  // Returns Runtime::NUMBER_OF_FUNCTIONS if this is not a reference to a\n+  // runtime function.\n+  Runtime::Function\n+  runtime_code() const\n+  { return this->runtime_code_; }\n+\n+  // Set the runtime code for this function expression.\n+  void\n+  set_runtime_code(Runtime::Function code)\n+  { this->runtime_code_ = code; }\n+\n   // Return a backend expression for the code of a function.\n   static Bexpression*\n   get_code_pointer(Gogo*, Named_object* function, Location loc);\n@@ -2204,6 +2223,8 @@ class Func_expression : public Expression\n   // be a struct holding pointers to all the variables referenced by\n   // this function and defined in enclosing functions.\n   Expression* closure_;\n+  // The runtime code for the referenced function.\n+  Runtime::Function runtime_code_;\n };\n \n // A function descriptor.  A function descriptor is a struct with a"}, {"sha": "64920250e4347f968e7be22fd240ccf1957aa60b", "filename": "gcc/go/gofrontend/runtime.cc", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2Fruntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2Fruntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fruntime.cc?ref=0e94da57dc1e5712c60a876545a0c09a4d672002", "patch": "@@ -402,3 +402,39 @@ Runtime::map_iteration_type()\n \t\t\t\tLinemap::predeclared_location());\n   return Type::make_array_type(runtime_function_type(RFT_POINTER), iexpr);\n }\n+\n+\n+// Get the runtime code for a named builtin function.  This is used as a helper\n+// when creating function references for call expressions.  Every reference to\n+// a builtin runtime function should have the associated runtime code.  If the\n+// name is ambiguous and can refer to many runtime codes, return\n+// NUMBER_OF_FUNCTIONS.\n+\n+Runtime::Function\n+Runtime::name_to_code(const std::string& name)\n+{\n+  Function code = Runtime::NUMBER_OF_FUNCTIONS;\n+\n+  // Aliases seen in function declaration code.\n+  // TODO(cmang): Add other aliases.\n+  if (name == \"new\")\n+    code = Runtime::NEW;\n+  else if (name == \"close\")\n+    code = Runtime::CLOSE;\n+  else if (name == \"copy\")\n+    code = Runtime::COPY;\n+  else if (name == \"append\")\n+    code = Runtime::APPEND;\n+  else if (name == \"delete\")\n+    code = Runtime::MAPDELETE;\n+  else\n+    {\n+      // Look through the known names for a match.\n+      for (size_t i = 0; i < Runtime::NUMBER_OF_FUNCTIONS; i++)\n+\t{\n+\t  if (strcmp(runtime_functions[i].name, name.c_str()) == 0)\n+\t    code = static_cast<Runtime::Function>(i);\n+\t}\n+    }\n+  return code;\n+}"}, {"sha": "636e1965006fe466c1d9fd6aa18f66018902a4a0", "filename": "gcc/go/gofrontend/runtime.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e94da57dc1e5712c60a876545a0c09a4d672002/gcc%2Fgo%2Fgofrontend%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fruntime.h?ref=0e94da57dc1e5712c60a876545a0c09a4d672002", "patch": "@@ -43,6 +43,10 @@ class Runtime\n   static Type*\n   map_iteration_type();\n \n+  // Return the runtime code for a named builtin function.\n+  static Function\n+  name_to_code(const std::string&);\n+\n  private:\n   static Named_object*\n   runtime_declaration(Function);"}]}