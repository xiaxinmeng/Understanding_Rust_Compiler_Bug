{"sha": "821014aafd47b48adc1ea3fd02b90bda6d64cfd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIxMDE0YWFmZDQ3YjQ4YWRjMWVhM2ZkMDJiOTBiZGE2ZDY0Y2ZkNQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2011-02-07T21:06:42Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2011-02-07T21:06:42Z"}, "message": "re PR target/46997 (new ia64 vector instructions are broken on HP-UX (big-endian))\n\n2011-02-07  Steve Ellcey  <sje@cup.hp.com>\n\n\tPR target/46997\n\t* vect.md (vec_interleave_highv2sf): Change fmix for TARGET_BIG_ENDIAN.\n\t(vec_interleave_lowv2sf): Ditto.\n\t(vec_extract_evenv2sf): Add TARGET_BIG_ENDIAN check.\n\t(vec_extract_oddv2sf): Ditto.\n\nFrom-SVN: r169904", "tree": {"sha": "cb8b245a386cd3819eb76943116f441829e1776b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb8b245a386cd3819eb76943116f441829e1776b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/821014aafd47b48adc1ea3fd02b90bda6d64cfd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821014aafd47b48adc1ea3fd02b90bda6d64cfd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/821014aafd47b48adc1ea3fd02b90bda6d64cfd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821014aafd47b48adc1ea3fd02b90bda6d64cfd5/comments", "author": null, "committer": null, "parents": [{"sha": "62dea57d86bde189ec5466bcb02c8901e00daeb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62dea57d86bde189ec5466bcb02c8901e00daeb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62dea57d86bde189ec5466bcb02c8901e00daeb1"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "fd78ff55b9b518dec4d8f66ab7443422018928a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821014aafd47b48adc1ea3fd02b90bda6d64cfd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821014aafd47b48adc1ea3fd02b90bda6d64cfd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=821014aafd47b48adc1ea3fd02b90bda6d64cfd5", "patch": "@@ -1,3 +1,11 @@\n+2011-02-07  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/46997\n+\t* vect.md (vec_interleave_highv2sf): Change fmix for TARGET_BIG_ENDIAN.\n+\t(vec_interleave_lowv2sf): Ditto.\n+\t(vec_extract_evenv2sf): Add TARGET_BIG_ENDIAN check.\n+\t(vec_extract_oddv2sf): Ditto.\n+\n 2011-02-07  Mike Stump  <mikestump@comcast.net>\n \n \tPR target/42333"}, {"sha": "1684c8092c2fdba64e6b8090a6667b1704d74370", "filename": "gcc/config/ia64/vect.md", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821014aafd47b48adc1ea3fd02b90bda6d64cfd5/gcc%2Fconfig%2Fia64%2Fvect.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821014aafd47b48adc1ea3fd02b90bda6d64cfd5/gcc%2Fconfig%2Fia64%2Fvect.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fvect.md?ref=821014aafd47b48adc1ea3fd02b90bda6d64cfd5", "patch": "@@ -1490,7 +1490,7 @@\n {\n   /* Recall that vector elements are numbered in memory order.  */\n   if (TARGET_BIG_ENDIAN)\n-    return \"%,fmix.r %0 = %F1, %F2\";\n+    return \"%,fmix.l %0 = %F1, %F2\";\n   else\n     return \"%,fmix.l %0 = %F2, %F1\";\n }\n@@ -1507,7 +1507,7 @@\n {\n   /* Recall that vector elements are numbered in memory order.  */\n   if (TARGET_BIG_ENDIAN)\n-    return \"%,fmix.l %0 = %F1, %F2\";\n+    return \"%,fmix.r %0 = %F1, %F2\";\n   else\n     return \"%,fmix.r %0 = %F2, %F1\";\n }\n@@ -1534,21 +1534,29 @@\n   [(match_operand:V2SF 0 \"gr_register_operand\" \"\")\n    (match_operand:V2SF 1 \"gr_register_operand\" \"\")\n    (match_operand:V2SF 2 \"gr_register_operand\" \"\")]\n-  \"!TARGET_BIG_ENDIAN\"\n+  \"\"\n {\n-  emit_insn (gen_vec_interleave_lowv2sf (operands[0], operands[1],\n-\t\t\t\t\t operands[2]));\n+  if (TARGET_BIG_ENDIAN)\n+    emit_insn (gen_vec_interleave_highv2sf (operands[0], operands[1],\n+\t\t\t\t\t    operands[2]));\n+  else\n+    emit_insn (gen_vec_interleave_lowv2sf (operands[0], operands[1],\n+\t\t\t\t\t   operands[2]));\n   DONE;\n })\n \n (define_expand \"vec_extract_oddv2sf\"\n   [(match_operand:V2SF 0 \"gr_register_operand\" \"\")\n    (match_operand:V2SF 1 \"gr_register_operand\" \"\")\n    (match_operand:V2SF 2 \"gr_register_operand\" \"\")]\n-  \"!TARGET_BIG_ENDIAN\"\n+  \"\"\n {\n-  emit_insn (gen_vec_interleave_highv2sf (operands[0], operands[1],\n-\t\t\t\t\t  operands[2]));\n+  if (TARGET_BIG_ENDIAN)\n+    emit_insn (gen_vec_interleave_lowv2sf (operands[0], operands[1],\n+\t\t\t\t\t   operands[2]));\n+  else\n+    emit_insn (gen_vec_interleave_highv2sf (operands[0], operands[1],\n+\t\t\t\t\t    operands[2]));\n   DONE;\n })\n "}]}