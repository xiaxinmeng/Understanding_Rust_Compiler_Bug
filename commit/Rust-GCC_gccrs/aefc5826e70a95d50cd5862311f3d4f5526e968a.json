{"sha": "aefc5826e70a95d50cd5862311f3d4f5526e968a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmYzU4MjZlNzBhOTVkNTBjZDU4NjIzMTFmM2Q0ZjU1MjZlOTY4YQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-02T07:57:15Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-02T07:57:15Z"}, "message": "fixunssfsi.c: Update copyright.\n\n\t* config/h8300/fixunssfsi.c: Update copyright.\n\tFix comment typos.\n\tFix formatting.\n\t* config/h8300/h8300.c: Update copyright.\n\tEliminate warnings.\n\nFrom-SVN: r48460", "tree": {"sha": "5236e13b0e7ed69c4fc2de34ec3bba44fc3444a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5236e13b0e7ed69c4fc2de34ec3bba44fc3444a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aefc5826e70a95d50cd5862311f3d4f5526e968a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aefc5826e70a95d50cd5862311f3d4f5526e968a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aefc5826e70a95d50cd5862311f3d4f5526e968a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aefc5826e70a95d50cd5862311f3d4f5526e968a/comments", "author": null, "committer": null, "parents": [{"sha": "b1c9bc51b6470f2e94891d4938294eb148bafb76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c9bc51b6470f2e94891d4938294eb148bafb76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c9bc51b6470f2e94891d4938294eb148bafb76"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "36b9f990cda0b1455163b5691915abbf2dfdbc69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aefc5826e70a95d50cd5862311f3d4f5526e968a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aefc5826e70a95d50cd5862311f3d4f5526e968a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aefc5826e70a95d50cd5862311f3d4f5526e968a", "patch": "@@ -1,3 +1,11 @@\n+2002-01-02  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/fixunssfsi.c: Update copyright.\n+\tFix comment typos.\n+\tFix formatting.\n+\t* config/h8300/h8300.c: Update copyright.\n+\tEliminate warnings.\n+\n 2002-01-02  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/romp/romp.c: Fix comment formatting."}, {"sha": "80339f2599d86ca458608e00f9a076475bf72fd4", "filename": "gcc/config/h8300/fixunssfsi.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aefc5826e70a95d50cd5862311f3d4f5526e968a/gcc%2Fconfig%2Fh8300%2Ffixunssfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aefc5826e70a95d50cd5862311f3d4f5526e968a/gcc%2Fconfig%2Fh8300%2Ffixunssfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Ffixunssfsi.c?ref=aefc5826e70a95d50cd5862311f3d4f5526e968a", "patch": "@@ -1,6 +1,6 @@\n /* More subroutines needed by GCC output code on some machines.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1989, 1992, 2001  Free Software Foundation, Inc.\n+/* Copyright (C) 1989, 1992, 2001, 2002  Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -29,15 +29,15 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* The libgcc2.c implementation gets confused by our type setup and creates\n-   a directly recursive call, so we do our own implementation.  For the h8300,\n-   that's in lib1funcs.asm, for h8300h / h8s, it's here.  */\n+   a directly recursive call, so we do our own implementation.  For\n+   the H8/300, that's in lib1funcs.asm, for H8/300H and H8/S, it's here.  */\n \n #ifndef __H8300__\n long\n __fixunssfsi (float a)\n {\n   if (a >= (float) 32768L)\n-    return (long) (a -32768L) +32768L;\n+    return (long) (a - 32768L) + 32768L;\n   return (long) a;\n }\n #endif"}, {"sha": "2a0e260de65e9ce5db29c5db6ea082fb7062b27d", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aefc5826e70a95d50cd5862311f3d4f5526e968a/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aefc5826e70a95d50cd5862311f3d4f5526e968a/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=aefc5826e70a95d50cd5862311f3d4f5526e968a", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines for insn-output.c for Hitachi H8/300.\n-   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001\n-   Free Software Foundation, Inc. \n+   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n+   2001, 2002 Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com),\n    Jim Wilson (wilson@cygnus.com), and Doug Evans (dje@cygnus.com).\n \n@@ -2519,6 +2519,8 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"shll.w\\t%e0\\n\\tmov.w\\t%e0,%f0\\n\\txor.w\\t%e0,%e0\\n\\trotxl.l\\t%S0\";\n \t      goto end;\n+\t    case SHIFT_ASHIFTRT:\n+\t      abort ();\n \t    }\n \t}\n       else if ((TARGET_H8300 && count == 16)\n@@ -2933,7 +2935,7 @@ emit_a_rotate (code, operands)\n \n   /* Determine the faster direction.  After this phase, amount will be\n      at most a half of GET_MODE_BITSIZE (mode).  */\n-  if ((unsigned int) amount > GET_MODE_BITSIZE (mode) / 2)\n+  if ((unsigned int) amount > GET_MODE_BITSIZE (mode) / 2U)\n     {\n       /* Flip the direction.  */\n       amount = GET_MODE_BITSIZE (mode) - amount;\n@@ -3435,7 +3437,7 @@ h8300_adjust_insn_length (insn, length)\n \n       /* Determine the faster direction.  After this phase, amount\n \t will be at most a half of GET_MODE_BITSIZE (mode).  */\n-      if ((unsigned int) amount > GET_MODE_BITSIZE (mode) / 2)\n+      if ((unsigned int) amount > GET_MODE_BITSIZE (mode) / 2U)\n \t/* Flip the direction.  */\n \tamount = GET_MODE_BITSIZE (mode) - amount;\n "}]}