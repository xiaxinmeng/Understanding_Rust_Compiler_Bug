{"sha": "68f7b0613fceb32f45de2928d0b05a88b0641d0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhmN2IwNjEzZmNlYjMyZjQ1ZGUyOTI4ZDBiMDVhODhiMDY0MWQwZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-04-17T12:12:51Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-04-17T12:12:51Z"}, "message": "sfp-machine.h (__gcc_CMPtype): New typedef.\n\n\t* config/arm/sfp-machine.h (__gcc_CMPtype): New typedef.\n\t(CMPtype): Define as __gcc_CMPtype.\n\nFrom-SVN: r146255", "tree": {"sha": "2d6432dd9de2bb43cd6f2463b19065c397834070", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d6432dd9de2bb43cd6f2463b19065c397834070"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68f7b0613fceb32f45de2928d0b05a88b0641d0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f7b0613fceb32f45de2928d0b05a88b0641d0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f7b0613fceb32f45de2928d0b05a88b0641d0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f7b0613fceb32f45de2928d0b05a88b0641d0f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8f59a33dc5af78faf21f1afb48358ae1918926d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f59a33dc5af78faf21f1afb48358ae1918926d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f59a33dc5af78faf21f1afb48358ae1918926d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "767ca08eb709b7afd236d90a26f053b700cef822", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f7b0613fceb32f45de2928d0b05a88b0641d0f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f7b0613fceb32f45de2928d0b05a88b0641d0f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68f7b0613fceb32f45de2928d0b05a88b0641d0f", "patch": "@@ -1,3 +1,8 @@\n+2009-04-17  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/arm/sfp-machine.h (__gcc_CMPtype): New typedef.\n+\t(CMPtype): Define as __gcc_CMPtype.\n+\n 2009-04-17  Aurelien Jarno  <aurelien@aurel32.net>\n \n \t* config.gcc: Add soft-fp/t-softfp and i386/t-linux to tmake_file"}, {"sha": "4a456ae03a23c61b7d0a605cdd21a01162641836", "filename": "gcc/config/arm/sfp-machine.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f7b0613fceb32f45de2928d0b05a88b0641d0f/gcc%2Fconfig%2Farm%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f7b0613fceb32f45de2928d0b05a88b0641d0f/gcc%2Fconfig%2Farm%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsfp-machine.h?ref=68f7b0613fceb32f45de2928d0b05a88b0641d0f", "patch": "@@ -3,6 +3,11 @@\n #define _FP_WS_TYPE\t\tsigned long\n #define _FP_I_TYPE\t\tlong\n \n+/* The type of the result of a floating point comparison.  This must\n+   match `__libgcc_cmp_return__' in GCC for the target.  */\n+typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n+#define CMPtype __gcc_CMPtype\n+\n #define _FP_MUL_MEAT_S(R,X,Y)\t\t\t\t\\\n   _FP_MUL_MEAT_1_wide(_FP_WFRACBITS_S,R,X,Y,umul_ppmm)\n #define _FP_MUL_MEAT_D(R,X,Y)\t\t\t\t\\"}]}