{"sha": "44382959be096e1ad343e6d08389401e853cf257", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQzODI5NTliZTA5NmUxYWQzNDNlNmQwODM4OTQwMWU4NTNjZjI1Nw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2000-11-27T00:05:39Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-11-27T00:05:39Z"}, "message": "acinclude.m4: Only sanity check for compiler version when configuring.\n\n\n\n2000-11-26  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4: Only sanity check for compiler version when\n\tconfiguring. More fixes for 'make clean'.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r37768", "tree": {"sha": "6fd98118611e6193ecd8c2ae45c9493a358007c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fd98118611e6193ecd8c2ae45c9493a358007c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44382959be096e1ad343e6d08389401e853cf257", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44382959be096e1ad343e6d08389401e853cf257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44382959be096e1ad343e6d08389401e853cf257", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44382959be096e1ad343e6d08389401e853cf257/comments", "author": null, "committer": null, "parents": [{"sha": "187d3a0d37e7af06c07702cf11cadbcdf72cf083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187d3a0d37e7af06c07702cf11cadbcdf72cf083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187d3a0d37e7af06c07702cf11cadbcdf72cf083"}], "stats": {"total": 2272, "additions": 1115, "deletions": 1157}, "files": [{"sha": "cdaecde941871347c54323d933281d4ad0b39912", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=44382959be096e1ad343e6d08389401e853cf257", "patch": "@@ -1,3 +1,10 @@\n+2000-11-26  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* acinclude.m4: Only sanity check for compiler version when\n+\tconfiguring. More fixes for 'make clean'.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t\n 2000-11-26  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* libmath/Makefile.am (EXTRA_LONG_DOUBLE_yes): Remove cabsl.c "}, {"sha": "8990f6a879ae79394daaec1aec69ae707395aad9", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 42, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=44382959be096e1ad343e6d08389401e853cf257", "patch": "@@ -135,48 +135,7 @@ MULTICLEAN = true\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS = \\\n-\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n-\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n-\t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n-\t\"CFLAGS=$(CFLAGS)\" \\\n-\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n-\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n-\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n-\t\"INSTALL=$(INSTALL)\" \\\n-\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n-\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n-\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n-\t\"LDFLAGS=$(LDFLAGS)\" \\\n-\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n-\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\"MAKE=$(MAKE)\" \\\n-\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n-\t\"SHELL=$(SHELL)\" \\\n-\t\"EXPECT=$(EXPECT)\" \\\n-\t\"RUNTEST=$(RUNTEST)\" \\\n-\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n-\t\"exec_prefix=$(exec_prefix)\" \\\n-\t\"infodir=$(infodir)\" \\\n-\t\"libdir=$(libdir)\" \\\n-\t\"includedir=$(includedir)\" \\\n-\t\"prefix=$(prefix)\" \\\n-\t\"tooldir=$(tooldir)\" \\\n-\t\"AR=$(AR)\" \\\n-\t\"AS=$(AS)\" \\\n-\t\"CC=$(CC)\" \\\n-\t\"CXX=$(CXX)\" \\\n-\t\"LD=$(LD)\" \\\n-\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"RANLIB=$(RANLIB)\" \\\n-\t\"NM=$(NM)\" \\\n-\t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \\\n-\t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n-\t\"DESTDIR=$(DESTDIR)\" \\\n-\t\"WERROR=$(WERROR)\" \n+AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"EXPECT=$(EXPECT)\" \t\"RUNTEST=$(RUNTEST)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"CC=$(CC)\" \t\"CXX=$(CXX)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\" \n \n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs"}, {"sha": "f7fea70cf8d92c25e3170b876ab433d95f3a3bdc", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=44382959be096e1ad343e6d08389401e853cf257", "patch": "@@ -173,14 +173,19 @@ dnl specific precautions need to be taken.\n dnl \n dnl GLIBCPP_CHECK_COMPILER_VERSION\n AC_DEFUN(GLIBCPP_CHECK_COMPILER_VERSION, [\n-  # Sanity check that g++ is capable of dealing with v-3.\n-  AC_MSG_CHECKING([for g++ that will successfully compile this code])\n-  AC_EGREP_CPP([ok], [\n-  #if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \n+if test ! -f stamp-sanity-compiler; then\n+  AC_MSG_CHECKING([for g++ that will successfully compile libstdc++-v3])\n+  AC_LANG_SAVE\n+  AC_LANG_CPLUSPLUS\n+  AC_EGREP_CPP(ok, [\n+  #if (__GNUC__ > 2) || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \n     ok\n   #endif\n   ], gpp_satisfactory=yes, AC_MSG_ERROR([please upgrade to gcc-2.95 or above]))\n+  AC_LANG_RESTORE\n   AC_MSG_RESULT($gpp_satisfactory)\n+  touch stamp-sanity-compiler\n+fi\n ])\n \n "}, {"sha": "33ac4140f7d72a9c3714af0eba74e3bf994686fd", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=44382959be096e1ad343e6d08389401e853cf257", "patch": "@@ -185,14 +185,19 @@ dnl specific precautions need to be taken.\n dnl \n dnl GLIBCPP_CHECK_COMPILER_VERSION\n AC_DEFUN(GLIBCPP_CHECK_COMPILER_VERSION, [\n-  # Sanity check that g++ is capable of dealing with v-3.\n-  AC_MSG_CHECKING([for g++ that will successfully compile this code])\n-  AC_EGREP_CPP([ok], [\n-  #if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \n+if test ! -f stamp-sanity-compiler; then\n+  AC_MSG_CHECKING([for g++ that will successfully compile libstdc++-v3])\n+  AC_LANG_SAVE\n+  AC_LANG_CPLUSPLUS\n+  AC_EGREP_CPP(ok, [\n+  #if (__GNUC__ > 2) || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \n     ok\n   #endif\n   ], gpp_satisfactory=yes, AC_MSG_ERROR([please upgrade to gcc-2.95 or above]))\n+  AC_LANG_RESTORE\n   AC_MSG_RESULT($gpp_satisfactory)\n+  touch stamp-sanity-compiler\n+fi\n ])\n \n "}, {"sha": "e94df14c9700d0f34d8c826ba8db8d542d785ed4", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=44382959be096e1ad343e6d08389401e853cf257", "patch": "@@ -291,15 +291,6 @@\n /* Define if you have the c_logl function.  */\n #undef HAVE_C_LOGL\n \n-/* Define if you have the cabs function.  */\n-#undef HAVE_CABS\n-\n-/* Define if you have the cabsf function.  */\n-#undef HAVE_CABSF\n-\n-/* Define if you have the cabsl function.  */\n-#undef HAVE_CABSL\n-\n /* Define if you have the carg function.  */\n #undef HAVE_CARG\n "}, {"sha": "50f5d3f31ad5495f7b1f3e5b46af692ae1d0ee00", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1084, "deletions": 1078, "changes": 2162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=44382959be096e1ad343e6d08389401e853cf257"}, {"sha": "32be74c179fd36130c72c740d410506365cf46cd", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44382959be096e1ad343e6d08389401e853cf257/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=44382959be096e1ad343e6d08389401e853cf257", "patch": "@@ -113,31 +113,18 @@ AUTOMAKE_OPTIONS = 1.3 cygnus\n \n noinst_LTLIBRARIES = libmath.la\n \n-EXTRA_LONG_DOUBLE_yes = \\\n-\tccosl.c cexpl.c c_logl.c clog10l.c cpowl.c csinhl.c \\\n-\tcsqrtl.c ctanhl.c ctanl.c cargl.c hypotl.c \\\n-\tsignbitl.c\n+EXTRA_LONG_DOUBLE_yes =  \tccosl.c cexpl.c c_logl.c clog10l.c cpowl.c csinhl.c \tcsqrtl.c ctanhl.c ctanl.c cargl.c hypotl.c \tsignbitl.c\n \n \n-EXTRA_DIST = \\\n-\tccos.c ccosf.c ccosh.c ccoshf.c ccoshl.c \\\n-\tcexp.c cexpf.c c_log.c c_logf.c  clog10.c clog10f.c \\\n-\tcpow.c cpowf.c csin.c csinf.c csinh.c csinhf.c \\\n-\tcsinl.c csqrt.c csqrtf.c  ctan.c ctanf.c ctanh.c \\\n-\tctanhf.c  carg.c cargf.c hypot.c hypotf.c\\\n-\tatan2f.c expf.c \\\n-\t$(EXTRA_LONG_DOUBLE_yes) \n+EXTRA_DIST =  \tccos.c ccosf.c ccosh.c ccoshf.c ccoshl.c \tcexp.c cexpf.c c_log.c c_logf.c  clog10.c clog10f.c \tcpow.c cpowf.c csin.c csinf.c csinh.c csinhf.c \tcsinl.c csqrt.c csqrtf.c  ctan.c ctanf.c ctanh.c \tctanhf.c  carg.c cargf.c hypot.c hypotf.c \tatan2f.c expf.c \t$(EXTRA_LONG_DOUBLE_yes) \n \n \n-libmath_la_LIBADD = \\\n-\t@LIBMATHOBJS@ \\\n-\t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n+libmath_la_LIBADD =  \t@LIBMATHOBJS@ \t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n \n \n libmath_la_DEPENDENCIES = $(libmath_la_LIBADD)\n \n-libmath_la_SOURCES = \\\n-\tsignbit.c signbitf.c\n+libmath_la_SOURCES =  \tsignbit.c signbitf.c\n \n \n LINK = $(LIBTOOL) --mode=link \"$(CCLD)\" $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n@@ -151,9 +138,7 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n CSHADOW_INCLUDES = @CSHADOW_INCLUDES@\n \n-INCLUDES = \\\n-\t-I$(GLIBCPP_INCLUDE_DIR) -I$(top_builddir)/include  \\\n-\t$(TOPLEVEL_INCLUDES) \n+INCLUDES =  \t-I$(GLIBCPP_INCLUDE_DIR) -I$(top_builddir)/include  \t$(TOPLEVEL_INCLUDES) \n \n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../config.h"}]}