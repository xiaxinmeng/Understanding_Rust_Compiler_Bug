{"sha": "e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNhYTllYmFmNzZiOTA3Njg5Nzc2MmU4ZWMyOGU3NTQyMzM4YzNmOQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-08-22T16:54:02Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-08-22T16:54:02Z"}, "message": "Centralize PICFLAG configuration\n\n\tconfig:\n\t* picflag.m4: New file.\n\n\tgcc:\n\t* configure.ac (GCC_PICFLAG_FOR_TARGET): Call it.\n\t(PICFLAG_FOR_TARGET): Substitute.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n\tgcc/ada:\n\t* gcc-interface/Makefile.in (PICFLAG_FOR_TARGET): New.\n\t(GNATLIBCFLAGS_FOR_C): Replace\n\tTARGET_LIBGCC2_CFLAGS by PICFLAG_FOR_TARGET.\n\t(gnatlib-shared-default, gnatlib-shared-dual-win32)\n\t(gnatlib-shared-win32, gnatlib-shared-darwin, gnatlib-shared)\n\t(gnatlib-sjlj, gnatlib-zcx): Likewise.\n\n\tlibada:\n\t* configure.ac: Include ../config/picflag.m4.\n\t(GCC_PICFLAG): Call it.\n\tSubstitute.\n\t* configure: Regenerate.\n\t* Makefile.in (TARGET_LIBGCC2_CFLAGS): Replace by PICFLAG.\n\t(GNATLIBCFLAGS_FOR_C): Replace TARGET_LIBGCC2_CFLAGS by PICFLAG.\n\t(LIBADA_FLAGS_TO_PASS): Pass PICFLAG as PICFLAG_FOR_TARGET.\n\tDon't include $(GCC_DIR)/libgcc.mvars.\n\n\tlibiberty:\n\t* aclocal.m4: Include ../config/picflag.m4.\n\t* configure.ac (GCC_PICFLAG): Call it.\n\t(enable_shared): Clear PICFLAG unless shared.\n\t* configure: Regenerate.\n\nFrom-SVN: r177967", "tree": {"sha": "9d2d55b0c248cd5196e2b1e53daa710fc4f00e33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d2d55b0c248cd5196e2b1e53daa710fc4f00e33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb3e9f604784afbcd4fd641ad913e92b25effd0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb3e9f604784afbcd4fd641ad913e92b25effd0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb3e9f604784afbcd4fd641ad913e92b25effd0b"}], "stats": {"total": 481, "additions": 416, "deletions": 65}, "files": [{"sha": "047cdf5f007b8558d5d0ba63b813b528373777c5", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -1,3 +1,7 @@\n+2011-08-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* picflag.m4: New file.\n+\n 2011-07-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* elf.m4 (target_elf): Remove *-netware*."}, {"sha": "f6f1b444e40bf0db73e4a966af2c262c57bf9c6f", "filename": "config/picflag.m4", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/config%2Fpicflag.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/config%2Fpicflag.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fpicflag.m4?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -0,0 +1,95 @@\n+# _GCC_PICFLAG(FLAG, DISPATCH)\n+# ----------------------------\n+# Store PIC flag corresponding to DISPATCH triplet in FLAG.\n+# Explit use of -fpic in CFLAGS corresponding to FLAG overrides default.\n+AC_DEFUN([_GCC_PICFLAG], [\n+\n+case \"${$2}\" in\n+    # PIC is the default on some targets or must not be used.\n+    *-*-darwin*)\n+\t# PIC is the default on this platform\n+\t# Common symbols not allowed in MH_DYLIB files\n+\t$1=-fno-common\n+\t;;\n+    alpha*-dec-osf5*)\n+\t# PIC is the default.\n+\t;;\n+    hppa*64*-*-hpux*)\n+\t# PIC is the default for 64-bit PA HP-UX.\n+\t;;\n+    i[[34567]]86-*-cygwin* | i[[34567]]86-*-mingw* | x86_64-*-mingw*)\n+\t;;\n+    i[[34567]]86-*-interix3*)\n+\t# Interix 3.x gcc -fpic/-fPIC options generate broken code.\n+\t# Instead, we relocate shared libraries at runtime.\n+\t;;\n+    i[[34567]]86-*-nto-qnx*)\n+\t# QNX uses GNU C++, but need to define -shared option too, otherwise\n+\t# it will coredump.\n+\t$1='-fPIC -shared'\n+\t;;\n+    i[[34567]]86-pc-msdosdjgpp*)\n+\t# DJGPP does not support shared libraries at all.\n+\t;;\n+    ia64*-*-hpux*)\n+\t# On IA64 HP-UX, PIC is the default but the pic flag\n+\t# sets the default TLS model and affects inlining.\n+\t$1=-fPIC\n+\t;;\n+    mips-sgi-irix6*)\n+\t# PIC is the default.\n+\t;;\n+    rs6000-ibm-aix* | powerpc-ibm-aix*)\n+\t# All AIX code is PIC.\n+\t;;\n+\n+    # Some targets support both -fPIC and -fpic, but prefer the latter.\n+    # FIXME: Why?\n+    i[[34567]]86-*-* | x86_64-*-*)\n+\t$1=-fpic\n+\t;;\n+    m68k-*-*)\n+\t$1=-fpic\n+\t;;\n+    s390*-*-*)\n+\t$1=-fpic\n+\t;;\n+    # FIXME: Override -fPIC default in libgcc only? \n+    sh-*-linux* | sh[[2346lbe]]*-*-linux*)\n+\t$1=-fpic\n+\t;;\n+    # FIXME: Simplify to sh*-*-netbsd*?\n+    sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n+      sh64-*-netbsd* | sh64l*-*-netbsd*)\n+\t$1=-fpic\n+\t;;\n+    # Default to -fPIC unless specified otherwise.\n+    *)\n+\t$1=-fPIC\n+\t;;\n+esac\n+\n+# If the user explicitly uses -fpic/-fPIC, keep that.\n+case \"${m4_bpatsubsts($1, PICFLAG, CFLAGS)}\" in\n+    *-fpic*)\n+\t$1=-fpic\n+\t;;\n+    *-fPIC*)\n+\t$1=-fPIC\n+\t;;\n+esac\n+])\n+\n+# GCC_PICFLAG\n+# -----------\n+# Store host PIC flag in PICFLAG.\n+AC_DEFUN([GCC_PICFLAG], [\n+  AC_REQUIRE([AC_CANONICAL_HOST])\n+  _GCC_PICFLAG([PICFLAG], [host])])\n+\n+# GCC_PICFLAG_FOR_TARGET\n+# ----------------------\n+# Store target PIC flag in PICFLAG_FOR_TARGET.\n+AC_DEFUN([GCC_PICFLAG_FOR_TARGET], [\n+  AC_REQUIRE([AC_CANONICAL_TARGET])\n+  _GCC_PICFLAG([PICFLAG_FOR_TARGET], [target])])"}, {"sha": "d11c5ceb70bf9a100a1711d3c3955a9a814de2e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -1,3 +1,10 @@\n+2011-08-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (GCC_PICFLAG_FOR_TARGET): Call it.\n+\t(PICFLAG_FOR_TARGET): Substitute.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n 2011-08-22  Dodji Seketeli  <dodji@redhat.com>\n \n \t* c-family/c-pch.c (c_common_read_pch): Re-set line table right"}, {"sha": "06028cc051f4d057e0d1e6444cce1a12b33c0fd4", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -114,6 +114,7 @@ m4_include([../config/lib-ld.m4])\n m4_include([../config/lib-link.m4])\n m4_include([../config/lib-prefix.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/picflag.m4])\n m4_include([../config/progtest.m4])\n m4_include([../config/stdint.m4])\n m4_include([../config/warnings.m4])"}, {"sha": "4b32ee7c12b80fe36196dafd1da1e9c78aff527f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -1,3 +1,12 @@\n+2011-08-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gcc-interface/Makefile.in (PICFLAG_FOR_TARGET): New.\n+\t(GNATLIBCFLAGS_FOR_C): Replace\n+\tTARGET_LIBGCC2_CFLAGS by PICFLAG_FOR_TARGET.\n+\t(gnatlib-shared-default, gnatlib-shared-dual-win32)\n+\t(gnatlib-shared-win32, gnatlib-shared-darwin, gnatlib-shared)\n+\t(gnatlib-sjlj, gnatlib-zcx): Likewise.\n+\n 2011-08-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/Makefile.in (raise-gcc.o): Fix previous change."}, {"sha": "044085592ea35eaaedbc8dfbc123f4a28e04a155", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -111,10 +111,11 @@ NO_SIBLING_ADAFLAGS=-fno-optimize-sibling-calls\n NO_REORDER_ADAFLAGS=-fno-toplevel-reorder\n GNATLIBFLAGS = -gnatpg -nostdinc\n GNATLIBCFLAGS = -g -O2\n+PICFLAG_FOR_TARGET = @PICFLAG_FOR_TARGET@\n # Pretend that _Unwind_GetIPInfo is available for the target by default.  This\n # should be autodetected during the configuration of libada and passed down to\n # here, but we need something for --disable-libada and hope for the best.\n-GNATLIBCFLAGS_FOR_C = $(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS) -fexceptions \\\n+GNATLIBCFLAGS_FOR_C = $(GNATLIBCFLAGS) $(PICFLAG_FOR_TARGET) -fexceptions \\\n \t-DIN_RTS -DHAVE_GETIPINFO\n ALL_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS)\n MOST_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(SOME_ADAFLAGS)\n@@ -2482,22 +2483,22 @@ gnatlib: ../stamp-gnatlib1-$(RTSDIR) ../stamp-gnatlib2-$(RTSDIR)\n gnatlib-shared-default:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n-\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(PICFLAG_FOR_TARGET)\" \\\n \t     GNATLIBCFLAGS_FOR_C=\"$(GNATLIBCFLAGS_FOR_C)\" \\\n \t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n \t$(RM) $(RTSDIR)/libgna*$(soext)\n \tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n                 | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -shared $(GNATLIBCFLAGS) \\\n-\t\t$(TARGET_LIBGCC2_CFLAGS) \\\n+\t\t$(PICFLAG_FOR_TARGET) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(MISCLIB) -lm\n \tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n                 | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -shared $(GNATLIBCFLAGS) \\\n-\t\t$(TARGET_LIBGCC2_CFLAGS) \\\n+\t\t$(PICFLAG_FOR_TARGET) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS)libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n@@ -2529,7 +2530,7 @@ gnatlib-shared-dual:\n gnatlib-shared-dual-win32:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n-\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(PICFLAG_FOR_TARGET)\" \\\n \t     GNATLIBCFLAGS_FOR_C=\"$(GNATLIBCFLAGS_FOR_C)\" \\\n \t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n@@ -2552,21 +2553,21 @@ gnatlib-shared-dual-win32:\n gnatlib-shared-win32:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n-\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(PICFLAG_FOR_TARGET)\" \\\n \t     GNATLIBCFLAGS_FOR_C=\"$(GNATLIBCFLAGS_FOR_C)\" \\\n \t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n \t$(RM) $(RTSDIR)/libgna*$(soext)\n \tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n                 | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -shared -shared-libgcc \\\n-\t\t$(TARGET_LIBGCC2_CFLAGS) \\\n+\t\t$(PICFLAG_FOR_TARGET) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) $(MISCLIB)\n \tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n                 | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -shared -shared-libgcc \\\n-\t\t$(TARGET_LIBGCC2_CFLAGS) \\\n+\t\t$(PICFLAG_FOR_TARGET) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS)libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n@@ -2575,21 +2576,21 @@ gnatlib-shared-win32:\n gnatlib-shared-darwin:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n \t     GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n-\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(PICFLAG_FOR_TARGET)\" \\\n \t     GNATLIBCFLAGS_FOR_C=\"$(GNATLIBCFLAGS_FOR_C) -fno-common\" \\\n \t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n \t     gnatlib\n \t$(RM) $(RTSDIR)/libgnat$(soext) $(RTSDIR)/libgnarl$(soext)\n \tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n-                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n+                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -dynamiclib $(PICFLAG_FOR_TARGET) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS) \\\n \t\t-Wl,-install_name,@rpath/libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(MISCLIB) -lm\n \tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n-                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n+                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -dynamiclib $(PICFLAG_FOR_TARGET) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS) \\\n@@ -2638,7 +2639,7 @@ gnatlib-shared:\n \t     GNATLIBCFLAGS_FOR_C=\"$(GNATLIBCFLAGS_FOR_C)\" \\\n \t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n-\t     TARGET_LIBGCC2_CFLAGS=\"$(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t     PICFLAG_FOR_TARGET=\"$(PICFLAG_FOR_TARGET)\" \\\n              $(GNATLIB_SHARED)\n \n gnatlib-sjlj:\n@@ -2653,7 +2654,7 @@ gnatlib-sjlj:\n \t     GNATLIBCFLAGS_FOR_C=\"$(GNATLIBCFLAGS_FOR_C)\" \\\n \t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n-\t     TARGET_LIBGCC2_CFLAGS=\"$(TARGET_LIBGCC2_CFLAGS)\" gnatlib\n+\t     PICFLAG_FOR_TARGET=\"$(PICFLAG_FOR_TARGET)\" gnatlib\n \n gnatlib-zcx:\n \t$(MAKE) $(FLAGS_TO_PASS) EH_MECHANISM=\"-gcc\" \\\n@@ -2667,7 +2668,7 @@ gnatlib-zcx:\n \t     GNATLIBCFLAGS_FOR_C=\"$(GNATLIBCFLAGS_FOR_C)\" \\\n \t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n-\t     TARGET_LIBGCC2_CFLAGS=\"$(TARGET_LIBGCC2_CFLAGS)\" gnatlib\n+\t     PICFLAG_FOR_TARGET=\"$(PICFLAG_FOR_TARGET)\" gnatlib\n \n # .s files for cross-building\n gnat-cross: force"}, {"sha": "0feb91111c091d6d79e799870d04d01f159928ce", "filename": "gcc/configure", "status": "modified", "additions": 85, "deletions": 2, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -784,6 +784,7 @@ loose_warn\n EGREP\n GREP\n CPP\n+PICFLAG_FOR_TARGET\n OUTPUT_OPTION\n NO_MINUS_C_MINUS_O\n GNATMAKE\n@@ -4873,6 +4874,88 @@ case \"$CC\" in\n esac\n \n \n+# Determine PICFLAG for target gnatlib.\n+\n+\n+\n+\n+case \"${target}\" in\n+    # PIC is the default on some targets or must not be used.\n+    *-*-darwin*)\n+\t# PIC is the default on this platform\n+\t# Common symbols not allowed in MH_DYLIB files\n+\tPICFLAG_FOR_TARGET=-fno-common\n+\t;;\n+    alpha*-dec-osf5*)\n+\t# PIC is the default.\n+\t;;\n+    hppa*64*-*-hpux*)\n+\t# PIC is the default for 64-bit PA HP-UX.\n+\t;;\n+    i[34567]86-*-cygwin* | i[34567]86-*-mingw* | x86_64-*-mingw*)\n+\t;;\n+    i[34567]86-*-interix3*)\n+\t# Interix 3.x gcc -fpic/-fPIC options generate broken code.\n+\t# Instead, we relocate shared libraries at runtime.\n+\t;;\n+    i[34567]86-*-nto-qnx*)\n+\t# QNX uses GNU C++, but need to define -shared option too, otherwise\n+\t# it will coredump.\n+\tPICFLAG_FOR_TARGET='-fPIC -shared'\n+\t;;\n+    i[34567]86-pc-msdosdjgpp*)\n+\t# DJGPP does not support shared libraries at all.\n+\t;;\n+    ia64*-*-hpux*)\n+\t# On IA64 HP-UX, PIC is the default but the pic flag\n+\t# sets the default TLS model and affects inlining.\n+\tPICFLAG_FOR_TARGET=-fPIC\n+\t;;\n+    mips-sgi-irix6*)\n+\t# PIC is the default.\n+\t;;\n+    rs6000-ibm-aix* | powerpc-ibm-aix*)\n+\t# All AIX code is PIC.\n+\t;;\n+\n+    # Some targets support both -fPIC and -fpic, but prefer the latter.\n+    # FIXME: Why?\n+    i[34567]86-*-* | x86_64-*-*)\n+\tPICFLAG_FOR_TARGET=-fpic\n+\t;;\n+    m68k-*-*)\n+\tPICFLAG_FOR_TARGET=-fpic\n+\t;;\n+    s390*-*-*)\n+\tPICFLAG_FOR_TARGET=-fpic\n+\t;;\n+    # FIXME: Override -fPIC default in libgcc only?\n+    sh-*-linux* | sh[2346lbe]*-*-linux*)\n+\tPICFLAG_FOR_TARGET=-fpic\n+\t;;\n+    # FIXME: Simplify to sh*-*-netbsd*?\n+    sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n+      sh64-*-netbsd* | sh64l*-*-netbsd*)\n+\tPICFLAG_FOR_TARGET=-fpic\n+\t;;\n+    # Default to -fPIC unless specified otherwise.\n+    *)\n+\tPICFLAG_FOR_TARGET=-fPIC\n+\t;;\n+esac\n+\n+# If the user explicitly uses -fpic/-fPIC, keep that.\n+case \"${CFLAGS_FOR_TARGET}\" in\n+    *-fpic*)\n+\tPICFLAG_FOR_TARGET=-fpic\n+\t;;\n+    *-fPIC*)\n+\tPICFLAG_FOR_TARGET=-fPIC\n+\t;;\n+esac\n+\n+\n+\n # -------------------------\n # Check C compiler features\n # -------------------------\n@@ -17830,7 +17913,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17833 \"configure\"\n+#line 17916 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17936,7 +18019,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17939 \"configure\"\n+#line 18022 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "51ab3acd4093e8c8ac128c2279db0c13022ab85c", "filename": "gcc/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -297,6 +297,10 @@ case \"$CC\" in\n esac\n AC_SUBST(CFLAGS)\n \n+# Determine PICFLAG for target gnatlib.\n+GCC_PICFLAG_FOR_TARGET\n+AC_SUBST(PICFLAG_FOR_TARGET)\n+\n # -------------------------\n # Check C compiler features\n # -------------------------"}, {"sha": "689e9fb1a3249e60187003bbaf11047625a89181", "filename": "libada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FChangeLog?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -1,3 +1,14 @@\n+2011-08-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac: Include ../config/picflag.m4.\n+\t(GCC_PICFLAG): Call it.\n+\tSubstitute.\n+\t* configure: Regenerate.\n+\t* Makefile.in (TARGET_LIBGCC2_CFLAGS): Replace by PICFLAG.\n+\t(GNATLIBCFLAGS_FOR_C): Replace TARGET_LIBGCC2_CFLAGS by PICFLAG.\n+\t(LIBADA_FLAGS_TO_PASS): Pass PICFLAG as PICFLAG_FOR_TARGET.\n+\tDon't include $(GCC_DIR)/libgcc.mvars.\n+\n 2010-11-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/46202"}, {"sha": "6f3df38c322efead9ba960e00379941ed45b0388", "filename": "libada/Makefile.in", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FMakefile.in?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -1,5 +1,5 @@\n # Makefile for libada.\n-#   Copyright 2003, 2004, 2009, 2010 Free Software Foundation, Inc.\n+#   Copyright 2003, 2004, 2009, 2010, 2011 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -56,15 +56,13 @@ LOOSE_WARN = -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes\n GCC_WARN_CFLAGS = $(LOOSE_WARN)\n WARN_CFLAGS = @warn_cflags@\n \n-TARGET_LIBGCC2_CFLAGS=\n+PICFLAG = @PICFLAG@\n GNATLIBCFLAGS= -g -O2\n-GNATLIBCFLAGS_FOR_C = $(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS) -fexceptions \\\n+GNATLIBCFLAGS_FOR_C = $(GNATLIBCFLAGS) $(PICFLAG) -fexceptions \\\n \t-DIN_RTS @have_getipinfo@\n \n-# Get target-specific overrides for TARGET_LIBGCC2_CFLAGS.\n host_subdir = @host_subdir@\n GCC_DIR=$(MULTIBUILDTOP)../../$(host_subdir)/gcc\n-include $(GCC_DIR)/libgcc.mvars\n \n target_noncanonical:=@target_noncanonical@\n version := $(shell cat $(srcdir)/../gcc/BASE-VER)\n@@ -83,7 +81,7 @@ LIBADA_FLAGS_TO_PASS = \\\n         \"GNATLIBFLAGS=$(GNATLIBFLAGS) $(MULTIFLAGS)\" \\\n         \"GNATLIBCFLAGS=$(GNATLIBCFLAGS) $(MULTIFLAGS)\" \\\n         \"GNATLIBCFLAGS_FOR_C=$(GNATLIBCFLAGS_FOR_C) $(MULTIFLAGS)\" \\\n-        \"TARGET_LIBGCC2_CFLAGS=$(TARGET_LIBGCC2_CFLAGS)\" \\\n+        \"PICFLAG_FOR_TARGET=$(PICFLAG)\" \\\n         \"THREAD_KIND=$(THREAD_KIND)\" \\\n         \"TRACE=$(TRACE)\" \\\n         \"MULTISUBDIR=$(MULTISUBDIR)\" \\"}, {"sha": "c0a294fdd0cb8f7073c10a23acf4741407d129fa", "filename": "libada/configure", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libada%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libada%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -558,6 +558,7 @@ have_getipinfo\n default_gnatlib_target\n LN_S\n AWK\n+PICFLAG\n enable_shared\n OBJEXT\n EXEEXT\n@@ -2817,6 +2818,87 @@ fi\n \n \n \n+\n+\n+\n+\n+case \"${host}\" in\n+    # PIC is the default on some targets or must not be used.\n+    *-*-darwin*)\n+\t# PIC is the default on this platform\n+\t# Common symbols not allowed in MH_DYLIB files\n+\tPICFLAG=-fno-common\n+\t;;\n+    alpha*-dec-osf5*)\n+\t# PIC is the default.\n+\t;;\n+    hppa*64*-*-hpux*)\n+\t# PIC is the default for 64-bit PA HP-UX.\n+\t;;\n+    i[34567]86-*-cygwin* | i[34567]86-*-mingw* | x86_64-*-mingw*)\n+\t;;\n+    i[34567]86-*-interix3*)\n+\t# Interix 3.x gcc -fpic/-fPIC options generate broken code.\n+\t# Instead, we relocate shared libraries at runtime.\n+\t;;\n+    i[34567]86-*-nto-qnx*)\n+\t# QNX uses GNU C++, but need to define -shared option too, otherwise\n+\t# it will coredump.\n+\tPICFLAG='-fPIC -shared'\n+\t;;\n+    i[34567]86-pc-msdosdjgpp*)\n+\t# DJGPP does not support shared libraries at all.\n+\t;;\n+    ia64*-*-hpux*)\n+\t# On IA64 HP-UX, PIC is the default but the pic flag\n+\t# sets the default TLS model and affects inlining.\n+\tPICFLAG=-fPIC\n+\t;;\n+    mips-sgi-irix6*)\n+\t# PIC is the default.\n+\t;;\n+    rs6000-ibm-aix* | powerpc-ibm-aix*)\n+\t# All AIX code is PIC.\n+\t;;\n+\n+    # Some targets support both -fPIC and -fpic, but prefer the latter.\n+    # FIXME: Why?\n+    i[34567]86-*-* | x86_64-*-*)\n+\tPICFLAG=-fpic\n+\t;;\n+    m68k-*-*)\n+\tPICFLAG=-fpic\n+\t;;\n+    s390*-*-*)\n+\tPICFLAG=-fpic\n+\t;;\n+    # FIXME: Override -fPIC default in libgcc only?\n+    sh-*-linux* | sh[2346lbe]*-*-linux*)\n+\tPICFLAG=-fpic\n+\t;;\n+    # FIXME: Simplify to sh*-*-netbsd*?\n+    sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n+      sh64-*-netbsd* | sh64l*-*-netbsd*)\n+\tPICFLAG=-fpic\n+\t;;\n+    # Default to -fPIC unless specified otherwise.\n+    *)\n+\tPICFLAG=-fPIC\n+\t;;\n+esac\n+\n+# If the user explicitly uses -fpic/-fPIC, keep that.\n+case \"${CFLAGS}\" in\n+    *-fpic*)\n+\tPICFLAG=-fpic\n+\t;;\n+    *-fPIC*)\n+\tPICFLAG=-fPIC\n+\t;;\n+esac\n+\n+\n+\n # These must be passed down, or are needed by gcc/libgcc.mvars\n for ac_prog in gawk mawk nawk awk\n do"}, {"sha": "f9b9c5ab3b00e47c45c871ff1c37ff52591ed897", "filename": "libada/configure.ac", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libada%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libada%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure.ac?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -1,5 +1,5 @@\n # Configure script for libada.\n-#   Copyright 2003, 2004, 2009 Free Software Foundation, Inc.\n+#   Copyright 2003, 2004, 2009, 2011 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -18,6 +18,7 @@\n sinclude(../config/acx.m4)\n sinclude(../config/multi.m4)\n sinclude(../config/override.m4)\n+sinclude(../config/picflag.m4)\n sinclude(../config/unwind_ipinfo.m4)\n \n AC_INIT\n@@ -118,6 +119,9 @@ esac\n ], [enable_shared=yes])\n AC_SUBST([enable_shared])\n \n+GCC_PICFLAG\n+AC_SUBST([PICFLAG])\n+\n # These must be passed down, or are needed by gcc/libgcc.mvars\n AC_PROG_AWK\n AC_PROG_LN_S"}, {"sha": "844b1ee47455745968d92cf20b676538ee0d16bc", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -1,3 +1,10 @@\n+2011-08-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* aclocal.m4: Include ../config/picflag.m4.\n+\t* configure.ac (GCC_PICFLAG): Call it.\n+\t(enable_shared): Clear PICFLAG unless shared.\n+\t* configure: Regenerate.\n+\n 2011-08-12  Steve Ellcey  <sje@cup.hp.com>\n \n \t* md5.c (md5_read_ctx): Handle mis-aligned resbuf pointer."}, {"sha": "a528604d70e5d498a15fdced40c00e2caa8f2bf2", "filename": "libiberty/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libiberty%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libiberty%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Faclocal.m4?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -1,6 +1,7 @@\n sinclude(../config/acx.m4)\n sinclude(../config/no-executables.m4)\n sinclude(../config/override.m4)\n+sinclude(../config/picflag.m4)\n sinclude(../config/warnings.m4)\n \n dnl See whether strncmp reads past the end of its string parameters."}, {"sha": "c798937deecfd8c6da2c634a9b5652fdb9b0004f", "filename": "libiberty/configure", "status": "modified", "additions": 82, "deletions": 21, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -4840,34 +4840,95 @@ if [ -n \"${frag}\" ]; then\n   frag=${libiberty_topdir}/libiberty/config/$frag\n fi\n \n+\n+\n+\n+\n+case \"${host}\" in\n+    # PIC is the default on some targets or must not be used.\n+    *-*-darwin*)\n+\t# PIC is the default on this platform\n+\t# Common symbols not allowed in MH_DYLIB files\n+\tPICFLAG=-fno-common\n+\t;;\n+    alpha*-dec-osf5*)\n+\t# PIC is the default.\n+\t;;\n+    hppa*64*-*-hpux*)\n+\t# PIC is the default for 64-bit PA HP-UX.\n+\t;;\n+    i[34567]86-*-cygwin* | i[34567]86-*-mingw* | x86_64-*-mingw*)\n+\t;;\n+    i[34567]86-*-interix3*)\n+\t# Interix 3.x gcc -fpic/-fPIC options generate broken code.\n+\t# Instead, we relocate shared libraries at runtime.\n+\t;;\n+    i[34567]86-*-nto-qnx*)\n+\t# QNX uses GNU C++, but need to define -shared option too, otherwise\n+\t# it will coredump.\n+\tPICFLAG='-fPIC -shared'\n+\t;;\n+    i[34567]86-pc-msdosdjgpp*)\n+\t# DJGPP does not support shared libraries at all.\n+\t;;\n+    ia64*-*-hpux*)\n+\t# On IA64 HP-UX, PIC is the default but the pic flag\n+\t# sets the default TLS model and affects inlining.\n+\tPICFLAG=-fPIC\n+\t;;\n+    mips-sgi-irix6*)\n+\t# PIC is the default.\n+\t;;\n+    rs6000-ibm-aix* | powerpc-ibm-aix*)\n+\t# All AIX code is PIC.\n+\t;;\n+\n+    # Some targets support both -fPIC and -fpic, but prefer the latter.\n+    # FIXME: Why?\n+    i[34567]86-*-* | x86_64-*-*)\n+\tPICFLAG=-fpic\n+\t;;\n+    m68k-*-*)\n+\tPICFLAG=-fpic\n+\t;;\n+    s390*-*-*)\n+\tPICFLAG=-fpic\n+\t;;\n+    # FIXME: Override -fPIC default in libgcc only?\n+    sh-*-linux* | sh[2346lbe]*-*-linux*)\n+\tPICFLAG=-fpic\n+\t;;\n+    # FIXME: Simplify to sh*-*-netbsd*?\n+    sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n+      sh64-*-netbsd* | sh64l*-*-netbsd*)\n+\tPICFLAG=-fpic\n+\t;;\n+    # Default to -fPIC unless specified otherwise.\n+    *)\n+\tPICFLAG=-fPIC\n+\t;;\n+esac\n+\n+# If the user explicitly uses -fpic/-fPIC, keep that.\n+case \"${CFLAGS}\" in\n+    *-fpic*)\n+\tPICFLAG=-fpic\n+\t;;\n+    *-fPIC*)\n+\tPICFLAG=-fPIC\n+\t;;\n+esac\n+\n+\n # If they didn't specify --enable-shared, don't generate shared libs.\n case \"${enable_shared}\" in\n   yes) shared=yes ;;\n   no) shared=no ;;\n   \"\") shared=no ;;\n   *) shared=yes ;;\n esac\n-if [ \"${shared}\" = \"yes\" ]; then\n-  case \"${host}\" in\n-    *-*-cygwin*)\t;;\n-    alpha*-*-linux*)\tPICFLAG=-fPIC ;;\n-    arm*-*-*)\t\tPICFLAG=-fPIC ;;\n-    hppa*-*-*)\t\tPICFLAG=-fPIC ;;\n-    i370-*-*)\t\tPICFLAG=-fPIC ;;\n-    ia64-*-*)\t\tPICFLAG=-fpic ;;\n-    i[34567]86-*-* | x86_64-*-*)\n-\t\t\tPICFLAG=-fpic ;;\n-    m68k-*-*)\t\tPICFLAG=-fpic ;;\n-    mips*-*-linux*)\tPICFLAG=-fPIC ;;\n-    powerpc*-*-aix*)\t;;\n-    powerpc*-*-*)\tPICFLAG=-fPIC ;;\n-    sparc*-*-*)\t\tcase \"${CFLAGS}\" in\n-\t\t\t  *-fpic* ) PICFLAG=-fpic ;;\n-\t\t\t  * ) PICFLAG=-fPIC ;;\n-\t\t\tesac ;;\n-    s390*-*-*)\t\tPICFLAG=-fpic ;;\n-    sh*-*-*)\t\tPICFLAG=-fPIC ;;\n-  esac\n+if [ \"${shared}\" != \"yes\" ]; then\n+  PICFLAG=\n fi\n \n "}, {"sha": "754b66a061930c9e86c4b974fd2db0c17c291a3a", "filename": "libiberty/configure.ac", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3aa9ebaf76b9076897762e8ec28e7542338c3f9/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=e3aa9ebaf76b9076897762e8ec28e7542338c3f9", "patch": "@@ -191,34 +191,17 @@ if [[ -n \"${frag}\" ]]; then\n   frag=${libiberty_topdir}/libiberty/config/$frag\n fi\n \n+GCC_PICFLAG\n+\n # If they didn't specify --enable-shared, don't generate shared libs.\n case \"${enable_shared}\" in\n   yes) shared=yes ;;\n   no) shared=no ;;\n   \"\") shared=no ;;\n   *) shared=yes ;;\n esac\n-if [[ \"${shared}\" = \"yes\" ]]; then\n-  case \"${host}\" in\n-    *-*-cygwin*)\t;;\n-    alpha*-*-linux*)\tPICFLAG=-fPIC ;;\n-    arm*-*-*)\t\tPICFLAG=-fPIC ;;\n-    hppa*-*-*)\t\tPICFLAG=-fPIC ;;\n-    i370-*-*)\t\tPICFLAG=-fPIC ;;\n-    ia64-*-*)\t\tPICFLAG=-fpic ;;\n-    i[[34567]]86-*-* | x86_64-*-*)\n-\t\t\tPICFLAG=-fpic ;;\n-    m68k-*-*)\t\tPICFLAG=-fpic ;;\n-    mips*-*-linux*)\tPICFLAG=-fPIC ;;\n-    powerpc*-*-aix*)\t;;\n-    powerpc*-*-*)\tPICFLAG=-fPIC ;;\n-    sparc*-*-*)\t\tcase \"${CFLAGS}\" in\n-\t\t\t  *-fpic* ) PICFLAG=-fpic ;;\n-\t\t\t  * ) PICFLAG=-fPIC ;;\n-\t\t\tesac ;;\n-    s390*-*-*)\t\tPICFLAG=-fpic ;;\n-    sh*-*-*)\t\tPICFLAG=-fPIC ;;\n-  esac\n+if [[ \"${shared}\" != \"yes\" ]]; then\n+  PICFLAG=\n fi\n AC_SUBST(PICFLAG)\n "}]}