{"sha": "7cf41963391146126ec2d0064e8fb573fc0addf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NmNDE5NjMzOTExNDYxMjZlYzJkMDA2NGU4ZmI1NzNmYzBhZGRmNQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-10-15T16:45:31Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-10-15T16:45:31Z"}, "message": "jvgenmain.c (usage): New function.\n\n\t* jvgenmain.c (usage): New function.\n\t(main): Use it.  Also, handle `-D' options.\n\t* jvspec.c (lang_specific_driver): Recognize -D.\n\t(jvgenmain_spec): Added `%{D*}' to jvgenmain invocation.\n\nFrom-SVN: r30019", "tree": {"sha": "1bcb57fa5b0f05e8d67699b59b7d8b9928c4b89a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bcb57fa5b0f05e8d67699b59b7d8b9928c4b89a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cf41963391146126ec2d0064e8fb573fc0addf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf41963391146126ec2d0064e8fb573fc0addf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cf41963391146126ec2d0064e8fb573fc0addf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf41963391146126ec2d0064e8fb573fc0addf5/comments", "author": null, "committer": null, "parents": [{"sha": "3ae21bfccf6843c0760871a1bab6ed80ab68a69b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae21bfccf6843c0760871a1bab6ed80ab68a69b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ae21bfccf6843c0760871a1bab6ed80ab68a69b"}], "stats": {"total": 73, "additions": 63, "deletions": 10}, "files": [{"sha": "27a36f9e2de242569404441a6fe4fafd0c341a58", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf41963391146126ec2d0064e8fb573fc0addf5/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf41963391146126ec2d0064e8fb573fc0addf5/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7cf41963391146126ec2d0064e8fb573fc0addf5", "patch": "@@ -1,5 +1,10 @@\n 1999-10-14  Tom Tromey  <tromey@cygnus.com>\n \n+\t* jvgenmain.c (usage): New function.\n+\t(main): Use it.  Also, handle `-D' options.\n+\t* jvspec.c (lang_specific_driver): Recognize -D.\n+\t(jvgenmain_spec): Added `%{D*}' to jvgenmain invocation.\n+\n \t* jvspec.c (jvgenmain_spec): Use `%umain', not just `%u'.\n \n 1999-10-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>"}, {"sha": "86040fcba3f72c001a4f328ef40184c55b49bc21", "filename": "gcc/java/jvgenmain.c", "status": "modified", "additions": 49, "deletions": 9, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf41963391146126ec2d0064e8fb573fc0addf5/gcc%2Fjava%2Fjvgenmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf41963391146126ec2d0064e8fb573fc0addf5/gcc%2Fjava%2Fjvgenmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvgenmain.c?ref=7cf41963391146126ec2d0064e8fb573fc0addf5", "patch": "@@ -1,5 +1,5 @@\n /* Program to generate \"main\" a Java(TM) class containing a main method.\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -79,39 +79,79 @@ gcc_obstack_init (obstack)\n \t\t  (void (*) PROTO((void *))) OBSTACK_CHUNK_FREE);\n }\n \n+static void\n+usage (const char *name)\n+{\n+  fprintf (stderr, \"Usage: %s [OPTIONS]... CLASSNAME [OUTFILE]\\n\", name);\n+  exit (1);\n+}\n+\n int\n main (int argc, const char **argv)\n {\n   const char *classname;\n   FILE *stream;\n   const char *mangled_classname;\n+  int i, last_arg;\n+\n+  if (argc < 2)\n+    usage (argv[0]);\n \n-  if (argc < 2 || argc > 3)\n+  for (i = 1; i < argc; ++i)\n     {\n-      fprintf (stderr, \"Usage: %s CLASSNAME [OUTFILE]\\n\", argv[0]);\n-      exit(-1);\n+      if (! strncmp (argv[i], \"-D\", 2))\n+\t{\n+\t  /* Handled later.  */\n+\t}\n+      else\n+\tbreak;\n     }\n \n-  classname = argv[1];\n+  if (i < argc - 2 || i == argc)\n+    usage (argv[0]);\n+  last_arg = i;\n+\n+  classname = argv[i];\n \n   gcc_obstack_init (&name_obstack);\n   append_gpp_mangled_classtype (&name_obstack, classname);\n   obstack_1grow (&name_obstack, '\\0');\n   mangled_classname = obstack_finish (&name_obstack);\n \n-  if (argc > 2 && strcmp (argv[2], \"-\") != 0)\n+  if (i < argc - 1 && strcmp (argv[i + 1], \"-\") != 0)\n     {\n-      const char *outfile = argv[2];\n+      const char *outfile = argv[i + 1];\n       stream = fopen (outfile, \"w\");\n       if (stream == NULL)\n \t{\n \t  fprintf (stderr, \"%s: Cannot open output file: %s\\n\",\n \t\t   argv[0], outfile);\n-\t  exit (-1);\n+\t  exit (1);\n \t}\n     }\n   else\n     stream = stdout;\n+\n+  /* At this point every element of ARGV from 1 to LAST_ARG is a `-D'\n+     option.  Process them appropriately.  */\n+  fprintf (stream, \"const char *_Jv_Compiler_Properties[] =\\n{\\n\");\n+  for (i = 1; i < last_arg; ++i)\n+    {\n+      const char *p;\n+      fprintf (stream, \"  \\\"\");\n+      for (p = &argv[i][2]; *p; ++p)\n+\t{\n+\t  if (! isascii (*p))\n+\t    fprintf (stream, \"\\\\%o\", *p);\n+\t  else if (*p == '\\\\' || *p == '\"')\n+\t    fprintf (stream, \"\\\\%c\", *p);\n+\t  else\n+\t    putc (*p, stream);\n+\t}\n+      fprintf (stream, \"\\\",\\n\");\n+    }\n+  fprintf (stream, \"  0\\n};\\n\\n\");\n+\n   fprintf (stream, \"extern struct Class %s%s;\\n\",\n \t   class_mangling_prefix, mangled_classname);\n   fprintf (stream, \"int main (int argc, const char **argv)\\n\");\n@@ -123,7 +163,7 @@ main (int argc, const char **argv)\n     {\n       fprintf (stderr, \"%s: Failed to close output file %s\\n\",\n \t       argv[0], argv[2]);\n-      exit (-1);\n+      exit (1);\n     }\n   return 0;\n }"}, {"sha": "d4dde5e46358f86ba9463728e81d4f13287aa992", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf41963391146126ec2d0064e8fb573fc0addf5/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf41963391146126ec2d0064e8fb573fc0addf5/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=7cf41963391146126ec2d0064e8fb573fc0addf5", "patch": "@@ -50,7 +50,7 @@ int lang_specific_extra_outfiles = 0;\n #define COMBINE_INPUTS 0\n \n const char jvgenmain_spec[] =\n-  \"jvgenmain %i %{!pipe:%umain.i} |\\n\\\n+  \"jvgenmain %{D*} %i %{!pipe:%umain.i} |\\n\\\n    cc1 %{!pipe:%Umain.i} %1 \\\n \t\t   %{!Q:-quiet} -dumpbase %b.c %{d*} %{m*} %{a*}\\\n \t\t   %{g*} %{O*} \\\n@@ -163,6 +163,9 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n   int saw_O = 0;\n   int saw_g = 0;\n \n+  /* Saw a `-D' option.  */\n+  int saw_D = 0;\n+\n   /* An array used to flag each argument that needs a bit set for\n      LANGSPEC, MATHLIB, WITHLIBC, or GCLIB.  */\n   int *args;\n@@ -247,6 +250,8 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t      library = 0;\n \t      will_link = 0;\n \t    }\n+\t  else if (argv[i][1] == 'D')\n+\t    saw_D = 1;\n \t  else if (argv[i][1] == 'g')\n \t    saw_g = 1;\n \t  else if (argv[i][1] == 'O')\n@@ -331,6 +336,9 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n   if (quote)\n     fatal (\"argument to `%s' missing\\n\", quote);\n \n+  if (saw_D && ! main_class_name)\n+    fatal (\"can't specify `-D' without `--main'\\n\");\n+\n   num_args = argc + added;\n   if (saw_C)\n     {"}]}