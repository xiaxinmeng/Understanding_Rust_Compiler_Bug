{"sha": "a186dd158decad693bd18c95962a9ea61022166c", "node_id": "C_kwDOANBUbNoAKGExODZkZDE1OGRlY2FkNjkzYmQxOGM5NTk2MmE5ZWE2MTAyMjE2NmM", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-15T15:47:59Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-21T10:10:34Z"}, "message": "ada: Do not share Packed Array Type if sizes of types differ\n\nIf a subtype has a Size attribute value different than the size of its\nancestor, then the Packed Array Type can't be shared and a new one must\nbe created.\n\ngcc/ada/\n\n\t* exp_pakd.adb (Create_Packed_Array_Impl_Type): Do not share PAT\n\tif sizes of types differ.", "tree": {"sha": "a83a6beea57a57edd33966496ab0ead1af20ebfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a83a6beea57a57edd33966496ab0ead1af20ebfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a186dd158decad693bd18c95962a9ea61022166c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a186dd158decad693bd18c95962a9ea61022166c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a186dd158decad693bd18c95962a9ea61022166c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a186dd158decad693bd18c95962a9ea61022166c/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f089469f4f0960818498ca5ad2bd3797a4b1d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f089469f4f0960818498ca5ad2bd3797a4b1d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f089469f4f0960818498ca5ad2bd3797a4b1d43"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "29735c07a88b34f71d4820b0e6f20e66d1fcdea5", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a186dd158decad693bd18c95962a9ea61022166c/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a186dd158decad693bd18c95962a9ea61022166c/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=a186dd158decad693bd18c95962a9ea61022166c", "patch": "@@ -671,11 +671,11 @@ package body Exp_Pakd is\n          return;\n       end if;\n \n-      --  If our immediate ancestor subtype is constrained, and it already\n-      --  has a packed array type, then just share the same type, since the\n-      --  bounds must be the same. If the ancestor is not an array type but\n-      --  a private type, as can happen with multiple instantiations, create\n-      --  a new packed type, to avoid privacy issues.\n+      --  If our immediate ancestor subtype is constrained, and it already has\n+      --  a packed array type, and it has the same size, then just share the\n+      --  same type, since the bounds must be the same. If the ancestor is not\n+      --  an array type but a private type, as can happen with multiple\n+      --  instantiations, create a new packed type, to avoid privacy issues.\n \n       if Ekind (Typ) = E_Array_Subtype then\n          Ancest := Ancestor_Subtype (Typ);\n@@ -684,6 +684,9 @@ package body Exp_Pakd is\n            and then Is_Array_Type (Ancest)\n            and then Is_Constrained (Ancest)\n            and then Present (Packed_Array_Impl_Type (Ancest))\n+           and then Known_Esize (Typ)\n+           and then Known_Esize (Ancest)\n+           and then Esize (Typ) = Esize (Ancest)\n          then\n             Set_Packed_Array_Impl_Type (Typ, Packed_Array_Impl_Type (Ancest));\n             return;"}]}