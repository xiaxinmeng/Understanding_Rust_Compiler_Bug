{"sha": "21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE3MzZlYzJmN2JlYzA2NGJkYzg3ZjgxYmIzZTJlMmY1YmRmOTBjOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-02T18:21:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-02T18:21:01Z"}, "message": "* ChangeLog: Fix last commit entry.\n\nFrom-SVN: r166209", "tree": {"sha": "40febf31e433ad5d0c02ab5e8cd7d3354b9f6479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40febf31e433ad5d0c02ab5e8cd7d3354b9f6479"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9/comments", "author": null, "committer": null, "parents": [{"sha": "cfec3a7c5e9924bbc5c756f8ba94b137f180845d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfec3a7c5e9924bbc5c756f8ba94b137f180845d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfec3a7c5e9924bbc5c756f8ba94b137f180845d"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "0c8d225775f08d1a8fdb5178949214decf47b3ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 21, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9", "patch": "@@ -4,28 +4,28 @@\n \t* config/i386/i386-protos.h (ix86_split_call_vzeroupper): New.\n \t(ix86_split_call_pop_vzeroupper): Likewise.\n \n-\t* config/i386/i386.c (move_or_delete_vzeroupper_2): Rewrite\n-\tthe loop.\n-\t(ix86_expand_call): Use UNSPEC_CALL_NEEDS_VZEROUPPER.\n+\t* config/i386/i386.c (move_or_delete_vzeroupper_2): Rewrite the loop.\n+\t(ix86_expand_call): Conditionally decorate calls with\n+\tUNSPEC_CALL_NEEDS_VZEROUPPER unspec.\n \t(ix86_split_call_vzeroupper): New.\n \t(ix86_split_call_pop_vzeroupper): Likewise.\n \n \t* config/i386/i386.md (UNSPEC_CALL_NEEDS_VZEROUPPER): New.\n-\t(*call_pop_0_vzeroupper): Likewise.\n+\t(*call_pop_0_vzeroupper): New insn_and_split pattern.\n \t(*call_pop_1_vzeroupper): Likewise.\n \t(*sibcall_pop_1_vzeroupper): Likewise.\n \t(*call_0_vzeroupper): Likewise.\n \t(*call_1_vzeroupper): Likewise.\n \t(*sibcall_1_vzeroupper): Likewise.\n \t(*call_1_rex64_vzeroupper): Likewise.\n-\t(*call_1_rex64_ms_sysv_vzeroupper): New.\n+\t(*call_1_rex64_ms_sysv_vzeroupper): Likewise.\n \t(*call_1_rex64_large_vzeroupper): Likewise.\n \t(*sibcall_1_rex64_vzeroupper): Likewise.\n-\t(*call_value_pop_0_vzeroupper): New.\n+\t(*call_value_pop_0_vzeroupper): Likewise.\n \t(*call_value_pop_1_vzeroupper): Likewise.\n \t(*sibcall_value_pop_1_vzeroupper): Likewise.\n-\t(*call_value_0_vzeroupper): New.\n-\t(*call_value_0_rex64_vzeroupper): Use\n+\t(*call_value_0_vzeroupper): Likewise.\n+\t(*call_value_0_rex64_vzeroupper): Likewise.\n \t(*call_value_0_rex64_ms_sysv_vzeroupper): Likewise.\n \t(*call_value_1_vzeroupper): Likewise.\n \t(*sibcall_value_1_vzeroupper): Likewise.\n@@ -205,7 +205,7 @@\n \tDefine if required.\n \t(machopic_symbol_defined_p): Do not try to use current_function_decl\n \twhen generating _get_pc thunks within stubs.\n-\t(machopic_indirect_data_reference): Rework for direct conditionals \n+\t(machopic_indirect_data_reference): Rework for direct conditionals\n \trather than #ifdefs, add x86 mdynamic-no-pic\n \t(machopic_legitimize_pic_address): Update to use HAVE_lo_sum with a\n \tdefined value.\n@@ -325,19 +325,15 @@\n \t* config/darwin.h (WORD_SWITCH_TAKES_ARG): Remove options included\n \tin darwin.opt.\n \t(LINK_COMMAND_SPEC_A): Don't include %{x}.\n-\t* config/fr30/fr30.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG):\n-\tRemove.\n+\t* config/fr30/fr30.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG): Remove.\n \t* config/freebsd-spec.h (FBSD_SWITCH_TAKES_ARG): Remove.\n \t* config/freebsd.h (SWITCH_TAKES_ARG): Remove.\n-\t* config/frv/frv.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG):\n-\tRemove.\n+\t* config/frv/frv.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG): Remove.\n \t* config/i386/djgpp.h (LINK_COMMAND_SPEC): Don't include %{x}.\n \t* config/ia64/ia64.h (SWITCH_TAKES_ARG): Remove.\n-\t* config/interix.h (WORD_SWITCH_TAKES_ARG): Don't handle -T\n-\toptions.\n+\t* config/interix.h (WORD_SWITCH_TAKES_ARG): Don't handle -T options.\n \t* config/lm32/lm32.h (SWITCH_TAKES_ARG): Remove.\n-\t* config/m32r/m32r.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG):\n-\tRemove.\n+\t* config/m32r/m32r.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG): Remove.\n \t* config/microblaze/microblaze.h (SWITCH_TAKES_ARG): Remove.\n \t* config/mips/mips.h (SWITCH_TAKES_ARG): Remove.\n \t* config/mips/netbsd.h (SWITCH_TAKES_ARG): Remove.\n@@ -356,8 +352,8 @@\n 2010-11-01  Paul Koning  <ni1d@arrl.net>\n \n \t* config/pdp11/pdp11.md: Use iterators.\n-\t(addqi3, subqi3, iorsi3, xorsi3): Delete. \n-\t\n+\t(addqi3, subqi3, iorsi3, xorsi3): Delete.\n+\n 2010-11-01  Steve Ellcey  <sje@cup.hp.com>\n \n \t* defaults.h (TARGET_VTABLE_USES_DESCRIPTORS): Move under ifdef\n@@ -371,7 +367,6 @@\n \tPR tree-optimization/46259\n \n \tRevert:\n-\n \t2010-10-30  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree-vect-stmts.c (vect_get_vec_def_for_operand): Use\n@@ -569,7 +564,7 @@\n \tinstruction encoding.\n \n 2010-10-29  Artjoms Sinkarovs <artyom.shinakroff@gmail.com>\n-\tAndrew Pinski <pinskia@gmail.com>\n+\t    Andrew Pinski <pinskia@gmail.com>\n \n \t* tree.h (build_vector_from_val): Declare.\n \t* tree.c (build_vector_from_val): New function."}]}