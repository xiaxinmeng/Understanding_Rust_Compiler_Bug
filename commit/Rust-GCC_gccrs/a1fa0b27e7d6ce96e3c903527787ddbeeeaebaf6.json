{"sha": "a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFmYTBiMjdlN2Q2Y2U5NmUzYzkwMzUyNzc4N2RkYmVlZWFlYmFmNg==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2000-09-04T20:57:18Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2000-09-04T20:57:18Z"}, "message": "re GNATS java.io/203 (File.createTempFile doesn't close descriptor)\n\n        Fix for PR java.io/203:\n        * java/io/File.java (createTempFile): Obey directory argument.\n        Use java.io.tmpdir if needed.  Don't leave FileDescripators open.\n        * java/lang/natSystem.cc (init_properties): Use TMPDIR environment\n        variable to set java.io.tmpdir on non-WIN32 systems.\n\nFrom-SVN: r36143", "tree": {"sha": "3bd8341880b59044142121b372b25da9d563a293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bd8341880b59044142121b372b25da9d563a293"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40255aaf54176fdcecc8199876b94cfe38f7cc44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40255aaf54176fdcecc8199876b94cfe38f7cc44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40255aaf54176fdcecc8199876b94cfe38f7cc44"}], "stats": {"total": 69, "additions": 53, "deletions": 16}, "files": [{"sha": "d4b4b94b8adb278938d7c8d7209fd5fefa1efdca", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6", "patch": "@@ -1,3 +1,11 @@\n+2000-09-04  Anthony Green  <green@redhat.com>\n+\n+        Fix for PR java.io/203:\n+        * java/io/File.java (createTempFile): Obey directory argument.\n+\tUse java.io.tmpdir if needed.  Don't leave FileDescripators open.\n+        * java/lang/natSystem.cc (init_properties): Use TMPDIR environment\n+\tvariable to set java.io.tmpdir on non-WIN32 systems.\n+\n 2000-09-04  Anthony Green  <green@redhat.com>\n \n \t* java/io/File.java (deleteOnExit): New method."}, {"sha": "01d8d53fee90248c603a53c4bc23aa77fbaec34d", "filename": "libjava/java/io/File.java", "status": "modified", "additions": 41, "deletions": 14, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6/libjava%2Fjava%2Fio%2FFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6/libjava%2Fjava%2Fio%2FFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFile.java?ref=a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6", "patch": "@@ -233,14 +233,26 @@ public static File createTempFile (String prefix, String suffix,\n \t\t\t\t     File directory)\n     throws IOException\n   {\n-    FileDescriptor desc = new FileDescriptor ();\n-\n-    SecurityManager s = System.getSecurityManager();\n-    if (s != null)\n-      s.checkWrite (desc);\n+    // Grab the system temp directory if necessary\n+    if (directory == null)\n+      {\n+\tString dirname = tmpdir;\n+\tif (dirname == null)\n+\t  throw \n+\t    new IOException(\"Cannot determine system temporary directory\"); \n+\t\n+\tdirectory = new File(dirname);\n+\tif (!directory.exists())\n+\t  throw new IOException(\"System temporary directory \" \n+\t\t\t\t+ directory.getName() + \" does not exist.\");\n+\tif (!directory.isDirectory())\n+\t  throw new IOException(\"System temporary directory \" \n+\t\t\t\t+ directory.getName() \n+\t\t\t\t+ \" is not really a directory.\");\n+      }\n \n     if (prefix.length () < 3)\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"Prefix too short: \" + prefix);\n     if (suffix == null)\n       suffix = \".tmp\";\n \n@@ -259,8 +271,8 @@ public static File createTempFile (String prefix, String suffix,\n \t  prefix = prefix.substring(0, max_length - 6 - suf_len);\n       }\n \n-    // We don't care about the name because we set it later.\n-    File ret = new File (\"\");\n+    File f;\n+\n     // How many times should we try?  We choose 100.\n     for (int i = 0; i < 100; ++i)\n       {\n@@ -269,18 +281,33 @@ public static File createTempFile (String prefix, String suffix,\n \tString l = prefix + t.substring(t.length() - 6) + suffix;\n \ttry\n \t  {\n-\t    desc = new FileDescriptor \n-\t      (l, FileDescriptor.WRITE | FileDescriptor.EXCL);\n-\t    desc.close ();\n-\t    ret.setPath(l);\n-\t    return ret;\n+\t    f = new File(directory, l);\n+\t    if (f.exists())\n+\t      continue;\n+\t    else\n+\t      {\n+\t\tString af = f.getAbsolutePath ();\n+\t\t\n+\t\t// Check to see if we're allowed to write to it.\n+\t\tSecurityManager s = System.getSecurityManager();\n+\t\tif (s != null)\n+\t\t  s.checkWrite (af);\n+\t\t\n+\t\t// Now create the file.\n+\t\tFileDescriptor fd = \n+\t\t  new FileDescriptor (af, \n+\t\t\t\t      FileDescriptor.WRITE\n+\t\t\t\t      | FileDescriptor.EXCL);\n+\t\tfd.close ();\n+\t\treturn f;\n+\t      }\n \t  }\n \tcatch (IOException _)\n \t  {\n \t  }\n       }\n \n-    throw new IOException (\"couldn't make temp file\");\n+    throw new IOException (\"cannot create temporary file\");\n   }\n \n   public static File createTempFile (String prefix, String suffix)"}, {"sha": "39deab2ad04f7a2b41424da151438e94e74f1eb3", "filename": "libjava/java/lang/natSystem.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6/libjava%2Fjava%2Flang%2FnatSystem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6/libjava%2Fjava%2Flang%2FnatSystem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatSystem.cc?ref=a1fa0b27e7d6ce96e3c903527787ddbeeeaebaf6", "patch": "@@ -244,8 +244,10 @@ java::lang::System::init_properties (void)\n   SET (\"file.separator\", \"/\");\n   SET (\"path.separator\", \":\");\n   SET (\"line.separator\", \"\\n\");\n-  // FIXME: look at getenv(\"TMPDIR\");\n-  SET (\"java.io.tmpdir\", \"/tmp\");\n+  char *tmpdir = ::getenv(\"TMPDIR\");\n+  if (! tmpdir)\n+    tmpdir = \"/tmp\";\n+  SET (\"java.io.tmpdir\", tmpdir);\n #endif\n \n #ifdef HAVE_UNAME"}]}