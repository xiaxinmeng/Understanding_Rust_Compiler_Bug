{"sha": "5625e74790579b589106e717dba7820933e541f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYyNWU3NDc5MDU3OWI1ODkxMDZlNzE3ZGJhNzgyMDkzM2U1NDFmMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-03-05T15:40:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-03-05T15:40:15Z"}, "message": "re PR c++/84618 (ICE in build_capture_proxy, at cp/lambda.c:460)\n\n/cp\n2018-03-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/84618\n\t* parser.c (cp_parser_lambda_introducer): Reject any capture not\n\tinvolving a VAR_DECL or a PARM_DECL.\n\n/testsuite\n2018-03-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/84618\n\t* g++.dg/cpp0x/lambda/lambda-ice29.C: New.\n\t* g++.dg/cpp0x/lambda/lambda-ice17.C: Adjust.\n\t* g++.dg/cpp0x/lambda/lambda-ice23.C: Likewise.\n\nFrom-SVN: r258250", "tree": {"sha": "024dc9c2b60e4d0d63eeaa983a0a814b84156d75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/024dc9c2b60e4d0d63eeaa983a0a814b84156d75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5625e74790579b589106e717dba7820933e541f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5625e74790579b589106e717dba7820933e541f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5625e74790579b589106e717dba7820933e541f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5625e74790579b589106e717dba7820933e541f1/comments", "author": null, "committer": null, "parents": [{"sha": "800916ab502edfefa9efb455c0a9e6455dbdccf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800916ab502edfefa9efb455c0a9e6455dbdccf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/800916ab502edfefa9efb455c0a9e6455dbdccf5"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "5e166350e40a8273f47cfbe6104a7ecddc92fb80", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5625e74790579b589106e717dba7820933e541f1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5625e74790579b589106e717dba7820933e541f1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5625e74790579b589106e717dba7820933e541f1", "patch": "@@ -1,3 +1,9 @@\n+2018-03-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/84618\n+\t* parser.c (cp_parser_lambda_introducer): Reject any capture not\n+\tinvolving a VAR_DECL or a PARM_DECL.\n+\n 2018-03-05  P\u00e1draig Brady  <P@draigBrady.com>\n \t    Jason  Merrill  <jason@redhat.com>\n \t    Nathan Sidwell  <nathan@acm.org>"}, {"sha": "460b5eaf10e974986777e978edbf5765b2f342ae", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5625e74790579b589106e717dba7820933e541f1/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5625e74790579b589106e717dba7820933e541f1/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5625e74790579b589106e717dba7820933e541f1", "patch": "@@ -10377,15 +10377,15 @@ cp_parser_lambda_introducer (cp_parser* parser, tree lambda_expr)\n \t      unqualified_name_lookup_error (capture_id);\n \t      continue;\n \t    }\n-\t  else if (DECL_P (capture_init_expr)\n-\t\t   && (!VAR_P (capture_init_expr)\n-\t\t       && TREE_CODE (capture_init_expr) != PARM_DECL))\n+\t  else if (!VAR_P (capture_init_expr)\n+\t\t   && TREE_CODE (capture_init_expr) != PARM_DECL)\n \t    {\n \t      error_at (capture_token->location,\n-\t\t\t\"capture of non-variable %qD \",\n+\t\t\t\"capture of non-variable %qE \",\n \t\t\tcapture_init_expr);\n-\t      inform (DECL_SOURCE_LOCATION (capture_init_expr),\n-\t\t      \"%q#D declared here\", capture_init_expr);\n+\t      if (DECL_P (capture_init_expr))\n+\t\tinform (DECL_SOURCE_LOCATION (capture_init_expr),\n+\t\t\t\"%q#D declared here\", capture_init_expr);\n \t      continue;\n \t    }\n \t  if (VAR_P (capture_init_expr)"}, {"sha": "44543c31f0f38fe40c67b630debdac8ef2b95f78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5625e74790579b589106e717dba7820933e541f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5625e74790579b589106e717dba7820933e541f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5625e74790579b589106e717dba7820933e541f1", "patch": "@@ -1,3 +1,10 @@\n+2018-03-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/84618\n+\t* g++.dg/cpp0x/lambda/lambda-ice29.C: New.\n+\t* g++.dg/cpp0x/lambda/lambda-ice17.C: Adjust.\n+\t* g++.dg/cpp0x/lambda/lambda-ice23.C: Likewise.\n+\n 2018-03-05  Olga Makhotina  <olga.makhotina@intel.com>\n \n \t* g++.dg/other/i386-2.C: Add -mpconfig and -mwbnoinvd."}, {"sha": "8d84b64cfded39dd676fa4090a908f5c70751f61", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-ice17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5625e74790579b589106e717dba7820933e541f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5625e74790579b589106e717dba7820933e541f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice17.C?ref=5625e74790579b589106e717dba7820933e541f1", "patch": "@@ -5,7 +5,7 @@ void foo (int);\n \n void foo (void)\n {\n-  [&foo] // { dg-error \"cannot capture\" }\n+  [&foo] // { dg-error \"5:capture of non-variable\" }\n   {\n     foo (0);\n   };"}, {"sha": "4fd2db63967dd600e0e533af1dc92f3af12e552e", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-ice23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5625e74790579b589106e717dba7820933e541f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5625e74790579b589106e717dba7820933e541f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice23.C?ref=5625e74790579b589106e717dba7820933e541f1", "patch": "@@ -3,7 +3,7 @@\n \n template <typename T>\n constexpr int r(T x) {\n-  auto f = [r,x]() { return r(x); }; // { dg-error \"incomplete type\" }\n+  auto f = [r,x]() { return r(x); }; // { dg-error \"13:capture of non-variable\" }\n   return 0;\n }\n "}, {"sha": "80f5b38b83a236a364da352043be425f27635e74", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-ice29.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5625e74790579b589106e717dba7820933e541f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5625e74790579b589106e717dba7820933e541f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice29.C?ref=5625e74790579b589106e717dba7820933e541f1", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/84618\n+// { dg-do compile { target c++11 } }\n+\n+template <int>\n+struct S {\n+  void b() const;\n+  void b() { [b] {}; } // { dg-error \"15:capture of non-variable\" }\n+};"}]}