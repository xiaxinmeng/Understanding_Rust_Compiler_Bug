{"sha": "8a17a7b460c3f511a5ed5d29974861c1628e1ecd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExN2E3YjQ2MGMzZjUxMWE1ZWQ1ZDI5OTc0ODYxYzE2MjhlMWVjZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-09-14T19:11:14Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-09-14T19:11:14Z"}, "message": "static_members.cc: New file.\n\n\n2000-09-13  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/22_locale/static_members.cc: New file.\n\t* testsuite/22_locale/ctor_copy_dtor.cc: New file.\n\t* src/locale.cc: Minor formatting tweaks.\n\nFrom-SVN: r36415", "tree": {"sha": "4ba764bff8e631fdeb7f19877d156af4b2cd8afd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ba764bff8e631fdeb7f19877d156af4b2cd8afd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a17a7b460c3f511a5ed5d29974861c1628e1ecd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a17a7b460c3f511a5ed5d29974861c1628e1ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a17a7b460c3f511a5ed5d29974861c1628e1ecd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a17a7b460c3f511a5ed5d29974861c1628e1ecd/comments", "author": null, "committer": null, "parents": [{"sha": "17f0f8fac745e2713017636cfb4adcc609227a09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f0f8fac745e2713017636cfb4adcc609227a09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17f0f8fac745e2713017636cfb4adcc609227a09"}], "stats": {"total": 127, "additions": 127, "deletions": 0}, "files": [{"sha": "ddc2a6a193152778f56b58de8ff9b01488a512ac", "filename": "libstdc++-v3/testsuite/22_locale/ctor_copy_dtor.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a17a7b460c3f511a5ed5d29974861c1628e1ecd/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctor_copy_dtor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a17a7b460c3f511a5ed5d29974861c1628e1ecd/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctor_copy_dtor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctor_copy_dtor.cc?ref=8a17a7b460c3f511a5ed5d29974861c1628e1ecd", "patch": "@@ -0,0 +1,64 @@\n+// 2000-09-13 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2000 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.1.1.2 locale constructors and destructors [lib.locale.cons]\n+\n+#include <locale>\n+#include <debug_assert.h>\n+\n+typedef std::codecvt<char, char, mbstate_t> ccodecvt;\n+class gnu_codecvt: public ccodecvt { }; \n+\n+void test01()\n+{\n+  using namespace std;\n+\n+  bool test = true;\n+  string str1, str2;\n+\n+  // construct a locale object with the C facet\n+  const locale& \tloc01 = locale::classic();\n+  // construct a locale object with the specialized facet.\n+  locale                loc02(locale::classic(), new gnu_codecvt);\n+  VERIFY ( loc01 != loc02 );\n+  VERIFY ( !(loc01 == loc02) );\n+\n+  // 1\n+  // locale() throw()\n+  locale loc03;\n+  VERIFY ( loc03 == loc01);\n+  locale loc04 = global(loc02);\n+  locale loc05;\n+  VERIFY (loc05 != loc03);\n+  VERIFY (loc05 == loc02);\n+\n+#if  0\n+  str1 = cloc.name();\n+  str2 = loc.name();  \n+  VERIFY( loc(str1, str2) == false );\n+ #endif\n+}\n+\n+int main ()\n+{\n+  test01();\n+\n+  return 0;\n+}"}, {"sha": "807ef2222558b0b6f865820ce1451e7018adb101", "filename": "libstdc++-v3/testsuite/22_locale/static_members.cc", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a17a7b460c3f511a5ed5d29974861c1628e1ecd/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fstatic_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a17a7b460c3f511a5ed5d29974861c1628e1ecd/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fstatic_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fstatic_members.cc?ref=8a17a7b460c3f511a5ed5d29974861c1628e1ecd", "patch": "@@ -0,0 +1,63 @@\n+// 2000-09-13 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2000 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.1.1.5 locale static members [lib.locale.statics]\n+\n+#include <locale>\n+#include <debug_assert.h>\n+\n+typedef std::codecvt<char, char, mbstate_t> ccodecvt;\n+class gnu_codecvt: public ccodecvt { }; \n+\n+void test01()\n+{\n+  using namespace std;\n+\n+  bool test = true;\n+  string str1, str2;\n+\n+  // construct a locale object with the C facet\n+  const locale& \tloc01 = locale::classic();\n+  // construct a locale object with the specialized facet.\n+  locale                loc02(locale::classic(), new gnu_codecvt);\n+  VERIFY ( loc01 != loc02 );\n+  VERIFY ( !(loc01 == loc02) );\n+\n+  // classic\n+  locale loc06(\"C\");\n+  VERIFY (loc06 == loc01);\n+  str1 = loc06.name();\n+  VERIFY( str1 == \"C\" );\n+\n+  // global\n+  locale loc03;\n+  VERIFY ( loc03 == loc01);\n+  locale loc04 = locale::global(loc02);\n+  locale loc05;\n+  VERIFY (loc05 != loc03);\n+  VERIFY (loc05 == loc02);\n+}\n+\n+int main ()\n+{\n+  test01();\n+\n+  return 0;\n+}"}]}