{"sha": "d241134695a3a28da92ebdfcf35e7ee7385adaf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI0MTEzNDY5NWEzYTI4ZGE5MmViZGZjZjM1ZTdlZTczODVhZGFmNA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-08-20T16:02:58Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-08-20T16:07:43Z"}, "message": "vxworks: Fix GCC selftests for *-wrs-vxworks7-* targets\n\nCurrently when building a cross-compiler targeting arm-wrs-vxworks7, the\nself-tests fail unless the VSB_DIR environment variable is set.\n\nThis prevents attempts at designating the location of runtime header\nfiles, libraries or startfiles, which would fail on unset environment\nvariables and aren't needed for such tests.\n\ngcc/ChangeLog:\n\n\t* config/vxworks.h (VXWORKS_ADDITIONAL_CPP_SPEC): Don't include\n\tVxWorks header files if -fself-test is used.\n\t(STARTFILE_PREFIX_SPEC): Avoid using VSB_DIR if -fself-test is used.", "tree": {"sha": "c2eda819dc88e5b3a9d967b7f8a4403970d25ac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2eda819dc88e5b3a9d967b7f8a4403970d25ac6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d241134695a3a28da92ebdfcf35e7ee7385adaf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d241134695a3a28da92ebdfcf35e7ee7385adaf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d241134695a3a28da92ebdfcf35e7ee7385adaf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d241134695a3a28da92ebdfcf35e7ee7385adaf4/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05814dde7024a8fa05a735cafcda72b5eb5ec0c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05814dde7024a8fa05a735cafcda72b5eb5ec0c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05814dde7024a8fa05a735cafcda72b5eb5ec0c0"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "e50260b08e454e3b29c398df2d5b9c4df7392295", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d241134695a3a28da92ebdfcf35e7ee7385adaf4/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d241134695a3a28da92ebdfcf35e7ee7385adaf4/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=d241134695a3a28da92ebdfcf35e7ee7385adaf4", "patch": "@@ -36,11 +36,16 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Since we provide a default -isystem, expand -isystem on the command\n    line early.  */\n+\n+/* Self-tests may be run in contexts where the VxWorks environment isn't\n+   available.  Prevent attempts at designating the location of runtime header\n+   files, libraries or startfiles, which would fail on unset environment\n+   variables and aren't needed for such tests.  */\n #if TARGET_VXWORKS7\n \n #undef VXWORKS_ADDITIONAL_CPP_SPEC\n #define VXWORKS_ADDITIONAL_CPP_SPEC                     \\\n- \"%{!nostdinc:                                          \\\n+ \"%{!nostdinc:%{!fself-test=*:                          \\\n     %{isystem*}                                         \\\n     %{mrtp: -idirafter %:getenv(VSB_DIR /h)             \\\n             -idirafter %:getenv(VSB_DIR /share/h)       \\\n@@ -49,19 +54,19 @@ along with GCC; see the file COPYING3.  If not see\n       ;:    -idirafter %:getenv(VSB_DIR /h)             \\\n             -idirafter %:getenv(VSB_DIR /share/h)       \\\n             -idirafter %:getenv(VSB_DIR /krnl/h/system) \\\n-            -idirafter %:getenv(VSB_DIR /krnl/h/public)}}\"\n+            -idirafter %:getenv(VSB_DIR /krnl/h/public)}}}\"\n \n #else /* TARGET_VXWORKS7 */\n \n #undef VXWORKS_ADDITIONAL_CPP_SPEC\n #define VXWORKS_ADDITIONAL_CPP_SPEC\t\t\\\n- \"%{!nostdinc:\t\t\t\t\t\\\n+ \"%{!nostdinc:%{!fself-test=*:\t\t\t\\\n     %{isystem*}\t\t\t\t\t\\\n     %{mrtp: -idirafter %:getenv(WIND_USR /h)\t\\\n \t    -idirafter %:getenv(WIND_USR /h/wrn/coreip) \\\n       ;:    -idirafter %:getenv(WIND_BASE /target/h) \\\n \t    -idirafter %:getenv(WIND_BASE /target/h/wrn/coreip) \\\n-}}\"\n+}}}\"\n \n #endif\n \n@@ -108,7 +113,8 @@ along with GCC; see the file COPYING3.  If not see\n \n #if TARGET_VXWORKS7\n #undef  STARTFILE_PREFIX_SPEC\n-#define STARTFILE_PREFIX_SPEC \"%:getenv(VSB_DIR /usr/lib/common)\"\n+#define STARTFILE_PREFIX_SPEC \\\n+  \"%{!fself-test=*:%:getenv(VSB_DIR /usr/lib/common)}\"\n #define TLS_SYM \"-u __tls__\"\n #else\n #define TLS_SYM \"\""}]}