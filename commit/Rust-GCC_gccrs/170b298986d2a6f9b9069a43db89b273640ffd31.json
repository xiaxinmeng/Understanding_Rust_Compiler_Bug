{"sha": "170b298986d2a6f9b9069a43db89b273640ffd31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcwYjI5ODk4NmQyYTZmOWI5MDY5YTQzZGI4OWIyNzM2NDBmZmQzMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:51:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:51:09Z"}, "message": "[multiple changes]\n\n2011-08-03  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb: Minor code cleanup.\n\n2011-08-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb: Do not generate distribution stubs if serious errors\n\thave been diagnosed.\n\n2011-08-03  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Try_Primitive_Operation): when checking the validity of\n\tthe first formal of a primitive operation, go to the base type to\n\thandle properly an access to a derived type with constrained\n\tdiscriminants.\n\t* sem_type.adb (Disambiguate): an immediately visible operator hides a\n\tuser-defined function that is only use-visible.\n\t* inline.adb: init procs are inlineable.\n\nFrom-SVN: r177253", "tree": {"sha": "7fe583828bc244e1722fc6eebfbbdbe98b2352ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fe583828bc244e1722fc6eebfbbdbe98b2352ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/170b298986d2a6f9b9069a43db89b273640ffd31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/170b298986d2a6f9b9069a43db89b273640ffd31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/170b298986d2a6f9b9069a43db89b273640ffd31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/170b298986d2a6f9b9069a43db89b273640ffd31/comments", "author": null, "committer": null, "parents": [{"sha": "e917aec294d1a0e602aaf31a70df3a784f7a48b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e917aec294d1a0e602aaf31a70df3a784f7a48b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e917aec294d1a0e602aaf31a70df3a784f7a48b9"}], "stats": {"total": 64, "additions": 58, "deletions": 6}, "files": [{"sha": "530d52bd82cccad8af16b3ae421ef655dbdf2c06", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=170b298986d2a6f9b9069a43db89b273640ffd31", "patch": "@@ -1,3 +1,22 @@\n+2011-08-03  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb: Minor code cleanup.\n+\n+2011-08-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb: Do not generate distribution stubs if serious errors\n+\thave been diagnosed.\n+\n+2011-08-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Try_Primitive_Operation): when checking the validity of\n+\tthe first formal of a primitive operation, go to the base type to\n+\thandle properly an access to a derived type with constrained\n+\tdiscriminants.\n+\t* sem_type.adb (Disambiguate): an immediately visible operator hides a\n+\tuser-defined function that is only use-visible.\n+\t* inline.adb: init procs are inlineable.\n+\n 2011-08-03  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aggr.adb, sem_ch3.adb, lib.ads, gnatcmd.adb, prj-proc.adb,"}, {"sha": "1487f770abd94758555628a7950902f77a21637d", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=170b298986d2a6f9b9069a43db89b273640ffd31", "patch": "@@ -7764,9 +7764,8 @@ package body Exp_Ch4 is\n \n                   if Disc = Entity (Selector_Name (N))\n                     and then (Is_Entity_Name (Dval)\n-                               or else Nkind (Dval) = N_Integer_Literal\n-                               or else Is_Subtype_Declaration\n-                               or else Is_Static_Expression (Dval))\n+                               or else Compile_Time_Known_Value (Dval)\n+                               or else Is_Subtype_Declaration)\n                   then\n                      --  Here we have the matching discriminant. Check for\n                      --  the case of a discriminant of a component that is"}, {"sha": "51cf49a98bd46c4fb96bd032a201ed73bdf44e63", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=170b298986d2a6f9b9069a43db89b273640ffd31", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,6 +26,7 @@\n with Atree;    use Atree;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n+with Errout;   use Errout;\n with Exp_Atag; use Exp_Atag;\n with Exp_Disp; use Exp_Disp;\n with Exp_Strm; use Exp_Strm;\n@@ -1029,6 +1030,10 @@ package body Exp_Dist is\n          pragma Warnings (Off, Subp_Str);\n \n       begin\n+         if Serious_Errors_Detected /= 0 then\n+            return;\n+         end if;\n+\n          Assign_Subprogram_Identifier\n            (Defining_Unit_Name (Spec), Current_Subprogram_Number, Subp_Str);\n \n@@ -3836,6 +3841,10 @@ package body Exp_Dist is\n             pragma Warnings (Off, Subp_Val);\n \n          begin\n+            if Serious_Errors_Detected /= 0 then\n+               return;\n+            end if;\n+\n             --  Build receiving stub\n \n             Current_Stubs :=\n@@ -6840,6 +6849,10 @@ package body Exp_Dist is\n             Proxy_Obj_Addr : Entity_Id;\n \n          begin\n+            if Serious_Errors_Detected /= 0 then\n+               return;\n+            end if;\n+\n             --  Build receiving stub\n \n             Current_Stubs :="}, {"sha": "c508ef4bb96a77099212a27ab01c1b1f784ddd2f", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=170b298986d2a6f9b9069a43db89b273640ffd31", "patch": "@@ -344,6 +344,7 @@ package body Inline is\n                elsif not Is_Inlined (Pack)\n                  and then\n                    (not Has_Completion (E)\n+                     or else Is_Init_Proc (E)\n                      or else Is_Expression_Function (E))\n                then\n                   Set_Is_Inlined (Pack);"}, {"sha": "912e09b643dd716a3491de6153cc339ab7ec7aa5", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=170b298986d2a6f9b9069a43db89b273640ffd31", "patch": "@@ -7260,7 +7260,8 @@ package body Sem_Ch4 is\n \n               or else\n                 (Ekind (Typ) = E_Anonymous_Access_Type\n-                  and then Designated_Type (Typ) = Base_Type (Corr_Type));\n+                 and then\n+                   Base_Type (Designated_Type (Typ)) = Base_Type (Corr_Type));\n          end Valid_First_Argument_Of;\n \n       --  Start of processing for Try_Primitive_Operation"}, {"sha": "7f43699d84e2d26befb5094646bc90a940774dd0", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170b298986d2a6f9b9069a43db89b273640ffd31/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=170b298986d2a6f9b9069a43db89b273640ffd31", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1908,6 +1908,25 @@ package body Sem_Type is\n                   end if;\n                end;\n \n+            --  An immediately visible operator hides a use-visible user-\n+            --  defined operation. This disambiguation cannot take place\n+            --  earlier because the visibility of the predefined operator\n+            --  can only be established when operand types are known.\n+\n+            elsif Ekind (User_Subp) = E_Function\n+              and then Ekind (Predef_Subp) = E_Operator\n+              and then Nkind (N) in N_Op\n+              and then not Is_Overloaded (Right_Opnd (N))\n+              and then\n+                Is_Immediately_Visible (Base_Type (Etype (Right_Opnd (N))))\n+              and then Is_Potentially_Use_Visible (User_Subp)\n+            then\n+               if It2.Nam = Predef_Subp then\n+                  return It1;\n+               else\n+                  return It2;\n+               end if;\n+\n             else\n                return No_Interp;\n             end if;"}]}