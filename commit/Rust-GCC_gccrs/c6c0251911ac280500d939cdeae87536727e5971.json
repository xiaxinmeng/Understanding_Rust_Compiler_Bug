{"sha": "c6c0251911ac280500d939cdeae87536727e5971", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZjMDI1MTkxMWFjMjgwNTAwZDkzOWNkZWFlODc1MzY3MjdlNTk3MQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-05-14T16:06:41Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-05-14T16:06:41Z"}, "message": "PR middle-end/80669 - Bad -Wstringop-overflow warnings for stpncpy\n\ngcc/ChangeLog:\n\n\tPR middle-end/80669\n\t* builtins.c (expand_builtin_stpncpy): Simplify.\n\ngcc/testsuite/ChangeLog:\n\n\tPR middle-end/80669\n\t* gcc.dg/builtin-stpncpy.c: New test.\n\nFrom-SVN: r248034", "tree": {"sha": "ff47219f310b04fdb7a37f135586d1f14bfd0c82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff47219f310b04fdb7a37f135586d1f14bfd0c82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6c0251911ac280500d939cdeae87536727e5971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c0251911ac280500d939cdeae87536727e5971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6c0251911ac280500d939cdeae87536727e5971", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c0251911ac280500d939cdeae87536727e5971/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6d4d7701a4c40f4c46904292456b76502e1ae63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d4d7701a4c40f4c46904292456b76502e1ae63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6d4d7701a4c40f4c46904292456b76502e1ae63"}], "stats": {"total": 105, "additions": 88, "deletions": 17}, "files": [{"sha": "b35a5343fbc8e6ef03a16aa81a9a850feb540203", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c0251911ac280500d939cdeae87536727e5971/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c0251911ac280500d939cdeae87536727e5971/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6c0251911ac280500d939cdeae87536727e5971", "patch": "@@ -1,3 +1,8 @@\n+2017-05-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/80669\n+\t* builtins.c (expand_builtin_stpncpy): Simplify.\n+\n 2017-05-14  Daniel Santos  <daniel.santos@pobox.com>\n \n \t* config/i386/i386.opt: Add option -mcall-ms2sysv-xlogues."}, {"sha": "4f6c9c400845961d113a922e84871b44a58f5f71", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c0251911ac280500d939cdeae87536727e5971/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c0251911ac280500d939cdeae87536727e5971/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=c6c0251911ac280500d939cdeae87536727e5971", "patch": "@@ -3788,31 +3788,18 @@ expand_builtin_stpncpy (tree exp, rtx)\n       || !warn_stringop_overflow)\n     return NULL_RTX;\n \n+  /* The source and destination of the call.  */\n   tree dest = CALL_EXPR_ARG (exp, 0);\n   tree src = CALL_EXPR_ARG (exp, 1);\n \n-  /* The number of bytes to write (not the maximum).  */\n+  /* The exact number of bytes to write (not the maximum).  */\n   tree len = CALL_EXPR_ARG (exp, 2);\n-  /* The length of the source sequence.  */\n-  tree slen = c_strlen (src, 1);\n-\n-  /* Try to determine the range of lengths that the source expression\n-     refers to.  */\n-  tree lenrange[2];\n-  if (slen)\n-    lenrange[0] = lenrange[1] = slen;\n-  else\n-    {\n-      get_range_strlen (src, lenrange);\n-      slen = lenrange[0];\n-    }\n \n+  /* The size of the destination object.  */\n   tree destsize = compute_objsize (dest, warn_stringop_overflow - 1);\n \n-  /* The number of bytes to write is LEN but check_sizes will also\n-     check SLEN if LEN's value isn't known.  */\n   check_sizes (OPT_Wstringop_overflow_,\n-\t       exp, len, /*maxlen=*/NULL_TREE, slen, destsize);\n+\t       exp, len, /*maxlen=*/NULL_TREE, src, destsize);\n \n   return NULL_RTX;\n }"}, {"sha": "8def0f59106a25e498bdea4d07e7c0ac4eec34aa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c0251911ac280500d939cdeae87536727e5971/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c0251911ac280500d939cdeae87536727e5971/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6c0251911ac280500d939cdeae87536727e5971", "patch": "@@ -1,3 +1,8 @@\n+2017-05-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/80669\n+\t* gcc.dg/builtin-stpncpy.c: New test.\n+\n 2017-05-14  Daniel Santos  <daniel.santos@pobox.com>\n \n \t* gcc.target/x86_64/abi/ms-sysv/do-test.S: New file."}, {"sha": "e4290d5635ce7b86dc2ba4d2fead3b96a8da2261", "filename": "gcc/testsuite/gcc.dg/builtin-stpncpy.c", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c0251911ac280500d939cdeae87536727e5971/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-stpncpy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c0251911ac280500d939cdeae87536727e5971/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-stpncpy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-stpncpy.c?ref=c6c0251911ac280500d939cdeae87536727e5971", "patch": "@@ -0,0 +1,74 @@\n+/* PR tree-optimization/80669 - Bad -Wstringop-overflow warnings for stpncpy\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+#define SIZE_MAX __SIZE_MAX__\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+void sink (char*);\n+\n+#define stpncpy (d, s, n)  sink (__builtin_stpncpy (d, s, n))\n+\n+size_t value (void);\n+\n+size_t range (size_t min, size_t max)\n+{\n+  size_t val = value ();\n+  return val < min || max < val ? min : val;\n+}\n+\n+/* Verify that no warning is issued for stpncpy with constant size.  */\n+void test_cst (char *d)\n+{\n+  __builtin_stpncpy (d, \"123\", 0);\n+  __builtin_stpncpy (d, \"123\", 1);\n+  __builtin_stpncpy (d, \"123\", 2);\n+  __builtin_stpncpy (d, \"123\", 3);\n+  __builtin_stpncpy (d, \"123\", 4);\n+  __builtin_stpncpy (d, \"123\", 5);\n+  __builtin_stpncpy (d, \"123\", 999);\n+\n+  size_t n = SIZE_MAX / 2;\n+\n+  __builtin_stpncpy (d, \"123\", n);\n+\n+  __builtin_stpncpy (d, \"123\", n + 1);    /* { dg-warning \"specified size \\[0-9\\]+ exceeds maximum object size \\[0-9\\]+\" } */\n+}\n+\n+\n+/* Verify that no warning is issued for stpncpy with size in some range.  */\n+void test_rng (char *d)\n+{\n+#define R(min, max) range (min, max)\n+\n+  __builtin_stpncpy (d, \"123\", R (0, 1));\n+  __builtin_stpncpy (d, \"123\", R (0, 2));\n+  __builtin_stpncpy (d, \"123\", R (0, 3));\n+  __builtin_stpncpy (d, \"123\", R (0, 4));\n+  __builtin_stpncpy (d, \"123\", R (0, 5));\n+\n+  __builtin_stpncpy (d, \"123\", R (1, 2));\n+  __builtin_stpncpy (d, \"123\", R (1, 3));\n+  __builtin_stpncpy (d, \"123\", R (1, 4));\n+  __builtin_stpncpy (d, \"123\", R (1, 5));\n+\n+  __builtin_stpncpy (d, \"123\", R (2, 3));\n+  __builtin_stpncpy (d, \"123\", R (2, 4));\n+  __builtin_stpncpy (d, \"123\", R (2, 5));\n+\n+  __builtin_stpncpy (d, \"123\", R (3, 4));\n+  __builtin_stpncpy (d, \"123\", R (3, 5));\n+\n+  __builtin_stpncpy (d, \"123\", R (4, 5));\n+\n+  __builtin_stpncpy (d, \"123\", R (5, 6));\n+\n+  __builtin_stpncpy (d, \"123\", R (12345, 23456));\n+\n+  size_t n = SIZE_MAX / 2;\n+\n+  __builtin_stpncpy (d, \"123\", R (n - 1, n + 1));\n+\n+  __builtin_stpncpy (d, \"123\", R (n + 1, n + 2));   /* { dg-warning \"specified size between \\[0-9\\]+ and \\[0-9\\]+ exceeds maximum object size \\[0-9\\]+\" } */\n+}"}]}