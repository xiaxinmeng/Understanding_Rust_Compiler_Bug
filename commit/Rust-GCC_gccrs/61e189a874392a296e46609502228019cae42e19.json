{"sha": "61e189a874392a296e46609502228019cae42e19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFlMTg5YTg3NDM5MmEyOTZlNDY2MDk1MDIyMjgwMTljYWU0MmUxOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-10-15T10:58:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-10-15T10:58:28Z"}, "message": "re PR middle-end/87610 (wrong-code with restrict)\n\n2018-10-15  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/87610\n\t* tree-ssa-structalias.c (struct vls_data): Add escaped_p member.\n\t(visit_loadstore): When a used restrict tag escaped verify that\n\tthe points-to solution of \"other\" pointers do not include\n\tescaped.\n\t(compute_dependence_clique): If a used restrict tag escaped\n\tcommunicated that down to visit_loadstore.\n\n\t* gcc.dg/torture/restrict-6.c: New testcase.\n\nFrom-SVN: r265160", "tree": {"sha": "f91ed7a7e771b1acd18d1a2a61eeb542c46a20d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f91ed7a7e771b1acd18d1a2a61eeb542c46a20d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61e189a874392a296e46609502228019cae42e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e189a874392a296e46609502228019cae42e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61e189a874392a296e46609502228019cae42e19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e189a874392a296e46609502228019cae42e19/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cab5fe166dd13e1668801f00189459d3139a9342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab5fe166dd13e1668801f00189459d3139a9342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab5fe166dd13e1668801f00189459d3139a9342"}], "stats": {"total": 54, "additions": 51, "deletions": 3}, "files": [{"sha": "742f5cf837057de8de53e368d1e31cf26ecd63b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e189a874392a296e46609502228019cae42e19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e189a874392a296e46609502228019cae42e19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61e189a874392a296e46609502228019cae42e19", "patch": "@@ -1,3 +1,13 @@\n+2018-10-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/87610\n+\t* tree-ssa-structalias.c (struct vls_data): Add escaped_p member.\n+\t(visit_loadstore): When a used restrict tag escaped verify that\n+\tthe points-to solution of \"other\" pointers do not include\n+\tescaped.\n+\t(compute_dependence_clique): If a used restrict tag escaped\n+\tcommunicated that down to visit_loadstore.\n+\n 2018-10-15  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390.c (s390_expand_vec_init): Force vector element"}, {"sha": "e189162c654c5af6847b23372c1908c255f9ca2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e189a874392a296e46609502228019cae42e19/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e189a874392a296e46609502228019cae42e19/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61e189a874392a296e46609502228019cae42e19", "patch": "@@ -1,3 +1,8 @@\n+2018-10-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/87610\n+\t* gcc.dg/torture/restrict-6.c: New testcase.\n+\n 2018-10-15  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* g++.dg/vec-init-1.C: New test."}, {"sha": "9fe12a68850a994c4977596189e40fe07e087799", "filename": "gcc/testsuite/gcc.dg/torture/restrict-6.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e189a874392a296e46609502228019cae42e19/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Frestrict-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e189a874392a296e46609502228019cae42e19/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Frestrict-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Frestrict-6.c?ref=61e189a874392a296e46609502228019cae42e19", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+void __attribute__((noinline)) g(int **a, int *b)\n+{\n+  *a = b;\n+}\n+\n+int foo(int * restrict p, int *q)\n+{\n+  g(&q, p);\n+  *p = 1;\n+  *q = 2;\n+  return *p + *q;\n+}\n+\n+int main()\n+{\n+  int x, y;\n+  if (foo(&x, &y) != 4)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "77518031a718eb7a1297db40503bb5b8f75ec63a", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e189a874392a296e46609502228019cae42e19/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e189a874392a296e46609502228019cae42e19/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=61e189a874392a296e46609502228019cae42e19", "patch": "@@ -7397,6 +7397,7 @@ delete_points_to_sets (void)\n struct vls_data\n {\n   unsigned short clique;\n+  bool escaped_p;\n   bitmap rvars;\n };\n \n@@ -7408,6 +7409,7 @@ visit_loadstore (gimple *, tree base, tree ref, void *data)\n {\n   unsigned short clique = ((vls_data *) data)->clique;\n   bitmap rvars = ((vls_data *) data)->rvars;\n+  bool escaped_p = ((vls_data *) data)->escaped_p;\n   if (TREE_CODE (base) == MEM_REF\n       || TREE_CODE (base) == TARGET_MEM_REF)\n     {\n@@ -7428,7 +7430,8 @@ visit_loadstore (gimple *, tree base, tree ref, void *data)\n \t    return false;\n \n \t  vi = get_varinfo (find (vi->id));\n-\t  if (bitmap_intersect_p (rvars, vi->solution))\n+\t  if (bitmap_intersect_p (rvars, vi->solution)\n+\t      || (escaped_p && bitmap_bit_p (vi->solution, escaped_id)))\n \t    return false;\n \t}\n \n@@ -7505,6 +7508,7 @@ compute_dependence_clique (void)\n   unsigned short clique = 0;\n   unsigned short last_ruid = 0;\n   bitmap rvars = BITMAP_ALLOC (NULL);\n+  bool escaped_p = false;\n   for (unsigned i = 0; i < num_ssa_names; ++i)\n     {\n       tree ptr = ssa_name (i);\n@@ -7574,7 +7578,12 @@ compute_dependence_clique (void)\n \t\t\t\t\t\t last_ruid);\n \t    }\n \t  if (used)\n-\t    bitmap_set_bit (rvars, restrict_var->id);\n+\t    {\n+\t      bitmap_set_bit (rvars, restrict_var->id);\n+\t      varinfo_t escaped = get_varinfo (find (escaped_id));\n+\t      if (bitmap_bit_p (escaped->solution, restrict_var->id))\n+\t\tescaped_p = true;\n+\t    }\n \t}\n     }\n \n@@ -7587,7 +7596,7 @@ compute_dependence_clique (void)\n \t parameters) we can't restrict scoping properly thus the following\n \t is too aggressive there.  For now we have excluded those globals from\n \t getting into the MR_DEPENDENCE machinery.  */\n-      vls_data data = { clique, rvars };\n+      vls_data data = { clique, escaped_p, rvars };\n       basic_block bb;\n       FOR_EACH_BB_FN (bb, cfun)\n \tfor (gimple_stmt_iterator gsi = gsi_start_bb (bb);"}]}