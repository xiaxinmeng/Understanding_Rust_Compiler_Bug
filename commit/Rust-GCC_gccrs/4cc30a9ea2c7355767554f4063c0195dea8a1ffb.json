{"sha": "4cc30a9ea2c7355767554f4063c0195dea8a1ffb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNjMzBhOWVhMmM3MzU1NzY3NTU0ZjQwNjNjMDE5NWRlYThhMWZmYg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-10-24T16:12:36Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-10-24T16:12:36Z"}, "message": "linux.h (ASM_OUTPUT_BYTE): Fix format specifier warnings.\n\n\t* s390/linux.h (ASM_OUTPUT_BYTE): Fix format specifier warnings.\n\t(ASM_OUTPUT_ASCII): Const-ify.  Fix signed/unsigned warning.\n\t(ASM_OUTPUT_MI_THUNK): Fix format specifier warnings.\n\t* s390.c (s390_final_chunkify): Don't use string concatenation.\n\t(s390_function_prologue, s390_function_epilogue): Const-ify.\n\t* s390.h (FUNCTION_PROFILER): Remove unused variable.\n\nFrom-SVN: r46464", "tree": {"sha": "7214a0f3b3812f75b2fbed288bc7599a58db5d4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7214a0f3b3812f75b2fbed288bc7599a58db5d4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cc30a9ea2c7355767554f4063c0195dea8a1ffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc30a9ea2c7355767554f4063c0195dea8a1ffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc30a9ea2c7355767554f4063c0195dea8a1ffb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc30a9ea2c7355767554f4063c0195dea8a1ffb/comments", "author": null, "committer": null, "parents": [{"sha": "c0a4369a237ae3b0cdabff81a2b83fdf3308b5b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0a4369a237ae3b0cdabff81a2b83fdf3308b5b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0a4369a237ae3b0cdabff81a2b83fdf3308b5b2"}], "stats": {"total": 45, "additions": 29, "deletions": 16}, "files": [{"sha": "36bc053caa34c5aee226a10fb0c4ac87e671b075", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc30a9ea2c7355767554f4063c0195dea8a1ffb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc30a9ea2c7355767554f4063c0195dea8a1ffb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cc30a9ea2c7355767554f4063c0195dea8a1ffb", "patch": "@@ -1,3 +1,12 @@\n+2001-10-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* s390/linux.h (ASM_OUTPUT_BYTE): Fix format specifier warnings.\n+\t(ASM_OUTPUT_ASCII): Const-ify.  Fix signed/unsigned warning.\n+\t(ASM_OUTPUT_MI_THUNK): Fix format specifier warnings.\n+\t* s390.c (s390_final_chunkify): Don't use string concatenation.\n+\t(s390_function_prologue, s390_function_epilogue): Const-ify.\n+\t* s390.h (FUNCTION_PROFILER): Remove unused variable.\n+\n 2001-10-24  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-decl.c (finish_decl): Don't add DECL_STMTs for nested function"}, {"sha": "bd5198fa30a3ab452a4d9100cd3641278d232693", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc30a9ea2c7355767554f4063c0195dea8a1ffb/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc30a9ea2c7355767554f4063c0195dea8a1ffb/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=4cc30a9ea2c7355767554f4063c0195dea8a1ffb", "patch": "@@ -166,7 +166,7 @@ do { fprintf (FILE, \"%s\\t\", ASM_LONG);          \\\n /* This is how to output an assembler line for a numeric constant byte.  */\n \n #define ASM_OUTPUT_BYTE(FILE, VALUE)  \\\n-  fprintf ((FILE), \"%s 0x%x\\n\", ASM_BYTE_OP, (VALUE))\n+  fprintf ((FILE), \"%s 0x%x\\n\", ASM_BYTE_OP, (int)(VALUE))\n \n      /* internal macro to output long */\n #define _ASM_OUTPUT_LONG(FILE, VALUE)                                   \\\n@@ -224,20 +224,20 @@ do { fprintf (FILE, \"%s\\t\", ASM_LONG);          \\\n #undef ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(FILE, STR, LENGTH)                             \\\n do {                                                                    \\\n-      register unsigned char *_ascii_bytes = (unsigned char *) (STR);   \\\n-      register unsigned char *limit = _ascii_bytes + (LENGTH);          \\\n+      register const unsigned char *_ascii_bytes = (const unsigned char *) (STR);   \\\n+      register const unsigned char *limit = _ascii_bytes + (LENGTH);          \\\n       register unsigned bytes_in_chunk = 0;                             \\\n       for (; _ascii_bytes < limit; _ascii_bytes++)                      \\\n         {                                                               \\\n-          register unsigned char *p;                                    \\\n+          register const unsigned char *p;                                    \\\n           if (bytes_in_chunk >= 64)                                     \\\n             {                                                           \\\n               fputc ('\\n', (FILE));                                     \\\n               bytes_in_chunk = 0;                                       \\\n             }                                                           \\\n           for (p = _ascii_bytes; p < limit && *p != '\\0'; p++)          \\\n             continue;                                                   \\\n-          if (p < limit && (p - _ascii_bytes) <= STRING_LIMIT)          \\\n+          if (p < limit && (p - _ascii_bytes) <= (long)STRING_LIMIT)    \\\n             {                                                           \\\n               if (bytes_in_chunk > 0)                                   \\\n                 {                                                       \\\n@@ -307,7 +307,9 @@ do {                                                                          \\\n           fprintf (FILE, \"@GOTENT\\n\");                                        \\\n           fprintf (FILE, \"\\tlg    1,0(1)\\n\");                                 \\\n           fprintf (FILE, \"\\tbr    1\\n\");                                      \\\n-          fprintf (FILE, \"0:\\t.long  %d\\n\",DELTA);                            \\\n+          fprintf (FILE, \"0:\\t.long  \");\t                              \\\n+          fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, (DELTA));                   \\\n+          fprintf (FILE, \"\\n\");\t\t\t                              \\\n         }                                                                     \\\n       else                                                                    \\\n         {                                                                     \\\n@@ -318,7 +320,9 @@ do {                                                                          \\\n           fprintf (FILE, \"\\tjg  \");                                           \\\n           assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));      \\\n           fprintf (FILE, \"\\n\");                                               \\\n-          fprintf (FILE, \"0:\\t.long  %d\\n\",DELTA);                            \\\n+          fprintf (FILE, \"0:\\t.long  \");\t\t                      \\\n+          fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, (DELTA));                   \\\n+          fprintf (FILE, \"\\n\");\t\t\t                              \\\n         }                                                                     \\\n     }                                                                         \\\n   else                                                                        \\\n@@ -330,7 +334,9 @@ do {                                                                          \\\n           fprintf (FILE, \"\\t.long  \");                                        \\\n           assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));      \\\n           fprintf (FILE, \"@GOT\\n\");                                           \\\n-          fprintf (FILE, \"\\t.long  %d\\n\",DELTA);                              \\\n+          fprintf (FILE, \"\\t.long  \");\t\t                              \\\n+          fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, (DELTA));                   \\\n+          fprintf (FILE, \"\\n\");\t\t\t                              \\\n           fprintf (FILE, \"0:\\tal  %d,8(1)\\n\",                                 \\\n                    aggregate_value_p (TREE_TYPE                               \\\n                                       (TREE_TYPE (FUNCTION))) ? 3 : 2 );      \\\n@@ -344,7 +350,9 @@ do {                                                                          \\\n           fprintf (FILE, \"\\t.long  \");                                        \\\n           assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));      \\\n           fprintf (FILE, \"-.\\n\");                                             \\\n-          fprintf (FILE, \"\\t.long  %d\\n\",DELTA);                              \\\n+          fprintf (FILE, \"\\t.long  \");\t\t                              \\\n+          fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, (DELTA));                   \\\n+          fprintf (FILE, \"\\n\");\t\t\t                              \\\n           fprintf (FILE, \"0:\\tal  %d,4(1)\\n\",                                 \\\n                    aggregate_value_p (TREE_TYPE                               \\\n                                       (TREE_TYPE (FUNCTION))) ? 3 : 2 );      \\"}, {"sha": "72ab9630325e7ae58b34cb53bcbebe2f6ca94b9e", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc30a9ea2c7355767554f4063c0195dea8a1ffb/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc30a9ea2c7355767554f4063c0195dea8a1ffb/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=4cc30a9ea2c7355767554f4063c0195dea8a1ffb", "patch": "@@ -2161,8 +2161,7 @@ s390_final_chunkify (chunkify)\n \t\t{\n \t\t  debug_rtx (insn);\n \t\t  debug_rtx (tmp);\n-\t\t  fprintf (stderr, \"s390 multiple literalpool support:\"\n-\t\t\t   \"\\n No code label between this insn %X %X\",\n+\t\t  fprintf (stderr, \"s390 multiple literalpool support:\\n No code label between this insn %X %X\",\n \t\t\t   naddr, INSN_ADDRESSES (INSN_UID (tmp)));\n \t\t  abort ();\n \t\t}\n@@ -2487,8 +2486,7 @@ s390_function_prologue (file, lsize)\n   long frame_size;\n   rtx stack_label = 0, got_label = 0;\n   char *l;\n-  char b64[2] = \" \";\n-  b64[0] = TARGET_64BIT ? 'g' : '\\0';\n+  const char *const b64 = TARGET_64BIT ? \"g\" : \"\";\n \n   /* Check for too large size of local variables */\n \n@@ -2801,9 +2799,8 @@ s390_function_epilogue (file, lsize)\n   long frame_size;\n   int return_reg = RETURN_REGNUM;\n   int fp, offset;\n-  char b64[2] = \" \";\n+  const char *const b64 = TARGET_64BIT ? \"g\" : \"\";\n \n-  b64[0] = TARGET_64BIT ? 'g' : '\\0';\n   frame_size = STARTING_FRAME_OFFSET + lsize + save_fprs_p () * 64;\n   \n   if (current_function_uses_pic_offset_table)"}, {"sha": "468b49eaafd5a690b72bd9a150292a37ce348d02", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc30a9ea2c7355767554f4063c0195dea8a1ffb/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc30a9ea2c7355767554f4063c0195dea8a1ffb/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=4cc30a9ea2c7355767554f4063c0195dea8a1ffb", "patch": "@@ -814,7 +814,6 @@ CUMULATIVE_ARGS;\n do {                                     \t\t\t\\\n   extern rtx s390_profile[];  \t\t\t\t\t\\\n   extern int s390_pool_count;     \t\t\t\t\\\n-  rtx tmp;                                    \t\t\t\\\n   static char label[128];                     \t\t\t\\\n   fprintf (FILE, \"# function profiler \\n\");   \t\t\t\\\n   if (TARGET_64BIT) \t\t\t\t\t\t\\"}]}