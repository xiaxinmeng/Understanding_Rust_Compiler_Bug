{"sha": "a42519bebda04c55b8b94a090c518da3ebe2be70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQyNTE5YmViZGEwNGM1NWI4Yjk0YTA5MGM1MThkYTNlYmUyYmU3MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-03-15T18:51:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-03-15T18:51:36Z"}, "message": "re PR bootstrap/4128 (Bootstrap on solaris2.7 fails compiling libf2c/libF77/l_gt.c)\n\n\tPR bootstrap/4128\n\t* config/sparc/sparc.c (gen_v9_scc): Move early clobber test\n\tbefore movrXX only, use reg_overlap_mentioned_p.\n\tOnly special case NE if just one insn can be generated.\n\n\t* gcc.c-torture/compile/20020315-1.c: New test.\n\nFrom-SVN: r50826", "tree": {"sha": "1844b6f9e21e6c527dc28faf9452bea29a0de5cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1844b6f9e21e6c527dc28faf9452bea29a0de5cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a42519bebda04c55b8b94a090c518da3ebe2be70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42519bebda04c55b8b94a090c518da3ebe2be70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a42519bebda04c55b8b94a090c518da3ebe2be70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42519bebda04c55b8b94a090c518da3ebe2be70/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1540944868008eb593c8448eecafc253c0246ce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1540944868008eb593c8448eecafc253c0246ce3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1540944868008eb593c8448eecafc253c0246ce3"}], "stats": {"total": 70, "additions": 56, "deletions": 14}, "files": [{"sha": "b6e1d87aa401e00a4121ca7419fd25b850068070", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42519bebda04c55b8b94a090c518da3ebe2be70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42519bebda04c55b8b94a090c518da3ebe2be70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a42519bebda04c55b8b94a090c518da3ebe2be70", "patch": "@@ -1,3 +1,10 @@\n+2002-03-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/4128\n+\t* config/sparc/sparc.c (gen_v9_scc): Move early clobber test\n+\tbefore movrXX only, use reg_overlap_mentioned_p.\n+\tOnly special case NE if just one insn can be generated.\n+\n 2002-03-15  Jason Merrill  <jason@redhat.com>\n \n \t* varasm.c (assemble_variable): Call resolve_unique_section before"}, {"sha": "a18046c16eb215983ff7dab97f4bc6451df69633", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42519bebda04c55b8b94a090c518da3ebe2be70/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42519bebda04c55b8b94a090c518da3ebe2be70/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=a42519bebda04c55b8b94a090c518da3ebe2be70", "patch": "@@ -2343,16 +2343,7 @@ gen_v9_scc (compare_code, operands)\n \t  || GET_MODE (operands[0]) == DImode))\n     return 0;\n \n-  /* Handle the case where operands[0] == sparc_compare_op0.\n-     We \"early clobber\" the result.  */\n-  if (REGNO (operands[0]) == REGNO (sparc_compare_op0))\n-    {\n-      op0 = gen_reg_rtx (GET_MODE (sparc_compare_op0));\n-      emit_move_insn (op0, sparc_compare_op0);\n-    }\n-  else\n-    op0 = sparc_compare_op0;\n-  /* For consistency in the following.  */\n+  op0 = sparc_compare_op0;\n   op1 = sparc_compare_op1;\n \n   /* Try to use the movrCC insns.  */\n@@ -2362,14 +2353,12 @@ gen_v9_scc (compare_code, operands)\n       && v9_regcmp_p (compare_code))\n     {\n       /* Special case for op0 != 0.  This can be done with one instruction if\n-\t operands[0] == sparc_compare_op0.  We don't assume they are equal\n-\t now though.  */\n+\t operands[0] == sparc_compare_op0.  */\n \n       if (compare_code == NE\n \t  && GET_MODE (operands[0]) == DImode\n-\t  && GET_MODE (op0) == DImode)\n+\t  && rtx_equal_p (op0, operands[0]))\n \t{\n-\t  emit_insn (gen_rtx_SET (VOIDmode, operands[0], op0));\n \t  emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n \t\t\t      gen_rtx_IF_THEN_ELSE (DImode,\n \t\t\t\t       gen_rtx_fmt_ee (compare_code, DImode,\n@@ -2379,6 +2368,14 @@ gen_v9_scc (compare_code, operands)\n \t  return 1;\n \t}\n \n+      if (reg_overlap_mentioned_p (operands[0], op0))\n+\t{\n+\t  /* Handle the case where operands[0] == sparc_compare_op0.\n+\t     We \"early clobber\" the result.  */\n+\t  op0 = gen_reg_rtx (GET_MODE (sparc_compare_op0));\n+\t  emit_move_insn (op0, sparc_compare_op0);\n+\t}\n+\n       emit_insn (gen_rtx_SET (VOIDmode, operands[0], const0_rtx));\n       if (GET_MODE (op0) != DImode)\n \t{"}, {"sha": "b60f1145901315435d2cd7e12f638b8767f7b263", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42519bebda04c55b8b94a090c518da3ebe2be70/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42519bebda04c55b8b94a090c518da3ebe2be70/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a42519bebda04c55b8b94a090c518da3ebe2be70", "patch": "@@ -1,3 +1,7 @@\n+2002-03-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/compile/20020315-1.c: New test.\n+\n 2002-03-15  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* gcc.dg/weak-1.c: Fix scan tests."}, {"sha": "c6c9daa2f720272e2f95f526236e942fc3ab1575", "filename": "gcc/testsuite/gcc.c-torture/compile/20020315-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42519bebda04c55b8b94a090c518da3ebe2be70/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020315-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42519bebda04c55b8b94a090c518da3ebe2be70/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020315-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020315-1.c?ref=a42519bebda04c55b8b94a090c518da3ebe2be70", "patch": "@@ -0,0 +1,34 @@\n+/* PR bootstrap/4128 */\n+\n+extern int bar (char *, char *, int, int);\n+extern long baz (char *, char *, int, int);\n+\n+int sgt (char *a, char *b, int c, int d)\n+{\n+  return bar (a, b, c, d) > 0;\n+}\n+\n+long dgt (char *a, char *b, int c, int d)\n+{\n+  return baz (a, b, c, d) > 0;\n+}\n+\n+int sne (char *a, char *b, int c, int d)\n+{\n+  return bar (a, b, c, d) != 0;\n+}\n+\n+long dne (char *a, char *b, int c, int d)\n+{\n+  return baz (a, b, c, d) != 0;\n+}\n+\n+int seq (char *a, char *b, int c, int d)\n+{\n+  return bar (a, b, c, d) == 0;\n+}\n+\n+long deq (char *a, char *b, int c, int d)\n+{\n+  return baz (a, b, c, d) == 0;\n+}"}]}