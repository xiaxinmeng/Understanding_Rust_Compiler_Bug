{"sha": "9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY2ZmJjZDNjOWFjMmNlNDRjMWYwMjI2YjJiZjZlNThkODEzOThhZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-11-08T11:45:35Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-11-08T11:45:35Z"}, "message": "Simplify call of gimple_call_internal_p.\n\n2017-11-08  Martin Liska  <mliska@suse.cz>\n\n\t* gimplify.c (expand_FALLTHROUGH_r): Simplify usage\n\tof gimple_call_internal_p.\n\nFrom-SVN: r254524", "tree": {"sha": "ed9970d05f29409527482f63720662b8bcf816bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed9970d05f29409527482f63720662b8bcf816bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "106db840d063c19ab6bed5e76fcb5a70dc6c7d80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/106db840d063c19ab6bed5e76fcb5a70dc6c7d80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/106db840d063c19ab6bed5e76fcb5a70dc6c7d80"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "6ba019ca7fe03d2873deab59172e1d6da9a0b657", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af", "patch": "@@ -1,3 +1,8 @@\n+2017-11-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* gimplify.c (expand_FALLTHROUGH_r): Simplify usage\n+\tof gimple_call_internal_p.\n+\n 2017-11-07  Tom de Vries  <tom@codesourcery.com>\n \n \t* config/mips/mips.h (ASM_OUTPUT_LABELREF): Wrap in \"do {} while (0)\"."}, {"sha": "e9168785fc010658f76d0b01f73fe8bb9ddf2a57", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=9f6fbcd3c9ac2ce44c1f0226b2bf6e58d81398af", "patch": "@@ -2223,8 +2223,7 @@ expand_FALLTHROUGH_r (gimple_stmt_iterator *gsi_p, bool *handled_ops_p,\n \t  while (!gsi_end_p (gsi2))\n \t    {\n \t      stmt = gsi_stmt (gsi2);\n-\t      enum gimple_code gc = gimple_code (stmt);\n-\t      if (gc == GIMPLE_LABEL)\n+\t      if (gimple_code (stmt) == GIMPLE_LABEL)\n \t\t{\n \t\t  tree label = gimple_label_label (as_a <glabel *> (stmt));\n \t\t  if (gimple_has_location (stmt) && DECL_ARTIFICIAL (label))\n@@ -2233,8 +2232,7 @@ expand_FALLTHROUGH_r (gimple_stmt_iterator *gsi_p, bool *handled_ops_p,\n \t\t      break;\n \t\t    }\n \t\t}\n-\t      else if (gc == GIMPLE_CALL\n-\t\t       && gimple_call_internal_p (stmt, IFN_ASAN_MARK))\n+\t      else if (gimple_call_internal_p (stmt, IFN_ASAN_MARK))\n \t\t;\n \t      else\n \t\t/* Something other is not expected.  */"}]}