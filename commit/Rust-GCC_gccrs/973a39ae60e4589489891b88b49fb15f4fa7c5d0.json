{"sha": "973a39ae60e4589489891b88b49fb15f4fa7c5d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTczYTM5YWU2MGU0NTg5NDg5ODkxYjg4YjQ5ZmIxNWY0ZmE3YzVkMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-02-06T14:54:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-02-06T14:54:47Z"}, "message": "re PR tree-optimization/52115 (ICE: verify_ssa failed (missing definition for SSA_NAME))\n\n2012-02-06  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/52115\n\t* tree-sra.c (access_has_replacements_p): New function.\n\t(sra_modify_assign): Use it to decide whether a use is uninitialized.\n\n\t* gcc.c-torture/compile/pr52115.c: New testcase.\n\nFrom-SVN: r183937", "tree": {"sha": "9c8b602a7561843e42fb61606d5daa0659ca8d88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c8b602a7561843e42fb61606d5daa0659ca8d88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/973a39ae60e4589489891b88b49fb15f4fa7c5d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973a39ae60e4589489891b88b49fb15f4fa7c5d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/973a39ae60e4589489891b88b49fb15f4fa7c5d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973a39ae60e4589489891b88b49fb15f4fa7c5d0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe924d9ff03ae0e13ab26745c0020cc1fdaf9577", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe924d9ff03ae0e13ab26745c0020cc1fdaf9577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe924d9ff03ae0e13ab26745c0020cc1fdaf9577"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "28f130f35011fc52563353f2511bbb7d341476e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/973a39ae60e4589489891b88b49fb15f4fa7c5d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/973a39ae60e4589489891b88b49fb15f4fa7c5d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=973a39ae60e4589489891b88b49fb15f4fa7c5d0", "patch": "@@ -1,3 +1,9 @@\n+2012-02-06  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/52115\n+\t* tree-sra.c (access_has_replacements_p): New function.\n+\t(sra_modify_assign): Use it to decide whether a use is uninitialized.\n+\n 2012-02-06  Patrick Marlier  <patrick.marlier@gmail.com>\n \n \tPR middle-end/52047"}, {"sha": "305a689479561798ef07f94477bd753931968f63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/973a39ae60e4589489891b88b49fb15f4fa7c5d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/973a39ae60e4589489891b88b49fb15f4fa7c5d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=973a39ae60e4589489891b88b49fb15f4fa7c5d0", "patch": "@@ -1,3 +1,8 @@\n+2012-02-06  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/52115\n+\t* gcc.c-torture/compile/pr52115.c: New testcase.\n+\n 2012-02-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/52129"}, {"sha": "789d08f4d98987020360560423637ae7cb191c31", "filename": "gcc/testsuite/gcc.c-torture/compile/pr52115.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/973a39ae60e4589489891b88b49fb15f4fa7c5d0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr52115.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/973a39ae60e4589489891b88b49fb15f4fa7c5d0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr52115.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr52115.c?ref=973a39ae60e4589489891b88b49fb15f4fa7c5d0", "patch": "@@ -0,0 +1,26 @@\n+struct S\n+{\n+  float f;\n+  long l;\n+};\n+\n+extern int gi;\n+extern float gf;\n+\n+long foo (long p)\n+{\n+  struct S s;\n+  float *pf;\n+\n+  s.l = p;\n+\n+  pf = &s.f;\n+\n+  pf++;\n+  pf--;\n+\n+  gf = *pf + 3.3;\n+  gi = *((short *)pf) + 2;\n+\n+  return s.l + 6;\n+}"}, {"sha": "e2091e5fda49cec2ea82c3c95e22dbddcd543c16", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/973a39ae60e4589489891b88b49fb15f4fa7c5d0/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/973a39ae60e4589489891b88b49fb15f4fa7c5d0/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=973a39ae60e4589489891b88b49fb15f4fa7c5d0", "patch": "@@ -440,6 +440,20 @@ access_has_children_p (struct access *acc)\n   return acc && acc->first_child;\n }\n \n+/* Return true iff ACC is (partly) covered by at least one replacement.  */\n+\n+static bool\n+access_has_replacements_p (struct access *acc)\n+{\n+  struct access *child;\n+  if (acc->grp_to_be_replaced)\n+    return true;\n+  for (child = acc->first_child; child; child = child->next_sibling)\n+    if (access_has_replacements_p (child))\n+      return true;\n+  return false;\n+}\n+\n /* Return a vector of pointers to accesses for the variable given in BASE or\n    NULL if there is none.  */\n \n@@ -2992,10 +3006,9 @@ sra_modify_assign (gimple *stmt, gimple_stmt_iterator *gsi)\n       sra_stats.exprs++;\n     }\n   else if (racc\n-\t   && !access_has_children_p (racc)\n-\t   && !racc->grp_to_be_replaced\n \t   && !racc->grp_unscalarized_data\n-\t   && TREE_CODE (lhs) == SSA_NAME)\n+\t   && TREE_CODE (lhs) == SSA_NAME\n+\t   && !access_has_replacements_p (racc))\n     {\n       rhs = get_repl_default_def_ssa_name (racc);\n       modify_this_stmt = true;"}]}