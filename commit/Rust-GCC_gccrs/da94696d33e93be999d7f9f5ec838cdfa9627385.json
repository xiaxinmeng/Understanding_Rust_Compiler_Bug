{"sha": "da94696d33e93be999d7f9f5ec838cdfa9627385", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5NDY5NmQzM2U5M2JlOTk5ZDdmOWY1ZWM4MzhjZGZhOTYyNzM4NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-30T14:06:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-30T14:06:25Z"}, "message": "[multiple changes]\n\n2011-08-30  Yannick Moy  <moy@adacore.com>\n\n\t* opt.adb, opt.ads (Full_Expander_Active): New function defines a\n\tcommon shorthand for (Expander_Active and not ALFA_Mode) that can be\n\tused for testing full expansion, that is active expansion not in the\n\treduced mode for Alfa\n\t* exp_ch4.adb, exp_ch9.adb, exp_disp.adb, sem_ch10.adb, sem_ch12.adb,\n\tsem_ch6.adb, sem_ch9.adb, sem_res.adb: Use newly defined \"flag\" instead\n\tof the verbose (Expander_Active and not ALFA_Mode)\n\n2011-08-30  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-parame-vms-alpha.ads, s-parame-hpux.ads, s-tassta.adb,\n\ts-tarest.adb, s-parame-vms-ia64.ads, s-soflin.adb, s-secsta.adb,\n\ts-secsta.ads, s-parame.ads, s-parame-vxworks.ads: Renames Ratio to\n\tPercentage, and Sec_Stack_Ratio to Sec_Stack_Percentage.\n\nFrom-SVN: r178313", "tree": {"sha": "25ac99587bec72007353bae02bd1d1c887dbc360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25ac99587bec72007353bae02bd1d1c887dbc360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da94696d33e93be999d7f9f5ec838cdfa9627385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da94696d33e93be999d7f9f5ec838cdfa9627385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da94696d33e93be999d7f9f5ec838cdfa9627385", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da94696d33e93be999d7f9f5ec838cdfa9627385/comments", "author": null, "committer": null, "parents": [{"sha": "315f5f1bfbcbc444e5853fb54fa37edae58e5f91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/315f5f1bfbcbc444e5853fb54fa37edae58e5f91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/315f5f1bfbcbc444e5853fb54fa37edae58e5f91"}], "stats": {"total": 264, "additions": 88, "deletions": 176}, "files": [{"sha": "47a989f6698652d6dcb3916444ec56f6915e1049", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -1,3 +1,20 @@\n+2011-08-30  Yannick Moy  <moy@adacore.com>\n+\n+\t* opt.adb, opt.ads (Full_Expander_Active): New function defines a\n+\tcommon shorthand for (Expander_Active and not ALFA_Mode) that can be\n+\tused for testing full expansion, that is active expansion not in the\n+\treduced mode for Alfa\n+\t* exp_ch4.adb, exp_ch9.adb, exp_disp.adb, sem_ch10.adb, sem_ch12.adb,\n+\tsem_ch6.adb, sem_ch9.adb, sem_res.adb: Use newly defined \"flag\" instead\n+\tof the verbose (Expander_Active and not ALFA_Mode)\n+\n+2011-08-30  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-parame-vms-alpha.ads, s-parame-hpux.ads, s-tassta.adb,\n+\ts-tarest.adb, s-parame-vms-ia64.ads, s-soflin.adb, s-secsta.adb,\n+\ts-secsta.ads, s-parame.ads, s-parame-vxworks.ads: Renames Ratio to\n+\tPercentage, and Sec_Stack_Ratio to Sec_Stack_Percentage.\n+\n 2011-08-30  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_res.adb (Valid_Conversion): Revise test for implicit anonymous"}, {"sha": "e2aff22052943bfc71673315be71e64f308b5507", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -7258,10 +7258,9 @@ package body Exp_Ch4 is\n          end;\n       end if;\n \n-      --  Only array types need any other processing. In formal verification\n-      --  mode, no other processing is done.\n+      --  Only array types need any other processing\n \n-      if not Is_Array_Type (Typ) or else ALFA_Mode then\n+      if not Is_Array_Type (Typ) then\n          return;\n       end if;\n \n@@ -7717,13 +7716,6 @@ package body Exp_Ch4 is\n       Test         : Node_Id;\n \n    begin\n-      --  Do not expand quantified expressions in ALFA mode\n-      --  why not???\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       Decl :=\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Tnn,"}, {"sha": "7620236b82fdf1c07ea497b98d2862fc1fb6ce9b", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 4, "deletions": 95, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -4904,9 +4904,7 @@ package body Exp_Ch9 is\n       Ldecl2 : Node_Id;\n \n    begin\n-      if Expander_Active\n-        and then not ALFA_Mode\n-      then\n+      if Full_Expander_Active then\n          --  If we have no handled statement sequence, we may need to build\n          --  a dummy sequence consisting of a null statement. This can be\n          --  skipped if the trivial accept optimization is permitted.\n@@ -5227,9 +5225,7 @@ package body Exp_Ch9 is\n       --  barrier just as a protected function, and discard the protected\n       --  version of it because it is never called.\n \n-      if Expander_Active\n-        and then not ALFA_Mode\n-      then\n+      if Full_Expander_Active then\n          B_F := Build_Barrier_Function (N, Ent, Prot);\n          Func := Barrier_Function (Ent);\n          Set_Corresponding_Spec (B_F, Func);\n@@ -5267,8 +5263,7 @@ package body Exp_Ch9 is\n          --  condition does not reference any of the generated renamings\n          --  within the function.\n \n-         if Expander_Active\n-           and then not ALFA_Mode\n+         if Full_Expander_Active\n            and then Scope (Entity (Cond)) /= Func\n          then\n             Set_Declarations (B_F, Empty_List);\n@@ -5320,12 +5315,6 @@ package body Exp_Ch9 is\n       Tasknm : Node_Id;\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       Aggr := Make_Aggregate (Loc, Component_Associations => New_List);\n       Count := 0;\n \n@@ -5457,12 +5446,6 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Accept_Statement\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       --  If accept statement is not part of a list, then its parent must be\n       --  an accept alternative, and, as described above, we do not do any\n       --  expansion for such accept statements at this level.\n@@ -5913,12 +5896,6 @@ package body Exp_Ch9 is\n       T   : Entity_Id;  --  Additional status flag\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       Process_Statements_For_Controlled_Objects (Trig);\n       Process_Statements_For_Controlled_Objects (Abrt);\n \n@@ -6868,12 +6845,6 @@ package body Exp_Ch9 is\n       S : Entity_Id;  --  Primitive operation slot\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       Process_Statements_For_Controlled_Objects (N);\n \n       if Ada_Version >= Ada_2005\n@@ -7190,12 +7161,6 @@ package body Exp_Ch9 is\n    procedure Expand_N_Delay_Relative_Statement (N : Node_Id) is\n       Loc : constant Source_Ptr := Sloc (N);\n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       Rewrite (N,\n         Make_Procedure_Call_Statement (Loc,\n           Name => New_Reference_To (RTE (RO_CA_Delay_For), Loc),\n@@ -7215,12 +7180,6 @@ package body Exp_Ch9 is\n       Typ : Entity_Id;\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       if Is_RTE (Base_Type (Etype (Expression (N))), RO_CA_Time) then\n          Typ := RTE (RO_CA_Delay_Until);\n       else\n@@ -7241,12 +7200,6 @@ package body Exp_Ch9 is\n \n    procedure Expand_N_Entry_Body (N : Node_Id) is\n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       --  Associate discriminals with the next protected operation body to be\n       --  expanded.\n \n@@ -7268,12 +7221,6 @@ package body Exp_Ch9 is\n       Index   : Node_Id;\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       if No_Run_Time_Mode then\n          Error_Msg_CRT (\"entry call\", N);\n          return;\n@@ -7330,12 +7277,6 @@ package body Exp_Ch9 is\n       Acc_Ent    : Entity_Id;\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       Formal := First_Formal (Entry_Ent);\n       Last_Decl := N;\n \n@@ -7604,12 +7545,6 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Protected_Body\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       if No_Run_Time_Mode then\n          Error_Msg_CRT (\"protected body\", N);\n          return;\n@@ -9162,12 +9097,6 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Requeue_Statement\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       --  Extract the components of the entry call\n \n       Extract_Entry (N, Concval, Ename, Index);\n@@ -9754,12 +9683,6 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Selective_Accept\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       Process_Statements_For_Controlled_Objects (N);\n \n       --  First insert some declarations before the select. The first is:\n@@ -10390,12 +10313,6 @@ package body Exp_Ch9 is\n       --  Used to determine the proper location of wrapper body insertions\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       --  Add renaming declarations for discriminals and a declaration for the\n       --  entry family index (if applicable).\n \n@@ -11142,12 +11059,6 @@ package body Exp_Ch9 is\n       S : Entity_Id;  --  Primitive operation slot\n \n    begin\n-      --  Do not expand tasking constructs in formal verification mode\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       --  Under the Ravenscar profile, timed entry calls are excluded. An error\n       --  was already reported on spec, so do not attempt to expand the call.\n \n@@ -11592,9 +11503,7 @@ package body Exp_Ch9 is\n          Error_Msg_CRT (\"protected body\", N);\n          return;\n \n-      elsif Expander_Active\n-        and then not ALFA_Mode\n-      then\n+      elsif Full_Expander_Active then\n          --  Associate discriminals with the first subprogram or entry body to\n          --  be expanded.\n "}, {"sha": "5f9cd8326f1f0262f59392e94144d7d43674ce90", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -697,11 +697,7 @@ package body Exp_Disp is\n       --  Expand_Dispatching_Call is called directly from the semantics,\n       --  so we only proceed if the expander is active.\n \n-      if not Expander_Active\n-\n-        --  And this expansion is not required in special ALFA mode expansion\n-\n-        or else ALFA_Mode\n+      if not Full_Expander_Active\n \n         --  And there is no need to expand the call if we are compiling under\n         --  restriction No_Dispatching_Calls; the semantic analyzer has"}, {"sha": "ce7237a55c7bd15e4cdd464a86fd13e0ea9d2844", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -38,6 +38,15 @@ package body Opt is\n    SU : constant := Storage_Unit;\n    --  Shorthand for System.Storage_Unit\n \n+   --------------------------\n+   -- Full_Expander_Active --\n+   --------------------------\n+\n+   function Full_Expander_Active return Boolean is\n+   begin\n+      return Expander_Active and not ALFA_Mode;\n+   end Full_Expander_Active;\n+\n    ----------------------------------\n    -- Register_Opt_Config_Switches --\n    ----------------------------------"}, {"sha": "3bc4ad9a5317a98a590acc4fd2f2cf1fd69f1a58", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -1832,6 +1832,14 @@ package Opt is\n    --  behavior can be disabled using switch -gnatd.t which will set this flag\n    --  to False and revert to the previous dynamic behavior.\n \n+   function Full_Expander_Active return Boolean;\n+   --  Returns the value of (Expander_Active and not ALFA_Mode). This \"flag\"\n+   --  indicates that expansion is fully active, that is, not in the reduced\n+   --  mode for Alfa (True) or that expansion is either deactivated, or active\n+   --  in the reduced mode for Alfa (False). For more information on full\n+   --  expansion, see package Expander. For more information on reduced\n+   --  Alfa expansion, see package Exp_Alfa.\n+\n    -----------------------\n    -- Tree I/O Routines --\n    -----------------------"}, {"sha": "b8511162fff7c7dfc58ffba94dc03143ef105b34", "filename": "gcc/ada/s-parame-hpux.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-hpux.ads?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,18 +62,18 @@ package System.Parameters is\n    Unspecified_Size : constant Size_Type := Size_Type'First;\n    --  Value used to indicate that no size type is set\n \n-   subtype Ratio is Size_Type range -1 .. 100;\n+   subtype Percentage is Size_Type range -1 .. 100;\n    Dynamic : constant Size_Type := -1;\n    --  The secondary stack ratio is a constant between 0 and 100 which\n    --  determines the percentage of the allocated task stack that is\n    --  used by the secondary stack (the rest being the primary stack).\n    --  The special value of minus one indicates that the secondary\n    --  stack is to be allocated from the heap instead.\n \n-   Sec_Stack_Ratio : constant Ratio := Dynamic;\n+   Sec_Stack_Percentage : constant Percentage := Dynamic;\n    --  This constant defines the handling of the secondary stack\n \n-   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Ratio = Dynamic;\n+   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Percentage = Dynamic;\n    --  Convenient Boolean for testing for dynamic secondary stack\n \n    function Default_Stack_Size return Size_Type;"}, {"sha": "359e694d4c500bfff0cdd444ffe5bf6d0f78db1c", "filename": "gcc/ada/s-parame-vms-alpha.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame-vms-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame-vms-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-alpha.ads?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,18 +62,18 @@ package System.Parameters is\n    Unspecified_Size : constant Size_Type := Size_Type'First;\n    --  Value used to indicate that no size type is set\n \n-   subtype Ratio is Size_Type range -1 .. 100;\n+   subtype Percentage is Size_Type range -1 .. 100;\n    Dynamic : constant Size_Type := -1;\n    --  The secondary stack ratio is a constant between 0 and 100 which\n    --  determines the percentage of the allocated task stack that is\n    --  used by the secondary stack (the rest being the primary stack).\n    --  The special value of minus one indicates that the secondary\n    --  stack is to be allocated from the heap instead.\n \n-   Sec_Stack_Ratio : constant Ratio := Dynamic;\n+   Sec_Stack_Percentage : constant Percentage := Dynamic;\n    --  This constant defines the handling of the secondary stack\n \n-   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Ratio = Dynamic;\n+   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Percentage = Dynamic;\n    --  Convenient Boolean for testing for dynamic secondary stack\n \n    function Default_Stack_Size return Size_Type;"}, {"sha": "2726f34b2c4fdd9cce0bdff50d0b2d7c1c0ba0f2", "filename": "gcc/ada/s-parame-vms-ia64.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-ia64.ads?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,18 +62,18 @@ package System.Parameters is\n    Unspecified_Size : constant Size_Type := Size_Type'First;\n    --  Value used to indicate that no size type is set\n \n-   subtype Ratio is Size_Type range -1 .. 100;\n+   subtype Percentage is Size_Type range -1 .. 100;\n    Dynamic : constant Size_Type := -1;\n    --  The secondary stack ratio is a constant between 0 and 100 which\n    --  determines the percentage of the allocated task stack that is\n    --  used by the secondary stack (the rest being the primary stack).\n    --  The special value of minus one indicates that the secondary\n    --  stack is to be allocated from the heap instead.\n \n-   Sec_Stack_Ratio : constant Ratio := Dynamic;\n+   Sec_Stack_Percentage : constant Percentage := Dynamic;\n    --  This constant defines the handling of the secondary stack\n \n-   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Ratio = Dynamic;\n+   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Percentage = Dynamic;\n    --  Convenient Boolean for testing for dynamic secondary stack\n \n    function Default_Stack_Size return Size_Type;"}, {"sha": "748e7d81b39cab22382adb1e5ff04cb311e5312a", "filename": "gcc/ada/s-parame-vxworks.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.ads?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,18 +62,18 @@ package System.Parameters is\n    Unspecified_Size : constant Size_Type := Size_Type'First;\n    --  Value used to indicate that no size type is set\n \n-   subtype Ratio is Size_Type range -1 .. 100;\n+   subtype Percentage is Size_Type range -1 .. 100;\n    Dynamic : constant Size_Type := -1;\n    --  The secondary stack ratio is a constant between 0 and 100 which\n    --  determines the percentage of the allocated task stack that is\n    --  used by the secondary stack (the rest being the primary stack).\n    --  The special value of minus one indicates that the secondary\n    --  stack is to be allocated from the heap instead.\n \n-   Sec_Stack_Ratio : constant Ratio := Dynamic;\n+   Sec_Stack_Percentage : constant Percentage := Dynamic;\n    --  This constant defines the handling of the secondary stack\n \n-   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Ratio = Dynamic;\n+   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Percentage = Dynamic;\n    --  Convenient Boolean for testing for dynamic secondary stack\n \n    function Default_Stack_Size return Size_Type;"}, {"sha": "e4317fafcf6b29c6f6cbf4a56a63e7a6778a3fde", "filename": "gcc/ada/s-parame.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-parame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.ads?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,18 +64,18 @@ package System.Parameters is\n    Unspecified_Size : constant Size_Type := Size_Type'First;\n    --  Value used to indicate that no size type is set\n \n-   subtype Ratio is Size_Type range -1 .. 100;\n+   subtype Percentage is Size_Type range -1 .. 100;\n    Dynamic : constant Size_Type := -1;\n    --  The secondary stack ratio is a constant between 0 and 100 which\n    --  determines the percentage of the allocated task stack that is\n    --  used by the secondary stack (the rest being the primary stack).\n    --  The special value of minus one indicates that the secondary\n    --  stack is to be allocated from the heap instead.\n \n-   Sec_Stack_Ratio : constant Ratio := Dynamic;\n+   Sec_Stack_Percentage : constant Percentage := Dynamic;\n    --  This constant defines the handling of the secondary stack\n \n-   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Ratio = Dynamic;\n+   Sec_Stack_Dynamic : constant Boolean := Sec_Stack_Percentage = Dynamic;\n    --  Convenient Boolean for testing for dynamic secondary stack\n \n    function Default_Stack_Size return Size_Type;"}, {"sha": "1a4aa788c411c162152a2c9595d576f84329b7bc", "filename": "gcc/ada/s-secsta.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,7 +44,7 @@ package body System.Secondary_Stack is\n    use type System.Parameters.Size_Type;\n \n    SS_Ratio_Dynamic : constant Boolean :=\n-                        Parameters.Sec_Stack_Ratio = Parameters.Dynamic;\n+                        Parameters.Sec_Stack_Percentage = Parameters.Dynamic;\n    --  There are two entirely different implementations of the secondary\n    --  stack mechanism in this unit, and this Boolean is used to select\n    --  between them (at compile time, so the generated code will contain"}, {"sha": "d2da2bcffb16a16fdb243e0efd9dba6ec556700c", "filename": "gcc/ada/s-secsta.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-secsta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-secsta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.ads?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,17 +47,17 @@ package System.Secondary_Stack is\n       Size : Natural := Default_Secondary_Stack_Size);\n    --  Initialize the secondary stack with a main stack of the given Size.\n    --\n-   --  If System.Parameters.Sec_Stack_Ratio equals Dynamic, Stk is really an\n-   --  OUT parameter that will be allocated on the heap. Then all further\n+   --  If System.Parameters.Sec_Stack_Percentage equals Dynamic, Stk is really\n+   --  an OUT parameter that will be allocated on the heap. Then all further\n    --  allocations which do not overflow the main stack will not generate\n    --  dynamic (de)allocation calls. If the main Stack overflows, a new\n    --  chuck of at least the same size will be allocated and linked to the\n    --  previous chunk.\n    --\n-   --  Otherwise (Sec_Stack_Ratio between 0 and 100), Stk is an IN parameter\n-   --  that is already pointing to a Stack_Id. The secondary stack in this case\n-   --  is fixed, and any attempt to allocate more than the initial size will\n-   --  result in a Storage_Error being raised.\n+   --  Otherwise (Sec_Stack_Percentage between 0 and 100), Stk is an IN\n+   --  parameter that is already pointing to a Stack_Id. The secondary stack\n+   --  in this case is fixed, and any attempt to allocate more than the initial\n+   --  size will result in a Storage_Error being raised.\n    --\n    --  Note: the reason that Stk is passed is that SS_Init is called before\n    --  the proper interface is established to obtain the address of the"}, {"sha": "f12ed9a329ae4d3e4f3c3d24cb7cc02c601c6b6e", "filename": "gcc/ada/s-soflin.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-soflin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-soflin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -123,7 +123,7 @@ package body System.Soft_Links is\n       use type Parameters.Size_Type;\n \n       SS_Ratio_Dynamic : constant Boolean :=\n-                           Parameters.Sec_Stack_Ratio = Parameters.Dynamic;\n+                          Parameters.Sec_Stack_Percentage = Parameters.Dynamic;\n \n    begin\n       if SS_Ratio_Dynamic then"}, {"sha": "8375b73f64dcd0176121714214f6dae14ae4a314", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1999-2010, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1999-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -184,7 +184,7 @@ package body System.Tasking.Restricted.Stages is\n \n       Secondary_Stack : aliased SSE.Storage_Array\n         (1 .. Self_ID.Common.Compiler_Data.Pri_Stack_Info.Size *\n-                SSE.Storage_Offset (Parameters.Sec_Stack_Ratio) / 100);\n+                SSE.Storage_Offset (Parameters.Sec_Stack_Percentage) / 100);\n \n       pragma Warnings (Off);\n       Secondary_Stack_Address : System.Address := Secondary_Stack'Address;"}, {"sha": "be295eb858237bee2715c11e2e2a258d25a23ae2", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -1023,7 +1023,7 @@ package body System.Tasking.Stages is\n       Secondary_Stack_Size :\n         constant SSE.Storage_Offset :=\n           Self_ID.Common.Compiler_Data.Pri_Stack_Info.Size *\n-          SSE.Storage_Offset (Parameters.Sec_Stack_Ratio) / 100;\n+          SSE.Storage_Offset (Parameters.Sec_Stack_Percentage) / 100;\n \n       Secondary_Stack : aliased SSE.Storage_Array (1 .. Secondary_Stack_Size);\n "}, {"sha": "063da58f6490ba04ee09286a624845cef23a9065", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -2289,7 +2289,7 @@ package body Sem_Ch10 is\n          --  expansion is active, because the context may be generic and the\n          --  flag not defined yet.\n \n-         if Expander_Active then\n+         if Full_Expander_Active then\n             Insert_After (N,\n               Make_Assignment_Statement (Loc,\n                 Name =>"}, {"sha": "d48dcae87fe0d8748390a61315f9c6d938754e3f", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -4050,11 +4050,10 @@ package body Sem_Ch12 is\n       if (Is_In_Main_Unit (N)\n            or else Is_Inlined (Subp)\n            or else Is_Inlined (Alias (Subp)))\n-        and then not ALFA_Mode\n         and then (Operating_Mode = Generate_Code\n                    or else (Operating_Mode = Check_Semantics\n                              and then ASIS_Mode))\n-        and then (Expander_Active or else ASIS_Mode)\n+        and then (Full_Expander_Active or else ASIS_Mode)\n         and then not ABE_Is_Certain (N)\n         and then not Is_Eliminated (Subp)\n       then"}, {"sha": "f1cb60e2d310ae22ffaf82c87e98519f792889e2", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -2709,8 +2709,7 @@ package body Sem_Ch6 is\n       --  when the Expander is active because Install_Private_Data_Declarations\n       --  references entities which were created during regular expansion.\n \n-      if Expander_Active\n-        and then not ALFA_Mode\n+      if Full_Expander_Active\n         and then Comes_From_Source (N)\n         and then Present (Prot_Typ)\n         and then Present (Spec_Id)\n@@ -9787,10 +9786,9 @@ package body Sem_Ch6 is\n                --  If expansion is active, the formal is replaced by a local\n                --  variable that renames the corresponding entry of the\n                --  parameter block, and it is this local variable that may\n-               --  require an actual subtype. In ALFA mode, expansion of accept\n-               --  statements is skipped.\n+               --  require an actual subtype.\n \n-               if Expander_Active and not ALFA_Mode then\n+               if Full_Expander_Active then\n                   Decl := Build_Actual_Subtype (T, Renamed_Object (Formal));\n                else\n                   Decl := Build_Actual_Subtype (T, Formal);\n@@ -9829,8 +9827,7 @@ package body Sem_Ch6 is\n             end if;\n \n             if Nkind (N) = N_Accept_Statement\n-              and then Expander_Active\n-              and then not ALFA_Mode\n+              and then Full_Expander_Active\n             then\n                Set_Actual_Subtype (Renamed_Object (Formal),\n                  Defining_Identifier (Decl));"}, {"sha": "86a8fe6f48313093c026626b749fd3e99dd22158", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -727,8 +727,7 @@ package body Sem_Ch9 is\n       --  for the discriminals and privals and finally a declaration for the\n       --  entry family index (if applicable).\n \n-      if Expander_Active\n-        and then not ALFA_Mode\n+      if Full_Expander_Active\n         and then Is_Protected_Type (P_Type)\n       then\n          Install_Private_Data_Declarations\n@@ -1283,11 +1282,7 @@ package body Sem_Ch9 is\n \n            --  Also skip if expander is not active\n \n-           and then Expander_Active\n-\n-           --  Also skip if in ALFA mode, this expansion is not needed\n-\n-           and then not ALFA_Mode\n+           and then Full_Expander_Active\n          then\n             Expand_N_Protected_Type_Declaration (N);\n             Process_Full_View (N, T, Def_Id);\n@@ -2094,10 +2089,7 @@ package body Sem_Ch9 is\n \n            --  Also skip if expander is not active\n \n-           and then Expander_Active\n-\n-           --  Or if in ALFA mode, this expansion is not needed\n-           and then not ALFA_Mode\n+           and then Full_Expander_Active\n          then\n             Expand_N_Task_Type_Declaration (N);\n             Process_Full_View (N, T, Def_Id);"}, {"sha": "bf3814c7caf71104f9ec0c170cb26153a7938c6a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da94696d33e93be999d7f9f5ec838cdfa9627385/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=da94696d33e93be999d7f9f5ec838cdfa9627385", "patch": "@@ -3442,8 +3442,7 @@ package body Sem_Res is\n             elsif Nkind (A) = N_Function_Call\n               and then Is_Limited_Record (Etype (F))\n               and then not Is_Constrained (Etype (F))\n-              and then Expander_Active\n-              and then not ALFA_Mode\n+              and then Full_Expander_Active\n               and then (Is_Controlled (Etype (F)) or else Has_Task (Etype (F)))\n             then\n                Establish_Transient_Scope (A, False);\n@@ -3458,8 +3457,7 @@ package body Sem_Res is\n \n             elsif Nkind (A) = N_Op_Concat\n               and then Nkind (N) = N_Procedure_Call_Statement\n-              and then Expander_Active\n-              and then not ALFA_Mode\n+              and then Full_Expander_Active\n               and then\n                 not (Is_Intrinsic_Subprogram (Nam)\n                       and then Chars (Nam) = Name_Asm)\n@@ -3522,8 +3520,7 @@ package body Sem_Res is\n                      --  be removed in the expansion of the wrapped construct.\n \n                      if (Is_Controlled (DDT) or else Has_Task (DDT))\n-                       and then Expander_Active\n-                       and then not ALFA_Mode\n+                       and then Full_Expander_Active\n                      then\n                         Establish_Transient_Scope (A, False);\n                      end if;\n@@ -5494,8 +5491,7 @@ package body Sem_Res is\n       then\n          null;\n \n-      elsif Expander_Active\n-        and then not ALFA_Mode\n+      elsif Full_Expander_Active\n         and then Is_Type (Etype (Nam))\n         and then Requires_Transient_Scope (Etype (Nam))\n         and then\n@@ -6616,8 +6612,7 @@ package body Sem_Res is\n       --  Protected functions can return on the secondary stack, in which\n       --  case we must trigger the transient scope mechanism.\n \n-      elsif Expander_Active\n-        and then not ALFA_Mode\n+      elsif Full_Expander_Active\n         and then Requires_Transient_Scope (Etype (Nam))\n       then\n          Establish_Transient_Scope (N, Sec_Stack => True);\n@@ -8088,8 +8083,6 @@ package body Sem_Res is\n \n    procedure Resolve_Quantified_Expression (N : Node_Id; Typ : Entity_Id) is\n    begin\n-      --  Normal mode (not ALFA)\n-\n       if not ALFA_Mode then\n \n          --  The loop structure is already resolved during its analysis, only"}]}