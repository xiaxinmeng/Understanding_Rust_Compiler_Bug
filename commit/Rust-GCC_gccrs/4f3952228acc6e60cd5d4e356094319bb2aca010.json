{"sha": "4f3952228acc6e60cd5d4e356094319bb2aca010", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYzOTUyMjI4YWNjNmU2MGNkNWQ0ZTM1NjA5NDMxOWJiMmFjYTAxMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-05-10T19:41:55Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-05-10T19:41:55Z"}, "message": "compiler: permit inlining receive expressions\n    \n    This does not permit any new inlinable functions in the standard library.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/176637\n\nFrom-SVN: r271074", "tree": {"sha": "f984027ce277325a6dd9023205d9846b6f9f9357", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f984027ce277325a6dd9023205d9846b6f9f9357"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f3952228acc6e60cd5d4e356094319bb2aca010", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f3952228acc6e60cd5d4e356094319bb2aca010", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f3952228acc6e60cd5d4e356094319bb2aca010", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f3952228acc6e60cd5d4e356094319bb2aca010/comments", "author": null, "committer": null, "parents": [{"sha": "c735deb4fa985b0ab210cbad3802d46a7d4aaa17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c735deb4fa985b0ab210cbad3802d46a7d4aaa17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c735deb4fa985b0ab210cbad3802d46a7d4aaa17"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "d8bcef43a92414cb5cf2c79ade123de73a713b71", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f3952228acc6e60cd5d4e356094319bb2aca010/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f3952228acc6e60cd5d4e356094319bb2aca010/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=4f3952228acc6e60cd5d4e356094319bb2aca010", "patch": "@@ -1,4 +1,4 @@\n-b5e4ba88a2e7f3c34e9183f43370c38ea639c393\n+76ab85364745e445498fe53f9ca8e37b49650779\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "54f6e525e1ed0757cbe06707cc61346ac6f31497", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f3952228acc6e60cd5d4e356094319bb2aca010/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f3952228acc6e60cd5d4e356094319bb2aca010/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=4f3952228acc6e60cd5d4e356094319bb2aca010", "patch": "@@ -15423,6 +15423,15 @@ Receive_expression::do_get_backend(Translate_context* context)\n   return Expression::make_compound(recv, recv_ref, loc)->get_backend(context);\n }\n \n+// Export a receive expression.\n+\n+void\n+Receive_expression::do_export(Export_function_body* efb) const\n+{\n+  efb->write_c_string(\"<-\");\n+  this->channel_->export_expression(efb);\n+}\n+\n // Dump ast representation for a receive expression.\n \n void\n@@ -15432,6 +15441,16 @@ Receive_expression::do_dump_expression(Ast_dump_context* ast_dump_context) const\n   ast_dump_context->dump_expression(channel_);\n }\n \n+// Import a receive expression.\n+\n+Expression*\n+Receive_expression::do_import(Import_expression* imp, Location loc)\n+{\n+  imp->require_c_string(\"<-\");\n+  Expression* expr = Expression::import_expression(imp, loc);\n+  return Expression::make_receive(expr, loc);\n+}\n+\n // Make a receive expression.\n \n Receive_expression*\n@@ -16783,6 +16802,8 @@ Expression::import_expression(Import_expression* imp, Location loc)\n       // This handles integers, floats and complex constants.\n       return Integer_expression::do_import(imp, loc);\n     }\n+  else if (imp->match_c_string(\"<-\"))\n+    return Receive_expression::do_import(imp, loc);\n   else if (imp->match_c_string(\"$nil\")\n \t   || (imp->version() < EXPORT_FORMAT_V3\n \t       && imp->match_c_string(\"nil\")))"}, {"sha": "9ed81f11ea5966c8a093051a422cb40bc3138aea", "filename": "gcc/go/gofrontend/expressions.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f3952228acc6e60cd5d4e356094319bb2aca010/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f3952228acc6e60cd5d4e356094319bb2aca010/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.h?ref=4f3952228acc6e60cd5d4e356094319bb2aca010", "patch": "@@ -3982,6 +3982,9 @@ class Receive_expression : public Expression\n   channel()\n   { return this->channel_; }\n \n+  static Expression*\n+  do_import(Import_expression*, Location);\n+\n  protected:\n   int\n   do_traverse(Traverse* traverse)\n@@ -4010,13 +4013,20 @@ class Receive_expression : public Expression\n     return Expression::make_receive(this->channel_->copy(), this->location());\n   }\n \n+  int\n+  do_inlining_cost() const\n+  { return 1; }\n+\n   bool\n   do_must_eval_in_order() const\n   { return true; }\n \n   Bexpression*\n   do_get_backend(Translate_context*);\n \n+  void\n+  do_export(Export_function_body*) const;\n+\n   void\n   do_dump_expression(Ast_dump_context*) const;\n "}]}