{"sha": "efb25f54436e07d430f55fd3a17eae4578fb18fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZiMjVmNTQ0MzZlMDdkNDMwZjU1ZmQzYTE3ZWFlNDU3OGZiMThmYw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-04-21T08:14:22Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-04-21T08:14:22Z"}, "message": "[AArch64] Increase static buffer size in aarch64_rewrite_selected_cpu\n\n\t* common/config/aarch64/aarch64-common.c (AARCH64_CPU_NAME_LENGTH):\n\tIncrease to 128.\n\t(aarch64_rewrite_selected_cpu): Do not chop off extensions starting\n\tat '.'.  Assert that there's enough space for everything.\n\nFrom-SVN: r222258", "tree": {"sha": "b9fa16ccb51179b7c8beffc6016f3fd2dd8e311b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9fa16ccb51179b7c8beffc6016f3fd2dd8e311b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efb25f54436e07d430f55fd3a17eae4578fb18fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb25f54436e07d430f55fd3a17eae4578fb18fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb25f54436e07d430f55fd3a17eae4578fb18fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb25f54436e07d430f55fd3a17eae4578fb18fc/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d60dbb52fc8cd3a709b24e611a73ebdc13ff4e58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60dbb52fc8cd3a709b24e611a73ebdc13ff4e58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d60dbb52fc8cd3a709b24e611a73ebdc13ff4e58"}], "stats": {"total": 37, "additions": 28, "deletions": 9}, "files": [{"sha": "66856a875c494024b859be4bfe93fad0a73784ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb25f54436e07d430f55fd3a17eae4578fb18fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb25f54436e07d430f55fd3a17eae4578fb18fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efb25f54436e07d430f55fd3a17eae4578fb18fc", "patch": "@@ -1,3 +1,10 @@\n+2015-04-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* common/config/aarch64/aarch64-common.c (AARCH64_CPU_NAME_LENGTH):\n+\tIncrease to 128.\n+\t(aarch64_rewrite_selected_cpu): Do not chop off extensions starting\n+\tat '.'.  Assert that there's enough space for everything.\n+\n 2015-04-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR tree-optimization/64950"}, {"sha": "b3fd9dc5460e5f427ca773a7a98804c3be0fd836", "filename": "gcc/common/config/aarch64/aarch64-common.c", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb25f54436e07d430f55fd3a17eae4578fb18fc/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb25f54436e07d430f55fd3a17eae4578fb18fc/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c?ref=efb25f54436e07d430f55fd3a17eae4578fb18fc", "patch": "@@ -27,6 +27,7 @@\n #include \"common/common-target-def.h\"\n #include \"opts.h\"\n #include \"flags.h\"\n+#include \"errors.h\"\n \n #ifdef  TARGET_BIG_ENDIAN_DEFAULT\n #undef  TARGET_DEFAULT_TARGET_FLAGS\n@@ -89,23 +90,34 @@ aarch64_handle_option (struct gcc_options *opts,\n \n struct gcc_targetm_common targetm_common = TARGETM_COMMON_INITIALIZER;\n \n-#define AARCH64_CPU_NAME_LENGTH 20\n+#define AARCH64_CPU_NAME_LENGTH 128\n \n-/* Truncate NAME at the first '.' character seen, or return\n-   NAME unmodified.  */\n+/* Truncate NAME at the first '.' character seen up to the first '+'\n+   or return NAME unmodified.  */\n \n const char *\n aarch64_rewrite_selected_cpu (const char *name)\n {\n   static char output_buf[AARCH64_CPU_NAME_LENGTH + 1] = {0};\n-  char *arg_pos;\n+  const char *bL_sep;\n+  const char *feats;\n+  size_t pref_size;\n+  size_t feat_size;\n \n-  strncpy (output_buf, name, AARCH64_CPU_NAME_LENGTH);\n-  arg_pos = strchr (output_buf, '.');\n+  bL_sep = strchr (name, '.');\n+  if (!bL_sep)\n+    return name;\n \n-  /* If we found a '.' truncate the entry at that point.  */\n-  if (arg_pos)\n-    *arg_pos = '\\0';\n+  feats = strchr (name, '+');\n+  feat_size = feats ? strnlen (feats, AARCH64_CPU_NAME_LENGTH) : 0;\n+  pref_size = bL_sep - name;\n+\n+  if ((feat_size + pref_size) > AARCH64_CPU_NAME_LENGTH)\n+    internal_error (\"-mcpu string too large\");\n+\n+  strncpy (output_buf, name, pref_size);\n+  if (feats)\n+    strncpy (output_buf + pref_size, feats, feat_size);\n \n   return output_buf;\n }"}]}