{"sha": "1a06672a3b58bef4a4386ca3e24cc17c13d5959a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEwNjY3MmEzYjU4YmVmNGE0Mzg2Y2EzZTI0Y2MxN2MxM2Q1OTU5YQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2004-12-02T11:10:38Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2004-12-02T11:10:38Z"}, "message": "xstormy16: New test directory.\n\n* gcc.target/xstormy16: New test directory.\n* gcc.target/xstormy16/xstormy16.exp: Run the new tests.\n* gcc.target/xstormy16/bp.c: Check the generation of bp\tinstructions.\n* gcc.target/xstormy16/below_100.c: Check the generation of bp and bn\ninstructions and the BELOW100 attribute.\n\nFrom-SVN: r91627", "tree": {"sha": "45c5e24f9d7c127c184cbd573e3c083597b9f8d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45c5e24f9d7c127c184cbd573e3c083597b9f8d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a06672a3b58bef4a4386ca3e24cc17c13d5959a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a06672a3b58bef4a4386ca3e24cc17c13d5959a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a06672a3b58bef4a4386ca3e24cc17c13d5959a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a06672a3b58bef4a4386ca3e24cc17c13d5959a/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4cf93d7c059a8e92a216d67513df396d7b9efc6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf93d7c059a8e92a216d67513df396d7b9efc6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cf93d7c059a8e92a216d67513df396d7b9efc6f"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "7842f6326e8697e202f9fb7052a84dc3ccc588b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a06672a3b58bef4a4386ca3e24cc17c13d5959a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a06672a3b58bef4a4386ca3e24cc17c13d5959a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a06672a3b58bef4a4386ca3e24cc17c13d5959a", "patch": "@@ -1,3 +1,12 @@\n+2004-12-02  Nick Clifton  <nickc@redhat.com>\n+\n+\t* gcc.target/xstormy16: New test directory.\n+\t* gcc.target/xstormy16/xstormy16.exp: Run the new tests.\n+\t* gcc.target/xstormy16/bp.c: Check the generation of bp\n+\tinstructions.\n+\t* gcc.target/xstormy16/below_100.c: Check the generation of bp and\n+\tbn instructions and the BELOW100 attribute.\n+\n 2004-12-02  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/16952"}, {"sha": "dfa7e3bc92b1e334fe442cb92b34a95e0bcea2c8", "filename": "gcc/testsuite/gcc.target/xstormy16/below_100.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a06672a3b58bef4a4386ca3e24cc17c13d5959a/gcc%2Ftestsuite%2Fgcc.target%2Fxstormy16%2Fbelow_100.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a06672a3b58bef4a4386ca3e24cc17c13d5959a/gcc%2Ftestsuite%2Fgcc.target%2Fxstormy16%2Fbelow_100.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxstormy16%2Fbelow_100.c?ref=1a06672a3b58bef4a4386ca3e24cc17c13d5959a", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler \"bn \" } } */\n+/* { dg-final { scan-assembler \"bp \" } } */\n+\n+unsigned short   a_below __attribute__((__BELOW100__));\n+unsigned short   b_below __attribute__((__BELOW100__));\n+unsigned short * a_ptr = & a_below;\n+unsigned short * b_ptr = & b_below;\n+\n+char *\n+foo (void)\n+{\n+  if (a_below & 0x0100)\n+    {\n+      if (b_below & 0x0100)\n+\treturn \"Fail\";\n+      return \"Success\";\n+    }\n+\n+  return \"Fail\";\n+}\n+\n+char *\n+bar (void)\n+{\n+  *a_ptr = 0x0100;\n+  *b_ptr = 0xfeff;\n+  return foo ();\n+}"}, {"sha": "5cab932d3db997dc6b1aed0a2bf42a765a426476", "filename": "gcc/testsuite/gcc.target/xstormy16/bp.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a06672a3b58bef4a4386ca3e24cc17c13d5959a/gcc%2Ftestsuite%2Fgcc.target%2Fxstormy16%2Fbp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a06672a3b58bef4a4386ca3e24cc17c13d5959a/gcc%2Ftestsuite%2Fgcc.target%2Fxstormy16%2Fbp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxstormy16%2Fbp.c?ref=1a06672a3b58bef4a4386ca3e24cc17c13d5959a", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler \"bp \" } } */\n+\n+#define a_val (*((volatile unsigned char *) 0x7f14))\n+#define b_val (*((volatile unsigned char *) 0x7f10))\n+\n+unsigned char * a_ptr = (unsigned char *) 0x7f14;\n+unsigned char * b_ptr = (unsigned char *) 0x7f10;\n+\n+int\n+foo (void)\n+{\n+  if (a_val & 0x08)\n+    {\n+      if (b_val & 0x08)\n+\treturn -1;\n+\n+      return 0;\n+    }\n+\n+  return -1;\n+}\n+\n+int\n+bar (void)\n+{\n+  *a_ptr = 0x08;\n+  *b_ptr = 0xf7;\n+\n+  return foo ();\n+}\n+\n+"}, {"sha": "2961cf1b88121391867488ec35b31c5e3203062f", "filename": "gcc/testsuite/gcc.target/xstormy16/xstormy16.exp", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a06672a3b58bef4a4386ca3e24cc17c13d5959a/gcc%2Ftestsuite%2Fgcc.target%2Fxstormy16%2Fxstormy16.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a06672a3b58bef4a4386ca3e24cc17c13d5959a/gcc%2Ftestsuite%2Fgcc.target%2Fxstormy16%2Fxstormy16.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxstormy16%2Fxstormy16.exp?ref=1a06672a3b58bef4a4386ca3e24cc17c13d5959a", "patch": "@@ -0,0 +1,23 @@\n+# Tests for the xstormy16\n+\n+if {![istarget xstormy16-*-*]} {\n+    return 0\n+}\n+\n+load_lib gcc-dg.exp\n+\n+# If a testcase doesn't have special options, use these.\n+global DEFAULT_CFLAGS\n+if ![info exists DEFAULT_CFLAGS] then {\n+    set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+\n+# All done.\n+dg-finish"}]}