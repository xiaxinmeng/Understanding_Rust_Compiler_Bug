{"sha": "c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhiZWM4YzhiZTkzZTQwMDIyODBmZThlZTlmN2MzYzA2N2NkODNlYQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-02-01T11:43:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-01T11:43:05Z"}, "message": "com.c (ffecom_tree_canonize_ptr_): Place bitsizetype typed expr as first agument in MULT_EXPR.\n\n        * com.c (ffecom_tree_canonize_ptr_): Place bitsizetype typed expr\n        as first agument in MULT_EXPR.\n        Use bitsize_int (0L, 0L) as zero for bitsizes.\n        (ffecom_tree_canonize_ref_):\n        Use bitsize_int (0L, 0L) as zero for bitsizes.\n        (ffecom_init_0): Use set_sizetype.\n\nFrom-SVN: r17575", "tree": {"sha": "00e46734e3d727d7501daa8f857ccd05b1186747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00e46734e3d727d7501daa8f857ccd05b1186747"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea/comments", "author": null, "committer": null, "parents": [{"sha": "8d0f1540f87cf2cb595ae4cf6cb874329e7310e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0f1540f87cf2cb595ae4cf6cb874329e7310e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0f1540f87cf2cb595ae4cf6cb874329e7310e1"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "7e55f91feac195b8f4b172f90df8064e05648080", "filename": "gcc/f/ChangeLog.egcs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea/gcc%2Ff%2FChangeLog.egcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea/gcc%2Ff%2FChangeLog.egcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog.egcs?ref=c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea", "patch": "@@ -1,3 +1,12 @@\n+Sun Feb  1 12:43:49 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* com.c (ffecom_tree_canonize_ptr_): Place bitsizetype typed expr\n+\tas first agument in MULT_EXPR.\n+\tUse bitsize_int (0L, 0L) as zero for bitsizes.\n+\t(ffecom_tree_canonize_ref_):\n+\tUse bitsize_int (0L, 0L) as zero for bitsizes.\n+\t(ffecom_init_0): Use set_sizetype.\n+\n Sun Feb  1 02:26:58 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* runtime directory -- moved into \"libfc2\" in the toplevel"}, {"sha": "49b2f2424a2e33e1dffebe9008a6815fe745f53d", "filename": "gcc/f/com.c", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=c8bec8c8be93e4002280fe8ee9f7c3c067cd83ea", "patch": "@@ -9458,8 +9458,8 @@ ffecom_tree_canonize_ptr_ (tree *decl, tree *offset,\n \t  /* Convert offset (presumably in bytes) into canonical units\n \t     (presumably bits).  */\n \t  *offset = size_binop (MULT_EXPR,\n-\t\t\t\t*offset,\n-\t\t\t\tTYPE_SIZE (TREE_TYPE (TREE_TYPE (t))));\n+\t\t\t\tTYPE_SIZE (TREE_TYPE (TREE_TYPE (t))),\n+\t\t\t\t*offset);\n \t  break;\n \t}\n       /* Not a COMMON reference, so an unrecognized pattern.  */\n@@ -9468,15 +9468,15 @@ ffecom_tree_canonize_ptr_ (tree *decl, tree *offset,\n \n     case PARM_DECL:\n       *decl = t;\n-      *offset = size_zero_node;\n+      *offset =  bitsize_int (0L, 0L);\n       break;\n \n     case ADDR_EXPR:\n       if (TREE_CODE (TREE_OPERAND (t, 0)) == VAR_DECL)\n \t{\n \t  /* A reference to COMMON.  */\n \t  *decl = TREE_OPERAND (t, 0);\n-\t  *offset = size_zero_node;\n+\t  *offset =  bitsize_int (0L, 0L);\n \t  break;\n \t}\n       /* Fall through.  */\n@@ -9597,7 +9597,7 @@ ffecom_tree_canonize_ref_ (tree *decl, tree *offset,\n     case VAR_DECL:\n     case PARM_DECL:\n       *decl = t;\n-      *offset = size_zero_node;\n+      *offset = bitsize_int (0L, 0L);\n       *size = TYPE_SIZE (TREE_TYPE (t));\n       return;\n \n@@ -11809,16 +11809,8 @@ ffecom_init_0 ()\n   pushdecl (build_decl (TYPE_DECL, get_identifier (\"long long unsigned int\"),\n \t\t\tlong_long_unsigned_type_node));\n \n-  sizetype\n-    = TREE_TYPE (IDENTIFIER_GLOBAL_VALUE (get_identifier (SIZE_TYPE)));\n-\n-  TREE_TYPE (TYPE_SIZE (integer_type_node)) = sizetype;\n-  TREE_TYPE (TYPE_SIZE (char_type_node)) = sizetype;\n-  TREE_TYPE (TYPE_SIZE (unsigned_type_node)) = sizetype;\n-  TREE_TYPE (TYPE_SIZE (long_unsigned_type_node)) = sizetype;\n-  TREE_TYPE (TYPE_SIZE (long_integer_type_node)) = sizetype;\n-  TREE_TYPE (TYPE_SIZE (long_long_integer_type_node)) = sizetype;\n-  TREE_TYPE (TYPE_SIZE (long_long_unsigned_type_node)) = sizetype;\n+  set_sizetype\n+    (TREE_TYPE (IDENTIFIER_GLOBAL_VALUE (get_identifier (SIZE_TYPE))));\n \n   error_mark_node = make_node (ERROR_MARK);\n   TREE_TYPE (error_mark_node) = error_mark_node;"}]}