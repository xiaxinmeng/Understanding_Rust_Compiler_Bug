{"sha": "874a8709bf8077e0347180eba67c73b0661ba9fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0YTg3MDliZjgwNzdlMDM0NzE4MGViYTY3YzczYjA2NjFiYTlmZA==", "commit": {"author": {"name": "Fred Fish", "email": "fnf@cygnus.com", "date": "1997-11-14T16:07:17Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-11-14T16:07:17Z"}, "message": "dwarfout.c (byte_size_attribute): Add local var upper_bound and add case to handle STRING_TYPE.\n\n        * dwarfout.c (byte_size_attribute):  Add local var upper_bound\n        and add case to handle STRING_TYPE.\n        * dwarfout.c (output_string_type_die):  Fix code to generate\n        correct string length attribute for fixed length strings.\n        Still needs support for varying length strings.\n\nFrom-SVN: r16498", "tree": {"sha": "bbc41a98979228224e584a75fbd7fada517fcbd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbc41a98979228224e584a75fbd7fada517fcbd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/874a8709bf8077e0347180eba67c73b0661ba9fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874a8709bf8077e0347180eba67c73b0661ba9fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874a8709bf8077e0347180eba67c73b0661ba9fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874a8709bf8077e0347180eba67c73b0661ba9fd/comments", "author": null, "committer": null, "parents": [{"sha": "ea4661960903a6da02d0b95a5c314eaa0d45b71d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea4661960903a6da02d0b95a5c314eaa0d45b71d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea4661960903a6da02d0b95a5c314eaa0d45b71d"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "150e720fb5861375c20c674d9685c8e84e139842", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874a8709bf8077e0347180eba67c73b0661ba9fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874a8709bf8077e0347180eba67c73b0661ba9fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=874a8709bf8077e0347180eba67c73b0661ba9fd", "patch": "@@ -1,3 +1,11 @@\n+Fri Nov 14 09:09:20 1997  Fred Fish  (fnf@cygnus.com)\n+\n+\t* dwarfout.c (byte_size_attribute):  Add local var upper_bound\n+\tand add case to handle STRING_TYPE.\n+\t* dwarfout.c (output_string_type_die):  Fix code to generate\n+\tcorrect string length attribute for fixed length strings.\n+\tStill needs support for varying length strings.\n+\n Fri Nov 14 08:46:56 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* toplev.c (get_run_time): Do something sensible for cygwin32."}, {"sha": "21f78b5661f71319759a90bacfe6017de76b5f56", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874a8709bf8077e0347180eba67c73b0661ba9fd/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874a8709bf8077e0347180eba67c73b0661ba9fd/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=874a8709bf8077e0347180eba67c73b0661ba9fd", "patch": "@@ -2653,6 +2653,17 @@ byte_size_attribute (tree_node)\n \t       / BITS_PER_UNIT;\n \tbreak;\n \n+      /* This goes with the hack for case ARRAY_TYPE in output_type() since\n+\t the Chill front end represents strings using ARRAY_TYPE.  */\n+      case ARRAY_TYPE:\n+\t{\n+\t  /* The lower bound is zero, so the length is the upper bound + 1.  */\n+\t  register tree upper_bound;\n+\t  upper_bound = TYPE_MAX_VALUE (TYPE_DOMAIN (tree_node));\n+\t  size = (unsigned) TREE_INT_CST_LOW (upper_bound) + 1;\n+\t  break;\n+\t}\n+\n       default:\n \tabort ();\n     }\n@@ -3705,11 +3716,10 @@ output_string_type_die (arg)\n \n   ASM_OUTPUT_DWARF_TAG (asm_out_file, TAG_string_type);\n   sibling_attribute ();\n+  equate_type_number_to_die_number (type);\n   member_attribute (TYPE_CONTEXT (type));\n-\n-  /* Fudge the string length attribute for now.  */\n-\n-  string_length_attribute (TYPE_MAX_VALUE (TYPE_DOMAIN (type)));\n+  /* this is a fixed length string */\n+  byte_size_attribute (type);\n }\n \n static void"}]}