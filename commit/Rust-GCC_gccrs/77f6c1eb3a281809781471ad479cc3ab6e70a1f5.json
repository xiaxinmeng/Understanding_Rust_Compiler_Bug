{"sha": "77f6c1eb3a281809781471ad479cc3ab6e70a1f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdmNmMxZWIzYTI4MTgwOTc4MTQ3MWFkNDc5Y2MzYWI2ZTcwYTFmNQ==", "commit": {"author": {"name": "Ryan T. Sammartino", "email": "ryants@shaw.ca", "date": "2002-02-19T14:05:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-02-19T14:05:53Z"}, "message": "invoke.texi: explicitly list the style guidelines that -Weffc++ checks for.\n\n        * doc/invoke.texi: explicitly list the style guidelines that\n        -Weffc++ checks for.\n\nFrom-SVN: r49866", "tree": {"sha": "d6a0483f08380397789e6ed6093b04c92c3f48c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6a0483f08380397789e6ed6093b04c92c3f48c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77f6c1eb3a281809781471ad479cc3ab6e70a1f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f6c1eb3a281809781471ad479cc3ab6e70a1f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f6c1eb3a281809781471ad479cc3ab6e70a1f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f6c1eb3a281809781471ad479cc3ab6e70a1f5/comments", "author": null, "committer": null, "parents": [{"sha": "fd973d5630bb29a2a0a90aa325b26395b8882320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd973d5630bb29a2a0a90aa325b26395b8882320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd973d5630bb29a2a0a90aa325b26395b8882320"}], "stats": {"total": 79, "additions": 52, "deletions": 27}, "files": [{"sha": "9de70ed374e52455ae5231eea19c4202ebc560f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 23, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f6c1eb3a281809781471ad479cc3ab6e70a1f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f6c1eb3a281809781471ad479cc3ab6e70a1f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77f6c1eb3a281809781471ad479cc3ab6e70a1f5", "patch": "@@ -1,3 +1,8 @@\n+2002-02-19  Ryan T. Sammartino <ryants@shaw.ca>\n+\n+\t* doc/invoke.texi: explicitly list the style guidelines that\n+\t-Weffc++ checks for.\n+\n Tue Feb 19 12:37:23 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* regmove.c (regmove_optimize): Avoid increasing of register pressure.\n@@ -660,17 +665,17 @@ Tue Feb 12 10:12:56 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2002-02-11  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.c (altivec_init_builtins): Handle\n-        __builtin_altivec_abs*.\n-        (bdesc_abs): New.\n+\t* config/rs6000/rs6000.c (altivec_init_builtins): Handle\n+\t__builtin_altivec_abs*.\n+\t(bdesc_abs): New.\n \n-        * config/rs6000/rs6000.h (rs6000_builtins): Add\n-        ALTIVEC_BUILTIN_ABS*.\n+\t* config/rs6000/rs6000.h (rs6000_builtins): Add\n+\tALTIVEC_BUILTIN_ABS*.\n \n-        * config/rs6000/altivec.h: Use const char for builtins expecting\n-        literals.\n-        (vec_abs): New versions for C and C++.\n-        (vec_abss): Same.\n+\t* config/rs6000/altivec.h: Use const char for builtins expecting\n+\tliterals.\n+\t(vec_abs): New versions for C and C++.\n+\t(vec_abss): Same.\n \n 2002-02-10  Kazu Hirata  <kazu@hxi.com>\n \n@@ -1937,20 +1942,6 @@ Thu Feb  7 12:14:17 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-02-05  Jason Merrill  <jason@redhat.com>\n \n-\t* c-typeck.c (convert_for_assignment): Don't allow conversions\n-\tbetween pointers and references.  Only allow lvalues to convert to\n-\treference.\n-\n-\t* c-decl.c (finish_function): Warn about a non-void function with\n-\tno return statement and no abnormal exit.\n-\t(current_function_returns_abnormally): New variable.\n-\t(start_function): Clear it.\n-\t(struct c_language_function): Add returns_abnormally.\n-\t(push_c_function_context): Save it.\n-\t(pop_c_function_context): Restore it.\n-\t* c-tree.h: Declare current_function_returns_abnormally.\n-\t* c-typeck.c (build_function_call): Set it.\n-\n \t* collect2.c (dump_file): Pass DMGL_VERBOSE to cplus_demangle.\n \n 2002-02-05  Andreas Jaeger  <aj@suse.de>"}, {"sha": "10d9521ec96549e8969420b83179415286867fd1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 38, "deletions": 4, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f6c1eb3a281809781471ad479cc3ab6e70a1f5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f6c1eb3a281809781471ad479cc3ab6e70a1f5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=77f6c1eb3a281809781471ad479cc3ab6e70a1f5", "patch": "@@ -1575,10 +1575,44 @@ The following @option{-W@dots{}} options are not affected by @option{-Wall}.\n @table @gcctabopt\n @item -Weffc++ @r{(C++ only)}\n @opindex Weffc++\n-Warn about violations of various style guidelines from Scott Meyers'\n-@cite{Effective C++} books.  If you use this option, you should be aware\n-that the standard library headers do not obey all of these guidelines;\n-you can use @samp{grep -v} to filter out those warnings.\n+Warn about violations of the following style guidelines from Scott Meyers'\n+@cite{Effective C++} book:\n+\n+@itemize @bullet\n+@item\n+Item 11:  Define a copy constructor and an assignment operator for classes\n+with dynamically allocated memory.\n+\n+@item\n+Item 12:  Prefer initialization to assignment in constructors.\n+\n+@item\n+Item 14:  Make destructors virtual in base classes.\n+\n+@item\n+Item 15:  Have @code{operator=} return a reference to @code{*this}.\n+\n+@item\n+Item 23:  Don't try to return a reference when you must return an object.\n+\n+@end itemize\n+\n+and about violations of the following style guidelines from Scott Meyers'\n+@cite{More Effective C++} book:\n+\n+@itemize @bullet\n+@item\n+Item 6:  Distinguish between prefix and postfix forms of increment and\n+decrement operators.\n+\n+@item\n+Item 7:  Never overload @code{&&}, @code{||}, or @code{,}.\n+\n+@end itemize\n+\n+If you use this option, you should be aware that the standard library\n+headers do not obey all of these guidelines; you can use @samp{grep -v}\n+to filter out those warnings.\n \n @item -Wno-deprecated @r{(C++ only)}\n @opindex Wno-deprecated"}]}