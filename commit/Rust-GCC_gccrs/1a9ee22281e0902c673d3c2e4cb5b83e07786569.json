{"sha": "1a9ee22281e0902c673d3c2e4cb5b83e07786569", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE5ZWUyMjI4MWUwOTAyYzY3M2QzYzJlNGNiNWI4M2UwNzc4NjU2OQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2015-01-07T09:49:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T09:49:24Z"}, "message": "trans.c (gnat_to_gnu, [...]): Elaborate the expression as part of the same stmt group as the actions.\n\n2015-01-07  Olivier Hainque  <hainque@adacore.com>\n                                             \n\t* gcc-interface/trans.c (gnat_to_gnu, <N_Expression_With_Action>):      \n\tElaborate the expression as part of the same stmt group as the actions.\n\nFrom-SVN: r219286", "tree": {"sha": "d0faf93eb5ec15b59f7153b9d4f6e78dd71a2fae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0faf93eb5ec15b59f7153b9d4f6e78dd71a2fae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a9ee22281e0902c673d3c2e4cb5b83e07786569", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a9ee22281e0902c673d3c2e4cb5b83e07786569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a9ee22281e0902c673d3c2e4cb5b83e07786569", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a9ee22281e0902c673d3c2e4cb5b83e07786569/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d1286f61e043074327839d3f2cd1c8d0039c3dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d1286f61e043074327839d3f2cd1c8d0039c3dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d1286f61e043074327839d3f2cd1c8d0039c3dc"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "0965f21f088706f4514650f6893eb59b821af526", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9ee22281e0902c673d3c2e4cb5b83e07786569/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9ee22281e0902c673d3c2e4cb5b83e07786569/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1a9ee22281e0902c673d3c2e4cb5b83e07786569", "patch": "@@ -1,3 +1,8 @@\n+2015-01-07  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gcc-interface/trans.c (gnat_to_gnu, <N_Expression_With_Action>):\n+\tElaborate the expression as part of the same stmt group as the actions.\n+\n 2015-01-07  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb: Minor error message change."}, {"sha": "e77aee0ae7d05ecb210b2b4048922dbcb0372811", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9ee22281e0902c673d3c2e4cb5b83e07786569/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9ee22281e0902c673d3c2e4cb5b83e07786569/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=1a9ee22281e0902c673d3c2e4cb5b83e07786569", "patch": "@@ -7128,13 +7128,22 @@ gnat_to_gnu (Node_Id gnat_node)\n     /****************/\n \n     case N_Expression_With_Actions:\n-      /* This construct doesn't define a scope so we don't push a binding level\n-\t around the statement list; but we wrap it in a SAVE_EXPR to protect it\n-\t from unsharing.  */\n-      gnu_result = build_stmt_group (Actions (gnat_node), false);\n+      /* This construct doesn't define a scope so we don't push a binding\n+\t level around the statement list, but we wrap it in a SAVE_EXPR to\n+\t protect it from unsharing.  Elaborate the expression as part of the\n+\t same statement group as the actions so that the type declaration\n+\t gets inserted there as well.  This ensures that the type elaboration\n+\t code is issued past the actions computing values on which it might\n+\t depend.  */\n+\n+      start_stmt_group ();\n+      add_stmt_list (Actions (gnat_node));\n+      gnu_expr = gnat_to_gnu (Expression (gnat_node));\n+      gnu_result = end_stmt_group ();\n+\n       gnu_result = build1 (SAVE_EXPR, void_type_node, gnu_result);\n       TREE_SIDE_EFFECTS (gnu_result) = 1;\n-      gnu_expr = gnat_to_gnu (Expression (gnat_node));\n+\n       gnu_result\n \t= build_compound_expr (TREE_TYPE (gnu_expr), gnu_result, gnu_expr);\n       gnu_result_type = get_unpadded_type (Etype (gnat_node));"}]}