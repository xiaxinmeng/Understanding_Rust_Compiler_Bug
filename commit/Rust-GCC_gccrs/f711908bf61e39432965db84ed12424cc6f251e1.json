{"sha": "f711908bf61e39432965db84ed12424cc6f251e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcxMTkwOGJmNjFlMzk0MzI5NjVkYjg0ZWQxMjQyNGNjNmYyNTFlMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-14T09:19:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-14T09:19:28Z"}, "message": "re PR tree-optimization/87974 (ICE in vect_get_vec_def_for_stmt_copy)\n\n2018-11-14  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87974\n\t* tree-vect-loop.c (vectorizable_reduction): When computing\n\tthe vectorized reduction PHI vector type ignore constant\n\tand external defs.\n\n\t* g++.dg/opt/pr87974.C: New testcase.\n\nFrom-SVN: r266099", "tree": {"sha": "7e348a03b38fec7de949eb377b67eee3e0502318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e348a03b38fec7de949eb377b67eee3e0502318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f711908bf61e39432965db84ed12424cc6f251e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f711908bf61e39432965db84ed12424cc6f251e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f711908bf61e39432965db84ed12424cc6f251e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f711908bf61e39432965db84ed12424cc6f251e1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4071191f4d20d25389181b90c0a24f254a47b87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4071191f4d20d25389181b90c0a24f254a47b87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4071191f4d20d25389181b90c0a24f254a47b87"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "f1f2c4c957ac92d0aa1d63382d8315a603cd6c1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f711908bf61e39432965db84ed12424cc6f251e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f711908bf61e39432965db84ed12424cc6f251e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f711908bf61e39432965db84ed12424cc6f251e1", "patch": "@@ -1,3 +1,10 @@\n+2018-11-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87974\n+\t* tree-vect-loop.c (vectorizable_reduction): When computing\n+\tthe vectorized reduction PHI vector type ignore constant\n+\tand external defs.\n+\n 2018-11-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/87977"}, {"sha": "767da5380f71ddea834bc5d40b009f8566eeebe4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f711908bf61e39432965db84ed12424cc6f251e1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f711908bf61e39432965db84ed12424cc6f251e1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f711908bf61e39432965db84ed12424cc6f251e1", "patch": "@@ -1,3 +1,8 @@\n+2018-11-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87974\n+\t* g++.dg/opt/pr87974.C: New testcase.\n+\n 2018-11-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/87977"}, {"sha": "4b070d2a6f83f55f34a371b10244030c0f2a91c0", "filename": "gcc/testsuite/g++.dg/opt/pr87974.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f711908bf61e39432965db84ed12424cc6f251e1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr87974.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f711908bf61e39432965db84ed12424cc6f251e1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr87974.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr87974.C?ref=f711908bf61e39432965db84ed12424cc6f251e1", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O3\" }\n+\n+struct h {\n+    typedef int &c;\n+};\n+class i {\n+    struct j {\n+\tusing c = int *;\n+    };\n+    using as = j::c;\n+};\n+template <typename> class k {\n+public:\n+    using as = i::as;\n+    h::c operator[](long l) {\n+\tk<int[]>::as d = 0;\n+\treturn d[l];\n+    }\n+};\n+class : public k<int[]> { } a;\n+long c, f;\n+void m()\n+{\n+  for (long b; b <= 6; b++)\n+    for (long g; g < b; g++) {\n+\tunsigned long e = g;\n+\tc = 0;\n+\tfor (; c < b; c++)\n+\t  f = e >>= 1;\n+\ta[g] = f;\n+    }\n+}"}, {"sha": "dac6bb87847487e63f873f09c49aa15bb9de4514", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f711908bf61e39432965db84ed12424cc6f251e1/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f711908bf61e39432965db84ed12424cc6f251e1/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=f711908bf61e39432965db84ed12424cc6f251e1", "patch": "@@ -6066,13 +6066,17 @@ vectorizable_reduction (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \treturn true;\n \n       gassign *reduc_stmt = as_a <gassign *> (reduc_stmt_info->stmt);\n+      code = gimple_assign_rhs_code (reduc_stmt);\n       for (unsigned k = 1; k < gimple_num_ops (reduc_stmt); ++k)\n \t{\n \t  tree op = gimple_op (reduc_stmt, k);\n \t  if (op == phi_result)\n \t    continue;\n-\t  if (k == 1\n-\t      && gimple_assign_rhs_code (reduc_stmt) == COND_EXPR)\n+\t  if (k == 1 && code == COND_EXPR)\n+\t    continue;\n+\t  bool is_simple_use = vect_is_simple_use (op, loop_vinfo, &dt);\n+\t  gcc_assert (is_simple_use);\n+\t  if (dt == vect_constant_def || dt == vect_external_def)\n \t    continue;\n \t  if (!vectype_in\n \t      || (GET_MODE_SIZE (SCALAR_TYPE_MODE (TREE_TYPE (vectype_in)))"}]}