{"sha": "89560a3c2c5046489930c3532e128fdc2f77e24e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk1NjBhM2MyYzUwNDY0ODk5MzBjMzUzMmUxMjhmZGMyZjc3ZTI0ZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-07-10T14:28:48Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-07-10T14:28:48Z"}, "message": "re PR fortran/49690 (ICE in gfc_typenode_for_spec, at fortran/trans-types.c:1019)\n\n2011-07-10  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/49690\n        * intrinsic.c (add_functions): Use BT_VOID for 2nd argument of\n        * SIGNAL.\n\n2011-07-10  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/49690\n        * gfortran.dg/intrinsic_signal.f90: New.\n\nFrom-SVN: r176121", "tree": {"sha": "f05d79c0abe5daab16d680d32116db23b4ccf075", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f05d79c0abe5daab16d680d32116db23b4ccf075"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89560a3c2c5046489930c3532e128fdc2f77e24e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89560a3c2c5046489930c3532e128fdc2f77e24e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89560a3c2c5046489930c3532e128fdc2f77e24e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89560a3c2c5046489930c3532e128fdc2f77e24e/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53130f756045ccc520dc6ec8a6881dedfad8b46a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53130f756045ccc520dc6ec8a6881dedfad8b46a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53130f756045ccc520dc6ec8a6881dedfad8b46a"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "2f0b50889f4f91804a3420ab75919f4302cd660a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89560a3c2c5046489930c3532e128fdc2f77e24e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89560a3c2c5046489930c3532e128fdc2f77e24e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=89560a3c2c5046489930c3532e128fdc2f77e24e", "patch": "@@ -1,3 +1,8 @@\n+2011-07-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/49690\n+\t* intrinsic.c (add_functions): Use BT_VOID for 2nd argument of SIGNAL.\n+\n 2011-07-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR fortran/48926"}, {"sha": "5946ddd8be27bcb8823abc64702cdfa3338964b6", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89560a3c2c5046489930c3532e128fdc2f77e24e/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89560a3c2c5046489930c3532e128fdc2f77e24e/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=89560a3c2c5046489930c3532e128fdc2f77e24e", "patch": "@@ -2594,7 +2594,7 @@ add_functions (void)\n \n   add_sym_2 (\"signal\", GFC_ISYM_SIGNAL, CLASS_IMPURE, ACTUAL_NO, BT_INTEGER,\n \t     di, GFC_STD_GNU, gfc_check_signal, NULL, gfc_resolve_signal,\n-\t     num, BT_INTEGER, di, REQUIRED, han, BT_UNKNOWN, 0, REQUIRED);\n+\t     num, BT_INTEGER, di, REQUIRED, han, BT_VOID, 0, REQUIRED);\n \n   make_generic (\"signal\", GFC_ISYM_SIGNAL, GFC_STD_GNU);\n "}, {"sha": "edeffaa12489158258bad6239bd3e9fc06c0ac0d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89560a3c2c5046489930c3532e128fdc2f77e24e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89560a3c2c5046489930c3532e128fdc2f77e24e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89560a3c2c5046489930c3532e128fdc2f77e24e", "patch": "@@ -1,3 +1,8 @@\n+2011-07-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/49690\n+\t* gfortran.dg/intrinsic_signal.f90: New.\n+\n 2011-07-09  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/regress/regress6.C: New."}, {"sha": "cb57c952a2908ef4721da97643324f148c12c35e", "filename": "gcc/testsuite/gfortran.dg/intrinsic_signal.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89560a3c2c5046489930c3532e128fdc2f77e24e/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_signal.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89560a3c2c5046489930c3532e128fdc2f77e24e/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_signal.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_signal.f90?ref=89560a3c2c5046489930c3532e128fdc2f77e24e", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+!\n+! PR fortran/49690\n+!\n+! Reduced test case, based on the one of Debian bug #631204\n+!\n+\n+subroutine ctrlc_ast\n+   common /xinterrupt/ interrupted\n+   logical interrupted\n+   interrupted = .true.\n+end subroutine ctrlc_ast  \n+\n+subroutine set_ctrl_c(ctrlc_ast)\n+   external ctrlc_ast\n+   intrinsic signal\n+   integer old_handle\n+   common /xinterrupt/ interrupted\n+   logical interrupted\n+   old_handler = signal(2, ctrlc_ast)    \n+end subroutine set_ctrl_c"}]}