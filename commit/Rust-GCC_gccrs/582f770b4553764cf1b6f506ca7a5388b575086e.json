{"sha": "582f770b4553764cf1b6f506ca7a5388b575086e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgyZjc3MGI0NTUzNzY0Y2YxYjZmNTA2Y2E3YTUzODhiNTc1MDg2ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-12-31T10:38:33Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-12-31T10:38:33Z"}, "message": "diagnostic.c (build_message_string): Use xvasprintf.\n\n\t* diagnostic.c (build_message_string): Use xvasprintf.\n\t* final.c (output_operand_lossage): Use xvasprintf and xasprintf.\n\t* lto-wrapper.c (merge_and_complain): Use xasprintf.\n\t* targhooks.c (pch_option_mismatch): Ditto.\n\t* tree-ssa-structalias.c (create_function_info_for): Ditto.\n\t(create_variable_info_for_1): Ditto.\n\nFrom-SVN: r219122", "tree": {"sha": "9cef18d8274cc89fa233fab49705548a71dd886d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cef18d8274cc89fa233fab49705548a71dd886d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/582f770b4553764cf1b6f506ca7a5388b575086e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582f770b4553764cf1b6f506ca7a5388b575086e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/582f770b4553764cf1b6f506ca7a5388b575086e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582f770b4553764cf1b6f506ca7a5388b575086e/comments", "author": null, "committer": null, "parents": [{"sha": "ec5f010299aeae689871053d9f2164a9ea7f3a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec5f010299aeae689871053d9f2164a9ea7f3a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec5f010299aeae689871053d9f2164a9ea7f3a87"}], "stats": {"total": 54, "additions": 30, "deletions": 24}, "files": [{"sha": "88555d117363f9ca83d8cc86f4336efc9c52fd37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=582f770b4553764cf1b6f506ca7a5388b575086e", "patch": "@@ -1,3 +1,12 @@\n+2014-12-31  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* diagnostic.c (build_message_string): Use xvasprintf.\n+\t* final.c (output_operand_lossage): Use xvasprintf and xasprintf.\n+\t* lto-wrapper.c (merge_and_complain): Use xasprintf.\n+\t* targhooks.c (pch_option_mismatch): Ditto.\n+\t* tree-ssa-structalias.c (create_function_info_for): Ditto.\n+\t(create_variable_info_for_1): Ditto.\n+\n 2014-12-30  Anthony Green  <green@moxielogic.com>\n \n \t* config/moxie/moxie.md (zero_extendqisi2, zero_extendhisi2):\n@@ -147,8 +156,8 @@\n \n 2014-12-22  Martin Liska  <mliska@suse.cz>\n \n-\t* cgraphunit.c (symbol_table::process_new_functions): New inline_summaries\n-\tis used.\n+\t* cgraphunit.c (symbol_table::process_new_functions): New\n+\tinline_summaries is used.\n \t* ipa-cp.c (ipcp_cloning_candidate_p): Likewise.\n \t(devirtualization_time_bonus): Likewise.\n \t(estimate_local_effects): Likewise.\n@@ -223,8 +232,8 @@\n \tis used.\n \t* ipa-polymorphic-call.c: Include of symbol-summary.h is added.\n \t* ipa-profile.c: Include of symbol-summary.h is added.\n-\t* ipa-prop.c (ipa_propagate_indirect_call_infos): New ipa_node_params_sum\n-\tdata structure is used.\n+\t* ipa-prop.c (ipa_propagate_indirect_call_infos): New\n+\tipa_node_params_sum data structure is used.\n \t(ipa_node_params::~ipa_node_params): New function.\n \t(ipa_free_all_node_params): Destruction is simplified.\n \t(ipa_node_removal_hook): Removed.\n@@ -777,8 +786,7 @@\n \t(parser::parse_pattern): Properly allocate capture_ids before\n \tusing them.  Set capture_ids to zero when its lifetime is\n \tsupposed to finish.\n-\t(parser::parse_simplify): Allocate capture_ids only if\n-\trequired.\n+\t(parser::parse_simplify): Allocate capture_ids only if required.\n \n 2014-12-16  Michael Haubenwallner <michael.haubenwallner@ssi-schaefer.com>\n "}, {"sha": "066cebb801785a6e8304f37045c6cf38e8264d93", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=582f770b4553764cf1b6f506ca7a5388b575086e", "patch": "@@ -70,7 +70,7 @@ build_message_string (const char *msg, ...)\n   va_list ap;\n \n   va_start (ap, msg);\n-  vasprintf (&str, msg, ap);\n+  str = xvasprintf (msg, ap);\n   va_end (ap);\n \n   return str;"}, {"sha": "2f86ab128ae644202d047e89f8f27e231ecfda23", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=582f770b4553764cf1b6f506ca7a5388b575086e", "patch": "@@ -3420,8 +3420,8 @@ output_operand_lossage (const char *cmsgid, ...)\n   va_start (ap, cmsgid);\n \n   pfx_str = this_is_asm_operands ? _(\"invalid 'asm': \") : \"output_operand: \";\n-  asprintf (&fmt_string, \"%s%s\", pfx_str, _(cmsgid));\n-  vasprintf (&new_message, fmt_string, ap);\n+  fmt_string = xasprintf (\"%s%s\", pfx_str, _(cmsgid));\n+  new_message = xvasprintf (fmt_string, ap);\n \n   if (this_is_asm_operands)\n     error_for_asm (this_is_asm_operands, \"%s\", new_message);"}, {"sha": "f7118760d943df4a3e3c4b8f3838d43dc8bc5712", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=582f770b4553764cf1b6f506ca7a5388b575086e", "patch": "@@ -371,7 +371,7 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \t\t}\n \t      (*decoded_options)[j].opt_index = OPT_O;\n \t      char *tem;\n-\t      asprintf (&tem, \"-O%d\", level);\n+\t      tem = xasprintf (\"-O%d\", level);\n \t      (*decoded_options)[j].arg = &tem[2];\n \t      (*decoded_options)[j].canonical_option[0] = tem;\n \t      (*decoded_options)[j].value = 1;"}, {"sha": "eedcc80ce7a00e178ece3ad8a75640f55a21fac9", "filename": "gcc/targhooks.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=582f770b4553764cf1b6f506ca7a5388b575086e", "patch": "@@ -1639,12 +1639,8 @@ default_get_pch_validity (size_t *sz)\n static const char *\n pch_option_mismatch (const char *option)\n {\n-  char *r;\n-\n-  asprintf (&r, _(\"created and used with differing settings of '%s'\"), option);\n-  if (r == NULL)\n-    return _(\"out of memory\");\n-  return r;\n+  return xasprintf (_(\"created and used with differing settings of '%s'\"),\n+\t\t    option);\n }\n \n /* Default version of pch_valid_p.  */"}, {"sha": "1f29bee5936f05df688f8fcd3e5649eb76710486", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582f770b4553764cf1b6f506ca7a5388b575086e/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=582f770b4553764cf1b6f506ca7a5388b575086e", "patch": "@@ -5457,7 +5457,7 @@ create_function_info_for (tree decl, const char *name)\n       const char *newname;\n       char *tempname;\n \n-      asprintf (&tempname, \"%s.clobber\", name);\n+      tempname = xasprintf (\"%s.clobber\", name);\n       newname = ggc_strdup (tempname);\n       free (tempname);\n \n@@ -5471,7 +5471,7 @@ create_function_info_for (tree decl, const char *name)\n       prev_vi->next = clobbervi->id;\n       prev_vi = clobbervi;\n \n-      asprintf (&tempname, \"%s.use\", name);\n+      tempname = xasprintf (\"%s.use\", name);\n       newname = ggc_strdup (tempname);\n       free (tempname);\n \n@@ -5493,7 +5493,7 @@ create_function_info_for (tree decl, const char *name)\n       const char *newname;\n       char *tempname;\n \n-      asprintf (&tempname, \"%s.chain\", name);\n+      tempname = xasprintf (\"%s.chain\", name);\n       newname = ggc_strdup (tempname);\n       free (tempname);\n \n@@ -5521,7 +5521,7 @@ create_function_info_for (tree decl, const char *name)\n       if (DECL_RESULT (decl))\n \tresultdecl = DECL_RESULT (decl);\n \n-      asprintf (&tempname, \"%s.result\", name);\n+      tempname = xasprintf (\"%s.result\", name);\n       newname = ggc_strdup (tempname);\n       free (tempname);\n \n@@ -5551,7 +5551,7 @@ create_function_info_for (tree decl, const char *name)\n       if (arg)\n \targdecl = arg;\n \n-      asprintf (&tempname, \"%s.arg%d\", name, i);\n+      tempname = xasprintf (\"%s.arg%d\", name, i);\n       newname = ggc_strdup (tempname);\n       free (tempname);\n \n@@ -5580,7 +5580,7 @@ create_function_info_for (tree decl, const char *name)\n       char *tempname;\n       tree decl;\n \n-      asprintf (&tempname, \"%s.varargs\", name);\n+      tempname = xasprintf (\"%s.varargs\", name);\n       newname = ggc_strdup (tempname);\n       free (tempname);\n \n@@ -5717,8 +5717,10 @@ create_variable_info_for_1 (tree decl, const char *name)\n \n       if (dump_file)\n \t{\n-\t  asprintf (&tempname, \"%s.\" HOST_WIDE_INT_PRINT_DEC\n-\t\t    \"+\" HOST_WIDE_INT_PRINT_DEC, name, fo->offset, fo->size);\n+\t  tempname\n+\t    = xasprintf (\"%s.\" HOST_WIDE_INT_PRINT_DEC\n+\t\t\t \"+\" HOST_WIDE_INT_PRINT_DEC, name,\n+\t\t\t fo->offset, fo->size);\n \t  newname = ggc_strdup (tempname);\n \t  free (tempname);\n \t}"}]}