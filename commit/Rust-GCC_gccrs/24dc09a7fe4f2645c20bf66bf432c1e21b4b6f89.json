{"sha": "24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRkYzA5YTdmZTRmMjY0NWMyMGJmNjZiZjQzMmMxZTIxYjRiNmY4OQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@rabi.columbia.edu", "date": "1999-04-03T07:40:32Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-04-03T07:40:32Z"}, "message": "cpp-if1.c: Adjust regexps to accommodate cccp.\n\n1999-04-03 10:35 -0500  Zack Weinberg  <zack@rabi.columbia.edu>\n\t* gcc.dg/cpp-if1.c: Adjust regexps to accommodate cccp.\n\t* gcc.dg/cpp-if3.c: Don't use -pedantic.\n\t* gcc.misc-tests/m-un-2.c: Adjust regexps for new format of\n\tmissing initializer warnings.\n\nFrom-SVN: r26150", "tree": {"sha": "bd11551154360f54f12e20b8d4bf2d9cdecde602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd11551154360f54f12e20b8d4bf2d9cdecde602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89/comments", "author": null, "committer": null, "parents": [{"sha": "e01a4a17e5574417cf8fd32c2698ab1870204c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01a4a17e5574417cf8fd32c2698ab1870204c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e01a4a17e5574417cf8fd32c2698ab1870204c73"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "2c4c434b810f3bb9d306c0b64527de8a80884b33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89", "patch": "@@ -1,3 +1,10 @@\n+1999-04-03 10:35 -0500  Zack Weinberg  <zack@rabi.columbia.edu>\n+\n+\t* gcc.dg/cpp-if1.c: Adjust regexps to accommodate cccp.\n+\t* gcc.dg/cpp-if3.c: Don't use -pedantic.\n+\t* gcc.misc-tests/m-un-2.c: Adjust regexps for new format of\n+\tmissing initializer warnings.\n+\n Sun Mar 28 00:49:41 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* lib/objc-torture.exp: Replace \"77\" with \"Obj-C\" in pattern"}, {"sha": "d3b078fc3c6a62de961400ef8c88367b570923b2", "filename": "gcc/testsuite/gcc.dg/cpp-if1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp-if1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp-if1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp-if1.c?ref=24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89", "patch": "@@ -9,22 +9,22 @@\n #error 077 != 63 /* { dg-bogus \"#error\" \"normal conversion\" } */\n #endif\n \n-#if 12wrt /* { dg-error \"nvalid number\" \"invalid number\" } */\n+#if 12wrt /* { dg-error \"nvalid number|missing white\" \"invalid number\" } */\n #endif\n \n-#if 0abc /* { dg-error \"nvalid number\" \"invalid number\" } */\n+#if 0abc /* { dg-error \"nvalid number|missing white\" \"invalid number\" } */\n #endif\n \n-#if 42abc /* { dg-error \"nvalid number\" \"invalid number\" } */\n+#if 42abc /* { dg-error \"nvalid number|missing white\" \"invalid number\" } */\n #endif\n \n-#if 1.2 /* { dg-error \"floating point numbers\" \"floating point in #if\" } */\n+#if 1.2 /* { dg-error \"loating point numbers\" \"floating point in #if\" } */\n #endif\n \n-#if 4uu /* { dg-error \"too many `u' suffixes\" \"too many suffixes\" } */\n+#if 4uu /* { dg-error \"(too many|two) `u'\" \"too many suffixes\" } */\n #endif\n \n-#if 124123231lll /* { dg-error \"too many `l' suffixes\" \"too many suffixes\" } */\n+#if 124123231lll /* { dg-error \"too many `l'\" \"too many suffixes\" } */\n #endif\n \n #if 099 /* { dg-error \"digits beyond the radix\" \"decimal in octal constant\" } */"}, {"sha": "c46f5633761b87d73f1f85bcf2d1d5a5af66cbf7", "filename": "gcc/testsuite/gcc.dg/cpp-if3.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp-if3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp-if3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp-if3.c?ref=24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89", "patch": "@@ -1,5 +1,7 @@\n+/* Test that the preprocessor is capable of 64-bit arithmetic.\n+   (Must turn off -pedantic, since `LL' constants are only in C9x.)  */\n /* { dg-do preprocess } */\n-/* { dg-options -pedantic-errors } */\n+/* { dg-options \"\" } */\n \n #define U_MAX 4294967295U\n #define ULL_MAX 18446744073709551615ULL"}, {"sha": "81d6dca363ffe9c9ee5cbfa33bd8ab3677f921f7", "filename": "gcc/testsuite/gcc.misc-tests/m-un-2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fm-un-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fm-un-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fm-un-2.c?ref=24dc09a7fe4f2645c20bf66bf432c1e21b4b6f89", "patch": "@@ -15,12 +15,14 @@ struct vtable {\n struct vtable mtable = {\n   malloc,\n   free\n-}; /* { dg-warning \"missing initializer for `mtable._realloc'\" \"warning regression\" } */\n+}; /* { dg-warning \"missing initializer\" \"warning regression\" { target native } {18} } */\n+   /* { dg-warning \"initialization for `mtable._realloc'\" \"warning regression\" { target native } {18} } */\n \n struct vtable mtable2 = {\n   ._malloc = malloc,\n   ._realloc = realloc\n-}; /* { dg-warning \"missing initializer for `mtable2._free'\" \"warning regression\" } */\n+}; /* { dg-warning \"missing initializer\" \"warning regression\" { target native } {24} } */\n+   /* { dg-warning \"initialization for `mtable2._free'\" \"warning regression\" { target native } {24} } */\n \n struct vtable mtable3 = {\n   ._free = free,"}]}