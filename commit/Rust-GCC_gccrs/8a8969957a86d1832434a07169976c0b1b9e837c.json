{"sha": "8a8969957a86d1832434a07169976c0b1b9e837c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE4OTY5OTU3YTg2ZDE4MzI0MzRhMDcxNjk5NzZjMGIxYjllODM3Yw==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-10-07T20:09:49Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-10-07T20:09:49Z"}, "message": "msp430.c (msp430_file_end): s/msp_/msp430_/\n\n2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config/msp430/msp430.c (msp430_file_end): s/msp_/msp430_/\n\t(msp430_expand_epilogue): Likewise.\n\t* config/msp430/predicates.md: Likewise.\n\t* config/msp430/msp430.md: Likewise.\n\tReplace blocks of 8 spaces with tabs.\n\nFrom-SVN: r276671", "tree": {"sha": "486af39ca1000c80f37e2980f8e87fbf6f59dcc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/486af39ca1000c80f37e2980f8e87fbf6f59dcc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a8969957a86d1832434a07169976c0b1b9e837c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a8969957a86d1832434a07169976c0b1b9e837c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a8969957a86d1832434a07169976c0b1b9e837c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a8969957a86d1832434a07169976c0b1b9e837c/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53f450825dd09f95eb7c57677f1803371c57763a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f450825dd09f95eb7c57677f1803371c57763a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f450825dd09f95eb7c57677f1803371c57763a"}], "stats": {"total": 154, "additions": 82, "deletions": 72}, "files": [{"sha": "7d8aa956633c24c489e5762777f809d065fafeab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a8969957a86d1832434a07169976c0b1b9e837c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a8969957a86d1832434a07169976c0b1b9e837c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a8969957a86d1832434a07169976c0b1b9e837c", "patch": "@@ -1,3 +1,11 @@\n+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.c (msp430_file_end): s/msp_/msp430_/\n+\t(msp430_expand_epilogue): Likewise.\n+\t* config/msp430/predicates.md: Likewise.\n+\t* config/msp430/msp430.md: Likewise.\n+\tReplace blocks of 8 spaces with tabs.\n+\n 2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* config/msp430/msp430-protos.h (msp430_split_addsi): New prototype."}, {"sha": "ae763faada3d744097eafbba61b2486551fe62e9", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a8969957a86d1832434a07169976c0b1b9e837c/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a8969957a86d1832434a07169976c0b1b9e837c/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=8a8969957a86d1832434a07169976c0b1b9e837c", "patch": "@@ -83,7 +83,7 @@ struct GTY(()) machine_function\n };\n \n /* This is our init_machine_status, as set in\n-   msp_option_override.  */\n+   msp430_option_override.  */\n static struct machine_function *\n msp430_init_machine_status (void)\n {\n@@ -2119,18 +2119,20 @@ msp430_file_end (void)\n      construct a .MSP430.attributes section based on the options it is invoked\n      with.  The values it reads from these directives are used for validating\n      those options.  */\n-  const char *msp_attr = \".mspabi_attribute\";\n+  const char *msp430_attr = \".mspabi_attribute\";\n   const char *gnu_attr = \".gnu_attribute\";\n \n   /* Emit .mspabi_attribute directive for OFBA_MSPABI_Tag_ISA.  */\n-  fprintf (asm_out_file, \"\\t%s %d, %d\\n\", msp_attr, OFBA_MSPABI_Tag_ISA,\n+  fprintf (asm_out_file, \"\\t%s %d, %d\\n\", msp430_attr, OFBA_MSPABI_Tag_ISA,\n \t   msp430x ? OFBA_MSPABI_Val_ISA_MSP430X : OFBA_MSPABI_Val_ISA_MSP430);\n   /* Emit .mspabi_attribute directive for OFBA_MSPABI_Tag_Code_Model.  */\n-  fprintf (asm_out_file, \"\\t%s %d, %d\\n\", msp_attr, OFBA_MSPABI_Tag_Code_Model,\n+  fprintf (asm_out_file, \"\\t%s %d, %d\\n\", msp430_attr,\n+\t   OFBA_MSPABI_Tag_Code_Model,\n \t   TARGET_LARGE ? OFBA_MSPABI_Val_Model_Large\n \t   : OFBA_MSPABI_Val_Model_Small);\n   /* Emit .mspabi_attribute directive for OFBA_MSPABI_Tag_Data_Model.  */\n-  fprintf (asm_out_file, \"\\t%s %d, %d\\n\", msp_attr, OFBA_MSPABI_Tag_Data_Model,\n+  fprintf (asm_out_file, \"\\t%s %d, %d\\n\", msp430_attr,\n+\t   OFBA_MSPABI_Tag_Data_Model,\n \t   TARGET_LARGE ? OFBA_MSPABI_Val_Model_Large\n \t   : OFBA_MSPABI_Val_Model_Small);\n #ifdef HAVE_AS_MSPABI_ATTRIBUTE\n@@ -2604,7 +2606,7 @@ msp430_expand_epilogue (int is_eh)\n   else if (is_reentrant_func ())\n     emit_insn (gen_enable_interrupts ());\n \n-  emit_jump_insn (gen_msp_return ());\n+  emit_jump_insn (gen_msp430_return ());\n }\n \n /* Implements EH_RETURN_STACKADJ_RTX.  Saved and used later in"}, {"sha": "ebd9c85fbb6ff5399a6858ac15f853d567933051", "filename": "gcc/config/msp430/msp430.md", "status": "modified", "additions": 61, "deletions": 61, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a8969957a86d1832434a07169976c0b1b9e837c/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a8969957a86d1832434a07169976c0b1b9e837c/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.md?ref=8a8969957a86d1832434a07169976c0b1b9e837c", "patch": "@@ -183,24 +183,24 @@\n )\n \n (define_insn \"movqi_topbyte\"\n-  [(set (match_operand:QI 0 \"msp_nonimmediate_operand\" \"=r\")\n-\t(subreg:QI (match_operand:PSI 1 \"msp_general_operand\" \"r\") 2))]\n+  [(set (match_operand:QI 0 \"msp430_nonimmediate_operand\" \"=r\")\n+\t(subreg:QI (match_operand:PSI 1 \"msp430_general_operand\" \"r\") 2))]\n   \"msp430x\"\n   \"PUSHM.A\\t#1,%1 { POPM.W\\t#1,%0 { POPM.W\\t#1,%0\"\n )\n \n (define_insn \"movqi\"\n-  [(set (match_operand:QI 0 \"msp_nonimmediate_operand\" \"=rYsYx,rm\")\n-\t(match_operand:QI 1 \"msp_general_operand\" \"riYsYx,rmi\"))]\n+  [(set (match_operand:QI 0 \"msp430_nonimmediate_operand\" \"=rYsYx,rm\")\n+\t(match_operand:QI 1 \"msp430_general_operand\" \"riYsYx,rmi\"))]\n   \"\"\n   \"@\n   MOV.B\\t%1, %0\n   MOVX.B\\t%1, %0\"\n )\n \n (define_insn \"movhi\"\n-  [(set (match_operand:HI 0 \"msp_nonimmediate_operand\" \"=r,rYsYx,rm\")\n-\t(match_operand:HI 1 \"msp_general_operand\" \"N,riYsYx,rmi\"))]\n+  [(set (match_operand:HI 0 \"msp430_nonimmediate_operand\" \"=r,rYsYx,rm\")\n+\t(match_operand:HI 1 \"msp430_general_operand\" \"N,riYsYx,rmi\"))]\n   \"\"\n   \"@\n   MOV.B\\t%1, %0\n@@ -243,8 +243,8 @@\n \n ;; FIXME: Some MOVX.A cases can be done with MOVA, this is only a few of them.\n (define_insn \"movpsi\"\n-  [(set (match_operand:PSI 0 \"msp_nonimmediate_operand\" \"=r,r,r,Ya,rm\")\n-\t(match_operand:PSI 1 \"msp_general_operand\" \"N,O,riYa,r,rmi\"))]\n+  [(set (match_operand:PSI 0 \"msp430_nonimmediate_operand\" \"=r,r,r,Ya,rm\")\n+\t(match_operand:PSI 1 \"msp430_general_operand\" \"N,O,riYa,r,rmi\"))]\n   \"\"\n   \"@\n   MOV.B\\t%1, %0\n@@ -279,29 +279,29 @@\n ;; Math\n \n (define_insn \"addpsi3\"\n-  [(set (match_operand:PSI           0 \"msp_nonimmediate_operand\" \"=r,rm\")\n-\t(plus:PSI (match_operand:PSI 1 \"msp_nonimmediate_operand\" \"%0,0\")\n-\t\t  (match_operand:PSI 2 \"msp_general_operand\"      \"rLs,rmi\")))]\n+  [(set (match_operand:PSI\t     0 \"msp430_nonimmediate_operand\" \"=r,rm\")\n+\t(plus:PSI (match_operand:PSI 1 \"msp430_nonimmediate_operand\" \"%0,0\")\n+\t\t  (match_operand:PSI 2 \"msp430_general_operand\"      \"rLs,rmi\")))]\n   \"\"\n   \"@\n   ADDA\\t%2, %0\n   ADDX.A\\t%2, %0\"\n )\n \n (define_insn \"addqi3\"\n-  [(set (match_operand:QI          0 \"msp_nonimmediate_operand\" \"=rYsYx,rm\")\n-\t(plus:QI (match_operand:QI 1 \"msp_nonimmediate_operand\" \"%0,0\")\n-\t\t (match_operand:QI 2 \"msp_general_operand\"      \"riYsYx,rmi\")))]\n+  [(set (match_operand:QI\t   0 \"msp430_nonimmediate_operand\" \"=rYsYx,rm\")\n+\t(plus:QI (match_operand:QI 1 \"msp430_nonimmediate_operand\" \"%0,0\")\n+\t\t (match_operand:QI 2 \"msp430_general_operand\"      \"riYsYx,rmi\")))]\n   \"\"\n   \"@\n    ADD.B\\t%2, %0\n    ADDX.B\\t%2, %0\"\n )\n \n (define_insn \"addhi3\"\n-  [(set (match_operand:HI           0 \"msp_nonimmediate_operand\" \"=rYsYx,rm\")\n-\t(plus:HI (match_operand:HI  1 \"msp_nonimmediate_operand\" \"%0,0\")\n-\t\t  (match_operand:HI 2 \"msp_general_operand\"      \"riYsYx,rmi\")))]\n+  [(set (match_operand:HI\t    0 \"msp430_nonimmediate_operand\" \"=rYsYx,rm\")\n+\t(plus:HI (match_operand:HI  1 \"msp430_nonimmediate_operand\" \"%0,0\")\n+\t\t  (match_operand:HI 2 \"msp430_general_operand\"      \"riYsYx,rmi\")))]\n   \"\"\n   \"@\n    ADD.W\\t%2, %0\n@@ -358,9 +358,9 @@\n ; that are not single_set() very well.\n \n (define_insn \"addhi3_cy\"\n-  [(set (match_operand:HI          0 \"msp_nonimmediate_operand\" \"=rYsYx,rm\")\n-\t(plus:HI (match_operand:HI 1 \"msp_nonimmediate_operand\" \"%0,0\")\n-\t\t (match_operand:HI 2 \"msp_nonimmediate_operand\" \"rYsYxi,rm\")))\n+  [(set (match_operand:HI\t   0 \"msp430_nonimmediate_operand\" \"=rYsYx,rm\")\n+\t(plus:HI (match_operand:HI 1 \"msp430_nonimmediate_operand\" \"%0,0\")\n+\t\t (match_operand:HI 2 \"msp430_nonimmediate_operand\" \"rYsYxi,rm\")))\n    (set (reg:BI CARRY)\n \t(truncate:BI (lshiftrt:SI (plus:SI (zero_extend:SI (match_dup 1))\n \t\t\t\t\t   (zero_extend:SI (match_dup 2)))\n@@ -389,9 +389,9 @@\n \n ; Version of addhi that adds the carry, for SImode adds.\n (define_insn \"addchi4_cy\"\n-  [(set (match_operand:HI                   0 \"msp_nonimmediate_operand\" \"=rYsYx,rm\")\n-\t(plus:HI (plus:HI (match_operand:HI 1 \"msp_nonimmediate_operand\" \"%0,0\")\n-\t\t\t  (match_operand:HI 2 \"msp_general_operand\"      \"riYsYx,rmi\"))\n+  [(set (match_operand:HI\t\t    0 \"msp430_nonimmediate_operand\" \"=rYsYx,rm\")\n+\t(plus:HI (plus:HI (match_operand:HI 1 \"msp430_nonimmediate_operand\" \"%0,0\")\n+\t\t\t  (match_operand:HI 2 \"msp430_general_operand\"      \"riYsYx,rmi\"))\n \t\t (zero_extend:HI (reg:BI CARRY))))\n    ]\n   \"\"\n@@ -479,8 +479,8 @@\n )\n \n (define_insn \"*bic<mode>_cg\"\n-  [(set (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"=rYs,m\")\n-\t(and:QHI (match_operand:QHI 1 \"msp_general_operand\" \"0,0\")\n+  [(set (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"=rYs,m\")\n+\t(and:QHI (match_operand:QHI 1 \"msp430_general_operand\" \"0,0\")\n \t\t (match_operand 2 \"msp430_inv_constgen_operator\" \"n,n\")))]\n   \"\"\n   \"@\n@@ -489,19 +489,19 @@\n )\n \n (define_insn \"bic<mode>3\"\n-  [(set (match_operand:QHI                   0 \"msp_nonimmediate_operand\" \"=rYsYx,rm\")\n-\t(and:QHI (not:QHI (match_operand:QHI 1 \"msp_general_operand\"       \"rYsYx,rmn\"))\n-\t\t (match_operand:QHI          2 \"msp_nonimmediate_operand\"  \"0,0\")))]\n+  [(set (match_operand:QHI\t\t     0 \"msp430_nonimmediate_operand\" \"=rYsYx,rm\")\n+\t(and:QHI (not:QHI (match_operand:QHI 1 \"msp430_general_operand\"       \"rYsYx,rmn\"))\n+\t\t (match_operand:QHI\t     2 \"msp430_nonimmediate_operand\"  \"0,0\")))]\n   \"\"\n   \"@\n    BIC%x0%b0\\t%1, %0\n    BICX%b0\\t%1, %0\"\n )\n \n (define_insn \"and<mode>3\"\n-  [(set (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"=r,rYsYx,rm\")\n-\t(and:QHI (match_operand:QHI 1 \"msp_nonimmediate_operand\" \"%0,0,0\")\n-\t\t (match_operand:QHI 2 \"msp_general_operand\" \"N,riYsYx,rmi\")))]\n+  [(set (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"=r,rYsYx,rm\")\n+\t(and:QHI (match_operand:QHI 1 \"msp430_nonimmediate_operand\" \"%0,0,0\")\n+\t\t (match_operand:QHI 2 \"msp430_general_operand\" \"N,riYsYx,rmi\")))]\n   \"\"\n   \"@\n    AND%x0.B\\t%2, %0\n@@ -510,19 +510,19 @@\n )\n \n (define_insn \"ior<mode>3\"\n-  [(set (match_operand:QHI          0 \"msp_nonimmediate_operand\" \"=rYsYx,rm\")\n-\t(ior:QHI (match_operand:QHI 1 \"msp_nonimmediate_operand\" \"%0,0\")\n-\t\t (match_operand:QHI 2 \"msp_general_operand\" \"riYsYx,rmi\")))]\n+  [(set (match_operand:QHI\t    0 \"msp430_nonimmediate_operand\" \"=rYsYx,rm\")\n+\t(ior:QHI (match_operand:QHI 1 \"msp430_nonimmediate_operand\" \"%0,0\")\n+\t\t (match_operand:QHI 2 \"msp430_general_operand\" \"riYsYx,rmi\")))]\n   \"\"\n   \"@\n    BIS%x0%b0\\t%2, %0\n    BISX%b0\\t%2, %0\"\n )\n \n (define_insn \"xor<mode>3\"\n-  [(set (match_operand:QHI          0 \"msp_nonimmediate_operand\" \"=rYsYx,rm\")\n-\t(xor:QHI (match_operand:QHI 1 \"msp_nonimmediate_operand\" \"%0,0\")\n-\t\t (match_operand:QHI 2 \"msp_general_operand\" \"riYsYx,rmi\")))]\n+  [(set (match_operand:QHI\t    0 \"msp430_nonimmediate_operand\" \"=rYsYx,rm\")\n+\t(xor:QHI (match_operand:QHI 1 \"msp430_nonimmediate_operand\" \"%0,0\")\n+\t\t (match_operand:QHI 2 \"msp430_general_operand\" \"riYsYx,rmi\")))]\n   \"\"\n   \"@\n    XOR%x0%b0\\t%2, %0\n@@ -531,26 +531,26 @@\n \n ;; Macro : XOR #~0, %0\n (define_insn \"one_cmpl<mode>2\"\n-  [(set (match_operand:QHI          0 \"msp_nonimmediate_operand\" \"=rYs,m\")\n-\t(not:QHI (match_operand:QHI 1 \"msp_nonimmediate_operand\" \"0,0\")))]\n+  [(set (match_operand:QHI\t    0 \"msp430_nonimmediate_operand\" \"=rYs,m\")\n+\t(not:QHI (match_operand:QHI 1 \"msp430_nonimmediate_operand\" \"0,0\")))]\n   \"\"\n   \"@\n    INV%x0%b0\\t%0\n    INV%X0%b0\\t%0\"\n )\n \n (define_insn \"extendqihi2\"\n-  [(set (match_operand:HI                 0 \"msp_nonimmediate_operand\" \"=rYs,m\")\n-\t(sign_extend:HI (match_operand:QI 1 \"msp_nonimmediate_operand\" \"0,0\")))]\n+  [(set (match_operand:HI\t\t  0 \"msp430_nonimmediate_operand\" \"=rYs,m\")\n+\t(sign_extend:HI (match_operand:QI 1 \"msp430_nonimmediate_operand\" \"0,0\")))]\n   \"\"\n   \"@\n    SXT%X0\\t%0\n    SXT%X0\\t%0\"\n )\n \n (define_insn \"zero_extendqihi2\"\n-  [(set (match_operand:HI                 0 \"msp_nonimmediate_operand\" \"=rYs,r,r,m\")\n-\t(zero_extend:HI (match_operand:QI 1 \"msp_nonimmediate_operand\" \"0,rYs,m,0\")))]\n+  [(set (match_operand:HI\t\t  0 \"msp430_nonimmediate_operand\" \"=rYs,r,r,m\")\n+\t(zero_extend:HI (match_operand:QI 1 \"msp430_nonimmediate_operand\" \"0,rYs,m,0\")))]\n   \"\"\n   \"@\n    AND\\t#0xff, %0\n@@ -571,16 +571,16 @@\n )\n \n (define_insn \"zero_extendhipsi2\"\n-  [(set (match_operand:PSI                 0 \"msp_nonimmediate_operand\" \"=r,m\")\n-\t(zero_extend:PSI (match_operand:HI 1 \"msp_nonimmediate_operand\" \"rm,r\")))]\n+  [(set (match_operand:PSI\t\t   0 \"msp430_nonimmediate_operand\" \"=r,m\")\n+\t(zero_extend:PSI (match_operand:HI 1 \"msp430_nonimmediate_operand\" \"rm,r\")))]\n   \"\"\n   \"@\n   MOVX\\t%1, %0\n   MOVX.A\\t%1, %0\"\n )\n \n (define_insn \"truncpsihi2\"\n-  [(set (match_operand:HI               0 \"msp_nonimmediate_operand\" \"=rm\")\n+  [(set (match_operand:HI\t\t0 \"msp430_nonimmediate_operand\" \"=rm\")\n \t(truncate:HI (match_operand:PSI 1 \"register_operand\"      \"r\")))]\n   \"\"\n   \"MOVX\\t%1, %0\"\n@@ -851,8 +851,8 @@\n )\n \n (define_insn \"srai_1\"\n-  [(set (match_operand:HI              0 \"msp_nonimmediate_operand\" \"=rm\")\n-\t(ashiftrt:HI (match_operand:HI 1 \"msp_general_operand\"      \"0\")\n+  [(set (match_operand:HI\t       0 \"msp430_nonimmediate_operand\" \"=rm\")\n+\t(ashiftrt:HI (match_operand:HI 1 \"msp430_general_operand\"      \"0\")\n \t\t     (const_int 1)))]\n   \"\"\n   \"RRA%X0.W\\t%0\"\n@@ -1094,7 +1094,7 @@\n   \"CALL%Q0\\t%1\"\n )\n \n-(define_insn \"msp_return\"\n+(define_insn \"msp430_return\"\n   [(return)]\n   \"\"\n   { return msp430_is_interrupt_func () ? \"RETI\" : (TARGET_LARGE ? \"RETA\" : \"RET\"); }\n@@ -1274,8 +1274,8 @@\n \n (define_insn \"*bitbranch<mode>4\"\n   [(set (pc) (if_then_else\n-\t      (ne (and:QHI (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"rYsYx,rm\")\n-\t\t\t   (match_operand:QHI 1 \"msp_general_operand\" \"rYsYxi,rmi\"))\n+\t      (ne (and:QHI (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"rYsYx,rm\")\n+\t\t\t   (match_operand:QHI 1 \"msp430_general_operand\" \"rYsYxi,rmi\"))\n \t\t  (const_int 0))\n               (label_ref (match_operand 2 \"\" \"\"))\n \t      (pc)))\n@@ -1289,8 +1289,8 @@\n \n (define_insn \"*bitbranch<mode>4\"\n   [(set (pc) (if_then_else\n-\t      (eq (and:QHI (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"rYsYx,rm\")\n-\t\t\t   (match_operand:QHI 1 \"msp_general_operand\" \"rYsYxi,rmi\"))\n+\t      (eq (and:QHI (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"rYsYx,rm\")\n+\t\t\t   (match_operand:QHI 1 \"msp430_general_operand\" \"rYsYxi,rmi\"))\n \t\t  (const_int 0))\n               (label_ref (match_operand 2 \"\" \"\"))\n \t      (pc)))\n@@ -1304,8 +1304,8 @@\n \n (define_insn \"*bitbranch<mode>4\"\n   [(set (pc) (if_then_else\n-\t      (eq (and:QHI (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"rYsYx,rm\")\n-\t\t\t   (match_operand:QHI 1 \"msp_general_operand\" \"rYsYxi,rmi\"))\n+\t      (eq (and:QHI (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"rYsYx,rm\")\n+\t\t\t   (match_operand:QHI 1 \"msp430_general_operand\" \"rYsYxi,rmi\"))\n \t\t  (const_int 0))\n               (pc)\n \t      (label_ref (match_operand 2 \"\" \"\"))))\n@@ -1319,8 +1319,8 @@\n \n (define_insn \"*bitbranch<mode>4\"\n   [(set (pc) (if_then_else\n-\t      (ne (and:QHI (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"rYsYx,rm\")\n-\t\t\t   (match_operand:QHI 1 \"msp_general_operand\" \"rYsYxi,rmi\"))\n+\t      (ne (and:QHI (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"rYsYx,rm\")\n+\t\t\t   (match_operand:QHI 1 \"msp430_general_operand\" \"rYsYxi,rmi\"))\n \t\t  (const_int 0))\n               (pc)\n \t      (label_ref (match_operand 2 \"\" \"\"))))\n@@ -1337,7 +1337,7 @@\n \n (define_insn \"*bitbranch<mode>4_z\"\n   [(set (pc) (if_then_else\n-\t      (ne (zero_extract:HI (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"rYs,rm\")\n+\t      (ne (zero_extract:HI (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"rYs,rm\")\n \t\t\t\t    (const_int 1)\n \t\t\t\t    (match_operand 1 \"msp430_bitpos\" \"i,i\"))\n \t\t  (const_int 0))\n@@ -1353,7 +1353,7 @@\n \n (define_insn \"*bitbranch<mode>4_z\"\n   [(set (pc) (if_then_else\n-\t      (eq (zero_extract:HI (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"rm\")\n+\t      (eq (zero_extract:HI (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"rm\")\n \t\t\t\t   (const_int 1)\n \t\t\t\t   (match_operand 1 \"msp430_bitpos\" \"i\"))\n \t\t  (const_int 0))\n@@ -1367,7 +1367,7 @@\n \n (define_insn \"*bitbranch<mode>4_z\"\n   [(set (pc) (if_then_else\n-\t      (eq (zero_extract:HI (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"rm\")\n+\t      (eq (zero_extract:HI (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"rm\")\n \t\t\t\t   (const_int 1)\n \t\t\t\t   (match_operand 1 \"msp430_bitpos\" \"i\"))\n \t\t  (const_int 0))\n@@ -1381,7 +1381,7 @@\n \n (define_insn \"*bitbranch<mode>4_z\"\n   [(set (pc) (if_then_else\n-\t      (ne (zero_extract:HI (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"rm\")\n+\t      (ne (zero_extract:HI (match_operand:QHI 0 \"msp430_nonimmediate_operand\" \"rm\")\n \t\t\t\t   (const_int 1)\n \t\t\t\t   (match_operand 1 \"msp430_bitpos\" \"i\"))\n \t\t  (const_int 0))"}, {"sha": "751548c4ae889c2fde3e864f46f8c9f19093a74b", "filename": "gcc/config/msp430/predicates.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a8969957a86d1832434a07169976c0b1b9e837c/gcc%2Fconfig%2Fmsp430%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a8969957a86d1832434a07169976c0b1b9e837c/gcc%2Fconfig%2Fmsp430%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fpredicates.md?ref=8a8969957a86d1832434a07169976c0b1b9e837c", "patch": "@@ -18,24 +18,24 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n-(define_predicate \"msp_volatile_memory_operand\"\n+(define_predicate \"msp430_volatile_memory_operand\"\n   (and (match_code \"mem\")\n        (match_test (\"memory_address_addr_space_p (GET_MODE (op), XEXP (op, 0), MEM_ADDR_SPACE (op))\")))\n )\n \n ; TRUE for any valid general operand.  We do this because\n ; general_operand refuses to match volatile memory refs.\n \n-(define_predicate \"msp_general_operand\"\n+(define_predicate \"msp430_general_operand\"\n   (ior (match_operand 0 \"general_operand\")\n-       (match_operand 0 \"msp_volatile_memory_operand\"))\n+       (match_operand 0 \"msp430_volatile_memory_operand\"))\n )\n \n ; Likewise for nonimmediate_operand.\n \n-(define_predicate \"msp_nonimmediate_operand\"\n+(define_predicate \"msp430_nonimmediate_operand\"\n   (ior (match_operand 0 \"nonimmediate_operand\")\n-       (match_operand 0 \"msp_volatile_memory_operand\"))\n+       (match_operand 0 \"msp430_volatile_memory_operand\"))\n )\n \n (define_predicate \"ubyte_operand\""}]}