{"sha": "3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E4Yzk5NWJlNzYyOWIwNWY3MWU1ZTBkMGFmYjFiZDRlN2JiNjE3Ng==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-12-05T17:53:14Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-12-05T17:53:14Z"}, "message": "tree.h (special_function_p): Declare.\n\n\t* tree.h (special_function_p): Declare.\n\t* calls.c (special_function_p): Make it global.  Don't take `name'\n\tas a parameter.  Fix typo in 1999-11-28 change.\n\t(expand_cal): Adjust.\n\nFrom-SVN: r30788", "tree": {"sha": "67f47706953450d5e1f4664179fc8384c809f9e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67f47706953450d5e1f4664179fc8384c809f9e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176/comments", "author": null, "committer": null, "parents": [{"sha": "e6f696fc9883d36d269592f0a33de5f3a70d59c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f696fc9883d36d269592f0a33de5f3a70d59c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6f696fc9883d36d269592f0a33de5f3a70d59c1"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "8a785a34a11011d5db8578c33646f005c99a476d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176", "patch": "@@ -1,3 +1,10 @@\n+1999-12-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* tree.h (special_function_p): Declare.\n+\t* calls.c (special_function_p): Make it global.  Don't take `name'\n+\tas a parameter.  Fix typo in 1999-11-28 change.\n+\t(expand_cal): Adjust.\n+\n 1999-12-04  Mark Mitchell  <mark@codesourcery.com>\n \n \t* tree.def (EXPR_WITH_FILE_LOCATION): Fix comment formatting."}, {"sha": "40b359ded6775a1acfb137b8a900716b962e4d8c", "filename": "gcc/calls.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176", "patch": "@@ -134,8 +134,6 @@ static int calls_function_1\tPROTO ((tree, int));\n static void emit_call_1\t\tPROTO ((rtx, tree, tree, HOST_WIDE_INT,\n \t\t\t\t\tHOST_WIDE_INT, HOST_WIDE_INT, rtx,\n \t\t\t\t\trtx, int, rtx, int));\n-static void special_function_p\tPROTO ((char *, tree, int *, int *,\n-\t\t\t\t\tint *, int *));\n static void precompute_register_parameters\tPROTO ((int, struct arg_data *,\n \t\t\t\t\t\t\tint *));\n static void store_one_arg\tPROTO ((struct arg_data *, rtx, int, int,\n@@ -534,10 +532,9 @@ emit_call_1 (funexp, fndecl, funtype, stack_size, rounded_stack_size,\n    Set MAY_BE_ALLOCA for any memory allocation function that might allocate\n    space from the stack such as alloca.  */\n \n-static void\n-special_function_p (name, fndecl, returns_twice, is_longjmp,\n+void\n+special_function_p (fndecl, returns_twice, is_longjmp,\n \t\t    is_malloc, may_be_alloca)\n-     char *name;\n      tree fndecl;\n      int *returns_twice;\n      int *is_longjmp;\n@@ -551,14 +548,15 @@ special_function_p (name, fndecl, returns_twice, is_longjmp,\n   /* The function decl may have the `malloc' attribute.  */\n   *is_malloc = fndecl && DECL_IS_MALLOC (fndecl);\n \n-  if (! is_malloc \n-      && name != 0 \n+  if (! *is_malloc \n+      && fndecl && DECL_NAME (fndecl)\n       && IDENTIFIER_LENGTH (DECL_NAME (fndecl)) <= 17\n       /* Exclude functions not at the file scope, or not `extern',\n \t since they are not the magic functions we would otherwise\n \t think they are.  */\n       && DECL_CONTEXT (fndecl) == NULL_TREE && TREE_PUBLIC (fndecl))\n     {\n+      char *name = IDENTIFIER_POINTER (DECL_NAME (fndecl));\n       char *tname = name;\n \n       /* We assume that alloca will always be called by name.  It\n@@ -1880,7 +1878,7 @@ expand_call (exp, target, ignore)\n \n   /* See if this is a call to a function that can return more than once\n      or a call to longjmp or malloc.  */\n-  special_function_p (name, fndecl, &returns_twice, &is_longjmp,\n+  special_function_p (fndecl, &returns_twice, &is_longjmp,\n \t\t      &is_malloc, &may_be_alloca);\n \n   if (may_be_alloca)"}, {"sha": "7b0653c343cb277b77cdd35755e5c8abc5a4f0dd", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=3a8c995be7629b05f71e5e0d0afb1bd4e7bb6176", "patch": "@@ -2405,6 +2405,10 @@ extern struct rtx_def *emit_line_note_after\tPROTO ((char *, int,\n extern struct rtx_def *emit_line_note\t\tPROTO ((char *, int));\n extern struct rtx_def *emit_line_note_force\tPROTO ((char *, int));\n \n+/* In calls.c */\n+extern void special_function_p\t        PROTO ((tree, int *, int *,\n+\t\t\t\t\t\tint *, int *));\n+\n /* In c-typeck.c */\n extern int mark_addressable\t\tPROTO ((tree));\n extern void incomplete_type_error\tPROTO ((tree, tree));"}]}