{"sha": "8e9114bbad5558ab9897a821bb84be85523126f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU5MTE0YmJhZDU1NThhYjk4OTdhODIxYmI4NGJlODU1MjMxMjZmNQ==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-07-13T14:51:14Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-07-13T14:51:14Z"}, "message": "fixinc test result changes\n\nFrom-SVN: r35013", "tree": {"sha": "17d1252442c2107252f1ce3b37c223e09ee2ee8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17d1252442c2107252f1ce3b37c223e09ee2ee8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e9114bbad5558ab9897a821bb84be85523126f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e9114bbad5558ab9897a821bb84be85523126f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e9114bbad5558ab9897a821bb84be85523126f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e9114bbad5558ab9897a821bb84be85523126f5/comments", "author": null, "committer": null, "parents": [{"sha": "687262b1f6667fe837fb5a6a3b9feb00913717ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/687262b1f6667fe837fb5a6a3b9feb00913717ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/687262b1f6667fe837fb5a6a3b9feb00913717ab"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "28fb5827d3ec4c8c9cefcb28190b9111322caa51", "filename": "gcc/fixinc/tests/base/arpa/inet.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Farpa%2Finet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Farpa%2Finet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Farpa%2Finet.h?ref=8e9114bbad5558ab9897a821bb84be85523126f5", "patch": "@@ -0,0 +1,4 @@\n+\n+\n+#if defined( UW7_BYTEORDER_FIX_CHECK )\n+#endif  /* UW7_BYTEORDER_FIX_CHECK */"}, {"sha": "5ab8602986ffeb11e72c4a20a071e0bb06cdfbfa", "filename": "gcc/fixinc/tests/base/math.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fmath.h?ref=8e9114bbad5558ab9897a821bb84be85523126f5", "patch": "@@ -68,6 +68,14 @@ typedef struct exception t_math_exception;\n #endif  /* MATH_EXCEPTION_CHECK */\n \n \n+#if defined( MATH_HUGE_VAL_FROM_DBL_MAX_CHECK )\n+\n+#ifndef HUGE_VAL\n+#define HUGE_VAL 3.1415e+9 /* really big */\n+#endif\n+#endif  /* MATH_HUGE_VAL_FROM_DBL_MAX_CHECK */\n+\n+\n #if defined( MATH_HUGE_VAL_IFNDEF_CHECK )\n #ifndef HUGE_VAL\n # define\tHUGE_VAL 3.4e+40"}, {"sha": "799825ae050ba045b39f91c1551dbb6d1a388039", "filename": "gcc/fixinc/tests/base/stdio.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdio.h?ref=8e9114bbad5558ab9897a821bb84be85523126f5", "patch": "@@ -33,6 +33,11 @@ extern int rename(const char *_old, const char *_new);\n #endif  /* STDIO_STDARG_H_CHECK */\n \n \n+#if defined( STDIO_DUMMY_VA_LIST_CHECK )\n+extern void mumble( __gnuc_va_list);\n+#endif  /* STDIO_DUMMY_VA_LIST_CHECK */\n+\n+\n #if defined( ULTRIX_CONST_CHECK )\n extern void perror( const char *__s );\n extern int fputs( const char *__s, FILE *);"}, {"sha": "af0c8409174221c77b71151b56fc0aa386b917b6", "filename": "gcc/fixinc/tests/base/sys/limits.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Flimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Flimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Flimits.h?ref=8e9114bbad5558ab9897a821bb84be85523126f5", "patch": "@@ -7,6 +7,13 @@\n #endif  /* LIMITS_IFNDEFS_CHECK */\n \n \n+#if defined( NESTED_MOTOROLA_CHECK )\n+#undef PIPE_BUF /* max # bytes atomic in write to a */\n+\t\t/* PIPE */\n+/*#define\tHUGE_VAL\t3.9e+9 */ /*error value returned by Math lib*/\n+#endif  /* NESTED_MOTOROLA_CHECK */\n+\n+\n #if defined( NESTED_SYS_LIMITS_CHECK )\n /*\n #define CHILD_MAX 20  Max, Max, ... */ /*"}, {"sha": "bcbea5653cff091f87df8a4ff337bcec4c03f398", "filename": "gcc/fixinc/tests/base/sys/types.h", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Ftypes.h?ref=8e9114bbad5558ab9897a821bb84be85523126f5", "patch": "@@ -1,11 +1,28 @@\n \n \n-#if defined( SYSTYPES_STDLIB_SIZE_T_CHECK )\n+#if defined( GNU_TYPES_CHECK )\n+#ifndef __PTRDIFF_TYPE__\n+#define __PTRDIFF_TYPE__ long int\n+#endif\n+#if !defined(_GCC_PTRDIFF_T)\n+#define _GCC_PTRDIFF_T\n+typedef __PTRDIFF_TYPE__ ptrdiff_t;\n+#endif\n+ /* long int */\n #ifndef __SIZE_TYPE__\n #define __SIZE_TYPE__ long unsigned int\n #endif\n-#ifndef _GCC_SIZE_T\n+#if !defined(_GCC_SIZE_T)\n #define _GCC_SIZE_T\n-typedef __SIZE_TYPE__ size_t; /* size of something */\n+typedef __SIZE_TYPE__ size_t;\n+#endif\n+ /* uint_t */\n+#ifndef __WCHAR_TYPE__\n+#define __WCHAR_TYPE__ int\n+#endif\n+#if !defined(_GCC_WCHAR_T) && !defined(__cplusplus)\n+#define _GCC_WCHAR_T\n+typedef __WCHAR_TYPE__ wchar_t;\n #endif\n-#endif  /* SYSTYPES_STDLIB_SIZE_T_CHECK */\n+ /* ushort_t */\n+#endif  /* GNU_TYPES_CHECK */"}, {"sha": "58bd7c649d246efa9d34b9565b3353c26fb54171", "filename": "gcc/fixinc/tests/base/testing.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e9114bbad5558ab9897a821bb84be85523126f5/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h?ref=8e9114bbad5558ab9897a821bb84be85523126f5", "patch": "@@ -43,6 +43,22 @@ int foo;\n #endif  /* SCO_STRICT_ANSI_CHECK */\n \n \n+#if defined( SYSV68_STRING_CHECK )\n+extern unsigned int strlen();\n+extern int ffs(int);\n+extern void\n+\t*memccpy(),\n+\tmemcpy();\n+extern int\n+\tstrncmp();\n+extern unsigned int\n+\tstrlen(),\n+\tstrspn();\n+extern size_t\n+\tstrlen(), strspn();\n+#endif  /* SYSV68_STRING_CHECK */\n+\n+\n #if defined( UNDEFINE_NULL_CHECK )\n #ifndef NULL\r\n #define NULL 0UL\r"}]}