{"sha": "60ba7cd38dff1e64ffcfac04665e32caebcbe6fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBiYTdjZDM4ZGZmMWU2NGZmY2ZhYzA0NjY1ZTMyY2FlYmNiZTZmZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2017-09-24T21:37:09Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2017-09-24T21:37:09Z"}, "message": "x32: Encode %esp as %rsp to avoid 0x67 prefix\n\nSince the upper 32 bits of stack register are always zero for x32, we\ncan encode %esp as %rsp to avoid 0x67 prefix in address if there is no\nindex or base register.\n\ngcc/\n\n\tPR target/82267\n\t* config/i386/i386.c (ix86_print_operand_address_as): Encode\n\t%esp as %rsp to avoid 0x67 prefix if there is no index or base\n\tregister.\n\ngcc/testsuite/\n\n\tPR target/82267\n\t* gcc.target/i386/pr82267.c: New test.\n\nFrom-SVN: r253127", "tree": {"sha": "76217d8b67ea08f88b76beb8c62b38c2d7d8f795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76217d8b67ea08f88b76beb8c62b38c2d7d8f795"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe/comments", "author": null, "committer": null, "parents": [{"sha": "c6c74708b0cc313c90ab5bffc0c2eaa6062827cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c74708b0cc313c90ab5bffc0c2eaa6062827cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6c74708b0cc313c90ab5bffc0c2eaa6062827cb"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "b92347e66bed85037b1ea8dbd0a13f988eba7fe4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60ba7cd38dff1e64ffcfac04665e32caebcbe6fe", "patch": "@@ -1,3 +1,10 @@\n+2017-09-24  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/82267\n+\t* config/i386/i386.c (ix86_print_operand_address_as): Encode\n+\t%esp as %rsp to avoid 0x67 prefix if there is no index or base\n+\tregister.\n+\n 2017-09-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR bootstrap/82306"}, {"sha": "293287c8af48053bb8229557e175f6978f6623a1", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=60ba7cd38dff1e64ffcfac04665e32caebcbe6fe", "patch": "@@ -19953,6 +19953,14 @@ ix86_print_operand_address_as (FILE *file, rtx addr,\n \t  code = 'k';\n \t}\n \n+      /* Since the upper 32 bits of RSP are always zero for x32, we can\n+\t encode %esp as %rsp to avoid 0x67 prefix if there is no index or\n+\t base register.  */\n+      if (TARGET_X32 && Pmode == SImode\n+\t  && ((!index && base && REGNO (base) == SP_REG)\n+\t      || (!base && index && REGNO (index) == SP_REG)))\n+\tcode = 'q';\n+\n       if (ASSEMBLER_DIALECT == ASM_ATT)\n \t{\n \t  if (disp)"}, {"sha": "18c4a26c2f5ad5571bcf26358b5b759bd59fbe01", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60ba7cd38dff1e64ffcfac04665e32caebcbe6fe", "patch": "@@ -1,3 +1,8 @@\n+2017-09-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/82267\n+\t* gcc.target/i386/pr82267.c: New test.\n+\n 2017-09-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \tPR fortran/66328\n "}, {"sha": "5e4b271d41d7e4e2ee12123509c01ecb534caeac", "filename": "gcc/testsuite/gcc.target/i386/pr82267.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82267.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ba7cd38dff1e64ffcfac04665e32caebcbe6fe/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82267.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82267.c?ref=60ba7cd38dff1e64ffcfac04665e32caebcbe6fe", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-require-effective-target maybe_x32 } */\n+/* { dg-options \"-O2 -mx32 -maddress-mode=short\" } */\n+\n+int\n+stackuse (void)\n+{\n+  volatile int foo = 2;\n+  return foo * 3;\n+}\n+\n+/* Verify we that use %rsp to access stack.  */\n+/* { dg-final { scan-assembler-not \"%esp\" } } */\n+/* { dg-final { scan-assembler \"%rsp\" } } */"}]}