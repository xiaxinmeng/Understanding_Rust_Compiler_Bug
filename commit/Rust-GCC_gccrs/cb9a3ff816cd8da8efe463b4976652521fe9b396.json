{"sha": "cb9a3ff816cd8da8efe463b4976652521fe9b396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I5YTNmZjgxNmNkOGRhOGVmZTQ2M2I0OTc2NjUyNTIxZmU5YjM5Ng==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-02-21T19:51:44Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-02-21T19:51:44Z"}, "message": "call.c (build_object_call): Compress consecutive calls to cp_error.\n\n2000-02-21  Gabriel Dos Reis  <gdr@codesourcery.com>\n\n        * call.c (build_object_call): Compress consecutive calls to\n        cp_error.\n        (build_conditional_expr): Say 'ISO C++' not 'ANSI C++'.\n        (build_op_delete_call): Adjust message formatting.\n\n        * class.c (check_bases): Compress consecutive calls to\n        cp_pedwarn.\n        (finish_struct_anon): Say 'ISO C++'.\n\n        * decl.c (start_decl): Same here.\n        (grok_reference_init): Likewise.\n        (grokfndecl): Correct message formatting.\n        (grokfndecl): Improve diagnostic.\n        (check_static_variable_definition): Likewise. Say 'ISO C++'\n        (compute_array_index_type): Say 'ISO C++'\n        (create_array_type_for_decl): Compress consecutive calls to\n        cp_error.\n        (grokdeclarator): Say 'ISO C++'\n        (grok_op_properties): Likewise.\n\n        * decl2.c (delete_sanity): Clairify diagnostic.\n        (check_member_template): Same here.\n        (grok_function_init): Use consistent terminology.\n\n        * expr.c (do_case): Say 'ISO C++'\n\n        * friend.c (do_friend): Compress consecutive calls to warning.\n\nFrom-SVN: r32090", "tree": {"sha": "593ca2207cb7f69371dcd4e6f5019f48dcabc847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/593ca2207cb7f69371dcd4e6f5019f48dcabc847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb9a3ff816cd8da8efe463b4976652521fe9b396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9a3ff816cd8da8efe463b4976652521fe9b396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb9a3ff816cd8da8efe463b4976652521fe9b396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9a3ff816cd8da8efe463b4976652521fe9b396/comments", "author": null, "committer": null, "parents": [{"sha": "c801c87c9d7cbf81ef3774aa6e90114947f54ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c801c87c9d7cbf81ef3774aa6e90114947f54ace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c801c87c9d7cbf81ef3774aa6e90114947f54ace"}], "stats": {"total": 104, "additions": 63, "deletions": 41}, "files": [{"sha": "045902c3352d1a6b42ab47badc8bd8633c2b019a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cb9a3ff816cd8da8efe463b4976652521fe9b396", "patch": "@@ -1,3 +1,33 @@\n+2000-02-21  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* call.c (build_object_call): Compress consecutive calls to\n+\tcp_error.\n+\t(build_conditional_expr): Say 'ISO C++' not 'ANSI C++'.\n+\t(build_op_delete_call): Adjust message formatting.\n+\n+\t* class.c (check_bases): Compress consecutive calls to\n+\tcp_pedwarn. \n+\t(finish_struct_anon): Say 'ISO C++'.\n+\n+\t* decl.c (start_decl): Same here.\n+\t(grok_reference_init): Likewise.\n+\t(grokfndecl): Correct message formatting.\n+\t(grokfndecl): Improve diagnostic.\n+\t(check_static_variable_definition): Likewise. Say 'ISO C++'\n+\t(compute_array_index_type): Say 'ISO C++'\n+\t(create_array_type_for_decl): Compress consecutive calls to\n+\tcp_error. \n+\t(grokdeclarator): Say 'ISO C++'\n+\t(grok_op_properties): Likewise.\n+\n+\t* decl2.c (delete_sanity): Clairify diagnostic.\n+\t(check_member_template): Same here.\n+\t(grok_function_init): Use consistent terminology.\n+\n+\t* expr.c (do_case): Say 'ISO C++'\n+\n+\t* friend.c (do_friend): Compress consecutive calls to warning.\n+\t\n 2000-02-20  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (merge_primary_and_secondary_vtables_p): New macro."}, {"sha": "e996b59393a6aeda1d040aad3175aae9029a7c61", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=cb9a3ff816cd8da8efe463b4976652521fe9b396", "patch": "@@ -2556,8 +2556,7 @@ build_object_call (obj, args)\n     {\n       /* It's no good looking for an overloaded operator() on a\n \t pointer-to-member-function.  */\n-      cp_error (\"pointer-to-member function %E cannot be called\", obj);\n-      cp_error (\"without an object; consider using .* or ->*\");\n+      cp_error (\"pointer-to-member function %E cannot be called without an object; consider using .* or ->*\", obj);\n       return error_mark_node;\n     }\n \n@@ -2773,7 +2772,7 @@ build_conditional_expr (arg1, arg2, arg3)\n   if (!arg2)\n     {\n       if (pedantic)\n-\tpedwarn (\"ANSI C++ forbids omitting the middle term of a ?: expression\");\n+\tpedwarn (\"ISO C++ forbids omitting the middle term of a ?: expression\");\n       arg1 = arg2 = save_expr (arg1);\n     }\n \n@@ -3579,7 +3578,7 @@ build_op_delete_call (code, addr, size, flags, placement)\n   if (flags & LOOKUP_SPECULATIVELY)\n     return NULL_TREE;\n \n-  cp_error (\"no suitable operator delete for `%T'\", type);\n+  cp_error (\"no suitable `operator delete' for `%T'\", type);\n   return error_mark_node;\n }\n "}, {"sha": "ce3c2e814ef0057d14bdec9ca622a1867e622cee", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=cb9a3ff816cd8da8efe463b4976652521fe9b396", "patch": "@@ -1923,11 +1923,8 @@ check_bases (t, cant_have_default_ctor_p, cant_have_const_ctor_p,\n \t{\n \t  *cant_have_default_ctor_p = 1;\n \t  if (! TYPE_HAS_CONSTRUCTOR (t))\n-\t    {\n-\t      cp_pedwarn (\"base `%T' with only non-default constructor\",\n-\t\t\t  basetype);\n-\t      cp_pedwarn (\"in class without a constructor\");\n-\t    }\n+            cp_pedwarn (\"base `%T' with only non-default constructor in class without a constructor\",\n+                        basetype);\n \t}\n \n       /* If the base class is not empty or nearly empty, then this\n@@ -3471,7 +3468,7 @@ finish_struct_anon (t)\n \t\tcontinue;\n \n \t      if (DECL_NAME (elt) == constructor_name (t))\n-\t\tcp_pedwarn_at (\"ANSI C++ forbids member `%D' with same name as enclosing class\",\n+\t\tcp_pedwarn_at (\"ISO C++ forbids member `%D' with same name as enclosing class\",\n \t\t\t       elt);\n \n \t      if (TREE_CODE (elt) != FIELD_DECL)"}, {"sha": "45515098470d861a5e326e0a4f916841c89119ca", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 22, "deletions": 23, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=cb9a3ff816cd8da8efe463b4976652521fe9b396", "patch": "@@ -6789,7 +6789,7 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n \t    {\n \t      if (DECL_CONTEXT (field) != context)\n \t\t{\n-\t\t  cp_pedwarn (\"ANSI C++ does not permit `%T::%D' to be defined as `%T::%D'\",\n+\t\t  cp_pedwarn (\"ISO C++ does not permit `%T::%D' to be defined as `%T::%D'\",\n \t\t\t      DECL_CONTEXT (field), DECL_NAME (decl),\n \t\t\t      context, DECL_NAME (decl));\n \t\t  DECL_CONTEXT (decl) = DECL_CONTEXT (field);\n@@ -6959,7 +6959,7 @@ grok_reference_init (decl, type, init)\n \n   if (TREE_CODE (init) == CONSTRUCTOR)\n     {\n-      cp_error (\"ANSI C++ forbids use of initializer list to initialize reference `%D'\", decl);\n+      cp_error (\"ISO C++ forbids use of initializer list to initialize reference `%D'\", decl);\n       return;\n     }\n \n@@ -8449,11 +8449,11 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n   if (ctype == NULL_TREE && DECL_MAIN_P (decl))\n     {\n       if (processing_template_decl)\n-\terror (\"cannot declare `main' to be a template\");\n+\terror (\"cannot declare `::main' to be a template\");\n       if (inlinep)\n-\terror (\"cannot declare `main' to be inline\");\n+\terror (\"cannot declare `::main' to be inline\");\n       else if (! publicp)\n-\terror (\"cannot declare `main' to be static\");\n+\terror (\"cannot declare `::main' to be static\");\n       inlinep = 0;\n       publicp = 1;\n     }\n@@ -8532,7 +8532,7 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n \t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n \t    {\n \t      /* Something like `template <class T> friend void f<T>()'.  */\n-\t      cp_error (\"template-id `%D' in declaration of primary template\",\n+\t      cp_error (\"invalid use of template-id `%D' in declaration of primary template\",\n \t\t\torig_declarator);\n \t      return NULL_TREE;\n \t    }\n@@ -8870,7 +8870,7 @@ check_static_variable_definition (decl, type)\n      required.  */\n   if (CLASS_TYPE_P (type) || TREE_CODE (type) == REFERENCE_TYPE)\n     {\n-      cp_error (\"in-class initialization of static data member of non-integral type `%T'\",\n+      cp_error (\"invalid in-class initialization of static data member of non-integral type `%T'\",\n \t\ttype);\n       /* If we just return the declaration, crashes will sometimes\n \t occur.  We therefore return void_type_node, as if this was a\n@@ -8879,10 +8879,10 @@ check_static_variable_definition (decl, type)\n       return 1;\n     }\n   else if (!CP_TYPE_CONST_P (type))\n-    cp_error (\"ANSI C++ forbids in-class initialization of non-const static member `%D'\",\n+    cp_error (\"ISO C++ forbids in-class initialization of non-const static member `%D'\",\n \t      decl);\n   else if (pedantic && !INTEGRAL_TYPE_P (type))\n-    cp_pedwarn (\"ANSI C++ forbids initialization of member constant `%D' of non-integral type `%T'\", decl, type);\n+    cp_pedwarn (\"ISO C++ forbids initialization of member constant `%D' of non-integral type `%T'\", decl, type);\n \n   return 0;\n }\n@@ -8966,9 +8966,9 @@ compute_array_index_type (name, size)\n       else if (integer_zerop (size) && pedantic && !in_system_header)\n \t{\n \t  if (name)\n-\t    cp_pedwarn (\"ANSI C++ forbids zero-size array `%D'\", name);\n+\t    cp_pedwarn (\"ISO C++ forbids zero-size array `%D'\", name);\n \t  else\n-\t    cp_pedwarn (\"ANSI C++ forbids zero-size array\");\n+\t    cp_pedwarn (\"ISO C++ forbids zero-size array\");\n \t}\n     }\n \n@@ -8987,10 +8987,10 @@ compute_array_index_type (name, size)\n       if (pedantic)\n \t{\n \t  if (name)\n-\t    cp_pedwarn (\"ANSI C++ forbids variable-size array `%D'\",\n+\t    cp_pedwarn (\"ISO C++ forbids variable-size array `%D'\",\n \t\t\tname);\n \t  else\n-\t    cp_pedwarn (\"ANSI C++ forbids variable-size array\");\n+\t    cp_pedwarn (\"ISO C++ forbids variable-size array\");\n \t}\n \n       /* Create a variable-sized array index type.  */\n@@ -9073,9 +9073,8 @@ create_array_type_for_decl (name, type, size)\n      can be omitted only for the first member of the sequence.  */\n   if (TREE_CODE (type) == ARRAY_TYPE && !TYPE_DOMAIN (type))\n     {\n-      cp_error (\"declaration of `%D' as multidimensional array\",\n+      cp_error (\"declaration of `%D' as multidimensional array must have bounds for all dimensions except the first\",\n \t\tname);\n-      cp_error (\"must have bounds for all dimensions except the first\");\n \n       return error_mark_node;\n     }\n@@ -9604,7 +9603,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\t  if (i == (int) RID_LONG && RIDBIT_SETP (i, specbits))\n \t\t    {\n \t\t      if (pedantic && ! in_system_header && warn_long_long)\n-\t\t\tpedwarn (\"ANSI C++ does not support `long long'\");\n+\t\t\tpedwarn (\"ISO C++ does not support `long long'\");\n \t\t      if (longlong)\n \t\t\terror (\"`long long long' is too long for GCC\");\n \t\t      else\n@@ -9694,10 +9693,10 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t  if (in_system_header || flag_ms_extensions)\n \t    /* Allow it, sigh.  */;\n \t  else if (pedantic || ! is_main)\n-\t    cp_pedwarn (\"ANSI C++ forbids declaration of `%s' with no type\",\n+\t    cp_pedwarn (\"ISO C++ forbids declaration of `%s' with no type\",\n \t\t\tname);\n \t  else if (warn_return_type)\n-\t    cp_warning (\"ANSI C++ forbids declaration of `%s' with no type\",\n+\t    cp_warning (\"ISO C++ forbids declaration of `%s' with no type\",\n \t\t\tname);\n \n \t  type = integer_type_node;\n@@ -10655,7 +10654,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n       if (decl_context == FIELD)\n \t{\n \t  if (declarator == constructor_name (current_class_type))\n-\t    cp_pedwarn (\"ANSI C++ forbids nested type `%D' with same name as enclosing class\",\n+\t    cp_pedwarn (\"ISO C++ forbids nested type `%D' with same name as enclosing class\",\n \t\t\tdeclarator);\n \t  decl = build_lang_decl (TYPE_DECL, declarator, type);\n \t}\n@@ -10726,7 +10725,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t  if (ctype == NULL_TREE)\n \t    {\n \t      if (TREE_CODE (type) != METHOD_TYPE)\n-\t\tcp_error_at (\"invalid type qualifier for non-method type\", decl);\n+\t\tcp_error_at (\"invalid type qualifier for non-member function type\", decl);\n \t      else\n \t\tctype = TYPE_METHOD_BASETYPE (type);\n \t    }\n@@ -11042,7 +11041,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t  {\n \t    if (friendp)\n \t      {\n-\t\terror (\"`%s' is neither function nor method; cannot be declared friend\",\n+\t\terror (\"`%s' is neither function nor member function; cannot be declared friend\",\n \t\t       IDENTIFIER_POINTER (declarator));\n \t\tfriendp = 0;\n \t      }\n@@ -11125,7 +11124,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\t   allow non-static data members here, because C does\n \t\t   and /usr/include/netinet/in.h uses that.  */\n \t\t&& (staticp || ! in_system_header))\n-\t      cp_pedwarn (\"ANSI C++ forbids data member `%D' with same name as enclosing class\",\n+\t      cp_pedwarn (\"ISO C++ forbids data member `%D' with same name as enclosing class\",\n \t\t\t  declarator);\n \n \t    if (staticp)\n@@ -12004,7 +12003,7 @@ grok_op_properties (decl, virtualp, friendp)\n       else if (name == ansi_opname[(int) COND_EXPR])\n \t{\n \t  /* 13.4.0.3 */\n-\t  cp_error (\"ANSI C++ prohibits overloading operator ?:\");\n+\t  cp_error (\"ISO C++ prohibits overloading operator ?:\");\n \t}\n       else if (ambi_op_p (name))\n \t{"}, {"sha": "46f64fb3b01a342aa35ddf399317feee14bfe57a", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=cb9a3ff816cd8da8efe463b4976652521fe9b396", "patch": "@@ -1187,7 +1187,7 @@ delete_sanity (exp, size, doing_vec, use_global_delete)\n   /* You can't delete functions.  */\n   if (TREE_CODE (TREE_TYPE (type)) == FUNCTION_TYPE)\n     {\n-      error (\"cannot delete a function\");\n+      error (\"cannot delete a function.  Only pointer-to-objects are valid arguments to `delete'\");\n       return error_mark_node;\n     }\n \n@@ -1245,7 +1245,7 @@ check_member_template (tmpl)\n \t/* 14.5.2.2 [temp.mem]\n \t   \n \t   A local class shall not have member templates. */\n-\tcp_error (\"declaration of member template `%#D' in local class\",\n+\tcp_error (\"invalid declaration of member template `%#D' in local class\",\n \t\t  decl);\n       \n       if (TREE_CODE (decl) == FUNCTION_DECL && DECL_VIRTUAL_P (decl))\n@@ -1862,7 +1862,7 @@ grok_function_init (decl, init)\n #if 0\n   /* We'll check for this in finish_struct_1.  */\n   else if (DECL_VINDEX (decl) == NULL_TREE)\n-    cp_error (\"initializer specified for non-virtual method `%D'\", decl);\n+    cp_error (\"initializer specified for non-virtual member function `%D'\", decl);\n #endif\n   else if (integer_zerop (init))\n     {"}, {"sha": "d11e232f6c7c62cea55f35d356caa0ce77b53c9e", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=cb9a3ff816cd8da8efe463b4976652521fe9b396", "patch": "@@ -290,7 +290,7 @@ do_case (start, end)\n     error (\"pointers are not permitted as case values\");\n \n   if (end && pedantic)\n-    pedwarn (\"ANSI C++ forbids range expressions in switch statement\");\n+    pedwarn (\"ISO C++ forbids range expressions in switch statement\");\n \n   if (start)\n     value1 = check_cp_case_value (start);"}, {"sha": "01c5d9438f26d93ec076b6b9d67b4008f8757116", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9a3ff816cd8da8efe463b4976652521fe9b396/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=cb9a3ff816cd8da8efe463b4976652521fe9b396", "patch": "@@ -410,10 +410,7 @@ do_friend (ctype, declarator, decl, parmdecls, attrlist,\n \t      warning (\"  declares a non-template function\");\n \t      if (! explained)\n \t\t{\n-\t\t  warning (\"  (if this is not what you intended, make sure\");\n-\t\t  warning (\"  the function template has already been declared,\");\n-\t\t  warning (\"  and add <> after the function name here)\");\n- \t\t  warning (\"  -Wno-non-template-friend disables this warning.\");\n+\t\t  warning (\"  (if this is not what you intended, make sure the function template has already been declared and add <> after the function name here) -Wno-non-template-friend disables this warning.\");\n \t\t  explained = 1;\n \t\t}\n \t    }"}]}