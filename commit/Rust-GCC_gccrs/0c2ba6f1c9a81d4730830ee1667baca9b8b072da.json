{"sha": "0c2ba6f1c9a81d4730830ee1667baca9b8b072da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMyYmE2ZjFjOWE4MWQ0NzMwODMwZWUxNjY3YmFjYTliOGIwNzJkYQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2001-09-07T16:39:44Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2001-09-07T16:39:44Z"}, "message": "Add support for a .x file to control XFAIL and wich kinds of gcov output\nto verify.\n\nFrom-SVN: r45466", "tree": {"sha": "5895a7e982aedcb71ea8d68be43c0536e2b64146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5895a7e982aedcb71ea8d68be43c0536e2b64146"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c2ba6f1c9a81d4730830ee1667baca9b8b072da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2ba6f1c9a81d4730830ee1667baca9b8b072da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c2ba6f1c9a81d4730830ee1667baca9b8b072da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2ba6f1c9a81d4730830ee1667baca9b8b072da/comments", "author": null, "committer": null, "parents": [{"sha": "ebe0d2668b2d9a292b200c38a911a70b9dc499b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebe0d2668b2d9a292b200c38a911a70b9dc499b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebe0d2668b2d9a292b200c38a911a70b9dc499b8"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "053bbefd930e0f1053c0655c28cb40887a58f218", "filename": "gcc/testsuite/gcc.misc-tests/gcov.exp", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c2ba6f1c9a81d4730830ee1667baca9b8b072da/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c2ba6f1c9a81d4730830ee1667baca9b8b072da/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov.exp?ref=0c2ba6f1c9a81d4730830ee1667baca9b8b072da", "patch": "@@ -253,11 +253,29 @@ proc verify-calls { testcase file } {\n \n proc run-gcov { args } {\n     global GCOV\n-    global subdir\n+    global srcdir subdir\n \n     # Extract the test name from the arguments.\n     set testcase [lindex $args end]\n \n+    # Get special options for this test from the .x script, if present.\n+    # This can include:\n+    #   gcov_execute_xfail     string to pass to setup_xfail\n+    #   gcov_verify_xfail      string to pass to setup_xfail\n+    #   gcov_verify_branches   if defined, check branch percentages\n+    #   gcov_verify_calls      if defined, check call return percentages\n+    if [file exists [file rootname $srcdir/$subdir/$testcase].x] {\n+\tset done_p 0\n+\tcatch \"set done_p \\[source [file rootname $srcdir/$subdir/$testcase].x\\]\"\n+\tif { $done_p } {\n+\t    return\n+\t}\n+    }\n+\n+    if [info exists gcov_execute_xfail] {\n+\tsetup_xfail $gcov_execute_xfail\n+    }\n+\n     verbose \"Running $GCOV $testcase\" 2\n     set testcase [remote_download host $testcase];\n     set result [remote_exec host $GCOV $args];\n@@ -276,22 +294,30 @@ proc run-gcov { args } {\n     }\n     remote_upload host $testcase.gcov $testcase.gcov;\n \n+    if [info exists gcov_verify_xfail] {\n+\tsetup_xfail $gcov_verify_xfail\n+    }\n+\n     # Check that line execution counts are as expected.\n     set loutput [verify-lines $testcase $testcase.gcov]\n     set lfailed [lindex $loutput 0]\n     set lmessage [lindex $loutput 1]\n \n-    # If we asked for branch and call information, check that it is correct.\n-    if [regexp -- \"-b\" $args] {\n+    # If requested via the .x file, check that branch and call information\n+    # is correct.\n+    if [info exists gcov_verify_branches] {\n \tset boutput [verify-branches $testcase $testcase.gcov]\n \tset bfailed [lindex $boutput 0]\n \tset bmessage [lindex $boutput 1]\n+    } else {\n+\tset bfailed 0\n+\tset bmessage \"\"\n+    }\n+    if [info exists gcov_verify_calls] {\n \tset coutput [verify-calls $testcase $testcase.gcov]\n \tset cfailed [lindex $coutput 0]\n \tset cmessage [lindex $coutput 1]\n     } else {\n-\tset bfailed 0\n-\tset bmessage \"\"\n \tset cfailed 0\n \tset cmessage \"\"\n     }\n@@ -300,7 +326,7 @@ proc run-gcov { args } {\n \n     # Report whether the gcov test passed or failed.  If there were\n     # multiple failures then the message is a summary.\n-    set tfailed [expr $lfailed + [expr $bfailed + $cfailed]]\n+    set tfailed [expr $lfailed + $bfailed + $cfailed]\n     if { $tfailed > 0 } {\n \tif { $tfailed == 1 } {\n \t    set vmessage \"$lmessage$bmessage$cmessage\""}]}