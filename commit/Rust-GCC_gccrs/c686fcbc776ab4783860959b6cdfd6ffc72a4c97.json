{"sha": "c686fcbc776ab4783860959b6cdfd6ffc72a4c97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4NmZjYmM3NzZhYjQ3ODM4NjA5NTliNmNkZmQ2ZmZjNzJhNGM5Nw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2019-03-27T01:15:50Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2019-03-27T01:15:50Z"}, "message": "[RS6000] Rename NON_SPECIAL_REGS to GEN_OR_FLOAT_REGS\n\n\t* config/rs6000/rs6000.h: Rename NON_SPECIAL_REGS to GEN_OR_FLOAT_REGS\n\tthroughout file.\n\t* config/rs6000/darwin.h: Likewise.\n\t* config/rs6000/rs6000.c: Likewise.\n\nFrom-SVN: r269960", "tree": {"sha": "38cb06cbaab4af159f188d9157a90635f3ff1101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38cb06cbaab4af159f188d9157a90635f3ff1101"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c686fcbc776ab4783860959b6cdfd6ffc72a4c97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c686fcbc776ab4783860959b6cdfd6ffc72a4c97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c686fcbc776ab4783860959b6cdfd6ffc72a4c97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c686fcbc776ab4783860959b6cdfd6ffc72a4c97/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "914be15cf3f8bd387c93dfe7b927df18f4462640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/914be15cf3f8bd387c93dfe7b927df18f4462640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/914be15cf3f8bd387c93dfe7b927df18f4462640"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "8055a646474a075e6b5b99ed6fd4c8c090a006f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c686fcbc776ab4783860959b6cdfd6ffc72a4c97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c686fcbc776ab4783860959b6cdfd6ffc72a4c97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c686fcbc776ab4783860959b6cdfd6ffc72a4c97", "patch": "@@ -1,3 +1,10 @@\n+2019-03-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.h: Rename NON_SPECIAL_REGS to GEN_OR_FLOAT_REGS\n+\tthroughout file.\n+\t* config/rs6000/darwin.h: Likewise.\n+\t* config/rs6000/rs6000.c: Likewise.\n+\n 2019-03-27  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Always"}, {"sha": "9fb36e41e7dc34d1e0b6d1633492e5aadc7836c6", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c686fcbc776ab4783860959b6cdfd6ffc72a4c97/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c686fcbc776ab4783860959b6cdfd6ffc72a4c97/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=c686fcbc776ab4783860959b6cdfd6ffc72a4c97", "patch": "@@ -346,7 +346,7 @@ extern int darwin_emit_branch_islands;\n       && reg_class_subset_p (BASE_REGS, (CLASS)))\t\t\\\n    ? BASE_REGS\t\t\t\t\t\t\t\\\n    : (GET_MODE_CLASS (GET_MODE (X)) == MODE_INT\t\t\t\\\n-      && (CLASS) == NON_SPECIAL_REGS)\t\t\t\t\\\n+      && (CLASS) == GEN_OR_FLOAT_REGS)\t\t\t\t\\\n    ? GENERAL_REGS\t\t\t\t\t\t\\\n    : (CLASS))\n "}, {"sha": "cc8dc941537681df53831001bf67f6392c90138f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c686fcbc776ab4783860959b6cdfd6ffc72a4c97/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c686fcbc776ab4783860959b6cdfd6ffc72a4c97/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c686fcbc776ab4783860959b6cdfd6ffc72a4c97", "patch": "@@ -20236,7 +20236,7 @@ rs6000_preferred_reload_class (rtx x, enum reg_class rclass)\n       return NO_REGS;\n     }\n \n-  if (GET_MODE_CLASS (mode) == MODE_INT && rclass == NON_SPECIAL_REGS)\n+  if (GET_MODE_CLASS (mode) == MODE_INT && rclass == GEN_OR_FLOAT_REGS)\n     return GENERAL_REGS;\n \n   return rclass;\n@@ -20384,7 +20384,7 @@ rs6000_secondary_reload_class (enum reg_class rclass, machine_mode mode,\n \n   /* Constants, memory, and FP registers can go into FP registers.  */\n   if ((regno == -1 || FP_REGNO_P (regno))\n-      && (rclass == FLOAT_REGS || rclass == NON_SPECIAL_REGS))\n+      && (rclass == FLOAT_REGS || rclass == GEN_OR_FLOAT_REGS))\n     return (mode != SDmode || lra_in_progress) ? NO_REGS : GENERAL_REGS;\n \n   /* Memory, and AltiVec registers can go into AltiVec registers.  */\n@@ -36154,7 +36154,7 @@ rs6000_libcall_value (machine_mode mode)\n }\n \n /* Compute register pressure classes.  We implement the target hook to avoid\n-   IRA picking something like NON_SPECIAL_REGS as a pressure class, which can\n+   IRA picking something like GEN_OR_FLOAT_REGS as a pressure class, which can\n    lead to incorrect estimates of number of available registers and therefor\n    increased register pressure/spill.   */\n static int"}, {"sha": "ff9449c2d45bf162ce68bd422c0ffa25715c97d1", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c686fcbc776ab4783860959b6cdfd6ffc72a4c97/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c686fcbc776ab4783860959b6cdfd6ffc72a4c97/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=c686fcbc776ab4783860959b6cdfd6ffc72a4c97", "patch": "@@ -1138,7 +1138,7 @@ enum reg_class\n   VRSAVE_REGS,\n   VSCR_REGS,\n   SPR_REGS,\n-  NON_SPECIAL_REGS,\n+  GEN_OR_FLOAT_REGS,\n   LINK_REGS,\n   CTR_REGS,\n   LINK_OR_CTR_REGS,\n@@ -1167,7 +1167,7 @@ enum reg_class\n   \"VRSAVE_REGS\",\t\t\t\t\t\t\t\\\n   \"VSCR_REGS\",\t\t\t\t\t\t\t\t\\\n   \"SPR_REGS\",\t\t\t\t\t\t\t\t\\\n-  \"NON_SPECIAL_REGS\",\t\t\t\t\t\t\t\\\n+  \"GEN_OR_FLOAT_REGS\",\t\t\t\t\t\t\t\\\n   \"LINK_REGS\",\t\t\t\t\t\t\t\t\\\n   \"CTR_REGS\",\t\t\t\t\t\t\t\t\\\n   \"LINK_OR_CTR_REGS\",\t\t\t\t\t\t\t\\\n@@ -1204,7 +1204,7 @@ enum reg_class\n   { 0x00000000, 0x00000000, 0x00000000, 0x00004000 },\t\t\t\\\n   /* SPR_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00000000, 0x00010000 },\t\t\t\\\n-  /* NON_SPECIAL_REGS.  */\t\t\t\t\t\t\\\n+  /* GEN_OR_FLOAT_REGS.  */\t\t\t\t\t\t\\\n   { 0xffffffff, 0xffffffff, 0x00000008, 0x00008000 },\t\t\t\\\n   /* LINK_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00000002, 0x00000000 },\t\t\t\\"}]}