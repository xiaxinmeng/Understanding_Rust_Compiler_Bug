{"sha": "79943d19dc27298a384fce25c604fe6191e0765f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk5NDNkMTlkYzI3Mjk4YTM4NGZjZTI1YzYwNGZlNjE5MWUwNzY1Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-06-15T12:15:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-06-15T12:15:26Z"}, "message": "re PR fortran/44536 (OMP: missing error with default(none))\n\n\tPR fortran/44536\n\t* langhooks.h (struct lang_hooks_for_decls): Add omp_report_decl.\n\t* langhooks-def.h (LANG_HOOKS_OMP_REPORT_DECL): Define.\n\t(LANG_HOOKS_DECLS): Add it.\n\t* gimplify.c (omp_notice_variable): Call\n\tlang_hooks.decls.omp_report_decl.\n\n\t* trans-openmp.c (gfc_omp_predetermined_sharing): Don't return\n\tOMP_CLAUSE_DEFAULT_SHARED for artificial vars with\n\tGFC_DECL_SAVED_DESCRIPTOR set.\n\t(gfc_omp_report_decl): New function.\n\t* trans.h (gfc_omp_report_decl): New prototype.\n\t* f95-lang.c (LANG_HOOKS_OMP_REPORT_DECL): Redefine.\n\n\t* gfortran.dg/gomp/pr44536.f90: New test.\n\t* gfortran.dg/gomp/sharing-3.f90: Remove xfail.\n\nFrom-SVN: r160779", "tree": {"sha": "160e18b4ba214f50eed4f22ee4c8e9a0dff923af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/160e18b4ba214f50eed4f22ee4c8e9a0dff923af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79943d19dc27298a384fce25c604fe6191e0765f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79943d19dc27298a384fce25c604fe6191e0765f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79943d19dc27298a384fce25c604fe6191e0765f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79943d19dc27298a384fce25c604fe6191e0765f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eed5f58ad65fc65af6d50e263a632537c9478b26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eed5f58ad65fc65af6d50e263a632537c9478b26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eed5f58ad65fc65af6d50e263a632537c9478b26"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "18a987c1149a503056beaa8f03c3341b78477de6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -1,3 +1,12 @@\n+2010-06-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/44536\n+\t* langhooks.h (struct lang_hooks_for_decls): Add omp_report_decl.\n+\t* langhooks-def.h (LANG_HOOKS_OMP_REPORT_DECL): Define.\n+\t(LANG_HOOKS_DECLS): Add it.\n+\t* gimplify.c (omp_notice_variable): Call\n+\tlang_hooks.decls.omp_report_decl.\n+\n 2010-06-15  Martin Jambor  <mjambor@suse.cz>\n \n \tPR lto/44464"}, {"sha": "39cab7a17c4c3a6c06dceea8a9fd77bcb123927d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -1,3 +1,13 @@\n+2010-06-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/44536\n+\t* trans-openmp.c (gfc_omp_predetermined_sharing): Don't return\n+\tOMP_CLAUSE_DEFAULT_SHARED for artificial vars with\n+\tGFC_DECL_SAVED_DESCRIPTOR set.\n+\t(gfc_omp_report_decl): New function.\n+\t* trans.h (gfc_omp_report_decl): New prototype.\n+\t* f95-lang.c (LANG_HOOKS_OMP_REPORT_DECL): Redefine.\n+\n 2010-06-13  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/31588"}, {"sha": "c6af0026ba85f72a40bd8c43d89da4c6306a44a1", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -111,6 +111,7 @@ static void gfc_init_ts (void);\n #undef LANG_HOOKS_INIT_TS\n #undef LANG_HOOKS_OMP_PRIVATIZE_BY_REFERENCE\n #undef LANG_HOOKS_OMP_PREDETERMINED_SHARING\n+#undef LANG_HOOKS_OMP_REPORT_DECL\n #undef LANG_HOOKS_OMP_CLAUSE_DEFAULT_CTOR\n #undef LANG_HOOKS_OMP_CLAUSE_COPY_CTOR\n #undef LANG_HOOKS_OMP_CLAUSE_ASSIGN_OP\n@@ -137,6 +138,7 @@ static void gfc_init_ts (void);\n #define LANG_HOOKS_INIT_TS\t\tgfc_init_ts\n #define LANG_HOOKS_OMP_PRIVATIZE_BY_REFERENCE\tgfc_omp_privatize_by_reference\n #define LANG_HOOKS_OMP_PREDETERMINED_SHARING\tgfc_omp_predetermined_sharing\n+#define LANG_HOOKS_OMP_REPORT_DECL\t\tgfc_omp_report_decl\n #define LANG_HOOKS_OMP_CLAUSE_DEFAULT_CTOR\tgfc_omp_clause_default_ctor\n #define LANG_HOOKS_OMP_CLAUSE_COPY_CTOR\t\tgfc_omp_clause_copy_ctor\n #define LANG_HOOKS_OMP_CLAUSE_ASSIGN_OP\t\tgfc_omp_clause_assign_op"}, {"sha": "1be4b81c8e832966bf52a34e307456491b78bed3", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -75,7 +75,10 @@ gfc_omp_privatize_by_reference (const_tree decl)\n enum omp_clause_default_kind\n gfc_omp_predetermined_sharing (tree decl)\n {\n-  if (DECL_ARTIFICIAL (decl) && ! GFC_DECL_RESULT (decl))\n+  if (DECL_ARTIFICIAL (decl)\n+      && ! GFC_DECL_RESULT (decl)\n+      && ! (DECL_LANG_SPECIFIC (decl)\n+\t    && GFC_DECL_SAVED_DESCRIPTOR (decl)))\n     return OMP_CLAUSE_DEFAULT_SHARED;\n \n   /* Cray pointees shouldn't be listed in any clauses and should be\n@@ -118,6 +121,19 @@ gfc_omp_predetermined_sharing (tree decl)\n   return OMP_CLAUSE_DEFAULT_UNSPECIFIED;\n }\n \n+/* Return decl that should be used when reporting DEFAULT(NONE)\n+   diagnostics.  */\n+\n+tree\n+gfc_omp_report_decl (tree decl)\n+{\n+  if (DECL_ARTIFICIAL (decl)\n+      && DECL_LANG_SPECIFIC (decl)\n+      && GFC_DECL_SAVED_DESCRIPTOR (decl))\n+    return GFC_DECL_SAVED_DESCRIPTOR (decl);\n+\n+  return decl;\n+}\n \n /* Return true if DECL in private clause needs\n    OMP_CLAUSE_PRIVATE_OUTER_REF on the private clause.  */"}, {"sha": "946ce2eba729dd615e70bc629e75be12157dca9d", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -523,6 +523,7 @@ bool gfc_get_array_descr_info (const_tree, struct array_descr_info *);\n /* In trans-openmp.c */\n bool gfc_omp_privatize_by_reference (const_tree);\n enum omp_clause_default_kind gfc_omp_predetermined_sharing (tree);\n+tree gfc_omp_report_decl (tree);\n tree gfc_omp_clause_default_ctor (tree, tree, tree);\n tree gfc_omp_clause_copy_ctor (tree, tree, tree);\n tree gfc_omp_clause_assign_op (tree, tree, tree);"}, {"sha": "9d2cf8634dcd37f43f2efa0de6a0466293bdf3c8", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -5586,7 +5586,7 @@ omp_notice_variable (struct gimplify_omp_ctx *ctx, tree decl, bool in_code)\n \t{\n \tcase OMP_CLAUSE_DEFAULT_NONE:\n \t  error (\"%qE not specified in enclosing parallel\",\n-\t\t DECL_NAME (decl));\n+\t\t DECL_NAME (lang_hooks.decls.omp_report_decl (decl)));\n \t  if ((ctx->region_type & ORT_TASK) != 0)\n \t    error_at (ctx->location, \"enclosing task\");\n \t  else"}, {"sha": "92755e24880b8992e1556d88533b0c00dacdb125", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -202,6 +202,7 @@ extern tree lhd_make_node (enum tree_code);\n #define LANG_HOOKS_DECL_OK_FOR_SIBCALL\tlhd_decl_ok_for_sibcall\n #define LANG_HOOKS_OMP_PRIVATIZE_BY_REFERENCE hook_bool_const_tree_false\n #define LANG_HOOKS_OMP_PREDETERMINED_SHARING lhd_omp_predetermined_sharing\n+#define LANG_HOOKS_OMP_REPORT_DECL lhd_pass_through_t\n #define LANG_HOOKS_OMP_DISREGARD_VALUE_EXPR hook_bool_tree_bool_false\n #define LANG_HOOKS_OMP_PRIVATE_DEBUG_CLAUSE hook_bool_tree_bool_false\n #define LANG_HOOKS_OMP_PRIVATE_OUTER_REF hook_bool_tree_false\n@@ -224,6 +225,7 @@ extern tree lhd_make_node (enum tree_code);\n   LANG_HOOKS_DECL_OK_FOR_SIBCALL, \\\n   LANG_HOOKS_OMP_PRIVATIZE_BY_REFERENCE, \\\n   LANG_HOOKS_OMP_PREDETERMINED_SHARING, \\\n+  LANG_HOOKS_OMP_REPORT_DECL, \\\n   LANG_HOOKS_OMP_DISREGARD_VALUE_EXPR, \\\n   LANG_HOOKS_OMP_PRIVATE_DEBUG_CLAUSE, \\\n   LANG_HOOKS_OMP_PRIVATE_OUTER_REF, \\"}, {"sha": "535529a08f01dc86651f9b465c40e7693c257397", "filename": "gcc/langhooks.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -195,6 +195,10 @@ struct lang_hooks_for_decls\n      predetermined, OMP_CLAUSE_DEFAULT_UNSPECIFIED otherwise.  */\n   enum omp_clause_default_kind (*omp_predetermined_sharing) (tree);\n \n+  /* Return decl that should be reported for DEFAULT(NONE) failure\n+     diagnostics.  Usually the DECL passed in.  */\n+  tree (*omp_report_decl) (tree);\n+\n   /* Return true if DECL's DECL_VALUE_EXPR (if any) should be\n      disregarded in OpenMP construct, because it is going to be\n      remapped during OpenMP lowering.  SHARED is true if DECL"}, {"sha": "6b4528c097ae575120a2e89eef747489d63be480", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -1,3 +1,9 @@\n+2010-06-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/44536\n+\t* gfortran.dg/gomp/pr44536.f90: New test.\n+\t* gfortran.dg/gomp/sharing-3.f90: Remove xfail.\n+\n 2010-06-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/44534"}, {"sha": "0dc896dccea2fb346f0ed51646e3b44851f035eb", "filename": "gcc/testsuite/gfortran.dg/gomp/pr44536.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44536.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44536.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44536.f90?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -0,0 +1,10 @@\n+! PR fortran/44536\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+      subroutine foo (a, i, j)\n+        integer, dimension(:) :: a\n+        integer :: i, j\n+!$omp parallel default(none) shared(i, j)\t! { dg-error \"enclosing parallel\" }\n+        j=a(i)\t\t\t\t\t! { dg-error \"not specified in\" }\n+!$omp end parallel\n+      end subroutine"}, {"sha": "05be38283a9388a606dd9ab2e4637c17e61df955", "filename": "gcc/testsuite/gfortran.dg/gomp/sharing-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fsharing-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79943d19dc27298a384fce25c604fe6191e0765f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fsharing-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fsharing-3.f90?ref=79943d19dc27298a384fce25c604fe6191e0765f", "patch": "@@ -29,7 +29,7 @@ subroutine foo (vara, varb, varc, vard, n)\n     !$omp master\n       vara(1) = 1\t\t! { dg-error \"not specified\" }\n       varb(1) = 1\t\t! Assumed-size is predetermined\n-      varc(1) = 1\t\t! { dg-error \"not specified\" \"\" { xfail *-*-* } }\n+      varc(1) = 1\t\t! { dg-error \"not specified\" }\n       vard(1) = 1\t\t! { dg-error \"not specified\" }\n       vare(1) = 1\t\t! { dg-error \"not specified\" }\n     !$omp end master"}]}