{"sha": "884523df8d676fd03c8d5bacfd98747d7f941a99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg0NTIzZGY4ZDY3NmZkMDNjOGQ1YmFjZmQ5ODc0N2Q3Zjk0MWE5OQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2002-03-11T11:15:10Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-03-11T11:15:10Z"}, "message": "parse.y (patch_assignment): Wrap the right-hand-side with a save_expr to prevent it getting evaluated twice...\n\n\t* parse.y (patch_assignment): Wrap the right-hand-side with a save_expr\n\tto prevent it getting evaluated twice in the store checking case.\n\t* expr.c (build_java_arraystore_check): Unwrap SAVE_EXPR's when\n\texamining OBJECT.\n\nFrom-SVN: r50570", "tree": {"sha": "34017ef406c60bf1c52ac6f7774bb916f73ccc21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34017ef406c60bf1c52ac6f7774bb916f73ccc21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/884523df8d676fd03c8d5bacfd98747d7f941a99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884523df8d676fd03c8d5bacfd98747d7f941a99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884523df8d676fd03c8d5bacfd98747d7f941a99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884523df8d676fd03c8d5bacfd98747d7f941a99/comments", "author": null, "committer": null, "parents": [{"sha": "3fcaac1d8c04d2966e667e1e4b18959bb94656c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fcaac1d8c04d2966e667e1e4b18959bb94656c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fcaac1d8c04d2966e667e1e4b18959bb94656c9"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "e9cef5a435efaa0c1b13204e8539759326b56241", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884523df8d676fd03c8d5bacfd98747d7f941a99/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884523df8d676fd03c8d5bacfd98747d7f941a99/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=884523df8d676fd03c8d5bacfd98747d7f941a99", "patch": "@@ -1,3 +1,10 @@\n+2002-03-11  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* parse.y (patch_assignment): Wrap the right-hand-side with a save_expr\n+\tto prevent it getting evaluated twice in the store checking case.\n+\t* expr.c (build_java_arraystore_check): Unwrap SAVE_EXPR's when\n+\texamining OBJECT.\n+\n 2002-03-09  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* decl.c (java_init_decl_processing): Make sure class_type_node"}, {"sha": "fa2935f310795dad9f79e2e6d23714fa14e10cd7", "filename": "gcc/java/expr.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884523df8d676fd03c8d5bacfd98747d7f941a99/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884523df8d676fd03c8d5bacfd98747d7f941a99/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=884523df8d676fd03c8d5bacfd98747d7f941a99", "patch": "@@ -811,7 +811,7 @@ build_java_arraystore_check (array, object)\n    tree array; \n    tree object;\n {\n-  tree check, element_type;\n+  tree check, element_type, source;\n   tree array_type_p = TREE_TYPE (array);\n   tree object_type = TYPE_NAME (TREE_TYPE (TREE_TYPE (object)));\n \n@@ -837,11 +837,17 @@ build_java_arraystore_check (array, object)\n \t  || CLASS_FINAL (element_type)))\n     return build1 (NOP_EXPR, array_type_p, array);\n   \n+  /* OBJECT might be wrapped by a SAVE_EXPR. */\n+  if (TREE_CODE (object) == SAVE_EXPR)\n+    source = TREE_OPERAND (object, 0);\n+  else\n+    source = object;\n+  \n   /* Avoid the check if OBJECT was just loaded from the same array. */\n-  if (TREE_CODE (object) == ARRAY_REF)\n+  if (TREE_CODE (source) == ARRAY_REF)\n     {\n       tree target;\n-      tree source = TREE_OPERAND (object, 0); /* COMPONENT_REF. */\n+      source = TREE_OPERAND (source, 0); /* COMPONENT_REF. */\n       source = TREE_OPERAND (source, 0); /* INDIRECT_REF. */\n       source = TREE_OPERAND (source, 0); /* Source array's DECL or SAVE_EXPR. */\n       if (TREE_CODE (source) == SAVE_EXPR)"}, {"sha": "925cb74291ebfae4ecd4c10b852c75765b9e9bcf", "filename": "gcc/java/parse.y", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884523df8d676fd03c8d5bacfd98747d7f941a99/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884523df8d676fd03c8d5bacfd98747d7f941a99/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=884523df8d676fd03c8d5bacfd98747d7f941a99", "patch": "@@ -12715,6 +12715,9 @@ patch_assignment (node, wfl_op1)\n       && JREFERENCE_TYPE_P (TYPE_ARRAY_ELEMENT (lhs_type)))\n     {\n       tree array, store_check, base, index_expr;\n+      \n+      /* Save RHS so that it doesn't get re-evaluated by the store check. */ \n+      new_rhs = save_expr (new_rhs);\n \n       /* Get the INDIRECT_REF. */\n       array = TREE_OPERAND (TREE_OPERAND (lvalue, 0), 0);"}]}