{"sha": "52108814f54cf767e7e69f58d8cf3a86d167eeca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIxMDg4MTRmNTRjZjc2N2U3ZTY5ZjU4ZDhjZjNhODZkMTY3ZWVjYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-12T13:30:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-12T13:30:56Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r244357", "tree": {"sha": "bd5eac6157fc836782d879a18a4490636a61540d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd5eac6157fc836782d879a18a4490636a61540d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52108814f54cf767e7e69f58d8cf3a86d167eeca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52108814f54cf767e7e69f58d8cf3a86d167eeca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52108814f54cf767e7e69f58d8cf3a86d167eeca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52108814f54cf767e7e69f58d8cf3a86d167eeca/comments", "author": null, "committer": null, "parents": [{"sha": "5f325af2606476be7ef1db50b1a46ab842901bb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f325af2606476be7ef1db50b1a46ab842901bb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f325af2606476be7ef1db50b1a46ab842901bb9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a735393f8163a7761883dabd9911efa297f05fb9", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52108814f54cf767e7e69f58d8cf3a86d167eeca/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52108814f54cf767e7e69f58d8cf3a86d167eeca/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=52108814f54cf767e7e69f58d8cf3a86d167eeca", "patch": "@@ -304,7 +304,7 @@ package body Sem_Elab is\n     (Call : Node_Id;\n      Subp : Entity_Id;\n      Scop : Entity_Id);\n-   --  The current unit U may depend semantically on some unit P which is not\n+   --  The current unit U may depend semantically on some unit P that is not\n    --  in the current context. If there is an elaboration call that reaches P,\n    --  we need to indicate that P requires an Elaborate_All, but this is not\n    --  effective in U's ali file, if there is no with_clause for P. In this\n@@ -926,7 +926,7 @@ package body Sem_Elab is\n \n       --  If the call is in an instance, and the called entity is not\n       --  defined in the same instance, then the elaboration issue focuses\n-      --  around the unit containing the template, it is this unit which\n+      --  around the unit containing the template, it is this unit that\n       --  requires an Elaborate_All.\n \n       --  However, if we are doing dynamic elaboration, we need to chase the\n@@ -974,7 +974,7 @@ package body Sem_Elab is\n       --  For the case where N is not an instance, and is not a call within\n       --  instance to other than a generic formal, we recompute E_Scope\n       --  for the error message, since we do NOT want to go to the unit\n-      --  which has the ultimate declaration in the case of renaming and\n+      --  that has the ultimate declaration in the case of renaming and\n       --  derivation and we also want to go to the generic unit in the\n       --  case of an instance, and no further.\n \n@@ -1191,7 +1191,7 @@ package body Sem_Elab is\n             null;\n \n          --  Do not generate an Elaborate_All for finalization routines\n-         --  which perform partial clean up as part of initialization.\n+         --  that perform partial clean up as part of initialization.\n \n          elsif In_Init_Proc and then Is_Finalization_Procedure (Ent) then\n             null;\n@@ -1396,7 +1396,7 @@ package body Sem_Elab is\n          return;\n       end if;\n \n-      --  Here we have a reference at elaboration time which must be checked\n+      --  Here we have a reference at elaboration time that must be checked\n \n       if Debug_Flag_LL then\n          Write_Str (\"  Check_Elab_Ref: \");\n@@ -2696,7 +2696,7 @@ package body Sem_Elab is\n       procedure Collect_Tasks (Decls : List_Id);\n       --  Collect the types of the tasks that are to be activated in the given\n       --  list of declarations, in order to perform elaboration checks on the\n-      --  corresponding task procedures which are called implicitly here.\n+      --  corresponding task procedures that are called implicitly here.\n \n       function Outer_Unit (E : Entity_Id) return Entity_Id;\n       --  find enclosing compilation unit of Entity, ignoring subunits, or"}]}