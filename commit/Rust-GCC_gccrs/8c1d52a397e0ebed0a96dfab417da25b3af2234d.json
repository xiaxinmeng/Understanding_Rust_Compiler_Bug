{"sha": "8c1d52a397e0ebed0a96dfab417da25b3af2234d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMxZDUyYTM5N2UwZWJlZDBhOTZkZmFiNDE3ZGEyNWIzYWYyMjM0ZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-05-25T19:47:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-05-25T19:47:11Z"}, "message": "* combine.c (simplify_set): Remove an unnecessary subreg.\n\nFrom-SVN: r53873", "tree": {"sha": "bbe22fe8bced34436020445211c14da426966409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbe22fe8bced34436020445211c14da426966409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c1d52a397e0ebed0a96dfab417da25b3af2234d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c1d52a397e0ebed0a96dfab417da25b3af2234d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c1d52a397e0ebed0a96dfab417da25b3af2234d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c1d52a397e0ebed0a96dfab417da25b3af2234d/comments", "author": null, "committer": null, "parents": [{"sha": "b47cae3dee210a9b985e18e2b6211ea8ce9c5d88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "001ff8a98f7a17a1385f996d6feeb6a417711251", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c1d52a397e0ebed0a96dfab417da25b3af2234d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c1d52a397e0ebed0a96dfab417da25b3af2234d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c1d52a397e0ebed0a96dfab417da25b3af2234d", "patch": "@@ -1,3 +1,7 @@\n+2002-05-25  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* combine.c (simplify_set): Remove an unnecessary subreg.\n+\n 2002-05-25  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n \n \t* config/avr/avr.c (avr_handle_progmem_attribute): Handle TYPE_DECL."}, {"sha": "e1581da1b55bfdfd01729c3210b65c4f7938684f", "filename": "gcc/combine.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c1d52a397e0ebed0a96dfab417da25b3af2234d/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c1d52a397e0ebed0a96dfab417da25b3af2234d/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=8c1d52a397e0ebed0a96dfab417da25b3af2234d", "patch": "@@ -5160,6 +5160,30 @@ simplify_set (x)\n       src = SET_SRC (x), dest = SET_DEST (x);\n     }\n \n+#ifdef HAVE_cc0\n+  /* If we have (set (cc0) (subreg ...)), we try to remove the subreg\n+     in SRC.  */\n+  if (dest == cc0_rtx\n+      && GET_CODE (src) == SUBREG\n+      && subreg_lowpart_p (src)\n+      && (GET_MODE_BITSIZE (GET_MODE (src))\n+\t  < GET_MODE_BITSIZE (GET_MODE (SUBREG_REG (src)))))\n+    {\n+      rtx inner = SUBREG_REG (src);\n+      enum machine_mode inner_mode = GET_MODE (inner);\n+\n+      /* Here we make sure that we don't have a sign bit on.  */\n+      if (GET_MODE_BITSIZE (inner_mode) <= HOST_BITS_PER_WIDE_INT\n+\t  && (nonzero_bits (inner, inner_mode)\n+\t      < ((unsigned HOST_WIDE_INT) 1\n+\t\t << (GET_MODE_BITSIZE (inner_mode) - 1))))\n+\t{\n+\t  SUBST (SET_SRC (x), inner);\n+\t  src = SET_SRC (x);\n+\t}\n+    }\n+#endif\n+\n #ifdef LOAD_EXTEND_OP\n   /* If we have (set FOO (subreg:M (mem:N BAR) 0)) with M wider than N, this\n      would require a paradoxical subreg.  Replace the subreg with a"}]}