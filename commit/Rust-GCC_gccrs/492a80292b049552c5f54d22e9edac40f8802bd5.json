{"sha": "492a80292b049552c5f54d22e9edac40f8802bd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkyYTgwMjkyYjA0OTU1MmM1ZjU0ZDIyZTllZGFjNDBmODgwMmJkNQ==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2013-05-08T18:33:52Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2013-05-08T18:33:52Z"}, "message": "cygming-crtbegin.c (__register_frame_info): Make weak.\n\n\t* config/i386/cygming-crtbegin.c (__register_frame_info): Make weak.\n\t(__deregister_frame_info): Likewise.\n\nFrom-SVN: r198719", "tree": {"sha": "fc68494313c0c9070db620e20ca6896315464e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc68494313c0c9070db620e20ca6896315464e59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/492a80292b049552c5f54d22e9edac40f8802bd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/492a80292b049552c5f54d22e9edac40f8802bd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/492a80292b049552c5f54d22e9edac40f8802bd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/492a80292b049552c5f54d22e9edac40f8802bd5/comments", "author": null, "committer": null, "parents": [{"sha": "0b013847f8eb2bf2b6a32fc08f489110cf1353f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b013847f8eb2bf2b6a32fc08f489110cf1353f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b013847f8eb2bf2b6a32fc08f489110cf1353f8"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "a04c4ffb37d073594c08920bd8252c289372aee7", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/492a80292b049552c5f54d22e9edac40f8802bd5/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/492a80292b049552c5f54d22e9edac40f8802bd5/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=492a80292b049552c5f54d22e9edac40f8802bd5", "patch": "@@ -1,3 +1,8 @@\n+2013-05-08  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* config/i386/cygming-crtbegin.c (__register_frame_info): Make weak.\n+\t(__deregister_frame_info): Likewise.\n+\n 2013-05-06  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* fp-bit.c (unpack_d, pack_d): Properly preserve and restore a"}, {"sha": "c34178787c85aa1b980c25beb455d5e9c41d4614", "filename": "libgcc/config/i386/cygming-crtbegin.c", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/492a80292b049552c5f54d22e9edac40f8802bd5/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/492a80292b049552c5f54d22e9edac40f8802bd5/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c?ref=492a80292b049552c5f54d22e9edac40f8802bd5", "patch": "@@ -46,14 +46,36 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define LIBGCJ_SONAME \"libgcj_s.dll\"\n #endif\n \n-\n+#if DWARF2_UNWIND_INFO\n /* Make the declarations weak.  This is critical for\n    _Jv_RegisterClasses because it lives in libgcj.a  */\n-extern void __register_frame_info (const void *, struct object *)\n+extern void __register_frame_info (__attribute__((unused)) const void *,\n+\t\t\t\t   __attribute__((unused)) struct object *)\n \t\t\t\t   TARGET_ATTRIBUTE_WEAK;\n-extern void *__deregister_frame_info (const void *)\n+extern void *__deregister_frame_info (__attribute__((unused)) const void *)\n \t\t\t\t      TARGET_ATTRIBUTE_WEAK;\n-extern void _Jv_RegisterClasses (const void *) TARGET_ATTRIBUTE_WEAK;\n+TARGET_ATTRIBUTE_WEAK void\n+__register_frame_info (__attribute__((unused)) const void *p,\n+\t\t       __attribute__((unused)) struct object *o)\n+{\n+}\n+\n+TARGET_ATTRIBUTE_WEAK void *\n+__deregister_frame_info (__attribute__((unused)) const void *p)\n+{\n+  return (void*) 0;\n+}\n+#endif /* DWARF2_UNWIND_INFO */\n+\n+#if TARGET_USE_JCR_SECTION\n+extern void _Jv_RegisterClasses (__attribute__((unused)) const void *)\n+  TARGET_ATTRIBUTE_WEAK;\n+\n+TARGET_ATTRIBUTE_WEAK void\n+_Jv_RegisterClasses (__attribute__((unused)) const void *p)\n+{\n+}\n+#endif /* TARGET_USE_JCR_SECTION */\n \n #if defined(HAVE_LD_RO_RW_SECTION_MIXING)\n # define EH_FRAME_SECTION_CONST const"}]}