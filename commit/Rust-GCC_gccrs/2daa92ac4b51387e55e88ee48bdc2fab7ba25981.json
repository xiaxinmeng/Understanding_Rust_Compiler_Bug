{"sha": "2daa92ac4b51387e55e88ee48bdc2fab7ba25981", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRhYTkyYWM0YjUxMzg3ZTU1ZTg4ZWU0OGJkYzJmYWI3YmEyNTk4MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-07T17:04:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-07T17:04:31Z"}, "message": "aarch64: Fix {ash[lr],lshr}<mode>3 expanders [PR94488]\n\nThe following testcase ICEs on aarch64 apparently since the introduction of\nthe aarch64 port.  The reason is that the {ashl,ashr,lshr}<mode>3 expanders\ncompletely unnecessarily FAIL; if operands[2] is something other than\na CONST_INT or REG or MEM and the middle-end code can't cope with the\npattern giving up in these cases.  All the expanders use general_operand\npredicate for the shift amount operand, but then have just a special case\nfor CONST_INT (if in-bound, emit an immediate shift, otherwise force into\nREG), or MEM (force into REG), or REG (that is the case it handles).\nIn the testcase, operands[2] is a lowpart SUBREG of a REG, which is valid\ngeneral_operand.\nI don't see any reason what is magic about MEMs that it should be forced\ninto REG and others like SUBREGs that it shouldn't, there isn't even a\nreason to check for !REG_P because force_reg will do nothing if the operand\nis already a REG, and otherwise can handle general_operand just fine.\n\n2020-04-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94488\n\t* config/aarch64/aarch64-simd.md (ashl<mode>3, lshr<mode>3,\n\tashr<mode>3): Force operands[2] into reg whenever it is not CONST_INT.\n\tAssume it is a REG after that instead of testing it and doing FAIL\n\totherwise.  Formatting fix.\n\n\t* gcc.c-torture/compile/pr94488.c: New test.", "tree": {"sha": "2d39efe48687dbe3c24a445dad2218722f992af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d39efe48687dbe3c24a445dad2218722f992af9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2daa92ac4b51387e55e88ee48bdc2fab7ba25981", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2daa92ac4b51387e55e88ee48bdc2fab7ba25981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2daa92ac4b51387e55e88ee48bdc2fab7ba25981", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2daa92ac4b51387e55e88ee48bdc2fab7ba25981/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c104e8f1b67a75ea82c62f1fd2aac69c09127562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c104e8f1b67a75ea82c62f1fd2aac69c09127562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c104e8f1b67a75ea82c62f1fd2aac69c09127562"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "8c5e197591b38782148a3cc96f26f2edf3797b68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2daa92ac4b51387e55e88ee48bdc2fab7ba25981/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2daa92ac4b51387e55e88ee48bdc2fab7ba25981/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2daa92ac4b51387e55e88ee48bdc2fab7ba25981", "patch": "@@ -58,6 +58,12 @@\n \t* config/i386/i386-expand.c (expand_vec_perm_pshufb): Fix the check\n \tfor inter-lane permutation for 64-byte modes.\n \n+\tPR target/94488\n+\t* config/aarch64/aarch64-simd.md (ashl<mode>3, lshr<mode>3,\n+\tashr<mode>3): Force operands[2] into reg whenever it is not CONST_INT.\n+\tAssume it is a REG after that instead of testing it and doing FAIL\n+\totherwise.  Formatting fix.\n+\n 2020-04-07  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* config/rs6000/t-rtems: Delete mcpu=8540 multilib."}, {"sha": "ab04cc08f430d7e583130156b502987d29dfed7e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2daa92ac4b51387e55e88ee48bdc2fab7ba25981/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2daa92ac4b51387e55e88ee48bdc2fab7ba25981/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2daa92ac4b51387e55e88ee48bdc2fab7ba25981", "patch": "@@ -54,6 +54,9 @@\n \tPR c++/94512\n \t* g++.dg/gomp/pr94512.C: New test.\n \n+\tPR target/94488\n+\t* gcc.c-torture/compile/pr94488.c: New test.\n+\n \tPR target/94500\n \t* gcc.target/i386/avx512bw-pr94500.c: New test.\n "}]}