{"sha": "8012b92326d303302b5aa912752ab99348d3b6aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAxMmI5MjMyNmQzMDMzMDJiNWFhOTEyNzUyYWI5OTM0OGQzYjZhYQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2009-06-13T16:13:22Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2009-06-13T16:13:22Z"}, "message": "Fix powerpc breakage\n\nFrom-SVN: r148456", "tree": {"sha": "915abfd8e66ce073c8b97b183024cf767d50e889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/915abfd8e66ce073c8b97b183024cf767d50e889"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8012b92326d303302b5aa912752ab99348d3b6aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8012b92326d303302b5aa912752ab99348d3b6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8012b92326d303302b5aa912752ab99348d3b6aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8012b92326d303302b5aa912752ab99348d3b6aa/comments", "author": null, "committer": null, "parents": [{"sha": "4c4bde292d83d0aeaf77084968fb3de21647db89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c4bde292d83d0aeaf77084968fb3de21647db89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c4bde292d83d0aeaf77084968fb3de21647db89"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "27398ce315578f25bf5af6f597fd41e9e63a7ed2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8012b92326d303302b5aa912752ab99348d3b6aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8012b92326d303302b5aa912752ab99348d3b6aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8012b92326d303302b5aa912752ab99348d3b6aa", "patch": "@@ -1,3 +1,8 @@\n+2009-06-13  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):\n+\tAdd location argument.\n+\n 2009-06-13  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_build_builtin_va_list): Pass location to"}, {"sha": "cd5c4708a3a3d1641f9eabdc45f42e4da78c3c60", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8012b92326d303302b5aa912752ab99348d3b6aa/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8012b92326d303302b5aa912752ab99348d3b6aa/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=8012b92326d303302b5aa912752ab99348d3b6aa", "patch": "@@ -3001,8 +3001,10 @@ altivec_build_resolved_builtin (tree *args, int n,\n    support Altivec's overloaded builtins.  */\n \n tree\n-altivec_resolve_overloaded_builtin (tree fndecl, void *passed_arglist)\n+altivec_resolve_overloaded_builtin (unsigned int loc, tree fndecl,\n+\t\t\t\t    void *passed_arglist)\n {\n+  location_t input_location = (location_t) loc;\n   VEC(tree,gc) *arglist = (VEC(tree,gc) *) passed_arglist;\n   unsigned int nargs = VEC_length (tree, arglist);\n   unsigned int fcode = DECL_FUNCTION_CODE (fndecl);"}, {"sha": "0c5dad67339e69c2f868f9f019e3aa1d1b78fc62", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8012b92326d303302b5aa912752ab99348d3b6aa/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8012b92326d303302b5aa912752ab99348d3b6aa/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=8012b92326d303302b5aa912752ab99348d3b6aa", "patch": "@@ -132,7 +132,7 @@ extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t  tree, int, int);\n extern int function_arg_boundary (enum machine_mode, tree);\n extern rtx function_arg (CUMULATIVE_ARGS *, enum machine_mode, tree, int);\n-extern tree altivec_resolve_overloaded_builtin (tree, void *);\n+extern tree altivec_resolve_overloaded_builtin (unsigned int, tree, void *);\n extern rtx rs6000_function_value (const_tree, const_tree);\n extern rtx rs6000_libcall_value (enum machine_mode);\n extern rtx rs6000_va_arg (tree, tree);"}]}