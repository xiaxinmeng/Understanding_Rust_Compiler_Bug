{"sha": "89c06d50074bd18abdceb0c88e866b8a79884f7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODljMDZkNTAwNzRiZDE4YWJkY2ViMGM4OGU4NjZiOGE3OTg4NGY3YQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-09-10T18:13:17Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-09-10T18:13:17Z"}, "message": "Makefile.am (stamp-target): Remove link to self.\n\n\n2001-09-10  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/Makefile.am (stamp-target): Remove link to self.\n\t* inclulde/Makefile.in: Regenerate.\n\nFrom-SVN: r45514", "tree": {"sha": "694d2fb1d325586c219a210f9721da86cbc212ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/694d2fb1d325586c219a210f9721da86cbc212ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89c06d50074bd18abdceb0c88e866b8a79884f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c06d50074bd18abdceb0c88e866b8a79884f7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89c06d50074bd18abdceb0c88e866b8a79884f7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c06d50074bd18abdceb0c88e866b8a79884f7a/comments", "author": null, "committer": null, "parents": [{"sha": "244a4af0453aa14bf60ae753edf6f88992d8c5e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/244a4af0453aa14bf60ae753edf6f88992d8c5e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/244a4af0453aa14bf60ae753edf6f88992d8c5e0"}], "stats": {"total": 410, "additions": 47, "deletions": 363}, "files": [{"sha": "138a1c5c5d3f1a0fd03f270466db172115085e64", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -1,3 +1,8 @@\n+2001-09-10  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/Makefile.am (stamp-target): Remove link to self.\n+\t* inclulde/Makefile.in: Regenerate.\n+\t\n 2001-09-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tImplement std::money_put."}, {"sha": "9bb3ceea4c60c5315c0fab2faada50ece71de540", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -172,44 +172,7 @@ MULTICLEAN = true\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS = \\\n-\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n-\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n-\t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n-\t\"CFLAGS=$(CFLAGS)\" \\\n-\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n-\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n-\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n-\t\"INSTALL=$(INSTALL)\" \\\n-\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n-\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n-\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n-\t\"LDFLAGS=$(LDFLAGS)\" \\\n-\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n-\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\"MAKE=$(MAKE)\" \\\n-\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n-\t\"SHELL=$(SHELL)\" \\\n-\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n-\t\"exec_prefix=$(exec_prefix)\" \\\n-\t\"infodir=$(infodir)\" \\\n-\t\"libdir=$(libdir)\" \\\n-\t\"includedir=$(includedir)\" \\\n-\t\"prefix=$(prefix)\" \\\n-\t\"tooldir=$(tooldir)\" \\\n-\t\"AR=$(AR)\" \\\n-\t\"AS=$(AS)\" \\\n-\t\"LD=$(LD)\" \\\n-\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"RANLIB=$(RANLIB)\" \\\n-\t\"NM=$(NM)\" \\\n-\t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \\\n-\t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n-\t\"DESTDIR=$(DESTDIR)\" \\\n-\t\"WERROR=$(WERROR)\" \n+AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\" \n \n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n CONFIG_HEADER = config.h"}, {"sha": "e63685482f63ad1c32a690fd23c2fee72c302877", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -21,7 +21,7 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.8 2001/08/28 06:19:33 bkoz Exp $\n+## $Id: Makefile.am,v 1.9 2001/08/29 00:32:49 ljrittle Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n@@ -332,7 +332,7 @@ stamp-${target_alias}:\n stamp-target: ${target_headers} ${target_builddir}\n \t@cd ${target_builddir} ;\\\n \tif [ ! -f stamp-target ]; then \\\n-\t  @LN_S@ $? . ;\\\n+\t  @LN_S@ ${target_headers} . ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@BASIC_FILE_H@ basic_file_model.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CSTDIO_H@ c++io.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CLOCALE_H@ c++locale.h ;\\"}, {"sha": "c107e9ea6484b58fee4f0307f4d437a148757499", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 9, "deletions": 222, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -158,255 +158,42 @@ glibcpp_builddir = @glibcpp_builddir@\n \n bits_srcdir = ${glibcpp_srcdir}/include/bits\n bits_builddir = ./bits\n-bits_headers = \\\n-\t${bits_srcdir}/basic_file.h \\\n-\t${bits_srcdir}/basic_ios.h \\\n-\t${bits_srcdir}/basic_ios.tcc \\\n-\t${bits_srcdir}/basic_string.h \\\n-\t${bits_srcdir}/basic_string.tcc \\\n-\t${bits_srcdir}/boost_concept_check.h \\\n-\t${bits_srcdir}/char_traits.h \\\n-\t${bits_srcdir}/codecvt.h \\\n-\t${bits_srcdir}/concept_check.h \\\n-\t${bits_srcdir}/cpp_type_traits.h \\\n-\t${bits_srcdir}/fpos.h \\\n-\t${bits_srcdir}/fstream.tcc \\\n-\t${bits_srcdir}/functexcept.h \\\n-\t${bits_srcdir}/generic_shadow.h \\\n-\t${bits_srcdir}/gslice.h \\\n-\t${bits_srcdir}/gslice_array.h \\\n-\t${bits_srcdir}/indirect_array.h \\\n-\t${bits_srcdir}/ios_base.h \\\n-\t${bits_srcdir}/istream.tcc \\\n-\t${bits_srcdir}/locale_facets.h \\\n-\t${bits_srcdir}/locale_facets.tcc \\\n-\t${bits_srcdir}/localefwd.h \\\n-\t${bits_srcdir}/mask_array.h \\\n-\t${bits_srcdir}/ostream.tcc \\\n-\t${bits_srcdir}/pthread_allocimpl.h \\\n-\t${bits_srcdir}/stream_iterator.h \\\n-\t${bits_srcdir}/streambuf_iterator.h \\\n-\t${bits_srcdir}/slice.h \\\n-\t${bits_srcdir}/slice_array.h \\\n-\t${bits_srcdir}/sstream.tcc \\\n-\t${bits_srcdir}/std_algorithm.h \\\n-\t${bits_srcdir}/std_bitset.h \\\n-\t${bits_srcdir}/std_complex.h \\\n-\t${bits_srcdir}/std_deque.h \\\n-\t${bits_srcdir}/std_fstream.h \\\n-\t${bits_srcdir}/std_functional.h \\\n-\t${bits_srcdir}/std_iomanip.h \\\n-\t${bits_srcdir}/std_ios.h \\\n-\t${bits_srcdir}/std_iosfwd.h \\\n-\t${bits_srcdir}/std_iostream.h \\\n-\t${bits_srcdir}/std_istream.h \\\n-\t${bits_srcdir}/std_iterator.h \\\n-\t${bits_srcdir}/std_limits.h \\\n-\t${bits_srcdir}/std_list.h \\\n-\t${bits_srcdir}/std_locale.h \\\n-\t${bits_srcdir}/std_map.h \\\n-\t${bits_srcdir}/std_memory.h \\\n-\t${bits_srcdir}/std_numeric.h \\\n-\t${bits_srcdir}/std_ostream.h \\\n-\t${bits_srcdir}/std_queue.h \\\n-\t${bits_srcdir}/std_set.h \\\n-\t${bits_srcdir}/std_sstream.h \\\n-\t${bits_srcdir}/std_stack.h \\\n-\t${bits_srcdir}/std_stdexcept.h \\\n-\t${bits_srcdir}/std_streambuf.h \\\n-\t${bits_srcdir}/std_string.h \\\n-\t${bits_srcdir}/std_utility.h \\\n-\t${bits_srcdir}/std_valarray.h \\\n-\t${bits_srcdir}/std_vector.h \\\n-\t${bits_srcdir}/stl_algo.h \\\n-\t${bits_srcdir}/stl_algobase.h \\\n-\t${bits_srcdir}/stl_alloc.h \\\n-\t${bits_srcdir}/stl_bvector.h \\\n-\t${bits_srcdir}/stl_construct.h \\\n-\t${bits_srcdir}/stl_deque.h \\\n-\t${bits_srcdir}/stl_function.h \\\n-\t${bits_srcdir}/stl_heap.h \\\n-\t${bits_srcdir}/stl_iterator.h \\\n-\t${bits_srcdir}/stl_iterator_base_funcs.h \\\n-\t${bits_srcdir}/stl_iterator_base_types.h \\\n-\t${bits_srcdir}/stl_list.h \\\n-\t${bits_srcdir}/stl_map.h \\\n-\t${bits_srcdir}/stl_multimap.h \\\n-\t${bits_srcdir}/stl_multiset.h \\\n-\t${bits_srcdir}/stl_numeric.h \\\n-\t${bits_srcdir}/stl_pair.h \\\n-\t${bits_srcdir}/stl_pthread_alloc.h \\\n-\t${bits_srcdir}/stl_queue.h \\\n-\t${bits_srcdir}/stl_raw_storage_iter.h \\\n-\t${bits_srcdir}/stl_relops.h \\\n-\t${bits_srcdir}/stl_set.h \\\n-\t${bits_srcdir}/stl_stack.h \\\n-\t${bits_srcdir}/stl_tempbuf.h \\\n-\t${bits_srcdir}/stl_threads.h \\\n-\t${bits_srcdir}/stl_tree.h \\\n-\t${bits_srcdir}/stl_uninitialized.h \\\n-\t${bits_srcdir}/stl_vector.h \\\n-\t${bits_srcdir}/streambuf.tcc \\\n-\t${bits_srcdir}/stringfwd.h \\\n-\t${bits_srcdir}/type_traits.h \\\n-\t${bits_srcdir}/valarray_array.h \\\n-\t${bits_srcdir}/valarray_array.tcc \\\n-\t${bits_srcdir}/valarray_meta.h\n+bits_headers =  \t${bits_srcdir}/basic_file.h \t${bits_srcdir}/basic_ios.h \t${bits_srcdir}/basic_ios.tcc \t${bits_srcdir}/basic_string.h \t${bits_srcdir}/basic_string.tcc \t${bits_srcdir}/boost_concept_check.h \t${bits_srcdir}/char_traits.h \t${bits_srcdir}/codecvt.h \t${bits_srcdir}/concept_check.h \t${bits_srcdir}/cpp_type_traits.h \t${bits_srcdir}/fpos.h \t${bits_srcdir}/fstream.tcc \t${bits_srcdir}/functexcept.h \t${bits_srcdir}/generic_shadow.h \t${bits_srcdir}/gslice.h \t${bits_srcdir}/gslice_array.h \t${bits_srcdir}/indirect_array.h \t${bits_srcdir}/ios_base.h \t${bits_srcdir}/istream.tcc \t${bits_srcdir}/locale_facets.h \t${bits_srcdir}/locale_facets.tcc \t${bits_srcdir}/localefwd.h \t${bits_srcdir}/mask_array.h \t${bits_srcdir}/ostream.tcc \t${bits_srcdir}/pthread_allocimpl.h \t${bits_srcdir}/stream_iterator.h \t${bits_srcdir}/streambuf_iterator.h \t${bits_srcdir}/slice.h \t${bits_srcdir}/slice_array.h \t${bits_srcdir}/sstream.tcc \t${bits_srcdir}/std_algorithm.h \t${bits_srcdir}/std_bitset.h \t${bits_srcdir}/std_complex.h \t${bits_srcdir}/std_deque.h \t${bits_srcdir}/std_fstream.h \t${bits_srcdir}/std_functional.h \t${bits_srcdir}/std_iomanip.h \t${bits_srcdir}/std_ios.h \t${bits_srcdir}/std_iosfwd.h \t${bits_srcdir}/std_iostream.h \t${bits_srcdir}/std_istream.h \t${bits_srcdir}/std_iterator.h \t${bits_srcdir}/std_limits.h \t${bits_srcdir}/std_list.h \t${bits_srcdir}/std_locale.h \t${bits_srcdir}/std_map.h \t${bits_srcdir}/std_memory.h \t${bits_srcdir}/std_numeric.h \t${bits_srcdir}/std_ostream.h \t${bits_srcdir}/std_queue.h \t${bits_srcdir}/std_set.h \t${bits_srcdir}/std_sstream.h \t${bits_srcdir}/std_stack.h \t${bits_srcdir}/std_stdexcept.h \t${bits_srcdir}/std_streambuf.h \t${bits_srcdir}/std_string.h \t${bits_srcdir}/std_utility.h \t${bits_srcdir}/std_valarray.h \t${bits_srcdir}/std_vector.h \t${bits_srcdir}/stl_algo.h \t${bits_srcdir}/stl_algobase.h \t${bits_srcdir}/stl_alloc.h \t${bits_srcdir}/stl_bvector.h \t${bits_srcdir}/stl_construct.h \t${bits_srcdir}/stl_deque.h \t${bits_srcdir}/stl_function.h \t${bits_srcdir}/stl_heap.h \t${bits_srcdir}/stl_iterator.h \t${bits_srcdir}/stl_iterator_base_funcs.h \t${bits_srcdir}/stl_iterator_base_types.h \t${bits_srcdir}/stl_list.h \t${bits_srcdir}/stl_map.h \t${bits_srcdir}/stl_multimap.h \t${bits_srcdir}/stl_multiset.h \t${bits_srcdir}/stl_numeric.h \t${bits_srcdir}/stl_pair.h \t${bits_srcdir}/stl_pthread_alloc.h \t${bits_srcdir}/stl_queue.h \t${bits_srcdir}/stl_raw_storage_iter.h \t${bits_srcdir}/stl_relops.h \t${bits_srcdir}/stl_set.h \t${bits_srcdir}/stl_stack.h \t${bits_srcdir}/stl_tempbuf.h \t${bits_srcdir}/stl_threads.h \t${bits_srcdir}/stl_tree.h \t${bits_srcdir}/stl_uninitialized.h \t${bits_srcdir}/stl_vector.h \t${bits_srcdir}/streambuf.tcc \t${bits_srcdir}/stringfwd.h \t${bits_srcdir}/type_traits.h \t${bits_srcdir}/valarray_array.h \t${bits_srcdir}/valarray_array.tcc \t${bits_srcdir}/valarray_meta.h\n \n \n backward_srcdir = ${glibcpp_srcdir}/include/backward\n backward_builddir = ./backward\n-backward_headers = \\\n-\t${backward_srcdir}/complex.h \\\n-\t${backward_srcdir}/iomanip.h \\\n-\t${backward_srcdir}/istream.h \\\n-\t${backward_srcdir}/ostream.h \\\n-\t${backward_srcdir}/stream.h \\\n-\t${backward_srcdir}/streambuf.h \\\n-\t${backward_srcdir}/algo.h \\\n-\t${backward_srcdir}/algobase.h \\\n-\t${backward_srcdir}/alloc.h \\\n-\t${backward_srcdir}/bvector.h \\\n-\t${backward_srcdir}/defalloc.h \\\n-\t${backward_srcdir}/deque.h \\\n-\t${backward_srcdir}/function.h \\\n-\t${backward_srcdir}/hash_map.h \\\n-\t${backward_srcdir}/hash_set.h \\\n-\t${backward_srcdir}/hashtable.h \\\n-\t${backward_srcdir}/heap.h \\\n-\t${backward_srcdir}/iostream.h \\\n-\t${backward_srcdir}/iterator.h \\\n-\t${backward_srcdir}/list.h \\\n-\t${backward_srcdir}/map.h \\\n-\t${backward_srcdir}/multimap.h \\\n-\t${backward_srcdir}/new.h \\\n-\t${backward_srcdir}/multiset.h \\\n-\t${backward_srcdir}/pair.h \\\n-\t${backward_srcdir}/queue.h \\\n-\t${backward_srcdir}/rope.h \\\n-\t${backward_srcdir}/set.h \\\n-\t${backward_srcdir}/slist.h \\\n-\t${backward_srcdir}/stack.h \\\n-\t${backward_srcdir}/tempbuf.h \\\n-\t${backward_srcdir}/tree.h \\\n-\t${backward_srcdir}/vector.h \\\n-\t${backward_srcdir}/fstream.h \\\n-\t${backward_srcdir}/strstream.h \\\n-\t${backward_srcdir}/strstream \\\n-\t${backward_srcdir}/backward_warning.h\n+backward_headers =  \t${backward_srcdir}/complex.h \t${backward_srcdir}/iomanip.h \t${backward_srcdir}/istream.h \t${backward_srcdir}/ostream.h \t${backward_srcdir}/stream.h \t${backward_srcdir}/streambuf.h \t${backward_srcdir}/algo.h \t${backward_srcdir}/algobase.h \t${backward_srcdir}/alloc.h \t${backward_srcdir}/bvector.h \t${backward_srcdir}/defalloc.h \t${backward_srcdir}/deque.h \t${backward_srcdir}/function.h \t${backward_srcdir}/hash_map.h \t${backward_srcdir}/hash_set.h \t${backward_srcdir}/hashtable.h \t${backward_srcdir}/heap.h \t${backward_srcdir}/iostream.h \t${backward_srcdir}/iterator.h \t${backward_srcdir}/list.h \t${backward_srcdir}/map.h \t${backward_srcdir}/multimap.h \t${backward_srcdir}/new.h \t${backward_srcdir}/multiset.h \t${backward_srcdir}/pair.h \t${backward_srcdir}/queue.h \t${backward_srcdir}/rope.h \t${backward_srcdir}/set.h \t${backward_srcdir}/slist.h \t${backward_srcdir}/stack.h \t${backward_srcdir}/tempbuf.h \t${backward_srcdir}/tree.h \t${backward_srcdir}/vector.h \t${backward_srcdir}/fstream.h \t${backward_srcdir}/strstream.h \t${backward_srcdir}/strstream \t${backward_srcdir}/backward_warning.h\n \n \n ext_srcdir = ${glibcpp_srcdir}/include/ext\n ext_builddir = ./ext\n-ext_headers = \\\n-\t${ext_srcdir}/rope \\\n-\t${ext_srcdir}/ropeimpl.h \\\n-\t${ext_srcdir}/stl_rope.h \\\n-\t${ext_srcdir}/slist \\\n-\t${ext_srcdir}/hash_map \\\n-\t${ext_srcdir}/hash_set \\\n-\t${ext_srcdir}/stl_hashtable.h \\\n-\t${ext_srcdir}/stl_hash_fun.h\n+ext_headers =  \t${ext_srcdir}/rope \t${ext_srcdir}/ropeimpl.h \t${ext_srcdir}/stl_rope.h \t${ext_srcdir}/slist \t${ext_srcdir}/hash_map \t${ext_srcdir}/hash_set \t${ext_srcdir}/stl_hashtable.h \t${ext_srcdir}/stl_hash_fun.h\n \n \n # This is the common subset of files that all three \"C\" header models use.\n c_base_srcdir = @C_INCLUDE_DIR@/bits\n c_base_builddir = ./bits\n-c_base_headers = \\\n-\t${c_base_srcdir}/std_cassert.h \\\n-\t${c_base_srcdir}/std_cctype.h \\\n-\t${c_base_srcdir}/std_cerrno.h \\\n-\t${c_base_srcdir}/std_cfloat.h \\\n-\t${c_base_srcdir}/std_climits.h \\\n-\t${c_base_srcdir}/std_clocale.h \\\n-\t${c_base_srcdir}/std_cmath.h \\\n-\t${c_base_srcdir}/std_csetjmp.h \\\n-\t${c_base_srcdir}/std_csignal.h \\\n-\t${c_base_srcdir}/std_cstdarg.h \\\n-\t${c_base_srcdir}/std_cstddef.h \\\n-\t${c_base_srcdir}/std_cstdio.h \\\n-\t${c_base_srcdir}/std_cstdlib.h \\\n-\t${c_base_srcdir}/std_cstring.h \\\n-\t${c_base_srcdir}/std_ctime.h \\\n-\t${c_base_srcdir}/std_cwchar.h \\\n-\t${c_base_srcdir}/std_cwctype.h \\\n-\t${c_base_srcdir}/cmath.tcc \n+c_base_headers =  \t${c_base_srcdir}/std_cassert.h \t${c_base_srcdir}/std_cctype.h \t${c_base_srcdir}/std_cerrno.h \t${c_base_srcdir}/std_cfloat.h \t${c_base_srcdir}/std_climits.h \t${c_base_srcdir}/std_clocale.h \t${c_base_srcdir}/std_cmath.h \t${c_base_srcdir}/std_csetjmp.h \t${c_base_srcdir}/std_csignal.h \t${c_base_srcdir}/std_cstdarg.h \t${c_base_srcdir}/std_cstddef.h \t${c_base_srcdir}/std_cstdio.h \t${c_base_srcdir}/std_cstdlib.h \t${c_base_srcdir}/std_cstring.h \t${c_base_srcdir}/std_ctime.h \t${c_base_srcdir}/std_cwchar.h \t${c_base_srcdir}/std_cwctype.h \t${c_base_srcdir}/cmath.tcc \n \n \n std_srcdir = ${glibcpp_srcdir}/include/std\n std_builddir = ./\n-std_headers = \\\n-\t${std_srcdir}/algorithm \\\n-\t${std_srcdir}/bitset \\\n-\t${std_srcdir}/complex \\\n-\t${std_srcdir}/deque \\\n-\t${std_srcdir}/fstream \\\n-\t${std_srcdir}/functional \\\n-\t${std_srcdir}/iomanip \\\n-\t${std_srcdir}/ios \\\n-\t${std_srcdir}/iosfwd \\\n-\t${std_srcdir}/iostream \\\n-\t${std_srcdir}/istream \\\n-\t${std_srcdir}/iterator \\\n-\t${std_srcdir}/limits \\\n-\t${std_srcdir}/list \\\n-\t${std_srcdir}/locale \\\n-\t${std_srcdir}/map \\\n-\t${std_srcdir}/memory \\\n-\t${std_srcdir}/numeric \\\n-\t${std_srcdir}/ostream \\\n-\t${std_srcdir}/queue \\\n-\t${std_srcdir}/set \\\n-\t${std_srcdir}/sstream \\\n-\t${std_srcdir}/stack \\\n-\t${std_srcdir}/stdexcept \\\n-\t${std_srcdir}/streambuf \\\n-\t${std_srcdir}/string \\\n-\t${std_srcdir}/utility \\\n-\t${std_srcdir}/valarray \\\n-\t${std_srcdir}/vector \\\n-\t${std_srcdir}/cassert \\\n-\t${std_srcdir}/cctype \\\n-\t${std_srcdir}/cerrno \\\n-\t${std_srcdir}/cfloat \\\n-\t${std_srcdir}/climits \\\n-\t${std_srcdir}/clocale \\\n-\t${std_srcdir}/ciso646 \\\n-\t${std_srcdir}/cmath \\\n-\t${std_srcdir}/csetjmp \\\n-\t${std_srcdir}/csignal \\\n-\t${std_srcdir}/cstdarg \\\n-\t${std_srcdir}/cstddef \\\n-\t${std_srcdir}/cstdio \\\n-\t${std_srcdir}/cstdlib \\\n-\t${std_srcdir}/cstring \\\n-\t${std_srcdir}/ctime \\\n-\t${std_srcdir}/cwchar \\\n-\t${std_srcdir}/cwctype\n+std_headers =  \t${std_srcdir}/algorithm \t${std_srcdir}/bitset \t${std_srcdir}/complex \t${std_srcdir}/deque \t${std_srcdir}/fstream \t${std_srcdir}/functional \t${std_srcdir}/iomanip \t${std_srcdir}/ios \t${std_srcdir}/iosfwd \t${std_srcdir}/iostream \t${std_srcdir}/istream \t${std_srcdir}/iterator \t${std_srcdir}/limits \t${std_srcdir}/list \t${std_srcdir}/locale \t${std_srcdir}/map \t${std_srcdir}/memory \t${std_srcdir}/numeric \t${std_srcdir}/ostream \t${std_srcdir}/queue \t${std_srcdir}/set \t${std_srcdir}/sstream \t${std_srcdir}/stack \t${std_srcdir}/stdexcept \t${std_srcdir}/streambuf \t${std_srcdir}/string \t${std_srcdir}/utility \t${std_srcdir}/valarray \t${std_srcdir}/vector \t${std_srcdir}/cassert \t${std_srcdir}/cctype \t${std_srcdir}/cerrno \t${std_srcdir}/cfloat \t${std_srcdir}/climits \t${std_srcdir}/clocale \t${std_srcdir}/ciso646 \t${std_srcdir}/cmath \t${std_srcdir}/csetjmp \t${std_srcdir}/csignal \t${std_srcdir}/cstdarg \t${std_srcdir}/cstddef \t${std_srcdir}/cstdio \t${std_srcdir}/cstdlib \t${std_srcdir}/cstring \t${std_srcdir}/ctime \t${std_srcdir}/cwchar \t${std_srcdir}/cwctype\n \n \n target_srcdir = ${glibcpp_srcdir}/@OS_INC_SRCDIR@\n target_builddir = ./${target_alias}/bits\n-target_headers = \\\n-\t${target_srcdir}/ctype_base.h \\\n-\t${target_srcdir}/ctype_inline.h \\\n-\t${target_srcdir}/ctype_noninline.h \\\n-\t${target_srcdir}/os_defines.h \\\n-\t${glibcpp_srcdir}/@ATOMICITY_INC_SRCDIR@/atomicity.h \\\n-\t${glibcpp_srcdir}/@LIMITS_INC_SRCDIR@/limits.h\n+target_headers =  \t${target_srcdir}/ctype_base.h \t${target_srcdir}/ctype_inline.h \t${target_srcdir}/ctype_noninline.h \t${target_srcdir}/os_defines.h \t${glibcpp_srcdir}/@ATOMICITY_INC_SRCDIR@/atomicity.h \t${glibcpp_srcdir}/@LIMITS_INC_SRCDIR@/limits.h\n \n \n thread_builddir = ./${target_alias}/bits\n-thread_headers = \\\n-\t${thread_builddir}/gthr.h \\\n-\t${thread_builddir}/gthr-single.h \\\n-\t${thread_builddir}/gthr-default.h\n+thread_headers =  \t${thread_builddir}/gthr.h \t${thread_builddir}/gthr-single.h \t${thread_builddir}/gthr-default.h\n \n \n # List of all timestamp files.  By keeping only one copy of this list, both\n # CLEANFILES and all-local are kept up-to-date.\n-allstamps = stamp-std stamp-bits stamp-c_base stamp-backward stamp-ext \\\n-\tstamp-target stamp-thread \n+allstamps = stamp-std stamp-bits stamp-c_base stamp-backward stamp-ext \tstamp-target stamp-thread \n \n \n # Target includes for threads\n@@ -571,7 +358,7 @@ stamp-${target_alias}:\n stamp-target: ${target_headers} ${target_builddir}\n \t@cd ${target_builddir} ;\\\n \tif [ ! -f stamp-target ]; then \\\n-\t  @LN_S@ $? . ;\\\n+\t  @LN_S@ ${target_headers} . ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@BASIC_FILE_H@ basic_file_model.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CSTDIO_H@ c++io.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CLOCALE_H@ c++locale.h ;\\"}, {"sha": "f0f84eac1e1f7b5477e119ef9d67f0db34bff178", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -151,28 +151,22 @@ toplevel_srcdir = @toplevel_srcdir@\n AUTOMAKE_OPTIONS = 1.3 cygnus\n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n-@GLIBCPP_BUILD_LIBIO_TRUE@noinst_LTLIBRARIES = @GLIBCPP_BUILD_LIBIO_TRUE@libio.la\n+@GLIBCPP_BUILD_LIBIO_TRUE@noinst_LTLIBRARIES = libio.la\n @GLIBCPP_BUILD_LIBIO_FALSE@noinst_LTLIBRARIES = \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n \n-INCLUDES = \\\n-\t-nostdinc++ \\\n-\t$(GLIBCPP_INCLUDES) $(LIBIO_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n+INCLUDES =  \t-nostdinc++ \t$(GLIBCPP_INCLUDES) $(LIBIO_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n \n \n-libio_headers = \\\n-        libio.h libioP.h iolibio.h\n+libio_headers =          libio.h libioP.h iolibio.h\n \n-@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = @GLIBCPP_NEED_LIBIO_TRUE@\\\n-@GLIBCPP_NEED_LIBIO_TRUE@\tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c \\\n-@GLIBCPP_NEED_LIBIO_TRUE@\tiofclose.c iofopen.c \n+@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = \tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c \tiofclose.c iofopen.c \n @GLIBCPP_NEED_LIBIO_FALSE@LIBIO_SRCS = \n-@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = @GLIBCPP_NEED_WLIBIO_TRUE@\\\n-@GLIBCPP_NEED_WLIBIO_TRUE@\twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n+@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = \twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n @GLIBCPP_NEED_WLIBIO_FALSE@LIBIO_WSRCS = \n \n EXTRA_DIST = iostreamP.h"}, {"sha": "7b5f89b10ef710c2c45be79ea36cea91f44dd862", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -160,9 +160,7 @@ EXTRA_LONG_DOUBLE_yes = signbitl.c\n \n EXTRA_DIST = $(EXTRA_LONG_DOUBLE_yes) \n \n-libmath_la_LIBADD = \\\n-\t@LIBMATHOBJS@ \\\n-\t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n+libmath_la_LIBADD =  \t@LIBMATHOBJS@ \t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n \n \n libmath_la_DEPENDENCIES = $(libmath_la_LIBADD)\n@@ -174,8 +172,7 @@ LINK = $(LIBTOOL) --mode=link \"$(CCLD)\" $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES = \\\n-\t$(TOPLEVEL_INCLUDES) \n+INCLUDES =  \t$(TOPLEVEL_INCLUDES) \n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}, {"sha": "80d4fcbb9ab9eb7d4af1e9c9ec61e04f5bc493a0", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 12, "deletions": 47, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -171,50 +171,24 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-CONFIG_CXXFLAGS = \\\n-\t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n+CONFIG_CXXFLAGS =  \t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Warning flags to use.\n-WARN_CXXFLAGS = \\\n-\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n+WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n \n-INCLUDES = \\\n-\t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \\\n-\t$(GLIBCPP_INCLUDES) $(LIBSUPCXX_INCLUDES)\n-\n-\n-headers = \\\n-\texception new typeinfo cxxabi.h exception_defines.h \n-\n-\n-sources = \\\n-\tdel_op.cc \\\n-\tdel_opnt.cc \\\n-\tdel_opv.cc \\\n-\tdel_opvnt.cc \\\n-\teh_alloc.cc \\\n-\teh_aux_runtime.cc \\\n-\teh_catch.cc \\\n-\teh_exception.cc \\\n-\teh_globals.cc \\\n-\teh_personality.cc \\\n-\teh_terminate.cc \\\n-\teh_throw.cc \\\n-\tnew_handler.cc \\\n-\tnew_op.cc \\\n-\tnew_opnt.cc \\\n-\tnew_opv.cc \\\n-\tnew_opvnt.cc \\\n-\tpure.cc \\\n-\ttinfo.cc \\\n-\ttinfo2.cc \\\n-\tvec.cc\n+INCLUDES =  \t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \t$(GLIBCPP_INCLUDES) $(LIBSUPCXX_INCLUDES)\n+\n+\n+headers =  \texception new typeinfo cxxabi.h exception_defines.h \n+\n+\n+sources =  \tdel_op.cc \tdel_opnt.cc \tdel_opv.cc \tdel_opvnt.cc \teh_alloc.cc \teh_aux_runtime.cc \teh_catch.cc \teh_exception.cc \teh_globals.cc \teh_personality.cc \teh_terminate.cc \teh_throw.cc \tnew_handler.cc \tnew_op.cc \tnew_opnt.cc \tnew_opv.cc \tnew_opvnt.cc \tpure.cc \ttinfo.cc \ttinfo2.cc \tvec.cc\n \n \n libsupc___la_SOURCES = $(sources)\n@@ -230,12 +204,7 @@ LIBSUPCXX_CXXFLAGS = $(LIBSUPCXX_PICFLAGS)\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it. (ie, --enable-debug)\n-AM_CXXFLAGS = \\\n-\t-fno-implicit-templates \\\n-\t$(LIBSUPCXX_CXXFLAGS) \\\n-\t$(WARN_CXXFLAGS) \\\n-\t$(OPTIMIZE_CXXFLAGS) \\\n-\t$(CONFIG_CXXFLAGS) \n+AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS) \n \n \n # libstdc++ libtool notes\n@@ -259,9 +228,7 @@ AM_CXXFLAGS = \\\n #\n # We have to put --tag disable-shared after --tag CXX lest things\n # CXX undo the affect of disable-shared.\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n-               --mode=compile $(CXX) $(INCLUDES) \\\n-\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared                --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # 3) We'd have a problem when building the shared libstdc++ object if\n@@ -270,9 +237,7 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared \\\n-          --mode=link $(CXX) \\\n-          @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared           --mode=link $(CXX)           @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}, {"sha": "171a00c327262de3588deb05f5600a1cd9987cc0", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -164,9 +164,7 @@ LOCALE_OUT = @glibcpp_MOFILES@\n MSGFMT = msgfmt\n \n # Necessary files.\n-DISTFILES = \\\n-\tMakefile.am Makefile.in string_literals.cc POTFILES.in $(PACKAGE).pot \\\n-\t$(LOCALE_IN) \n+DISTFILES =  \tMakefile.am Makefile.in string_literals.cc POTFILES.in $(PACKAGE).pot \t$(LOCALE_IN) \n \n \n # Specify what gets cleaned up on a 'make clean'"}, {"sha": "edea410847112d3c0d897c8799898a5fc7f84437", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 8, "deletions": 29, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -161,13 +161,11 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-CONFIG_CXXFLAGS = \\\n-\t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n+CONFIG_CXXFLAGS =  \t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Warning flags to use.\n-WARN_CXXFLAGS = \\\n-\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n+WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n@@ -177,29 +175,17 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES = \\\n-\t-nostdinc++ \\\n-\t$(GLIBCPP_INCLUDES) \\\n-\t$(LIBSUPCXX_INCLUDES) $(LIBIO_INCLUDES) $(LIBMATH_INCLUDES) \\\n-\t$(TOPLEVEL_INCLUDES)\n+INCLUDES =  \t-nostdinc++ \t$(GLIBCPP_INCLUDES) \t$(LIBSUPCXX_INCLUDES) $(LIBIO_INCLUDES) $(LIBMATH_INCLUDES) \t$(TOPLEVEL_INCLUDES)\n \n \n-sources = \\\n-\tbasic_file.cc bitset.cc c++locale.cc cmath.cc codecvt.cc \\\n-\tcomplex_io.cc functexcept.cc globals.cc ios.cc limits.cc \\\n-\tlocale.cc locale-inst.cc localename.cc \\\n-\tcollate.cc messages.cc moneypunct.cc numpunct.cc \\\n-\tmisc-inst.cc stdexcept.cc stl-inst.cc string-inst.cc strstream.cc \\\n-\tvalarray-inst.cc wstring-inst.cc\n+sources =  \tbasic_file.cc bitset.cc c++locale.cc cmath.cc codecvt.cc \tcomplex_io.cc functexcept.cc globals.cc ios.cc limits.cc \tlocale.cc locale-inst.cc localename.cc \tcollate.cc messages.cc moneypunct.cc numpunct.cc \tmisc-inst.cc stdexcept.cc stl-inst.cc string-inst.cc strstream.cc \tvalarray-inst.cc wstring-inst.cc\n \n \n VPATH = $(top_srcdir):$(top_srcdir)/src\n \n libstdc___la_SOURCES = $(sources)\n \n-libstdc___la_LIBADD = \\\n-\t../libmath/libmath.la @libio_la@ \\\n-\t../libsupc++/libsupc++convenience.la\n+libstdc___la_LIBADD =  \t../libmath/libmath.la @libio_la@ \t../libsupc++/libsupc++convenience.la\n \n \n libstdc___la_LDFLAGS = -version-info @libtool_VERSION@ -lm\n@@ -219,12 +205,7 @@ GLIBCPP_INCLUDE_DIR = @glibcpp_builddir@/include\n # The no-implicit-templates flag will generate unresolved references to\n # the concept-checking symbols.  So we must disable the checks while\n # actually building the library.\n-AM_CXXFLAGS = \\\n-\t-fno-implicit-templates \\\n-\t$(LIBSUPCXX_CXXFLAGS) \\\n-\t$(WARN_CXXFLAGS) \\\n-\t$(OPTIMIZE_CXXFLAGS) \\\n-\t$(CONFIG_CXXFLAGS) \n+AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS) \n \n \n # libstdc++ libtool notes\n@@ -245,8 +226,7 @@ AM_CXXFLAGS = \\\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n-\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # 3) We'd have a problem when building the shared libstdc++ object if\n@@ -255,8 +235,7 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \\\n-\t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}, {"sha": "04867cbecd066e3fa3018b6623eb3f22b12a9824", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c06d50074bd18abdceb0c88e866b8a79884f7a/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=89c06d50074bd18abdceb0c88e866b8a79884f7a", "patch": "@@ -155,14 +155,10 @@ AUTOMAKE_OPTIONS = foreign dejagnu\n \n DEJATOOL = libstdc++-v3\n \n-EXPECT = `if [ -f @glibcpp_builddir@/../../expect/expect ] ; then \\\n-            echo @glibcpp_builddir@/../../expect/expect ; \\\n-          else echo expect ; fi`\n+EXPECT = `if [ -f @glibcpp_builddir@/../../expect/expect ] ; then             echo @glibcpp_builddir@/../../expect/expect ;           else echo expect ; fi`\n \n \n-RUNTEST = `if [ -f @glibcpp_srcdir@/../dejagnu/runtest ] ; then \\\n-\t       echo @glibcpp_srcdir@/../dejagnu/runtest ; \\\n-\t    else echo runtest; fi`\n+RUNTEST = `if [ -f @glibcpp_srcdir@/../dejagnu/runtest ] ; then \t       echo @glibcpp_srcdir@/../dejagnu/runtest ; \t    else echo runtest; fi`\n \n \n RUNTESTFLAGS = "}]}