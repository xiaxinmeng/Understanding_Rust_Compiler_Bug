{"sha": "9a58d6cdbf24c9680f70ff84b21749f5aa1c196f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE1OGQ2Y2RiZjI0Yzk2ODBmNzBmZjg0YjIxNzQ5ZjVhYTFjMTk2Zg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-06-10T22:22:54Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-06-10T22:22:54Z"}, "message": "rs6000: Factor out emit_vrsave_prologue\n\nThis is a second patch to make the prologue code more manageable.\n\n\n\t* config/rs6000/rs6000.c (emit_vrsave_prologue): New function,\n\tfactored out from ...\n\t(rs6000_emit_prologue): ... here.\n\nFrom-SVN: r249096", "tree": {"sha": "7b7e674e5eec65fb0684fe4d2ad0c80676fae491", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b7e674e5eec65fb0684fe4d2ad0c80676fae491"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a58d6cdbf24c9680f70ff84b21749f5aa1c196f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a58d6cdbf24c9680f70ff84b21749f5aa1c196f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a58d6cdbf24c9680f70ff84b21749f5aa1c196f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a58d6cdbf24c9680f70ff84b21749f5aa1c196f/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85e71e35052b106c8a7de44a7c209292b2e9f560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e71e35052b106c8a7de44a7c209292b2e9f560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85e71e35052b106c8a7de44a7c209292b2e9f560"}], "stats": {"total": 61, "additions": 38, "deletions": 23}, "files": [{"sha": "26d977962bdaa2aeacb892ca0bc5252d3152c9c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a58d6cdbf24c9680f70ff84b21749f5aa1c196f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a58d6cdbf24c9680f70ff84b21749f5aa1c196f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a58d6cdbf24c9680f70ff84b21749f5aa1c196f", "patch": "@@ -1,3 +1,9 @@\n+2017-06-10  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (emit_vrsave_prologue): New function,\n+\tfactored out from ...\n+\t(rs6000_emit_prologue): ... here.\n+\n 2017-06-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (emit_split_stack_prologue): New function,"}, {"sha": "8e825704266ec846308a93dc6690b46f848fd118", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 32, "deletions": 23, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a58d6cdbf24c9680f70ff84b21749f5aa1c196f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a58d6cdbf24c9680f70ff84b21749f5aa1c196f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9a58d6cdbf24c9680f70ff84b21749f5aa1c196f", "patch": "@@ -28106,6 +28106,34 @@ rs6000_set_handled_components (sbitmap components)\n     cfun->machine->lr_is_wrapped_separately = true;\n }\n \n+/* VRSAVE is a bit vector representing which AltiVec registers\n+   are used.  The OS uses this to determine which vector\n+   registers to save on a context switch.  We need to save\n+   VRSAVE on the stack frame, add whatever AltiVec registers we\n+   used in this function, and do the corresponding magic in the\n+   epilogue.  */\n+static void\n+emit_vrsave_prologue (rs6000_stack_t *info, int save_regno,\n+\t\t      HOST_WIDE_INT frame_off, rtx frame_reg_rtx)\n+{\n+  /* Get VRSAVE into a GPR.  */\n+  rtx reg = gen_rtx_REG (SImode, save_regno);\n+  rtx vrsave = gen_rtx_REG (SImode, VRSAVE_REGNO);\n+  if (TARGET_MACHO)\n+    emit_insn (gen_get_vrsave_internal (reg));\n+  else\n+    emit_insn (gen_rtx_SET (reg, vrsave));\n+\n+  /* Save VRSAVE.  */\n+  int offset = info->vrsave_save_offset + frame_off;\n+  emit_insn (gen_frame_store (reg, frame_reg_rtx, offset));\n+\n+  /* Include the registers in the mask.  */\n+  emit_insn (gen_iorsi3 (reg, reg, GEN_INT (info->vrsave_mask)));\n+\n+  emit_insn (generate_set_vrsave (reg, info, 0));\n+}\n+\n /* Set up the arg pointer (r12) for -fsplit-stack code.  If __morestack was\n    called, it left the arg pointer to the old stack in r29.  Otherwise, the\n    arg pointer is the top of the current frame.  */\n@@ -28933,17 +28961,12 @@ rs6000_emit_prologue (void)\n      used in this function, and do the corresponding magic in the\n      epilogue.  */\n \n-  if (!WORLD_SAVE_P (info)\n-      && info->vrsave_size != 0)\n+  if (!WORLD_SAVE_P (info) && info->vrsave_size != 0)\n     {\n-      rtx reg, vrsave;\n-      int offset;\n-      int save_regno;\n-\n-      /* Get VRSAVE onto a GPR.  Note that ABI_V4 and ABI_DARWIN might\n+      /* Get VRSAVE into a GPR.  Note that ABI_V4 and ABI_DARWIN might\n \t be using r12 as frame_reg_rtx and r11 as the static chain\n \t pointer for nested functions.  */\n-      save_regno = 12;\n+      int save_regno = 12;\n       if ((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_ELFv2)\n \t  && !using_static_chain_p)\n \tsave_regno = 11;\n@@ -28953,23 +28976,9 @@ rs6000_emit_prologue (void)\n \t  if (using_static_chain_p)\n \t    save_regno = 0;\n \t}\n-\n       NOT_INUSE (save_regno);\n-      reg = gen_rtx_REG (SImode, save_regno);\n-      vrsave = gen_rtx_REG (SImode, VRSAVE_REGNO);\n-      if (TARGET_MACHO)\n-\temit_insn (gen_get_vrsave_internal (reg));\n-      else\n-\temit_insn (gen_rtx_SET (reg, vrsave));\n-\n-      /* Save VRSAVE.  */\n-      offset = info->vrsave_save_offset + frame_off;\n-      insn = emit_insn (gen_frame_store (reg, frame_reg_rtx, offset));\n-\n-      /* Include the registers in the mask.  */\n-      emit_insn (gen_iorsi3 (reg, reg, GEN_INT ((int) info->vrsave_mask)));\n \n-      insn = emit_insn (generate_set_vrsave (reg, info, 0));\n+      emit_vrsave_prologue (info, save_regno, frame_off, frame_reg_rtx);\n     }\n \n   /* If we are using RS6000_PIC_OFFSET_TABLE_REGNUM, we need to set it up.  */"}]}