{"sha": "100a518033c276092119c9a68baf63911402873c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAwYTUxODAzM2MyNzYwOTIxMTljOWE2OGJhZjYzOTExNDAyODczYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2014-11-02T19:27:06Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-11-02T19:27:06Z"}, "message": "re PR target/24188 (WRITE(6,*) causes an ICE with -mcmodel=medium)\n\n\t* c-c++-common/ubsan/float-cast-overflow-6.c: Add i?86-*-* target.\n\t* g++.dg/abi/no-weak1.C: Ditto.\n\t* g++.dg/opt/pr44919.C: Ditto.\n\t* g++.dg/opt/pr46640.C: Ditto.\n\t* g++.dg/opt/pr46649.C: Ditto.\n\t* g++.dg/opt/pr47036.C: Ditto.\n\t* g++.dg/opt/pr48273.C: Ditto.\n\t* g++.dg/opt/pr48302.C: Ditto.\n\t* g++.dg/opt/pr45788.C: Ditto.\n\t* g++.dg/opt/pr57662.C: Ditto.\n\t* gcc.dg/20031102-1.c: Ditto.\n\t* gcc.dg/builtin-bswap-7.c: Ditto.\n\t* gcc.dg/builtin-bswap-7a.c: Ditto.\n\t* gcc.dg/builtin-bswap-9.c: Ditto.\n\t* gcc.dg/combine_ashiftrt_1.c: Ditto.\n\t* gcc.dg/guality/bswaptest.c: Ditto.\n\t* gcc.dg/guality/clztest.c: Ditto.\n\t* gcc.dg/guality/ctztest.c: Ditto.\n\t* gcc.dg/guality/pr45003-1.c: Ditto.\n\t* gcc.dg/guality/pr45003-2.c: Ditto.\n\t* gcc.dg/guality/pr45003-3.c: Ditto.\n\t* gcc.dg/guality/pr58791-4.c: Ditto.\n\t* gcc.dg/guality/rotatetest.c:Ditto.\n\t* gcc.dg/ifcvt-fabs-1.c: Ditto.\n\t* gcc.dg/ira-loop-pressure.c: Ditto.\n\t* gcc.dg/ira-shrinkwrap-prep-1.c: Ditto.\n\t* gcc.dg/ira-shrinkwrap-prep-2.c: Ditto.\n\t* gcc.dg/lto/pr47259_0.c: Ditto.\n\t* gcc.dg/memcpy-5.c: Ditto.\n\t* gcc.dg/pr10474.c: Ditto.\n\t* gcc.dg/pr37438.c: Ditto.\n\t* gcc.dg/pr39453.c: Ditto.\n\t* gcc.dg/pr40501.c: Ditto.\n\t* gcc.dg/pr42245-2.c: Ditto.\n\t* gcc.dg/pr42245.c: Ditto.\n\t* gcc.dg/pr42246.c: Ditto.\n\t* gcc.dg/pr42249.c: Ditto.\n\t* gcc.dg/pr42388.c: Ditto.\n\t* gcc.dg/pr42389.c: Ditto.\n\t* gcc.dg/pr45352-1.c: Ditto.\n\t* gcc.dg/pr45352-2.c: Ditto.\n\t* gcc.dg/pr45352-3.c: Ditto.\n\t* gcc.dg/pr45352.c: Ditto.\n\t* gcc.dg/pr45472.c: Ditto.\n\t* gcc.dg/pr45652.c: Ditto.\n\t* gcc.dg/pr46212.c: Ditto.\n\t* gcc.dg/pr46521.c: Ditto.\n\t* gcc.dg/pr46522.c: Ditto.\n\t* gcc.dg/pr46875.c: Ditto.\n\t* gcc.dg/pr48374.c: Ditto.\n\t* gcc.dg/pr50251.c: Ditto.\n\t* gcc.dg/pr54472.c: Ditto.\n\t* gcc.dg/pr55702.c: Ditto.\n\t* gcc.dg/pr56990.c: Ditto.\n\t* gcc.dg/pr57104.c: Ditto.\n\t* gcc.dg/pr57662.c: Ditto.\n\t* gcc.dg/pr60866.c: Ditto.\n\t* gcc.dg/shrink-wrap-loop.c: Ditto.\n\t* gcc.dg/tm/memopt-15.c: Ditto.\n\t* gcc.dg/torture/pr52720.c: Ditto.\n\t* gcc.dg/torture/pr56778.c: Ditto.\n\t* gcc.dg/tree-prof/pr45354.c: Ditto.\n\t* gcc.dg/tree-prof/pr50907.c: Ditto.\n\t* gcc.dg/tree-ssa/loop-16.c: Ditto.\n\t* gcc.dg/tree-ssa/loop-18.c: Ditto.\n\t* gcc.dg/tree-ssa/pr44423.c: Ditto.\n\t* gcc.dg/misc-tests/godump-1.c: Ditto.\n\t* gfortran.dg/PR24188.f: Ditto.\n\t* gfortran.dg/errnocheck_1.f90: Ditto.\n\t* gfortran.dg/g77/20010216-1.f: Ditto.\n\t* gfortran.dg/pr42246-2.f: Ditto.\n\t* gfortran.dg/pr42294.f: Ditto.\n\t* gfortran.dg/pr44691.f: Ditto.\n\t* gfortran.dg/vect/pr45714-a.f: Ditto.\n\t* gcc.c-torture/execute/ieee/ieee.exp: Ditto.\n\t* gcc.misc-tests/linkage.exp: Ditto.\n\t* lib/target-supports.exp: Reformat x86 tagets.\n\t(check_effective_target_whole_vector_shift): Add i?86-*-* target.\n\nFrom-SVN: r217015", "tree": {"sha": "a1be9877257ce054d68f03e7f63d493e154a0a2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1be9877257ce054d68f03e7f63d493e154a0a2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/100a518033c276092119c9a68baf63911402873c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100a518033c276092119c9a68baf63911402873c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/100a518033c276092119c9a68baf63911402873c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100a518033c276092119c9a68baf63911402873c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b227e35bd56fee1602f692216fbf166f5d6f24e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b227e35bd56fee1602f692216fbf166f5d6f24e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b227e35bd56fee1602f692216fbf166f5d6f24e"}], "stats": {"total": 363, "additions": 204, "deletions": 159}, "files": [{"sha": "04b5429cc46053ff44c236edbc97edf9e78e8b46", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,3 +1,84 @@\n+2014-11-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* c-c++-common/ubsan/float-cast-overflow-6.c: Add i?86-*-* target.\n+\t* g++.dg/abi/no-weak1.C: Ditto.\n+\t* g++.dg/opt/pr44919.C: Ditto.\n+\t* g++.dg/opt/pr46640.C: Ditto.\n+\t* g++.dg/opt/pr46649.C: Ditto.\n+\t* g++.dg/opt/pr47036.C: Ditto.\n+\t* g++.dg/opt/pr48273.C: Ditto.\n+\t* g++.dg/opt/pr48302.C: Ditto.\n+\t* g++.dg/opt/pr45788.C: Ditto.\n+\t* g++.dg/opt/pr57662.C: Ditto.\n+\t* gcc.dg/20031102-1.c: Ditto.\n+\t* gcc.dg/builtin-bswap-7.c: Ditto.\n+\t* gcc.dg/builtin-bswap-7a.c: Ditto.\n+\t* gcc.dg/builtin-bswap-9.c: Ditto.\n+\t* gcc.dg/combine_ashiftrt_1.c: Ditto.\n+\t* gcc.dg/guality/bswaptest.c: Ditto.\n+\t* gcc.dg/guality/clztest.c: Ditto.\n+\t* gcc.dg/guality/ctztest.c: Ditto.\n+\t* gcc.dg/guality/pr45003-1.c: Ditto.\n+\t* gcc.dg/guality/pr45003-2.c: Ditto.\n+\t* gcc.dg/guality/pr45003-3.c: Ditto.\n+\t* gcc.dg/guality/pr58791-4.c: Ditto.\n+\t* gcc.dg/guality/rotatetest.c:Ditto.\n+\t* gcc.dg/ifcvt-fabs-1.c: Ditto.\n+\t* gcc.dg/ira-loop-pressure.c: Ditto.\n+\t* gcc.dg/ira-shrinkwrap-prep-1.c: Ditto.\n+\t* gcc.dg/ira-shrinkwrap-prep-2.c: Ditto.\n+\t* gcc.dg/lto/pr47259_0.c: Ditto.\n+\t* gcc.dg/memcpy-5.c: Ditto.\n+\t* gcc.dg/pr10474.c: Ditto.\n+\t* gcc.dg/pr37438.c: Ditto.\n+\t* gcc.dg/pr39453.c: Ditto.\n+\t* gcc.dg/pr40501.c: Ditto.\n+\t* gcc.dg/pr42245-2.c: Ditto.\n+\t* gcc.dg/pr42245.c: Ditto.\n+\t* gcc.dg/pr42246.c: Ditto.\n+\t* gcc.dg/pr42249.c: Ditto.\n+\t* gcc.dg/pr42388.c: Ditto.\n+\t* gcc.dg/pr42389.c: Ditto.\n+\t* gcc.dg/pr45352-1.c: Ditto.\n+\t* gcc.dg/pr45352-2.c: Ditto.\n+\t* gcc.dg/pr45352-3.c: Ditto.\n+\t* gcc.dg/pr45352.c: Ditto.\n+\t* gcc.dg/pr45472.c: Ditto.\n+\t* gcc.dg/pr45652.c: Ditto.\n+\t* gcc.dg/pr46212.c: Ditto.\n+\t* gcc.dg/pr46521.c: Ditto.\n+\t* gcc.dg/pr46522.c: Ditto.\n+\t* gcc.dg/pr46875.c: Ditto.\n+\t* gcc.dg/pr48374.c: Ditto.\n+\t* gcc.dg/pr50251.c: Ditto.\n+\t* gcc.dg/pr54472.c: Ditto.\n+\t* gcc.dg/pr55702.c: Ditto.\n+\t* gcc.dg/pr56990.c: Ditto.\n+\t* gcc.dg/pr57104.c: Ditto.\n+\t* gcc.dg/pr57662.c: Ditto.\n+\t* gcc.dg/pr60866.c: Ditto.\n+\t* gcc.dg/shrink-wrap-loop.c: Ditto.\n+\t* gcc.dg/tm/memopt-15.c: Ditto.\n+\t* gcc.dg/torture/pr52720.c: Ditto.\n+\t* gcc.dg/torture/pr56778.c: Ditto.\n+\t* gcc.dg/tree-prof/pr45354.c: Ditto.\n+\t* gcc.dg/tree-prof/pr50907.c: Ditto.\n+\t* gcc.dg/tree-ssa/loop-16.c: Ditto.\n+\t* gcc.dg/tree-ssa/loop-18.c: Ditto.\n+\t* gcc.dg/tree-ssa/pr44423.c: Ditto.\n+\t* gcc.dg/misc-tests/godump-1.c: Ditto.\n+\t* gfortran.dg/PR24188.f: Ditto.\n+\t* gfortran.dg/errnocheck_1.f90: Ditto.\n+\t* gfortran.dg/g77/20010216-1.f: Ditto.\n+\t* gfortran.dg/pr42246-2.f: Ditto.\n+\t* gfortran.dg/pr42294.f: Ditto.\n+\t* gfortran.dg/pr44691.f: Ditto.\n+\t* gfortran.dg/vect/pr45714-a.f: Ditto.\n+\t* gcc.c-torture/execute/ieee/ieee.exp: Ditto.\n+\t* gcc.misc-tests/linkage.exp: Ditto.\n+\t* lib/target-supports.exp: Reformat x86 tagets.\n+\t(check_effective_target_whole_vector_shift): Add i?86-*-* target.\n+\n 2014-11-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57694"}, {"sha": "a2b5f9a28ce9c824933aea42c8ede5893049a98a", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-6.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { x86_64-*-* ia64-*-* } && { ! { ia32 } } } } } */\n+/* { dg-do run { target { { { i?86-*-* x86_64-*-* } && { ! { ia32 } } || { ia64-*-* } } } } } */\n /* { dg-options \"-fsanitize=float-cast-overflow\" } */\n \n #include <limits.h>"}, {"sha": "065c414ff81d8b7c3528c29f9e196bf910d79760", "filename": "gcc/testsuite/g++.dg/abi/no-weak1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fno-weak1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fno-weak1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fno-weak1.C?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-fno-weak\" }\n-// { dg-final { scan-assembler \"local\\[ \\t\\]*_ZZL1fvE1i\" { target x86_64-*-*gnu } } }\n-// { dg-final { scan-assembler \"local\\[ \\t\\]*_ZZ1gIiEvvE1i\" { target x86_64-*-*gnu } } }\n+// { dg-final { scan-assembler \"local\\[ \\t\\]*_ZZL1fvE1i\" { target i?86-*-gnu* x86_64-*-gnu* } } }\n+// { dg-final { scan-assembler \"local\\[ \\t\\]*_ZZ1gIiEvvE1i\" { target i?86-*-gnu* x86_64-*-gnu* } } }\n \n static inline void f()\n {"}, {"sha": "a4aeec822bc489ccb4a172e1eb217f430f6b3f0c", "filename": "gcc/testsuite/g++.dg/opt/pr44919.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr44919.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr44919.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr44919.C?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } }\n+// { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } }\n // { dg-options \"-O3 -fselective-scheduling2\" }\n \n namespace std {"}, {"sha": "1c25778e8da530635206c0b9e013dd52864bd09f", "filename": "gcc/testsuite/g++.dg/opt/pr46640.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr46640.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr46640.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr46640.C?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target x86_64-*-* } }\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n // { dg-options \"-fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -fno-exceptions -O\" }\n \n struct QBasicAtomicInt"}, {"sha": "55e96505186b1d268ecb9e63a5c09f506759ed8c", "filename": "gcc/testsuite/g++.dg/opt/pr46649.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr46649.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr46649.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr46649.C?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } }\n+// { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } }\n // { dg-options \"-fschedule-insns -fselective-scheduling\" }\n \n void foo ()"}, {"sha": "94444c38737f358421188d27fd43fdb6244bc13c", "filename": "gcc/testsuite/g++.dg/opt/pr47036.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47036.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47036.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47036.C?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } }\n+// { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } }\n // { dg-options \"-fschedule-insns -fselective-scheduling -fno-dce\" }\n \n "}, {"sha": "340e3a101942ec24ba21078a66c830644b26bdd4", "filename": "gcc/testsuite/g++.dg/opt/pr48273.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr48273.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr48273.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr48273.C?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target x86_64-*-* } }\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n // { dg-options \"-fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -funroll-all-loops -march=core2\" }\n \n void bar ();"}, {"sha": "9d939713ff8c33394125fb76319838229b79da19", "filename": "gcc/testsuite/g++.dg/opt/pr48302.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr48302.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr48302.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr48302.C?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } }\n+// { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } }\n // { dg-options \"-O -fcrossjumping -fgcse -fschedule-insns2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -fselective-scheduling2 --param lim-expensive=320 --param min-crossjump-insns=1\" }\n \n struct S"}, {"sha": "0f4db20c7693bde61163fc1d826649968c49c244", "filename": "gcc/testsuite/g++.dg/pr45788.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr45788.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr45788.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr45788.C?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target x86_64-*-* } }\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n // { dg-options \"-O3 -fwhole-program -msse2\" }\n \n typedef long unsigned int __darwin_size_t;"}, {"sha": "bd5793dcaeab3d6830aa005cf8255ce11324429d", "filename": "gcc/testsuite/g++.dg/pr57662.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr57662.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr57662.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr57662.C?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fselective-scheduling2 -fsel-sched-pipelining\" } */\n \n extern \"C\" {"}, {"sha": "cdd2a3ce74d55070ccd808c9eebec3e8d0f2542f", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/ieee.exp", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fieee.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fieee.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fieee.exp?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -41,10 +41,8 @@ set additional_flags \"-fno-inline\"\n \n # We must use -ffloat-store/-mieee to ensure that excess precision on some\n # machines does not cause problems\n-if [istarget \"i\\[34567\\]86-*-*\"] then {\n-  lappend additional_flags \"-ffloat-store\"\n-}\n-if { [istarget \"x86_64-*-*\"] && [check_effective_target_ia32] } then {\n+if { ([istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"])\n+     && [check_effective_target_ia32] } then {\n   lappend additional_flags \"-ffloat-store\"\n }\n if [istarget \"m68k-*-*\"] then {"}, {"sha": "b50434feff4413a1d5cb46bf54793a3aa69068b9", "filename": "gcc/testsuite/gcc.dg/20031102-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -march=i686\" { target { { i686-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-options \"-O2 -march=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n /* Verify that reload_cse_move2add doesn't add unexpected CLOBBERs. */\n "}, {"sha": "4a42bfc65c9e30005c816dd87db2ede5790959c1", "filename": "gcc/testsuite/gcc.dg/builtin-bswap-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-7.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target arm*-*-* alpha*-*-* ia64*-*-* x86_64-*-* s390x-*-* powerpc*-*-* rs6000-*-* } } */\n+/* { dg-do compile { target arm*-*-* alpha*-*-* ia64*-*-* i?86-*-* x86_64-*-* s390x-*-* powerpc*-*-* rs6000-*-* } } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O -fdump-rtl-combine\" } */"}, {"sha": "5712e2199612efdd6a5cef2e0e61e4a63837ed45", "filename": "gcc/testsuite/gcc.dg/builtin-bswap-7a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-7a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-7a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-7a.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target arm*-*-* alpha*-*-* ia64*-*-* x86_64-*-* s390x-*-* powerpc*-*-* rs6000-*-* } } */\n+/* { dg-do compile { target arm*-*-* alpha*-*-* ia64*-*-* i?86-*-* x86_64-*-* s390x-*-* powerpc*-*-* rs6000-*-* } } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -fdump-rtl-combine\" } */"}, {"sha": "4a2cf7de10ea603673d8fccb93d4bc57faaf46fb", "filename": "gcc/testsuite/gcc.dg/builtin-bswap-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-9.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target arm*-*-* alpha*-*-* ia64*-*-* x86_64-*-* s390x-*-* powerpc*-*-* rs6000-*-* } } */\n+/* { dg-do compile { target arm*-*-* alpha*-*-* ia64*-*-* i?86-*-* x86_64-*-* s390x-*-* powerpc*-*-* rs6000-*-* } } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -fdump-rtl-combine\" } */"}, {"sha": "c2ba918424d248af3a2dc2d8355caff3518a0d13", "filename": "gcc/testsuite/gcc.dg/combine_ashiftrt_1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fcombine_ashiftrt_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fcombine_ashiftrt_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcombine_ashiftrt_1.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,5 @@\n-/* { dg-do compile {target sparc64*-*-* aarch64*-*-* x86_64-*-* powerpc64*-*-*} } */\n+/* { dg-do compile {target sparc64*-*-* aarch64*-*-* i?86-*-* x86_64-*-* powerpc64*-*-*} } */\n+/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -fdump-rtl-combine-all\" } */\n \n typedef long long int int64_t;"}, {"sha": "c924f6e2fc8c6d54e86cb5c901b803d319f816ca", "filename": "gcc/testsuite/gcc.dg/guality/bswaptest.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fbswaptest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fbswaptest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fbswaptest.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n /* { dg-options \"-g\" } */\n \n volatile int vv;"}, {"sha": "b91059cc78ed659b23da8582bd840d5b9342f812", "filename": "gcc/testsuite/gcc.dg/guality/clztest.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fclztest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fclztest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fclztest.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n /* { dg-options \"-g\" } */\n \n volatile int vv;"}, {"sha": "ea8d076d31a1d24e43c7f5b375901a933091bea5", "filename": "gcc/testsuite/gcc.dg/guality/ctztest.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fctztest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fctztest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fctztest.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n /* { dg-options \"-g\" } */\n \n volatile int vv;"}, {"sha": "9fc22f22b1ef0aae7ffa16978695789dc5cecc23", "filename": "gcc/testsuite/gcc.dg/guality/pr45003-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-1.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* PR debug/45003 */\n-/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n /* { dg-options \"-g\" } */\n \n int __attribute__((noinline))"}, {"sha": "7e395d43e16cbeb5544ee1e38414bb6cd6fedf6a", "filename": "gcc/testsuite/gcc.dg/guality/pr45003-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-2.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* PR debug/45003 */\n-/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n /* { dg-options \"-g\" } */\n \n int __attribute__((noinline))"}, {"sha": "5a7c5a8a0c4483ebaffbff0cc73cf7e7b5f871d4", "filename": "gcc/testsuite/gcc.dg/guality/pr45003-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-3.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* PR debug/45003 */\n-/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do run { target { { i?86-*-*  x86_64-*-* } && lp64 } } } */\n /* { dg-options \"-g\" } */\n \n int __attribute__((noinline))"}, {"sha": "2d8b5a5a0ddc2694a2cf1b60dd36a81d1669e271", "filename": "gcc/testsuite/gcc.dg/guality/pr58791-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr58791-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr58791-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr58791-4.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -11,8 +11,8 @@ foo (float a, float b, float c, float d, float l, double u)\n   float f = d * e;\n   double g = (double) f;\n   double h = (double) b;\n-  double i = g * h;\t\t\t/* { dg-final { gdb-test pr58791-4.c:32 \"i\" \"486\" { target { x86_64-*-* && lp64 } } } } */\n-  double i2 = i + 1.0;\t\t\t/* { dg-final { gdb-test pr58791-4.c:32 \"i2\" \"487\" { target { x86_64-*-* && lp64 } } } } */\n+  double i = g * h;\t\t\t/* { dg-final { gdb-test pr58791-4.c:32 \"i\" \"486\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+  double i2 = i + 1.0;\t\t\t/* { dg-final { gdb-test pr58791-4.c:32 \"i2\" \"487\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n   double j = i * 3.25;\n   double k = h + j;\n   float m = l * 8.75;"}, {"sha": "d44c2807a42a0e782a20a018f0779df19476a887", "filename": "gcc/testsuite/gcc.dg/guality/rotatetest.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Frotatetest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Frotatetest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Frotatetest.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n /* { dg-options \"-g\" } */\n \n volatile int vv;"}, {"sha": "409bbc4fea080ebe01abab2f0ef6b0e922144752", "filename": "gcc/testsuite/gcc.dg/ifcvt-fabs-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-fabs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-fabs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-fabs-1.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O\" } */\n-/* { dg-options \"-O -march=i686\" { target { { i686-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-options \"-O -march=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void abort(void);\n "}, {"sha": "28ce6cde9b7b09cd31f18c5457c97294a120ee3e", "filename": "gcc/testsuite/gcc.dg/ira-loop-pressure.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fira-loop-pressure.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fira-loop-pressure.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fira-loop-pressure.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -2,7 +2,7 @@\n    register classes.  In this case, register pressue of INT is high.  But\n    we can still move the FP invariant out of the loop.  */\n \n-/* { dg-do compile { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n /* { dg-options \"-O2 -fira-loop-pressure -fdump-rtl-loop2_invariant \" } */\n \n float tt;"}, {"sha": "162232be81d99ea4feeac411e5545b526e9f72fa", "filename": "gcc/testsuite/gcc.dg/ira-shrinkwrap-prep-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-1.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { x86_64-*-* && lp64 } || { { powerpc*-*-* && lp64 } || { arm_nothumb || { aarch64*-*-* && lp64 } } } } } } */\n+/* { dg-do compile { target { { { i?86-*-* x86_64-*-* } && lp64 } || { { powerpc*-*-* && lp64 } || { arm_nothumb || { aarch64*-*-* && lp64 } } } } } } */\n /* { dg-options \"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-use-caller-save\"  } */\n \n long __attribute__((noinline, noclone))"}, {"sha": "1da12a490b6734ed4ee129aa16576764e7faefa2", "filename": "gcc/testsuite/gcc.dg/ira-shrinkwrap-prep-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-2.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { x86_64-*-* && lp64 } || { { powerpc*-*-* && lp64 } || { arm_nothumb || { aarch64*-*-* && lp64 } } } } } } */\n+/* { dg-do compile { target { { { i?86-*-* x86_64-*-* } && lp64 } || { { powerpc*-*-* && lp64 } || { arm_nothumb || { aarch64*-*-* && lp64 } } } } } } */\n /* { dg-options \"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-use-caller-save\"  } */\n \n long __attribute__((noinline, noclone))"}, {"sha": "bda485cae5b48e26f7119737f174d508bab4bd1b", "filename": "gcc/testsuite/gcc.dg/lto/pr47259_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr47259_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr47259_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr47259_0.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-skip-if \"\" { ! { x86_64-*-* } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { ! { i?86-*-* x86_64-*-* } } { \"*\" } { \"\" } } */\n /* { dg-lto-options { { -O2 -flto -w } } } */\n \n register int r asm(\"esi\");"}, {"sha": "9f98bbabd61a7418033fca1515f9914f5567b792", "filename": "gcc/testsuite/gcc.dg/memcpy-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcpy-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcpy-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcpy-5.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -24,5 +24,5 @@ TEST (d32d, double __attribute__((vector_size (32))));\n TEST (d64d, double __attribute__((vector_size (64))));\n TEST (d128d, double __attribute__((vector_size (128))));\n \n-/* { dg-final { scan-tree-dump-not \"memcpy\" \"optimized\" { target x86_64-*-* } } } */\n+/* { dg-final { scan-tree-dump-not \"memcpy\" \"optimized\" { target i?86-*-* x86_64-*-* } } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "726ff4e516cfda7e302dfe08609d6a093c3d9968", "filename": "gcc/testsuite/gcc.dg/pr10474.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10474.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10474.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10474.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { x86_64-*-* && lp64 } || { { powerpc*-*-* && lp64 } || { arm_nothumb || { aarch64*-*-* && lp64 } } } } } } */\n+/* { dg-do compile { target { { { i?86-*-* x86_64-*-* } && lp64 } || { { powerpc*-*-* && lp64 } || { arm_nothumb || { aarch64*-*-* && lp64 } } } } } } */\n /* { dg-options \"-O3 -fdump-rtl-pro_and_epilogue\"  } */\n \n void f(int *i)"}, {"sha": "b64994c248398aed4f689a40505d48a945d4f8a7", "filename": "gcc/testsuite/gcc.dg/pr37438.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37438.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37438.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37438.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,7 +1,7 @@\n /* PR target/37438 */\n /* { dg-do compile } */\n /* { dg-options \"-Os\" } */\n-/* { dg-options \"-Os -march=i486\" { target { { i686-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-options \"-Os -march=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern int bar (unsigned long long int);\n extern int baz (const char *, unsigned int, unsigned short);"}, {"sha": "35815230a75dfe6470225363eec520967eb62dc8", "filename": "gcc/testsuite/gcc.dg/pr39453.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39453.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39453.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39453.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fselective-scheduling2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops\" } */\n \n int foo(int k, int n)"}, {"sha": "e6ce217b626761db36b827a491c86e2ad080b985", "filename": "gcc/testsuite/gcc.dg/pr40501.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40501.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40501.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40501.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target alpha*-*-* ia64*-*-* x86_64-*-* s390x-*-* } } */\n+/* { dg-do compile { target alpha*-*-* ia64*-*-* i?86-*-* x86_64-*-* s390x-*-* } } */\n /* { dg-options \"-O2\" } */\n /* { dg-require-effective-target lp64 } */\n "}, {"sha": "e99fe3759d9eda4ed30afb599ede700b8c7d7ea7", "filename": "gcc/testsuite/gcc.dg/pr42245-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42245-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42245-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42245-2.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fselective-scheduling -fsel-sched-pipelining\" } */\n \n int"}, {"sha": "a516e7ae5443b46b61f2812376652e435eb0bde3", "filename": "gcc/testsuite/gcc.dg/pr42245.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42245.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42245.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42245.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fselective-scheduling -fsel-sched-pipelining\" } */\n \n extern int N_words;"}, {"sha": "163f2b4a638c7e3a2c116decb7b016d3d84969b6", "filename": "gcc/testsuite/gcc.dg/pr42246.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42246.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42246.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42246.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fselective-scheduling -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops\" } */\n \n typedef enum"}, {"sha": "3289d54d6b99700fb4851a8117eb9ff69ae0ec28", "filename": "gcc/testsuite/gcc.dg/pr42249.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42249.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42249.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42249.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fselective-scheduling -fsel-sched-pipelining\" } */\n \n typedef struct TypHeader"}, {"sha": "a68a2e85b610fbdd83ae4872adce6d0182e41c01", "filename": "gcc/testsuite/gcc.dg/pr42388.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42388.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42388.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42388.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fselective-scheduling -fmodulo-sched\" } */\n \n enum rtx_code"}, {"sha": "8bb06ae943917c4fa9a0279be44347a921b14361", "filename": "gcc/testsuite/gcc.dg/pr42389.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42389.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42389.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42389.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fselective-scheduling -fsel-sched-pipelining -fsched-pressure\" } */\n \n struct s_linked_f_pointer"}, {"sha": "2183f0eea00398992e437ee3b825776cdf173edb", "filename": "gcc/testsuite/gcc.dg/pr45352-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352-1.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O3 -fschedule-insns -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining -funroll-loops -fprefetch-loop-arrays\" } */\n \n void main1 (float *pa, float *pc)"}, {"sha": "e81ed30f03b769fa6b41bd314a577595f2ad9317", "filename": "gcc/testsuite/gcc.dg/pr45352-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352-2.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O1 -freorder-blocks -fschedule-insns2 -funswitch-loops -fselective-scheduling2 -fsel-sched-pipelining -funroll-all-loops\" } */\n void\n foo1 (int *s)"}, {"sha": "c642a70855b1dde80ea2aa264c24a268852ad504", "filename": "gcc/testsuite/gcc.dg/pr45352-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352-3.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O -fprofile-generate -fgcse -fno-gcse-lm -fgcse-sm -fno-ivopts -fno-tree-loop-im -ftree-pre -funroll-loops -fno-web -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining\" } */\n \n extern volatile float f[];"}, {"sha": "7aeac0da371a041fac543fed992d99e4d062ef17", "filename": "gcc/testsuite/gcc.dg/pr45352.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45352.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate\" } */\n \n static inline void"}, {"sha": "6cbc392a50b601de70f5fb33952f26c77366e2df", "filename": "gcc/testsuite/gcc.dg/pr45472.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45472.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45472.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45472.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O -fschedule-insns2 -fselective-scheduling2\" } */\n \n struct S"}, {"sha": "74e284ca4a10717b11887443ed752dfa9aac5406", "filename": "gcc/testsuite/gcc.dg/pr45652.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45652.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45652.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45652.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do run { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fselective-scheduling2\" } */\n \n struct S {"}, {"sha": "a549a99050f1f2ba5e8b93c5820b0fa9d44fcee1", "filename": "gcc/testsuite/gcc.dg/pr46212.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,7 +1,7 @@\n /* PR rtl-optimization/46212 */\n /* { dg-do compile } */\n /* { dg-options \"-O3 -funroll-loops\" } */\n-/* { dg-options \"-O3 -funroll-loops -march=i386\" { target { { i686-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-options \"-O3 -funroll-loops -march=i386\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-require-effective-target int32plus } */\n \n static inline unsigned"}, {"sha": "905b3e0c036a6a0684f555347f63fa37360328f4", "filename": "gcc/testsuite/gcc.dg/pr46521.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46521.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46521.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46521.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate -fno-early-inlining\" } */\n \n static void bmp_iter_next (int *bi)"}, {"sha": "9e8e08ca7fcf5da6bfbc26a21c4aebe6b19eba1e", "filename": "gcc/testsuite/gcc.dg/pr46522.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46522.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46522.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46522.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O3 -fkeep-inline-functions -fsel-sched-pipelining -fselective-scheduling2 -funroll-loops\" } */\n \n struct S"}, {"sha": "8b6d23680fa255ee6e0729e8e3b156540127d3e2", "filename": "gcc/testsuite/gcc.dg/pr46875.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46875.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46875.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46875.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-Os -fselective-scheduling2\" } */\n \n long"}, {"sha": "d694a785387d629af97a0d08419f8a28deb831af", "filename": "gcc/testsuite/gcc.dg/pr48374.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48374.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48374.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48374.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O -fschedule-insns2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -fselective-scheduling2 --param max-sched-extend-regions-iters=2\"  } */\n \n void foo (int y)"}, {"sha": "57b3d971aef16f08fdcaed7d0627e39bc5d2a430", "filename": "gcc/testsuite/gcc.dg/pr50251.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50251.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50251.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50251.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target { ! { x86_64-*-mingw* } } } } */\n /* { dg-options \"-O2\" } */\n-/* { dg-additional-options \"-mpreferred-stack-boundary=12\" { target x86_64-*-* } } */\n+/* { dg-additional-options \"-mpreferred-stack-boundary=12\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n \n extern void bar (int*);\n "}, {"sha": "20c85b47aede21ae13e0e17e90f2cd660cf801a4", "filename": "gcc/testsuite/gcc.dg/pr54472.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54472.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54472.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54472.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O -fschedule-insns -fselective-scheduling\" } */\n \n int main ()"}, {"sha": "bf3d3ae5ea247380989f0c0f77e9829c889cfb16", "filename": "gcc/testsuite/gcc.dg/pr55702.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55702.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55702.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55702.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* PR sanitizer/55702 */\n-/* { dg-do compile { target { x86_64-*-linux* && lp64 } } } */\n+/* { dg-do compile { target { { i?86-*-linux* x86_64-*-linux* } && lp64 } } } */\n /* { dg-options \"-fsanitize=thread\" } */\n \n void"}, {"sha": "c857785c834d2ef369aaaf037eda29d5ddc46815", "filename": "gcc/testsuite/gcc.dg/pr56990.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56990.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56990.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56990.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* PR sanitizer/56990 */\n-/* { dg-do compile { target { x86_64-*-linux* && lp64 } } } */\n+/* { dg-do compile { target { { i?86-*-linux* x86_64-*-linux* } && lp64 } } } */\n /* { dg-options \"-fsanitize=thread\" } */\n \n struct S{};"}, {"sha": "2539d59c5b63572ce3159c667c5ccda151f8ebb7", "filename": "gcc/testsuite/gcc.dg/pr57104.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57104.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57104.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57104.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* PR tree-optimization/57104 */\n-/* { dg-do compile { target { x86_64-*-linux* && lp64 } } } */\n+/* { dg-do compile { target { { i?86-*-linux* x86_64-*-linux* } && lp64 } } } */\n /* { dg-options \"-fsanitize=thread\" } */\n \n register int r asm (\"r14\");"}, {"sha": "253bf6891469f363acac0ec15d2f216de52cb36a", "filename": "gcc/testsuite/gcc.dg/pr57662.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57662.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57662.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57662.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \" -O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -ftree-pre\" } */\n \n struct intC"}, {"sha": "a97f4e5cb03f03a6294e40e7234683f4914c5c26", "filename": "gcc/testsuite/gcc.dg/pr60866.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60866.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60866.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60866.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O -fselective-scheduling -fno-if-conversion -fschedule-insns\"  } */\n \n int n;"}, {"sha": "f540d2914de6cbdf17df5db343e1f48b6cdcbf4c", "filename": "gcc/testsuite/gcc.dg/shrink-wrap-loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fshrink-wrap-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Fshrink-wrap-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fshrink-wrap-loop.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { x86_64-*-* && lp64 } || { arm_thumb2 } } } } */\n+/* { dg-do compile { target { { { i?86-*-* x86_64-*-* } && lp64 } || { arm_thumb2 } } } } */\n /* { dg-options \"-O2 -fdump-rtl-pro_and_epilogue\"  } */\n \n int foo (int *p1, int *p2);"}, {"sha": "bf74db7f62d36df14a2088f677338bb10b18a477", "filename": "gcc/testsuite/gcc.dg/tm/memopt-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fmemopt-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fmemopt-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fmemopt-15.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { x86_64-*-linux* } } } */\n+/* { dg-do compile { target { i?86-*-linux* x86_64-*-linux* } } } */\n /* { dg-options \"-fgnu-tm -O\" } */\n \n /* Test the TM vector logging functions.  */"}, {"sha": "b8a906e225ee717ef7bb7f5d95c8c4e4f7ae8a41", "filename": "gcc/testsuite/gcc.dg/torture/pr52720.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52720.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52720.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52720.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-march=k8-sse3\" { target x86_64-*-* } } */\n+/* { dg-options \"-march=k8-sse3\" { target i?86-*-* x86_64-*-* } } */\n \n struct alu_bank_swizzle {\n     int hw_gpr[3][4];"}, {"sha": "a1eea497de291a169bd599fcd33922a4b725004f", "filename": "gcc/testsuite/gcc.dg/torture/pr56778.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56778.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56778.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56778.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-march=core-avx2\" { target x86_64-*-* } } */\n+/* { dg-options \"-march=core-avx2\" { target i?86-*-* x86_64-*-* } } */\n \n typedef struct {\n     float a,b,c;"}, {"sha": "441d16144cb7ba76cdaa0cb490f30c9c966f49c2", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr45354.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr45354.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr45354.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr45354.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-require-effective-target freorder } */\n-/* { dg-options \"-O2 -freorder-blocks-and-partition -fschedule-insns -fselective-scheduling\" { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2 -freorder-blocks-and-partition -fschedule-insns -fselective-scheduling\" { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n \n extern void abort (void);\n "}, {"sha": "8bca6c3843988a7282ab3831cadb3540f8e7d8b8", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr50907.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr50907.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr50907.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr50907.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/50907 */\n /* { dg-require-effective-target freorder } */\n-/* { dg-options \"-O2 -freorder-blocks-and-partition -fschedule-insns -fselective-scheduling -fpic\" { target { { powerpc*-*-* ia64-*-* x86_64-*-* } && fpic } } } */\n+/* { dg-options \"-O2 -freorder-blocks-and-partition -fschedule-insns -fselective-scheduling -fpic\" { target { { powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } && fpic } } } */\n \n #include \"pr45354.c\""}, {"sha": "68ef26d11919ff28bcdcec5e0a80a8b840be12fa", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-16.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -3,7 +3,7 @@\n    and we may use 64-bit variable to represent them.  */\n \n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n-/* { dg-do compile { target x86_64-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n \n unsigned a[100];\n "}, {"sha": "b36d84dcb44a7a8e37529cd01daba273852d97d7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-18.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-18.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -3,7 +3,7 @@\n    i is first extended to 64-bit type).  */\n \n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n-/* { dg-do compile { target x86_64-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n \n unsigned bar(void);\n "}, {"sha": "cadcfcd93a771cc3eecca25c0082c9d52e325912", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr44423.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr44423.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr44423.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr44423.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target x86_64-*-* } } */\n-/* { dg-options \"-O2 -fdump-tree-esra-details\" } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-msse -O2 -fdump-tree-esra-details\" } */\n \n #include \"xmmintrin.h\"\n "}, {"sha": "4ab39064843fc315f912828e387801a309d41134", "filename": "gcc/testsuite/gcc.misc-tests/godump-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgodump-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgodump-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgodump-1.c?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-options \"-c -fdump-go-spec=godump-1.out\" } */\n /* { dg-do compile } */\n-/* { dg-skip-if \"not supported for target\" { ! \"s390*-*-* x86_64-*-*\" } } */\n+/* { dg-skip-if \"not supported for target\" { ! \"s390*-*-* i?86-*-* x86_64-*-*\" } } */\n /* { dg-skip-if \"not supported for target\" { ! lp64 } } */\n \n #include <stdint.h>"}, {"sha": "31bb27722fa3fabab6f23c2872e554561b50f1c3", "filename": "gcc/testsuite/gcc.misc-tests/linkage.exp", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -44,8 +44,7 @@ if { [isnative] && ![is_remote host] } then {\n \t\tset native_cflags \"-xarch=v9\"\n \t    }\n \t}\n-\tif  {[istarget \"i?86*-*-solaris2*\"]\n-\t     || [istarget \"x86_64-*-solaris2.1\\[0-9\\]*\"]} {\n+\tif  {[istarget \"i?86*-*-solaris2*\"] || [istarget \"x86_64-*-solaris2.1\\[0-9\\]*\"]} {\n \t    set file_string [exec file \"linkage-x.o\"]\n \t    if [ string match \"*64*\" $file_string ] {\n \t\tset native_cflags \"-xarch=amd64\"\n@@ -59,9 +58,8 @@ if { [isnative] && ![is_remote host] } then {\n \t    if [ string match \"*64-bit*\" $file_string ] {\n \t\tset native_cflags \"-m64\"\n \t    }\n-\t} elseif {[istarget \"i*86-*-linux*\"]\n-\t\t  || [istarget \"i*86-*-gnu*\"]\n-\t\t  || [istarget \"x86_64-*-linux*\"]} then {\n+\t} elseif {[istarget \"i?86-*-linux*\"] || [istarget \"x86_64-*-linux*\"]\n+\t\t  || [istarget \"i?86-*-gnu*\"] || [istarget \"x86_64-*-gnu*\"] } then {\n \t    set file_string [exec file \"linkage-x.o\"]\n \t    if [ string match \"*32-bit*\" $file_string ] {\n \t\tset native_cflags \"-m32\""}, {"sha": "bcac050cca73ccc02ea09dc771c8011db1b3bbad", "filename": "gcc/testsuite/gfortran.dg/PR24188.f", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2FPR24188.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2FPR24188.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR24188.f?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,7 +1,6 @@\n C PR target/24188\n C { dg-do compile }\n C { dg-options \"-O2\" }\n-C { dg-options \"-O2 -mcmodel=medium\" { target { x86_64-*-* && lp64 } } }\n-C { dg-options \"-O2 -mcmodel=medium\" { target { i?86-*-* && lp64 } } }\n+C { dg-options \"-O2 -mcmodel=medium\" { target { { i?86-*-* x86_64-*-* } && lp64 } } }\n       WRITE(6,*) ''\n       END"}, {"sha": "9990e5a180f5bf57d80f0bfdd72d67dad9ebdb4f", "filename": "gcc/testsuite/gfortran.dg/errnocheck_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Ferrnocheck_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Ferrnocheck_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ferrnocheck_1.f90?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do compile { target x86_64-*-* } }\n+! { dg-do compile { target i?86-*-* x86_64-*-* } }\n ! Fortran should default to -fno-math-errno\n ! and thus no call to sqrt in asm\n subroutine mysqrt(a)"}, {"sha": "7874da2ad02197496e6ceab816b1341ec35a457f", "filename": "gcc/testsuite/gfortran.dg/g77/20010216-1.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010216-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010216-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010216-1.f?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,7 +1,7 @@\n C Test for bug in reg-stack handling conditional moves.\n C Reported by Tim Prince <tprince@computer.org>\n C\n-C { dg-do run { target { { i[6789]86-*-* x86_64-*-* } && ia32 } } }\n+C { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n C { dg-options \"-ffast-math -march=pentiumpro\" }\n \n       double precision function foo(x, y)"}, {"sha": "e8f18d27e9b1b7bf49115a062911819669085c7b", "filename": "gcc/testsuite/gfortran.dg/pr42246-2.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42246-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42246-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42246-2.f?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n C PR rtl-optimization/42246\n-C { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } }\n+C { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } }\n C { dg-options \"-O2 -fselective-scheduling -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops\" }\n \n       subroutine distance(x,clo)"}, {"sha": "b22bf45ae6ba40d9b7fed1b7979501fe483da952", "filename": "gcc/testsuite/gfortran.dg/pr42294.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42294.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42294.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42294.f?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n C PR rtl-optimization/42294\n-C { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } }\n+C { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } }\n C { dg-options \"-O2 -fselective-scheduling2 -fsel-sched-pipelining -funroll-all-loops\" }\n \n       SUBROUTINE ORIEN(IW,NATOT,NTOTORB,NATORB,P,T)"}, {"sha": "b256bd6bfa862016633b63ab39f5076935fa0888", "filename": "gcc/testsuite/gfortran.dg/pr44691.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr44691.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr44691.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr44691.f?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,5 +1,5 @@\n C PR rtl-optimization/44691\n-C { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } }\n+C { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } }\n C { dg-options \"-O2 -fselective-scheduling2\" }\n \n       SUBROUTINE ORIEN(IW,NATOT,NTOTORB,NATORB,P,T)"}, {"sha": "4800b41296ced1da690bd2d28310cc434bb72e27", "filename": "gcc/testsuite/gfortran.dg/vect/pr45714-a.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr45714-a.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr45714-a.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr45714-a.f?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do compile { target x86_64-*-* } }\n+! { dg-do compile { target i?86-*-* x86_64-*-* } }\n ! { dg-options \"-O3 -march=core2 -mavx -ffast-math -mveclibabi=svml\" }\n \n       integer index(18),i,j,k,l,ipiv(18),info,ichange,neq,lda,ldb,"}, {"sha": "3361c2f9e8d98c5d1cc194617db6281127db2277", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 40, "deletions": 72, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100a518033c276092119c9a68baf63911402873c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=100a518033c276092119c9a68baf63911402873c", "patch": "@@ -509,7 +509,7 @@ proc check_profiling_available { test_what } {\n     if {![info exists profiling_available_saved]} {\n \t# Some targets don't have any implementation of __bb_init_func or are\n \t# missing other needed machinery.\n-\tif {    [istarget aarch64*-*-elf]\n+\tif {[istarget aarch64*-*-elf]\n \t     || [istarget am3*-*-linux*]\n \t     || [istarget arm*-*-eabi*]\n \t     || [istarget arm*-*-elf]\n@@ -2097,11 +2097,10 @@ proc check_effective_target_vect_int { } {\n \tverbose \"check_effective_target_vect_int: using cached result\" 2\n     } else {\n \tset et_vect_int_saved 0\n-\tif { [istarget i?86-*-*]\n+\tif { [istarget i?86-*-*] || [istarget x86_64-*-*]\n              || ([istarget powerpc*-*-*]\n                   && ![istarget powerpc-*-linux*paired*])\n \t      || [istarget spu-*-*]\n-\t      || [istarget x86_64-*-*]\n \t      || [istarget sparc*-*-*]\n \t      || [istarget alpha*-*-*]\n \t      || [istarget ia64-*-*] \n@@ -2127,10 +2126,9 @@ proc check_effective_target_vect_intfloat_cvt { } {\n         verbose \"check_effective_target_vect_intfloat_cvt: using cached result\" 2\n     } else {\n         set et_vect_intfloat_cvt_saved 0\n-        if { [istarget i?86-*-*]\n+        if { [istarget i?86-*-*] || [istarget x86_64-*-*]\n               || ([istarget powerpc*-*-*]\n                    && ![istarget powerpc-*-linux*paired*])\n-              || [istarget x86_64-*-*] \n               || ([istarget arm*-*-*]\n                   && [check_effective_target_arm_neon_ok])} {\n            set et_vect_intfloat_cvt_saved 1\n@@ -2165,10 +2163,9 @@ proc check_effective_target_vect_uintfloat_cvt { } {\n         verbose \"check_effective_target_vect_uintfloat_cvt: using cached result\" 2\n     } else {\n         set et_vect_uintfloat_cvt_saved 0\n-        if { [istarget i?86-*-*]\n+        if { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t      || ([istarget powerpc*-*-*]\n \t\t  && ![istarget powerpc-*-linux*paired*])\n-\t      || [istarget x86_64-*-*] \n \t      || [istarget aarch64*-*-*]\n \t      || ([istarget arm*-*-*]\n \t\t  && [check_effective_target_arm_neon_ok])} {\n@@ -2191,10 +2188,9 @@ proc check_effective_target_vect_floatint_cvt { } {\n         verbose \"check_effective_target_vect_floatint_cvt: using cached result\" 2\n     } else {\n         set et_vect_floatint_cvt_saved 0\n-        if { [istarget i?86-*-*]\n+        if { [istarget i?86-*-*] || [istarget x86_64-*-*]\n               || ([istarget powerpc*-*-*]\n                    && ![istarget powerpc-*-linux*paired*])\n-              || [istarget x86_64-*-*]\n               || ([istarget arm*-*-*]\n                   && [check_effective_target_arm_neon_ok])} {\n            set et_vect_floatint_cvt_saved 1\n@@ -3323,8 +3319,7 @@ proc check_effective_target_vect_shift { } {\n \tif { ([istarget powerpc*-*-*]\n              && ![istarget powerpc-*-linux*paired*])\n \t     || [istarget ia64-*-*]\n-\t     || [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget aarch64*-*-*]\n \t     || [check_effective_target_arm32]\n \t     || ([istarget mips*-*-*]\n@@ -3338,7 +3333,7 @@ proc check_effective_target_vect_shift { } {\n }\n \n proc check_effective_target_whole_vector_shift { } {\n-    if { [istarget x86_64-*-*]\n+    if { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t || [istarget ia64-*-*]\n \t || ([check_effective_target_arm32]\n \t     && [check_effective_target_arm_little_endian])\n@@ -3399,11 +3394,10 @@ proc check_effective_target_vect_shift_char { } {\n # This can change for different subtargets so do not cache the result.\n \n proc check_effective_target_vect_long { } {\n-    if { [istarget i?86-*-*]\n+    if { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t || (([istarget powerpc*-*-*] \n               && ![istarget powerpc-*-linux*paired*]) \n               && [check_effective_target_ilp32])\n-\t || [istarget x86_64-*-*]\n \t || [check_effective_target_arm32]\n \t || ([istarget sparc*-*-*] && [check_effective_target_ilp32]) } {\n \tset answer 1\n@@ -3426,12 +3420,11 @@ proc check_effective_target_vect_float { } {\n \tverbose \"check_effective_target_vect_float: using cached result\" 2\n     } else {\n \tset et_vect_float_saved 0\n-\tif { [istarget i?86-*-*]\n+\tif { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t      || [istarget powerpc*-*-*]\n \t      || [istarget spu-*-*]\n \t      || [istarget mips-sde-elf]\n \t      || [istarget mipsisa64*-*-*]\n-\t      || [istarget x86_64-*-*]\n \t      || [istarget ia64-*-*]\n \t      || [istarget aarch64*-*-*]\n \t      || [check_effective_target_arm32] } {\n@@ -3454,9 +3447,8 @@ proc check_effective_target_vect_double { } {\n \tverbose \"check_effective_target_vect_double: using cached result\" 2\n     } else {\n \tset et_vect_double_saved 0\n-\tif { [istarget i?86-*-*]\n-\t      || [istarget aarch64*-*-*]\n-\t      || [istarget x86_64-*-*] } {\n+\tif { [istarget i?86-*-*] || [istarget x86_64-*-*]\n+\t     || [istarget aarch64*-*-*] } {\n \t   if { [check_no_compiler_messages vect_double assembly {\n \t\t #ifdef __tune_atom__\n \t\t # error No double vectorizer support.\n@@ -3486,8 +3478,7 @@ proc check_effective_target_vect_long_long { } {\n         verbose \"check_effective_target_vect_long_long: using cached result\" 2\n     } else {\n         set et_vect_long_long_saved 0\n-        if { [istarget i?86-*-*]\n-              || [istarget x86_64-*-*] } {\n+        if { [istarget i?86-*-*] || [istarget x86_64-*-*] } {\n            set et_vect_long_long_saved 1\n         }\n     }\n@@ -3575,8 +3566,7 @@ proc check_effective_target_vect_perm { } {\n \t     || [istarget aarch64*-*-*]\n \t     || [istarget powerpc*-*-*]\n              || [istarget spu-*-*]\n-\t     || [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || ([istarget mips*-*-*]\n \t\t && [check_effective_target_mpaired_single]) } {\n             set et_vect_perm_saved 1\n@@ -3780,8 +3770,7 @@ proc check_effective_target_vect_widen_mult_hi_to_si { } {\n \t      || [istarget spu-*-*]\n \t      || [istarget ia64-*-*]\n \t      || [istarget aarch64*-*-*]\n-\t      || [istarget i?86-*-*]\n-\t      || [istarget x86_64-*-*]\n+\t      || [istarget i?86-*-*] || [istarget x86_64-*-*]\n               || ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok]) } {\n             set et_vect_widen_mult_hi_to_si_saved 1\n         }\n@@ -3828,8 +3817,7 @@ proc check_effective_target_vect_widen_mult_hi_to_si_pattern { } {\n         if { [istarget powerpc*-*-*]\n               || [istarget spu-*-*]\n               || [istarget ia64-*-*]\n-              || [istarget i?86-*-*]\n-              || [istarget x86_64-*-*]\n+              || [istarget i?86-*-*] || [istarget x86_64-*-*]\n               || ([istarget arm*-*-*]\n \t\t  && [check_effective_target_arm_neon_ok]\n \t\t  && [check_effective_target_arm_little_endian]) } {\n@@ -3853,8 +3841,7 @@ proc check_effective_target_vect_widen_mult_si_to_di_pattern { } {\n     } else {\n \tset et_vect_widen_mult_si_to_di_pattern_saved 0\n         if {[istarget ia64-*-*]\n-\t    || [istarget i?86-*-*]\n-\t    || [istarget x86_64-*-*] } {\n+\t    || [istarget i?86-*-*] || [istarget x86_64-*-*] } {\n             set et_vect_widen_mult_si_to_di_pattern_saved 1\n         }\n     }\n@@ -3937,8 +3924,7 @@ proc check_effective_target_vect_sdot_hi { } {\n         set et_vect_sdot_hi_saved 0\n         if { ([istarget powerpc*-*-*] && ![istarget powerpc-*-linux*paired*])\n \t     || [istarget ia64-*-*]\n-\t     || [istarget i?86-*-*]\n-             || [istarget x86_64-*-*] } {\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*] } {\n             set et_vect_sdot_hi_saved 1\n         }\n     }\n@@ -3978,8 +3964,7 @@ proc check_effective_target_vect_usad_char { } {\n         verbose \"check_effective_target_vect_usad_char: using cached result\" 2\n     } else {\n         set et_vect_usad_char_saved 0\n-        if { ([istarget i?86-*-*]\n-             || [istarget x86_64-*-*]) } {\n+        if { ([istarget i?86-*-*] || [istarget x86_64-*-*]) } {\n             set et_vect_usad_char_saved 1\n         }\n     }\n@@ -4001,8 +3986,7 @@ proc check_effective_target_vect_pack_trunc { } {\n     } else {\n         set et_vect_pack_trunc_saved 0\n         if { ([istarget powerpc*-*-*] && ![istarget powerpc-*-linux*paired*])\n-             || [istarget i?86-*-*]\n-             || [istarget x86_64-*-*]\n+             || [istarget i?86-*-*] || [istarget x86_64-*-*]\n              || [istarget aarch64*-*-*]\n              || [istarget spu-*-*]\n              || ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok]\n@@ -4027,8 +4011,7 @@ proc check_effective_target_vect_unpack { } {\n     } else {\n         set et_vect_unpack_saved 0\n         if { ([istarget powerpc*-*-*] && ![istarget powerpc-*paired*])\n-             || [istarget i?86-*-*]\n-             || [istarget x86_64-*-*] \n+             || [istarget i?86-*-*] || [istarget x86_64-*-*] \n              || [istarget spu-*-*]\n              || [istarget ia64-*-*]\n              || [istarget aarch64*-*-*]\n@@ -4095,9 +4078,8 @@ proc check_effective_target_vect_hw_misalign { } {\n         verbose \"check_effective_target_vect_hw_misalign: using cached result\" 2\n     } else {\n         set et_vect_hw_misalign_saved 0\n-       if { ([istarget x86_64-*-*] \n-\t    || [istarget aarch64*-*-*]\n-            || [istarget i?86-*-*]) } {\n+       if { [istarget i?86-*-*] || [istarget x86_64-*-*]\n+\t    || [istarget aarch64*-*-*] } {\n           set et_vect_hw_misalign_saved 1\n        }\n     }\n@@ -4269,9 +4251,8 @@ proc check_effective_target_vect_condition { } {\n \tif { [istarget aarch64*-*-*]\n \t     || [istarget powerpc*-*-*]\n \t     || [istarget ia64-*-*]\n-\t     || [istarget i?86-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget spu-*-*]\n-\t     || [istarget x86_64-*-*]\n \t     || ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok]) } {\n \t   set et_vect_cond_saved 1\n \t}\n@@ -4291,8 +4272,7 @@ proc check_effective_target_vect_cond_mixed { } {\n \tverbose \"check_effective_target_vect_cond_mixed: using cached result\" 2\n     } else {\n \tset et_vect_cond_mixed_saved 0\n-\tif { [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\tif { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget powerpc*-*-*] } {\n \t   set et_vect_cond_mixed_saved 1\n \t}\n@@ -4313,8 +4293,7 @@ proc check_effective_target_vect_char_mult { } {\n \tset et_vect_char_mult_saved 0\n \tif { [istarget aarch64*-*-*]\n \t     || [istarget ia64-*-*]\n-\t     || [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n             || [check_effective_target_arm32] } {\n \t   set et_vect_char_mult_saved 1\n \t}\n@@ -4335,8 +4314,7 @@ proc check_effective_target_vect_short_mult { } {\n \tset et_vect_short_mult_saved 0\n \tif { [istarget ia64-*-*]\n \t     || [istarget spu-*-*]\n-\t     || [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget powerpc*-*-*]\n \t     || [istarget aarch64*-*-*]\n \t     || [check_effective_target_arm32]\n@@ -4361,8 +4339,7 @@ proc check_effective_target_vect_int_mult { } {\n \tset et_vect_int_mult_saved 0\n \tif { ([istarget powerpc*-*-*] && ![istarget powerpc-*-linux*paired*])\n \t     || [istarget spu-*-*]\n-\t     || [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget ia64-*-*]\n \t     || [istarget aarch64*-*-*]\n \t     || [check_effective_target_arm32] } {\n@@ -4386,8 +4363,7 @@ proc check_effective_target_vect_extract_even_odd { } {\n \tif { [istarget aarch64*-*-*]\n \t     || [istarget powerpc*-*-*]\n \t     || [is-effective-target arm_neon_ok]\n-             || [istarget i?86-*-*]\n-             || [istarget x86_64-*-*]\n+             || [istarget i?86-*-*] || [istarget x86_64-*-*]\n              || [istarget ia64-*-*]\n              || [istarget spu-*-*]\n \t     || ([istarget mips*-*-*]\n@@ -4412,8 +4388,7 @@ proc check_effective_target_vect_interleave { } {\n \tif { [istarget aarch64*-*-*]\n \t     || [istarget powerpc*-*-*]\n \t     || [is-effective-target arm_neon_ok]\n-             || [istarget i?86-*-*]\n-             || [istarget x86_64-*-*]\n+             || [istarget i?86-*-*] || [istarget x86_64-*-*]\n              || [istarget ia64-*-*]\n              || [istarget spu-*-*]\n \t     || ([istarget mips*-*-*]\n@@ -4502,8 +4477,7 @@ proc check_effective_target_vect_call_copysignf { } {\n \tverbose \"check_effective_target_vect_call_copysignf: using cached result\" 2\n     } else {\n \tset et_vect_call_copysignf_saved 0\n-\tif { [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\tif { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget powerpc*-*-*] } {\n \t   set et_vect_call_copysignf_saved 1\n \t}\n@@ -4523,8 +4497,7 @@ proc check_effective_target_vect_call_sqrtf { } {\n     } else {\n \tset et_vect_call_sqrtf_saved 0\n \tif { [istarget aarch64*-*-*]\n-\t     || [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || ([istarget powerpc*-*-*] && [check_vsx_hw_available]) } {\n \t    set et_vect_call_sqrtf_saved 1\n \t}\n@@ -4538,7 +4511,8 @@ proc check_effective_target_vect_call_sqrtf { } {\n \n proc check_effective_target_vect_call_lrint { } {\n     set et_vect_call_lrint 0\n-    if { ([istarget i?86-*-*] || [istarget x86_64-*-*]) && [check_effective_target_ilp32] } {\n+    if { ([istarget i?86-*-*] || [istarget x86_64-*-*])\n+\t && [check_effective_target_ilp32] } {\n \tset et_vect_call_lrint 1\n     }\n \n@@ -4820,8 +4794,7 @@ proc check_effective_target_sync_int_128_runtime { } {\n # Note: 32bit x86 targets require -march=pentium in dg-options.\n \n proc check_effective_target_sync_long_long { } {\n-    if { [istarget x86_64-*-*]\n-\t || [istarget i?86-*-*])\n+    if { [istarget x86_64-*-*] || [istarget i?86-*-*])\n \t || [istarget aarch64*-*-*]\n \t || [istarget arm*-*-*]\n \t || [istarget alpha*-*-*]\n@@ -4838,8 +4811,7 @@ proc check_effective_target_sync_long_long { } {\n # Note: 32bit x86 targets require -march=pentium in dg-options.\n \n proc check_effective_target_sync_long_long_runtime { } {\n-    if { [istarget x86_64-*-*]\n-\t || [istarget i?86-*-*] } {\n+    if { [istarget x86_64-*-*] || [istarget i?86-*-*] } {\n \treturn [check_cached_effective_target sync_long_long_available {\n \t    check_runtime_nocache sync_long_long_available {\n \t\t#include \"cpuid.h\"\n@@ -4895,12 +4867,11 @@ proc check_effective_target_bswap { } {\n \tif { [istarget aarch64-*-*]\n \t     || [istarget alpha*-*-*]\n \t     || [istarget arm*-*-*]\n-\t     || [istarget i?86-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget m68k-*-*]\n \t     || [istarget powerpc*-*-*]\n \t     || [istarget rs6000-*-*]\n-\t     || [istarget s390*-*-*]\n-\t     || [istarget x86_64-*-*] } {\n+\t     || [istarget s390*-*-*] } {\n \t    set et_bswap_saved 1\n \t}\n     }\n@@ -4920,8 +4891,7 @@ proc check_effective_target_bswap16 { } {\n \tset et_bswap16_saved 0\n \tif { [is-effective-target bswap]\n \t     && ![istarget alpha*-*-*]\n-\t     && ![istarget i?86-*-*]\n-\t     && ![istarget x86_64-*-*] } {\n+\t     && !([istarget i?86-*-*] || [istarget x86_64-*-*]) } {\n \t   set et_bswap16_saved 1\n \t}\n     }\n@@ -4979,8 +4949,7 @@ proc check_effective_target_sync_int_long { } {\n # This is intentionally powerpc but not rs6000, rs6000 doesn't have the\n # load-reserved/store-conditional instructions.\n         if { [istarget ia64-*-*]\n-\t     || [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget aarch64*-*-*]\n \t     || [istarget alpha*-*-*] \n \t     || [istarget arm*-*-linux-*] \n@@ -5012,8 +4981,7 @@ proc check_effective_target_sync_char_short { } {\n # load-reserved/store-conditional instructions.\n         if { [istarget aarch64*-*-*]\n \t     || [istarget ia64-*-*]\n-\t     || [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*]\n+\t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget alpha*-*-*] \n \t     || [istarget arm*-*-linux-*] \n \t     || [istarget hppa*-*linux*]"}]}