{"sha": "e464fc903506b75bef90374ab520b52df317a00e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ2NGZjOTAzNTA2Yjc1YmVmOTAzNzRhYjUyMGI1MmRmMzE3YTAwZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-02-03T09:10:37Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-02-03T09:10:37Z"}, "message": "[OpenACC] bump version for 2.6 plus libgomp.texi update\n\n2020-02-03  Julian Brown  <julian@codesourcery.com>\n            Tobias Burnus  <tobias@codesourcery.com>\n\n\tgcc/c-family/\n\t* c-cppbuiltin.c (c_cpp_builtins): Update _OPENACC define to 201711.\n\n\tgcc/\n\t* doc/invoke.texi: Update mention of OpenACC version to 2.6.\n\n\tgcc/fortran/\n\t* cpp.c (cpp_define_builtins): Update _OPENACC define to 201711.\n\t* intrinsic.texi: Update mentions of OpenACC version to 2.6.\n\t* gfortran.texi: Likewise. Remove experimental disclamer for OpenACC.\n\t* invoke.texi: Remove experimental disclamer for OpenACC.\n\n\tgcc/testsuite/\n\t* c-c++-common/cpp/openacc-define-3.c: Update expected value for\n\t_OPENACC define.\n\t* gfortran.dg/openacc-define-3.f90: Likewise.\n\n\tlibgomp/\n\t* libgomp.texi (OpenACC Runtime Library Routines): Document *_async\n\tand *_finalize variants; document acc_attach and acc_detach; update\n\treferences from OpenACC 2.0 to 2.6.\n\t* openacc.f90 (openacc_version): Update to 201711.\n\t* openacc_lib.h (openacc_version): Update to 201711.\n\t* testsuite/libgomp.oacc-fortran/openacc_version-1.f: Update expected\n\topenacc_version to 201711.\n\t* testsuite/libgomp.oacc-fortran/openacc_version-2.f90: Likewise.", "tree": {"sha": "020881840d56c64f5a39be7ec9e55d001efb36ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/020881840d56c64f5a39be7ec9e55d001efb36ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e464fc903506b75bef90374ab520b52df317a00e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e464fc903506b75bef90374ab520b52df317a00e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e464fc903506b75bef90374ab520b52df317a00e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e464fc903506b75bef90374ab520b52df317a00e/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c8e1f920a7f85fcf7b69072926a7b6e0a7e49c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c8e1f920a7f85fcf7b69072926a7b6e0a7e49c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c8e1f920a7f85fcf7b69072926a7b6e0a7e49c5"}], "stats": {"total": 339, "additions": 244, "deletions": 95}, "files": [{"sha": "ca88b31e6e839e54c32cb6a4ddc56091339a7a61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -1,3 +1,8 @@\n+2020-02-03  Julian Brown  <julian@codesourcery.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* doc/invoke.texi: Update mention of OpenACC version to 2.6.\n+\n 2020-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/93533"}, {"sha": "9d9962068bb43b80020dccbdaa034354a17d0b3e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -1,3 +1,8 @@\n+2020-02-03  Julian Brown  <julian@codesourcery.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins): Update _OPENACC define to 201711.\n+\n 2020-01-29  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/89357"}, {"sha": "5532ae46ae146931d416687a1ead79e8990110b1", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -1435,7 +1435,7 @@ c_cpp_builtins (cpp_reader *pfile)\n     cpp_define (pfile, \"__SSP__=1\");\n \n   if (flag_openacc)\n-    cpp_define (pfile, \"_OPENACC=201306\");\n+    cpp_define (pfile, \"_OPENACC=201711\");\n \n   if (flag_openmp)\n     cpp_define (pfile, \"_OPENMP=201511\");"}, {"sha": "4dec0c8326bce37056bd48760d09322926eb6974", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -2248,7 +2248,7 @@ freestanding and hosted environments.\n Enable handling of OpenACC directives @code{#pragma acc} in C/C++ and\n @code{!$acc} in Fortran.  When @option{-fopenacc} is specified, the\n compiler generates accelerated code according to the OpenACC Application\n-Programming Interface v2.0 @w{@uref{https://www.openacc.org}}.  This option\n+Programming Interface v2.6 @w{@uref{https://www.openacc.org}}.  This option\n implies @option{-pthread}, and thus is only supported on targets that\n have support for @option{-pthread}.\n "}, {"sha": "568bb78a183f204689194fe2763862400b335612", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -1,3 +1,11 @@\n+2020-02-03  Julian Brown  <julian@codesourcery.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* cpp.c (cpp_define_builtins): Update _OPENACC define to 201711.\n+\t* intrinsic.texi: Update mentions of OpenACC version to 2.6.\n+\t* gfortran.texi: Likewise. Remove experimental disclamer for OpenACC.\n+\t* invoke.texi: Remove experimental disclamer for OpenACC.\n+\n 2020-02-03  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/93541\n@@ -109,7 +117,7 @@\n \t* interface.c (gfc_procedure_use): Also check parent namespace for\n \t'implict none (external)'.\n \t* symbol.c (gfc_get_namespace): Don't set has_implicit_none_export\n-\tto parent namespace's setting. \n+\tto parent namespace's setting.\n \n 2020-01-19  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n "}, {"sha": "dcde5576cd5640850cfa8ce3b7c30b38d0da2cc4", "filename": "gcc/fortran/cpp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2Fcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2Fcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcpp.c?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -166,7 +166,7 @@ cpp_define_builtins (cpp_reader *pfile)\n   cpp_define (pfile, \"_LANGUAGE_FORTRAN=1\");\n \n   if (flag_openacc)\n-    cpp_define (pfile, \"_OPENACC=201306\");\n+    cpp_define (pfile, \"_OPENACC=201711\");\n \n   if (flag_openmp)\n     cpp_define (pfile, \"_OPENMP=201511\");"}, {"sha": "20fe38534d590580febf4448041b5e515d0846e4", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -485,9 +485,6 @@ include OpenMP, Cray-style pointers, some old vendor extensions, and several\n Fortran 2003 and Fortran 2008 features, including TR 15581.  However, it is\n still under development and has a few remaining rough edges.\n There also is initial support for OpenACC.\n-Note that this is an experimental feature, incomplete, and subject to\n-change in future versions of GCC.  See\n-@uref{https://gcc.gnu.org/wiki/OpenACC} for more information.\n \n At present, the GNU Fortran compiler passes the\n @uref{http://www.fortran-2000.com/ArnaudRecipes/fcvs21_f95.html,\n@@ -546,10 +543,8 @@ status} and @ref{Fortran 2018 status} sections of the documentation.\n Additionally, the GNU Fortran compilers supports the OpenMP specification\n (version 4.0 and most of the features of the 4.5 version,\n @url{http://openmp.org/@/wp/@/openmp-specifications/}).\n-There also is initial support for the OpenACC specification (targeting\n-version 2.0, @uref{http://www.openacc.org/}).\n-Note that this is an experimental feature, incomplete, and subject to\n-change in future versions of GCC.  See\n+There also is support for the OpenACC specification (targeting\n+version 2.6, @uref{http://www.openacc.org/}).  See\n @uref{https://gcc.gnu.org/wiki/OpenACC} for more information.\n \n @node Varying Length Character Strings\n@@ -2245,7 +2240,7 @@ influence run-time behavior.\n \n GNU Fortran strives to be compatible to the\n @uref{http://www.openacc.org/, OpenACC Application Programming\n-Interface v2.0}.\n+Interface v2.6}.\n \n To enable the processing of the OpenACC directive @code{!$acc} in\n free-form source code; the @code{c$acc}, @code{*$acc} and @code{!$acc}\n@@ -2261,10 +2256,6 @@ The OpenACC Fortran runtime library routines are provided both in a\n form of a Fortran 90 module named @code{openacc} and in a form of a\n Fortran @code{include} file named @file{openacc_lib.h}.\n \n-Note that this is an experimental feature, incomplete, and subject to\n-change in future versions of GCC.  See\n-@uref{https://gcc.gnu.org/wiki/OpenACC} for more information.\n-\n @node Argument list functions\n @subsection Argument list functions @code{%VAL}, @code{%REF} and @code{%LOC}\n @cindex argument list functions"}, {"sha": "36ca4e75f03fe98fa8ce577b3fcfa335df13c0ef", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -15371,7 +15371,7 @@ kind @code{omp_pause_resource_kind}:\n @section OpenACC Module @code{OPENACC}\n @table @asis\n @item @emph{Standard}:\n-OpenACC Application Programming Interface v2.0\n+OpenACC Application Programming Interface v2.6\n @end table\n \n \n@@ -15385,9 +15385,9 @@ are listed below.\n \n For details refer to the actual\n @uref{http://www.openacc.org/,\n-OpenACC Application Programming Interface v2.0}.\n+OpenACC Application Programming Interface v2.6}.\n \n @code{OPENACC} provides the scalar default-integer\n named constant @code{openacc_version} with a value of the form\n @var{yyyymm}, where @code{yyyy} is the year and @var{mm} the month\n-of the OpenACC version; for OpenACC v2.0 the value is @code{201306}.\n+of the OpenACC version; for OpenACC v2.6 the value is @code{201711}."}, {"sha": "052d31782443915a6b1171c49f2a095a8985784b", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -420,10 +420,6 @@ compilation sentinels in free form and @code{c$}, @code{*$} and\n @code{!$} sentinels in fixed form, and when linking arranges for the\n OpenACC runtime library to be linked in.\n \n-Note that this is an experimental feature, incomplete, and subject to\n-change in future versions of GCC.  See\n-@w{@uref{https://gcc.gnu.org/wiki/OpenACC}} for more information.\n-\n @item -fopenmp\n @opindex @code{fopenmp}\n @cindex OpenMP"}, {"sha": "67ac4a798926144fa2c2c43d25a0c14c3221e801", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -1,3 +1,10 @@\n+2020-02-03  Julian Brown  <julian@codesourcery.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-c++-common/cpp/openacc-define-3.c: Update expected value for\n+\t_OPENACC define.\n+\t* gfortran.dg/openacc-define-3.f90: Likewise.\n+\n 2020-02-03  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/93427"}, {"sha": "f2122f57dd9d3e376ba4c338dcc4e781e748793d", "filename": "gcc/testsuite/c-c++-common/cpp/openacc-define-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fopenacc-define-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fopenacc-define-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fopenacc-define-3.c?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -6,6 +6,6 @@\n # error _OPENACC not defined\n #endif\n \n-#if _OPENACC != 201306\n+#if _OPENACC != 201711\n # error _OPENACC defined to wrong value\n #endif"}, {"sha": "dcc52b6b4cb5ff9df832ca6eb364c4989665636c", "filename": "gcc/testsuite/gfortran.dg/openacc-define-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ftestsuite%2Fgfortran.dg%2Fopenacc-define-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/gcc%2Ftestsuite%2Fgfortran.dg%2Fopenacc-define-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fopenacc-define-3.f90?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -6,6 +6,6 @@\n # error _OPENACC not defined\n #endif\n \n-#if _OPENACC != 201306\n+#if _OPENACC != 201711\n # error _OPENACC defined to wrong value\n #endif"}, {"sha": "23d939f83e45e2c5d9b64fbfcaefe4bfd81344c2", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -1,3 +1,15 @@\n+2020-02-03  Julian Brown  <julian@codesourcery.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* libgomp.texi (OpenACC Runtime Library Routines): Document *_async\n+\tand *_finalize variants; document acc_attach and acc_detach; update\n+\treferences from OpenACC 2.0 to 2.6.\n+\t* openacc.f90 (openacc_version): Update to 201711.\n+\t* openacc_lib.h (openacc_version): Update to 201711.\n+\t* testsuite/libgomp.oacc-fortran/openacc_version-1.f: Update expected\n+\topenacc_version to 201711.\n+\t* testsuite/libgomp.oacc-fortran/openacc_version-2.f90: Likewise.\n+\n 2020-01-31  Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* plugin/plugin-gcn.c (struct hsa_kernel_description): Add sgpr_count"}, {"sha": "e0c7e01ba418c5f8644d88becadaa285fa0909fa", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 191, "deletions": 66, "changes": 257, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -1820,7 +1820,7 @@ arranges for automatic linking of the OpenACC runtime library\n \n A complete description of all OpenACC directives accepted may be found in \n the @uref{https://www.openacc.org, OpenACC} Application Programming\n-Interface manual, version 2.0.\n+Interface manual, version 2.6.\n \n Note that this is an experimental feature and subject to\n change in future versions of GCC.  See\n@@ -1836,7 +1836,7 @@ change in future versions of GCC.  See\n @chapter OpenACC Runtime Library Routines\n \n The runtime routines described here are defined by section 3 of the OpenACC\n-specifications in version 2.0.\n+specifications in version 2.6.\n They have C linkage, and do not throw exceptions.\n Generally, they are available only for the host, with the exception of\n @code{acc_on_device}, which is available for both the host and the\n@@ -1892,6 +1892,8 @@ acceleration device.\n                                 present on device.\n * acc_memcpy_to_device::        Copy host memory to device memory.\n * acc_memcpy_from_device::      Copy device memory to host memory.\n+* acc_attach::                  Let device pointer point to device-pointer target.\n+* acc_detach::                  Let device pointer point to host-pointer target.\n \n API routines for target platforms.\n \n@@ -1929,7 +1931,7 @@ for the device type specified in @var{devicetype}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n 3.2.1.\n @end table\n \n@@ -1954,7 +1956,7 @@ in @var{devicetype}, to use when executing a parallel or kernels region.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n 3.2.2.\n @end table\n \n@@ -1979,7 +1981,7 @@ parallel or kernels region.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n 3.2.3.\n @end table\n \n@@ -2006,7 +2008,7 @@ type @var{devicetype}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n 3.2.4.\n @end table\n \n@@ -2033,7 +2035,7 @@ region.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n 3.2.5.\n @end table\n \n@@ -2100,8 +2102,8 @@ a zero and Fortran returns a @code{false}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.6.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.9.\n @end table\n \n \n@@ -2128,8 +2130,8 @@ Fortran returns a @code{false}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.7.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.10.\n @end table\n \n \n@@ -2156,8 +2158,8 @@ specified in @var{arg}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.8.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.11.\n @end table\n \n \n@@ -2181,8 +2183,8 @@ This function waits for the completion of all asynchronous operations.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.10.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.13.\n @end table\n \n \n@@ -2207,8 +2209,8 @@ any queue.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.11.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.14.\n @end table\n \n \n@@ -2232,8 +2234,8 @@ asynchronous operations enqueued on queue @var{arg}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.9.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.12.\n @end table\n \n \n@@ -2257,8 +2259,8 @@ This function initializes the runtime for the device type specified in\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.12.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.7.\n @end table\n \n \n@@ -2282,8 +2284,8 @@ This function shuts down the runtime for the device type specified in\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.13.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.8.\n @end table\n \n \n@@ -2313,8 +2315,8 @@ return @code{false}.\n \n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.14.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.17.\n @end table\n \n \n@@ -2332,8 +2334,8 @@ the device address of the allocated memory.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.15.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.18.\n @end table\n \n \n@@ -2350,8 +2352,8 @@ Free previously allocated device memory at the device address @code{a}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.16.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.19.\n @end table\n \n \n@@ -2371,6 +2373,7 @@ variable or array element and @var{len} specifies the length in bytes.\n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n @item @emph{Prototype}: @tab @code{void *acc_copyin(h_void *a, size_t len);}\n+@item @emph{Prototype}: @tab @code{void *acc_copyin_async(h_void *a, size_t len, int async);}\n @end multitable\n \n @item @emph{Fortran}:\n@@ -2380,11 +2383,18 @@ variable or array element and @var{len} specifies the length in bytes.\n @item @emph{Interface}: @tab @code{subroutine acc_copyin(a, len)}\n @item                   @tab @code{type, dimension(:[,:]...) :: a}\n @item                   @tab @code{integer len}\n+@item @emph{Interface}: @tab @code{subroutine acc_copyin_async(a, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_copyin_async(a, len, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.17.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.20.\n @end table\n \n \n@@ -2402,6 +2412,9 @@ In Fortran, two (2) forms are supported. In the first form, @var{a} specifies\n a contiguous array section. The second form @var{a} specifies a variable or\n array element and @var{len} specifies the length in bytes.\n \n+Note that @code{acc_present_or_copyin} and @code{acc_pcopyin} exist for\n+backward compatibility with OpenACC 2.0; use @ref{acc_copyin} instead.\n+\n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n @item @emph{Prototype}: @tab @code{void *acc_present_or_copyin(h_void *a, size_t len);}\n@@ -2423,8 +2436,8 @@ array element and @var{len} specifies the length in bytes.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.18.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.20.\n @end table\n \n \n@@ -2444,6 +2457,7 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n @item @emph{Prototype}: @tab @code{void *acc_create(h_void *a, size_t len);}\n+@item @emph{Prototype}: @tab @code{void *acc_create_async(h_void *a, size_t len, int async);}\n @end multitable\n \n @item @emph{Fortran}:\n@@ -2453,11 +2467,18 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{Interface}: @tab @code{subroutine acc_create(a, len)}\n @item                   @tab @code{type, dimension(:[,:]...) :: a}\n @item                   @tab @code{integer len}\n+@item @emph{Interface}: @tab @code{subroutine acc_create_async(a, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_create_async(a, len, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.19.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.21.\n @end table\n \n \n@@ -2475,6 +2496,8 @@ In Fortran, two (2) forms are supported. In the first form, @var{a} specifies\n a contiguous array section. The second form @var{a} specifies a variable or\n array element and @var{len} specifies the length in bytes.\n \n+Note that @code{acc_present_or_create} and @code{acc_pcreate} exist for\n+backward compatibility with OpenACC 2.0; use @ref{acc_create} instead.\n \n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n@@ -2497,8 +2520,8 @@ array element and @var{len} specifies the length in bytes.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.20.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.21.\n @end table\n \n \n@@ -2517,6 +2540,9 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n @item @emph{Prototype}: @tab @code{acc_copyout(h_void *a, size_t len);}\n+@item @emph{Prototype}: @tab @code{acc_copyout_async(h_void *a, size_t len, int async);}\n+@item @emph{Prototype}: @tab @code{acc_copyout_finalize(h_void *a, size_t len);}\n+@item @emph{Prototype}: @tab @code{acc_copyout_finalize_async(h_void *a, size_t len, int async);}\n @end multitable\n \n @item @emph{Fortran}:\n@@ -2526,11 +2552,30 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{Interface}: @tab @code{subroutine acc_copyout(a, len)}\n @item                   @tab @code{type, dimension(:[,:]...) :: a}\n @item                   @tab @code{integer len}\n+@item @emph{Interface}: @tab @code{subroutine acc_copyout_async(a, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_copyout_async(a, len, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_copyout_finalize(a)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item @emph{Interface}: @tab @code{subroutine acc_copyout_finalize(a, len)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item @emph{Interface}: @tab @code{subroutine acc_copyout_finalize_async(a, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_copyout_finalize_async(a, len, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.21.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.22.\n @end table\n \n \n@@ -2549,6 +2594,9 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n @item @emph{Prototype}: @tab @code{acc_delete(h_void *a, size_t len);}\n+@item @emph{Prototype}: @tab @code{acc_delete_async(h_void *a, size_t len, int async);}\n+@item @emph{Prototype}: @tab @code{acc_delete_finalize(h_void *a, size_t len);}\n+@item @emph{Prototype}: @tab @code{acc_delete_finalize_async(h_void *a, size_t len, int async);}\n @end multitable\n \n @item @emph{Fortran}:\n@@ -2558,11 +2606,30 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{Interface}: @tab @code{subroutine acc_delete(a, len)}\n @item                   @tab @code{type, dimension(:[,:]...) :: a}\n @item                   @tab @code{integer len}\n+@item @emph{Interface}: @tab @code{subroutine acc_delete_async(a, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_delete_async(a, len, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_delete_finalize(a)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item @emph{Interface}: @tab @code{subroutine acc_delete_finalize(a, len)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item @emph{Interface}: @tab @code{subroutine acc_delete_async_finalize(a, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_delete_async_finalize(a, len, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.22.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.23.\n @end table\n \n \n@@ -2582,6 +2649,7 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n @item @emph{Prototype}: @tab @code{acc_update_device(h_void *a, size_t len);}\n+@item @emph{Prototype}: @tab @code{acc_update_device(h_void *a, size_t len, async);}\n @end multitable\n \n @item @emph{Fortran}:\n@@ -2591,11 +2659,18 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{Interface}: @tab @code{subroutine acc_update_device(a, len)}\n @item                   @tab @code{type, dimension(:[,:]...) :: a}\n @item                   @tab @code{integer len}\n+@item @emph{Interface}: @tab @code{subroutine acc_update_device_async(a, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_update_device_async(a, len, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.23.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.24.\n @end table\n \n \n@@ -2615,6 +2690,7 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n @item @emph{Prototype}: @tab @code{acc_update_self(h_void *a, size_t len);}\n+@item @emph{Prototype}: @tab @code{acc_update_self_async(h_void *a, size_t len, int async);}\n @end multitable\n \n @item @emph{Fortran}:\n@@ -2624,11 +2700,18 @@ array element and @var{len} specifies the length in bytes.\n @item @emph{Interface}: @tab @code{subroutine acc_update_self(a, len)}\n @item                   @tab @code{type, dimension(:[,:]...) :: a}\n @item                   @tab @code{integer len}\n+@item @emph{Interface}: @tab @code{subroutine acc_update_self_async(a, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n+@item @emph{Interface}: @tab @code{subroutine acc_update_self_async(a, len, async)}\n+@item                   @tab @code{type, dimension(:[,:]...) :: a}\n+@item                   @tab @code{integer len}\n+@item                   @tab @code{integer(acc_handle_kind) :: async}\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.24.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.25.\n @end table\n \n \n@@ -2647,8 +2730,8 @@ specified with the host address @var{h} and a length of @var{len}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.25.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.26.\n @end table\n \n \n@@ -2666,8 +2749,8 @@ specified by @var{h}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.26.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.27.\n @end table\n \n \n@@ -2685,8 +2768,8 @@ host address specified by @var{h}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.27.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.28.\n @end table\n \n \n@@ -2704,8 +2787,8 @@ device address specified by @var{d}.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.28.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.29.\n @end table\n \n \n@@ -2743,8 +2826,8 @@ a @code{false} is return to indicate the mapped memory is not present.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.29.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.30.\n @end table\n \n \n@@ -2763,8 +2846,8 @@ device memory specified by the device address @var{dest} for a length of\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.30.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.31.\n @end table\n \n \n@@ -2783,8 +2866,50 @@ device memory specified by the device address @var{dest} for a length of\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n-3.2.31.\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.32.\n+@end table\n+\n+\n+\n+@node acc_attach\n+@section @code{acc_attach} -- Let device pointer point to device-pointer target.\n+@table @asis\n+@item @emph{Description}\n+This function updates a pointer on the device from pointing to a host-pointer\n+address to pointing to the corresponding device data.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{acc_attach(h_void **ptr);}\n+@item @emph{Prototype}: @tab @code{acc_attach_async(h_void **ptr, int async);}\n+@end multitable\n+\n+@item @emph{Reference}:\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.34.\n+@end table\n+\n+\n+\n+@node acc_detach\n+@section @code{acc_detach} -- Let device pointer point to host-pointer target.\n+@table @asis\n+@item @emph{Description}\n+This function updates a pointer on the device from pointing to a device-pointer\n+address to pointing to the corresponding host data.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{acc_detach(h_void **ptr);}\n+@item @emph{Prototype}: @tab @code{acc_detach_async(h_void **ptr, int async);}\n+@item @emph{Prototype}: @tab @code{acc_detach_finalize(h_void **ptr);}\n+@item @emph{Prototype}: @tab @code{acc_detach_finalize_async(h_void **ptr, int async);}\n+@end multitable\n+\n+@item @emph{Reference}:\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n+3.2.35.\n @end table\n \n \n@@ -2802,7 +2927,7 @@ as used by the CUDA Runtime or Driver API's.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n A.2.1.1.\n @end table\n \n@@ -2821,7 +2946,7 @@ as used by the CUDA Runtime or Driver API's.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n A.2.1.2.\n @end table\n \n@@ -2840,7 +2965,7 @@ This handle is the same as used by the CUDA Runtime or Driver API's.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n A.2.1.3.\n @end table\n \n@@ -2864,7 +2989,7 @@ The return value is not specified.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n A.2.1.4.\n @end table\n \n@@ -2980,7 +3105,7 @@ The variable @env{GCC_ACC_NOTIFY} is used for diagnostic purposes.\n @section @code{ACC_DEVICE_TYPE}\n @table @asis\n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n 4.1.\n @end table\n \n@@ -2990,7 +3115,7 @@ The variable @env{GCC_ACC_NOTIFY} is used for diagnostic purposes.\n @section @code{ACC_DEVICE_NUM}\n @table @asis\n @item @emph{Reference}:\n-@uref{https://www.openacc.org, OpenACC specification v2.0}, section\n+@uref{https://www.openacc.org, OpenACC specification v2.6}, section\n 4.2.\n @end table\n \n@@ -3220,7 +3345,7 @@ is called prior to a call to an OpenACC function, then you must call\n @code{acc_set_device_num()}@footnote{More complete information\n about @env{ACC_DEVICE_TYPE} and @env{ACC_DEVICE_NUM} can be found in\n sections 4.1 and 4.2 of the @uref{https://www.openacc.org, OpenACC}\n-Application Programming Interface\u201d, Version 2.0.}\n+Application Programming Interface\u201d, Version 2.6.}\n \n \n "}, {"sha": "db39421bf07212af873b127178f5a41237296ec2", "filename": "libgomp/openacc.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Fopenacc.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Fopenacc.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc.f90?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -792,7 +792,7 @@ module openacc\n   public :: acc_delete_async, acc_update_device_async, acc_update_self_async\n   public :: acc_copyout_finalize, acc_delete_finalize\n \n-  integer, parameter :: openacc_version = 201306\n+  integer, parameter :: openacc_version = 201711\n \n   interface acc_get_num_devices\n     procedure :: acc_get_num_devices_h"}, {"sha": "92e1dd967af0273b089eeaa6f961b2300ba185e8", "filename": "libgomp/openacc_lib.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Fopenacc_lib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Fopenacc_lib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc_lib.h?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -52,7 +52,7 @@\n       integer (acc_handle_kind), parameter :: acc_async_noval = -1\n       integer (acc_handle_kind), parameter :: acc_async_sync = -2\n \n-      integer, parameter :: openacc_version = 201306\n+      integer, parameter :: openacc_version = 201711\n \n       interface acc_get_num_devices\n         function acc_get_num_devices_h (d)"}, {"sha": "36e9844bb1575cfcd3c65a23fae1e134ca55e516", "filename": "libgomp/testsuite/libgomp.oacc-fortran/openacc_version-1.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-1.f?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -4,6 +4,6 @@ program main\n       implicit none\n       include \"openacc_lib.h\"\n \n-      if (openacc_version .ne. 201306) STOP 1\n+      if (openacc_version .ne. 201711) STOP 1\n \n       end program main"}, {"sha": "e815bc1b82773898dcb890d0ee598a71ef405cd2", "filename": "libgomp/testsuite/libgomp.oacc-fortran/openacc_version-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e464fc903506b75bef90374ab520b52df317a00e/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-2.f90?ref=e464fc903506b75bef90374ab520b52df317a00e", "patch": "@@ -4,6 +4,6 @@ program main\n   use openacc\n   implicit none\n \n-  if (openacc_version .ne. 201306) STOP 1\n+  if (openacc_version .ne. 201711) STOP 1\n \n end program main"}]}