{"sha": "d3b00ce368f3d32a4db4dac4538a90920f6365ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNiMDBjZTM2OGYzZDMyYTRkYjRkYWM0NTM4YTkwOTIwZjYzNjVlZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-12T11:09:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-12T11:09:10Z"}, "message": "[multiple changes]\n\n2012-06-12  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_dist.adb, exp_ch7.adb, sem_type.adb, exp_attr.adb,\n\tsinfo.ads, sem_ch7.adb, exp_alfa.adb, sem_scil.adb, sem_ch12.adb,\n\tsem_util.adb, sem_res.adb, sem_attr.adb, sem_elab.adb, exp_ch6.adb,\n\tsem_ch4.adb, sem_warn.adb, scil_ll.adb, exp_cg.adb: Minor code\n\treorganization.\n\n2012-06-12  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* s-tasini.ads: Minor fix in comment.\n\n2012-06-12  Thomas Quinot  <quinot@adacore.com>\n\n\t* freeze.adb (Freeze_Record_Type): Warn on record with\n\tScalar_Storage_Order if there is no placed component.\n\n2012-06-12  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.adb: Minor comment fix.\n\n2012-06-12  Vincent Celier  <celier@adacore.com>\n\n\t* ali-util.adb (Time_Stamp_Mismatch): In minimal recompilation\n\tmode, use Stringt Mark and Release to avoid growing the Stringt\n\tinternal tables uselessly.\n\t* stringt.adb (Strings_Last): New global variable\n\t(String_Chars_Last): New global variable.\n\t(Mark, Release): New procedures.\n\t* stringt.ads (Mark, Release) New procedures.\n\nFrom-SVN: r188445", "tree": {"sha": "0e78ec06ef2f1c383b601d90512460153a20d376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e78ec06ef2f1c383b601d90512460153a20d376"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3b00ce368f3d32a4db4dac4538a90920f6365ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b00ce368f3d32a4db4dac4538a90920f6365ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3b00ce368f3d32a4db4dac4538a90920f6365ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b00ce368f3d32a4db4dac4538a90920f6365ef/comments", "author": null, "committer": null, "parents": [{"sha": "9b168a8bd3854341c48ad5aa1b30ea5bed06ba9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b168a8bd3854341c48ad5aa1b30ea5bed06ba9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b168a8bd3854341c48ad5aa1b30ea5bed06ba9e"}], "stats": {"total": 299, "additions": 171, "deletions": 128}, "files": [{"sha": "90bb9bb851c20a3647fe729a238cd441f7202929", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -1,3 +1,34 @@\n+2012-06-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_dist.adb, exp_ch7.adb, sem_type.adb, exp_attr.adb,\n+\tsinfo.ads, sem_ch7.adb, exp_alfa.adb, sem_scil.adb, sem_ch12.adb,\n+\tsem_util.adb, sem_res.adb, sem_attr.adb, sem_elab.adb, exp_ch6.adb,\n+\tsem_ch4.adb, sem_warn.adb, scil_ll.adb, exp_cg.adb: Minor code\n+\treorganization.\n+\n+2012-06-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* s-tasini.ads: Minor fix in comment.\n+\n+2012-06-12  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* freeze.adb (Freeze_Record_Type): Warn on record with\n+\tScalar_Storage_Order if there is no placed component.\n+\n+2012-06-12  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.adb: Minor comment fix.\n+\n+2012-06-12  Vincent Celier  <celier@adacore.com>\n+\n+\t* ali-util.adb (Time_Stamp_Mismatch): In minimal recompilation\n+\tmode, use Stringt Mark and Release to avoid growing the Stringt\n+\tinternal tables uselessly.\n+\t* stringt.adb (Strings_Last): New global variable\n+\t(String_Chars_Last): New global variable.\n+\t(Mark, Release): New procedures.\n+\t* stringt.ads (Mark, Release) New procedures.\n+\n 2012-06-12  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch7.adb (Process_Transient_Objects): Renamed constant"}, {"sha": "40cb1d9f765540a2abbe9e37244277ec18891a08", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@ with Scans;   use Scans;\n with Scng;\n with Sinput.C;\n with Snames;  use Snames;\n+with Stringt;\n with Styleg;\n \n package body ALI.Util is\n@@ -476,6 +477,8 @@ package body ALI.Util is\n             --  ??? It is probably worth updating the ALI file with a new\n             --  field to avoid recomputing it each time.\n \n+            Stringt.Mark;\n+\n             if Checksums_Match\n                  (Get_File_Checksum (Sdep.Table (D).Sfile),\n                   Source.Table (Src).Checksum)\n@@ -491,6 +494,8 @@ package body ALI.Util is\n                Sdep.Table (D).Stamp := Source.Table (Src).Stamp;\n             end if;\n \n+            Stringt.Release;\n+\n          end if;\n \n          if (not Read_Only) or else Source.Table (Src).Source_Found then"}, {"sha": "2a640fd542315c33ae6c099f8742dc7c4e3c746a", "filename": "gcc/ada/exp_alfa.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_alfa.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -87,8 +87,7 @@ package body Exp_Alfa is\n               N_Subprogram_Body     =>\n             Qualify_Entity_Names (N);\n \n-         when N_Function_Call            |\n-              N_Procedure_Call_Statement =>\n+         when N_Subprogram_Call     =>\n             Expand_Alfa_Call (N);\n \n          when N_Expanded_Name |"}, {"sha": "2bfe692c4fcccbb2cf407ecf138cbfc1593258ed", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -421,7 +421,7 @@ package body Exp_Attr is\n             Par := Parent (Par);\n          end if;\n \n-         if Nkind_In (Par, N_Procedure_Call_Statement, N_Function_Call)\n+         if Nkind (Par) in N_Subprogram_Call\n             and then Is_Entity_Name (Name (Par))\n          then\n             Subp := Entity (Name (Par));"}, {"sha": "076783f71137fc841030b2cbdc53978def9f3ad7", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2010, Free Software Foundation, Inc.           --\n+--          Copyright (C) 2010-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -122,7 +122,7 @@ package body Exp_CG is\n       for J in Call_Graph_Nodes.First .. Call_Graph_Nodes.Last loop\n          N := Call_Graph_Nodes.Table (J);\n \n-         if Nkind_In (N, N_Procedure_Call_Statement, N_Function_Call) then\n+         if Nkind (N) in N_Subprogram_Call then\n             Write_Call_Info (N);\n \n          else pragma Assert (Nkind (N) = N_Defining_Identifier);\n@@ -349,7 +349,7 @@ package body Exp_CG is\n \n    procedure Register_CG_Node (N : Node_Id) is\n    begin\n-      if Nkind_In (N, N_Procedure_Call_Statement, N_Function_Call) then\n+      if Nkind (N) in N_Subprogram_Call then\n          if Current_Scope = Main_Unit_Entity\n            or else Entity_Is_In_Main_Unit (Current_Scope)\n          then"}, {"sha": "916e7e72e09a5a8197b0a15d314a1996ee2b968d", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -3271,7 +3271,7 @@ package body Exp_Ch6 is\n       --  Ada 2005 (AI-251): If some formal is a class-wide interface, expand\n       --  it to point to the correct secondary virtual table\n \n-      if Nkind_In (Call_Node, N_Function_Call, N_Procedure_Call_Statement)\n+      if Nkind (Call_Node) in N_Subprogram_Call\n         and then CW_Interface_Formals_Present\n       then\n          Expand_Interface_Actuals (Call_Node);\n@@ -3285,7 +3285,7 @@ package body Exp_Ch6 is\n       --  back-ends directly handle the generation of dispatching calls and\n       --  would have to undo any expansion to an indirect call.\n \n-      if Nkind_In (Call_Node, N_Function_Call, N_Procedure_Call_Statement)\n+      if Nkind (Call_Node) in N_Subprogram_Call\n         and then Present (Controlling_Argument (Call_Node))\n       then\n          declare\n@@ -3868,13 +3868,14 @@ package body Exp_Ch6 is\n          --  intermediate result after its use.\n \n          elsif Is_Build_In_Place_Function_Call (Call_Node)\n-           and then Nkind_In (Parent (Call_Node), N_Attribute_Reference,\n-                                          N_Function_Call,\n-                                          N_Indexed_Component,\n-                                          N_Object_Renaming_Declaration,\n-                                          N_Procedure_Call_Statement,\n-                                          N_Selected_Component,\n-                                          N_Slice)\n+           and then\n+             Nkind_In (Parent (Call_Node), N_Attribute_Reference,\n+                                           N_Function_Call,\n+                                           N_Indexed_Component,\n+                                           N_Object_Renaming_Declaration,\n+                                           N_Procedure_Call_Statement,\n+                                           N_Selected_Component,\n+                                           N_Slice)\n          then\n             Establish_Transient_Scope (Call_Node, Sec_Stack => True);\n          end if;"}, {"sha": "1ffc8ca730e4aa546d3b1d657093b2f8d82398f3", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -4337,32 +4337,14 @@ package body Exp_Ch7 is\n          ----------------------\n \n          function Requires_Hooking return Boolean is\n-            function Is_Subprogram_Call (Nod : Node_Id) return Boolean;\n-            --  Determine whether a particular node is a procedure of function\n-            --  call.\n-\n-            ------------------------\n-            -- Is_Subprogram_Call --\n-            ------------------------\n-\n-            function Is_Subprogram_Call (Nod : Node_Id) return Boolean is\n-            begin\n-               return\n-                 Nkind_In (Nod, N_Function_Call, N_Procedure_Call_Statement);\n-            end Is_Subprogram_Call;\n-\n-         --  Start of processing for Requires_Hooking\n-\n          begin\n             --  The context is either a procedure or function call or an object\n-            --  declaration initialized by such a call. In all these cases, the\n-            --  calls are assumed to raise an exception.\n+            --  declaration initialized by a function call. In all these cases,\n+            --  the calls might raise an exception.\n \n-            return\n-              Is_Subprogram_Call (N)\n-                or else\n-                  (Nkind (N) = N_Object_Declaration\n-                     and then Is_Subprogram_Call (Expression (N)));\n+            return Nkind (N) in N_Subprogram_Call\n+               or else (Nkind (N) = N_Object_Declaration\n+                         and then Nkind (Expression (N)) = N_Function_Call);\n          end Requires_Hooking;\n \n          --  Local variables"}, {"sha": "0f20edf60f84e48ce6de66262ccb59f31261b397", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -2129,22 +2129,32 @@ package body Freeze is\n             Next_Entity (Comp);\n          end loop;\n \n-         --  Check compatibility of Scalar_Storage_Order with Bit_Order, if the\n-         --  former is specified.\n-\n          ADC := Get_Attribute_Definition_Clause\n                   (Rec, Attribute_Scalar_Storage_Order);\n \n-         if Present (ADC)\n-           and then Reverse_Bit_Order (Rec) /= Reverse_Storage_Order (Rec)\n-         then\n-            --  Note: report error on Rec, not on ADC, as ADC may apply to\n-            --  an ancestor type.\n+         if Present (ADC) then\n \n-            Error_Msg_Sloc := Sloc (ADC);\n-            Error_Msg_N\n-              (\"scalar storage order for& specified# inconsistent with \"\n-               & \"bit order\", Rec);\n+            --  Check compatibility of Scalar_Storage_Order with Bit_Order, if\n+            --  the former is specified.\n+\n+            if Reverse_Bit_Order (Rec) /= Reverse_Storage_Order (Rec) then\n+\n+               --  Note: report error on Rec, not on ADC, as ADC may apply to\n+               --  an ancestor type.\n+\n+               Error_Msg_Sloc := Sloc (ADC);\n+               Error_Msg_N\n+                 (\"scalar storage order for& specified# inconsistent with \"\n+                  & \"bit order\", Rec);\n+            end if;\n+\n+            --  Warn if there is a Scalar_Storage_Order but no component clause\n+\n+            if not Placed_Component then\n+               Error_Msg_N\n+                 (\"?scalar storage order specified but no component clause\",\n+                  ADC);\n+            end if;\n          end if;\n \n          --  Deal with Bit_Order aspect specifying a non-default bit order\n@@ -2153,7 +2163,7 @@ package body Freeze is\n             if not Placed_Component then\n                ADC :=\n                  Get_Attribute_Definition_Clause (Rec, Attribute_Bit_Order);\n-               Error_Msg_N (\"?Bit_Order specification has no effect\", ADC);\n+               Error_Msg_N (\"?bit order specification has no effect\", ADC);\n                Error_Msg_N\n                  (\"\\?since no component clauses were specified\", ADC);\n \n@@ -2188,8 +2198,8 @@ package body Freeze is\n \n          if Is_Base_Type (Rec) and then Convention (Rec) = Convention_Ada then\n             if (Has_Discriminants (Rec) and then Debug_Flag_Dot_V)\n-                  or else\n-               (not Has_Discriminants (Rec) and then Debug_Flag_Dot_R)\n+                 or else\n+                   (not Has_Discriminants (Rec) and then Debug_Flag_Dot_R)\n             then\n                Set_OK_To_Reorder_Components (Rec);\n             end if;"}, {"sha": "70dd867a342c5b6fbb0b76c63767baec28db1559", "filename": "gcc/ada/s-tasini.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fs-tasini.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fs-tasini.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasini.ads?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,7 +62,7 @@ package System.Tasking.Initialization is\n    -- Abort Defer/Undefer --\n    -------------------------\n \n-   --  Defer_Abort defers the affects of low-level abort and priority change\n+   --  Defer_Abort defers the effects of low-level abort and priority change\n    --  in the calling task until a matching Undefer_Abort call is executed.\n \n    --  Undefer_Abort DOES MORE than just undo the effects of one call to"}, {"sha": "470ac98382ff7aedac3042011619f673f91ece63", "filename": "gcc/ada/scil_ll.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fscil_ll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fscil_ll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscil_ll.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2010, Free Software Foundation, Inc.           --\n+--          Copyright (C) 2010-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -117,8 +117,7 @@ package body SCIL_LL is\n                null;\n \n             when N_SCIL_Dispatching_Call =>\n-               pragma Assert (Nkind_In (N, N_Function_Call,\n-                                           N_Procedure_Call_Statement));\n+               pragma Assert (Nkind (N) in N_Subprogram_Call);\n                null;\n \n             when N_SCIL_Membership_Test =>"}, {"sha": "345fdb55eebf439e1ef48001f60011bfa45212e3", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -3849,17 +3849,15 @@ package body Sem_Attr is\n \n          --  Case of attribute used as actual for subprogram (positional)\n \n-         elsif Nkind_In (Parnt, N_Procedure_Call_Statement,\n-                                N_Function_Call)\n+         elsif Nkind (Parnt) in N_Subprogram_Call\n             and then Is_Entity_Name (Name (Parnt))\n          then\n             Must_Be_Imported (Entity (Name (Parnt)));\n \n          --  Case of attribute used as actual for subprogram (named)\n \n          elsif Nkind (Parnt) = N_Parameter_Association\n-           and then Nkind_In (GParnt, N_Procedure_Call_Statement,\n-                                      N_Function_Call)\n+           and then Nkind (GParnt) in N_Subprogram_Call\n            and then Is_Entity_Name (Name (GParnt))\n          then\n             Must_Be_Imported (Entity (Name (GParnt)));"}, {"sha": "edca3383811e38ef31fa18febcfe0cfc05400c95", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -13578,9 +13578,7 @@ package body Sem_Ch12 is\n                      --  information on aggregates in instances.\n \n                      if Nkind (N2) = Nkind (N)\n-                       and then\n-                         Nkind_In (Parent (N2), N_Procedure_Call_Statement,\n-                                                N_Function_Call)\n+                       and then Nkind (Parent (N2)) in N_Subprogram_Call\n                        and then Comes_From_Source (Typ)\n                      then\n                         if Is_Immediately_Visible (Scope (Typ)) then"}, {"sha": "b58c21f6ca94af2af5ba632bc3239a6c967e27fd", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -4341,7 +4341,8 @@ package body Sem_Ch3 is\n             when E_Incomplete_Type =>\n                if Ada_Version >= Ada_2005 then\n \n-                  --  A subtype of an incomplete type can be explicitly tagged\n+                  --  In Ada 2005 an incomplete type can be explicitly tagged:\n+                  --  propagate indication.\n \n                   Set_Ekind              (Id, E_Incomplete_Subtype);\n                   Set_Is_Tagged_Type     (Id, Is_Tagged_Type (T));"}, {"sha": "563d5b80c21ee4a7cb1d221374b7a80ab4dda92d", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -2299,7 +2299,7 @@ package body Sem_Ch4 is\n \n       Analyze (P);\n \n-      if Nkind_In (N, N_Function_Call, N_Procedure_Call_Statement) then\n+      if Nkind (N) in N_Subprogram_Call then\n \n          --  If P is an explicit dereference whose prefix is of a\n          --  remote access-to-subprogram type, then N has already\n@@ -6736,9 +6736,7 @@ package body Sem_Ch4 is\n      (N : Node_Id; CW_Test_Only : Boolean := False) return Boolean\n    is\n       K              : constant Node_Kind  := Nkind (Parent (N));\n-      Is_Subprg_Call : constant Boolean    := Nkind_In\n-                                               (K, N_Procedure_Call_Statement,\n-                                                   N_Function_Call);\n+      Is_Subprg_Call : constant Boolean    := K in N_Subprogram_Call;\n       Loc            : constant Source_Ptr := Sloc (N);\n       Obj            : constant Node_Id    := Prefix (N);\n \n@@ -7087,8 +7085,7 @@ package body Sem_Ch4 is\n          --  Common case covering 1) Call to a procedure and 2) Call to a\n          --  function that has some additional actuals.\n \n-         if Nkind_In (Parent_Node, N_Function_Call,\n-                                   N_Procedure_Call_Statement)\n+         if Nkind (Parent_Node) in N_Subprogram_Call\n \n             --  N is a selected component node containing the name of the\n             --  subprogram. If N is not the name of the parent node we must"}, {"sha": "326219d1fc64d1dba9b2051e221f7c2a0dd4c00d", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -533,7 +533,7 @@ package body Sem_Ch7 is\n                begin\n                   --  Check name of procedure or function calls\n \n-                  if Nkind_In (N, N_Procedure_Call_Statement, N_Function_Call)\n+                  if Nkind (N) in N_Subprogram_Call\n                     and then Is_Entity_Name (Name (N))\n                   then\n                      return Abandon;"}, {"sha": "678a6001b1a915c628e1a962b22cc535ed934fe9", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -242,7 +242,7 @@ package body Sem_Dist is\n       Par : Node_Id;\n \n    begin\n-      if Nkind_In (N, N_Function_Call, N_Procedure_Call_Statement)\n+      if Nkind (N) in N_Subprogram_Call\n         and then Nkind (Name (N)) in N_Has_Entity\n         and then Is_Remote_Call_Interface (Entity (Name (N)))\n         and then Has_All_Calls_Remote (Scope (Entity (Name (N))))"}, {"sha": "4a98db6f1d9e10e206fc3ea9f344f77b92a8e7a8", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -545,8 +545,7 @@ package body Sem_Elab is\n       --  If the call is known to be within a local Suppress Elaboration\n       --  pragma, nothing to check. This can happen in task bodies.\n \n-      if (Nkind (N) = N_Function_Call\n-           or else Nkind (N) = N_Procedure_Call_Statement)\n+      if Nkind (N) in N_Subprogram_Call\n         and then No_Elaboration_Check (N)\n       then\n          return;\n@@ -990,9 +989,7 @@ package body Sem_Elab is\n                --  which can happen if the body enclosing the call appears\n                --  itself in a call whose elaboration check is delayed.\n \n-               if Nkind_In (N, N_Function_Call,\n-                               N_Procedure_Call_Statement)\n-               then\n+               if Nkind (N) in N_Subprogram_Call then\n                   Set_No_Elaboration_Check (N);\n                end if;\n             end if;\n@@ -1184,8 +1181,7 @@ package body Sem_Elab is\n       --  Nothing to do if this is not a call or attribute reference (happens\n       --  in some error conditions, and in some cases where rewriting occurs).\n \n-      elsif Nkind (N) /= N_Function_Call\n-        and then Nkind (N) /= N_Procedure_Call_Statement\n+      elsif Nkind (N) not in N_Subprogram_Call\n         and then Nkind (N) /= N_Attribute_Reference\n       then\n          return;\n@@ -1510,8 +1506,7 @@ package body Sem_Elab is\n                Func : Entity_Id;\n \n             begin\n-               if (Nkind (Nod) = N_Function_Call\n-                    or else Nkind (Nod) = N_Procedure_Call_Statement)\n+               if Nkind (Nod) in N_Subprogram_Call\n                  and then Is_Entity_Name (Name (Nod))\n                then\n                   Func := Entity (Name (Nod));"}, {"sha": "eda85836d698cbadf67e89906071e19d6f21abc2", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -2144,9 +2144,7 @@ package body Sem_Res is\n                      --  of the arguments is Any_Type, and if so, suppress\n                      --  the message, since it is a cascaded error.\n \n-                     if Nkind_In (N, N_Function_Call,\n-                                     N_Procedure_Call_Statement)\n-                     then\n+                     if Nkind (N) in N_Subprogram_Call then\n                         declare\n                            A : Node_Id;\n                            E : Node_Id;\n@@ -2212,8 +2210,7 @@ package body Sem_Res is\n                              (\"\\\\possible interpretation#!\", N);\n                         end if;\n \n-                        if Nkind_In\n-                             (N, N_Procedure_Call_Statement, N_Function_Call)\n+                        if Nkind (N) in N_Subprogram_Call\n                           and then Present (Parameter_Associations (N))\n                         then\n                            Report_Ambiguous_Argument;\n@@ -2360,7 +2357,7 @@ package body Sem_Res is\n                --  For procedure or function calls, set the type of the name,\n                --  and also the entity pointer for the prefix.\n \n-               elsif Nkind_In (N, N_Procedure_Call_Statement, N_Function_Call)\n+               elsif Nkind (N) in N_Subprogram_Call\n                  and then Is_Entity_Name (Name (N))\n                then\n                   Set_Etype  (Name (N), Expr_Type);\n@@ -2990,8 +2987,7 @@ package body Sem_Res is\n \n          if not Warn_On_Parameter_Order\n            or else No (Parameter_Associations (N))\n-           or else not Nkind_In (Original_Node (N), N_Procedure_Call_Statement,\n-                                                    N_Function_Call)\n+           or else Nkind (Original_Node (N)) not in N_Subprogram_Call\n            or else not Comes_From_Source (N)\n          then\n             return;\n@@ -4223,11 +4219,9 @@ package body Sem_Res is\n          Par : constant Node_Id := Parent (N);\n \n       begin\n-         return\n-           Nkind_In (Par, N_Function_Call,\n-                          N_Procedure_Call_Statement)\n-             and then Is_Entity_Name (Name (Par))\n-             and then Is_Dispatching_Operation (Entity (Name (Par)));\n+         return Nkind (Par) in N_Subprogram_Call\n+           and then Is_Entity_Name (Name (Par))\n+           and then Is_Dispatching_Operation (Entity (Name (Par)));\n       end In_Dispatching_Context;\n \n    --  Start of processing for Resolve_Allocator\n@@ -7749,9 +7743,7 @@ package body Sem_Res is\n          --  In the common case of a call which uses an explicitly null value\n          --  for an access parameter, give specialized error message.\n \n-         if Nkind_In (Parent (N), N_Procedure_Call_Statement,\n-                                  N_Function_Call)\n-         then\n+         if Nkind (Parent (N)) in N_Subprogram_Call then\n             Error_Msg_N\n               (\"null is not allowed as argument for an access parameter\", N);\n "}, {"sha": "b94411a490adf1502b493f3d6725982467d2733f", "filename": "gcc/ada/sem_scil.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_scil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_scil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_scil.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2009-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -59,10 +59,7 @@ package body Sem_SCIL is\n \n             --  Parent of SCIL dispatching call nodes MUST be a subprogram call\n \n-            if not Nkind_In (N, N_Function_Call,\n-                                N_Procedure_Call_Statement)\n-            then\n-               pragma Assert (False);\n+            if Nkind (N) not in N_Subprogram_Call then\n                raise Program_Error;\n \n             --  In simple cases the controlling tag is the tag of the"}, {"sha": "ec50247ef53056d9b415b218e3809b33be2d9dd4", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -481,7 +481,7 @@ package body Sem_Type is\n          then\n             Add_Entry (Entity (N), Etype (N));\n \n-         elsif Nkind_In (N, N_Function_Call, N_Procedure_Call_Statement)\n+         elsif Nkind (N) in N_Subprogram_Call\n            and then Is_Entity_Name (Name (N))\n          then\n             Add_Entry (Entity (Name (N)), Etype (N));\n@@ -1467,9 +1467,7 @@ package body Sem_Type is\n                return It1;\n \n             else\n-               if Nkind (N) = N_Function_Call\n-                 or else Nkind (N) = N_Procedure_Call_Statement\n-               then\n+               if Nkind (N) in N_Subprogram_Call then\n                   Act1 := First_Actual (N);\n \n                   if Present (Act1) then\n@@ -1867,8 +1865,7 @@ package body Sem_Type is\n          elsif In_Instance\n            and then not In_Generic_Actual (N)\n          then\n-            if Nkind (N) = N_Function_Call\n-              or else Nkind (N) = N_Procedure_Call_Statement\n+            if Nkind (N) in N_Subprogram_Call\n               or else\n                 (Nkind (N) in N_Has_Entity\n                   and then"}, {"sha": "3c0e6c4142672a7fef929b9901eaae1260f03455", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -3747,7 +3747,7 @@ package body Sem_Util is\n       then\n          Call := Parent (Parnt);\n \n-      elsif Nkind_In (Parnt, N_Procedure_Call_Statement, N_Function_Call) then\n+      elsif Nkind (Parnt) in N_Subprogram_Call then\n          Call := Parnt;\n \n       else\n@@ -6604,7 +6604,7 @@ package body Sem_Util is\n          when N_Parameter_Association =>\n             return N = Explicit_Actual_Parameter (Parent (N));\n \n-         when N_Function_Call | N_Procedure_Call_Statement =>\n+         when N_Subprogram_Call =>\n             return Is_List_Member (N)\n               and then\n                 List_Containing (N) = Parameter_Associations (Parent (N));\n@@ -8127,9 +8127,8 @@ package body Sem_Util is\n \n    function Is_Remote_Call (N : Node_Id) return Boolean is\n    begin\n-      if Nkind (N) /= N_Procedure_Call_Statement\n-        and then Nkind (N) /= N_Function_Call\n-      then\n+      if Nkind (N) not in N_Subprogram_Call then\n+\n          --  An entry call cannot be remote\n \n          return False;\n@@ -9328,9 +9327,8 @@ package body Sem_Util is\n          --  In older versions of Ada function call arguments are never\n          --  lvalues. In Ada 2012 functions can have in-out parameters.\n \n-         when N_Function_Call            |\n-              N_Procedure_Call_Statement |\n-              N_Entry_Call_Statement     |\n+         when N_Subprogram_Call      |\n+              N_Entry_Call_Statement |\n               N_Accept_Statement\n          =>\n             if Nkind (P) = N_Function_Call and then Ada_Version < Ada_2012 then"}, {"sha": "e41cad4aa61d23224aeed40c7e8c2a076f4a8737", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -511,9 +511,8 @@ package body Sem_Warn is\n \n             --  Call to subprogram\n \n-         elsif Nkind (N) = N_Procedure_Call_Statement\n-           or else Nkind (N) = N_Function_Call\n-         then\n+         elsif Nkind (N) in N_Subprogram_Call then\n+\n             --  If subprogram is within the scope of the entity we are dealing\n             --  with as the loop variable, then it could modify this parameter,\n             --  so we abandon in this case. In the case of a subprogram that is\n@@ -3282,7 +3281,7 @@ package body Sem_Warn is\n \n       --  Exclude calls rewritten as enumeration literals\n \n-      if not Nkind_In (N, N_Function_Call, N_Procedure_Call_Statement) then\n+      if Nkind (N) not in N_Subprogram_Call then\n          return;\n       end if;\n "}, {"sha": "22aea5b8ffe3267f4adeafd8f5c3d9252a227e05", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -7649,11 +7649,17 @@ package Sinfo is\n       N_Conditional_Expression,\n       N_Explicit_Dereference,\n       N_Expression_With_Actions,\n+\n+      --  N_Subexpr, N_Has_Etype, N_Subprogram_Call\n+\n       N_Function_Call,\n+      N_Procedure_Call_Statement,\n+\n+      --  N_Subexpr, N_Has_Etype\n+\n       N_Indexed_Component,\n       N_Integer_Literal,\n       N_Null,\n-      N_Procedure_Call_Statement,\n       N_Qualified_Expression,\n       N_Quantified_Expression,\n \n@@ -8067,6 +8073,10 @@ package Sinfo is\n    --  (since overloading is possible, so it needs to go through the normal\n    --  overloading resolution for expressions).\n \n+   subtype N_Subprogram_Call is Node_Kind range\n+      N_Function_Call ..\n+      N_Procedure_Call_Statement;\n+\n    subtype N_Subprogram_Instantiation is Node_Kind range\n      N_Function_Instantiation ..\n      N_Procedure_Instantiation;"}, {"sha": "8d3b2da3176a48c449f4379fe93bce012ac35c14", "filename": "gcc/ada/stringt.adb", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fstringt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fstringt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.adb?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -70,6 +70,12 @@ package body Stringt is\n    --  when Start_String is called with a parameter that is the last string\n    --  currently allocated in the table.\n \n+   Strings_Last : String_Id := First_String_Id;\n+   String_Chars_Last : Int := 0;\n+   --  Strings_Last and String_Chars_Last are used by procedure Mark and\n+   --  Release to get a snapshot of the tables and to restore them to their\n+   --  previous situation.\n+\n    -------------------------------\n    -- Add_String_To_Name_Buffer --\n    -------------------------------\n@@ -129,6 +135,26 @@ package body Stringt is\n       Strings.Release;\n    end Lock;\n \n+   ----------\n+   -- Mark --\n+   ----------\n+\n+   procedure Mark is\n+   begin\n+      Strings_Last := Strings.Last;\n+      String_Chars_Last := String_Chars.Last;\n+   end Mark;\n+\n+   -------------\n+   -- Release --\n+   -------------\n+\n+   procedure Release is\n+   begin\n+      Strings.Set_Last (Strings_Last);\n+      String_Chars.Set_Last (String_Chars_Last);\n+   end Release;\n+\n    ------------------\n    -- Start_String --\n    ------------------"}, {"sha": "7fb472554a32b0ced5eb9857e29ed03ff3498ed8", "filename": "gcc/ada/stringt.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fstringt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b00ce368f3d32a4db4dac4538a90920f6365ef/gcc%2Fada%2Fstringt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.ads?ref=d3b00ce368f3d32a4db4dac4538a90920f6365ef", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,6 +62,14 @@ package Stringt is\n    procedure Unlock;\n    --  Unlock internal tables, in case back end needs to modify them\n \n+   procedure Mark;\n+   --  Take a snapshot of the internal tables\n+\n+   procedure Release;\n+   --  Restore the internal tables to the situation when Mark was last called.\n+   --  Mark and Release are used when getting checksums of sources in minimal\n+   --  recompilation mode, to reduce memory usage.\n+\n    procedure Start_String;\n    --  Sets up for storing a new string in the table. To store a string, a\n    --  call is first made to Start_String, then successive calls are"}]}