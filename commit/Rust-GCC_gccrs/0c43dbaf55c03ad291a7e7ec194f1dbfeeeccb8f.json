{"sha": "0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM0M2RiYWY1NWMwM2FkMjkxYTdlN2VjMTk0ZjFkYmZlZWVjY2I4Zg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-07-28T21:57:10Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-07-28T21:57:10Z"}, "message": "Fix PR48648: Handle CLAST assignments.\n\nThe CLAST produced by CLooG-ISL contains an assignment and GCC chokes\non it.  The exact CLAST contains an assignment followed by an if:\n\nscat_1 = max(0,ceild(T_4-7,8));\nif (scat_1 <= min(1,floord(T_4-1,8))) {\n  S7(scat_1);\n}\n\nThis is equivalent to a loop that iterates only once, and so CLooG\ngenerates an assignment followed by an if instead of a loop.  This is\nan important optimization that was improved in ISL, that allows\nif-conversion: imagine GCC having to figure out that a loop like the\nfollowing actually iterates only once, and can be converted to an if:\n\nfor (scat_1 = max(0,ceild(T_4-7,8)); scat_1 <= min(1,floord(T_4-1,8)); scat_1++)\n  S7(scat_1);\n\nThis patch implements the translation of CLAST assignments.\nBootstrapped and tested on amd64-linux.\n\n2011-07-28  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/48648\n\t* graphite-clast-to-gimple.c (clast_get_body_of_loop): Handle\n\tCLAST assignments.\n\t(translate_clast): Same.\n\t(translate_clast_assignment): New.\n\n\t* gcc.dg/graphite/id-pr48648.c: New.\n\nFrom-SVN: r176901", "tree": {"sha": "adedfaa081857b376c9af1d96d2fd476435693f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adedfaa081857b376c9af1d96d2fd476435693f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60cf26cce26d2e1183c65775e5793fe1ef22a723", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60cf26cce26d2e1183c65775e5793fe1ef22a723", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60cf26cce26d2e1183c65775e5793fe1ef22a723"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "b07bed5bbb02f9eea33917983f1d4b263d2d196f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f", "patch": "@@ -1,3 +1,11 @@\n+2011-07-28  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/48648\n+\t* graphite-clast-to-gimple.c (clast_get_body_of_loop): Handle\n+\tCLAST assignments.\n+\t(translate_clast): Same.\n+\t(translate_clast_assignment): New.\n+\n 2011-07-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR tree-optimization/49876"}, {"sha": "7bb1d232282b42fac7ca9a6fe6444060df1e12d3", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f", "patch": "@@ -816,6 +816,9 @@ clast_get_body_of_loop (struct clast_stmt *stmt)\n   if (CLAST_STMT_IS_A (stmt, stmt_block))\n     return clast_get_body_of_loop (((struct clast_block *) stmt)->body);\n \n+  if (CLAST_STMT_IS_A (stmt, stmt_ass))\n+    return clast_get_body_of_loop (stmt->next);\n+\n   gcc_unreachable ();\n }\n \n@@ -1125,6 +1128,44 @@ translate_clast_for (loop_p context_loop, struct clast_for *stmt, edge next_e,\n   return last_e;\n }\n \n+/* Translates a clast assignment STMT to gimple.\n+\n+   - NEXT_E is the edge where new generated code should be attached.\n+   - BB_PBB_MAPPING is is a basic_block and it's related poly_bb_p mapping.  */\n+\n+static edge\n+translate_clast_assignment (struct clast_assignment *stmt, edge next_e,\n+\t\t\t    int level, ivs_params_p ip)\n+{\n+  gimple_seq stmts;\n+  mpz_t v1, v2;\n+  tree type, new_name, var;\n+  edge res = single_succ_edge (split_edge (next_e));\n+  struct clast_expr *expr = (struct clast_expr *) stmt->RHS;\n+\n+  mpz_init (v1);\n+  mpz_init (v2);\n+  type = type_for_clast_expr (expr, ip, v1, v2);\n+  var = create_tmp_var (type, \"graphite_var\");\n+  new_name = force_gimple_operand (clast_to_gcc_expression (type, expr, ip),\n+\t\t\t\t   &stmts, true, var);\n+  add_referenced_var (var);\n+  if (stmts)\n+    {\n+      gsi_insert_seq_on_edge (next_e, stmts);\n+      gsi_commit_edge_inserts ();\n+    }\n+\n+  save_clast_name_index (ip->newivs_index, stmt->LHS,\n+\t\t\t VEC_length (tree, *(ip->newivs)), level, v1, v2);\n+  VEC_safe_push (tree, heap, *(ip->newivs), new_name);\n+\n+  mpz_clear (v1);\n+  mpz_clear (v2);\n+\n+  return res;\n+}\n+\n /* Translates a clast guard statement STMT to gimple.\n \n    - NEXT_E is the edge where new generated code should be attached.\n@@ -1175,6 +1216,10 @@ translate_clast (loop_p context_loop, struct clast_stmt *stmt, edge next_e,\n   else if (CLAST_STMT_IS_A (stmt, stmt_block))\n     next_e = translate_clast (context_loop, ((struct clast_block *) stmt)->body,\n \t\t\t      next_e, bb_pbb_mapping, level, ip);\n+\n+  else if (CLAST_STMT_IS_A (stmt, stmt_ass))\n+    next_e = translate_clast_assignment ((struct clast_assignment *) stmt,\n+\t\t\t\t\t next_e, level, ip);\n   else\n     gcc_unreachable();\n "}, {"sha": "85daf9f7092b388ac9525f30c3b8c0e12068665b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f", "patch": "@@ -1,3 +1,8 @@\n+2011-07-22  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/48648\n+\t* gcc.dg/graphite/id-pr48648.c: New.\n+\n 2011-07-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/31067"}, {"sha": "ff58ec23b4d6cc9c7c649d05fb30b6503d1c01d8", "filename": "gcc/testsuite/gcc.dg/graphite/id-pr48648.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-pr48648.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-pr48648.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-pr48648.c?ref=0c43dbaf55c03ad291a7e7ec194f1dbfeeeccb8f", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-options \"-O -fgraphite-identity\" } */\n+\n+void *foo(const void *a);\n+\n+void bug48648()\n+{\n+  unsigned char a[2];\n+  long b;\n+  int i;\n+\n+  for(i = 0; i < 2; i++) {\n+    if (b <= 0)\n+      a[i] = 0;\n+    else if (b >= 8)\n+      a[i] = 0;\n+    else\n+      a[i] = 0;\n+    b -= 8;\n+  }\n+  foo(&a);\n+}"}]}