{"sha": "be5e69085cb3f29164e018e674cf0eb075989f0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU1ZTY5MDg1Y2IzZjI5MTY0ZTAxOGU2NzRjZjBlYjA3NTk4OWYwYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-11-17T01:43:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-11-17T01:43:19Z"}, "message": "call.c (convert_like_real): Don't make a temp for copy-list-init.\n\n\t* call.c (convert_like_real): Don't make a temp for copy-list-init.\n\t(build_over_call): Don't handle that here.\n\t(build_new_method_call): Use COMPLETE_OR_OPEN_TYPE_P for error.\n\nFrom-SVN: r166852", "tree": {"sha": "7920fdf218d6fb83f502596ed638203907ac71cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7920fdf218d6fb83f502596ed638203907ac71cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be5e69085cb3f29164e018e674cf0eb075989f0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5e69085cb3f29164e018e674cf0eb075989f0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be5e69085cb3f29164e018e674cf0eb075989f0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5e69085cb3f29164e018e674cf0eb075989f0c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66753821b5fd89c3fc5711240ecd7a3230586bf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66753821b5fd89c3fc5711240ecd7a3230586bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66753821b5fd89c3fc5711240ecd7a3230586bf2"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "8c76af67bcd39e0188bd577fccb854ec7d912aa9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5e69085cb3f29164e018e674cf0eb075989f0c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5e69085cb3f29164e018e674cf0eb075989f0c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=be5e69085cb3f29164e018e674cf0eb075989f0c", "patch": "@@ -1,5 +1,9 @@\n 2010-11-16  Jason Merrill  <jason@redhat.com>\n \n+\t* call.c (convert_like_real): Don't make a temp for copy-list-init.\n+\t(build_over_call): Don't handle that here.\n+\t(build_new_method_call): Use COMPLETE_OR_OPEN_TYPE_P for error.\n+\n \tPR c++/46497\n \t* call.c (build_over_call): Check for =delete even when trivial.\n "}, {"sha": "5e74bd237f56910ac645272842aa41bc93f0f56f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5e69085cb3f29164e018e674cf0eb075989f0c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5e69085cb3f29164e018e674cf0eb075989f0c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=be5e69085cb3f29164e018e674cf0eb075989f0c", "patch": "@@ -5290,6 +5290,10 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t   conversion (i.e. the second step of copy-initialization), so\n \t   don't allow any more.  */\n \tflags |= LOOKUP_NO_CONVERSION;\n+      if (TREE_CODE (expr) == TARGET_EXPR\n+\t  && TARGET_EXPR_LIST_INIT_P (expr))\n+\t/* Copy-list-initialization doesn't actually involve a copy.  */\n+\treturn expr;\n       expr = build_temp (expr, totype, flags, &diag_kind, complain);\n       if (diag_kind && fn)\n \t{\n@@ -6049,15 +6053,9 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n       else\n \targ = cp_build_indirect_ref (arg, RO_NULL, complain);\n \n-      if (TREE_CODE (arg) == TARGET_EXPR\n-\t  && TARGET_EXPR_LIST_INIT_P (arg))\n-\t{\n-\t  /* Copy-list-initialization doesn't require the constructor\n-\t     to be defined.  */\n-\t}\n       /* [class.copy]: the copy constructor is implicitly defined even if\n \t the implementation elided its use.  */\n-      else if (!trivial || DECL_DELETED_FN (fn))\n+      if (!trivial || DECL_DELETED_FN (fn))\n \t{\n \t  mark_used (fn);\n \t  already_used = true;\n@@ -6641,7 +6639,7 @@ build_new_method_call (tree instance, tree fns, VEC(tree,gc) **args,\n     {\n       if (complain & tf_error)\n \t{\n-\t  if (!COMPLETE_TYPE_P (basetype))\n+\t  if (!COMPLETE_OR_OPEN_TYPE_P (basetype))\n \t    cxx_incomplete_type_error (instance_ptr, basetype);\n \t  else if (optype)\n \t    error (\"no matching function for call to %<%T::operator %T(%A)%#V%>\","}]}