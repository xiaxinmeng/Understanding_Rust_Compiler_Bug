{"sha": "90f3520ea50cee07c83bd51a1eced989915a8523", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBmMzUyMGVhNTBjZWUwN2M4M2JkNTFhMWVjZWQ5ODk5MTVhODUyMw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-10-24T16:29:56Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-24T16:29:56Z"}, "message": "re PR c/56980 (C pretty-printer does not handle well pointer to typedef of struct)\n\n\tPR c/56980\n\t* c-pretty-print.c (c_pretty_printer::simple_type_specifier): Don't\n\tprint \"struct\"/\"union\"/\"enum\" for typedefed names.\n\n\t* gcc.dg/pr56980.c: New test.\n\nFrom-SVN: r216674", "tree": {"sha": "3825e01b2814f972b29c284a1989ce1e281e6078", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3825e01b2814f972b29c284a1989ce1e281e6078"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90f3520ea50cee07c83bd51a1eced989915a8523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f3520ea50cee07c83bd51a1eced989915a8523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90f3520ea50cee07c83bd51a1eced989915a8523", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f3520ea50cee07c83bd51a1eced989915a8523/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "820aecbf23385cd7c2acc8247dee468e02eeb8e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820aecbf23385cd7c2acc8247dee468e02eeb8e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/820aecbf23385cd7c2acc8247dee468e02eeb8e7"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "fb0e63bc7b403012fddbed7936248321cc7e7cd9", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f3520ea50cee07c83bd51a1eced989915a8523/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f3520ea50cee07c83bd51a1eced989915a8523/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=90f3520ea50cee07c83bd51a1eced989915a8523", "patch": "@@ -1,3 +1,9 @@\n+2014-10-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/56980\n+\t* c-pretty-print.c (c_pretty_printer::simple_type_specifier): Don't\n+\tprint \"struct\"/\"union\"/\"enum\" for typedefed names.\n+\n 2014-10-23  Marek Polacek  <polacek@redhat.com>\n \n \t* c-ubsan.c (ubsan_instrument_shift): Perform the MINUS_EXPR"}, {"sha": "a4dd93d2a7396df1a3eea092f74a38a799c72d2e", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f3520ea50cee07c83bd51a1eced989915a8523/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f3520ea50cee07c83bd51a1eced989915a8523/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=90f3520ea50cee07c83bd51a1eced989915a8523", "patch": "@@ -416,7 +416,9 @@ c_pretty_printer::simple_type_specifier (tree t)\n     case UNION_TYPE:\n     case RECORD_TYPE:\n     case ENUMERAL_TYPE:\n-      if (code == UNION_TYPE)\n+      if (TYPE_NAME (t) && TREE_CODE (TYPE_NAME (t)) == TYPE_DECL)\n+\t/* Don't decorate the type if this is a typedef name.  */;\n+      else if (code == UNION_TYPE)\n \tpp_c_ws_string (this, \"union\");\n       else if (code == RECORD_TYPE)\n \tpp_c_ws_string (this, \"struct\");"}, {"sha": "39d48718924912965ad8b17d0d15ed6bc40de2b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f3520ea50cee07c83bd51a1eced989915a8523/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f3520ea50cee07c83bd51a1eced989915a8523/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90f3520ea50cee07c83bd51a1eced989915a8523", "patch": "@@ -1,3 +1,8 @@\n+2014-10-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/56980\n+\t* gcc.dg/pr56980.c: New test.\n+\n 2014-10-24  Jiong Wang  <jiong.wang@arm.com>\n \n \t* lib/target-supports.exp"}, {"sha": "f48379a79ec2ba7abf17e242867f994f4f75a3da", "filename": "gcc/testsuite/gcc.dg/pr56980.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f3520ea50cee07c83bd51a1eced989915a8523/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56980.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f3520ea50cee07c83bd51a1eced989915a8523/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56980.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56980.c?ref=90f3520ea50cee07c83bd51a1eced989915a8523", "patch": "@@ -0,0 +1,24 @@\n+/* PR c/56980 */\n+/* { dg-do compile } */\n+\n+typedef struct A { int i; } B;\n+typedef union U { int i; } V;\n+typedef enum E { G } F;\n+\n+void foo_s (struct A); /* { dg-message \"expected .struct A. but argument is of type .B \\\\*.\" } */\n+void foo_u (union U); /* { dg-message \"expected .union U. but argument is of type .V \\\\*.\" } */\n+void foo_e (enum E); /* { dg-message \"expected .enum E. but argument is of type .F \\\\*.\" } */\n+void foo_sp (B *); /* { dg-message \"expected .B \\\\*. but argument is of type .struct B \\\\*.\" } */\n+void foo_up (V *); /* { dg-message \"expected .V \\\\*. but argument is of type .union V \\\\*.\" } */\n+void foo_ep (F *); /* { dg-message \"expected .F \\\\*. but argument is of type .enum F \\\\*.\" } */\n+\n+void \n+bar (B *b, V *v, F *f)\n+{\n+  foo_s (b); /* { dg-error \"incompatible\" } */\n+  foo_u (v); /* { dg-error \"incompatible\" } */\n+  foo_e (f); /* { dg-error \"incompatible\" } */\n+  foo_sp ((struct B *) b); /* { dg-error \"passing argument\" } */\n+  foo_up ((union V *) v); /* { dg-error \"passing argument\" } */\n+  foo_ep (__extension__ (enum F *) f); /* { dg-error \"passing argument\" } */\n+}"}]}