{"sha": "e47c403137a6c1de1676543d0bb031ec8cb4ecc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ3YzQwMzEzN2E2YzFkZTE2NzY1NDNkMGJiMDMxZWM4Y2I0ZWNjNA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-07-28T11:00:07Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-07-28T11:00:07Z"}, "message": "[AArch64] Properly handle simple arith+extend ops in rtx costs\n\n\t* config/aarch64/aarch64.c (aarch64_rtx_arith_op_extract_p):\n\tHandle simple SIGN_EXTEND or ZERO_EXTEND.\n\t(aarch64_rtx_costs): Properly strip extend or extract before\n\tpassing down to rtx costs again.\n\nFrom-SVN: r226309", "tree": {"sha": "59e2c29f80f3d316d619c6d45f3d898e8f714f53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59e2c29f80f3d316d619c6d45f3d898e8f714f53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e47c403137a6c1de1676543d0bb031ec8cb4ecc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e47c403137a6c1de1676543d0bb031ec8cb4ecc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e47c403137a6c1de1676543d0bb031ec8cb4ecc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e47c403137a6c1de1676543d0bb031ec8cb4ecc4/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b1cbcee3e1725c7796ad8c55a84a7a95ab77871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1cbcee3e1725c7796ad8c55a84a7a95ab77871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1cbcee3e1725c7796ad8c55a84a7a95ab77871"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "54a0da3237f8a8ae1e6168362af307dee125d9ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47c403137a6c1de1676543d0bb031ec8cb4ecc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47c403137a6c1de1676543d0bb031ec8cb4ecc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e47c403137a6c1de1676543d0bb031ec8cb4ecc4", "patch": "@@ -1,3 +1,10 @@\n+2015-07-28  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_rtx_arith_op_extract_p):\n+\tHandle simple SIGN_EXTEND or ZERO_EXTEND.\n+\t(aarch64_rtx_costs): Properly strip extend or extract before\n+\tpassing down to rtx costs again.\n+\n 2015-07-28  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_addsi3_internal): New function."}, {"sha": "9ba16297c3aaf29c478db9d8533ee5e1494f7c71", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47c403137a6c1de1676543d0bb031ec8cb4ecc4/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47c403137a6c1de1676543d0bb031ec8cb4ecc4/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e47c403137a6c1de1676543d0bb031ec8cb4ecc4", "patch": "@@ -5617,6 +5617,11 @@ aarch64_rtx_arith_op_extract_p (rtx x, machine_mode mode)\n \t  return true;\n \t}\n     }\n+  /* The simple case <ARITH>, XD, XN, XM, [us]xt.\n+     No shift.  */\n+  else if (GET_CODE (x) == SIGN_EXTEND\n+\t   || GET_CODE (x) == ZERO_EXTEND)\n+    return REG_P (XEXP (x, 0));\n \n   return false;\n }\n@@ -6128,7 +6133,8 @@ aarch64_rtx_costs (rtx x, machine_mode mode, int outer ATTRIBUTE_UNUSED,\n \t    if (speed)\n \t      *cost += extra_cost->alu.extend_arith;\n \n-\t    *cost += rtx_cost (XEXP (XEXP (op1, 0), 0), VOIDmode,\n+\t    op1 = aarch64_strip_extend (op1);\n+\t    *cost += rtx_cost (op1, VOIDmode,\n \t\t\t       (enum rtx_code) GET_CODE (op1), 0, speed);\n \t    return true;\n \t  }\n@@ -6206,7 +6212,8 @@ aarch64_rtx_costs (rtx x, machine_mode mode, int outer ATTRIBUTE_UNUSED,\n \t    if (speed)\n \t      *cost += extra_cost->alu.extend_arith;\n \n-\t    *cost += rtx_cost (XEXP (XEXP (op0, 0), 0), VOIDmode,\n+\t    op0 = aarch64_strip_extend (op0);\n+\t    *cost += rtx_cost (op0, VOIDmode,\n \t\t\t       (enum rtx_code) GET_CODE (op0), 0, speed);\n \t    return true;\n \t  }"}]}