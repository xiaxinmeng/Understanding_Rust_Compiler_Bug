{"sha": "f4a7f981b6a774b1c809b300c27a9a13510930fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRhN2Y5ODFiNmE3NzRiMWM4MDliMzAwYzI3YTlhMTM1MTA5MzBmYQ==", "commit": {"author": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-11-20T09:00:31Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-11-20T09:00:31Z"}, "message": "Regenerated.\n\nFrom-SVN: r23734", "tree": {"sha": "38fe5993e1b028bd85df6ed7807879811416dd1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38fe5993e1b028bd85df6ed7807879811416dd1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4a7f981b6a774b1c809b300c27a9a13510930fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a7f981b6a774b1c809b300c27a9a13510930fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4a7f981b6a774b1c809b300c27a9a13510930fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a7f981b6a774b1c809b300c27a9a13510930fa/comments", "author": null, "committer": null, "parents": [{"sha": "58dd1c34a06b74f8d28f31fd1514bb3b6cb4df87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58dd1c34a06b74f8d28f31fd1514bb3b6cb4df87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58dd1c34a06b74f8d28f31fd1514bb3b6cb4df87"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "703393f609aed5ece7b3d7bde47ce3a6296630fc", "filename": "gcc/f/BUGS", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a7f981b6a774b1c809b300c27a9a13510930fa/gcc%2Ff%2FBUGS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a7f981b6a774b1c809b300c27a9a13510930fa/gcc%2Ff%2FBUGS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FBUGS?ref=f4a7f981b6a774b1c809b300c27a9a13510930fa", "patch": "@@ -44,6 +44,10 @@ port, build, and install `g77', *Note Problems Installing::.\n \n      Fixed in `egcs' version 1.1.\n \n+   * `g77' fails to warn about use of a \"live\" iterative-DO variable as\n+     an implied-DO variable in a `WRITE' or `PRINT' statement (although\n+     it does warn about this in a `READ' statement).\n+\n    * A compiler crash, or apparently infinite run time, can result when\n      compiling complicated expressions involving `COMPLEX' arithmetic\n      (especially multiplication).\n@@ -144,27 +148,26 @@ port, build, and install `g77', *Note Problems Installing::.\n      0.6 should solve most or all remaining problems (such as\n      cross-compiling involving 64-bit machines).\n \n-   * Maintainers of gcc report that the back end definitely has \"broken\"\n-     support for `COMPLEX' types.  Based on their input, it seems many\n-     of the problems affect only the more-general facilities for gcc's\n-     `__complex__' type, such as `__complex__ int' (where the real and\n-     imaginary parts are integers) that GNU Fortran does not use.\n+   * Maintainers of `gcc' report that the back end definitely has\n+     \"broken\" support for `COMPLEX' types.  Based on their input, it\n+     seems many of the problems affect only the more-general facilities\n+     for gcc's `__complex__' type, such as `__complex__ int' (where the\n+     real and imaginary parts are integers) that GNU Fortran does not\n+     use.\n \n      Version 0.5.20 of `g77' works around this problem by not using the\n      back end's support for `COMPLEX'.  The new option\n      `-fno-emulate-complex' avoids the work-around, reverting to using\n      the same \"broken\" mechanism as that used by versions of `g77'\n      prior to 0.5.20.\n \n-   * There seem to be some problems with passing constants, and perhaps\n-     general expressions (other than simple variables/arrays), to\n-     procedures when compiling on some systems (such as i386) with\n-     `-fPIC', as in when compiling for ELF targets.  The symptom is\n-     that the assembler complains about invalid opcodes.  This bug is\n-     in the gcc back end, and it apparently occurs only when compiling\n-     sufficiently complicated functions *without* the `-O' option.\n+   * `g77' sometimes produces invalid assembler code when using the\n+     `-fPIC' option (such as compiling for ELF targets) on the Intel\n+     x86 architecture target.  The symptom is that the assembler\n+     complains about invalid opcodes.  This bug is in the `gcc' back\n+     end.\n \n-     Fixed in `egcs' version 1.1.\n+     Fixed in `egcs' version 1.0.2.\n \n    * `g77' currently inserts needless padding for things like `COMMON\n      A,IPAD' where `A' is `CHARACTER*1' and `IPAD' is `INTEGER(KIND=1)'"}]}