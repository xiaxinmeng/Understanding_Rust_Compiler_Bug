{"sha": "ed09416ff9ab07e5491373e9af15563b0a0def34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQwOTQxNmZmOWFiMDdlNTQ5MTM3M2U5YWYxNTU2M2IwYTBkZWYzNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T10:22:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T10:22:51Z"}, "message": "[multiple changes]\n\n2015-01-07  Robert Dewar  <dewar@adacore.com>\n\n\t* s-taprop-linux.adb, clean.adb: Minor reformatting.\n\n2015-01-07  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-tassta.adb: Relax some overzealous assertions.\n\n2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Return_Type): An call that returns a limited\n\tview of a type is legal when context is a thunk generated for\n\toperation inherited from an interface.\n\t* exp_ch6.adb (Expand_Simple_Function_Return): If context is\n\ta thunk and return type is an incomplete type do not continue\n\texpansion; thunk will be fully elaborated when generating code.\n\n2015-01-07  Doug Rupp  <rupp@adacore.com>\n\n\t* s-osinte-mingw.ads (LARGE_INTEGR): New subtype.\n\t(QueryPerformanceFrequency): New imported procedure.\n\t* s-taprop-mingw.adb (RT_Resolution): Call above and return\n\tresolution vice a hardcoded value.\n\t* s-taprop-solaris.adb (RT_Resolution): Call clock_getres and return\n\tresolution vice a hardcoded value.\n\t* s-linux-android.ads (clockid_t): New subtype.\n\t* s-osinte-aix.ads (clock_getres): New imported subprogram.\n\t* s-osinte-android.ads (clock_getres): Likewise.\n\t* s-osinte-freebsd.ads (clock_getres): Likewise.\n\t* s-osinte-solaris-posix.ads (clock_getres): Likewise.\n\t* s-osinte-darwin.ads (clock_getres): New subprogram.\n\t* s-osinte-darwin.adb (clock_getres): New subprogram.\n\t* thread.c (__gnat_clock_get_res) [__APPLE__]: New function.\n\t* s-taprop-posix.adb (RT_Resolution): Call clock_getres to\n\tcalculate resolution vice hard coded value.\n\n2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_util.adb (Make_CW_Equivalent_Type): If root type is a\n\tlimited view, use non-limited view when available to create\n\tequivalent record type.\n\n2015-01-07  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb: Remove command Sync and any data and processing\n\trelated to this command. Remove project processing for gnatstack.\n\t* prj-attr.adb: Remove package Synchonize and its attributes.\n\nFrom-SVN: r219291", "tree": {"sha": "92e7f939154e78a6d1f27eeeb657dea9a7317fb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92e7f939154e78a6d1f27eeeb657dea9a7317fb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed09416ff9ab07e5491373e9af15563b0a0def34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed09416ff9ab07e5491373e9af15563b0a0def34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed09416ff9ab07e5491373e9af15563b0a0def34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed09416ff9ab07e5491373e9af15563b0a0def34/comments", "author": null, "committer": null, "parents": [{"sha": "6a989c79d4ac94a8922e97523ff13965ed5b0283", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a989c79d4ac94a8922e97523ff13965ed5b0283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a989c79d4ac94a8922e97523ff13965ed5b0283"}], "stats": {"total": 984, "additions": 331, "deletions": 653}, "files": [{"sha": "a422194de6f8889af813ff5ab4ba32db47e583cc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -1,3 +1,51 @@\n+2015-01-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-taprop-linux.adb, clean.adb: Minor reformatting.\n+\n+2015-01-07  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-tassta.adb: Relax some overzealous assertions.\n+\n+2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Return_Type): An call that returns a limited\n+\tview of a type is legal when context is a thunk generated for\n+\toperation inherited from an interface.\n+\t* exp_ch6.adb (Expand_Simple_Function_Return): If context is\n+\ta thunk and return type is an incomplete type do not continue\n+\texpansion; thunk will be fully elaborated when generating code.\n+\n+2015-01-07  Doug Rupp  <rupp@adacore.com>\n+\n+\t* s-osinte-mingw.ads (LARGE_INTEGR): New subtype.\n+\t(QueryPerformanceFrequency): New imported procedure.\n+\t* s-taprop-mingw.adb (RT_Resolution): Call above and return\n+\tresolution vice a hardcoded value.\n+\t* s-taprop-solaris.adb (RT_Resolution): Call clock_getres and return\n+\tresolution vice a hardcoded value.\n+\t* s-linux-android.ads (clockid_t): New subtype.\n+\t* s-osinte-aix.ads (clock_getres): New imported subprogram.\n+\t* s-osinte-android.ads (clock_getres): Likewise.\n+\t* s-osinte-freebsd.ads (clock_getres): Likewise.\n+\t* s-osinte-solaris-posix.ads (clock_getres): Likewise.\n+\t* s-osinte-darwin.ads (clock_getres): New subprogram.\n+\t* s-osinte-darwin.adb (clock_getres): New subprogram.\n+\t* thread.c (__gnat_clock_get_res) [__APPLE__]: New function.\n+\t* s-taprop-posix.adb (RT_Resolution): Call clock_getres to\n+\tcalculate resolution vice hard coded value.\n+\n+2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_util.adb (Make_CW_Equivalent_Type): If root type is a\n+\tlimited view, use non-limited view when available to create\n+\tequivalent record type.\n+\n+2015-01-07  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb: Remove command Sync and any data and processing\n+\trelated to this command. Remove project processing for gnatstack.\n+\t* prj-attr.adb: Remove package Synchonize and its attributes.\n+\n 2015-01-07  Vincent Celier  <celier@adacore.com>\n \n \t* clean.adb: Minor error message change."}, {"sha": "6a7f7fa275b8d8d318a169cc99a989ec964e9263", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -897,9 +897,9 @@ package body Clean is\n                      --  object directory.\n \n                      if (Unit.File_Names (Impl) /= null\n-                         and then\n-                           In_Extension_Chain\n-                             (Unit.File_Names (Impl).Project, Project))\n+                          and then\n+                            In_Extension_Chain\n+                              (Unit.File_Names (Impl).Project, Project))\n                        or else\n                          (Unit.File_Names (Spec) /= null\n                            and then\n@@ -1387,8 +1387,8 @@ package body Clean is\n \n          if Project_File_Name /= null then\n             Put_Line\n-              (\"warning: gnatclean -P is obsolete and will not be available \" &\n-               \"in the next release; use gprclean instead.\");\n+              (\"warning: gnatclean -P is obsolete and will not be available \"\n+               & \"in the next release; use gprclean instead.\");\n          end if;\n \n          --  A project file was specified by a -P switch\n@@ -1655,8 +1655,9 @@ package body Clean is\n \n                   case Arg (2) is\n                      when '-' =>\n-                        if Arg'Length > Subdirs_Option'Length and then\n-                          Arg (1 .. Subdirs_Option'Length) = Subdirs_Option\n+                        if Arg'Length > Subdirs_Option'Length\n+                          and then\n+                            Arg (1 .. Subdirs_Option'Length) = Subdirs_Option\n                         then\n                            Subdirs :=\n                              new String'\n@@ -1790,7 +1791,8 @@ package body Clean is\n                            declare\n                               Prj : constant String := Arg (3 .. Arg'Last);\n                            begin\n-                              if Prj'Length > 1 and then Prj (Prj'First) = '='\n+                              if Prj'Length > 1\n+                                 and then Prj (Prj'First) = '='\n                               then\n                                  Project_File_Name :=\n                                    new String'"}, {"sha": "e4d45883ac9d84da6b28eb643a1fed25ee289fe9", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -5914,6 +5914,14 @@ package body Exp_Ch6 is\n       elsif Is_Thunk (Current_Scope) and then Is_Interface (Exptyp) then\n          null;\n \n+      --  If the call is within a thunk and the type is a limited view, the\n+      --  backend will eventually see the non-limited view of the type.\n+\n+      elsif Is_Thunk (Current_Scope)\n+         and then Is_Incomplete_Type (Exptyp)\n+      then\n+         return;\n+\n       elsif not Requires_Transient_Scope (R_Type) then\n \n          --  Mutable records with no variable length components are not"}, {"sha": "ed320cdde082c2bba30ee808cb93f00f4d24ad49", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -6074,6 +6074,16 @@ package body Exp_Util is\n         or else Is_Constrained (Root_Typ)\n       then\n          Constr_Root := Root_Typ;\n+\n+         --  At this point in the expansion, non-limited view of the type\n+         --  must be available, otherwise the error will be reported later.\n+\n+         if From_Limited_With (Constr_Root)\n+           and then Present (Non_Limited_View (Constr_Root))\n+         then\n+            Constr_Root := Non_Limited_View (Constr_Root);\n+         end if;\n+\n       else\n          Constr_Root := Make_Temporary (Loc, 'R');\n "}, {"sha": "33c4be2bff155cff9323b79b5a525fd2dc9ce6f7", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 118, "deletions": 624, "changes": 742, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -30,7 +30,6 @@ with Gnatvsn;\n with Makeutl;  use Makeutl;\n with MLib.Tgt; use MLib.Tgt;\n with MLib.Utl;\n-with MLib.Fil;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Osint;    use Osint;\n@@ -70,7 +69,6 @@ procedure GNATCmd is\n       Clean,\n       Compile,\n       Check,\n-      Sync,\n       Elim,\n       Find,\n       Krunch,\n@@ -107,9 +105,6 @@ procedure GNATCmd is\n    Current_Verbosity : Prj.Verbosity := Prj.Default;\n    Tool_Package_Name : Name_Id       := No_Name;\n \n-   B_Start : constant String := \"b~\";\n-   --  Prefix of binder generated file\n-\n    Project_Tree : constant Project_Tree_Ref :=\n                     new Project_Tree_Data (Is_Root_Tree => True);\n    --  The project tree\n@@ -174,20 +169,14 @@ procedure GNATCmd is\n \n    Naming_String      : constant SA := new String'(\"naming\");\n    Binder_String      : constant SA := new String'(\"binder\");\n-   Compiler_String    : constant SA := new String'(\"compiler\");\n-   Synchronize_String : constant SA := new String'(\"synchronize\");\n    Finder_String      : constant SA := new String'(\"finder\");\n    Linker_String      : constant SA := new String'(\"linker\");\n    Gnatls_String      : constant SA := new String'(\"gnatls\");\n-   Stack_String       : constant SA := new String'(\"stack\");\n    Xref_String        : constant SA := new String'(\"cross_reference\");\n \n    Packages_To_Check_By_Binder   : constant String_List_Access :=\n      new String_List'((Naming_String, Binder_String));\n \n-   Packages_To_Check_By_Sync : constant String_List_Access :=\n-     new String_List'((Naming_String, Synchronize_String, Compiler_String));\n-\n    Packages_To_Check_By_Finder    : constant String_List_Access :=\n      new String_List'((Naming_String, Finder_String));\n \n@@ -197,9 +186,6 @@ procedure GNATCmd is\n    Packages_To_Check_By_Gnatls    : constant String_List_Access :=\n      new String_List'((Naming_String, Gnatls_String));\n \n-   Packages_To_Check_By_Stack     : constant String_List_Access :=\n-     new String_List'((Naming_String, Stack_String));\n-\n    Packages_To_Check_By_Xref      : constant String_List_Access :=\n      new String_List'((Naming_String, Xref_String));\n \n@@ -222,9 +208,9 @@ procedure GNATCmd is\n    --  The path of the working directory\n \n    All_Projects : Boolean := False;\n-   --  Flag used for GNAT CHECK, GNAT PRETTY, GNAT METRIC, and GNAT STACK to\n-   --  indicate that the underlying tool (gnatcheck, gnatpp or gnatmetric)\n-   --  should be invoked for all sources of all projects.\n+   --  Flag used for GNAT CHECK, GNAT PRETTY and GNAT METRIC to indicate that\n+   --  the underlying tool (gnatcheck, gnatpp or gnatmetric) should be invoked\n+   --  for all sources of all projects.\n \n    type Command_Entry is record\n       Cname : String_Access;\n@@ -265,11 +251,6 @@ procedure GNATCmd is\n          Unixcmd  => new String'(\"gnatcheck\"),\n          Unixsws  => null),\n \n-      Sync =>\n-        (Cname    => new String'(\"SYNC\"),\n-         Unixcmd  => new String'(\"gnatsync\"),\n-         Unixsws  => null),\n-\n       Elim =>\n         (Cname    => new String'(\"ELIM\"),\n          Unixcmd  => new String'(\"gnatelim\"),\n@@ -345,35 +326,18 @@ procedure GNATCmd is\n    -- Local Subprograms --\n    -----------------------\n \n-   procedure Add_To_Carg_Switches (Switch : String_Access);\n-   --  Add a switch to the Carg_Switches table. If it is the first one, put the\n-   --  switch \"-cargs\" at the beginning of the table.\n-\n    procedure Check_Files;\n-   --  For GNAT LIST, GNAT PRETTY, GNAT METRIC, and GNAT STACK, check if a\n-   --  project file is specified, without any file arguments and without a\n-   --  switch -files=. If it is the case, invoke the GNAT tool with the proper\n-   --  list of files, derived from the sources of the project.\n-\n-   function Check_Project\n-     (Project      : Project_Id;\n-      Root_Project : Project_Id) return Boolean;\n-   --  Returns True if Project = Root_Project or if we want to consider all\n-   --  sources of all projects. For GNAT METRIC, also returns True if Project\n-   --  is extended by Root_Project.\n+   --  For GNAT LIST, GNAT PRETTY and GNAT METRIC, check if a project file\n+   --  is specified, without any file arguments and without a switch -files=.\n+   --  If it is the case, invoke the GNAT tool with the proper list of files,\n+   --  derived from the sources of the project.\n \n    procedure Check_Relative_Executable (Name : in out String_Access);\n    --  Check if an executable is specified as a relative path. If it is, and\n    --  the path contains directory information, fail. Otherwise, prepend the\n    --  exec directory. This procedure is only used for GNAT LINK when a project\n    --  file is specified.\n \n-   function Configuration_Pragmas_File return Path_Name_Type;\n-   --  Return an argument, if there is a configuration pragmas file to be\n-   --  specified for Project, otherwise return No_Name. Used for gnatstub\n-   --  (GNAT STUB), gnatpp (GNAT PRETTY), gnatelim (GNAT ELIM), and gnatmetric\n-   --  (GNAT METRIC).\n-\n    procedure Delete_Temp_Config_Files;\n    --  Delete all temporary config files. The caller is responsible for\n    --  ensuring that Keep_Temporary_Files is False.\n@@ -385,11 +349,6 @@ procedure GNATCmd is\n    --  includes directory information, prepend the path with Parent. This\n    --  subprogram is only called when using project files.\n \n-   function Mapping_File return Path_Name_Type;\n-   --  Create and return the path name of a mapping file. Used for gnatstub\n-   --  (GNAT STUB), gnatpp (GNAT PRETTY), gnatelim (GNAT ELIM), and gnatmetric\n-   --  (GNAT METRIC).\n-\n    procedure Output_Version;\n    --  Output the version of this program\n \n@@ -410,23 +369,6 @@ procedure GNATCmd is\n      For_Every_Project_Imported (Boolean, Set_Library_For);\n    --  Add the -L and -l switches to the linker for all the library projects\n \n-   --------------------------\n-   -- Add_To_Carg_Switches --\n-   --------------------------\n-\n-   procedure Add_To_Carg_Switches (Switch : String_Access) is\n-   begin\n-      --  If the Carg_Switches table is empty, put \"-cargs\" at the beginning\n-\n-      if Carg_Switches.Last = 0 then\n-         Carg_Switches.Increment_Last;\n-         Carg_Switches.Table (Carg_Switches.Last) := new String'(\"-cargs\");\n-      end if;\n-\n-      Carg_Switches.Increment_Last;\n-      Carg_Switches.Table (Carg_Switches.Last) := Switch;\n-   end Add_To_Carg_Switches;\n-\n    -----------------\n    -- Check_Files --\n    -----------------\n@@ -484,8 +426,7 @@ procedure GNATCmd is\n    --  Start of processing for Check_Files\n \n    begin\n-      --  Check if there is at least one argument that is not a switch or if\n-      --  there is a -files= switch.\n+      --  Check if there is at least one argument that is not a switch\n \n       for Index in 1 .. Last_Switches.Last loop\n          if Last_Switches.Table (Index) (1) /= '-'\n@@ -501,236 +442,67 @@ procedure GNATCmd is\n       --  path names of all the sources of the main project.\n \n       if Add_Sources then\n+         Tempdir.Create_Temp_File (FD, Temp_File_Name);\n+         Last_Switches.Increment_Last;\n+         Last_Switches.Table (Last_Switches.Last) :=\n+           new String'(\"-files=\" & Get_Name_String (Temp_File_Name));\n \n-         --  For gnatcheck, gnatpp, and gnatmetric, create a temporary file and\n-         --  put the list of sources in it. For gnatstack create a temporary\n-         --  file with the list of .ci files.\n+         Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n+         while Unit /= No_Unit_Index loop\n \n-         if The_Command = List or else The_Command = Stack then\n-            Tempdir.Create_Temp_File (FD, Temp_File_Name);\n-            Last_Switches.Increment_Last;\n-            Last_Switches.Table (Last_Switches.Last) :=\n-              new String'(\"-files=\" & Get_Name_String (Temp_File_Name));\n-         end if;\n+            --  We only need to put the library units, body or spec, but not\n+            --  the subunits.\n \n-         declare\n-            Proj : Project_List;\n+            if Unit.File_Names (Impl) /= null\n+              and then not Unit.File_Names (Impl).Locally_Removed\n+            then\n+               --  There is a body, check if it is for this project\n \n-         begin\n-            --  Gnatstack needs to add the .ci file for the binder generated\n-            --  files corresponding to all of the library projects and main\n-            --  units belonging to the application.\n-\n-            if The_Command = Stack then\n-               Proj := Project_Tree.Projects;\n-               while Proj /= null loop\n-                  if Check_Project (Proj.Project, Project) then\n-                     declare\n-                        Main : String_List_Id;\n+               if All_Projects\n+                 or else Unit.File_Names (Impl).Project = Project\n+               then\n+                  Subunit := False;\n \n-                     begin\n-                        --  Include binder generated files for main programs\n-\n-                        Main := Proj.Project.Mains;\n-                        while Main /= Nil_String loop\n-                           Add_To_Response_File\n-                             (Get_Name_String\n-                                (Proj.Project.Object_Directory.Name) &\n-                              B_Start                                &\n-                              MLib.Fil.Ext_To\n-                                (Get_Name_String\n-                                   (Project_Tree.Shared.String_Elements.Table\n-                                      (Main).Value),\n-                                 \"ci\"));\n-\n-                           --  When looking for the .ci file for a binder\n-                           --  generated file, look for both b~xxx and b__xxx\n-                           --  as gprbuild always uses b__ as the prefix of\n-                           --  such files.\n-\n-                           if not Is_Regular_File (Name_Buffer (1 .. Name_Len))\n-                           then\n-                              Add_To_Response_File\n-                                (Get_Name_String\n-                                   (Proj.Project.Object_Directory.Name) &\n-                                 \"b__\"                                  &\n-                                 MLib.Fil.Ext_To\n-                                   (Get_Name_String\n-                                      (Project_Tree.Shared\n-                                       .String_Elements.Table (Main).Value),\n-                                    \"ci\"));\n-                           end if;\n+                  if Unit.File_Names (Spec) = null\n+                    or else Unit.File_Names (Spec).Locally_Removed\n+                  then\n+                     --  We have a body with no spec: we need to check if\n+                     --  this is a subunit, because gnatls will complain\n+                     --  about subunits.\n \n-                           Main := Project_Tree.Shared.String_Elements.Table\n-                                     (Main).Next;\n-                        end loop;\n-\n-                        if Proj.Project.Library then\n-\n-                           --  Include the .ci file for the binder generated\n-                           --  files that contains the initialization and\n-                           --  finalization of the library.\n-\n-                           Add_To_Response_File\n-                             (Get_Name_String\n-                                (Proj.Project.Object_Directory.Name)      &\n-                              B_Start                                     &\n-                              Get_Name_String (Proj.Project.Library_Name) &\n-                              \".ci\");\n-\n-                           --  When looking for the .ci file for a binder\n-                           --  generated file, look for both b~xxx and b__xxx\n-                           --  as gprbuild always uses b__ as the prefix of\n-                           --  such files.\n-\n-                           if not Is_Regular_File (Name_Buffer (1 .. Name_Len))\n-                           then\n-                              Add_To_Response_File\n-                                (Get_Name_String\n-                                   (Proj.Project.Object_Directory.Name)      &\n-                                 \"b__\"                                       &\n-                                 Get_Name_String (Proj.Project.Library_Name) &\n-                                 \".ci\");\n-                           end if;\n-                        end if;\n+                     declare\n+                        Src_Ind : constant Source_File_Index :=\n+                                    Sinput.P.Load_Project_File\n+                                      (Get_Name_String\n+                                         (Unit.File_Names (Impl).Path.Name));\n+                     begin\n+                        Subunit := Sinput.P.Source_File_Is_Subunit (Src_Ind);\n                      end;\n                   end if;\n \n-                  Proj := Proj.Next;\n-               end loop;\n-            end if;\n-\n-            Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n-            while Unit /= No_Unit_Index loop\n-\n-               --  For gnatls, we only need to put the library units, body or\n-               --  spec, but not the subunits.\n-\n-               if The_Command = List then\n-                  if Unit.File_Names (Impl) /= null\n-                    and then not Unit.File_Names (Impl).Locally_Removed\n-                  then\n-                     --  There is a body, check if it is for this project\n-\n-                     if All_Projects\n-                       or else Unit.File_Names (Impl).Project = Project\n-                     then\n-                        Subunit := False;\n-\n-                        if Unit.File_Names (Spec) = null\n-                          or else Unit.File_Names (Spec).Locally_Removed\n-                        then\n-                           --  We have a body with no spec: we need to check if\n-                           --  this is a subunit, because gnatls will complain\n-                           --  about subunits.\n-\n-                           declare\n-                              Src_Ind : constant Source_File_Index :=\n-                                          Sinput.P.Load_Project_File\n-                                            (Get_Name_String\n-                                              (Unit.File_Names\n-                                                (Impl).Path.Name));\n-                           begin\n-                              Subunit :=\n-                                Sinput.P.Source_File_Is_Subunit (Src_Ind);\n-                           end;\n-                        end if;\n-\n-                        if not Subunit then\n-                           Add_To_Response_File\n-                             (Get_Name_String\n-                                (Unit.File_Names (Impl).Display_File),\n-                              Check_File => False);\n-                        end if;\n-                     end if;\n-\n-                  elsif Unit.File_Names (Spec) /= null\n-                    and then not Unit.File_Names (Spec).Locally_Removed\n-                  then\n-                     --  We have a spec with no body. Check if it is for this\n-                     --  project.\n-\n-                     if All_Projects or else\n-                        Unit.File_Names (Spec).Project = Project\n-                     then\n-                        Add_To_Response_File\n-                          (Get_Name_String\n-                             (Unit.File_Names (Spec).Display_File),\n-                           Check_File => False);\n-                     end if;\n+                  if not Subunit then\n+                     Add_To_Response_File\n+                       (Get_Name_String (Unit.File_Names (Impl).Display_File),\n+                        Check_File => False);\n                   end if;\n+               end if;\n \n-               --  For gnatstack, we put the .ci files corresponding to the\n-               --  different units, including the binder generated files. We\n-               --  only need to do that for the library units, body or spec,\n-               --  but not the subunits.\n-\n-               elsif The_Command = Stack then\n-                  if Unit.File_Names (Impl) /= null\n-                    and then not Unit.File_Names (Impl).Locally_Removed\n-                  then\n-                     --  There is a body. Check if .ci files for this project\n-                     --  must be added.\n-\n-                     if Check_Project\n-                          (Unit.File_Names (Impl).Project, Project)\n-                     then\n-                        Subunit := False;\n-\n-                        if Unit.File_Names (Spec) = null\n-                          or else Unit.File_Names (Spec).Locally_Removed\n-                        then\n-                           --  We have a body with no spec: we need to check\n-                           --  if this is a subunit, because .ci files are not\n-                           --  generated for subunits.\n-\n-                           declare\n-                              Src_Ind : constant Source_File_Index :=\n-                                          Sinput.P.Load_Project_File\n-                                            (Get_Name_String\n-                                              (Unit.File_Names\n-                                                (Impl).Path.Name));\n-                           begin\n-                              Subunit :=\n-                                Sinput.P.Source_File_Is_Subunit (Src_Ind);\n-                           end;\n-                        end if;\n-\n-                        if not Subunit then\n-                           Add_To_Response_File\n-                             (Get_Name_String\n-                                (Unit.File_Names\n-                                   (Impl).Project. Object_Directory.Name) &\n-                              MLib.Fil.Ext_To\n-                                (Get_Name_String\n-                                   (Unit.File_Names (Impl).Display_File),\n-                                 \"ci\"));\n-                        end if;\n-                     end if;\n-\n-                  elsif Unit.File_Names (Spec) /= null\n-                    and then not Unit.File_Names (Spec).Locally_Removed\n-                  then\n-                     --  Spec with no body, check if it is for this project\n+            elsif Unit.File_Names (Spec) /= null\n+              and then not Unit.File_Names (Spec).Locally_Removed\n+            then\n+               --  We have a spec with no body. Check if it is for this project\n \n-                     if Check_Project\n-                          (Unit.File_Names (Spec).Project, Project)\n-                     then\n-                        Add_To_Response_File\n-                          (Get_Name_String\n-                             (Unit.File_Names\n-                                (Spec).Project. Object_Directory.Name) &\n-                           Dir_Separator                               &\n-                           MLib.Fil.Ext_To\n-                             (Get_Name_String (Unit.File_Names (Spec).File),\n-                              \"ci\"));\n-                     end if;\n-                  end if;\n+               if All_Projects\n+                 or else Unit.File_Names (Spec).Project = Project\n+               then\n+                  Add_To_Response_File\n+                    (Get_Name_String (Unit.File_Names (Spec).Display_File),\n+                     Check_File => False);\n                end if;\n+            end if;\n \n-               Unit := Units_Htable.Get_Next (Project_Tree.Units_HT);\n-            end loop;\n-         end;\n+            Unit := Units_Htable.Get_Next (Project_Tree.Units_HT);\n+         end loop;\n \n          if FD /= Invalid_FD then\n             Close (FD, Success);\n@@ -742,25 +514,6 @@ procedure GNATCmd is\n       end if;\n    end Check_Files;\n \n-   -------------------\n-   -- Check_Project --\n-   -------------------\n-\n-   function Check_Project\n-     (Project      : Project_Id;\n-      Root_Project : Project_Id) return Boolean\n-   is\n-   begin\n-      if Project = No_Project then\n-         return False;\n-\n-      elsif All_Projects or else Project = Root_Project then\n-         return True;\n-      end if;\n-\n-      return False;\n-   end Check_Project;\n-\n    -------------------------------\n    -- Check_Relative_Executable --\n    -------------------------------\n@@ -785,24 +538,13 @@ procedure GNATCmd is\n             Name_Buffer (Name_Len) := Directory_Separator;\n          end if;\n \n-         Name_Buffer (Name_Len + 1 ..\n-                        Name_Len + Exec_File_Name'Length) :=\n+         Name_Buffer (Name_Len + 1 .. Name_Len + Exec_File_Name'Length) :=\n            Exec_File_Name;\n          Name_Len := Name_Len + Exec_File_Name'Length;\n          Name := new String'(Name_Buffer (1 .. Name_Len));\n       end if;\n    end Check_Relative_Executable;\n \n-   --------------------------------\n-   -- Configuration_Pragmas_File --\n-   --------------------------------\n-\n-   function Configuration_Pragmas_File return Path_Name_Type is\n-   begin\n-      Prj.Env.Create_Config_Pragmas_File (Project, Project_Tree);\n-      return Project.Config_File_Name;\n-   end Configuration_Pragmas_File;\n-\n    ------------------------------\n    -- Delete_Temp_Config_Files --\n    ------------------------------\n@@ -853,21 +595,6 @@ procedure GNATCmd is\n          Including_RTS        => True);\n    end Ensure_Absolute_Path;\n \n-   ------------------\n-   -- Mapping_File --\n-   ------------------\n-\n-   function Mapping_File return Path_Name_Type is\n-      Result : Path_Name_Type;\n-   begin\n-      Prj.Env.Create_Mapping_File\n-        (Project  => Project,\n-         Language => Name_Ada,\n-         In_Tree  => Project_Tree,\n-         Name     => Result);\n-      return Result;\n-   end Mapping_File;\n-\n    --------------------\n    -- Output_Version --\n    --------------------\n@@ -881,9 +608,8 @@ procedure GNATCmd is\n       end if;\n \n       Put_Line (Gnatvsn.Gnat_Version_String);\n-      Put_Line (\"Copyright 1996-\" &\n-                Gnatvsn.Current_Year &\n-                \", Free Software Foundation, Inc.\");\n+      Put_Line (\"Copyright 1996-\" & Gnatvsn.Current_Year\n+                & \", Free Software Foundation, Inc.\");\n    end Output_Version;\n \n    -----------\n@@ -899,45 +625,34 @@ procedure GNATCmd is\n \n       for C in Command_List'Range loop\n \n-         --  No usage for Sync\n-\n-         if C /= Sync then\n-            if Targparm.AAMP_On_Target then\n-               Put (\"gnaampcmd \");\n-            else\n-               Put (\"gnat \");\n-            end if;\n-\n-            Put (To_Lower (Command_List (C).Cname.all));\n-            Set_Col (25);\n+         if Targparm.AAMP_On_Target then\n+            Put (\"gnaampcmd \");\n+         else\n+            Put (\"gnat \");\n+         end if;\n \n-            --  Never call gnatstack with a prefix\n+         Put (To_Lower (Command_List (C).Cname.all));\n+         Set_Col (25);\n+         Put (Program_Name (Command_List (C).Unixcmd.all, \"gnat\").all);\n \n-            if C = Stack then\n-               Put (Command_List (C).Unixcmd.all);\n-            else\n-               Put (Program_Name (Command_List (C).Unixcmd.all, \"gnat\").all);\n+         declare\n+            Sws : Argument_List_Access renames Command_List (C).Unixsws;\n+         begin\n+            if Sws /= null then\n+               for J in Sws'Range loop\n+                  Put (' ');\n+                  Put (Sws (J).all);\n+               end loop;\n             end if;\n+         end;\n \n-            declare\n-               Sws : Argument_List_Access renames Command_List (C).Unixsws;\n-            begin\n-               if Sws /= null then\n-                  for J in Sws'Range loop\n-                     Put (' ');\n-                     Put (Sws (J).all);\n-                  end loop;\n-               end if;\n-            end;\n-\n-            New_Line;\n-         end if;\n+         New_Line;\n       end loop;\n \n       New_Line;\n-      Put_Line (\"All commands except chop, krunch and preprocess \" &\n-                  \"accept project file switches -vPx, -Pprj, -Xnam=val,\" &\n-                \"--subdirs= and -eL\");\n+      Put_Line (\"Commands bind, find, link, list and xref \"\n+                & \"accept project file switches -vPx, -Pprj, -Xnam=val,\"\n+                & \"--subdirs= and -eL\");\n       New_Line;\n    end Usage;\n \n@@ -956,8 +671,8 @@ procedure GNATCmd is\n       Skip_Executable     : Boolean := False;\n \n    begin\n-      --  Add the default search directories, to be able to find\n-      --  libgnat in call to MLib.Utl.Lib_Directory.\n+      --  Add the default search directories, to be able to find libgnat in\n+      --  call to MLib.Utl.Lib_Directory.\n \n       Add_Default_Search_Dirs;\n \n@@ -1013,9 +728,8 @@ procedure GNATCmd is\n                else\n                   --  First, compute the exact length for the switch\n \n-                  for Index in\n-                    Library_Paths.First .. Library_Paths.Last\n-                  loop\n+                  for Index in Library_Paths.First .. Library_Paths.Last loop\n+\n                      --  Add the length of the library dir plus one for the\n                      --  directory separator.\n \n@@ -1038,27 +752,23 @@ procedure GNATCmd is\n                   loop\n                      Option\n                        (Current + 1 ..\n-                          Current +\n-                            Library_Paths.Table (Index)'Length) :=\n+                        Current + Library_Paths.Table (Index)'Length) :=\n                        Library_Paths.Table (Index).all;\n                      Current :=\n-                       Current +\n-                         Library_Paths.Table (Index)'Length + 1;\n+                       Current + Library_Paths.Table (Index)'Length + 1;\n                      Option (Current) := Path_Separator;\n                   end loop;\n \n                   --  Finally put the standard GNAT library dir\n \n                   Option\n-                    (Current + 1 ..\n-                       Current + MLib.Utl.Lib_Directory'Length) :=\n+                    (Current + 1 .. Current + MLib.Utl.Lib_Directory'Length) :=\n                       MLib.Utl.Lib_Directory;\n \n                   --  And add the switch to the last switches\n \n                   Last_Switches.Increment_Last;\n-                  Last_Switches.Table (Last_Switches.Last) :=\n-                    Option;\n+                  Last_Switches.Table (Last_Switches.Last) := Option;\n                end if;\n             end;\n          end if;\n@@ -1087,8 +797,7 @@ procedure GNATCmd is\n \n          else\n             declare\n-               Switch    : constant String :=\n-                             Last_Switches.Table (J).all;\n+               Switch    : constant String := Last_Switches.Table (J).all;\n                ALI_File  : constant String (1 .. Switch'Length + 4) :=\n                              Switch & \".ali\";\n \n@@ -1138,10 +847,8 @@ procedure GNATCmd is\n                            Dir : constant String :=\n                                    Get_Name_String (Prj.Object_Directory.Name);\n                         begin\n-                           if Is_Regular_File\n-                                (Dir &\n-                                 ALI_File (1 .. Last))\n-                           then\n+                           if Is_Regular_File (Dir & ALI_File (1 .. Last)) then\n+\n                               --  We have found the correct project, so we\n                               --  replace the file with the absolute path.\n \n@@ -1170,8 +877,7 @@ procedure GNATCmd is\n \n       for J in reverse 1 .. Last_Switches.Last - 1 loop\n          if Last_Switches.Table (J).all = \"-o\" then\n-            Check_Relative_Executable\n-              (Name => Last_Switches.Table (J + 1));\n+            Check_Relative_Executable (Name => Last_Switches.Table (J + 1));\n             Look_For_Executable := False;\n             exit;\n          end if;\n@@ -1235,8 +941,7 @@ procedure GNATCmd is\n    is\n       pragma Unreferenced (Tree);\n \n-      Path_Option : constant String_Access :=\n-                      MLib.Linker_Library_Path_Option;\n+      Path_Option : constant String_Access := MLib.Linker_Library_Path_Option;\n \n    begin\n       --  Case of library project\n@@ -1269,8 +974,7 @@ procedure GNATCmd is\n       end if;\n    end Set_Library_For;\n \n-   procedure Check_Version_And_Help is\n-     new Check_Version_And_Help_G (Usage);\n+   procedure Check_Version_And_Help is new Check_Version_And_Help_G (Usage);\n \n --  Start of processing for GNATCmd\n \n@@ -1333,12 +1037,9 @@ begin\n          if Command (Index) = Directory_Separator then\n             declare\n                Absolute_Dir : constant String :=\n-                                Normalize_Pathname\n-                                  (Command (Command'First .. Index));\n-\n-               PATH : constant String :=\n-                        Absolute_Dir & Path_Separator & Getenv (\"PATH\").all;\n-\n+                 Normalize_Pathname (Command (Command'First .. Index));\n+               PATH         : constant String :=\n+                 Absolute_Dir & Path_Separator & Getenv (\"PATH\").all;\n             begin\n                Setenv (\"PATH\", PATH);\n             end;\n@@ -1391,8 +1092,7 @@ begin\n             Alternate : Alternate_Command;\n \n          begin\n-            Alternate := Alternate_Command'Value\n-                           (Argument (Command_Arg));\n+            Alternate := Alternate_Command'Value (Argument (Command_Arg));\n             The_Command := Corresponding_To (Alternate);\n \n          exception\n@@ -1422,9 +1122,8 @@ begin\n                --  Open the file and fail if the file cannot be found\n \n                begin\n-                  Open\n-                    (Arg_File, In_File,\n-                     The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n+                  Open (Arg_File, In_File,\n+                        The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n \n                exception\n                   when others =>\n@@ -1456,8 +1155,7 @@ begin\n             --  the Last_Switches table.\n \n             Last_Switches.Increment_Last;\n-            Last_Switches.Table (Last_Switches.Last) :=\n-              new String'(The_Arg);\n+            Last_Switches.Table (Last_Switches.Last) := new String'(The_Arg);\n          end if;\n       end;\n    end loop;\n@@ -1506,8 +1204,8 @@ begin\n          end loop;\n       end if;\n \n-      --  For BIND, CHECK, ELIM, FIND, LINK, LIST, METRIC, PRETTY, STACK, STUB,\n-      --  SYNC and XREF, look for project file related switches.\n+      --  For BIND, FIND, LINK, LIST and XREF, look for project file related\n+      --  switches.\n \n       case The_Command is\n          when Bind =>\n@@ -1522,12 +1220,6 @@ begin\n          when List =>\n             Tool_Package_Name := Name_Gnatls;\n             Packages_To_Check := Packages_To_Check_By_Gnatls;\n-         when Stack =>\n-            Tool_Package_Name := Name_Stack;\n-            Packages_To_Check := Packages_To_Check_By_Stack;\n-         when Sync =>\n-            Tool_Package_Name := Name_Synchronize;\n-            Packages_To_Check := Packages_To_Check_By_Sync;\n          when Xref =>\n             Tool_Package_Name := Name_Cross_Reference;\n             Packages_To_Check := Packages_To_Check_By_Xref;\n@@ -1566,8 +1258,7 @@ begin\n \n                if Argv (Argv'First) = '-' then\n                   if Argv'Length = 1 then\n-                     Fail\n-                       (\"switch character cannot be followed by a blank\");\n+                     Fail (\"switch character cannot be followed by a blank\");\n                   end if;\n \n                   --  The two style project files (-p and -P) cannot be used\n@@ -1589,13 +1280,12 @@ begin\n                       Argv\n                        (Argv'First ..\n                         Argv'First + Makeutl.Subdirs_Option'Length - 1) =\n-                          Makeutl.Subdirs_Option\n+                                                        Makeutl.Subdirs_Option\n                   then\n                      Subdirs :=\n                        new String'\n-                         (Argv\n-                           (Argv'First + Makeutl.Subdirs_Option'Length ..\n-                            Argv'Last));\n+                         (Argv (Argv'First + Makeutl.Subdirs_Option'Length ..\n+                                Argv'Last));\n \n                      Remove_Switch (Arg_Num);\n \n@@ -1630,7 +1320,7 @@ begin\n                     and then  Argv (Argv'First + 1 .. Argv'First + 2) = \"vP\"\n                   then\n                      if Argv'Length = 4\n-                          and then Argv (Argv'Last) in '0' .. '2'\n+                       and then Argv (Argv'Last) in '0' .. '2'\n                      then\n                         case Argv (Argv'Last) is\n                            when '0' =>\n@@ -1662,8 +1352,7 @@ begin\n                         Fail\n                           (Argv.all\n                            & \": second project file forbidden (first is \"\"\"\n-                           & Project_File.all\n-                           & \"\"\")\");\n+                           & Project_File.all & \"\"\")\");\n \n                      --  The two style project files (-p and -P) cannot be\n                      --  used together.\n@@ -1712,16 +1401,14 @@ begin\n                      if not Check (Root_Environment.External,\n                                     Argv (Argv'First + 2 .. Argv'Last))\n                      then\n-                        Fail (Argv.all\n-                              & \" is not a valid external assignment.\");\n+                        Fail\n+                          (Argv.all & \" is not a valid external assignment.\");\n                      end if;\n \n                      Remove_Switch (Arg_Num);\n \n                   elsif\n-                    (The_Command = Sync   or else\n-                     The_Command = Stack  or else\n-                     The_Command = List)\n+                    The_Command = List\n                     and then Argv'Length = 2\n                     and then Argv (2) = 'U'\n                   then\n@@ -1798,10 +1485,10 @@ begin\n             if Pkg /= No_Package then\n                Element := Project_Tree.Shared.Packages.Table (Pkg);\n \n-               --  Packages Gnatls and Gnatstack have a single attribute\n-               --  Switches, that is not an associative array.\n+               --  Package Gnatls has a single attribute Switches, that is not\n+               --  an associative array.\n \n-               if The_Command = List or else The_Command = Stack then\n+               if The_Command = List then\n                   The_Switches :=\n                     Prj.Util.Value_Of\n                     (Variable_Name => Snames.Name_Switches,\n@@ -1823,7 +1510,6 @@ begin\n                      if Last_Switches.Table (J) (1) /= '-' then\n                         if Main = null then\n                            Main := Last_Switches.Table (J);\n-\n                         else\n                            Main := null;\n                            exit;\n@@ -1883,7 +1569,6 @@ begin\n                      declare\n                         Switch : constant String :=\n                                    Get_Name_String (The_Switches.Value);\n-\n                      begin\n                         if Switch'Length > 0 then\n                            First_Switches.Increment_Last;\n@@ -1900,8 +1585,7 @@ begin\n \n                         declare\n                            Switch : constant String :=\n-                             Get_Name_String (The_String.Value);\n-\n+                                      Get_Name_String (The_String.Value);\n                         begin\n                            if Switch'Length > 0 then\n                               First_Switches.Increment_Last;\n@@ -1933,189 +1617,6 @@ begin\n          --  For gnatcheck, gnatstub, gnatmetric, gnatpp and gnatelim, create\n          --  a configuration pragmas file, if necessary.\n \n-         if The_Command = Sync then\n-\n-            --  If there are switches in package Compiler, put them in the\n-            --  Carg_Switches table.\n-\n-            declare\n-               Pkg  : constant Prj.Package_Id :=\n-                        Prj.Util.Value_Of\n-                          (Name        => Name_Compiler,\n-                           In_Packages => Project.Decl.Packages,\n-                           Shared      => Project_Tree.Shared);\n-\n-               Element : Package_Element;\n-\n-               Switches_Array : Array_Element_Id;\n-\n-               The_Switches : Prj.Variable_Value;\n-               Current      : Prj.String_List_Id;\n-               The_String   : String_Element;\n-\n-               Main    : String_Access := null;\n-               Main_Id : Name_Id;\n-\n-            begin\n-               if Pkg /= No_Package then\n-\n-                  --  First, check if there is a single main specified\n-\n-                  for J in 1  .. Last_Switches.Last loop\n-                     if Last_Switches.Table (J) (1) /= '-' then\n-                        if Main = null then\n-                           Main := Last_Switches.Table (J);\n-\n-                        else\n-                           Main := null;\n-                           exit;\n-                        end if;\n-                     end if;\n-                  end loop;\n-\n-                  Element := Project_Tree.Shared.Packages.Table (Pkg);\n-\n-                  --  If there is a single main and there is compilation\n-                  --  switches specified in the project file, use them.\n-\n-                  if Main /= null and then not All_Projects then\n-                     Name_Len := Main'Length;\n-                     Name_Buffer (1 .. Name_Len) := Main.all;\n-                     Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n-                     Main_Id := Name_Find;\n-\n-                     Switches_Array :=\n-                       Prj.Util.Value_Of\n-                         (Name      => Name_Switches,\n-                          In_Arrays => Element.Decl.Arrays,\n-                          Shared    => Project_Tree.Shared);\n-                     The_Switches := Prj.Util.Value_Of\n-                       (Index     => Main_Id,\n-                        Src_Index => 0,\n-                        In_Array  => Switches_Array,\n-                        Shared    => Project_Tree.Shared);\n-                  end if;\n-\n-                  --  Otherwise, get the Default_Switches (\"Ada\")\n-\n-                  if The_Switches.Kind = Undefined then\n-                     Switches_Array :=\n-                       Prj.Util.Value_Of\n-                         (Name      => Name_Default_Switches,\n-                          In_Arrays => Element.Decl.Arrays,\n-                          Shared    => Project_Tree.Shared);\n-                     The_Switches := Prj.Util.Value_Of\n-                       (Index     => Name_Ada,\n-                        Src_Index => 0,\n-                        In_Array  => Switches_Array,\n-                        Shared    => Project_Tree.Shared);\n-                  end if;\n-\n-                  --  If there are switches specified, put them in the\n-                  --  Carg_Switches table.\n-\n-                  case The_Switches.Kind is\n-                     when Prj.Undefined =>\n-                        null;\n-\n-                     when Prj.Single =>\n-                        declare\n-                           Switch : constant String :=\n-                                      Get_Name_String (The_Switches.Value);\n-                        begin\n-                           if Switch'Length > 0 then\n-                              Add_To_Carg_Switches (new String'(Switch));\n-                           end if;\n-                        end;\n-\n-                     when Prj.List =>\n-                        Current := The_Switches.Values;\n-                        while Current /= Prj.Nil_String loop\n-                           The_String := Project_Tree.Shared.String_Elements\n-                             .Table (Current);\n-\n-                           declare\n-                              Switch : constant String :=\n-                                         Get_Name_String (The_String.Value);\n-                           begin\n-                              if Switch'Length > 0 then\n-                                 Add_To_Carg_Switches (new String'(Switch));\n-                              end if;\n-                           end;\n-\n-                           Current := The_String.Next;\n-                        end loop;\n-                  end case;\n-               end if;\n-            end;\n-\n-            --  If -cargs is one of the switches, move the following switches\n-            --  to the Carg_Switches table.\n-\n-            for J in 1 .. First_Switches.Last loop\n-               if First_Switches.Table (J).all = \"-cargs\" then\n-                  declare\n-                     K    : Positive;\n-                     Last : Natural;\n-\n-                  begin\n-                     --  Move the switches that are before -rules when the\n-                     --  command is CHECK.\n-\n-                     K := J + 1;\n-                     while K <= First_Switches.Last loop\n-                        Add_To_Carg_Switches (First_Switches.Table (K));\n-                        K := K + 1;\n-                     end loop;\n-\n-                     if K > First_Switches.Last then\n-                        First_Switches.Set_Last (J - 1);\n-\n-                     else\n-                        Last := J - 1;\n-                        while K <= First_Switches.Last loop\n-                           Last := Last + 1;\n-                           First_Switches.Table (Last) :=\n-                             First_Switches.Table (K);\n-                           K := K + 1;\n-                        end loop;\n-\n-                        First_Switches.Set_Last (Last);\n-                     end if;\n-                  end;\n-\n-                  exit;\n-               end if;\n-            end loop;\n-\n-            for J in 1 .. Last_Switches.Last loop\n-               if Last_Switches.Table (J).all = \"-cargs\" then\n-                  for K in J + 1 .. Last_Switches.Last loop\n-                     Add_To_Carg_Switches (Last_Switches.Table (K));\n-                  end loop;\n-\n-                  Last_Switches.Set_Last (J - 1);\n-                  exit;\n-               end if;\n-            end loop;\n-\n-            declare\n-               CP_File : constant Path_Name_Type := Configuration_Pragmas_File;\n-               M_File  : constant Path_Name_Type := Mapping_File;\n-\n-            begin\n-               if CP_File /= No_Path then\n-                  Add_To_Carg_Switches\n-                    (new String'(\"-gnatec=\" & Get_Name_String (CP_File)));\n-               end if;\n-\n-               if M_File /= No_Path then\n-                  Add_To_Carg_Switches\n-                    (new String'(\"-gnatem=\" & Get_Name_String (M_File)));\n-               end if;\n-            end;\n-         end if;\n-\n          if The_Command = Link then\n             Process_Link;\n          end if;\n@@ -2146,17 +1647,10 @@ begin\n             end;\n          end if;\n \n-         --  For gnat sync with -U + a main, get the list of sources from the\n-         --  closure and add them to the arguments.\n-\n-         --  For gnat sync, gnat list, and gnat stack, if no file has been put\n-         --  on the command line, call tool with all the sources of the main\n-         --  project.\n+         --  For gnat list, if no file has been put on the command line, call\n+         --  tool with all the sources of the main project.\n \n-         if The_Command = Sync  or else\n-            The_Command = List  or else\n-            The_Command = Stack\n-         then\n+         if The_Command = List then\n             Check_Files;\n          end if;\n       end if;"}, {"sha": "201d6b8636cc46af5dfa890dde6850660cd5cfee", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -326,12 +326,6 @@ package body Prj.Attr is\n    \"Ladefault_switches#\" &\n    \"LbOswitches#\" &\n \n-   --  package Synchronize\n-\n-   \"Psynchronize#\" &\n-   \"Ladefault_switches#\" &\n-   \"LbOswitches#\" &\n-\n    --  package Eliminate\n \n    \"Peliminate#\" &"}, {"sha": "d02b96e0e795bf8018baecc88a0b8bfeb10e9667", "filename": "gcc/ada/s-linux-android.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-linux-android.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-linux-android.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-android.ads?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -47,6 +47,7 @@ package System.Linux is\n    subtype long        is Interfaces.C.long;\n    subtype suseconds_t is Interfaces.C.long;\n    subtype time_t      is Interfaces.C.long;\n+   subtype clockid_t   is Interfaces.C.int;\n \n    type timespec is record\n       tv_sec  : time_t;"}, {"sha": "5df0353ea7c9a7ee9a8b44e45928d54afeb5ec1c", "filename": "gcc/ada/s-osinte-aix.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.ads?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -206,6 +206,11 @@ package System.OS_Interface is\n       tp       : access timespec) return int;\n    pragma Import (C, clock_gettime, \"clock_gettime\");\n \n+   function clock_getres\n+     (clock_id : clockid_t;\n+      res      : access timespec) return int;\n+   pragma Import (C, clock_getres, \"clock_getres\");\n+\n    function To_Duration (TS : timespec) return Duration;\n    pragma Inline (To_Duration);\n "}, {"sha": "abf5daec645ad21195b64a88af244d2150408e17", "filename": "gcc/ada/s-osinte-android.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-android.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-android.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-android.ads?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -211,6 +211,11 @@ package System.OS_Interface is\n      (clock_id : clockid_t;\n       tp       : access timespec) return int;\n \n+   function clock_getres\n+     (clock_id : clockid_t;\n+      res      : access timespec) return int;\n+   pragma Import (C, clock_getres, \"clock_getres\");\n+\n    function To_Duration (TS : timespec) return Duration;\n    pragma Inline (To_Duration);\n "}, {"sha": "315f796f6fdb0cc82d3380fc09250a0a3c215805", "filename": "gcc/ada/s-osinte-darwin.adb", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -129,6 +129,36 @@ package body System.OS_Interface is\n       return Result;\n    end clock_gettime;\n \n+   ------------------\n+   -- clock_getres --\n+   ------------------\n+\n+   function clock_getres\n+     (clock_id : clockid_t;\n+      res      : access timespec) return int\n+   is\n+      pragma Unreferenced (clock_id);\n+\n+      --  Darwin Threads don't have clock_getres.\n+\n+      Nano   : constant := 10**9;\n+      nsec   : int := 0;\n+      Result : int := -1;\n+\n+      function clock_get_res return int;\n+      pragma Import (C, clock_get_res, \"__gnat_clock_get_res\");\n+\n+   begin\n+      nsec := clock_get_res;\n+      res.all := To_Timespec (Duration (0.0) + Duration (nsec) / Nano);\n+\n+      if nsec > 0 then\n+         Result := 0;\n+      end if;\n+\n+      return Result;\n+   end clock_getres;\n+\n    -----------------\n    -- sched_yield --\n    -----------------"}, {"sha": "9eaa2129171cf5a2bf4db1c841de26f191de2cef", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -189,6 +189,10 @@ package System.OS_Interface is\n      (clock_id : clockid_t;\n       tp       : access timespec) return int;\n \n+   function clock_getres\n+     (clock_id : clockid_t;\n+      res      : access timespec) return int;\n+\n    function To_Duration (TS : timespec) return Duration;\n    pragma Inline (To_Duration);\n "}, {"sha": "625d2dcd661ebc80f31984a7461b83102bafa56a", "filename": "gcc/ada/s-osinte-freebsd.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-freebsd.ads?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -7,7 +7,7 @@\n --                                   S p e c                                --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -202,6 +202,11 @@ package System.OS_Interface is\n \n    type clockid_t is new int;\n \n+   function clock_getres\n+     (clock_id : clockid_t;\n+      res      : access timespec) return int;\n+   pragma Import (C, clock_getres, \"clock_getres\");\n+\n    function clock_gettime\n      (clock_id : clockid_t;\n       tp       : access timespec)"}, {"sha": "a84d635bf86015343a5f38faf80eb91720932c0e", "filename": "gcc/ada/s-osinte-mingw.ads", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-mingw.ads?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,6 +53,8 @@ package System.OS_Interface is\n    subtype int  is Interfaces.C.int;\n    subtype long is Interfaces.C.long;\n \n+   subtype LARGE_INTEGER is System.Win32.LARGE_INTEGER;\n+\n    -------------------\n    -- General Types --\n    -------------------\n@@ -104,6 +106,18 @@ package System.OS_Interface is\n    procedure kill (sig : Signal);\n    pragma Import (C, kill, \"raise\");\n \n+   ------------\n+   -- Clock  --\n+   ------------\n+\n+   procedure QueryPerformanceFrequency\n+     (lpPerformanceFreq : access LARGE_INTEGER);\n+   pragma Import\n+     (Stdcall, QueryPerformanceFrequency, \"QueryPerformanceFrequency\");\n+\n+   --  According to the spec, on XP and later than function cannot fail,\n+   --  so we ignore the return value and import it as a procedure.\n+\n    -------------\n    -- Threads --\n    -------------"}, {"sha": "4e27fd1f4f75a63cf3ba8ea1e9e7301f552e41e6", "filename": "gcc/ada/s-osinte-solaris-posix.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris-posix.ads?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -189,6 +189,11 @@ package System.OS_Interface is\n \n    type clockid_t is new int;\n \n+   function clock_getres\n+     (clock_id : clockid_t;\n+      res      : access timespec) return int;\n+   pragma Import (C, clock_getres, \"clock_getres\");\n+\n    function clock_gettime\n      (clock_id : clockid_t;\n       tp       : access timespec) return int;"}, {"sha": "a43133a9dee4a760ba3284ededb690001022a43c", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -662,6 +662,7 @@ package body System.Task_Primitives.Operations is\n    function RT_Resolution return Duration is\n       TS     : aliased timespec;\n       Result : int;\n+\n    begin\n       Result := clock_getres (OSC.CLOCK_REALTIME, TS'Unchecked_Access);\n       pragma Assert (Result = 0);"}, {"sha": "cecb7e5fabf72955d3f5cc79bb8263c6775ab00a", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -1076,8 +1076,10 @@ package body System.Task_Primitives.Operations is\n    -------------------\n \n    function RT_Resolution return Duration is\n+      Ticks_Per_Second : aliased LARGE_INTEGER;\n    begin\n-      return 0.000_001; --  1 micro-second\n+      QueryPerformanceFrequency (Ticks_Per_Second'Access);\n+      return Duration (1.0 / Ticks_Per_Second);\n    end RT_Resolution;\n \n    ----------------"}, {"sha": "cdbc0643d7a6a656eb617c2391187d3db4066f7d", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -743,8 +743,13 @@ package body System.Task_Primitives.Operations is\n    -------------------\n \n    function RT_Resolution return Duration is\n+      TS     : aliased timespec;\n+      Result : Interfaces.C.int;\n    begin\n-      return 10#1.0#E-6;\n+      Result := clock_getres (OSC.CLOCK_REALTIME, TS'Unchecked_Access);\n+      pragma Assert (Result = 0);\n+\n+      return To_Duration (TS);\n    end RT_Resolution;\n \n    ------------"}, {"sha": "a508c42e2248ac22d166329bc63e0072461995ca", "filename": "gcc/ada/s-taprop-solaris.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-taprop-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-taprop-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-solaris.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2013, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2014, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -785,8 +785,13 @@ package body System.Task_Primitives.Operations is\n    -------------------\n \n    function RT_Resolution return Duration is\n+      TS     : aliased timespec;\n+      Result : Interfaces.C.int;\n    begin\n-      return 10#1.0#E-6;\n+      Result := clock_getres (OSC.CLOCK_REALTIME, TS'Unchecked_Access);\n+      pragma Assert (Result = 0);\n+\n+      return To_Duration (TS);\n    end RT_Resolution;\n \n    -----------"}, {"sha": "947e5aca9945544f47474708ca5cb4b1a645155e", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -989,7 +989,7 @@ package body System.Tasking.Stages is\n          return;\n       end if;\n \n-      Initialization.Defer_Abort (Self_ID);\n+      Initialization.Defer_Abort_Nestable (Self_ID);\n \n       --  Loop through the From chain, changing their Master_of_Task fields,\n       --  and to find the end of the chain.\n@@ -1009,7 +1009,7 @@ package body System.Tasking.Stages is\n \n       From.all.T_ID := null;\n \n-      Initialization.Undefer_Abort (Self_ID);\n+      Initialization.Undefer_Abort_Nestable (Self_ID);\n    end Move_Activation_Chain;\n \n    ------------------\n@@ -2011,9 +2011,9 @@ package body System.Tasking.Stages is\n         (Self_ID.Deferral_Level > 0\n           or else not System.Restrictions.Abort_Allowed);\n       pragma Assert (Self_ID = Self);\n-      pragma Assert (Self_ID.Master_Within = Self_ID.Master_of_Task + 1\n-                       or else\n-                     Self_ID.Master_Within = Self_ID.Master_of_Task + 2);\n+      pragma Assert\n+        (Self_ID.Master_Within in\n+           Self_ID.Master_of_Task + 1 ..  Self_ID.Master_of_Task + 3);\n       pragma Assert (Self_ID.Common.Wait_Count = 0);\n       pragma Assert (Self_ID.Open_Accepts = null);\n       pragma Assert (Self_ID.ATC_Nesting_Level = 1);"}, {"sha": "1335dcf5a867e30e1ed899a26a5b3125da9fd1b9", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -2094,6 +2094,14 @@ package body Sem_Ch6 is\n                   elsif Is_Tagged_Type (Typ) then\n                      null;\n \n+                  --  Use is legal in a thunk generated for an operation\n+                  --  inherited from a progenitor.\n+\n+                  elsif Is_Thunk (Designator)\n+                    and then Present (Non_Limited_View (Typ))\n+                  then\n+                     null;\n+\n                   elsif Nkind (Parent (N)) = N_Subprogram_Body\n                     or else Nkind_In (Parent (Parent (N)), N_Accept_Statement,\n                                                            N_Entry_Body)"}, {"sha": "bd3cfa6af48dbb6cf225f94327d49e40a967be1d", "filename": "gcc/ada/thread.c", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fthread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed09416ff9ab07e5491373e9af15563b0a0def34/gcc%2Fada%2Fthread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fthread.c?ref=ed09416ff9ab07e5491373e9af15563b0a0def34", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 2011-2013, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 2011-2014, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -54,3 +54,35 @@ __gnat_pthread_condattr_setup (void *attr) {\n }\n \n #endif\n+\n+#if defined (__APPLE__)\n+#include <mach/mach.h>\n+#include <mach/clock.h>\n+#endif\n+\n+/* Return the clock ticks per nanosecond for Posix systems lacking the\n+   Posix extension function clock_getres, or else 0 nsecs on error.  */\n+\n+int\n+__gnat_clock_get_res (void)\n+{\n+#if defined (__APPLE__)\n+  clock_serv_t clock_port;\n+  mach_msg_type_number_t count;\n+  int nsecs;\n+  int result;\n+\n+  count = 1;\n+  result = host_get_clock_service\n+    (mach_host_self (), SYSTEM_CLOCK, &clock_port);\n+\n+  if (result == KERN_SUCCESS)\n+    result = clock_get_attributes (clock_port, CLOCK_GET_TIME_RES,\n+      (clock_attr_t) &nsecs, &count);\n+\n+  if (result == KERN_SUCCESS)\n+    return nsecs;\n+#endif\n+\n+  return 0;\n+}"}]}