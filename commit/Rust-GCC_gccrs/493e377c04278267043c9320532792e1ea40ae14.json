{"sha": "493e377c04278267043c9320532792e1ea40ae14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkzZTM3N2MwNDI3ODI2NzA0M2M5MzIwNTMyNzkyZTFlYTQwYWUxNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-02-10T21:47:12Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-02-10T21:47:12Z"}, "message": "re PR c++/34397 (ICE on invalid default template parameter)\n\n/cp\n2009-02-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/34397\n\t* typeck.c (build_x_array_ref): New.\n\t* cp-tree.h: Declare it.\n\t* pt.c (tsubst_copy_and_build): Use it for case ARRAY_REF.\n\n/testsuite\n2009-02-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/34397\n\t* g++.dg/template/crash88.C: New.\n\t* g++.dg/template/crash89.C: Likewise.\n\nFrom-SVN: r144083", "tree": {"sha": "a3953b2faec3ebc31a95a4a80f9e1ded516c8a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3953b2faec3ebc31a95a4a80f9e1ded516c8a3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/493e377c04278267043c9320532792e1ea40ae14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/493e377c04278267043c9320532792e1ea40ae14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/493e377c04278267043c9320532792e1ea40ae14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/493e377c04278267043c9320532792e1ea40ae14/comments", "author": null, "committer": null, "parents": [{"sha": "1f542826fd1861c078ed2d06fb53d97453a02900", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f542826fd1861c078ed2d06fb53d97453a02900", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f542826fd1861c078ed2d06fb53d97453a02900"}], "stats": {"total": 72, "additions": 60, "deletions": 12}, "files": [{"sha": "5b354374f4830eb8e46f487f3f18f90d3945c26e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/493e377c04278267043c9320532792e1ea40ae14/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/493e377c04278267043c9320532792e1ea40ae14/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=493e377c04278267043c9320532792e1ea40ae14", "patch": "@@ -1,3 +1,10 @@\n+2009-02-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/34397\n+\t* typeck.c (build_x_array_ref): New.\n+\t* cp-tree.h: Declare it.\n+\t* pt.c (tsubst_copy_and_build): Use it for case ARRAY_REF.\n+\n 2009-02-09  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/39109"}, {"sha": "5bf8595a02618c8fe189cec0a75d1f6a8381ba9c", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/493e377c04278267043c9320532792e1ea40ae14/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/493e377c04278267043c9320532792e1ea40ae14/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=493e377c04278267043c9320532792e1ea40ae14", "patch": "@@ -4937,6 +4937,7 @@ extern tree build_x_binary_op\t\t\t(enum tree_code, tree,\n \t\t\t\t\t\t enum tree_code, tree,\n \t\t\t\t\t\t enum tree_code, bool *,\n \t\t\t\t\t\t tsubst_flags_t);\n+extern tree build_x_array_ref\t\t\t(tree, tree, tsubst_flags_t);\n extern tree build_x_unary_op\t\t\t(enum tree_code, tree,\n                                                  tsubst_flags_t);\n extern tree cp_build_unary_op                   (enum tree_code, tree, int, "}, {"sha": "3176dc2b844319e0d8395ae0031b51905fafca6f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/493e377c04278267043c9320532792e1ea40ae14/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/493e377c04278267043c9320532792e1ea40ae14/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=493e377c04278267043c9320532792e1ea40ae14", "patch": "@@ -1,6 +1,7 @@\n /* Handle parameterized types (templates) for GNU C++.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002, 2003, 2004, 2005, 2007, 2008  Free Software Foundation, Inc.\n+   2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n    Written by Ken Raeburn (raeburn@cygnus.com) while at Watchmaker Computing.\n    Rewritten by Jason Merrill (jason@cygnus.com).\n \n@@ -11228,16 +11229,7 @@ tsubst_copy_and_build (tree t,\n     case ARRAY_REF:\n       op1 = tsubst_non_call_postfix_expression (TREE_OPERAND (t, 0),\n \t\t\t\t\t\targs, complain, in_decl);\n-      return build_x_binary_op (ARRAY_REF, op1,\n-\t\t\t\t(TREE_NO_WARNING (TREE_OPERAND (t, 0))\n-\t\t\t\t ? ERROR_MARK\n-\t\t\t\t : TREE_CODE (TREE_OPERAND (t, 0))),\n-\t\t\t\tRECUR (TREE_OPERAND (t, 1)),\n-\t\t\t\t(TREE_NO_WARNING (TREE_OPERAND (t, 1))\n-\t\t\t\t ? ERROR_MARK\n-\t\t\t\t : TREE_CODE (TREE_OPERAND (t, 1))),\n-\t\t\t\t/*overloaded_p=*/NULL,\n-\t\t\t\tcomplain);\n+      return build_x_array_ref (op1, RECUR (TREE_OPERAND (t, 1)), complain);\n \n     case SIZEOF_EXPR:\n       if (PACK_EXPANSION_P (TREE_OPERAND (t, 0)))"}, {"sha": "a6986f94b6352c27304a0bd3a212be1f6382d7fa", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/493e377c04278267043c9320532792e1ea40ae14/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/493e377c04278267043c9320532792e1ea40ae14/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=493e377c04278267043c9320532792e1ea40ae14", "patch": "@@ -3198,6 +3198,34 @@ build_x_binary_op (enum tree_code code, tree arg1, enum tree_code arg1_code,\n   return expr;\n }\n \n+/* Build and return an ARRAY_REF expression.  */\n+\n+tree\n+build_x_array_ref (tree arg1, tree arg2, tsubst_flags_t complain)\n+{\n+  tree orig_arg1 = arg1;\n+  tree orig_arg2 = arg2;\n+  tree expr;\n+\n+  if (processing_template_decl)\n+    {\n+      if (type_dependent_expression_p (arg1)\n+\t  || type_dependent_expression_p (arg2))\n+\treturn build_min_nt (ARRAY_REF, arg1, arg2,\n+\t\t\t     NULL_TREE, NULL_TREE);\n+      arg1 = build_non_dependent_expr (arg1);\n+      arg2 = build_non_dependent_expr (arg2);\n+    }\n+\n+  expr = build_new_op (ARRAY_REF, LOOKUP_NORMAL, arg1, arg2, NULL_TREE,\n+\t\t       /*overloaded_p=*/NULL, complain);\n+\n+  if (processing_template_decl && expr != error_mark_node)\n+    return build_min_non_dep (ARRAY_REF, expr, orig_arg1, orig_arg2,\n+\t\t\t      NULL_TREE, NULL_TREE);\n+  return expr;\n+}\n+\n /* For the c-common bits.  */\n tree\n build_binary_op (location_t location, enum tree_code code, tree op0, tree op1,"}, {"sha": "fedb4c60da298c5373da9ca14c4fb154d4de043e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/493e377c04278267043c9320532792e1ea40ae14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/493e377c04278267043c9320532792e1ea40ae14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=493e377c04278267043c9320532792e1ea40ae14", "patch": "@@ -1,7 +1,13 @@\n+2009-02-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/34397\n+\t* g++.dg/template/crash88.C: New.\n+\t* g++.dg/template/crash89.C: Likewise.\n+\n 2009-02-10  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR c/39084\n-\tgcc.dg/pr39084.c: New test.\n+\t* gcc.dg/pr39084.c: New test.\n \n 2009-02-10  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "438ab90ccddad6581a9a21a4b4f2f595c5571133", "filename": "gcc/testsuite/g++.dg/template/crash88.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/493e377c04278267043c9320532792e1ea40ae14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash88.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/493e377c04278267043c9320532792e1ea40ae14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash88.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash88.C?ref=493e377c04278267043c9320532792e1ea40ae14", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/34397\n+\n+template<typename T, int = T()[0]> struct A\n+{\n+  typedef A<T> B;\n+};"}, {"sha": "e62b57a392842600eb02d1cf0dfa1588d586c5df", "filename": "gcc/testsuite/g++.dg/template/crash89.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/493e377c04278267043c9320532792e1ea40ae14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash89.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/493e377c04278267043c9320532792e1ea40ae14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash89.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash89.C?ref=493e377c04278267043c9320532792e1ea40ae14", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/34397\n+\n+template<typename T, int = T()[0]> struct A\n+{\n+  typedef A<T> B;\n+};\n+\n+A<int> a; // { dg-error \"subscripted|template|declaration\" }"}]}