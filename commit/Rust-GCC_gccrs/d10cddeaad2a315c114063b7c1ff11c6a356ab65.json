{"sha": "d10cddeaad2a315c114063b7c1ff11c6a356ab65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEwY2RkZWFhZDJhMzE1YzExNDA2M2I3YzFmZjExYzZhMzU2YWI2NQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2020-02-05T21:45:05Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2020-02-05T21:45:05Z"}, "message": "Fix PR 93568 (thinko)\n\n2020-02-05  Michael Meissner  <meissner@linux.ibm.com>\n\n\tPR target/93568\n\t* config/rs6000/rs6000.c (get_vector_offset): Fix", "tree": {"sha": "b70823c913c4b91e43abd649586c52bf93cfeace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b70823c913c4b91e43abd649586c52bf93cfeace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d10cddeaad2a315c114063b7c1ff11c6a356ab65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10cddeaad2a315c114063b7c1ff11c6a356ab65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d10cddeaad2a315c114063b7c1ff11c6a356ab65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10cddeaad2a315c114063b7c1ff11c6a356ab65/comments", "author": null, "committer": null, "parents": [{"sha": "44334e036526ac269dc6437caa1976e5bf30e849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44334e036526ac269dc6437caa1976e5bf30e849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44334e036526ac269dc6437caa1976e5bf30e849"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "b986f2891f82308c88d0a2265b5ee3719b53856e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10cddeaad2a315c114063b7c1ff11c6a356ab65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10cddeaad2a315c114063b7c1ff11c6a356ab65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d10cddeaad2a315c114063b7c1ff11c6a356ab65", "patch": "@@ -1,3 +1,8 @@\n+2020-02-05  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\tPR target/93568\n+\t* config/rs6000/rs6000.c (get_vector_offset): Fix\n+\n 2020-02-05  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/t-gcn-hsa (MULTILIB_OPTIONS): Use / not space."}, {"sha": "74579568ee8f6637354556c97be4fbb3d55cbe1e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10cddeaad2a315c114063b7c1ff11c6a356ab65/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10cddeaad2a315c114063b7c1ff11c6a356ab65/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d10cddeaad2a315c114063b7c1ff11c6a356ab65", "patch": "@@ -6744,8 +6744,7 @@ get_vector_offset (rtx mem, rtx element, rtx base_tmp, unsigned scalar_size)\n \n   /* All insns should use the 'Q' constraint (address is a single register) if\n      the element number is not a constant.  */\n-  rtx addr = XEXP (mem, 0);\n-  gcc_assert (satisfies_constraint_Q (addr));\n+  gcc_assert (satisfies_constraint_Q (mem));\n \n   /* Mask the element to make sure the element number is between 0 and the\n      maximum number of elements - 1 so that we don't generate an address"}]}