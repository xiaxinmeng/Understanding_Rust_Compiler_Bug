{"sha": "06c7edcc27e82d457693e971b2f7a7830b12a0a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZjN2VkY2MyN2U4MmQ0NTc2OTNlOTcxYjJmN2E3ODMwYjEyYTBhNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-03-01T09:45:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-03-01T09:45:05Z"}, "message": "re PR lto/46911 (ICE: SIGSEGV in add_name_and_src_coords_attributes (dwarf2out.c:17792) with -flto -g)\n\n2011-03-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/46911\n\t* lto-streamer-in.c (lto_input_ts_decl_common_tree_pointers):\n\tDo not stream DECL_ABSTRACT_ORIGIN.\n\t(lto_input_ts_block_tree_pointers): Nor BLOCK_SOURCE_LOCATION,\n\tBLOCK_NONLOCALIZED_VARS or BLOCK_ABSTRACT_ORIGIN.\n\t* lto-streamer-out.c (lto_output_ts_decl_common_tree_pointers):\n\tDo not stream DECL_ABSTRACT_ORIGIN.\n\t(lto_output_ts_block_tree_pointers): Nor BLOCK_SOURCE_LOCATION,\n\tBLOCK_NONLOCALIZED_VARS or BLOCK_ABSTRACT_ORIGIN.\n\n\t* gfortran.dg/lto/pr46911_0.f: New testcase.\n\nFrom-SVN: r170588", "tree": {"sha": "cafb8fcad8e9b58d7db10092019913f456bcc23f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cafb8fcad8e9b58d7db10092019913f456bcc23f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06c7edcc27e82d457693e971b2f7a7830b12a0a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06c7edcc27e82d457693e971b2f7a7830b12a0a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06c7edcc27e82d457693e971b2f7a7830b12a0a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06c7edcc27e82d457693e971b2f7a7830b12a0a5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d610c25e4a375648bdea9a44dc4c602bd44bf6bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d610c25e4a375648bdea9a44dc4c602bd44bf6bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d610c25e4a375648bdea9a44dc4c602bd44bf6bd"}], "stats": {"total": 74, "additions": 47, "deletions": 27}, "files": [{"sha": "5d567fb498ac5e45997f3f06818885065f7d82d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06c7edcc27e82d457693e971b2f7a7830b12a0a5", "patch": "@@ -1,3 +1,15 @@\n+2011-03-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/46911\n+\t* lto-streamer-in.c (lto_input_ts_decl_common_tree_pointers):\n+\tDo not stream DECL_ABSTRACT_ORIGIN.\n+\t(lto_input_ts_block_tree_pointers): Nor BLOCK_SOURCE_LOCATION,\n+\tBLOCK_NONLOCALIZED_VARS or BLOCK_ABSTRACT_ORIGIN.\n+\t* lto-streamer-out.c (lto_output_ts_decl_common_tree_pointers):\n+\tDo not stream DECL_ABSTRACT_ORIGIN.\n+\t(lto_output_ts_block_tree_pointers): Nor BLOCK_SOURCE_LOCATION,\n+\tBLOCK_NONLOCALIZED_VARS or BLOCK_ABSTRACT_ORIGIN.\n+\n 2011-02-28  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/stormy16/stormy16.h (FUNCTION_VALUE, LIBCALL_VALUE,"}, {"sha": "a87325835f2d20f2befa8a2eaf596ea6d7424a13", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=06c7edcc27e82d457693e971b2f7a7830b12a0a5", "patch": "@@ -1980,7 +1980,9 @@ lto_input_ts_decl_common_tree_pointers (struct lto_input_block *ib,\n     DECL_INITIAL (expr) = lto_input_tree (ib, data_in);\n \n   DECL_ATTRIBUTES (expr) = lto_input_tree (ib, data_in);\n-  DECL_ABSTRACT_ORIGIN (expr) = lto_input_tree (ib, data_in);\n+  /* Do not stream DECL_ABSTRACT_ORIGIN.  We cannot handle debug information\n+     for early inlining so drop it on the floor instead of ICEing in\n+     dwarf2out.c.  */\n \n   if (TREE_CODE (expr) == PARM_DECL)\n     TREE_CHAIN (expr) = lto_input_chain (ib, data_in);\n@@ -2179,24 +2181,19 @@ static void\n lto_input_ts_block_tree_pointers (struct lto_input_block *ib,\n \t\t\t\t  struct data_in *data_in, tree expr)\n {\n-  unsigned i, len;\n-\n-  BLOCK_SOURCE_LOCATION (expr) = lto_input_location (ib, data_in);\n+  /* Do not stream BLOCK_SOURCE_LOCATION.  We cannot handle debug information\n+     for early inlining so drop it on the floor instead of ICEing in\n+     dwarf2out.c.  */\n   BLOCK_VARS (expr) = lto_input_chain (ib, data_in);\n \n-  len = lto_input_uleb128 (ib);\n-  if (len > 0)\n-    {\n-      VEC_reserve_exact (tree, gc, BLOCK_NONLOCALIZED_VARS (expr), len);\n-      for (i = 0; i < len; i++)\n-\t{\n-\t  tree t = lto_input_tree (ib, data_in);\n-\t  VEC_quick_push (tree, BLOCK_NONLOCALIZED_VARS (expr), t);\n-\t}\n-    }\n+  /* Do not stream BLOCK_NONLOCALIZED_VARS.  We cannot handle debug information\n+     for early inlining so drop it on the floor instead of ICEing in\n+     dwarf2out.c.  */\n \n   BLOCK_SUPERCONTEXT (expr) = lto_input_tree (ib, data_in);\n-  BLOCK_ABSTRACT_ORIGIN (expr) = lto_input_tree (ib, data_in);\n+  /* Do not stream BLOCK_ABSTRACT_ORIGIN.  We cannot handle debug information\n+     for early inlining so drop it on the floor instead of ICEing in\n+     dwarf2out.c.  */\n   BLOCK_FRAGMENT_ORIGIN (expr) = lto_input_tree (ib, data_in);\n   BLOCK_FRAGMENT_CHAIN (expr) = lto_input_tree (ib, data_in);\n   /* We re-compute BLOCK_SUBBLOCKS of our parent here instead"}, {"sha": "ba916b64c34f2ee31744f515a6e6d69b3e1a4f69", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=06c7edcc27e82d457693e971b2f7a7830b12a0a5", "patch": "@@ -870,7 +870,9 @@ lto_output_ts_decl_common_tree_pointers (struct output_block *ob, tree expr,\n     }\n \n   lto_output_tree_or_ref (ob, DECL_ATTRIBUTES (expr), ref_p);\n-  lto_output_tree_or_ref (ob, DECL_ABSTRACT_ORIGIN (expr), ref_p);\n+  /* Do not stream DECL_ABSTRACT_ORIGIN.  We cannot handle debug information\n+     for early inlining so drop it on the floor instead of ICEing in\n+     dwarf2out.c.  */\n \n   if (TREE_CODE (expr) == PARM_DECL)\n     lto_output_chain (ob, TREE_CHAIN (expr), ref_p);\n@@ -1054,21 +1056,19 @@ static void\n lto_output_ts_block_tree_pointers (struct output_block *ob, tree expr,\n \t\t\t\t   bool ref_p)\n {\n-  unsigned i;\n-  tree t;\n-\n-  lto_output_location (ob, BLOCK_SOURCE_LOCATION (expr));\n+  /* Do not stream BLOCK_SOURCE_LOCATION.  We cannot handle debug information\n+     for early inlining so drop it on the floor instead of ICEing in\n+     dwarf2out.c.  */\n   lto_output_chain (ob, BLOCK_VARS (expr), ref_p);\n \n-  output_uleb128 (ob, VEC_length (tree, BLOCK_NONLOCALIZED_VARS (expr)));\n-  FOR_EACH_VEC_ELT (tree, BLOCK_NONLOCALIZED_VARS (expr), i, t)\n-    {\n-      gcc_assert (DECL_CONTEXT (t) != expr);\n-      lto_output_tree_or_ref (ob, t, ref_p);\n-    }\n+  /* Do not stream BLOCK_NONLOCALIZED_VARS.  We cannot handle debug information\n+     for early inlining so drop it on the floor instead of ICEing in\n+     dwarf2out.c.  */\n \n   lto_output_tree_or_ref (ob, BLOCK_SUPERCONTEXT (expr), ref_p);\n-  lto_output_tree_or_ref (ob, BLOCK_ABSTRACT_ORIGIN (expr), ref_p);\n+  /* Do not stream BLOCK_ABSTRACT_ORIGIN.  We cannot handle debug information\n+     for early inlining so drop it on the floor instead of ICEing in\n+     dwarf2out.c.  */\n   lto_output_tree_or_ref (ob, BLOCK_FRAGMENT_ORIGIN (expr), ref_p);\n   lto_output_tree_or_ref (ob, BLOCK_FRAGMENT_CHAIN (expr), ref_p);\n   /* Do not output BLOCK_SUBBLOCKS.  Instead on streaming-in this"}, {"sha": "65e0db406bf2f8f30e7e31294af7d17136093497", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06c7edcc27e82d457693e971b2f7a7830b12a0a5", "patch": "@@ -1,3 +1,8 @@\n+2011-03-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/46911\n+\t* gfortran.dg/lto/pr46911_0.f: New testcase.\n+\n 2011-02-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/47933"}, {"sha": "fce959750aea7915cc5324bee5552eaebd5b1658", "filename": "gcc/testsuite/gfortran.dg/lto/pr46911_0.f", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr46911_0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c7edcc27e82d457693e971b2f7a7830b12a0a5/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr46911_0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr46911_0.f?ref=06c7edcc27e82d457693e971b2f7a7830b12a0a5", "patch": "@@ -0,0 +1,6 @@\n+! { dg-lto-do link }\n+! { dg-lto-options {{ -O2 -flto -g }} }\n+! { dg-extra-ld-options \"-r -nostdlib\" }\n+      common/main1/ eps(2)\n+      call dalie6s(iqmod6,1,wx,cor6d)\n+      end"}]}