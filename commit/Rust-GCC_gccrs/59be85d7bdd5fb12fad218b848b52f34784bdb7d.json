{"sha": "59be85d7bdd5fb12fad218b848b52f34784bdb7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTliZTg1ZDdiZGQ1ZmIxMmZhZDIxOGI4NDhiNTJmMzQ3ODRiZGI3ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@phydeaux.cygnus.com", "date": "1995-02-03T03:45:07Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-02-03T03:45:07Z"}, "message": "Fix MI conversions\n\nFrom-SVN: r8856", "tree": {"sha": "8b855428bb19a544a4240942d32ffe6818f10607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b855428bb19a544a4240942d32ffe6818f10607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59be85d7bdd5fb12fad218b848b52f34784bdb7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59be85d7bdd5fb12fad218b848b52f34784bdb7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59be85d7bdd5fb12fad218b848b52f34784bdb7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59be85d7bdd5fb12fad218b848b52f34784bdb7d/comments", "author": null, "committer": null, "parents": [{"sha": "31117bfb57d044f326f2a9496e14a70b6f8b042f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31117bfb57d044f326f2a9496e14a70b6f8b042f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31117bfb57d044f326f2a9496e14a70b6f8b042f"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "c871a580395154eb75e2fdf2f1d62c2362aded27", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59be85d7bdd5fb12fad218b848b52f34784bdb7d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59be85d7bdd5fb12fad218b848b52f34784bdb7d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=59be85d7bdd5fb12fad218b848b52f34784bdb7d", "patch": "@@ -1,3 +1,10 @@\n+Thu Feb  2 15:07:58 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n+\n+        * class.c (build_vbase_path): Bash types to make the backend happy.\n+        * cvt.c (build_up_reference): Bash the types bashed by\n+        build_vbase_path to be reference types instead of pointer types.\n+        (convert_to_reference): Ditto.\n+\n Wed Jan 25 15:02:09 1995  David S. Miller  (davem@nadzieja.rutgers.edu)\n \n \t* class.c (instantiate_type): Change error message text."}, {"sha": "79e76bb3a767d56f8af658909fa4537ece59ce73", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59be85d7bdd5fb12fad218b848b52f34784bdb7d/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59be85d7bdd5fb12fad218b848b52f34784bdb7d/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=59be85d7bdd5fb12fad218b848b52f34784bdb7d", "patch": "@@ -303,6 +303,10 @@ build_vbase_path (code, type, expr, path, alias_this)\n \n   if (TREE_INT_CST_LOW (offset))\n     {\n+      /* Bash types to make the backend happy.  */\n+      offset = convert (type, offset);\n+      expr = build1 (NOP_EXPR, type, expr);\n+\n       /* For multiple inheritance: if `this' can be set by any\n \t function, then it could be 0 on entry to any function.\n \t Preserve such zeroness here.  Otherwise, only in the"}, {"sha": "27d38fcdb12c7c3e01b3118690ef87f93401746a", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59be85d7bdd5fb12fad218b848b52f34784bdb7d/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59be85d7bdd5fb12fad218b848b52f34784bdb7d/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=59be85d7bdd5fb12fad218b848b52f34784bdb7d", "patch": "@@ -609,6 +609,9 @@ build_up_reference (type, arg, flags, checkconst)\n \trval\n \t  = convert_to_pointer_force (build_pointer_type (target_type), rval);\n       TREE_TYPE (rval) = type;\n+      if (TREE_CODE (rval) == PLUS_EXPR || TREE_CODE (rval) == MINUS_EXPR)\n+\tTREE_TYPE (TREE_OPERAND (rval, 0))\n+\t  = TREE_TYPE (TREE_OPERAND (rval, 1)) = type;\n     }\n   TREE_CONSTANT (rval) = literal_flag;\n   return rval;\n@@ -683,6 +686,9 @@ convert_to_reference (reftype, expr, convtype, flags, decl)\n \t\t\t     convtype, flags);\n \t  TREE_TYPE (expr) = type;\n \t  TREE_TYPE (rval) = reftype;\n+\t  if (TREE_CODE (rval) == PLUS_EXPR || TREE_CODE (rval) == MINUS_EXPR)\n+\t    TREE_TYPE (TREE_OPERAND (rval, 0))\n+\t      = TREE_TYPE (TREE_OPERAND (rval, 1)) = reftype;\n \t  return rval;\n \t}\n "}]}