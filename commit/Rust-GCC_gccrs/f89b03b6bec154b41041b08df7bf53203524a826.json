{"sha": "f89b03b6bec154b41041b08df7bf53203524a826", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg5YjAzYjZiZWMxNTRiNDEwNDFiMDhkZjdiZjUzMjAzNTI0YTgyNg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-08-18T13:07:53Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-08-18T13:07:53Z"}, "message": "Evict selftest tempfiles from the diagnostics file cache\n\nSelftests can use class selftest::temp_source_file to write out files\nfor testing input-handling, and the files are unlinked in the dtor.\n\nThis leads to stale entries in input.c's cache of file content, which\ncould lead to errors if a temporary filename gets reused during a run\nof the selftests.\n\nWe don't normally expect files to be \"deleted from under us\", so\nspecial-case this by adding a special way for temp_source_file's\ndtor to purge any cache entries referring to it.\n\ngcc/ChangeLog:\n\t* input.c (diagnostics_file_cache_forcibly_evict_file): New\n\tfunction.\n\t* input.h (diagnostics_file_cache_forcibly_evict_file): New\n\tdeclaration.\n\t* selftest.c (selftest::temp_source_file::~temp_source_file):\n\tEvict m_filename from the diagnostic file cache.\n\nFrom-SVN: r239570", "tree": {"sha": "16edeb7bb8574ddbbe228f6cc852ec20e0ca6e1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16edeb7bb8574ddbbe228f6cc852ec20e0ca6e1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f89b03b6bec154b41041b08df7bf53203524a826", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89b03b6bec154b41041b08df7bf53203524a826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f89b03b6bec154b41041b08df7bf53203524a826", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89b03b6bec154b41041b08df7bf53203524a826/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f02510201aff3a572f7c67fcce3ee90c127ecd76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f02510201aff3a572f7c67fcce3ee90c127ecd76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f02510201aff3a572f7c67fcce3ee90c127ecd76"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "eb870117a3c13c10bec5cb49d233889381b74a62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89b03b6bec154b41041b08df7bf53203524a826/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89b03b6bec154b41041b08df7bf53203524a826/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f89b03b6bec154b41041b08df7bf53203524a826", "patch": "@@ -1,3 +1,12 @@\n+2016-08-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* input.c (diagnostics_file_cache_forcibly_evict_file): New\n+\tfunction.\n+\t* input.h (diagnostics_file_cache_forcibly_evict_file): New\n+\tdeclaration.\n+\t* selftest.c (selftest::temp_source_file::~temp_source_file):\n+\tEvict m_filename from the diagnostic file cache.\n+\n 2016-08-18  Richard Biener  <rguenther@suse.de>\n \n \t* tree-pass.h (make_pass_materialize_all_clones): Declare."}, {"sha": "76a33077bc29e70ae8675dd83203a2c291e9360c", "filename": "gcc/input.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89b03b6bec154b41041b08df7bf53203524a826/gcc%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89b03b6bec154b41041b08df7bf53203524a826/gcc%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.c?ref=f89b03b6bec154b41041b08df7bf53203524a826", "patch": "@@ -249,6 +249,32 @@ lookup_file_in_cache_tab (const char *file_path)\n   return r;\n }\n \n+/* Purge any mention of FILENAME from the cache of files used for\n+   printing source code.  For use in selftests when working\n+   with tempfiles.  */\n+\n+void\n+diagnostics_file_cache_forcibly_evict_file (const char *file_path)\n+{\n+  gcc_assert (file_path);\n+\n+  fcache *r = lookup_file_in_cache_tab (file_path);\n+  if (!r)\n+    /* Not found.  */\n+    return;\n+\n+  r->file_path = NULL;\n+  if (r->fp)\n+    fclose (r->fp);\n+  r->fp = NULL;\n+  r->nb_read = 0;\n+  r->line_start_idx = 0;\n+  r->line_num = 0;\n+  r->line_record.truncate (0);\n+  r->use_count = 0;\n+  r->total_lines = 0;\n+}\n+\n /* Return the file cache that has been less used, recently, or the\n    first empty one.  If HIGHEST_USE_COUNT is non-null,\n    *HIGHEST_USE_COUNT is set to the highest use count of the entries"}, {"sha": "0f187c7f2ba8765f335f153a04ff674773d351c5", "filename": "gcc/input.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89b03b6bec154b41041b08df7bf53203524a826/gcc%2Finput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89b03b6bec154b41041b08df7bf53203524a826/gcc%2Finput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.h?ref=f89b03b6bec154b41041b08df7bf53203524a826", "patch": "@@ -95,6 +95,8 @@ void dump_location_info (FILE *stream);\n \n void diagnostics_file_cache_fini (void);\n \n+void diagnostics_file_cache_forcibly_evict_file (const char *file_path);\n+\n struct GTY(()) string_concat\n {\n   string_concat (int num, location_t *locs);"}, {"sha": "d25f5c08db7e782b2385c363809ad3bbd7755bd7", "filename": "gcc/selftest.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89b03b6bec154b41041b08df7bf53203524a826/gcc%2Fselftest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89b03b6bec154b41041b08df7bf53203524a826/gcc%2Fselftest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.c?ref=f89b03b6bec154b41041b08df7bf53203524a826", "patch": "@@ -111,6 +111,7 @@ selftest::temp_source_file::temp_source_file (const location &loc,\n selftest::temp_source_file::~temp_source_file ()\n {\n   unlink (m_filename);\n+  diagnostics_file_cache_forcibly_evict_file (m_filename);\n   free (m_filename);\n }\n "}]}