{"sha": "9545f3a9332fae81336a901e3702c1bb92e14e09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU0NWYzYTkzMzJmYWU4MTMzNmE5MDFlMzcwMmMxYmI5MmUxNGUwOQ==", "commit": {"author": {"name": "Mark Anderson", "email": "mark@panonet.net", "date": "2005-04-02T01:18:45Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-04-02T01:18:45Z"}, "message": "natDouble.cc (parseDouble): Handle NaN, Infinity and -Infinity as parameters.\n\n2005-04-01 Mark Anderson <mark@panonet.net>\n\n\t* java/lang/natDouble.cc (parseDouble): Handle NaN, Infinity and\n\t-Infinity as parameters.\n\nFrom-SVN: r97424", "tree": {"sha": "1107afaacc3de84f9c543f1f5b47ea68a0383ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1107afaacc3de84f9c543f1f5b47ea68a0383ad2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9545f3a9332fae81336a901e3702c1bb92e14e09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9545f3a9332fae81336a901e3702c1bb92e14e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9545f3a9332fae81336a901e3702c1bb92e14e09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9545f3a9332fae81336a901e3702c1bb92e14e09/comments", "author": null, "committer": null, "parents": [{"sha": "55b01ba091756b72782fe85f7678bf37903a2ff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55b01ba091756b72782fe85f7678bf37903a2ff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55b01ba091756b72782fe85f7678bf37903a2ff9"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "50b0f95b6a54a5d6e68609338c4ce23907f1b118", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9545f3a9332fae81336a901e3702c1bb92e14e09/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9545f3a9332fae81336a901e3702c1bb92e14e09/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9545f3a9332fae81336a901e3702c1bb92e14e09", "patch": "@@ -1,3 +1,8 @@\n+2005-04-01 Mark Anderson <mark@panonet.net>\n+\n+\t* java/lang/natDouble.cc (parseDouble): Handle NaN, Infinity and\n+\t-Infinity as parameters.\n+\n 2005-04-01  Michael Koch  <konqueror@gmx.de>\n \n \t* java/io/PipedInputStream.java"}, {"sha": "72fe5fbe1c64f38f240a17c6f85f087eaa801dfe", "filename": "libjava/java/lang/natDouble.cc", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9545f3a9332fae81336a901e3702c1bb92e14e09/libjava%2Fjava%2Flang%2FnatDouble.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9545f3a9332fae81336a901e3702c1bb92e14e09/libjava%2Fjava%2Flang%2FnatDouble.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatDouble.cc?ref=9545f3a9332fae81336a901e3702c1bb92e14e09", "patch": "@@ -1,6 +1,6 @@\n // natDouble.cc - Implementation of java.lang.Double native methods.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2003  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2003, 2005  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -167,11 +167,15 @@ java::lang::Double::parseDouble(jstring str)\n     length--;\n \n   // The String could end with a f/F/d/D which is valid but we don't need.\n+  bool saw_trailer = false;\n   if (length > 0)\n     {\n       jchar last = str->charAt(length-1);\n       if (last == 'f' || last == 'F' || last == 'd' || last == 'D')\n-\tlength--;\n+\t{\n+\t  length--;\n+\t  saw_trailer = true;\n+\t}\n     }\n \n   jsize start = 0;\n@@ -186,6 +190,17 @@ java::lang::Double::parseDouble(jstring str)\n       jsize blength = _Jv_GetStringUTFRegion (str, start, length, data);\n       data[blength] = 0; \n \n+      if (! saw_trailer)\n+\t{\n+\t  if (! strcmp (data, \"NaN\") || ! strcmp (data, \"+NaN\")\n+\t      || ! strcmp (data, \"-NaN\"))\n+\t    return NaN;\n+\t  else if (! strcmp (data, \"Infinity\") || ! strcmp (data, \"+Infinity\"))\n+\t    return POSITIVE_INFINITY;\n+\t  else if (! strcmp (data, \"-Infinity\"))\n+\t    return NEGATIVE_INFINITY;\n+\t}\n+\n       struct _Jv_reent reent;  \n       memset (&reent, 0, sizeof reent);\n "}]}