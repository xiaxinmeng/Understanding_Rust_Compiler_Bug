{"sha": "b206a75783f8f5a05bb90cad311592c7b717e97c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIwNmE3NTc4M2Y4ZjVhMDViYjkwY2FkMzExNTkyYzdiNzE3ZTk3Yw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-05T20:42:25Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-05T20:42:25Z"}, "message": "(CLASS_MAX_NREGS): For DFmode and !TARGET_FLOAT64 case,\n\nreturn 2 not 4.\n(CLASS_UNITS): Take size parameter instead of num (words).\n\nFrom-SVN: r5618", "tree": {"sha": "25a25a7a5799221f1040567263ec2a683bafc6d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25a25a7a5799221f1040567263ec2a683bafc6d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b206a75783f8f5a05bb90cad311592c7b717e97c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b206a75783f8f5a05bb90cad311592c7b717e97c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b206a75783f8f5a05bb90cad311592c7b717e97c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b206a75783f8f5a05bb90cad311592c7b717e97c/comments", "author": null, "committer": null, "parents": [{"sha": "cae856a00a52c9adc2d17702a95763df9d42f230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae856a00a52c9adc2d17702a95763df9d42f230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae856a00a52c9adc2d17702a95763df9d42f230"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "59af3dabc959594c5fcb556e02d10474795923b8", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b206a75783f8f5a05bb90cad311592c7b717e97c/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b206a75783f8f5a05bb90cad311592c7b717e97c/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=b206a75783f8f5a05bb90cad311592c7b717e97c", "patch": "@@ -1472,15 +1472,15 @@ extern enum reg_class mips_char_to_class[];\n /* Return the maximum number of consecutive registers\n    needed to represent mode MODE in a register of class CLASS.  */\n \n-#define CLASS_UNITS(mode, num)\t\t\t\t\t\t\\\n-  ((GET_MODE_SIZE (mode) + ((num) * UNITS_PER_WORD) - 1) / ((num) * UNITS_PER_WORD))\n+#define CLASS_UNITS(mode, size)\t\t\t\t\t\t\\\n+  ((GET_MODE_SIZE (mode) + (size) - 1) / (size))\n \n #define CLASS_MAX_NREGS(CLASS, MODE)\t\t\t\t\t\\\n-  (((CLASS) == FP_REGS && TARGET_FLOAT64)\t\t\t\t\\\n-\t? CLASS_UNITS (MODE, 2)\t\t\t\t\t\t\\\n-\t: (((CLASS) == FP_REGS)\t\t\t\t\t\t\\\n-\t\t? (2*CLASS_UNITS (MODE, 1))\t\t\t\t\\\n-\t\t: CLASS_UNITS (MODE, 1)))\n+  ((CLASS) == FP_REGS\t\t\t\t\t\t\t\\\n+   ? (TARGET_FLOAT64\t\t\t\t\t\t\t\\\n+      ? CLASS_UNITS (MODE, 8)\t\t\t\t\t\t\\\n+      : 2 * CLASS_UNITS (MODE, 8))\t\t\t\t\t\\\n+   : CLASS_UNITS (MODE, UNITS_PER_WORD))\n \n /* If defined, this is a C expression whose value should be\n    nonzero if the insn INSN has the effect of mysteriously"}]}