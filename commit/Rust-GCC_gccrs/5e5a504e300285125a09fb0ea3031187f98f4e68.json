{"sha": "5e5a504e300285125a09fb0ea3031187f98f4e68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU1YTUwNGUzMDAyODUxMjVhMDlmYjBlYTMwMzExODdmOThmNGU2OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-08-02T00:12:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-08-02T00:12:50Z"}, "message": "tree-ssa-dom.c (thread_across_edge): Remove updating here.\n\n\n\t* tree-ssa-dom.c (thread_across_edge): Remove updating here.\n\t(thread_block): Add it here.\n\t* update-threading.c: New test.\n\nFrom-SVN: r102648", "tree": {"sha": "4f22c96f262454dcd5fa7e0ea8d297439b65cbfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f22c96f262454dcd5fa7e0ea8d297439b65cbfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e5a504e300285125a09fb0ea3031187f98f4e68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e5a504e300285125a09fb0ea3031187f98f4e68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e5a504e300285125a09fb0ea3031187f98f4e68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e5a504e300285125a09fb0ea3031187f98f4e68/comments", "author": null, "committer": null, "parents": [{"sha": "4dbdb061864825507e4d964c8904c82970fcb17d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dbdb061864825507e4d964c8904c82970fcb17d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dbdb061864825507e4d964c8904c82970fcb17d"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "3be4e2192dbb6e70afaed2d170676018e3134df8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e5a504e300285125a09fb0ea3031187f98f4e68", "patch": "@@ -1,3 +1,8 @@\n+2005-08-02  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-ssa-dom.c (thread_across_edge): Remove updating here.\n+\t* tree-ssa-threadupdate.c (thread_block): Add it here.\n+\n 2005-08-01  James E Wilson  <wilson@specifix.com>\n \n \t* config/mips/mips.c (mips_encode_section_info, mips_attribute_table,"}, {"sha": "2efa49912e4b3e435857f2173e55264e2446acc1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e5a504e300285125a09fb0ea3031187f98f4e68", "patch": "@@ -1,3 +1,7 @@\n+2005-08-02  Jan Hubicka  <jh@suse.cz>\n+\n+\t* update-threading.c: New test.\n+\n 2005-08-01  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* gcc.c-torture/compile/20050801-1.c: New test."}, {"sha": "d9fdac8a66ffd867e1a6ca06ea8b1c3beb79f23d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/update-threading.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fupdate-threading.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fupdate-threading.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fupdate-threading.c?ref=5e5a504e300285125a09fb0ea3031187f98f4e68", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+typedef struct { unsigned short a; } A;\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+void foo (unsigned int x)\n+{\n+  if (x != 0x800 && x != 0x810)\n+    abort ();\n+}\n+\n+int\n+main (int argc, char **argv)\n+{\n+  int i;\n+  for (i = 0; i < 2; ++i)\n+    foo (((A) { ((!(i >> 4) ? 8 : 64 + (i >> 4)) << 8) + (i << 4) } ).a);\n+  exit (0);\n+}\n+/* { dg-final { scan-tree-dump-times \".optimized\" 0 \"Invalid sum\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "6d99e54364008e158c83fb22e3fa173650c1e3eb", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=5e5a504e300285125a09fb0ea3031187f98f4e68", "patch": "@@ -848,8 +848,6 @@ thread_across_edge (struct dom_walk_data *walk_data, edge e)\n \t    {\n \t      struct edge_info *edge_info;\n \n-\t      update_bb_profile_for_threading (e->dest, EDGE_FREQUENCY (e),\n-\t\t\t\t\t       e->count, taken_edge);\n \t      if (e->aux)\n \t\tedge_info = e->aux;\n \t      else"}, {"sha": "ab748ad7798e187b5a22117da07b76c47cb0e368", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e5a504e300285125a09fb0ea3031187f98f4e68/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=5e5a504e300285125a09fb0ea3031187f98f4e68", "patch": "@@ -724,6 +724,8 @@ thread_block (basic_block bb)\n       else\n \t{\n \t  edge e2 = e->aux;\n+\t  update_bb_profile_for_threading (e->dest, EDGE_FREQUENCY (e),\n+\t\t\t\t\t   e->count, e->aux);\n \n \t  /* If we thread to a loop exit edge, then we will need to \n \t     rediscover the loop exit edges.  While it may seem that"}]}