{"sha": "7066c0eca18f99aca3e88a08b2aaf71d970d0ab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2NmMwZWNhMThmOTlhY2EzZTg4YTA4YjJhYWY3MWQ5NzBkMGFiNg==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-01-16T18:26:36Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-01-17T14:21:59Z"}, "message": "Support GroupedExpr's\n\nThis makes the expression handling support exprs within parens. Such as:\n  x = (2*a) + 3;", "tree": {"sha": "6a7626091cb903a168937d15138e998ed5b79d78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a7626091cb903a168937d15138e998ed5b79d78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a79e3b31be51d16c6dcc87722d35fe8cc3227355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79e3b31be51d16c6dcc87722d35fe8cc3227355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a79e3b31be51d16c6dcc87722d35fe8cc3227355"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "682ff794b235cfb882d51ad36857bc910d013bb9", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=7066c0eca18f99aca3e88a08b2aaf71d970d0ab6", "patch": "@@ -428,6 +428,11 @@ class CompileExpr : public HIRCompileBase\n \t\t\t\t\t\t     struct_expr.get_locus ());\n   }\n \n+  void visit (HIR::GroupedExpr &expr)\n+  {\n+    translated = CompileExpr::Compile (expr.get_expr_in_parens ().get (), ctx);\n+  }\n+\n private:\n   CompileExpr (Context *ctx) : HIRCompileBase (ctx), translated (nullptr) {}\n "}, {"sha": "1003e8c4aa32db77cae8ae7f44dfbe263af299b7", "filename": "gcc/rust/hir/rust-ast-lower-expr.h", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h?ref=7066c0eca18f99aca3e88a08b2aaf71d970d0ab6", "patch": "@@ -525,6 +525,25 @@ class ASTLoweringExpr : public ASTLoweringBase\n \t\t\t\t\t inner_attribs, outer_attribs);\n   }\n \n+  void visit (AST::GroupedExpr &expr)\n+  {\n+    std::vector<HIR::Attribute> inner_attribs;\n+    std::vector<HIR::Attribute> outer_attribs;\n+\n+    HIR::Expr *paren_expr\n+      = ASTLoweringExpr::translate (expr.get_expr_in_parens ().get ());\n+\n+    auto crate_num = mappings->get_current_crate ();\n+    Analysis::NodeMapping mapping (crate_num, expr.get_node_id (),\n+\t\t\t\t   mappings->get_next_hir_id (crate_num),\n+\t\t\t\t   UNKNOWN_LOCAL_DEFID);\n+\n+    translated\n+      = new HIR::GroupedExpr (mapping, std::unique_ptr<HIR::Expr> (paren_expr),\n+\t\t\t      std::move (inner_attribs),\n+\t\t\t      std::move (outer_attribs), expr.get_locus ());\n+  }\n+\n private:\n   ASTLoweringExpr ()\n     : translated (nullptr), translated_array_elems (nullptr), terminated (false)"}, {"sha": "bb8499aad234966f7fbacab86e6720abd110cea4", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=7066c0eca18f99aca3e88a08b2aaf71d970d0ab6", "patch": "@@ -880,6 +880,12 @@ class GroupedExpr : public ExprWithoutBlock\n \n   void accept_vis (HIRVisitor &vis) override;\n \n+  std::unique_ptr<Expr> &get_expr_in_parens ()\n+  {\n+    rust_assert (expr_in_parens != nullptr);\n+    return expr_in_parens;\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "dd3c8b9df6ee66e66af08433da6597b885834a20", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=7066c0eca18f99aca3e88a08b2aaf71d970d0ab6", "patch": "@@ -435,6 +435,11 @@ class TypeCheckExpr : public TypeCheckBase\n     infered = TypeCheckStructExpr::Resolve (&struct_expr);\n   }\n \n+  void visit (HIR::GroupedExpr &expr)\n+  {\n+    infered = TypeCheckExpr::Resolve (expr.get_expr_in_parens ().get ());\n+  }\n+\n private:\n   TypeCheckExpr (bool is_final_expr)\n     : TypeCheckBase (), infered (nullptr), infered_array_elems (nullptr),"}, {"sha": "33d9d867e0988d39a2a977c50414dfb63e216f71", "filename": "gcc/testsuite/rust.test/compilable/parens1.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fparens1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7066c0eca18f99aca3e88a08b2aaf71d970d0ab6/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fparens1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fparens1.rs?ref=7066c0eca18f99aca3e88a08b2aaf71d970d0ab6", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let a = 123;\n+    let b = a + (a * 2);\n+}"}]}