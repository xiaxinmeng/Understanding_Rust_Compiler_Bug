{"sha": "57883245f35ac30d83c43339b45927b1cb20e4e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc4ODMyNDVmMzVhYzMwZDgzYzQzMzM5YjQ1OTI3YjFjYjIwZTRlNg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-12-04T23:56:00Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-12-04T23:56:00Z"}, "message": "(finish_struct): Don't mess with the type of bitfields.\n\nFrom-SVN: r10673", "tree": {"sha": "f29f9bb786b8fb3cf03cdad97df9521e36996b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f29f9bb786b8fb3cf03cdad97df9521e36996b2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57883245f35ac30d83c43339b45927b1cb20e4e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57883245f35ac30d83c43339b45927b1cb20e4e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57883245f35ac30d83c43339b45927b1cb20e4e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57883245f35ac30d83c43339b45927b1cb20e4e6/comments", "author": null, "committer": null, "parents": [{"sha": "953776a3f518c0a7cbc778a69b2dc2f87ca733d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/953776a3f518c0a7cbc778a69b2dc2f87ca733d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/953776a3f518c0a7cbc778a69b2dc2f87ca733d8"}], "stats": {"total": 21, "additions": 0, "deletions": 21}, "files": [{"sha": "68d61db579145fc017203ae095c0a470d7d1e035", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57883245f35ac30d83c43339b45927b1cb20e4e6/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57883245f35ac30d83c43339b45927b1cb20e4e6/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=57883245f35ac30d83c43339b45927b1cb20e4e6", "patch": "@@ -5690,27 +5690,6 @@ finish_struct (t, fieldlist, attributes)\n       TYPE_ALIGN (x) = TYPE_ALIGN (t);\n     }\n \n-  /* Promote each bit-field's type to int if it is narrower than that.  */\n-  for (x = fieldlist; x; x = TREE_CHAIN (x))\n-    if (DECL_BIT_FIELD (x)\n-\t&& (C_PROMOTING_INTEGER_TYPE_P (TREE_TYPE (x))\n-\t    || DECL_FIELD_SIZE (x) < TYPE_PRECISION (integer_type_node)))\n-      {\n-\ttree type = TREE_TYPE (x);\n-\n-\t/* Preserve unsignedness if traditional\n-\t   or if not really getting any wider.  */\n-\tif (TREE_UNSIGNED (type)\n-\t    && (flag_traditional\n-\t\t||\n-\t\t(TYPE_PRECISION (type) == TYPE_PRECISION (integer_type_node)\n-\t\t &&\n-\t\t DECL_FIELD_SIZE (x) == TYPE_PRECISION (integer_type_node))))\n-\t  TREE_TYPE (x) = unsigned_type_node;\n-\telse\n-\t  TREE_TYPE (x) = integer_type_node;\n-      }\n-\n   /* If this was supposed to be a transparent union, but we can't\n      make it one, warn and turn off the flag.  */\n   if (TREE_CODE (t) == UNION_TYPE"}]}