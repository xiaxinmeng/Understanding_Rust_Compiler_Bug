{"sha": "77a035209c28b345536995adcfbd6ce8cdfb4611", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdhMDM1MjA5YzI4YjM0NTUzNjk5NWFkY2ZiZDZjZThjZGZiNDYxMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-29T14:37:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-29T14:37:47Z"}, "message": "[multiple changes]\n\n2013-01-29  Ben Brosgol  <brosgol@adacore.com>\n\n\t* gnat_rm.texi: Fixed typos. Minor edits.\n\n2013-01-29  Bob Duff  <duff@adacore.com>\n\n\t* a-convec.adb: Minor reformatting.\n\n2013-01-29  Pascal Obry  <obry@adacore.com>\n\n\t* tempdir.adb, tempdir.ads (Use_Temp_Dir): Set wether to use the temp\n\tdirectory.\n\nFrom-SVN: r195548", "tree": {"sha": "96e7cff9bff407ddd4bf83ecf523ff267e7bdd1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96e7cff9bff407ddd4bf83ecf523ff267e7bdd1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77a035209c28b345536995adcfbd6ce8cdfb4611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a035209c28b345536995adcfbd6ce8cdfb4611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a035209c28b345536995adcfbd6ce8cdfb4611", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a035209c28b345536995adcfbd6ce8cdfb4611/comments", "author": null, "committer": null, "parents": [{"sha": "23b64e6533088b4252a4224c234c51c262ca6102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b64e6533088b4252a4224c234c51c262ca6102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23b64e6533088b4252a4224c234c51c262ca6102"}], "stats": {"total": 89, "additions": 60, "deletions": 29}, "files": [{"sha": "ec58e95cb8fa78952c1ddb85ec4e00ab1858ba26", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=77a035209c28b345536995adcfbd6ce8cdfb4611", "patch": "@@ -1,3 +1,16 @@\n+2013-01-29  Ben Brosgol  <brosgol@adacore.com>\n+\n+\t* gnat_rm.texi: Fixed typos. Minor edits.\n+\n+2013-01-29  Bob Duff  <duff@adacore.com>\n+\n+\t* a-convec.adb: Minor reformatting.\n+\n+2013-01-29  Pascal Obry  <obry@adacore.com>\n+\n+\t* tempdir.adb, tempdir.ads (Use_Temp_Dir): Set wether to use the temp\n+\tdirectory.\n+\n 2013-01-29  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch5.adb (Expand_Iterator_Loop_Over_Array): Preserve loop"}, {"sha": "a67c156c2bc71b10dd627596e5b137a2410a9500", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=77a035209c28b345536995adcfbd6ce8cdfb4611", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -582,8 +582,8 @@ package body Ada.Containers.Vectors is\n          C := Capacity;\n \n       else\n-         raise Capacity_Error\n-           with \"Requested capacity is less than Source length\";\n+         raise Capacity_Error with\n+           \"Requested capacity is less than Source length\";\n       end if;\n \n       return Target : Vector do"}, {"sha": "bdad3f62a81f59ed5416239596f1d40e950cd422", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=77a035209c28b345536995adcfbd6ce8cdfb4611", "patch": "@@ -2893,7 +2893,7 @@ implementation_kind ::= By_Entry | By_Protected_Procedure | By_Any\n This is an Ada 2012 representation pragma which applies to protected, task\n and synchronized interface primitives. The use of pragma Implemented provides\n a way to impose a static requirement on the overriding operation by adhering\n-to one of the three implementation kids: entry, protected procedure or any of\n+to one of the three implementation kinds: entry, protected procedure or any of\n the above. This pragma is available in all earlier versions of Ada as an\n implementation-defined pragma.\n \n@@ -3237,7 +3237,7 @@ of the same name). It is also available as an implementation-defined\n pragma in all earlier versions. It specifies that the\n designated object or all objects of the designated type must be\n independently addressable. This means that separate tasks can safely\n-manipulate such objects. For example, if two comonents of a record are\n+manipulate such objects. For example, if two components of a record are\n independent, then two separate tasks may access these two components.\n This may place\n constraints on the representation of the object (for instance prohibiting\n@@ -3257,9 +3257,10 @@ pragma Independent_Components (Local_NAME);\n This pragma is standard in Ada 2012 mode (which also provides an aspect\n of the same name). It is also available as an implementation-defined\n pragma in all earlier versions. It specifies that the components of the\n-designated object or all objects of the designated type must be\n+designated object, or the components of each object of the designated\n+type, must be\n independently addressable. This means that separate tasks can safely\n-manipulate separate components in the composite object. this may place\n+manipulate separate components in the composite object. This may place\n constraints on the representation of the object (for instance prohibiting\n tight packing).\n "}, {"sha": "7da1ef2d040251b70199e8eb49257d06b51f697d", "filename": "gcc/ada/tempdir.adb", "status": "modified", "additions": 32, "deletions": 21, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2Ftempdir.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2Ftempdir.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftempdir.adb?ref=77a035209c28b345536995adcfbd6ce8cdfb4611", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,8 +35,7 @@ package body Tempdir is\n \n    Tmpdir    : constant String := \"TMPDIR\";\n    Gnutmpdir : constant String := \"GNUTMPDIR\";\n-   No_Dir    : aliased String  := \"\";\n-   Temp_Dir  : String_Access   := No_Dir'Access;\n+   Temp_Dir  : String_Access   := new String'(\"\");\n \n    ----------------------\n    -- Create_Temp_File --\n@@ -46,7 +45,7 @@ package body Tempdir is\n      (FD   : out File_Descriptor;\n       Name : out Path_Name_Type)\n    is\n-      File_Name : String_Access;\n+      File_Name   : String_Access;\n       Current_Dir : constant String := Get_Current_Dir;\n \n       function Directory return String;\n@@ -60,7 +59,6 @@ package body Tempdir is\n       begin\n          if Temp_Dir'Length /= 0 then\n             return Temp_Dir.all;\n-\n          else\n             return Current_Dir;\n          end if;\n@@ -102,7 +100,6 @@ package body Tempdir is\n             Path_Name : constant String :=\n                           Normalize_Pathname\n                             (Directory & Directory_Separator & File_Name.all);\n-\n          begin\n             Name_Len := Path_Name'Length;\n             Name_Buffer (1 .. Name_Len) := Path_Name;\n@@ -112,35 +109,49 @@ package body Tempdir is\n       end if;\n    end Create_Temp_File;\n \n---  Start of elaboration for package Tempdir\n+   ------------------\n+   -- Use_Temp_Dir --\n+   ------------------\n \n-begin\n-   declare\n+   procedure Use_Temp_Dir (Status : Boolean) is\n       Dir : String_Access;\n \n    begin\n-      --  On VMS, if GNUTMPDIR is defined, use it\n+      if Status then\n \n-      if OpenVMS then\n-         Dir := Getenv (Gnutmpdir);\n+         --  On VMS, if GNUTMPDIR is defined, use it\n \n-         --  Otherwise, if GNUTMPDIR is not defined, try TMPDIR\n+         if OpenVMS then\n+            Dir := Getenv (Gnutmpdir);\n \n-         if Dir'Length = 0 then\n+            --  Otherwise, if GNUTMPDIR is not defined, try TMPDIR\n+\n+            if Dir'Length = 0 then\n+               Dir := Getenv (Tmpdir);\n+            end if;\n+\n+         else\n             Dir := Getenv (Tmpdir);\n          end if;\n-\n-      else\n-         Dir := Getenv (Tmpdir);\n       end if;\n \n-      if Dir'Length > 0 and then\n-        Is_Absolute_Path (Dir.all) and then\n-        Is_Directory (Dir.all)\n+      Free (Temp_Dir);\n+\n+      if Dir /= null\n+        and then Dir'Length > 0\n+        and then Is_Absolute_Path (Dir.all)\n+        and then Is_Directory (Dir.all)\n       then\n          Temp_Dir := new String'(Normalize_Pathname (Dir.all));\n+      else\n+         Temp_Dir := new String'(\"\");\n       end if;\n \n       Free (Dir);\n-   end;\n+   end Use_Temp_Dir;\n+\n+--  Start of elaboration for package Tempdir\n+\n+begin\n+   Use_Temp_Dir (Status => True);\n end Tempdir;"}, {"sha": "bf8ab266642d3d694ab051cbff43fba170e7981b", "filename": "gcc/ada/tempdir.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2Ftempdir.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a035209c28b345536995adcfbd6ce8cdfb4611/gcc%2Fada%2Ftempdir.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftempdir.ads?ref=77a035209c28b345536995adcfbd6ce8cdfb4611", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,4 +44,10 @@ package Tempdir is\n    --  directory. If temporary file cannot be created, FD gets the value\n    --  Invalid_FD and Name gets the value No_Name.\n \n+   procedure Use_Temp_Dir (Status : Boolean);\n+   --  Specify if the temp file should be created in the system temporary\n+   --  directory as specified by the corresponding environment variables. If\n+   --  Status is False, the temp files will be created into the current working\n+   --  directory.\n+\n end Tempdir;"}]}