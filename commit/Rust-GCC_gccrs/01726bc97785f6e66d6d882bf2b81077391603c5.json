{"sha": "01726bc97785f6e66d6d882bf2b81077391603c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE3MjZiYzk3Nzg1ZjZlNjZkNmQ4ODJiZjJiODEwNzczOTE2MDNjNQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2017-02-08T09:14:39Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2017-02-08T09:14:39Z"}, "message": "[riscv] Fix build due to INT16_MAX issue\n\n\t* config/riscv/riscv.c (riscv_build_integer_1): Avoid use of INT16_MAX.\n\nFrom-SVN: r245272", "tree": {"sha": "c508e4c77ec2520564cb1350bc542510ae56ad46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c508e4c77ec2520564cb1350bc542510ae56ad46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01726bc97785f6e66d6d882bf2b81077391603c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01726bc97785f6e66d6d882bf2b81077391603c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01726bc97785f6e66d6d882bf2b81077391603c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01726bc97785f6e66d6d882bf2b81077391603c5/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d798497efc24b3787683cd31ead1863fa7a461f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d798497efc24b3787683cd31ead1863fa7a461f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d798497efc24b3787683cd31ead1863fa7a461f5"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "bb1e7e995563d7962e92a6971aa2e6df8e2775a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01726bc97785f6e66d6d882bf2b81077391603c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01726bc97785f6e66d6d882bf2b81077391603c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01726bc97785f6e66d6d882bf2b81077391603c5", "patch": "@@ -1,3 +1,7 @@\n+2016-02-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/riscv/riscv.c (riscv_build_integer_1): Avoid use of INT16_MAX.\n+\n 2017-02-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71824"}, {"sha": "89567f72b711685c52a7e59962943dde2ace6811", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01726bc97785f6e66d6d882bf2b81077391603c5/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01726bc97785f6e66d6d882bf2b81077391603c5/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=01726bc97785f6e66d6d882bf2b81077391603c5", "patch": "@@ -356,7 +356,9 @@ riscv_build_integer_1 (struct riscv_integer_op codes[RISCV_MAX_INTEGER_OPS],\n   /* End with ADDI.  When constructing HImode constants, do not generate any\n      intermediate value that is not itself a valid HImode constant.  The\n      XORI case below will handle those remaining HImode constants.  */\n-  if (low_part != 0 && (mode != HImode || value - low_part <= INT16_MAX))\n+  if (low_part != 0\n+      && (mode != HImode\n+\t  || value - low_part <= ((1 << (GET_MODE_BITSIZE (HImode) - 1)) - 1)))\n     {\n       alt_cost = 1 + riscv_build_integer_1 (alt_codes, value - low_part, mode);\n       if (alt_cost < cost)"}]}