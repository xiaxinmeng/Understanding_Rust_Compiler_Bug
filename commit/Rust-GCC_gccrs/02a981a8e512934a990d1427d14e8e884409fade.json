{"sha": "02a981a8e512934a990d1427d14e8e884409fade", "node_id": "C_kwDOANBUbNoAKDAyYTk4MWE4ZTUxMjkzNGE5OTBkMTQyN2QxNGU4ZTg4NDQwOWZhZGU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-14T15:56:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-14T15:56:15Z"}, "message": "c++: Don't reject GOTO_EXPRs to cdtor_label in potential_constant_expression_1 [PR104513]\n\nreturn in ctors on targetm.cxx.cdtor_returns_this () target like arm\nis emitted as GOTO_EXPR cdtor_label where at cdtor_label it emits\nRETURN_EXPR with the this.\nSimilarly, in all dtors regardless of targetm.cxx.cdtor_returns_this ()\na return is emitted similarly.\n\npotential_constant_expression_1 was rejecting these gotos and so we\nincorrectly rejected these testcases, but actual cxx_eval* is apparently\nhandling these just fine.  I was a little bit worried that for the\ndestruction of bases we wouldn't evaluate something we should, but as the\ntestcase shows, that is evaluated through try ... finally and there is\nnothing after the cdtor_label.  For arm there is RETURN_EXPR this; but we\ndon't really care about the return value from ctors and dtors during the\nconstexpr evaluation.\n\nI must say I don't see much the point of cdtor_labels at all, I'd think\nthat with try ... finally around it for non-arm we could just RETURN_EXPR\ninstead of the GOTO_EXPR and the try/finally gimplification would DTRT,\nand we could just add the right return value for the arm case.\n\n2022-02-14  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/104513\n\t* constexpr.cc (potential_constant_expression_1) <case GOTO_EXPR>:\n\tDon't punt if returns (target).\n\n\t* g++.dg/cpp1y/constexpr-104513.C: New test.\n\t* g++.dg/cpp2a/constexpr-dtor12.C: New test.", "tree": {"sha": "1768cb34ce0f58dcec04825631f3f934dfe153bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1768cb34ce0f58dcec04825631f3f934dfe153bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02a981a8e512934a990d1427d14e8e884409fade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a981a8e512934a990d1427d14e8e884409fade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a981a8e512934a990d1427d14e8e884409fade", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a981a8e512934a990d1427d14e8e884409fade/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d51cad0b840a14c66732cb6a166c11ddf55d18b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51cad0b840a14c66732cb6a166c11ddf55d18b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d51cad0b840a14c66732cb6a166c11ddf55d18b2"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "7274c3b760e300d0b63cd31f78ca86fc54039a77", "filename": "gcc/cp/constexpr.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a981a8e512934a990d1427d14e8e884409fade/gcc%2Fcp%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a981a8e512934a990d1427d14e8e884409fade/gcc%2Fcp%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.cc?ref=02a981a8e512934a990d1427d14e8e884409fade", "patch": "@@ -9363,8 +9363,8 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict, bool now,\n     case GOTO_EXPR:\n       {\n \ttree *target = &TREE_OPERAND (t, 0);\n-\t/* Gotos representing break and continue are OK.  */\n-\tif (breaks (target) || continues (target))\n+\t/* Gotos representing break, continue and cdtor return are OK.  */\n+\tif (breaks (target) || continues (target) || returns (target))\n \t  {\n \t    *jump_target = *target;\n \t    return true;"}, {"sha": "4fa78a3e0254acb39242787fedb1816126308c8c", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-104513.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a981a8e512934a990d1427d14e8e884409fade/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-104513.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a981a8e512934a990d1427d14e8e884409fade/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-104513.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-104513.C?ref=02a981a8e512934a990d1427d14e8e884409fade", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/104513\n+// { dg-do compile { target c++14 } }\n+\n+struct A {\n+  int a1;\n+  short a2, a3;\n+  long a4;\n+  constexpr A() : a1(42), a2(42), a3(42), a4(42) { return; }\n+};\n+constexpr A a;"}, {"sha": "19f9099b9a5d5b076ba1a0023f6607d7fa780ab7", "filename": "gcc/testsuite/g++.dg/cpp2a/constexpr-dtor12.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a981a8e512934a990d1427d14e8e884409fade/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-dtor12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a981a8e512934a990d1427d14e8e884409fade/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-dtor12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-dtor12.C?ref=02a981a8e512934a990d1427d14e8e884409fade", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/104513\n+// { dg-do compile { target c++20 } }\n+\n+struct S {\n+  constexpr S () : s (nullptr) {}\n+  constexpr ~S () { delete s; }\n+  int *s;\n+};\n+struct T : S {\n+  constexpr T () : S () {}\n+  constexpr ~T () { s = new int (42); return; }\n+};\n+constexpr T t;"}]}