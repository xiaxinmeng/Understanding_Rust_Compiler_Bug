{"sha": "0af66bdce078d022e19dae1c83dfa06f7f622648", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFmNjZiZGNlMDc4ZDAyMmUxOWRhZTFjODNkZmEwNmY3ZjYyMjY0OA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-22T13:56:31Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:56:31Z"}, "message": "[Ada] Spurious warning about a useless assignment\n\nThis patch removes a spurious warning about a useless assignment, when a\ncomposite object is the target of an assignment and is an actual for an\nout parameter in a subsewuent call, and there is an intervening use of\nthe object as the prefix of a selected component in an intervening\noperation.\n\n2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Selected_Component): If the prefix has a\n\tdeferred reference, generate the correct reference now, to\n\tindicate that the previous assignment is used.  This prevents\n\tspurious warnings on useless assignments when compiling with all\n\twarnings enabled. when there is a subsequent call in the same\n\tstqtement list, in which the prefix of the selected component is\n\tthe actual for an out parameter.\n\ngcc/testsuite/\n\n\t* gnat.dg/warn22.adb: New testcase.\n\nFrom-SVN: r273669", "tree": {"sha": "8ecf8d102e9fc5189e3062f60afbb9a751826811", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ecf8d102e9fc5189e3062f60afbb9a751826811"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0af66bdce078d022e19dae1c83dfa06f7f622648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af66bdce078d022e19dae1c83dfa06f7f622648", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0af66bdce078d022e19dae1c83dfa06f7f622648", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af66bdce078d022e19dae1c83dfa06f7f622648/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c961d8205b749d6df462202efd09efa6bf01442d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c961d8205b749d6df462202efd09efa6bf01442d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c961d8205b749d6df462202efd09efa6bf01442d"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "c42164b0042cf2146f0c027e16652e19033d9a54", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af66bdce078d022e19dae1c83dfa06f7f622648/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af66bdce078d022e19dae1c83dfa06f7f622648/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0af66bdce078d022e19dae1c83dfa06f7f622648", "patch": "@@ -1,3 +1,13 @@\n+2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Selected_Component): If the prefix has a\n+\tdeferred reference, generate the correct reference now, to\n+\tindicate that the previous assignment is used.  This prevents\n+\tspurious warnings on useless assignments when compiling with all\n+\twarnings enabled. when there is a subsequent call in the same\n+\tstqtement list, in which the prefix of the selected component is\n+\tthe actual for an out parameter.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_attr.adb (Expand_Loop_Entry_Attribute): Copy the condition"}, {"sha": "fd4fedc303273cc949d9fd451ea5166454ffac3a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af66bdce078d022e19dae1c83dfa06f7f622648/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af66bdce078d022e19dae1c83dfa06f7f622648/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=0af66bdce078d022e19dae1c83dfa06f7f622648", "patch": "@@ -10625,8 +10625,25 @@ package body Sem_Res is\n       if Is_Access_Type (Etype (P)) then\n          T := Designated_Type (Etype (P));\n          Check_Fully_Declared_Prefix (T, P);\n+\n       else\n          T := Etype (P);\n+\n+         --  If the prefix is an entity it may have a deferred reference set\n+         --  during analysis of the selected component. After resolution we\n+         --  can transform it into a proper reference. This prevents spurious\n+         --  warnings on useless assignments when the same selected component\n+         --  is the actual for an out parameter in a subsequent call.\n+\n+         if Is_Entity_Name (P)\n+           and then Has_Deferred_Reference (Entity (P))\n+         then\n+            if May_Be_Lvalue (N) then\n+               Generate_Reference (Entity (P), P, 'm');\n+            else\n+               Generate_Reference (Entity (P), P, 'r');\n+            end if;\n+         end if;\n       end if;\n \n       --  Set flag for expander if discriminant check required on a component"}, {"sha": "f8372bae4818f67250b4ca59cb38b04f4068be2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af66bdce078d022e19dae1c83dfa06f7f622648/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af66bdce078d022e19dae1c83dfa06f7f622648/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0af66bdce078d022e19dae1c83dfa06f7f622648", "patch": "@@ -1,3 +1,7 @@\n+2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/warn22.adb: New testcase.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/loop_invariant1.adb, gnat.dg/loop_invariant1.ads: New"}, {"sha": "0a1692f6f49f42b0b0d9c10f780619598ad8e7f7", "filename": "gcc/testsuite/gnat.dg/warn22.adb", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af66bdce078d022e19dae1c83dfa06f7f622648/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn22.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af66bdce078d022e19dae1c83dfa06f7f622648/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn22.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn22.adb?ref=0af66bdce078d022e19dae1c83dfa06f7f622648", "patch": "@@ -0,0 +1,34 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatwa\" }\n+\n+with Ada.Text_IO;\n+\n+procedure Warn22\n+is\n+   type X is\n+      record\n+         Str : String (1 .. 3);\n+      end record;\n+\n+   type T is\n+      record\n+         Value : X;\n+      end record;\n+\n+   procedure Consume_Data (Item : out T) is\n+   begin\n+      Item := (Value => (Str => \"Bar\"));\n+   end Consume_Data;\n+\n+   Baz : T;\n+begin\n+\n+   Baz := (Value => (Str => \"Foo\"));\n+\n+   Ada.Text_IO.Put_Line (Baz.Value.Str);\n+\n+   Consume_Data (Baz);\n+\n+   Ada.Text_IO.Put_Line (Baz.Value.Str);\n+\n+end Warn22;"}]}