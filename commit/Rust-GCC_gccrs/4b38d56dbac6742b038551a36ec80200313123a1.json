{"sha": "4b38d56dbac6742b038551a36ec80200313123a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIzOGQ1NmRiYWM2NzQyYjAzODU1MWEzNmVjODAyMDAzMTMxMjNhMQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-04-04T22:09:53Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-05-20T21:00:06Z"}, "message": "c++: C++20 DR 2237, disallow simple-template-id in cdtor.\n\nThis patch implements DR 2237 which says that a simple-template-id is\nno longer valid as the declarator-id of a constructor or destructor;\nsee [diff.cpp17.class]#2.  It is not explicitly stated but out-of-line\ndestructors with a simple-template-id are also meant to be ill-formed\nnow.  (Out-of-line constructors like that are invalid since DR1435 I\nthink.)  This change only applies to C++20; it is not a DR against C++17.\n\nI'm not crazy about the diagnostic in constructors but ISTM that\ncp_parser_constructor_declarator_p shouldn't print errors.\n\n\tDR 2237\n\t* parser.c (cp_parser_unqualified_id): Reject simple-template-id as\n\tthe declarator-id of a destructor.\n\t(cp_parser_constructor_declarator_p): Reject simple-template-id as\n\tthe declarator-id of a constructor.\n\n\t* g++.dg/DRs/dr2237.C: New test.\n\t* g++.dg/parse/constructor2.C: Add dg-error for C++20.\n\t* g++.dg/parse/dtor12.C: Likewise.\n\t* g++.dg/parse/dtor4.C: Likewise.\n\t* g++.dg/template/dtor4.C: Adjust dg-error.\n\t* g++.dg/template/error34.C: Likewise.\n\t* g++.old-deja/g++.other/inline15.C: Only run for C++17 and lesses.\n\t* g++.old-deja/g++.pt/ctor2.C: Add dg-error for C++20.", "tree": {"sha": "7d75adf2b43a0debeada1db1e232ef344aed5d74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d75adf2b43a0debeada1db1e232ef344aed5d74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b38d56dbac6742b038551a36ec80200313123a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b38d56dbac6742b038551a36ec80200313123a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b38d56dbac6742b038551a36ec80200313123a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b38d56dbac6742b038551a36ec80200313123a1/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38a4db21e12816c674406f33d8bc4d064d4211d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a4db21e12816c674406f33d8bc4d064d4211d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a4db21e12816c674406f33d8bc4d064d4211d7"}], "stats": {"total": 75, "additions": 62, "deletions": 13}, "files": [{"sha": "cfe5cf003664d2062503770b49248d2f28f44e0e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -1,3 +1,11 @@\n+2020-05-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tDR 2237\n+\t* parser.c (cp_parser_unqualified_id): Reject simple-template-id as\n+\tthe declarator-id of a destructor.\n+\t(cp_parser_constructor_declarator_p): Reject simple-template-id as\n+\tthe declarator-id of a constructor.\n+\n 2020-05-20  Marek Polacek  <polacek@redhat.com>\n \n \tDR 2289"}, {"sha": "a8082d39aca25b51d261fb98f2d1e7e943a6673d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -6108,6 +6108,15 @@ cp_parser_unqualified_id (cp_parser* parser,\n \t    return build_min_nt_loc (loc, BIT_NOT_EXPR, make_auto ());\n \t  }\n \n+\t/* DR 2237 (C++20 only): A simple-template-id is no longer valid as the\n+\t   declarator-id of a constructor or destructor.  */\n+\tif (token->type == CPP_TEMPLATE_ID && cxx_dialect >= cxx20)\n+\t  {\n+\t    if (!cp_parser_simulate_error (parser))\n+\t      error_at (tilde_loc, \"template-id not allowed for destructor\");\n+\t    return error_mark_node;\n+\t  }\n+\n \t/* If there was an explicit qualification (S::~T), first look\n \t   in the scope given by the qualification (i.e., S).\n \n@@ -28628,7 +28637,9 @@ cp_parser_constructor_declarator_p (cp_parser *parser, cp_parser_flags flags,\n   if (next_token->type != CPP_NAME\n       && next_token->type != CPP_SCOPE\n       && next_token->type != CPP_NESTED_NAME_SPECIFIER\n-      && next_token->type != CPP_TEMPLATE_ID)\n+      /* DR 2237 (C++20 only): A simple-template-id is no longer valid as the\n+\t declarator-id of a constructor or destructor.  */\n+      && (next_token->type != CPP_TEMPLATE_ID || cxx_dialect >= cxx20))\n     return false;\n \n   /* Parse tentatively; we are going to roll back all of the tokens"}, {"sha": "e9d334d3aef9396359153e8fdda1af998ace1601", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -1,3 +1,15 @@\n+2020-05-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tDR 2237\n+\t* g++.dg/DRs/dr2237.C: New test.\n+\t* g++.dg/parse/constructor2.C: Add dg-error for C++20.\n+\t* g++.dg/parse/dtor12.C: Likewise.\n+\t* g++.dg/parse/dtor4.C: Likewise.\n+\t* g++.dg/template/dtor4.C: Adjust dg-error.\n+\t* g++.dg/template/error34.C: Likewise.\n+\t* g++.old-deja/g++.other/inline15.C: Only run for C++17 and lesses.\n+\t* g++.old-deja/g++.pt/ctor2.C: Add dg-error for C++20.\n+\n 2020-05-20  Marek Polacek  <polacek@redhat.com>\n \n \tDR 2289"}, {"sha": "f3d6d11e61e4d2b75bc24afc46662d561d605f78", "filename": "gcc/testsuite/g++.dg/DRs/dr2237.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FDRs%2Fdr2237.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FDRs%2Fdr2237.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FDRs%2Fdr2237.C?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -0,0 +1,18 @@\n+// DR 2237 - Can a template-id name a constructor?\n+\n+template<class T>\n+struct X {\n+  X<T>(); // { dg-error \"expected\" \"\" { target c++20 } }\n+  X(int); // OK, injected-class-name used\n+  ~X<T>(); // { dg-error \"template-id not allowed for destructor\" \"\" { target c++20 } }\n+};\n+\n+// ill-formed since DR1435\n+template<typename T> X<T>::X<T>() {} // { dg-error \"names the constructor|as no template constructors\" }\n+template<typename T> X<T>::~X<T>() {} // { dg-error \"template-id not allowed for destructor\" \"\" { target c++20 } }\n+\n+struct Q {\n+  // ill-formed since DR1435\n+  template<typename T> friend X<T>::X<T>(); // { dg-error \"names the constructor|as no template constructors\" }\n+  template<typename T> friend X<T>::~X<T>(); // { dg-error \"template-id not allowed for destructor\" \"\" { target c++20 } }\n+};"}, {"sha": "d620f41e0279d469caafb3c79fe3a69164c88d54", "filename": "gcc/testsuite/g++.dg/parse/constructor2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstructor2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstructor2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstructor2.C?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -5,7 +5,7 @@ class T\n { \n public: \n   T(short,short f=0) {} \n-  T<TClass>(int f) {} \n-  T<TClass>(int f=0,const char* b=0) {} \n+  T<TClass>(int f) {} // { dg-error \"expected\" \"\" { target c++20 } }\n+  T<TClass>(int f=0,const char* b=0) {} // { dg-error \"expected\" \"\" { target c++20 } }\n }; \n "}, {"sha": "dda7388192be21034b42958cfa02913cfa3f23e7", "filename": "gcc/testsuite/g++.dg/parse/dtor12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor12.C?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -2,5 +2,5 @@\n \n template <class T> class a\n {\n-  ~a<T>();\n+  ~a<T>(); // { dg-error \"template-id not allowed for destructor\" \"\" { target c++20 } }\n };"}, {"sha": "1a1a8458745d1100dbcbd898d902f55fdbf83e86", "filename": "gcc/testsuite/g++.dg/parse/dtor4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor4.C?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -7,4 +7,4 @@ template <int N> struct X {\n };\n \n template <int N>\n-X<N>::~X<N>(){}\n+X<N>::~X<N>(){} // { dg-error \"template-id not allowed for destructor\" \"\" { target c++20 } }"}, {"sha": "917681fc13e0343cb6841133723764455fcada55", "filename": "gcc/testsuite/g++.dg/template/dtor4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor4.C?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -5,5 +5,5 @@\n \n template<int> struct A\n {\n-  ~A<0>(); // { dg-error \"parse error|declaration\" }\n+  ~A<0>(); // { dg-error \"parse error|declaration|template-id\" }\n };"}, {"sha": "ab688d9ba8c3625dcaa8f42f5ead599f3f268221", "filename": "gcc/testsuite/g++.dg/template/error34.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror34.C?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -3,27 +3,27 @@\n \n template<typename T> struct A\n {\n-  A<__builtin_offsetof(T, x)>();\t// { dg-error \"type/value mismatch|offsetof\\\\(T, x\\\\)\" }\n+  A<__builtin_offsetof(T, x)>();\t// { dg-error \"type/value mismatch|offsetof\\\\(T, x\\\\)|expected\" }\n };\n \n template<typename T> struct B\n {\n-  B<__builtin_offsetof(T, x.y)>();\t// { dg-error \"type/value mismatch|offsetof\\\\(T, x.y\\\\)\" }\n+  B<__builtin_offsetof(T, x.y)>();\t// { dg-error \"type/value mismatch|offsetof\\\\(T, x.y\\\\)|expected\" }\n };\n \n template<typename T> struct C\n {\n-  C<__builtin_offsetof(T, x[6])>();\t// { dg-error \"type/value mismatch|offsetof\\\\(T, x\\\\\\[6\\\\\\]\\\\)\" }\n+  C<__builtin_offsetof(T, x[6])>();\t// { dg-error \"type/value mismatch|offsetof\\\\(T, x\\\\\\[6\\\\\\]\\\\)|expected\" }\n };\n \n template<typename T> struct D\n {\n-  D<__builtin_offsetof(T, x.y[6].z)>();\t// { dg-error \"type/value mismatch|offsetof\\\\(T, x.y\\\\\\[6\\\\\\].z\\\\)\" }\n+  D<__builtin_offsetof(T, x.y[6].z)>();\t// { dg-error \"type/value mismatch|offsetof\\\\(T, x.y\\\\\\[6\\\\\\].z\\\\)|expected\" }\n };\n \n struct E { int x; };\n \n template<typename T> struct F\n {\n-  F<__builtin_offsetof(E, x)>();\t// { dg-error \"type/value mismatch|offsetof\\\\(E, x\\\\)\" }\n+  F<__builtin_offsetof(E, x)>();\t// { dg-error \"type/value mismatch|offsetof\\\\(E, x\\\\)|expected\" }\n };"}, {"sha": "a31c60960a5a834466c85da981ea1a55915b2d41", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline15.C?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do assemble  }\n+// { dg-do assemble { target c++17_down } }\n // { dg-options \"-O1\" }\n // Origin: Jakub Jelinek <jakub@redhat.com>\n "}, {"sha": "bf418ba48c747bf0ba632a57930e592019aa2cb3", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ctor2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fctor2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b38d56dbac6742b038551a36ec80200313123a1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fctor2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fctor2.C?ref=4b38d56dbac6742b038551a36ec80200313123a1", "patch": "@@ -4,7 +4,7 @@\n \n template <class T>\n struct A {\n-  A<T>();\n+  A<T>(); // { dg-error \"expected\" \"\" { target c++20 } }\n };\n \n template <class T>"}]}