{"sha": "8a972abdd98acac11c9882957ebf5e68d532948e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE5NzJhYmRkOThhY2FjMTFjOTg4Mjk1N2ViZjVlNjhkNTMyOTQ4ZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-01-29T14:57:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-01-29T14:57:42Z"}, "message": "re PR libstdc++/59829 (Calling vector::data() occurs undefined behavior when the vector is empty)\n\n\tPR libstdc++/59829\n\t* include/bits/stl_vector.h (vector::data()): Call _M_data_ptr.\n\t(vector::_M_data_ptr): New overloaded functions to ensure empty\n\tvectors do not dereference the pointer.\n\t* testsuite/23_containers/vector/59829.cc: New.\n\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\nFrom-SVN: r207241", "tree": {"sha": "4382950e3b74baf8bcacd9f0099feaf5da63c35e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4382950e3b74baf8bcacd9f0099feaf5da63c35e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a972abdd98acac11c9882957ebf5e68d532948e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a972abdd98acac11c9882957ebf5e68d532948e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a972abdd98acac11c9882957ebf5e68d532948e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a972abdd98acac11c9882957ebf5e68d532948e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "200674232e05d09888ff21965b0ed12c6f54f7ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200674232e05d09888ff21965b0ed12c6f54f7ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200674232e05d09888ff21965b0ed12c6f54f7ca"}], "stats": {"total": 110, "additions": 104, "deletions": 6}, "files": [{"sha": "9578071f478d2bc4e5b9ab7c4ff593e7922a9aec", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8a972abdd98acac11c9882957ebf5e68d532948e", "patch": "@@ -24,6 +24,20 @@\n \tNew.\n \t* testsuite/20_util/allocator_traits/requirements/typedefs2.cc: New.\n \n+\tPR libstdc++/59829\n+\t* include/bits/stl_vector.h (vector::data()): Call _M_data_ptr.\n+\t(vector::_M_data_ptr): New overloaded functions to ensure empty\n+\tvectors do not dereference the pointer.\n+\t* testsuite/23_containers/vector/59829.cc: New.\n+\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\n 2014-01-28  Jonathan Wakely  <jwakely@redhat.com>\n \t    Kyle Lippincott  <spectral@google.com>\n "}, {"sha": "7e52fde55b1be4e9f8700f52bc50bf35e9b84a7b", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=8a972abdd98acac11c9882957ebf5e68d532948e", "patch": "@@ -888,15 +888,15 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       pointer\n #endif\n       data() _GLIBCXX_NOEXCEPT\n-      { return std::__addressof(front()); }\n+      { return _M_data_ptr(this->_M_impl._M_start); }\n \n #if __cplusplus >= 201103L\n       const _Tp*\n #else\n       const_pointer\n #endif\n       data() const _GLIBCXX_NOEXCEPT\n-      { return std::__addressof(front()); }\n+      { return _M_data_ptr(this->_M_impl._M_start); }\n \n       // [23.2.4.3] modifiers\n       /**\n@@ -1470,6 +1470,23 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t  }\n       }\n #endif\n+\n+#if __cplusplus >= 201103L\n+      template<typename _Up>\n+\t_Up*\n+\t_M_data_ptr(_Up* __ptr) const\n+\t{ return __ptr; }\n+\n+      template<typename _Ptr>\n+\ttypename std::pointer_traits<_Ptr>::element_type*\n+\t_M_data_ptr(_Ptr __ptr) const\n+\t{ return empty() ? nullptr : std::__addressof(*__ptr); }\n+#else\n+      template<typename _Ptr>\n+\t_Ptr\n+\t_M_data_ptr(_Ptr __ptr) const\n+\t{ return __ptr; }\n+#endif\n     };\n \n "}, {"sha": "1818c8941ec0e2094132c0616dac443e89a115e3", "filename": "libstdc++-v3/testsuite/23_containers/vector/59829.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F59829.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F59829.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F59829.cc?ref=8a972abdd98acac11c9882957ebf5e68d532948e", "patch": "@@ -0,0 +1,67 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+\n+// libstdc++/59829\n+\n+#include <vector>\n+#include <testsuite_allocator.h>\n+\n+// User-defined pointer type that throws if a null pointer is dereferenced.\n+template<typename T>\n+struct Pointer : __gnu_test::PointerBase<Pointer<T>, T>\n+{\n+  using __gnu_test::PointerBase<Pointer<T>, T>::PointerBase;\n+\n+  T& operator*() const\n+  {\n+    if (!this->value)\n+      throw \"Dereferenced invalid pointer\";\n+    return *this->value;\n+  }\n+};\n+\n+// Minimal allocator using Pointer<T>\n+template<typename T>\n+struct Alloc\n+{\n+  typedef T value_type;\n+  typedef Pointer<T> pointer;\n+\n+  Alloc() = default;\n+  template<typename U>\n+    Alloc(const Alloc<U>&) { }\n+\n+  pointer allocate(std::size_t n)\n+  { return pointer(std::allocator<T>().allocate(n)); }\n+\n+  void deallocate(pointer p, std::size_t n)\n+  { std::allocator<T>().deallocate(p.value, n); }\n+};\n+\n+template<typename T>\n+bool operator==(Alloc<T> l, Alloc<T> r) { return true; }\n+\n+template<typename T>\n+bool operator!=(Alloc<T> l, Alloc<T> r) { return false; }\n+\n+int main()\n+{\n+  std::vector<int, Alloc<int>> a;\n+  a.data();\n+}"}, {"sha": "191fbc7bfdb3da4bc97f0d6363fddf75ef2eaaec", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=8a972abdd98acac11c9882957ebf5e68d532948e", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1316 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1320 }\n \n #include <vector>\n "}, {"sha": "8818a88ccd779805de42bd1099d96277b33bbaf7", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=8a972abdd98acac11c9882957ebf5e68d532948e", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1242 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1246 }\n \n #include <vector>\n "}, {"sha": "09499bcbad7a6350b3b566e9b019c24f6bd9eac7", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=8a972abdd98acac11c9882957ebf5e68d532948e", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1242 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1246 }\n \n #include <vector>\n #include <utility>"}, {"sha": "674e3b5d6e505420bb5a20b8d6fa3ce6e231dd4b", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a972abdd98acac11c9882957ebf5e68d532948e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=8a972abdd98acac11c9882957ebf5e68d532948e", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1357 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1361 }\n \n #include <vector>\n "}]}