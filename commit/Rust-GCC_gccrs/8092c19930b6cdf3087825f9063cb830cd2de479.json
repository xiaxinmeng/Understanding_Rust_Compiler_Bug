{"sha": "8092c19930b6cdf3087825f9063cb830cd2de479", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA5MmMxOTkzMGI2Y2RmMzA4NzgyNWY5MDYzY2I4MzBjZDJkZTQ3OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-06-03T07:42:19Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-15T13:43:00Z"}, "message": "[Ada] Ongoing work for AI12-0212: container aggregates\n\ngcc/ada/\n\n\t* par-ch4.adb (P_Iterated_Component_Association): Extended to\n\trecognzize the similar Iterated_Element_Association. This node\n\tis only generated when an explicit Key_Expression is given.\n\tOtherwise the distinction between the two iterated forms is done\n\tduring semantic analysis.\n\t* sinfo.ads: New node N_Iterated_Element_Association, for\n\tAda202x container aggregates.  New field Key_Expression.\n\t* sinfo.adb: Subprograms for new node and newn field.\n\t* sem_aggr.adb (Resolve_Iterated_Component_Association): Handle\n\tthe case where the Iteration_Scheme is an\n\tIterator_Specification.\n\t* exp_aggr.adb (Wxpand_Iterated_Component): Handle a component\n\twith an Iterated_Component_Association, generate proper loop\n\tusing given Iterator_Specification.\n\t* exp_util.adb (Insert_Axtions): Handle new node as other\n\taggregate components.\n\t* sem.adb, sprint.adb: Handle new node.\n\t* tbuild.adb (Make_Implicit_Loop_Statement): Handle properly a\n\tloop with an Iterator_ specification.", "tree": {"sha": "65d79907beeb22253433c45c9b4976287b039ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65d79907beeb22253433c45c9b4976287b039ccb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8092c19930b6cdf3087825f9063cb830cd2de479", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8092c19930b6cdf3087825f9063cb830cd2de479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8092c19930b6cdf3087825f9063cb830cd2de479", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8092c19930b6cdf3087825f9063cb830cd2de479/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c5f82019ab50806ff1a23e5be8db864e8da131a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c5f82019ab50806ff1a23e5be8db864e8da131a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c5f82019ab50806ff1a23e5be8db864e8da131a"}], "stats": {"total": 183, "additions": 153, "deletions": 30}, "files": [{"sha": "6d8919127d9b2c4bf1efa0c77d44cdd1cf22244d", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=8092c19930b6cdf3087825f9063cb830cd2de479", "patch": "@@ -6914,13 +6914,20 @@ package body Exp_Aggr is\n          Stats              : List_Id;\n \n       begin\n-         L_Range := Relocate_Node (First (Discrete_Choices (Comp)));\n-         L_Iteration_Scheme :=\n-           Make_Iteration_Scheme (Loc,\n-             Loop_Parameter_Specification =>\n-               Make_Loop_Parameter_Specification (Loc,\n-                 Defining_Identifier => Loop_Id,\n-                 Discrete_Subtype_Definition => L_Range));\n+         if Present (Iterator_Specification (Comp)) then\n+            L_Iteration_Scheme :=\n+              Make_Iteration_Scheme (Loc,\n+                Iterator_Specification => Iterator_Specification (Comp));\n+\n+         else\n+            L_Range := Relocate_Node (First (Discrete_Choices (Comp)));\n+            L_Iteration_Scheme :=\n+              Make_Iteration_Scheme (Loc,\n+                Loop_Parameter_Specification =>\n+                  Make_Loop_Parameter_Specification (Loc,\n+                    Defining_Identifier => Loop_Id,\n+                    Discrete_Subtype_Definition => L_Range));\n+         end if;\n \n          --  Build insertion statement. For a positional aggregate, only the\n          --  expression is needed. For a named aggregate, the loop variable,"}, {"sha": "0bbab9cd74e063e1493a190ee1c93eb1e301a408", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=8092c19930b6cdf3087825f9063cb830cd2de479", "patch": "@@ -7346,6 +7346,7 @@ package body Exp_Util is\n \n             when N_Component_Association\n                | N_Iterated_Component_Association\n+               | N_Iterated_Element_Association\n             =>\n                if Nkind (Parent (P)) = N_Aggregate\n                  and then Present (Loop_Actions (P))"}, {"sha": "2c74cd7cd86c89459d9923b44779207142c9272e", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=8092c19930b6cdf3087825f9063cb830cd2de479", "patch": "@@ -3407,6 +3407,8 @@ package body Ch4 is\n    function P_Iterated_Component_Association return Node_Id is\n       Assoc_Node : Node_Id;\n       Id         : Node_Id;\n+      Iter_Spec  : Node_Id;\n+      Loop_Spec  : Node_Id;\n       State      : Saved_Scan_State;\n \n    --  Start of processing for P_Iterated_Component_Association\n@@ -3423,6 +3425,9 @@ package body Ch4 is\n       --  if E is a subtype indication this is a loop parameter spec,\n       --  while if E a name it is an iterator_specification, and the\n       --  disambiguation takes place during semantic analysis.\n+      --  In addition, if \"use\" is present after the specification,\n+      --  this is an Iterated_Element_Association that carries a\n+      --  key_expression, and we generate the appropriate node.\n \n       Id := P_Defining_Identifier;\n       Assoc_Node :=\n@@ -3432,6 +3437,22 @@ package body Ch4 is\n          Set_Defining_Identifier (Assoc_Node, Id);\n          T_In;\n          Set_Discrete_Choices (Assoc_Node, P_Discrete_Choice_List);\n+\n+         if Token = Tok_Use then\n+\n+            --  Key-expression is present, rewrite node as an\n+            --  iterated_Element_Awwoiation.\n+\n+            Scan;  --  past USE\n+            Loop_Spec :=\n+              New_Node (N_Loop_Parameter_Specification, Prev_Token_Ptr);\n+            Set_Defining_Identifier (Loop_Spec, Id);\n+            Set_Discrete_Subtype_Definition (Loop_Spec,\n+               First (Discrete_Choices (Assoc_Node)));\n+            Set_Loop_Parameter_Specification (Assoc_Node, Loop_Spec);\n+            Set_Key_Expression (Assoc_Node, P_Expression);\n+         end if;\n+\n          TF_Arrow;\n          Set_Expression (Assoc_Node, P_Expression);\n \n@@ -3441,8 +3462,19 @@ package body Ch4 is\n          Restore_Scan_State (State);\n          Scan;  -- past OF\n          Set_Defining_Identifier (Assoc_Node, Id);\n-         Set_Iterator_Specification\n-           (Assoc_Node, P_Iterator_Specification (Id));\n+         Iter_Spec := P_Iterator_Specification (Id);\n+         Set_Iterator_Specification (Assoc_Node, Iter_Spec);\n+\n+         if Token = Tok_Use then\n+            Scan;  -- past USE\n+            --  This is an iterated_elenent_qssociation.\n+\n+            Assoc_Node :=\n+              New_Node (N_Iterated_Element_Association, Prev_Token_Ptr);\n+            Set_Iterator_Specification (Assoc_Node, Iter_Spec);\n+            Set_Key_Expression (Assoc_Node, P_Expression);\n+         end if;\n+\n          TF_Arrow;\n          Set_Expression (Assoc_Node, P_Expression);\n       end if;"}, {"sha": "5474e081393958c12c96909dccbfef565d607241", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=8092c19930b6cdf3087825f9063cb830cd2de479", "patch": "@@ -670,6 +670,9 @@ package body Sem is\n          when N_Iterated_Component_Association =>\n             Diagnose_Iterated_Component_Association (N);\n \n+         when N_Iterated_Element_Association =>\n+            null;   --  May require a more precise error if misplaced.\n+\n          --  For the remaining node types, we generate compiler abort, because\n          --  these nodes are always analyzed within the Sem_Chn routines and\n          --  there should never be a case of making a call to the main Analyze"}, {"sha": "a89d55a5cc1ebda95ae16647e281ecd417384a03", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=8092c19930b6cdf3087825f9063cb830cd2de479", "patch": "@@ -2677,36 +2677,39 @@ package body Sem_Aggr is\n          Ent    : Entity_Id;\n          Expr   : Node_Id;\n          Id     : Entity_Id;\n+         Iter   : Node_Id;\n          Typ    : Entity_Id := Empty;\n \n       begin\n          if Present (Iterator_Specification (Comp)) then\n-            Error_Msg_N (\"element iterator ins aggregate Forthcoming\", N);\n-            return;\n-         end if;\n+            Iter := Copy_Separate_Tree (Iterator_Specification (Comp));\n+            Analyze (Iter);\n+            Typ := Etype (Defining_Identifier (Iter));\n \n-         Choice := First (Discrete_Choices (Comp));\n+         else\n+            Choice := First (Discrete_Choices (Comp));\n \n-         while Present (Choice) loop\n-            Analyze (Choice);\n+            while Present (Choice) loop\n+               Analyze (Choice);\n \n-            --  Choice can be a subtype name, a range, or an expression\n+               --  Choice can be a subtype name, a range, or an expression\n \n-            if Is_Entity_Name (Choice)\n-              and then Is_Type (Entity (Choice))\n-              and then Base_Type (Entity (Choice)) = Base_Type (Key_Type)\n-            then\n-               null;\n+               if Is_Entity_Name (Choice)\n+                 and then Is_Type (Entity (Choice))\n+                 and then Base_Type (Entity (Choice)) = Base_Type (Key_Type)\n+               then\n+                  null;\n \n-            elsif Present (Key_Type) then\n-               Analyze_And_Resolve (Choice, Key_Type);\n+               elsif Present (Key_Type) then\n+                  Analyze_And_Resolve (Choice, Key_Type);\n \n-            else\n-               Typ := Etype (Choice);  --  assume unique for now\n-            end if;\n+               else\n+                  Typ := Etype (Choice);  --  assume unique for now\n+               end if;\n \n-            Next (Choice);\n-         end loop;\n+               Next (Choice);\n+            end loop;\n+         end if;\n \n          --  Create a scope in which to introduce an index, which is usually\n          --  visible in the expression for the component, and needed for its"}, {"sha": "2d4b93ec52eeb3e52f79dcb06a983580b762042c", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=8092c19930b6cdf3087825f9063cb830cd2de479", "patch": "@@ -1278,6 +1278,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Expression_With_Actions\n         or else NT (N).Nkind = N_Free_Statement\n         or else NT (N).Nkind = N_Iterated_Component_Association\n+        or else NT (N).Nkind = N_Iterated_Element_Association\n         or else NT (N).Nkind = N_Mod_Clause\n         or else NT (N).Nkind = N_Modular_Type_Definition\n         or else NT (N).Nkind = N_Number_Declaration\n@@ -2245,6 +2246,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Iterated_Component_Association\n+        or else NT (N).Nkind = N_Iterated_Element_Association\n         or else NT (N).Nkind = N_Iteration_Scheme\n         or else NT (N).Nkind = N_Quantified_Expression);\n       return Node2 (N);\n@@ -2258,6 +2260,14 @@ package body Sinfo is\n       return Node1 (N);\n    end Itype;\n \n+   function Key_Expression\n+      (N : Node_Id) return Node_Id is\n+   begin\n+      pragma Assert (False\n+      or else NT (N).Nkind = N_Iterated_Element_Association);\n+      return Node1 (N);\n+   end Key_Expression;\n+\n    function Kill_Range_Check\n       (N : Node_Id) return Boolean is\n    begin\n@@ -2367,14 +2377,16 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Component_Association\n-        or else NT (N).Nkind = N_Iterated_Component_Association);\n+        or else NT (N).Nkind = N_Iterated_Component_Association\n+        or else NT (N).Nkind = N_Iterated_Element_Association);\n       return List5 (N);\n    end Loop_Actions;\n \n    function Loop_Parameter_Specification\n       (N : Node_Id) return Node_Id is\n    begin\n       pragma Assert (False\n+        or else NT (N).Nkind = N_Iterated_Element_Association\n         or else NT (N).Nkind = N_Iteration_Scheme\n         or else NT (N).Nkind = N_Quantified_Expression);\n       return Node4 (N);\n@@ -4762,6 +4774,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Expression_With_Actions\n         or else NT (N).Nkind = N_Free_Statement\n         or else NT (N).Nkind = N_Iterated_Component_Association\n+        or else NT (N).Nkind = N_Iterated_Element_Association\n         or else NT (N).Nkind = N_Mod_Clause\n         or else NT (N).Nkind = N_Modular_Type_Definition\n         or else NT (N).Nkind = N_Number_Declaration\n@@ -5733,6 +5746,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Iterated_Component_Association\n+        or else NT (N).Nkind = N_Iterated_Element_Association\n         or else NT (N).Nkind = N_Iteration_Scheme\n         or else NT (N).Nkind = N_Quantified_Expression);\n       Set_Node2_With_Parent (N, Val);\n@@ -5746,6 +5760,14 @@ package body Sinfo is\n       Set_Node1 (N, Val); -- no parent, semantic field\n    end Set_Itype;\n \n+   procedure Set_Key_Expression\n+      (N : Node_Id; Val : Entity_Id) is\n+   begin\n+      pragma Assert (False\n+      or else NT (N).Nkind = N_Iterated_Element_Association);\n+      Set_Node1_With_Parent (N, Val);\n+   end Set_Key_Expression;\n+\n    procedure Set_Kill_Range_Check\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -5855,14 +5877,16 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Component_Association\n-        or else NT (N).Nkind = N_Iterated_Component_Association);\n+        or else NT (N).Nkind = N_Iterated_Component_Association\n+        or else NT (N).Nkind = N_Iterated_Element_Association);\n       Set_List5 (N, Val); -- semantic field, no parent set\n    end Set_Loop_Actions;\n \n    procedure Set_Loop_Parameter_Specification\n       (N : Node_Id; Val : Node_Id) is\n    begin\n       pragma Assert (False\n+        or else NT (N).Nkind = N_Iterated_Element_Association\n         or else NT (N).Nkind = N_Iteration_Scheme\n         or else NT (N).Nkind = N_Quantified_Expression);\n       Set_Node4_With_Parent (N, Val);"}, {"sha": "98dd462a859e8ebc350c2e54bcb7dc96875b0b0f", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=8092c19930b6cdf3087825f9063cb830cd2de479", "patch": "@@ -4241,6 +4241,26 @@ package Sinfo is\n       --  Component_Associations (List2)\n       --  Etype (Node5-Sem)\n \n+      ---------------------------------\n+      --  3.4.5 Comtainer_Aggregates --\n+      ---------------------------------\n+\n+      --  N_Iterated_Element_Association\n+      --  Key_Expression (Node1)\n+      --  Iterator_Specification (Node2)\n+      --  Expression (Node3)\n+      --  Loop_Parameter_Specification (Node4)\n+      --  Loop_Actions (List5-Sem)\n+\n+      --  Exactly one of Iterator_Specification or Loop_Parameter_\n+      --  specification is present. If the Key_Expression is absent,\n+      --  the construct is parsed as an Iterated_Component_Association,\n+      --  and legality checks are performed during semantic analysis.\n+\n+      --  Both iterated associations are Ada2020 features that are\n+      --  expanded during aggregate construction, and do not appear in\n+      --  expanded code.\n+\n       --------------------------------------------------\n       -- 4.4  Expression/Relation/Term/Factor/Primary --\n       --------------------------------------------------\n@@ -8917,6 +8937,7 @@ package Sinfo is\n       N_Handled_Sequence_Of_Statements,\n       N_Index_Or_Discriminant_Constraint,\n       N_Iterated_Component_Association,\n+      N_Iterated_Element_Association,\n       N_Itype_Reference,\n       N_Label,\n       N_Modular_Type_Definition,\n@@ -9842,6 +9863,9 @@ package Sinfo is\n    function Itype\n      (N : Node_Id) return Entity_Id;  -- Node1\n \n+   function Key_Expression\n+     (N : Node_Id) return Node_Id;    -- Node1\n+\n    function Kill_Range_Check\n      (N : Node_Id) return Boolean;    -- Flag11\n \n@@ -10951,6 +10975,9 @@ package Sinfo is\n    procedure Set_Itype\n      (N : Node_Id; Val : Entity_Id);          -- Node1\n \n+   procedure Set_Key_Expression\n+     (N : Node_Id; Val : Node_Id);            -- Node1\n+\n    procedure Set_Kill_Range_Check\n      (N : Node_Id; Val : Boolean := True);    -- Flag11\n \n@@ -11901,6 +11928,13 @@ package Sinfo is\n         4 => True,    --  Discrete_Choices (List4)\n         5 => True),   --  Loop_Actions (List5-Sem);\n \n+     N_Iterated_Element_Association =>\n+       (1 => True,    --  Key_expression\n+        2 => True,    --  Iterator_Specification\n+        3 => True,    --  Expression (Node3)\n+        4 => True,    --  Loop_Parameter_Specification\n+        5 => True),   --  Loop_Actions (List5-Sem);\n+\n      N_Delta_Aggregate =>\n        (1 => False,   --  Unused\n         2 => True,    --  Component_Associations (List2)\n@@ -13446,6 +13480,7 @@ package Sinfo is\n    pragma Inline (Iterator_Filter);\n    pragma Inline (Iteration_Scheme);\n    pragma Inline (Itype);\n+   pragma Inline (Key_Expression);\n    pragma Inline (Kill_Range_Check);\n    pragma Inline (Last_Bit);\n    pragma Inline (Last_Name);\n@@ -13812,6 +13847,7 @@ package Sinfo is\n    pragma Inline (Set_Iteration_Scheme);\n    pragma Inline (Set_Iterator_Specification);\n    pragma Inline (Set_Itype);\n+   pragma Inline (Set_Key_Expression);\n    pragma Inline (Set_Kill_Range_Check);\n    pragma Inline (Set_Label_Construct);\n    pragma Inline (Set_Last_Bit);"}, {"sha": "a76b62e219aef64a17b7b831df9fb49604bcf650", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=8092c19930b6cdf3087825f9063cb830cd2de479", "patch": "@@ -1325,6 +1325,22 @@ package body Sprint is\n             Write_Str (\" => \");\n             Sprint_Node (Expression (Node));\n \n+         when N_Iterated_Element_Association =>\n+            Set_Debug_Sloc;\n+            if Present (Iterator_Specification (Node)) then\n+               Sprint_Node (Iterator_Specification (Node));\n+            else\n+               Sprint_Node (Loop_Parameter_Specification (Node));\n+            end if;\n+\n+            if Present (Key_Expression (Node)) then\n+               Write_Str (\" use \");\n+               Sprint_Node (Key_Expression (Node));\n+            end if;\n+\n+            Write_Str (\" => \");\n+            Sprint_Node (Expression (Node));\n+\n          when N_Component_Clause =>\n             Write_Indent;\n             Sprint_Node (Component_Name (Node));"}, {"sha": "212d31553dc0c4d751c3ad2e0987159b1a06503b", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8092c19930b6cdf3087825f9063cb830cd2de479/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=8092c19930b6cdf3087825f9063cb830cd2de479", "patch": "@@ -352,6 +352,7 @@ package body Tbuild is\n       Check_Restriction (No_Implicit_Loops, Node);\n \n       if Present (Iteration_Scheme)\n+        and then Nkind (Iteration_Scheme) /= N_Iterator_Specification\n         and then Present (Condition (Iteration_Scheme))\n       then\n          Check_Restriction (No_Implicit_Conditionals, Node);"}]}