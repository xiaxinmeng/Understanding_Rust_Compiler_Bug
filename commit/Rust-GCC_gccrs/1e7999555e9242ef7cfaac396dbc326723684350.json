{"sha": "1e7999555e9242ef7cfaac396dbc326723684350", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU3OTk5NTU1ZTkyNDJlZjdjZmFhYzM5NmRiYzMyNjcyMzY4NDM1MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-10T18:31:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-10T18:31:22Z"}, "message": "* call.c (build_op_delete_call): Tweak error.\n\nFrom-SVN: r154073", "tree": {"sha": "c7c4eb5e5f506a564703c6c9c55b67d28734a217", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7c4eb5e5f506a564703c6c9c55b67d28734a217"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e7999555e9242ef7cfaac396dbc326723684350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e7999555e9242ef7cfaac396dbc326723684350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e7999555e9242ef7cfaac396dbc326723684350", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e7999555e9242ef7cfaac396dbc326723684350/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58926110dc3efed307b3a9e06fb51fef5e6d4304", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58926110dc3efed307b3a9e06fb51fef5e6d4304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58926110dc3efed307b3a9e06fb51fef5e6d4304"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "2407446de0658b6ffe73d60a7c2fd06e874a3f66", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e7999555e9242ef7cfaac396dbc326723684350/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e7999555e9242ef7cfaac396dbc326723684350/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1e7999555e9242ef7cfaac396dbc326723684350", "patch": "@@ -1,4 +1,6 @@\n-2009-11-09  Jason Merrill  <jason@redhat.com>\n+2009-11-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (build_op_delete_call): Tweak error.\n \n \tPR c++/34158\n \tPR c++/36406\n@@ -8,6 +10,8 @@\n \t* pt.c (primary_template_instantiation_p): Non-static.\n \t* cp-tree.h: Declare it.\n \n+2009-11-09  Jason Merrill  <jason@redhat.com>\n+\n \tPR c++/41972\n \t* parser.c (cp_parser_template_argument): Accept SCOPE_REF around\n \tVAR_DECL."}, {"sha": "efee604f1c2c98374859a01cf1d925079c8ad551", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e7999555e9242ef7cfaac396dbc326723684350/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e7999555e9242ef7cfaac396dbc326723684350/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=1e7999555e9242ef7cfaac396dbc326723684350", "patch": "@@ -4613,8 +4613,10 @@ build_op_delete_call (enum tree_code code, tree addr, tree size,\n \t deallocation function, would have been selected as a match for the\n \t allocation function, the program is ill-formed.\"  */\n       if (non_placement_deallocation_fn_p (fn))\n-\terror (\"non-placement deallocation function %qD selected for \"\n-\t       \"placement delete\", fn);\n+\t{\n+\t  error (\"non-placement deallocation function %q+D\", fn);\n+\t  error (\"selected for placement delete\");\n+\t}\n     }\n   else\n     /* \"Any non-placement deallocation function matches a non-placement"}, {"sha": "0267ed46854dd5851080e91fd5200b1fe91119e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e7999555e9242ef7cfaac396dbc326723684350/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e7999555e9242ef7cfaac396dbc326723684350/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e7999555e9242ef7cfaac396dbc326723684350", "patch": "@@ -1,4 +1,6 @@\n-2009-11-09  Jason Merrill  <jason@redhat.com>\n+2009-11-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/init/placement5.C: New.\n \n \tPR c++/34158\n \t* g++.dg/init/placement4.C: New."}, {"sha": "bb882396cf889fc09e7f116b440ab7cd1c289142", "filename": "gcc/testsuite/g++.dg/init/placement5.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e7999555e9242ef7cfaac396dbc326723684350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fplacement5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e7999555e9242ef7cfaac396dbc326723684350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fplacement5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fplacement5.C?ref=1e7999555e9242ef7cfaac396dbc326723684350", "patch": "@@ -0,0 +1,18 @@\n+// 5.3.4/19: If the lookup finds the two-parameter form of a usual\n+// deallocation function (3.7.4.2) and that function, considered as a\n+// placement deallocation function, would have been selected as a match for\n+// the allocation function, the program is ill-formed.\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+struct A\n+{\n+  A();\n+  static void* operator new (size_t, size_t);\n+  static void operator delete (void *, size_t); // { dg-error \"non-placement\" }\n+};\n+\n+int main()\n+{\n+  A* ap = new (24) A;\t\t// { dg-error \"placement delete\" }\n+}"}]}