{"sha": "d6baf6f524a514758cab989ab90bb953a2bac735", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZiYWY2ZjUyNGE1MTQ3NThjYWI5ODlhYjkwYmI5NTNhMmJhYzczNQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-06-26T07:26:08Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-06-26T07:26:08Z"}, "message": "parse.y (do_resolve_class): Minor optimiztion in the package list search.\n\n2000-06-25  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* parse.y (do_resolve_class): Minor optimiztion in the package\n\tlist search. Removed unecessary test and return statement.\n\t(valid_ref_assignconv_cast_p): Order of arguments to\n\tenclosing_context_p fixed.\n\nFrom-SVN: r34705", "tree": {"sha": "0f40a3342e4840f9dffd7ec064975186fb944fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f40a3342e4840f9dffd7ec064975186fb944fc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6baf6f524a514758cab989ab90bb953a2bac735", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6baf6f524a514758cab989ab90bb953a2bac735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6baf6f524a514758cab989ab90bb953a2bac735", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6baf6f524a514758cab989ab90bb953a2bac735/comments", "author": null, "committer": null, "parents": [{"sha": "cab10d564e648f23384495df4801d81f7fe780db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab10d564e648f23384495df4801d81f7fe780db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab10d564e648f23384495df4801d81f7fe780db"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "8b202a9d4218f88aba0ce49356803f7f13eb9446", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6baf6f524a514758cab989ab90bb953a2bac735/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6baf6f524a514758cab989ab90bb953a2bac735/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d6baf6f524a514758cab989ab90bb953a2bac735", "patch": "@@ -1,3 +1,10 @@\n+2000-06-25  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (do_resolve_class): Minor optimiztion in the package\n+\tlist search. Removed unecessary test and return statement.\n+\t(valid_ref_assignconv_cast_p): Order of arguments to\n+\tenclosing_context_p fixed.\n+\n 2000-06-24  Tom Tromey  <tromey@cygnus.com>\n \n \t* expr.c (lookup_field): Print error and return error_mark_node if"}, {"sha": "dc047935b8b60538f0fb36bcb31a7be77b3c1ae4", "filename": "gcc/java/parse.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6baf6f524a514758cab989ab90bb953a2bac735/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6baf6f524a514758cab989ab90bb953a2bac735/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=d6baf6f524a514758cab989ab90bb953a2bac735", "patch": "@@ -8195,7 +8195,12 @@ do_resolve_class (enclosing, class_type, decl, cl)\n   if (!QUALIFIED_P (TYPE_NAME (class_type)))\n     {\n       tree package;\n-      for (package = package_list; package; package = TREE_CHAIN (package))\n+\n+      /* If there is a current package (ctxp->package), it's the first\n+\t element of package_list and we can skip it. */\n+      for (package = (ctxp->package ? \n+\t\t      TREE_CHAIN (package_list) : package_list);\n+\t   package; package = TREE_CHAIN (package))\n \tif ((new_class_decl = qualify_and_find (class_type,\n \t\t\t\t\t       TREE_PURPOSE (package), \n \t\t\t\t\t       TYPE_NAME (class_type))))\n@@ -8208,9 +8213,6 @@ do_resolve_class (enclosing, class_type, decl, cl)\n \t\t\t      (cl ? cl : lookup_cl (decl))))\n     return NULL_TREE;\n \n-  if ((new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n-    return new_class_decl;\n-\n   /* 6- Last call for a resolution */\n   return IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n }\n@@ -14738,7 +14740,7 @@ valid_ref_assignconv_cast_p (source, dest, cast)\n       if (TYPE_CLASS_P (dest))\n \treturn  (source == dest \n \t\t || inherits_from_p (source, dest)\n-\t\t || enclosing_context_p (dest, source /*source, dest*/)\n+\t\t || enclosing_context_p (source, dest)\n \t\t || (cast && inherits_from_p (dest, source)));\n       if (TYPE_INTERFACE_P (dest))\n \t{"}, {"sha": "5429d41a9941b1653f040c3c38c4c9cefd124799", "filename": "gcc/java/parse.y", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6baf6f524a514758cab989ab90bb953a2bac735/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6baf6f524a514758cab989ab90bb953a2bac735/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=d6baf6f524a514758cab989ab90bb953a2bac735", "patch": "@@ -5497,7 +5497,12 @@ do_resolve_class (enclosing, class_type, decl, cl)\n   if (!QUALIFIED_P (TYPE_NAME (class_type)))\n     {\n       tree package;\n-      for (package = package_list; package; package = TREE_CHAIN (package))\n+\n+      /* If there is a current package (ctxp->package), it's the first\n+\t element of package_list and we can skip it. */\n+      for (package = (ctxp->package ? \n+\t\t      TREE_CHAIN (package_list) : package_list);\n+\t   package; package = TREE_CHAIN (package))\n \tif ((new_class_decl = qualify_and_find (class_type,\n \t\t\t\t\t       TREE_PURPOSE (package), \n \t\t\t\t\t       TYPE_NAME (class_type))))\n@@ -5510,9 +5515,6 @@ do_resolve_class (enclosing, class_type, decl, cl)\n \t\t\t      (cl ? cl : lookup_cl (decl))))\n     return NULL_TREE;\n \n-  if ((new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n-    return new_class_decl;\n-\n   /* 6- Last call for a resolution */\n   return IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n }\n@@ -12040,7 +12042,7 @@ valid_ref_assignconv_cast_p (source, dest, cast)\n       if (TYPE_CLASS_P (dest))\n \treturn  (source == dest \n \t\t || inherits_from_p (source, dest)\n-\t\t || enclosing_context_p (dest, source /*source, dest*/)\n+\t\t || enclosing_context_p (source, dest)\n \t\t || (cast && inherits_from_p (dest, source)));\n       if (TYPE_INTERFACE_P (dest))\n \t{"}]}