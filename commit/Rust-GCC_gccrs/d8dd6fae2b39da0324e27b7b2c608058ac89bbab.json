{"sha": "d8dd6fae2b39da0324e27b7b2c608058ac89bbab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhkZDZmYWUyYjM5ZGEwMzI0ZTI3YjdiMmM2MDgwNThhYzg5YmJhYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-07-24T21:53:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-07-24T21:53:31Z"}, "message": "pt.c (convert_template_argument, tsubst): Simplify fourth argument to make_typename_type (complain & tf_error -> complain).\n\n2012-07-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* pt.c (convert_template_argument, tsubst): Simplify fourth argument\n\tto make_typename_type (complain & tf_error -> complain).\n\nFrom-SVN: r189825", "tree": {"sha": "9f3208584411c1e963cc79cdc000a2f7af4d3f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f3208584411c1e963cc79cdc000a2f7af4d3f27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8dd6fae2b39da0324e27b7b2c608058ac89bbab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8dd6fae2b39da0324e27b7b2c608058ac89bbab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8dd6fae2b39da0324e27b7b2c608058ac89bbab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8dd6fae2b39da0324e27b7b2c608058ac89bbab/comments", "author": null, "committer": null, "parents": [{"sha": "cd1440b199ae8476f1b6df884e86fa07388e1f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1440b199ae8476f1b6df884e86fa07388e1f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1440b199ae8476f1b6df884e86fa07388e1f80"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "5dd4031d8433b182a9ccab4633ded7030f9393c6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8dd6fae2b39da0324e27b7b2c608058ac89bbab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8dd6fae2b39da0324e27b7b2c608058ac89bbab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d8dd6fae2b39da0324e27b7b2c608058ac89bbab", "patch": "@@ -1,15 +1,20 @@\n+2012-07-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* pt.c (convert_template_argument, tsubst): Simplify fourth argument\n+\tto make_typename_type (complain & tf_error -> complain).\n+\n 2012-07-24  Steven Bosscher  <steven@gcc.gnu.org>\n \n-\t* cp/class.c (n_vtables, n_vtable_entries, n_vtable_searches,\n+\t* class.c (n_vtables, n_vtable_entries, n_vtable_searches,\n \tn_vtable_elems, n_convert_harshness, n_compute_conversion_costs,\n \tn_inner_fields_searched): Always define.\n \t(build_primary_vtable): Convert #ifdef GATHER_STATISTICS to if-code.\n \t(print_class_statistics): Convert #ifdef GATHER_STATISTICS to if-code.\n-\t* cp/tree.c (depth_reached): Always define global.\n+\t* tree.c (depth_reached): Always define global.\n \t(cxx_print_statistics): Convert #ifdef GATHER_STATISTICS to if-code.\n-\t* cp/pt.c (depth_reached): Always define.\n+\t* pt.c (depth_reached): Always define.\n \t(push_tinst_level): Convert #ifdef GATHER_STATISTICS to if-code.\n-\t* cp/search.c (n_fields_searched, n_calls_lookup_field,\n+\t* search.c (n_fields_searched, n_calls_lookup_field,\n \tn_calls_lookup_field_1, n_calls_lookup_fnfields,\n \tn_calls_lookup_fnfields_1, n_calls_get_base_type,\n \tn_outer_fields_searched, n_contexts_saved): Always define.\n@@ -18,7 +23,7 @@\n \t(lookup_fnfields_idx_nolazy): Likewise.\n \t(print_search_statistics): Likewise.\n \t(reinit_search_statistics): Unconditionally re-set counters.\n-\t* cp/lex.c (retrofit_lang_decl): Convert #ifdef GATHER_STATISTICS\n+\t* lex.c (retrofit_lang_decl): Convert #ifdef GATHER_STATISTICS\n \tto if-code.\n \t(cxx_dup_lang_specific_decl): Likewise.\n \t(copy_lang_type): Likewise."}, {"sha": "532189d25e37bc4c3a9e515cf875e33d9b4095eb", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8dd6fae2b39da0324e27b7b2c608058ac89bbab/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8dd6fae2b39da0324e27b7b2c608058ac89bbab/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=d8dd6fae2b39da0324e27b7b2c608058ac89bbab", "patch": "@@ -6139,7 +6139,7 @@ convert_template_argument (tree parm,\n       orig_arg = make_typename_type (TREE_OPERAND (arg, 0),\n \t\t\t\t     TREE_OPERAND (arg, 1),\n \t\t\t\t     typename_type,\n-\t\t\t\t     complain & tf_error);\n+\t\t\t\t     complain);\n       arg = orig_arg;\n       is_type = 1;\n     }\n@@ -11402,7 +11402,7 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t  }\n \n \tf = make_typename_type (ctx, f, typename_type,\n-\t\t\t\t(complain & tf_error) | tf_keep_type_decl);\n+\t\t\t\tcomplain | tf_keep_type_decl);\n \tif (f == error_mark_node)\n \t  return f;\n \tif (TREE_CODE (f) == TYPE_DECL)"}]}