{"sha": "40300fa4545d51bb636d4f3ca4be6d6914cee321", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAzMDBmYTQ1NDVkNTFiYjYzNmQ0ZjNjYTRiZTZkNjkxNGNlZTMyMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-09-05T20:02:04Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-09-05T20:02:04Z"}, "message": "cp-tree.h (lang_decl_base): Rename template_conv_p to unknown_bound_p.\n\n\t* cp-tree.h (lang_decl_base): Rename template_conv_p to\n\tunknown_bound_p.\n\t(DECL_CONV_FN_P): Don't check NULL DECL_NAME.\n\t(DECL_CONV_FN_TYPE): FN must be conv op.\n\t(DECL_TEMPLATE_CONV_FN_P): Delete.\n\t(VAR_HAD_UNKNOWN_BOUND, SET_VAR_HAD_UNKNOWN_BOUND): Adjust.\n\t* pt.c (push_template_decl_real): Delete DECL_TEMPLATE_CONV_FN_P\n\nFrom-SVN: r251734", "tree": {"sha": "d27a3788729d47e7153c510f960b8ef255192643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d27a3788729d47e7153c510f960b8ef255192643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40300fa4545d51bb636d4f3ca4be6d6914cee321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40300fa4545d51bb636d4f3ca4be6d6914cee321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40300fa4545d51bb636d4f3ca4be6d6914cee321", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40300fa4545d51bb636d4f3ca4be6d6914cee321/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6657c1f9bda5042bb5854a3f524b02bd22f82e44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6657c1f9bda5042bb5854a3f524b02bd22f82e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6657c1f9bda5042bb5854a3f524b02bd22f82e44"}], "stats": {"total": 43, "additions": 16, "deletions": 27}, "files": [{"sha": "6d31718a780a22261cc74845165095b42dfd4e21", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40300fa4545d51bb636d4f3ca4be6d6914cee321/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40300fa4545d51bb636d4f3ca4be6d6914cee321/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=40300fa4545d51bb636d4f3ca4be6d6914cee321", "patch": "@@ -1,5 +1,14 @@\n 2017-09-05  Nathan Sidwell  <nathan@acm.org>\n \n+\t* cp-tree.h (lang_decl_base): Rename template_conv_p to\n+\tunknown_bound_p.\n+\t(DECL_CONV_FN_P): Don't check NULL DECL_NAME.\n+\t(DECL_CONV_FN_TYPE): FN must be conv op.\n+\t(DECL_TEMPLATE_CONV_FN_P): Delete.\n+\t(VAR_HAD_UNKNOWN_BOUND, SET_VAR_HAD_UNKNOWN_BOUND): Adjust.\n+\t* pt.c (push_template_decl_real): Delete DECL_TEMPLATE_CONV_FN_P\n+\tsetting.\n+\n \t* class.c (unreverse_member_declarations): Remove extraneous if.\n \t* pt.c (push_template_decl_real): Use string concatenation, not\n \t\\<newline>.  Add %<..%>."}, {"sha": "9d2433109aee1afcea7f07bf8052ccfcf2556b24", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40300fa4545d51bb636d4f3ca4be6d6914cee321/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40300fa4545d51bb636d4f3ca4be6d6914cee321/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=40300fa4545d51bb636d4f3ca4be6d6914cee321", "patch": "@@ -2451,7 +2451,7 @@ struct GTY(()) lang_decl_base {\n   unsigned anticipated_p : 1;\t\t   /* fn, type or template */\n   /* anticipated_p reused as DECL_OMP_PRIVATIZED_MEMBER in var */\n   unsigned friend_or_tls : 1;\t\t   /* var, fn, type or template */\n-  unsigned template_conv_p : 1;\t\t   /* var or template */\n+  unsigned unknown_bound_p : 1;\t\t   /* var */\n   unsigned odr_used : 1;\t\t   /* var or fn */\n   unsigned u2sel : 1;\n   unsigned concept_p : 1;                  /* applies to vars and functions */\n@@ -2807,28 +2807,20 @@ struct GTY(()) lang_decl {\n        || DECL_BASE_DESTRUCTOR_P (NODE)))\n \n /* Nonzero if NODE is a user-defined conversion operator.  */\n-#define DECL_CONV_FN_P(NODE) \\\n-  (DECL_NAME (NODE) && IDENTIFIER_CONV_OP_P (DECL_NAME (NODE)))\n+#define DECL_CONV_FN_P(NODE) IDENTIFIER_CONV_OP_P (DECL_NAME (NODE))\n \n-/* If FN is a conversion operator, the type to which it converts.\n-   Otherwise, NULL_TREE.  */\n+/* The type to which conversion operator FN converts to.   */\n #define DECL_CONV_FN_TYPE(FN) \\\n-  (DECL_CONV_FN_P (FN) ? TREE_TYPE (DECL_NAME (FN)) : NULL_TREE)\n-\n-/* Nonzero if NODE, which is a TEMPLATE_DECL, is a template\n-   conversion operator to a type dependent on the innermost template\n-   args.  */\n-#define DECL_TEMPLATE_CONV_FN_P(NODE) \\\n-  (DECL_LANG_SPECIFIC (TEMPLATE_DECL_CHECK (NODE))->u.base.template_conv_p)\n+  TREE_TYPE ((gcc_checking_assert (DECL_CONV_FN_P (FN)), DECL_NAME (FN)))\n \n /* Nonzero if NODE, a static data member, was declared in its class as an\n    array of unknown bound.  */\n #define VAR_HAD_UNKNOWN_BOUND(NODE)\t\t\t\\\n   (DECL_LANG_SPECIFIC (VAR_DECL_CHECK (NODE))\t\t\\\n-   ? DECL_LANG_SPECIFIC (NODE)->u.base.template_conv_p\t\\\n+   ? DECL_LANG_SPECIFIC (NODE)->u.base.unknown_bound_p\t\\\n    : false)\n #define SET_VAR_HAD_UNKNOWN_BOUND(NODE) \\\n-  (DECL_LANG_SPECIFIC (VAR_DECL_CHECK (NODE))->u.base.template_conv_p = true)\n+  (DECL_LANG_SPECIFIC (VAR_DECL_CHECK (NODE))->u.base.unknown_bound_p = true)\n \n /* Set the overloaded operator code for NODE to CODE.  */\n #define SET_OVERLOADED_OPERATOR_CODE(NODE, CODE) \\"}, {"sha": "f422e9c667c7da545684717874034a84d7509f71", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40300fa4545d51bb636d4f3ca4be6d6914cee321/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40300fa4545d51bb636d4f3ca4be6d6914cee321/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=40300fa4545d51bb636d4f3ca4be6d6914cee321", "patch": "@@ -5608,25 +5608,13 @@ push_template_decl_real (tree decl, bool is_friend)\n   if (is_primary)\n     {\n       tree parms = DECL_TEMPLATE_PARMS (tmpl);\n-      int i;\n \n       DECL_PRIMARY_TEMPLATE (tmpl) = tmpl;\n-      if (DECL_CONV_FN_P (tmpl))\n-\t{\n-\t  int depth = TMPL_PARMS_DEPTH (parms);\n-\n-\t  /* It is a conversion operator. See if the type converted to\n-\t     depends on innermost template operands.  */\n-\n-\t  if (uses_template_parms_level (TREE_TYPE (TREE_TYPE (tmpl)),\n-\t\t\t\t\t depth))\n-\t    DECL_TEMPLATE_CONV_FN_P (tmpl) = 1;\n-\t}\n \n       /* Give template template parms a DECL_CONTEXT of the template\n \t for which they are a parameter.  */\n       parms = INNERMOST_TEMPLATE_PARMS (parms);\n-      for (i = TREE_VEC_LENGTH (parms) - 1; i >= 0; --i)\n+      for (int i = TREE_VEC_LENGTH (parms) - 1; i >= 0; --i)\n \t{\n \t  tree parm = TREE_VALUE (TREE_VEC_ELT (parms, i));\n \t  if (TREE_CODE (parm) == TEMPLATE_DECL)"}]}