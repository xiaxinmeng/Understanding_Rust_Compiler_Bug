{"sha": "44472c580cedd836081c82e621482e479a69729c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ0NzJjNTgwY2VkZDgzNjA4MWM4MmU2MjE0ODJlNDc5YTY5NzI5Yw==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-22T14:23:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-22T14:23:06Z"}, "message": "Merge #587 #589\n\n587: Add testcase to cover parse errors in unsafe expressions r=philberty a=philberty\n\nFixes #584\r\n\n\n589: Support dereference of pointers r=philberty a=philberty\n\nDereference expressions can also be pointer types not just references.\r\n\r\nFixes #588\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "babb798a9d92c76dbbfecfbbcece1e722a466c02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/babb798a9d92c76dbbfecfbbcece1e722a466c02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44472c580cedd836081c82e621482e479a69729c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg+X9KCRBK7hj4Ov3rIwAA85QIABAcXU3q4anWDUhwqHlKtGli\n5qJnMRygRMNzskim9TSx0nCGEJKcvsifAANVavYGqoAwJrr/2y79Hjs2J5rwTd6m\nGlQe3LGf0mr+6/2Rm724REjEZgH1oxAzOW2XJoTU3cVNtSHD8nENnagm8QTj/2ER\nwOgCWmJq+G0lit3Nl9Q/rIlTXIFj5wjRtHxmPxcoi+2ob604WWb/GnxDMWmAhgZE\n+QaX/BbJSGLkPCdZSP2flK1I5tuq1Shf5HuWxAcurPzQNe9XcAABZvdV0F4c9iIO\nQnE+LlsGgCREWADsp8EYMYRIIA/tx4KisXLKar10s1jk00y8duyl/ITLf2oF3Jw=\n=xPkJ\n-----END PGP SIGNATURE-----\n", "payload": "tree babb798a9d92c76dbbfecfbbcece1e722a466c02\nparent 06a2ec7e9340c64c5869a97c7737459fbb1645d2\nparent b830b3523eb456ab955459eabfe5abc98135a806\nparent d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1626963786 +0000\ncommitter GitHub <noreply@github.com> 1626963786 +0000\n\nMerge #587 #589\n\n587: Add testcase to cover parse errors in unsafe expressions r=philberty a=philberty\n\nFixes #584\r\n\n\n589: Support dereference of pointers r=philberty a=philberty\n\nDereference expressions can also be pointer types not just references.\r\n\r\nFixes #588\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44472c580cedd836081c82e621482e479a69729c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44472c580cedd836081c82e621482e479a69729c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44472c580cedd836081c82e621482e479a69729c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06a2ec7e9340c64c5869a97c7737459fbb1645d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a2ec7e9340c64c5869a97c7737459fbb1645d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a2ec7e9340c64c5869a97c7737459fbb1645d2"}, {"sha": "b830b3523eb456ab955459eabfe5abc98135a806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b830b3523eb456ab955459eabfe5abc98135a806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b830b3523eb456ab955459eabfe5abc98135a806"}, {"sha": "d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "166535acba0eed19f8d3adb93fd65fc63cc3a1a5", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44472c580cedd836081c82e621482e479a69729c/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44472c580cedd836081c82e621482e479a69729c/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=44472c580cedd836081c82e621482e479a69729c", "patch": "@@ -1103,15 +1103,29 @@ class TypeCheckExpr : public TypeCheckBase\n   {\n     TyTy::BaseType *resolved_base\n       = TypeCheckExpr::Resolve (expr.get_expr ().get (), false);\n-    if (resolved_base->get_kind () != TyTy::TypeKind::REF)\n+\n+    bool is_valid_type\n+      = resolved_base->get_kind () == TyTy::TypeKind::REF\n+\t|| resolved_base->get_kind () == TyTy::TypeKind::POINTER;\n+    if (!is_valid_type)\n       {\n \trust_error_at (expr.get_locus (), \"expected reference type got %s\",\n \t\t       resolved_base->as_string ().c_str ());\n \treturn;\n       }\n \n-    TyTy::ReferenceType *ref_base = (TyTy::ReferenceType *) resolved_base;\n-    infered = ref_base->get_base ()->clone ();\n+    if (resolved_base->get_kind () == TyTy::TypeKind::REF)\n+      {\n+\tTyTy::ReferenceType *ref_base\n+\t  = static_cast<TyTy::ReferenceType *> (resolved_base);\n+\tinfered = ref_base->get_base ()->clone ();\n+      }\n+    else\n+      {\n+\tTyTy::PointerType *ref_base\n+\t  = static_cast<TyTy::PointerType *> (resolved_base);\n+\tinfered = ref_base->get_base ()->clone ();\n+      }\n   }\n \n private:"}, {"sha": "f283411abe2be1c2e86f8771d88e50a94f2aff66", "filename": "gcc/testsuite/rust/compile/torture/pointer1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44472c580cedd836081c82e621482e479a69729c/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fpointer1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44472c580cedd836081c82e621482e479a69729c/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fpointer1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fpointer1.rs?ref=44472c580cedd836081c82e621482e479a69729c", "patch": "@@ -0,0 +1,9 @@\n+pub fn main() {\n+    let mut num = 2;\n+    let r1: *const i32 = &num;\n+    let r2 = unsafe { *r1 } + unsafe { *r1 };\n+    let r3 = num;\n+    num = 4;\n+    let r4 = num + unsafe { *r1 } * r3;\n+    let _eightteen = r2 + r3 + r4;\n+}"}, {"sha": "5f427258f60c9828cd68596746292b8190b63510", "filename": "gcc/testsuite/rust/compile/torture/unsafe3.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44472c580cedd836081c82e621482e479a69729c/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funsafe3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44472c580cedd836081c82e621482e479a69729c/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funsafe3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funsafe3.rs?ref=44472c580cedd836081c82e621482e479a69729c", "patch": "@@ -0,0 +1,9 @@\n+pub fn test() -> i32 {\n+    let a = unsafe { 123 };\n+    a\n+}\n+\n+pub fn main() {\n+    let a = test();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n+}"}]}