{"sha": "b6339213ff68ac5a87b7fdda878f26b52d801b76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYzMzkyMTNmZjY4YWM1YTg3YjdmZGRhODc4ZjI2YjUyZDgwMWI3Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-07-20T06:38:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-07-20T06:38:59Z"}, "message": "omp-low.c (lower_rec_input_clauses): Don't force simd arrays for lastprivate non-addressable iterator of a...\n\n\t* omp-low.c (lower_rec_input_clauses): Don't force simd arrays for\n\tlastprivate non-addressable iterator of a collapse(1) simd.\n\n\t* gcc.dg/vect/vect-simd-16.c: New test.\n\nFrom-SVN: r273620", "tree": {"sha": "91fbdb4b379a4e01d78add2ffea75605037d95be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91fbdb4b379a4e01d78add2ffea75605037d95be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6339213ff68ac5a87b7fdda878f26b52d801b76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6339213ff68ac5a87b7fdda878f26b52d801b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6339213ff68ac5a87b7fdda878f26b52d801b76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6339213ff68ac5a87b7fdda878f26b52d801b76/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05584e7c94f71ae287e2b9f148c0a1c93aff6b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05584e7c94f71ae287e2b9f148c0a1c93aff6b55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05584e7c94f71ae287e2b9f148c0a1c93aff6b55"}], "stats": {"total": 75, "additions": 74, "deletions": 1}, "files": [{"sha": "40f6db590b66d4b74784272a031b2565f374ae38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6339213ff68ac5a87b7fdda878f26b52d801b76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6339213ff68ac5a87b7fdda878f26b52d801b76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6339213ff68ac5a87b7fdda878f26b52d801b76", "patch": "@@ -1,3 +1,8 @@\n+2019-07-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-low.c (lower_rec_input_clauses): Don't force simd arrays for\n+\tlastprivate non-addressable iterator of a collapse(1) simd.\n+\n 2019-07-17  Bill Seurer  <seurer@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-call.c (HAVE_AS_GNU_ATTRIBUTE): define value"}, {"sha": "03df07b63f182a4ceca3a9ce9ff768c2646689cc", "filename": "gcc/omp-low.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6339213ff68ac5a87b7fdda878f26b52d801b76/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6339213ff68ac5a87b7fdda878f26b52d801b76/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=b6339213ff68ac5a87b7fdda878f26b52d801b76", "patch": "@@ -5097,7 +5097,10 @@ lower_rec_input_clauses (tree clauses, gimple_seq *ilist, gimple_seq *dlist,\n \t\t{\n \t\t  tree y = lang_hooks.decls.omp_clause_dtor (c, new_var);\n \t\t  if ((TREE_ADDRESSABLE (new_var) || nx || y\n-\t\t       || OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE\n+\t\t       || (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE\n+\t\t\t   && (gimple_omp_for_collapse (ctx->stmt) != 1\n+\t\t\t       || (gimple_omp_for_index (ctx->stmt, 0)\n+\t\t\t\t   != new_var)))\n \t\t       || OMP_CLAUSE_CODE (c) == OMP_CLAUSE__CONDTEMP_\n \t\t       || omp_is_reference (var))\n \t\t      && lower_rec_simd_input_clauses (new_var, ctx, &sctx,"}, {"sha": "a7c94269075cf84026a68119504ca46f432d1b17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6339213ff68ac5a87b7fdda878f26b52d801b76/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6339213ff68ac5a87b7fdda878f26b52d801b76/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b6339213ff68ac5a87b7fdda878f26b52d801b76", "patch": "@@ -1,3 +1,7 @@\n+2019-07-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/vect/vect-simd-16.c: New test.\n+\n 2019-07-19  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/ssa-dse-37.c: New test."}, {"sha": "ee4459a9341815c7ac4a5f6be4b9ca7679f13022", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-16.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6339213ff68ac5a87b7fdda878f26b52d801b76/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6339213ff68ac5a87b7fdda878f26b52d801b76/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-16.c?ref=b6339213ff68ac5a87b7fdda878f26b52d801b76", "patch": "@@ -0,0 +1,61 @@\n+/* { dg-additional-options \"-fopenmp-simd\" } */\n+/* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized \\[1-3] loops\" 3 \"vect\" { target i?86-*-* x86_64-*-* } } } */\n+\n+#include \"tree-vect.h\"\n+\n+__attribute__((noipa)) int\n+foo (int *a)\n+{\n+  int i;\n+  #pragma omp simd lastprivate (i)\n+  for (i = 0; i < 64; i++)\n+    a[i] = i;\n+  return i;\n+}\n+\n+__attribute__((noipa)) void\n+bar (int *a)\n+{\n+  int i;\n+  #pragma omp simd private (i)\n+  for (i = 0; i < 64; i++)\n+    a[i] = i + 1;\n+}\n+\n+__attribute__((noipa)) int\n+baz (int *a)\n+{\n+  int i;\n+  #pragma omp simd linear (i)\n+  for (i = 0; i < 64; i++)\n+    a[i] = i + 2;\n+  return i;\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+  int a[64];\n+  check_vect ();\n+  if (foo (a) != 64)\n+    abort ();\n+  for (i = 0; i < 64; ++i)\n+    if (a[i] != i)\n+      abort ();\n+    else\n+      a[i] = -8;\n+  bar (a);\n+  for (i = 0; i < 64; ++i)\n+    if (a[i] != i + 1)\n+      abort ();\n+    else\n+      a[i] = -8;\n+  if (baz (a) != 64)\n+    abort ();\n+  for (i = 0; i < 64; ++i)\n+    if (a[i] != i + 2)\n+      abort ();\n+  return 0;\n+}"}]}