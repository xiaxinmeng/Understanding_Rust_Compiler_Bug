{"sha": "abf07e52b2f16ad1234bdb89b9c8b3d704b67b11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJmMDdlNTJiMmYxNmFkMTIzNGJkYjg5YjljOGIzZDcwNGI2N2IxMQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2018-11-29T04:56:33Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2018-11-29T04:56:33Z"}, "message": "[RS6000] Bogus easy_fp_constant call\n\neasy_fp_constant accepts const_double, easy_vector_constant accepts\nconst_vector.  Calling one from the other therefore will always return\nfalse.  I believe the zero_constant call in easy_vector_constant will\ncover the 0.0 case of easy_fp_constant.\n\n\t* config/rs6000/predicates.md (easy_vector_constant): Don't call\n\teasy_fp_constant.\n\nFrom-SVN: r266606", "tree": {"sha": "0da3af213c56add11115c8d1f52f3f04044e2074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0da3af213c56add11115c8d1f52f3f04044e2074"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abf07e52b2f16ad1234bdb89b9c8b3d704b67b11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf07e52b2f16ad1234bdb89b9c8b3d704b67b11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abf07e52b2f16ad1234bdb89b9c8b3d704b67b11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf07e52b2f16ad1234bdb89b9c8b3d704b67b11/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f79c0ad268bc64d0cc231ba6d51098983bdb67b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f79c0ad268bc64d0cc231ba6d51098983bdb67b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f79c0ad268bc64d0cc231ba6d51098983bdb67b"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "b1ea39997520f68c6bbb4b4749ab172b4c745114", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abf07e52b2f16ad1234bdb89b9c8b3d704b67b11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abf07e52b2f16ad1234bdb89b9c8b3d704b67b11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abf07e52b2f16ad1234bdb89b9c8b3d704b67b11", "patch": "@@ -1,3 +1,8 @@\n+2018-11-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/predicates.md (easy_vector_constant): Don't call\n+\teasy_fp_constant.\n+\n 2018-11-29  Alan Modra  <amodra@gmail.com>\n \n \t* config.in (HAVE_AS_PLTSEQ): Add."}, {"sha": "afe1b286833bbc1a4db3b2aeee3e9292251fef19", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abf07e52b2f16ad1234bdb89b9c8b3d704b67b11/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abf07e52b2f16ad1234bdb89b9c8b3d704b67b11/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=abf07e52b2f16ad1234bdb89b9c8b3d704b67b11", "patch": "@@ -644,12 +644,6 @@\n (define_predicate \"easy_vector_constant\"\n   (match_code \"const_vector\")\n {\n-  /* Because IEEE 128-bit floating point is considered a vector type\n-     in order to pass it in VSX registers, it might use this function\n-     instead of easy_fp_constant.  */\n-  if (FLOAT128_VECTOR_P (mode))\n-    return easy_fp_constant (op, mode);\n-\n   if (VECTOR_MEM_ALTIVEC_OR_VSX_P (mode))\n     {\n       int value = 256;"}]}