{"sha": "c4cdbeb4802cec34a912e343629d8e28b20128c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRjZGJlYjQ4MDJjZWMzNGE5MTJlMzQzNjI5ZDhlMjhiMjAxMjhjNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-04-05T07:06:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-04-05T07:06:23Z"}, "message": "re PR tree-optimization/19903 (ACATS cxa4006 cxa4017 fail at runtime)\n\n\tPR tree-optimization/19903\n\t* tree-chrec.c (chrec_convert): Return chrec_dont_know for constants\n\tthat don't fit in their type after conversion.\n\nCo-Authored-By: Sebastian Pop <sebastian.pop@cri.ensmp.fr>\n\nFrom-SVN: r97607", "tree": {"sha": "1742287c835dba65c2423d55c9ca50faf649778d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1742287c835dba65c2423d55c9ca50faf649778d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4cdbeb4802cec34a912e343629d8e28b20128c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4cdbeb4802cec34a912e343629d8e28b20128c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4cdbeb4802cec34a912e343629d8e28b20128c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4cdbeb4802cec34a912e343629d8e28b20128c7/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c5ead4814e7a0b4f155b84271665cbafd50a120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c5ead4814e7a0b4f155b84271665cbafd50a120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c5ead4814e7a0b4f155b84271665cbafd50a120"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "bbbade7f706ce2eab47b017a3144d80c239ee40b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cdbeb4802cec34a912e343629d8e28b20128c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cdbeb4802cec34a912e343629d8e28b20128c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4cdbeb4802cec34a912e343629d8e28b20128c7", "patch": "@@ -1,3 +1,10 @@\n+2005-04-05  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+            Sebastian Pop <sebastian.pop@cri.ensmp.fr>\n+\n+\tPR tree-optimization/19903\n+\t* tree-chrec.c (chrec_convert): Return chrec_dont_know for constants\n+\tthat don't fit in their type after conversion.\n+\n 2005-04-05 Uros Bizjak <uros@kss-loka.si>\n \n \tPR target/20421"}, {"sha": "b6276e929fd2dba8fe233cbc5226af5b5d647c70", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cdbeb4802cec34a912e343629d8e28b20128c7/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cdbeb4802cec34a912e343629d8e28b20128c7/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=c4cdbeb4802cec34a912e343629d8e28b20128c7", "patch": "@@ -1002,7 +1002,23 @@ nb_vars_in_chrec (tree chrec)\n \n \f\n \n-/* Convert the initial condition of chrec to type.  */\n+/* Convert CHREC to TYPE.  The following is rule is always true:\n+   TREE_TYPE (chrec) == TREE_TYPE (CHREC_LEFT (chrec)) == TREE_TYPE\n+   (CHREC_RIGHT (chrec)).  An example of what could happen when adding\n+   two chrecs and the type of the CHREC_RIGHT is different than\n+   CHREC_LEFT is:\n+   \n+   {(uint) 0, +, (uchar) 10} +\n+   {(uint) 0, +, (uchar) 250}\n+   \n+   that would produce a wrong result if CHREC_RIGHT is not (uint):\n+   \n+   {(uint) 0, +, (uchar) 4}\n+\n+   instead of\n+\n+   {(uint) 0, +, (uint) 260}\n+*/\n \n tree \n chrec_convert (tree type, \n@@ -1037,6 +1053,18 @@ chrec_convert (tree type,\n \tTREE_OVERFLOW (res) = 0;\n \tif (CONSTANT_CLASS_P (res))\n \t  TREE_CONSTANT_OVERFLOW (res) = 0;\n+\n+\t/* But reject constants that don't fit in their type after conversion.\n+\t   This can happen if TYPE_MIN_VALUE or TYPE_MAX_VALUE are not the\n+\t   natural values associated with TYPE_PRECISION and TYPE_UNSIGNED,\n+\t   and can cause problems later when computing niters of loops.  Note\n+\t   that we don't do the check before converting because we don't want\n+\t   to reject conversions of negative chrecs to unsigned types.  */\n+\tif (TREE_CODE (res) == INTEGER_CST\n+\t    && TREE_CODE (type) == INTEGER_TYPE\n+\t    && !int_fits_type_p (res, type))\n+\t  res = chrec_dont_know;\n+\n \treturn res;\n       }\n     }"}]}