{"sha": "ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5ZmE0YjVkNGFmNGE0OTA4ZWE4ODFiMzgwYzViYjczYTFhNDM4Ng==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-04-10T22:46:11Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-04-10T22:46:11Z"}, "message": "natString.cc (_Jv_NewStringUtf8Const): Register finalizer.\n\n\n\t* java/lang/natString.cc (_Jv_NewStringUtf8Const):  Register finalizer.\n\tRecalculate hash, since Utf8Const's hash is only 16 bits.\n\n\t* java/lang/natString.cc (_Jv_StringFindSlot, rehash):  Use high-order\n\tbits of hash to calculate step for chaining.\n\n\t* java/lang/natString.cc (intern, _Jv_NewStringUtf8Const):  Rehash\n\twhen 2/3 full, rather than 3/4 full.\n\nFrom-SVN: r41233", "tree": {"sha": "df2e8ca8e14d5dd7808d9be2ae190259468360b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df2e8ca8e14d5dd7808d9be2ae190259468360b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03829ad289cd82c9780720a5ac786576f8a3057e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03829ad289cd82c9780720a5ac786576f8a3057e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03829ad289cd82c9780720a5ac786576f8a3057e"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "3d2ae9dc035b59088a8853832beb6424350cf528", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386", "patch": "@@ -1,3 +1,14 @@\n+2001-04-08  Per Bothner  <per@bothner.com>\n+\n+\t* java/lang/natString.cc (_Jv_NewStringUtf8Const):  Register finalizer.\n+\tRecalculate hash, since Utf8Const's hash is only 16 bits.\n+\n+\t* java/lang/natString.cc (_Jv_StringFindSlot, rehash):  Use high-order\n+\tbits of hash to calculate step for chaining.\n+\n+\t* java/lang/natString.cc (intern, _Jv_NewStringUtf8Const):  Rehash\n+\twhen 2/3 full, rather than 3/4 full.\n+\n 2001-04-06  Tom Tromey  <tromey@redhat.com>\n \n \t* jni.cc (wrap_value<jobject>, wrap_value<jclass>): Removed."}, {"sha": "be0c91cd3343042dfccbb124e34ba7a9e60a82bb", "filename": "libjava/java/lang/natString.cc", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386/libjava%2Fjava%2Flang%2FnatString.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386/libjava%2Fjava%2Flang%2FnatString.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatString.cc?ref=ab9fa4b5d4af4a4908ea881b380c5bb73a1a4386", "patch": "@@ -62,7 +62,7 @@ _Jv_StringFindSlot (jchar* data, jint len, jint hash)\n \n   int index = start_index;\n   /* step must be non-zero, and relatively prime with strhash_size. */\n-  int step = 8 * hash + 7;\n+  jint step = (hash ^ (hash >> 16)) | 1;\n   for (;;)\n     {\n       jstring* ptr = &strhash[index];\n@@ -145,7 +145,7 @@ java::lang::String::rehash()\n \t  jstring val = (jstring) UNMASK_PTR (*ptr);\n \t  jint hash = val->hashCode();\n \t  jint index = hash & (nsize - 1);\n-\t  jint step = 8 * hash + 7;\n+\t  jint step = (hash ^ (hash >> 16)) | 1;\n \t  for (;;)\n \t    {\n \t      if (next[index] == NULL)\n@@ -166,7 +166,7 @@ jstring\n java::lang::String::intern()\n {\n   JvSynchronize sync (&StringClass);\n-  if (4 * strhash_count >= 3 * strhash_size)\n+  if (3 * strhash_count >= 2 * strhash_size)\n     rehash();\n   jstring* ptr = _Jv_StringGetSlot(this);\n   if (*ptr != NULL && *ptr != DELETED_STRING)\n@@ -265,14 +265,18 @@ _Jv_NewStringUtf8Const (Utf8Const* str)\n       chrs = JvGetStringChars(jstr);\n     }\n \n+  jint hash = 0;\n   while (data < limit)\n-    *chrs++ = UTF8_GET(data, limit);\n+    {\n+      jchar ch = UTF8_GET(data, limit);\n+      hash = (31 * hash) + ch;\n+      *chrs++ = ch;\n+    }\n   chrs -= length;\n \n   JvSynchronize sync (&StringClass);\n-  if (4 * strhash_count >= 3 * strhash_size)\n+  if (3 * strhash_count >= 2 * strhash_size)\n     java::lang::String::rehash();\n-  int hash = str->hash;\n   jstring* ptr = _Jv_StringFindSlot (chrs, length, hash);\n   if (*ptr != NULL && *ptr != DELETED_STRING)\n     return (jstring) UNMASK_PTR (*ptr);\n@@ -285,6 +289,8 @@ _Jv_NewStringUtf8Const (Utf8Const* str)\n     }\n   *ptr = jstr;\n   SET_STRING_IS_INTERNED(jstr);\n+  // When string is GC'd, clear the slot in the hash table.\n+  _Jv_RegisterFinalizer ((void *) jstr, unintern);\n   return jstr;\n }\n "}]}