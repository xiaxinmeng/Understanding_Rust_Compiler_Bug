{"sha": "08c1d39d3a822dfe7d91524ec290e0f230504242", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhjMWQzOWQzYTgyMmRmZTdkOTE1MjRlYzI5MGUwZjIzMDUwNDI0Mg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-05-08T22:11:24Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-05-08T22:11:41Z"}, "message": "libphobos: Add --enable-cet to configure\n\nWhen --enable-cet is used to configure GCC, enable Intel CET in libphobos.\n\n\t* Makefile.am (AM_MAKEFLAGS): Add $(CET_FLAGS) to GCC FLAGS.\n\t* configure.ac (CET_FLAGS): Add GCC_CET_FLAGS and AC_SUBST.\n\t* Makefile.in: Regenerated.\n\t* aclocal.m4: Likewise.\n\t* configure.ac: Likewise.", "tree": {"sha": "e3fcc961eb1d924b527d3cc41724e3ca2ae30a04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3fcc961eb1d924b527d3cc41724e3ca2ae30a04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08c1d39d3a822dfe7d91524ec290e0f230504242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c1d39d3a822dfe7d91524ec290e0f230504242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c1d39d3a822dfe7d91524ec290e0f230504242", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c1d39d3a822dfe7d91524ec290e0f230504242/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74dc179a6da33cd00f6d4a93fbb97dc84f610126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74dc179a6da33cd00f6d4a93fbb97dc84f610126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74dc179a6da33cd00f6d4a93fbb97dc84f610126"}], "stats": {"total": 126, "additions": 114, "deletions": 12}, "files": [{"sha": "6a174beda75bbbece3462540df66012671916b8a", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=08c1d39d3a822dfe7d91524ec290e0f230504242", "patch": "@@ -1,3 +1,11 @@\n+2020-05-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.am (AM_MAKEFLAGS): Add $(CET_FLAGS) to GCC FLAGS.\n+\t* configure.ac (CET_FLAGS): Add GCC_CET_FLAGS and AC_SUBST.\n+\t* Makefile.in: Regenerated.\n+\t* aclocal.m4: Likewise.\n+\t* configure.ac: Likewise.\n+\n 2020-04-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* libdruntime/Makefile.am (DRUNTIME_SOURCES_CONFIGURED): Remove"}, {"sha": "84d8001602524cd2e155a85add8b2caf28ca7c15", "filename": "libphobos/Makefile.am", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.am?ref=08c1d39d3a822dfe7d91524ec290e0f230504242", "patch": "@@ -33,14 +33,14 @@ AM_MAKEFLAGS = \\\n \t\"AR_FLAGS=$(AR_FLAGS)\" \\\n \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n-\t\"CCASFLAGS=$(CCASFLAGS)\" \\\n-\t\"CFLAGS=$(CFLAGS)\" \\\n-\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n+\t\"CCASFLAGS=$(CCASFLAGS) $(CET_FLAGS)\" \\\n+\t\"CFLAGS=$(CFLAGS) $(CET_FLAGS)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS) $(CET_FLAGS)\" \\\n \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n-\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET) $(CET_FLAGS)\" \\\n \t\"GDC_FOR_TARGET=$(GDC_FOR_TARGET)\" \\\n \t\"GDC=$(GDC)\" \\\n-\t\"GDCFLAGS=$(GDCFLAGS)\" \\\n+\t\"GDCFLAGS=$(GDCFLAGS) $(CET_FLAGS)\" \\\n \t\"INSTALL=$(INSTALL)\" \\\n \t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\"}, {"sha": "4806f69f4066290c53dae26999017538b92bc698", "filename": "libphobos/Makefile.in", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.in?ref=08c1d39d3a822dfe7d91524ec290e0f230504242", "patch": "@@ -205,6 +205,7 @@ CC = @CC@\n CCAS = @CCAS@\n CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n+CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n CHECKING_DFLAGS = @CHECKING_DFLAGS@\n@@ -351,14 +352,14 @@ AM_MAKEFLAGS = \\\n \t\"AR_FLAGS=$(AR_FLAGS)\" \\\n \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n-\t\"CCASFLAGS=$(CCASFLAGS)\" \\\n-\t\"CFLAGS=$(CFLAGS)\" \\\n-\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n+\t\"CCASFLAGS=$(CCASFLAGS) $(CET_FLAGS)\" \\\n+\t\"CFLAGS=$(CFLAGS) $(CET_FLAGS)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS) $(CET_FLAGS)\" \\\n \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n-\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET) $(CET_FLAGS)\" \\\n \t\"GDC_FOR_TARGET=$(GDC_FOR_TARGET)\" \\\n \t\"GDC=$(GDC)\" \\\n-\t\"GDCFLAGS=$(GDCFLAGS)\" \\\n+\t\"GDCFLAGS=$(GDCFLAGS) $(CET_FLAGS)\" \\\n \t\"INSTALL=$(INSTALL)\" \\\n \t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\"}, {"sha": "b2e1cbf0197eab82d1380fac3330384082c8eb5a", "filename": "libphobos/aclocal.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Faclocal.m4?ref=08c1d39d3a822dfe7d91524ec290e0f230504242", "patch": "@@ -873,6 +873,8 @@ AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n m4_include([../config/acx.m4])\n+m4_include([../config/cet.m4])\n+m4_include([../config/enable.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])"}, {"sha": "c8137d4d572bd6e25daa23b1e3c1fc50a48923a2", "filename": "libphobos/configure", "status": "modified", "additions": 89, "deletions": 2, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=08c1d39d3a822dfe7d91524ec290e0f230504242", "patch": "@@ -722,6 +722,7 @@ LIBTOOL\n CFLAGS_FOR_BUILD\n CC_FOR_BUILD\n AR\n+CET_FLAGS\n RANLIB\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -824,6 +825,7 @@ enable_option_checking\n enable_multilib\n enable_silent_rules\n enable_maintainer_mode\n+enable_cet\n enable_shared\n enable_static\n with_pic\n@@ -1476,6 +1478,7 @@ Optional Features:\n   --enable-maintainer-mode\n                           enable make rules and dependencies not useful (and\n                           sometimes confusing) to the casual installer\n+  --enable-cet            enable Intel CET in target libraries [default=no]\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n   --enable-static[=PKGS]  build static libraries [default=yes]\n   --enable-fast-install[=PKGS]\n@@ -5560,6 +5563,90 @@ $as_echo \"no\" >&6; }\n fi\n \n \n+# Add CET specific flags if CET is enabled\n+ # Check whether --enable-cet was given.\n+if test \"${enable_cet+set}\" = set; then :\n+  enableval=$enable_cet;\n+      case \"$enableval\" in\n+       yes|no|auto) ;;\n+       *) as_fn_error $? \"Unknown argument to enable/disable cet\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_cet=no\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n+case \"$host\" in\n+  i[34567]86-*-linux* | x86_64-*-linux*)\n+    case \"$enable_cet\" in\n+      auto)\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n+asm (\"setssbsy\");\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  enable_cet=yes\n+else\n+  enable_cet=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+      yes)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error $? \"assembler with CET support is required for --enable-cet\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+    esac\n+    ;;\n+  *)\n+    enable_cet=no\n+    ;;\n+esac\n+if test x$enable_cet = xyes; then\n+  CET_FLAGS=\"-fcf-protection -mshstk\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+\n # This should be inherited in the recursive make, but ensure it is defined.\n test \"$AR\" || AR=ar\n \n@@ -11647,7 +11734,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11650 \"configure\"\n+#line 11737 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11753,7 +11840,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11756 \"configure\"\n+#line 11843 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "ec8a30ea511485435d2f30f0da93cddba13ca14b", "filename": "libphobos/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c1d39d3a822dfe7d91524ec290e0f230504242/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=08c1d39d3a822dfe7d91524ec290e0f230504242", "patch": "@@ -65,6 +65,10 @@ AC_PROG_RANLIB\n AC_PROG_INSTALL\n AC_PROG_MAKE_SET\n \n+# Add CET specific flags if CET is enabled\n+GCC_CET_FLAGS(CET_FLAGS)\n+AC_SUBST(CET_FLAGS)\n+\n # This should be inherited in the recursive make, but ensure it is defined.\n test \"$AR\" || AR=ar\n AC_SUBST(AR)"}]}