{"sha": "9e42ab3e45c060ceb91a552a045aa66a571bf163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU0MmFiM2U0NWMwNjBjZWI5MWE1NTJhMDQ1YWE2NmE1NzFiZjE2Mw==", "commit": {"author": {"name": "Roman Zippel", "email": "zippel@linux-m68k.org", "date": "2004-09-03T04:12:12Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-09-03T04:12:12Z"}, "message": "combine.c (try_combine): Delay modifying of insns which cannot be easily undone.\n\n        * combine.c (try_combine): Delay modifying of insns which cannot\n        be easily undone.\n\nFrom-SVN: r87025", "tree": {"sha": "1eef8ec35c971db0e26a799880af23595ab07d10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eef8ec35c971db0e26a799880af23595ab07d10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e42ab3e45c060ceb91a552a045aa66a571bf163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e42ab3e45c060ceb91a552a045aa66a571bf163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e42ab3e45c060ceb91a552a045aa66a571bf163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e42ab3e45c060ceb91a552a045aa66a571bf163/comments", "author": null, "committer": null, "parents": [{"sha": "6df9867e9159eb2b84c6fb42276000a404d2232a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6df9867e9159eb2b84c6fb42276000a404d2232a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6df9867e9159eb2b84c6fb42276000a404d2232a"}], "stats": {"total": 78, "additions": 44, "deletions": 34}, "files": [{"sha": "9fff478e8e16a490e64d24cd9c9f4c9325295e62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e42ab3e45c060ceb91a552a045aa66a571bf163/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e42ab3e45c060ceb91a552a045aa66a571bf163/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e42ab3e45c060ceb91a552a045aa66a571bf163", "patch": "@@ -1,3 +1,8 @@\n+2004-09-02  Roman Zippel  <zippel@linux-m68k.org>\n+ \n+\t* combine.c (try_combine): Delay modifying of insns which cannot\n+\tbe easily undone.\n+\n 2004-09-02  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* gcc/common.opt: Rename ivcanon to tree-loop-ivcanon, tree-lim to"}, {"sha": "44d8b292b5d4189116eae16b196067968c013904", "filename": "gcc/combine.c", "status": "modified", "additions": 39, "deletions": 34, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e42ab3e45c060ceb91a552a045aa66a571bf163/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e42ab3e45c060ceb91a552a045aa66a571bf163/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=9e42ab3e45c060ceb91a552a045aa66a571bf163", "patch": "@@ -1602,6 +1602,7 @@ try_combine (rtx i3, rtx i2, rtx i1, int *new_direct_jump_p)\n   int i3_subst_into_i2 = 0;\n   /* Notes that I1, I2 or I3 is a MULT operation.  */\n   int have_mult = 0;\n+  int swap_i2i3 = 0;\n \n   int maxreg;\n   rtx temp;\n@@ -2468,40 +2469,7 @@ try_combine (rtx i3, rtx i2, rtx i1, int *new_direct_jump_p)\n \tinsn_code_number = recog_for_combine (&newpat, i3, &new_i3_notes);\n \n       if (insn_code_number >= 0)\n-\t{\n-\t  rtx insn;\n-\t  rtx link;\n-\n-\t  /* If we will be able to accept this, we have made a change to the\n-\t     destination of I3.  This requires us to do a few adjustments.  */\n-\t  PATTERN (i3) = newpat;\n-\t  adjust_for_new_dest (i3);\n-\n-\t  /* I3 now uses what used to be its destination and which is\n-\t     now I2's destination.  That means we need a LOG_LINK from\n-\t     I3 to I2.  But we used to have one, so we still will.\n-\n-\t     However, some later insn might be using I2's dest and have\n-\t     a LOG_LINK pointing at I3.  We must remove this link.\n-\t     The simplest way to remove the link is to point it at I1,\n-\t     which we know will be a NOTE.  */\n-\n-\t  for (insn = NEXT_INSN (i3);\n-\t       insn && (this_basic_block->next_bb == EXIT_BLOCK_PTR\n-\t\t\t|| insn != BB_HEAD (this_basic_block->next_bb));\n-\t       insn = NEXT_INSN (insn))\n-\t    {\n-\t      if (INSN_P (insn) && reg_referenced_p (ni2dest, PATTERN (insn)))\n-\t\t{\n-\t\t  for (link = LOG_LINKS (insn); link;\n-\t\t       link = XEXP (link, 1))\n-\t\t    if (XEXP (link, 0) == i3)\n-\t\t      XEXP (link, 0) = i1;\n-\n-\t\t  break;\n-\t\t}\n-\t    }\n-\t}\n+\tswap_i2i3 = 1;\n     }\n \n   /* Similarly, check for a case where we have a PARALLEL of two independent\n@@ -2631,6 +2599,43 @@ try_combine (rtx i3, rtx i2, rtx i1, int *new_direct_jump_p)\n   /* We now know that we can do this combination.  Merge the insns and\n      update the status of registers and LOG_LINKS.  */\n \n+  if (swap_i2i3)\n+    {\n+      rtx insn;\n+      rtx link;\n+      rtx ni2dest;\n+\n+      /* I3 now uses what used to be its destination and which is now\n+         I2's destination.  This requires us to do a few adjustments.  */\n+      PATTERN (i3) = newpat;\n+      adjust_for_new_dest (i3);\n+\n+      /* We need a LOG_LINK from I3 to I2.  But we used to have one,\n+         so we still will.\n+\n+\t However, some later insn might be using I2's dest and have\n+\t a LOG_LINK pointing at I3.  We must remove this link.\n+\t The simplest way to remove the link is to point it at I1,\n+\t which we know will be a NOTE.  */\n+\n+      ni2dest = SET_DEST (newi2pat);\n+      for (insn = NEXT_INSN (i3);\n+\t   insn && (this_basic_block->next_bb == EXIT_BLOCK_PTR\n+\t\t    || insn != BB_HEAD (this_basic_block->next_bb));\n+\t   insn = NEXT_INSN (insn))\n+\t{\n+\t  if (INSN_P (insn) && reg_referenced_p (ni2dest, PATTERN (insn)))\n+\t    {\n+\t      for (link = LOG_LINKS (insn); link;\n+\t\t   link = XEXP (link, 1))\n+\t\tif (XEXP (link, 0) == i3)\n+\t\t  XEXP (link, 0) = i1;\n+\n+\t      break;\n+\t    }\n+\t}\n+    }\n+\n   {\n     rtx i3notes, i2notes, i1notes = 0;\n     rtx i3links, i2links, i1links = 0;"}]}