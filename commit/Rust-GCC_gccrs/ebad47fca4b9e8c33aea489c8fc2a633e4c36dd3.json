{"sha": "ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJhZDQ3ZmNhNGI5ZThjMzNhZWE0ODljOGZjMmE2MzNlNGMzNmRkMw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-08-13T08:07:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-13T08:07:29Z"}, "message": "[Ada] Avoid crash in GNATprove_Mode on allocator inside type\n\nIn the special mode for GNATprove, subtypes should be declared for\nallocators when constraints are used. This was done previously but it\ndoes not work inside spec expressions, as the declaration is not\ninserted and analyzed in the AST in that case, leading to a later crash\non an incomplete entity. Thus, no declaration should be created in such\na case, letting GNATprove later reject such code due to the use of an\nallocator in an interfering context.\n\n2019-08-13  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch4.adb (Analyze_Allocator): Do not insert subtype\n\tdeclaration for allocator inside a spec expression.\n\ngcc/testsuite/\n\n\t* gnat.dg/allocator2.adb, gnat.dg/allocator2.ads: New testcase.\n\nFrom-SVN: r274345", "tree": {"sha": "642cc8ed29788924494a357c07ec9b43b9047c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/642cc8ed29788924494a357c07ec9b43b9047c0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1788bf118c1c97a2e3cb8c0526ffe617859eb7d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "920650b9010d01192a9fddf9de250d4aea0a6cf9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3", "patch": "@@ -1,3 +1,8 @@\n+2019-08-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Allocator): Do not insert subtype\n+\tdeclaration for allocator inside a spec expression.\n+\n 2019-08-13  Yannick Moy  <moy@adacore.com>\n \n \t* sem_res.adb (Resolve_Call): Do not inline calls inside record"}, {"sha": "627257875ddfb195d9d8a196b31bda28d547fc37", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3", "patch": "@@ -676,9 +676,15 @@ package body Sem_Ch4 is\n \n                --  In GNATprove mode we need to preserve the link between\n                --  the original subtype indication and the anonymous subtype,\n-               --  to extend proofs to constrained acccess types.\n-\n-               if Expander_Active or else GNATprove_Mode then\n+               --  to extend proofs to constrained acccess types. We only do\n+               --  that outside of spec expressions, otherwise the declaration\n+               --  cannot be inserted and analyzed. In such a case, GNATprove\n+               --  later rejects the allocator as it is not used here in\n+               --  a non-interfering context (SPARK 4.8(2) and 7.1.3(12)).\n+\n+               if Expander_Active\n+                 or else (GNATprove_Mode and then not In_Spec_Expression)\n+               then\n                   Def_Id := Make_Temporary (Loc, 'S');\n \n                   Insert_Action (E,"}, {"sha": "0c5d9485dfbfab735a250b4ad7ad126d6dd01a62", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3", "patch": "@@ -1,3 +1,7 @@\n+2019-08-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat.dg/allocator2.adb, gnat.dg/allocator2.ads: New testcase.\n+\n 2019-08-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/generic_inst9.adb, gnat.dg/generic_inst9.ads,"}, {"sha": "495efd33ec2e36ef0b41c379f017995061ef17e3", "filename": "gcc/testsuite/gnat.dg/allocator2.adb", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Ftestsuite%2Fgnat.dg%2Fallocator2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Ftestsuite%2Fgnat.dg%2Fallocator2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fallocator2.adb?ref=ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3", "patch": "@@ -0,0 +1,6 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatd.F\" }\n+\n+package body Allocator2 is\n+   procedure Dummy is null;\n+end Allocator2;"}, {"sha": "7c4c22838036447619a9dc0a3b75e23ca1c5ab71", "filename": "gcc/testsuite/gnat.dg/allocator2.ads", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Ftestsuite%2Fgnat.dg%2Fallocator2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3/gcc%2Ftestsuite%2Fgnat.dg%2Fallocator2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fallocator2.ads?ref=ebad47fca4b9e8c33aea489c8fc2a633e4c36dd3", "patch": "@@ -0,0 +1,15 @@\n+pragma SPARK_Mode;\n+package Allocator2 is\n+    type Nat_Array is array (Positive range <>) of Natural with\n+      Default_Component_Value => 0;\n+    type Nat_Stack (Max : Natural) is record\n+       Content : Nat_Array (1 .. Max);\n+    end record;\n+    type Stack_Acc is access Nat_Stack;\n+    type My_Rec is private;\n+private\n+    type My_Rec is record\n+       My_Stack : Stack_Acc := new Nat_Stack (Max => 10);\n+    end record;\n+   procedure Dummy;\n+end Allocator2;"}]}