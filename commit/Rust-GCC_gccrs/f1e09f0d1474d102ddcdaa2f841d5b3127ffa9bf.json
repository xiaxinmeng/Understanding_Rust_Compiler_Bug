{"sha": "f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlMDlmMGQxNDc0ZDEwMmRkY2RhYTJmODQxZDViMzEyN2ZmYTliZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2011-11-07T00:06:23Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-11-07T00:06:23Z"}, "message": "basic_string.h (basic_string::at): Move adjacent to other overload.\n\n\t* include/bits/basic_string.h (basic_string::at): Move adjacent to other\n\toverload.\n\t(basic_string::pop_back): Define.\n\t* include/debug/string (__gnu_debug::basic_string::pop_back): Likewise.\n\t* include/ext/vstring.h (__versa_string::pop_back): Likewise.\n\t* config/abi/pre/gnu.ver: Add new symbols.\n\t* testsuite/21_strings/basic_string/modifiers/char/pop_back.cc: New.\n\t* testsuite/21_strings/basic_string/modifiers/wchar_t/pop_back.cc: New.\n\t* testsuite/21_strings/basic_string/range_access.cc: Split to ...\n\t* testsuite/21_strings/basic_string/range_access/char/1.cc: Here and ...\n\t* testsuite/21_strings/basic_string/range_access/wchar_t/1.cc: Here.\n\t* testsuite/ext/vstring/modifiers/char/pop_back.cc: New.\n\t* testsuite/ext/vstring/modifiers/wchar_t/pop_back.cc: New.\n\nFrom-SVN: r181049", "tree": {"sha": "4489cbd2684792e7d2e77a91457a12665c49bcd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4489cbd2684792e7d2e77a91457a12665c49bcd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d19fa6b5f1372429e56c2d4f8d384ed388a22d21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d19fa6b5f1372429e56c2d4f8d384ed388a22d21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d19fa6b5f1372429e56c2d4f8d384ed388a22d21"}], "stats": {"total": 308, "additions": 281, "deletions": 27}, "files": [{"sha": "7d3fd02a9c728ecd2375ff1fe4220cba50e2f974", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -1,3 +1,19 @@\n+2011-11-07  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/bits/basic_string.h (basic_string::at): Move adjacent to other\n+\toverload.\n+\t(basic_string::pop_back): Define.\n+\t* include/debug/string (__gnu_debug::basic_string::pop_back): Likewise.\n+\t* include/ext/vstring.h (__versa_string::pop_back): Likewise.\n+\t* config/abi/pre/gnu.ver: Add new symbols.\n+\t* testsuite/21_strings/basic_string/modifiers/char/pop_back.cc: New.\n+\t* testsuite/21_strings/basic_string/modifiers/wchar_t/pop_back.cc: New.\n+\t* testsuite/21_strings/basic_string/range_access.cc: Split to ...\n+\t* testsuite/21_strings/basic_string/range_access/char/1.cc: Here and ...\n+\t* testsuite/21_strings/basic_string/range_access/wchar_t/1.cc: Here.\n+\t* testsuite/ext/vstring/modifiers/char/pop_back.cc: New.\n+\t* testsuite/ext/vstring/modifiers/wchar_t/pop_back.cc: New.\n+\n 2011-11-06  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* doc/xml/manual/backwards_compatibility.xml: Fix autoconf tests for"}, {"sha": "2810c84dab5ba6babdfda3b69491ec8058b66113", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -225,9 +225,10 @@ GLIBCXX_3.4 {\n     _ZNKSs[0-3][a-b]*;\n     _ZNKSs[5-9][a-b]*;\n     _ZNKSs[0-9][d-e]*;\n-    _ZNKSs[0-9][g-z]*;\n+    _ZNKSs[0-79][g-z]*;\n     _ZNKSs[0-9][0-9][a-z]*;\n     _ZNKSs4find*;\n+    _ZNKSs8max_size*;\n     _ZNKSs[a-z]*;\n     _ZNKSs4_Rep12_M_is_leakedEv;\n     _ZNKSs4_Rep12_M_is_sharedEv;\n@@ -286,10 +287,11 @@ GLIBCXX_3.4 {\n     _ZNKSbIwSt11char_traitsIwESaIwEE[0-3][a-b]*;\n     _ZNKSbIwSt11char_traitsIwESaIwEE[5-9][a-b]*;\n     _ZNKSbIwSt11char_traitsIwESaIwEE[0-9][d-e]*;\n-    _ZNKSbIwSt11char_traitsIwESaIwEE[0-9][g-z]*;\n+    _ZNKSbIwSt11char_traitsIwESaIwEE[0-79][g-z]*;\n     _ZNKSbIwSt11char_traitsIwESaIwEE[0-9][0-9][a-z]*;\n     _ZNKSbIwSt11char_traitsIwESaIwEE[a-z]*;\n     _ZNKSbIwSt11char_traitsIwESaIwEE4find*;\n+    _ZNKSbIwSt11char_traitsIwESaIwEE8max_size*;\n     _ZNKSbIwSt11char_traitsIwESaIwEE4_Rep12_M_is_leakedEv;\n     _ZNKSbIwSt11char_traitsIwESaIwEE4_Rep12_M_is_sharedEv;\n     _ZNKSbIwSt11char_traitsIwESaIwEE6_M_repEv;\n@@ -1302,6 +1304,11 @@ GLIBCXX_3.4.17 {\n     _ZNSt14numeric_limitsInE*;\n     _ZNSt14numeric_limitsIoE*;\n \n+    # std::string::pop_back()\n+    _ZNSs8pop_backEv;\n+    # std::wstring::pop_back()\n+    _ZNSbIwSt11char_traitsIwESaIwEE8pop_backEv;\n+\n } GLIBCXX_3.4.16;\n \n # Symbols in the support library (libsupc++) have their own tag."}, {"sha": "00f9bccd419eae360b3c82a298d085388bcd67d9", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 31, "deletions": 20, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -865,6 +865,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \treturn _M_data()[__n];\n       }\n \n+      /**\n+       *  @brief  Provides access to the data contained in the %string.\n+       *  @param __n The index of the character to access.\n+       *  @return  Read/write reference to the character.\n+       *  @throw  std::out_of_range  If @a n is an invalid index.\n+       *\n+       *  This function provides for safer data access.  The parameter is\n+       *  first checked that it is in the range of the string.  The function\n+       *  throws out_of_range if the check fails.  Success results in\n+       *  unsharing the string.\n+       */\n+      reference\n+      at(size_type __n)\n+      {\n+\tif (__n >= size())\n+\t  __throw_out_of_range(__N(\"basic_string::at\"));\n+\t_M_leak();\n+\treturn _M_data()[__n];\n+      }\n+\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  Returns a read/write reference to the data at the first\n@@ -899,26 +919,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { return operator[](this->size() - 1); }\n #endif\n \n-      /**\n-       *  @brief  Provides access to the data contained in the %string.\n-       *  @param __n The index of the character to access.\n-       *  @return  Read/write reference to the character.\n-       *  @throw  std::out_of_range  If @a n is an invalid index.\n-       *\n-       *  This function provides for safer data access.  The parameter is\n-       *  first checked that it is in the range of the string.  The function\n-       *  throws out_of_range if the check fails.  Success results in\n-       *  unsharing the string.\n-       */\n-      reference\n-      at(size_type __n)\n-      {\n-\tif (__n >= size())\n-\t  __throw_out_of_range(__N(\"basic_string::at\"));\n-\t_M_leak();\n-\treturn _M_data()[__n];\n-      }\n-\n       // Modifiers:\n       /**\n        *  @brief  Append a string to this string.\n@@ -1394,6 +1394,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       iterator\n       erase(iterator __first, iterator __last);\n  \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      /**\n+       *  @brief  Remove the last character.\n+       *\n+       *  The string must be non-empty.\n+       */\n+      void\n+      pop_back()\n+      { erase(size()-1, 1); }\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n       /**\n        *  @brief  Replace characters with value from another string.\n        *  @param __pos  Index of first character to replace."}, {"sha": "6350f6de5e562bb529fa7a97ff3057845e95ad47", "filename": "libstdc++-v3/include/debug/string", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -580,6 +580,16 @@ namespace __gnu_debug\n       return iterator(__res, this);\n     }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+    void\n+    pop_back()\n+    {\n+      __glibcxx_check_nonempty();\n+      _Base::pop_back();\n+      this->_M_invalidate_all();\n+    }\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n     basic_string&\n     replace(size_type __pos1, size_type __n1, const basic_string& __str)\n     {"}, {"sha": "a613e364d3a476b0bb2ec79ad279efdcedc99e46", "filename": "libstdc++-v3/include/ext/vstring.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -1140,6 +1140,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \treturn iterator(this->_M_data() + __pos);\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      /**\n+       *  @brief  Remove the last character.\n+       *\n+       *  The string must be non-empty.\n+       */\n+      void\n+      pop_back()\n+      { this->_M_erase(size()-1, 1); }\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n       /**\n        *  @brief  Replace characters with value from another string.\n        *  @param __pos  Index of first character to replace."}, {"sha": "1f0f3d884fbaf91ba668e3f2ff4a5b7fe142bc51", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/modifiers/char/pop_back.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fchar%2Fpop_back.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fchar%2Fpop_back.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fchar%2Fpop_back.cc?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 21.4.6.5 basic_string::pop_back\n+// { dg-options \"-std=gnu++0x\" }\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const std::string cstr(\"Badger\");\n+  std::string str = cstr;\n+  str.pop_back();\n+  VERIFY( str.size() == cstr.size() - 1 );\n+\n+  str += cstr.back();\n+  VERIFY( str == cstr );\n+}\n+\n+int main()\n+{ \n+  test01();\n+  return 0;\n+}"}, {"sha": "fb5db8c138031805ef29138c15eec2d2b7e3dfdf", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/modifiers/wchar_t/pop_back.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fwchar_t%2Fpop_back.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fwchar_t%2Fpop_back.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fwchar_t%2Fpop_back.cc?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 21.4.6.5 basic_string::pop_back\n+// { dg-options \"-std=gnu++0x\" }\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const std::wstring cstr(L\"Badger\");\n+  std::wstring str = cstr;\n+  str.pop_back();\n+  VERIFY( str.size() == cstr.size() - 1 );\n+\n+  str += cstr.back();\n+  VERIFY( str == cstr );\n+}\n+\n+int main()\n+{ \n+  test01();\n+  return 0;\n+}"}, {"sha": "458bf53e2c58fd9646a543297f8d606e3c58afda", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/range_access/char/1.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frange_access%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frange_access%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frange_access%2Fchar%2F1.cc?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <string>\n+\n+void\n+test01()\n+{\n+  std::string s(\"Hello, World!\");\n+  std::begin(s);\n+  std::end(s);\n+}"}, {"sha": "e300b09238978b11939fe0ea8fdd09b3e37a2d7d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/range_access/wchar_t/1.cc", "status": "renamed", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frange_access%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frange_access%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frange_access%2Fwchar_t%2F1.cc?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2010. 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -25,10 +25,6 @@\n void\n test01()\n {\n-  std::string s(\"Hello, World!\");\n-  std::begin(s);\n-  std::end(s);\n-\n #ifdef _GLIBCXX_USE_WCHAR_T\n   std::wstring ws(L\"Hello, World!\");\n   std::begin(ws);", "previous_filename": "libstdc++-v3/testsuite/21_strings/basic_string/range_access.cc"}, {"sha": "4dfa2f6fed8a693e4a7fd76b660c8743f5f8fc35", "filename": "libstdc++-v3/testsuite/ext/vstring/modifiers/char/pop_back.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fmodifiers%2Fchar%2Fpop_back.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fmodifiers%2Fchar%2Fpop_back.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fmodifiers%2Fchar%2Fpop_back.cc?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -0,0 +1,45 @@\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 21.4.6.5 basic_string::pop_back\n+// { dg-options \"-std=gnu++0x\" }\n+\n+#include <ext/vstring.h>\n+#include <testsuite_hooks.h>\n+\n+template<typename StrT>\n+int test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const StrT cstr(\"Badger\");\n+  StrT str = cstr;\n+  str.pop_back();\n+  VERIFY( str.size() == cstr.size() - 1 );\n+\n+  str += cstr.back();\n+  VERIFY( str == cstr );\n+\n+  return test;\n+}\n+\n+int main()\n+{ \n+  test01<__gnu_cxx::__sso_string>();\n+  test01<__gnu_cxx::__rc_string>();\n+  return 0;\n+}"}, {"sha": "ae607b61de300777357f7fa247f59d19159dc8dd", "filename": "libstdc++-v3/testsuite/ext/vstring/modifiers/wchar_t/pop_back.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fmodifiers%2Fwchar_t%2Fpop_back.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fmodifiers%2Fwchar_t%2Fpop_back.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fmodifiers%2Fwchar_t%2Fpop_back.cc?ref=f1e09f0d1474d102ddcdaa2f841d5b3127ffa9bf", "patch": "@@ -0,0 +1,45 @@\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 21.4.6.5 basic_string::pop_back\n+// { dg-options \"-std=gnu++0x\" }\n+\n+#include <ext/vstring.h>\n+#include <testsuite_hooks.h>\n+\n+template<typename StrT>\n+int test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const StrT cstr(L\"Badger\");\n+  StrT str = cstr;\n+  str.pop_back();\n+  VERIFY( str.size() == cstr.size() - 1 );\n+\n+  str += cstr.back();\n+  VERIFY( str == cstr );\n+\n+  return test;\n+}\n+\n+int main()\n+{ \n+  test01<__gnu_cxx::__wsso_string>();\n+  test01<__gnu_cxx::__wrc_string>();\n+  return 0;\n+}"}]}