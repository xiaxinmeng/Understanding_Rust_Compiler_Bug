{"sha": "903e846578b8a97c311a6e120edbd116a8b3f992", "node_id": "C_kwDOANBUbNoAKDkwM2U4NDY1NzhiOGE5N2MzMTFhNmUxMjBlZGJkMTE2YThiM2Y5OTI", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-18T08:54:35Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-18T09:18:51Z"}, "message": "Revert Ada .cc renaming renaming.\n\ngcc/ada/ChangeLog:\n\n\t* Make-generated.in: Revert renaming changes.\n\t* Makefile.rtl: Likewise.\n\t* adadecode.cc: Moved to...\n\t* adadecode.c: ...here.\n\t* affinity.cc: Moved to...\n\t* affinity.c: ...here.\n\t* argv-lynxos178-raven-cert.cc: Moved to...\n\t* argv-lynxos178-raven-cert.c: ...here.\n\t* argv.cc: Moved to...\n\t* argv.c: ...here.\n\t* aux-io.cc: Moved to...\n\t* aux-io.c: ...here.\n\t* cio.cc: Moved to...\n\t* cio.c: ...here.\n\t* cstreams.cc: Moved to...\n\t* cstreams.c: ...here.\n\t* env.cc: Moved to...\n\t* env.c: ...here.\n\t* exit.cc: Moved to...\n\t* exit.c: ...here.\n\t* expect.cc: Moved to...\n\t* expect.c: ...here.\n\t* final.cc: Moved to...\n\t* final.c: ...here.\n\t* gcc-interface/Makefile.in:\n\t* init.cc: Moved to...\n\t* init.c: ...here.\n\t* initialize.cc: Moved to...\n\t* initialize.c: ...here.\n\t* libgnarl/thread.cc: Moved to...\n\t* libgnarl/thread.c: ...here.\n\t* link.cc: Moved to...\n\t* link.c: ...here.\n\t* locales.cc: Moved to...\n\t* locales.c: ...here.\n\t* mkdir.cc: Moved to...\n\t* mkdir.c: ...here.\n\t* raise.cc: Moved to...\n\t* raise.c: ...here.\n\t* rtfinal.cc: Moved to...\n\t* rtfinal.c: ...here.\n\t* rtinit.cc: Moved to...\n\t* rtinit.c: ...here.\n\t* s-oscons-tmplt.c (CND): Revert renaming changes.\n\t* seh_init.cc: Moved to...\n\t* seh_init.c: ...here.\n\t* sigtramp-armdroid.cc: Moved to...\n\t* sigtramp-armdroid.c: ...here.\n\t* sigtramp-ios.cc: Moved to...\n\t* sigtramp-ios.c: ...here.\n\t* sigtramp-qnx.cc: Moved to...\n\t* sigtramp-qnx.c: ...here.\n\t* sigtramp-vxworks.cc: Moved to...\n\t* sigtramp-vxworks.c: ...here.\n\t* socket.cc: Moved to...\n\t* socket.c: ...here.\n\t* tracebak.cc: Moved to...\n\t* tracebak.c: ...here.\n\t* version.cc: Moved to...\n\t* version.c: ...here.\n\t* vx_stack_info.cc: Moved to...\n\t* vx_stack_info.c: ...here.", "tree": {"sha": "3d2da3ff95ab1b0c6063d3cb08bac81243669df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d2da3ff95ab1b0c6063d3cb08bac81243669df4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/903e846578b8a97c311a6e120edbd116a8b3f992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/903e846578b8a97c311a6e120edbd116a8b3f992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/903e846578b8a97c311a6e120edbd116a8b3f992", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/903e846578b8a97c311a6e120edbd116a8b3f992/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27404a02508b99d641840b031429385d0a92b114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27404a02508b99d641840b031429385d0a92b114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27404a02508b99d641840b031429385d0a92b114"}], "stats": {"total": 70, "additions": 32, "deletions": 38}, "files": [{"sha": "948fc508a56a133f39795502672256b4760979be", "filename": "gcc/ada/Make-generated.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "patch": "@@ -53,7 +53,7 @@ ada/stamp-snames : ada/snames.ads-tmpl ada/snames.adb-tmpl ada/snames.h-tmpl ada\n \ttouch ada/stamp-snames\n \n ada/sdefault.adb: ada/stamp-sdefault ; @true\n-ada/stamp-sdefault : $(srcdir)/ada/version.cc Makefile\n+ada/stamp-sdefault : $(srcdir)/ada/version.c Makefile\n \t$(ECHO) \"pragma Style_Checks (Off);\" >tmp-sdefault.adb\n \t$(ECHO) \"with Osint; use Osint;\" >>tmp-sdefault.adb\n \t$(ECHO) \"package body Sdefault is\" >>tmp-sdefault.adb"}, {"sha": "1b066ad6b1448e2ebcb179d4d115eadb1127a0b4", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "patch": "@@ -2856,7 +2856,7 @@ LIBGNAT_TARGET_PAIRS += \\\n \n # LIBGNAT_SRCS is the list of all C files (including headers) of the runtime\n # library.  LIBGNAT_OBJS is the list of object files for libgnat.\n-# thread.cc is special as put into GNATRTL_TASKING_OBJS\n+# thread.c is special as put into GNATRTL_TASKING_OBJS\n LIBGNAT_OBJS = adadecode.o adaint.o argv.o aux-io.o \t\t\t\\\n   cal.o cio.o cstreams.o ctrl_c.o\t\t\t\t\t\\\n   env.o errno.o exit.o expect.o final.o rtfinal.o rtinit.o\t\t\\\n@@ -2870,7 +2870,7 @@ LIBGNAT_OBJS = adadecode.o adaint.o argv.o aux-io.o \t\t\t\\\n #  GNAT_RTL_SRCS.  Right now we count on being able to build GNATRTL_OBJS\n #  from ADA_INCLUDE_SRCS.\n \n-LIBGNAT_SRCS = $(patsubst %.o,%.cc,$(LIBGNAT_OBJS))\t\t\t\\\n+LIBGNAT_SRCS = $(patsubst %.o,%.c,$(LIBGNAT_OBJS))\t\t\t\\\n   adadecode.h adaint.h env.h gsocket.h raise.h standard.ads.h\t\t\\\n   runtime.h $(EXTRA_LIBGNAT_SRCS)\n \n@@ -2920,7 +2920,7 @@ setup-rts: force\n \t$(MKDIR) $(RTSDIR)\n \t$(CHMOD) u+w $(RTSDIR)\n # Copy target independent sources\n-\t$(foreach f,$(ADA_INCLUDE_SRCS) $(LIBGNAT_SRCS) libgnarl/thread.cc, \\\n+\t$(foreach f,$(ADA_INCLUDE_SRCS) $(LIBGNAT_SRCS) libgnarl/thread.c, \\\n \t  $(LN_S) $(GNAT_SRC)/$(f) $(RTSDIR) ;) true\n # Remove files not used\n \t$(RM) $(patsubst %,$(RTSDIR)/%,$(ADA_EXCLUDE_FILES))\n@@ -2941,7 +2941,7 @@ setup-rts: force\n \tdo \\\n \t  if [ -f $(RTSDIR)/$$f ]; then echo $$f >> $(RTSDIR)/libgnarl.lst; fi \\\n \tdone\n-\t@echo thread.cc >> $(RTSDIR)/libgnarl.lst\n+\t@echo thread.c >> $(RTSDIR)/libgnarl.lst\n \t@for f in \\\n \t  $(foreach F,$(GNATRTL_NONTASKING_OBJS),$(subst $(objext),.ads,$(F))) \\\n \t  $(foreach F,$(GNATRTL_NONTASKING_OBJS),$(subst $(objext),.adb,$(F))); \\"}, {"sha": "d2270a218758f1eaf05d9d935196ca67a59ec757", "filename": "gcc/ada/adadecode.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fadadecode.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fadadecode.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadadecode.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/adadecode.cc"}, {"sha": "5d4a2242b21f2d64cf3b9db59d02c085ff0e396b", "filename": "gcc/ada/affinity.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Faffinity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Faffinity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faffinity.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/affinity.cc"}, {"sha": "644c83b664df491474a756b337be9458ded91d2b", "filename": "gcc/ada/argv-lynxos178-raven-cert.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fargv-lynxos178-raven-cert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fargv-lynxos178-raven-cert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv-lynxos178-raven-cert.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/argv-lynxos178-raven-cert.cc"}, {"sha": "82d58476e86b5af94b406d22b619fd8d7fd838d0", "filename": "gcc/ada/argv.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/argv.cc"}, {"sha": "d842051238a6f231842dff6b50f6fed7b1e438f6", "filename": "gcc/ada/aux-io.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Faux-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Faux-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faux-io.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/aux-io.cc"}, {"sha": "fa731ca68dd9ecc6dabe399a9a3f70a51d8c9a8c", "filename": "gcc/ada/cio.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fcio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fcio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcio.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/cio.cc"}, {"sha": "e714162e1a81641973ba0eb26724c3f70cca7b96", "filename": "gcc/ada/cstreams.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/cstreams.cc"}, {"sha": "7af436e4139b160552515eca4a1e819f74405043", "filename": "gcc/ada/env.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/env.cc"}, {"sha": "bb902c7082803f4b26106aa6af282a4e65815818", "filename": "gcc/ada/exit.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexit.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/exit.cc"}, {"sha": "b1889feff374c03a11b9ce17ce9043a9f6b5d0b0", "filename": "gcc/ada/expect.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/expect.cc"}, {"sha": "d2cbf4dbc51159dbaa790cc5a9dd1b8b7cc292dd", "filename": "gcc/ada/final.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffinal.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/final.cc"}, {"sha": "53d0739470abf920f10336efdc193e0669eff738", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 26, "deletions": 32, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "patch": "@@ -147,8 +147,8 @@ host_os=@host_os@\n target_cpu_default = @target_cpu_default@\n xmake_file = @xmake_file@\n tmake_file = @tmake_file@\n-#version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < $(srcdir)/version.cc`\n-#mainversion=`sed -e 's/.*\\\"\\([0-9]*\\.[0-9]*\\).*/\\1/' < $(srcdir)/version.cc`\n+#version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < $(srcdir)/version.c`\n+#mainversion=`sed -e 's/.*\\\"\\([0-9]*\\.[0-9]*\\).*/\\1/' < $(srcdir)/version.c`\n \n # Directory where sources are, from where we are.\n VPATH = $(srcdir)/ada\n@@ -222,7 +222,7 @@ endif\n all.indirect: Makefile ../gnat1$(exeext)\n \n # IN_GCC is meant to distinguish between code compiled into GCC itself, i.e.\n-# for the host, and the rest.  But we also use it for the tools (link.cc) and\n+# for the host, and the rest.  But we also use it for the tools (link.c) and\n # even break the host/target wall by using it for the library (targext.c).\n # autoconf inserts -DCROSS_DIRECTORY_STRUCTURE if we are building a cross\n # compiler which does not use the native libraries and headers.\n@@ -240,7 +240,7 @@ ALL_COMPILERFLAGS = $(ALL_CFLAGS)\n # This is where we get libiberty.a from.\n LIBIBERTY = ../../libiberty/libiberty.a\n \n-# We need to link against libbacktrace because diagnostic.cc in\n+# We need to link against libbacktrace because diagnostic.c in\n # libcommon.a uses it.\n LIBBACKTRACE = ../../libbacktrace/.libs/libbacktrace.a\n \n@@ -296,18 +296,14 @@ ADA_INCLUDES_FOR_SUBDIR = -I. -I$(fsrcdir)/ada\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-.cc.o:\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t  $(INCLUDES) $< $(OUTPUT_OPTION)\n-\n .adb.o:\n \t$(CC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) $< $(OUTPUT_OPTION)\n \n .ads.o:\n \t$(CC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) $< $(OUTPUT_OPTION)\n \n # how to regenerate this file\n-Makefile: ../config.status $(srcdir)/ada/gcc-interface/Makefile.in $(srcdir)/ada/Makefile.in $(srcdir)/ada/version.cc\n+Makefile: ../config.status $(srcdir)/ada/gcc-interface/Makefile.in $(srcdir)/ada/Makefile.in $(srcdir)/ada/version.c\n \tcd ..; \\\n \tLANGUAGES=\"$(CONFIG_LANGUAGES)\" \\\n \tCONFIG_HEADERS= \\\n@@ -415,7 +411,6 @@ ifeq ($(TOOLSCASE),native)\n   vpath %.ads ../$(RTSDIR) ../\n   vpath %.adb ../$(RTSDIR) ../\n   vpath %.c   ../$(RTSDIR) ../\n-  vpath %.cc  ../$(RTSDIR) ../\n   vpath %.h   ../$(RTSDIR) ../\n endif\n \n@@ -425,7 +420,6 @@ ifeq ($(TOOLSCASE),cross)\n   vpath %.ads ../\n   vpath %.adb ../\n   vpath %.c   ../\n-  vpath %.cc  ../\n   vpath %.h   ../\n endif\n \n@@ -909,56 +903,56 @@ ADA_RTL_DSO_DIR = $(toolexeclibdir)\n # need to keep the frame pointer in tracebak.o to pop the stack properly on\n # some targets.\n \n-tracebak.o  : tracebak.cc\n+tracebak.o  : tracebak.c\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) \\\n \t      $(INCLUDES) $(NO_OMIT_ADAFLAGS) $< $(OUTPUT_OPTION)\n \n-adadecode.o : adadecode.cc adadecode.h\n-aux-io.o  : aux-io.cc\n-argv.o    : argv.cc\n+adadecode.o : adadecode.c adadecode.h\n+aux-io.o  : aux-io.c\n+argv.o    : argv.c\n cal.o     : cal.c\n deftarg.o : deftarg.c\n errno.o   : errno.c\n-exit.o    : adaint.h exit.cc\n-expect.o  : expect.cc\n-final.o   : final.cc\n-rtfinal.o : rtfinal.cc\n-rtinit.o  : rtinit.cc\n-locales.o : locales.cc\n-mkdir.o   : mkdir.cc\n-socket.o  : socket.cc gsocket.h\n+exit.o    : adaint.h exit.c\n+expect.o  : expect.c\n+final.o   : final.c\n+rtfinal.o : rtfinal.c\n+rtinit.o  : rtinit.c\n+locales.o : locales.c\n+mkdir.o   : mkdir.c\n+socket.o  : socket.c gsocket.h\n sysdep.o  : sysdep.c\n-raise.o   : raise.cc raise.h\n-sigtramp-armdroid.o      : sigtramp-armdroid.cc sigtramp.h\n+raise.o   : raise.c raise.h\n+sigtramp-armdroid.o      : sigtramp-armdroid.c sigtramp.h\n sigtramp-armvxworks.o    : sigtramp-armvxworks.c sigtramp.h\n-sigtramp-ios.o           : sigtramp-ios.cc sigtramp.h\n-sigtramp-vxworks.o       : sigtramp-vxworks.cc $(VX_SIGTRAMP_EXTRA_SRCS)\n+sigtramp-ios.o           : sigtramp-ios.c sigtramp.h\n+sigtramp-vxworks.o       : sigtramp-vxworks.c $(VX_SIGTRAMP_EXTRA_SRCS)\n sigtramp-vxworks-vxsim.o : sigtramp-vxworks-vxsim.c $(VX_SIGTRAMP_EXTRA_SRCS)\n terminals.o : terminals.c\n-vx_stack_info.o : vx_stack_info.cc\n+vx_stack_info.o : vx_stack_info.c\n \n raise-gcc.o : raise-gcc.c raise.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t\t-iquote $(srcdir) -iquote $(ftop_srcdir)/libgcc \\\n \t\t$(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-cio.o     : cio.cc\n+cio.o     : cio.c\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-init.o    : init.cc adaint.h raise.h\n+init.o    : init.c adaint.h raise.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n init-vxsim.o : init-vxsim.c\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-initialize.o : initialize.cc raise.h\n+initialize.o : initialize.c raise.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-link.o : link.cc\n+link.o : link.c\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t\t$(ALL_CPPFLAGS) $(INCLUDES_FOR_SUBDIR) \\\n \t\t$< $(OUTPUT_OPTION)"}, {"sha": "7ee1977279b26418225797d5557a0302cde30b78", "filename": "gcc/ada/init.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/init.cc"}, {"sha": "a37602afe55771019feee9a550546a1614eb1917", "filename": "gcc/ada/initialize.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/initialize.cc"}, {"sha": "d21bea319131f5c8f4cfad89a264423ded0f3954", "filename": "gcc/ada/libgnarl/thread.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Flibgnarl%2Fthread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Flibgnarl%2Fthread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fthread.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/libgnarl/thread.cc"}, {"sha": "a7574efb47230c7fc5cf71e71d47943f8d539fe8", "filename": "gcc/ada/link.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/link.cc"}, {"sha": "ee1385a6bdc22d1bb63b30e0e9f40cfd8d1ca5cc", "filename": "gcc/ada/locales.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Flocales.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Flocales.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flocales.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/locales.cc"}, {"sha": "d54d5ec71bbe698b2cef2b386b2a36113fd43822", "filename": "gcc/ada/mkdir.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fmkdir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fmkdir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmkdir.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/mkdir.cc"}, {"sha": "477565c90aec3ae1ac688f9010ee81d33cb95ba7", "filename": "gcc/ada/raise.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fraise.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fraise.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/raise.cc"}, {"sha": "ba7c61e7b079017008c34e0768e73712eb0ecf13", "filename": "gcc/ada/rtfinal.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Frtfinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Frtfinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtfinal.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/rtfinal.cc"}, {"sha": "1b351d33203beb3e537ae7525c4299e46b3b07fa", "filename": "gcc/ada/rtinit.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Frtinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Frtinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtinit.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/rtinit.cc"}, {"sha": "af6919092d58d5cce89130c4da62da3844b1d252", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "patch": "@@ -1976,7 +1976,7 @@ CND(CLOCK_THREAD_CPUTIME_ID, \"Thread CPU clock\")\n  || defined(__DragonFly__) || defined(__QNX__)\n /** On these platforms use system provided monotonic clock instead of\n  ** the default CLOCK_REALTIME. We then need to set up cond var attributes\n- ** appropriately (see thread.cc).\n+ ** appropriately (see thread.c).\n  **\n  ** Note that AIX 5.2 does not support CLOCK_MONOTONIC timestamps for\n  ** pthread_cond_timedwait (and does not have pthread_condattr_setclock),"}, {"sha": "16a1f69d4292f5368a19ff70009b2eb8687c6c0b", "filename": "gcc/ada/seh_init.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fseh_init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fseh_init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fseh_init.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/seh_init.cc"}, {"sha": "cd15b32dca599824284e14502f179af1e041a8a7", "filename": "gcc/ada/sigtramp-armdroid.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsigtramp-armdroid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsigtramp-armdroid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-armdroid.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/sigtramp-armdroid.cc"}, {"sha": "ec829da2f6e247f6bb428069998915df1ea0d172", "filename": "gcc/ada/sigtramp-ios.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsigtramp-ios.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsigtramp-ios.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-ios.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/sigtramp-ios.cc"}, {"sha": "f44b971113e8cc2f6f0da69369cc048086265b6d", "filename": "gcc/ada/sigtramp-qnx.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsigtramp-qnx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsigtramp-qnx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-qnx.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/sigtramp-qnx.cc"}, {"sha": "138e3d001a04fc7c5b54388acc8c7f0c3827bb13", "filename": "gcc/ada/sigtramp-vxworks.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsigtramp-vxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsigtramp-vxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-vxworks.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/sigtramp-vxworks.cc"}, {"sha": "720b1d34170d1c696843377be4d119e78b035a0a", "filename": "gcc/ada/socket.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/socket.cc"}, {"sha": "54e547d24145046c9254d105429caf0da88ac890", "filename": "gcc/ada/tracebak.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/tracebak.cc"}, {"sha": "5e64edd0b17d39e3008c970c3699ed348590f893", "filename": "gcc/ada/version.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fversion.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/version.cc"}, {"sha": "a6258925082af9d4ccb5aa4200f42032275b9a8f", "filename": "gcc/ada/vx_stack_info.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fvx_stack_info.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903e846578b8a97c311a6e120edbd116a8b3f992/gcc%2Fada%2Fvx_stack_info.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvx_stack_info.c?ref=903e846578b8a97c311a6e120edbd116a8b3f992", "previous_filename": "gcc/ada/vx_stack_info.cc"}]}