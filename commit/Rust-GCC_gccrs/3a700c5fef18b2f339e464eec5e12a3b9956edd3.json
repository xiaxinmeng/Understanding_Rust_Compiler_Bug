{"sha": "3a700c5fef18b2f339e464eec5e12a3b9956edd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E3MDBjNWZlZjE4YjJmMzM5ZTQ2NGVlYzVlMTJhM2I5OTU2ZWRkMw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2021-02-02T11:31:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-07T09:29:03Z"}, "message": "[Ada] Generate warning for negative literal of a modular type\n\ngcc/ada/\n\n\t* opt.ads: Update comment for Warn_On_Suspicious_Modulus_Value.\n\t* sem_res.adb (Resolve_Unary_Op): Generate warning.\n\t* usage.adb: Refine doc for -gnatw.m/M switch.\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst:\n\tUpdate doc on -gnatw.m switch.\n\t* gnat_ugn.texi: Regenerate.", "tree": {"sha": "a2943ec837b9eaa5194cf0eb9947fb62ca9ae3d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2943ec837b9eaa5194cf0eb9947fb62ca9ae3d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a700c5fef18b2f339e464eec5e12a3b9956edd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a700c5fef18b2f339e464eec5e12a3b9956edd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a700c5fef18b2f339e464eec5e12a3b9956edd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a700c5fef18b2f339e464eec5e12a3b9956edd3/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf62c9012ce7edbc55a62a4ef34a988209ff81a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf62c9012ce7edbc55a62a4ef34a988209ff81a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf62c9012ce7edbc55a62a4ef34a988209ff81a2"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "0906a6819d627f7a4a7b77bb1bc8eda81dce19f4", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=3a700c5fef18b2f339e464eec5e12a3b9956edd3", "patch": "@@ -3424,7 +3424,10 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   with no size clause. The guess in both cases is that 2**x was intended\n   rather than x. In addition expressions of the form 2*x for small x\n   generate a warning (the almost certainly accurate guess being that\n-  2**x was intended). The default is that these warnings are given.\n+  2**x was intended). This switch also activates warnings for negative\n+  literal values of a modular type, which are interpreted as large positive\n+  integers after wrap-around. The default is that these warnings are given.\n+\n \n \n .. index:: -gnatw.M  (gcc)"}, {"sha": "fefba9c57cb38d464029cc7f668e07ba0a6430d6", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=3a700c5fef18b2f339e464eec5e12a3b9956edd3", "patch": "@@ -11616,7 +11616,9 @@ a modulus of 7 with a size of 7 bits), and modulus values of 32 or 64\n with no size clause. The guess in both cases is that 2**x was intended\n rather than x. In addition expressions of the form 2*x for small x\n generate a warning (the almost certainly accurate guess being that\n-2**x was intended). The default is that these warnings are given.\n+2**x was intended). This switch also activates warnings for negative\n+literal values of a modular type, which are interpreted as large positive\n+integers after wrap-around. The default is that these warnings are given.\n @end table\n \n @geindex -gnatw.M (gcc)"}, {"sha": "aeac35204ad1b788378569ea2a10b9b7a871c314", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=3a700c5fef18b2f339e464eec5e12a3b9956edd3", "patch": "@@ -1885,8 +1885,9 @@ package Opt is\n \n    Warn_On_Suspicious_Modulus_Value : Boolean := True;\n    --  GNAT\n-   --  Set to True to generate warnings for suspicious modulus values. The\n-   --  default is that this warning is enabled. Modified by -gnatw.m/.M.\n+   --  Set to True to generate warnings for suspicious modulus values, as well\n+   --  as negative literals of a modular type. The default is that this warning\n+   --  is enabled. Modified by -gnatw.m/.M.\n \n    Warn_On_Unchecked_Conversion : Boolean := True;\n    --  GNAT"}, {"sha": "bd950f5df861ea795021dc8fcf5f28111cab4bdf", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=3a700c5fef18b2f339e464eec5e12a3b9956edd3", "patch": "@@ -12096,6 +12096,28 @@ package body Sem_Res is\n       Set_Etype (N, B_Typ);\n       Resolve (R, B_Typ);\n \n+      --  Generate warning for negative literal of a modular type, unless it is\n+      --  enclosed directly in a type qualification or a type conversion, as it\n+      --  is likely not what the user intended. We don't issue the warning for\n+      --  the common use of -1 to denote OxFFFF_FFFF...\n+\n+      if Warn_On_Suspicious_Modulus_Value\n+        and then Nkind (N) = N_Op_Minus\n+        and then Nkind (R) = N_Integer_Literal\n+        and then Is_Modular_Integer_Type (B_Typ)\n+        and then Nkind (Parent (N)) not in N_Qualified_Expression\n+                                         | N_Type_Conversion\n+        and then Expr_Value (R) > Uint_1\n+      then\n+         Error_Msg_N\n+           (\"?M?negative literal of modular type is in fact positive\", N);\n+         Error_Msg_Uint_1 := (-Expr_Value (R)) mod Modulus (B_Typ);\n+         Error_Msg_Uint_2 := Expr_Value (R);\n+         Error_Msg_N (\"\\do you really mean^ when writing -^ '?\", N);\n+         Error_Msg_N\n+           (\"\\if you do, use qualification to avoid this warning\", N);\n+      end if;\n+\n       --  Generate warning for expressions like abs (x mod 2)\n \n       if Warn_On_Redundant_Constructs"}, {"sha": "c85d61079147d732cbe207657a3d778fd8bdd2c8", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a700c5fef18b2f339e464eec5e12a3b9956edd3/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=3a700c5fef18b2f339e464eec5e12a3b9956edd3", "patch": "@@ -532,8 +532,10 @@ begin\n                                                   \"but not read\");\n    Write_Line (\"        M*   turn off warnings for variable assigned \" &\n                                                   \"but not read\");\n-   Write_Line (\"        .m*+ turn on warnings for suspicious modulus value\");\n-   Write_Line (\"        .M   turn off warnings for suspicious modulus value\");\n+   Write_Line (\"        .m*+ turn on warnings for suspicious usage \" &\n+                                                      \"of modular type\");\n+   Write_Line (\"        .M   turn off warnings for suspicious usage \" &\n+                                                      \"of modular type\");\n    Write_Line (\"        n*   normal warning mode (cancels -gnatws/-gnatwe)\");\n    Write_Line (\"        .n   turn on info messages for atomic \" &\n                                                   \"synchronization\");"}]}