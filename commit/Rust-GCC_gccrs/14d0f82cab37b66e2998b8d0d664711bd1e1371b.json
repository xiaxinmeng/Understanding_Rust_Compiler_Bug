{"sha": "14d0f82cab37b66e2998b8d0d664711bd1e1371b", "node_id": "C_kwDOANBUbNoAKDE0ZDBmODJjYWIzN2I2NmUyOTk4YjhkMGQ2NjQ3MTFiZDFlMTM3MWI", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-12T12:24:25Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-12T12:24:25Z"}, "message": "mklog: do not parse binary file for PR entry\n\ncontrib/ChangeLog:\n\n\t* mklog.py: Do not search PR entry in a file that is binary.", "tree": {"sha": "ebdedb6cb808113d758b194f459b5cdd6da6b498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebdedb6cb808113d758b194f459b5cdd6da6b498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14d0f82cab37b66e2998b8d0d664711bd1e1371b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d0f82cab37b66e2998b8d0d664711bd1e1371b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14d0f82cab37b66e2998b8d0d664711bd1e1371b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d0f82cab37b66e2998b8d0d664711bd1e1371b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "358b7fc6b8b14b42f43187cd481812eb176cca5f", "filename": "contrib/mklog.py", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14d0f82cab37b66e2998b8d0d664711bd1e1371b/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14d0f82cab37b66e2998b8d0d664711bd1e1371b/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=14d0f82cab37b66e2998b8d0d664711bd1e1371b", "patch": "@@ -186,23 +186,25 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False,\n             # contains commented code which a note that it\n             # has not been tested due to a certain PR or DR.\n             this_file_prs = []\n-            for line in list(file)[0][0:10]:\n-                m = pr_regex.search(line.value)\n-                if m:\n-                    pr = m.group('pr')\n-                    if pr not in prs:\n-                        prs.append(pr)\n-                        this_file_prs.append(pr.split('/')[-1])\n-                else:\n-                    m = dr_regex.search(line.value)\n+            if not file.is_binary_file:\n+                for line in list(file)[0][0:10]:\n+                    m = pr_regex.search(line.value)\n                     if m:\n-                        dr = m.group('dr')\n-                        if dr not in prs:\n-                            prs.append(dr)\n-                            this_file_prs.append(dr.split('/')[-1])\n-                    elif dg_regex.search(line.value):\n-                        # Found dg-warning/dg-error line\n-                        break\n+                        pr = m.group('pr')\n+                        if pr not in prs:\n+                            prs.append(pr)\n+                            this_file_prs.append(pr.split('/')[-1])\n+                    else:\n+                        m = dr_regex.search(line.value)\n+                        if m:\n+                            dr = m.group('dr')\n+                            if dr not in prs:\n+                                prs.append(dr)\n+                                this_file_prs.append(dr.split('/')[-1])\n+                        elif dg_regex.search(line.value):\n+                            # Found dg-warning/dg-error line\n+                            break\n+\n             # PR number in the file name\n             fname = os.path.basename(file.path)\n             m = pr_filename_regex.search(fname)"}]}