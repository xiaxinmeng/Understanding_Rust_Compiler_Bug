{"sha": "2629da835003ae3ca3f39a4888fa447fe966b011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYyOWRhODM1MDAzYWUzY2EzZjM5YTQ4ODhmYTQ0N2ZlOTY2YjAxMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-05-15T15:10:32Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-15T15:10:32Z"}, "message": "i386: Emulate MMX mmx_eq/mmx_gt<mode>3 with SSE\n\nEmulate MMX mmx_eq/mmx_gt<mode>3 with SSE.  Only SSE register source\noperand is allowed.\n\n\tPR target/89021\n\t* config/i386/mmx.md (mmx_eq<mode>3): Also allow\n\tTARGET_MMX_WITH_SSE.\n\t(*mmx_eq<mode>3): Also allow TARGET_MMX_WITH_SSE.  Add SSE\n\tsupport.\n\t(mmx_gt<mode>3): Likewise.\n\nFrom-SVN: r271224", "tree": {"sha": "bbb6a0d3f51bfd5e3b7c3a1d02cb4794b1de3786", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbb6a0d3f51bfd5e3b7c3a1d02cb4794b1de3786"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2629da835003ae3ca3f39a4888fa447fe966b011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2629da835003ae3ca3f39a4888fa447fe966b011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2629da835003ae3ca3f39a4888fa447fe966b011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2629da835003ae3ca3f39a4888fa447fe966b011/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df0e1979a8f5f0d3bdaff06393cf1bddfd725e6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0e1979a8f5f0d3bdaff06393cf1bddfd725e6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df0e1979a8f5f0d3bdaff06393cf1bddfd725e6d"}], "stats": {"total": 52, "additions": 35, "deletions": 17}, "files": [{"sha": "856ff3cab86b0905b9654edcd7a371714e447d23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2629da835003ae3ca3f39a4888fa447fe966b011/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2629da835003ae3ca3f39a4888fa447fe966b011/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2629da835003ae3ca3f39a4888fa447fe966b011", "patch": "@@ -1,3 +1,12 @@\n+2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89021\n+\t* config/i386/mmx.md (mmx_eq<mode>3): Also allow\n+\tTARGET_MMX_WITH_SSE.\n+\t(*mmx_eq<mode>3): Also allow TARGET_MMX_WITH_SSE.  Add SSE\n+\tsupport.\n+\t(mmx_gt<mode>3): Likewise.\n+\n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89021"}, {"sha": "c1f0b0cfe3f109d79a4613f42082f3bdbfaa26e1", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 26, "deletions": 17, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2629da835003ae3ca3f39a4888fa447fe966b011/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2629da835003ae3ca3f39a4888fa447fe966b011/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=2629da835003ae3ca3f39a4888fa447fe966b011", "patch": "@@ -1042,30 +1042,39 @@\n (define_expand \"mmx_eq<mode>3\"\n   [(set (match_operand:MMXMODEI 0 \"register_operand\")\n         (eq:MMXMODEI\n-\t  (match_operand:MMXMODEI 1 \"nonimmediate_operand\")\n-\t  (match_operand:MMXMODEI 2 \"nonimmediate_operand\")))]\n-  \"TARGET_MMX\"\n+\t  (match_operand:MMXMODEI 1 \"register_mmxmem_operand\")\n+\t  (match_operand:MMXMODEI 2 \"register_mmxmem_operand\")))]\n+  \"TARGET_MMX || TARGET_MMX_WITH_SSE\"\n   \"ix86_fixup_binary_operands_no_copy (EQ, <MODE>mode, operands);\")\n \n (define_insn \"*mmx_eq<mode>3\"\n-  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y\")\n+  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y,x,Yv\")\n         (eq:MMXMODEI\n-\t  (match_operand:MMXMODEI 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:MMXMODEI 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_MMX && ix86_binary_operator_ok (EQ, <MODE>mode, operands)\"\n-  \"pcmpeq<mmxvecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxcmp\")\n-   (set_attr \"mode\" \"DI\")])\n+\t  (match_operand:MMXMODEI 1 \"register_mmxmem_operand\" \"%0,0,Yv\")\n+\t  (match_operand:MMXMODEI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")))]\n+  \"(TARGET_MMX || TARGET_MMX_WITH_SSE)\n+   && ix86_binary_operator_ok (EQ, <MODE>mode, operands)\"\n+  \"@\n+   pcmpeq<mmxvecsize>\\t{%2, %0|%0, %2}\n+   pcmpeq<mmxvecsize>\\t{%2, %0|%0, %2}\n+   vpcmpeq<mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+   (set_attr \"type\" \"mmxcmp,ssecmp,ssecmp\")\n+   (set_attr \"mode\" \"DI,TI,TI\")])\n \n (define_insn \"mmx_gt<mode>3\"\n-  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y\")\n+  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y,x,Yv\")\n         (gt:MMXMODEI\n-\t  (match_operand:MMXMODEI 1 \"register_operand\" \"0\")\n-\t  (match_operand:MMXMODEI 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_MMX\"\n-  \"pcmpgt<mmxvecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxcmp\")\n-   (set_attr \"mode\" \"DI\")])\n+\t  (match_operand:MMXMODEI 1 \"register_operand\" \"0,0,Yv\")\n+\t  (match_operand:MMXMODEI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")))]\n+  \"TARGET_MMX || TARGET_MMX_WITH_SSE\"\n+  \"@\n+   pcmpgt<mmxvecsize>\\t{%2, %0|%0, %2}\n+   pcmpgt<mmxvecsize>\\t{%2, %0|%0, %2}\n+   vpcmpgt<mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+   (set_attr \"type\" \"mmxcmp,ssecmp,ssecmp\")\n+   (set_attr \"mode\" \"DI,TI,TI\")])\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;"}]}