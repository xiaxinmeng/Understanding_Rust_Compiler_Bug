{"sha": "50fe876da0e0792b5cf55d7eba7dd30f0efbf1de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBmZTg3NmRhMGUwNzkyYjVjZjU1ZDdlYmE3ZGQzMGYwZWZiZjFkZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-11-05T00:54:05Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-11-05T00:54:05Z"}, "message": "ipa-inline.c (cgraph_decide_inlining_of_small_function, [...]): Do not hold memory returned by cgraph_node_name across other call.\n\n\t* ipa-inline.c (cgraph_decide_inlining_of_small_function, \n\tcgraph_decide_inlining, cgraph_decide_inlining_incrementally):\n\tDo not hold memory returned by cgraph_node_name across other call.\n\nFrom-SVN: r106519", "tree": {"sha": "69ac33a4aa4b6190f47920b632cf0562471072fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69ac33a4aa4b6190f47920b632cf0562471072fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50fe876da0e0792b5cf55d7eba7dd30f0efbf1de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50fe876da0e0792b5cf55d7eba7dd30f0efbf1de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50fe876da0e0792b5cf55d7eba7dd30f0efbf1de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50fe876da0e0792b5cf55d7eba7dd30f0efbf1de/comments", "author": null, "committer": null, "parents": [{"sha": "d6c940434386bd1e675b790db933e5e1f7149e27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c940434386bd1e675b790db933e5e1f7149e27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6c940434386bd1e675b790db933e5e1f7149e27"}], "stats": {"total": 59, "additions": 38, "deletions": 21}, "files": [{"sha": "50808e9e2befef664d102412bab5cfc38253cc91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50fe876da0e0792b5cf55d7eba7dd30f0efbf1de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50fe876da0e0792b5cf55d7eba7dd30f0efbf1de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50fe876da0e0792b5cf55d7eba7dd30f0efbf1de", "patch": "@@ -1,3 +1,9 @@\n+2005-11-05  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-inline.c (cgraph_decide_inlining_of_small_function, \n+\tcgraph_decide_inlining, cgraph_decide_inlining_incrementally):\n+\tDo not hold memory returned by cgraph_node_name across other call.\n+\n 2005-11-04  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/23424"}, {"sha": "9e42dcf701af599412d3f69407aafc34af974270", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 32, "deletions": 21, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50fe876da0e0792b5cf55d7eba7dd30f0efbf1de/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50fe876da0e0792b5cf55d7eba7dd30f0efbf1de/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=50fe876da0e0792b5cf55d7eba7dd30f0efbf1de", "patch": "@@ -722,11 +722,13 @@ cgraph_decide_inlining_of_small_functions (void)\n       if (dump_file)\n \t{\n \t  fprintf (dump_file, \n-\t\t   \"\\nConsidering %s with %i insns to be inlined into %s\\n\"\n+\t\t   \"\\nConsidering %s with %i insns\\n\",\n+\t\t   cgraph_node_name (edge->callee),\n+\t\t   edge->callee->global.insns);\n+\t  fprintf (dump_file, \n+\t\t   \" to be inlined into %s\\n\"\n \t\t   \" Estimated growth after inlined into all callees is %+i insns.\\n\"\n \t\t   \" Estimated badness is %i.\\n\",\n-\t\t   cgraph_node_name (edge->callee),\n-\t\t   edge->callee->global.insns,\n \t\t   cgraph_node_name (edge->caller),\n \t\t   cgraph_estimate_growth (edge->callee),\n \t\t   cgraph_edge_badness (edge));\n@@ -827,14 +829,14 @@ cgraph_decide_inlining_of_small_functions (void)\n       bitmap_clear (updated_nodes);\n \n       if (dump_file)\n-\tfprintf (dump_file, \n-\t\t \" Inlined into %s which now has %i insns.\\n\",\n-\t\t cgraph_node_name (edge->caller),\n-\t\t edge->caller->global.insns);\n-      if (dump_file)\n-\tfprintf (dump_file, \n-\t\t \" Inlined for a net change of %+i insns.\\n\",\n-\t\t overall_insns - old_insns);\n+\t{\n+\t  fprintf (dump_file, \n+\t\t   \" Inlined into %s which now has %i insns,\"\n+\t\t   \"net change of %+i insns.\\n\",\n+\t\t   cgraph_node_name (edge->caller),\n+\t\t   edge->caller->global.insns,\n+\t\t   overall_insns - old_insns);\n+\t}\n     }\n   while ((edge = fibheap_extract_min (heap)) != NULL)\n     {\n@@ -976,12 +978,15 @@ cgraph_decide_inlining (void)\n \t      if (ok)\n \t\t{\n \t\t  if (dump_file)\n-\t\t    fprintf (dump_file,\n-\t\t\t     \"\\nConsidering %s %i insns.\\n\"\n-\t\t\t     \" Called once from %s %i insns.\\n\",\n-\t\t\t     cgraph_node_name (node), node->global.insns,\n-\t\t\t     cgraph_node_name (node->callers->caller),\n-\t\t\t     node->callers->caller->global.insns);\n+\t\t    {\n+\t\t      fprintf (dump_file,\n+\t\t\t       \"\\nConsidering %s %i insns.\\n\",\n+\t\t\t       cgraph_node_name (node), node->global.insns);\n+\t\t      fprintf (dump_file,\n+\t\t\t       \" Called once from %s %i insns.\\n\",\n+\t\t\t       cgraph_node_name (node->callers->caller),\n+\t\t\t       node->callers->caller->global.insns);\n+\t\t    }\n \n \t\t  old_insns = overall_insns;\n \n@@ -1038,8 +1043,11 @@ cgraph_decide_inlining_incrementally (struct cgraph_node *node, bool early)\n \t&& DECL_SAVED_TREE (e->callee->decl))\n       {\n         if (dump_file && early)\n-          fprintf (dump_file, \"  Early inlining %s into %s\\n\",\n-\t\t   cgraph_node_name (e->callee), cgraph_node_name (node));\n+\t  {\n+\t    fprintf (dump_file, \"  Early inlining %s\",\n+\t\t     cgraph_node_name (e->callee));\n+\t    fprintf (dump_file, \" into %s\\n\", cgraph_node_name (node));\n+\t  }\n \tcgraph_mark_inline (e);\n \tinlined = true;\n       }\n@@ -1060,8 +1068,11 @@ cgraph_decide_inlining_incrementally (struct cgraph_node *node, bool early)\n \t  if (cgraph_default_inline_p (e->callee, &failed_reason))\n \t    {\n \t      if (dump_file && early)\n-                fprintf (dump_file, \"  Early inlining %s into %s\\n\",\n-\t\t\t cgraph_node_name (e->callee), cgraph_node_name (node));\n+\t\t{\n+\t\t  fprintf (dump_file, \"  Early inlining %s\",\n+\t\t\t   cgraph_node_name (e->callee));\n+\t\t  fprintf (dump_file, \" into %s\\n\", cgraph_node_name (node));\n+\t\t}\n \t      cgraph_mark_inline (e);\n \t      inlined = true;\n \t    }"}]}