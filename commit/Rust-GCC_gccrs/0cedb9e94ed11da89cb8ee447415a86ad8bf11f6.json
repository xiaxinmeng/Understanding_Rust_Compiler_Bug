{"sha": "0cedb9e94ed11da89cb8ee447415a86ad8bf11f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlZGI5ZTk0ZWQxMWRhODljYjhlZTQ0NzQxNWE4NmFkOGJmMTFmNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-11-19T12:52:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-11-19T12:52:09Z"}, "message": "re PR tree-optimization/34099 (optimizer problem)\n\n2007-11-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/34099\n\t* tree-ssa-ccp.c (likely_value): Exclude all but PLUS_EXPR,\n\tMINUS_EXPR and POINTER_PLUS_EXPR from handling as UNDEFINED\n\tif only one operand is undefined.\n\n\t* gcc.c-torture/execute/pr34099-2.c: New testcase.\n\nFrom-SVN: r130289", "tree": {"sha": "dc74ecf418e243c8716a1cec9373a3f013075b5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc74ecf418e243c8716a1cec9373a3f013075b5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db"}], "stats": {"total": 79, "additions": 57, "deletions": 22}, "files": [{"sha": "97f6a0806ea68c5715c0f614a66117c51fe25f75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cedb9e94ed11da89cb8ee447415a86ad8bf11f6", "patch": "@@ -1,3 +1,10 @@\n+2007-11-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/34099\n+\t* tree-ssa-ccp.c (likely_value): Exclude all but PLUS_EXPR,\n+\tMINUS_EXPR and POINTER_PLUS_EXPR from handling as UNDEFINED\n+\tif only one operand is undefined.\n+\n 2007-11-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR tree-optimization/34036"}, {"sha": "d335673e30f2de9527421044acc232b6aede32dd", "filename": "gcc/testsuite/gcc.c-torture/execute/pr34099-2.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr34099-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr34099-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr34099-2.c?ref=0cedb9e94ed11da89cb8ee447415a86ad8bf11f6", "patch": "@@ -0,0 +1,47 @@\n+int test1 (int b, int c)\n+{\n+  char x;\n+  if (b)\n+    return x / c;\n+  else\n+    return 1;\n+}\n+int test2 (int b, int c)\n+{\n+  int x;\n+  if (b)\n+    return x * c;\n+  else\n+    return 1;\n+}\n+int test3 (int b, int c)\n+{\n+  int x;\n+  if (b)\n+    return x % c;\n+  else\n+    return 1;\n+}\n+int test4 (int b, int c)\n+{\n+  char x;\n+  if (b)\n+    return x == c;\n+  else\n+    return 1;\n+}\n+\n+extern void abort (void);\n+int main()\n+{\n+  if (test1(1, 1000) != 0)\n+    abort ();\n+  if (test2(1, 0) != 0)\n+    abort ();\n+  if (test3(1, 1) != 0)\n+    abort ();\n+  if (test4(1, 1000) != 0)\n+    abort ();\n+  return 0;\n+}\n+"}, {"sha": "19d82563a81379748dd894869c8aef020a6b370f", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cedb9e94ed11da89cb8ee447415a86ad8bf11f6/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=0cedb9e94ed11da89cb8ee447415a86ad8bf11f6", "patch": "@@ -582,32 +582,13 @@ likely_value (tree stmt)\n \t/* Unary operators are handled with all_undefined_operands.  */\n \tcase PLUS_EXPR:\n \tcase MINUS_EXPR:\n-\tcase MULT_EXPR:\n \tcase POINTER_PLUS_EXPR:\n-\tcase TRUNC_DIV_EXPR:\n-\tcase CEIL_DIV_EXPR:\n-\tcase FLOOR_DIV_EXPR:\n-\tcase ROUND_DIV_EXPR:\n-\tcase TRUNC_MOD_EXPR:\n-\tcase CEIL_MOD_EXPR:\n-\tcase FLOOR_MOD_EXPR:\n-\tcase ROUND_MOD_EXPR:\n-\tcase RDIV_EXPR:\n-\tcase EXACT_DIV_EXPR:\n-\tcase LSHIFT_EXPR:\n-\tcase RSHIFT_EXPR:\n-\tcase LROTATE_EXPR:\n-\tcase RROTATE_EXPR:\n-\tcase EQ_EXPR:\n-\tcase NE_EXPR:\n-\tcase LT_EXPR:\n-\tcase GT_EXPR:\n \t  /* Not MIN_EXPR, MAX_EXPR.  One VARYING operand may be selected.\n \t     Not bitwise operators, one VARYING operand may specify the\n \t     result completely.  Not logical operators for the same reason.\n-\t     Not LE/GE comparisons or unordered comparisons.  Not\n-\t     COMPLEX_EXPR as one VARYING operand makes the result partly\n-\t     not UNDEFINED.  */\n+\t     Not COMPLEX_EXPR as one VARYING operand makes the result partly\n+\t     not UNDEFINED.  Not *DIV_EXPR, comparisons and shifts because\n+\t     the undefined operand may be promoted.  */\n \t  return UNDEFINED;\n \n \tdefault:"}]}