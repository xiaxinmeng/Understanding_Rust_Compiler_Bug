{"sha": "34dbb5f346459a1b36cd0cfbfe1cf18cd099fdf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRkYmI1ZjM0NjQ1OWExYjM2Y2QwY2ZiZmUxY2YxOGNkMDk5ZmRmMw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-07-20T20:26:28Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-07-24T16:51:00Z"}, "message": "include: Fix -Wundef warnings in ansidecl.h\n\nThis quashes -Wundef warnings in ansidecl.h when compiled in C or C++.\nIn C, __cpp_constexpr and __cplusplus aren't defined so we evaluate\nthem to 0; conversely, __STDC_VERSION__ is not defined in C++.\nThis has caused grief when -Wundef is used with -Werror.\n\nI've also tested -traditional-cpp.\n\ninclude/ChangeLog:\n\n\t* ansidecl.h: Check if __cplusplus is defined before checking\n\tthe value of __cpp_constexpr and __cplusplus.  Don't check\n\t__STDC_VERSION__ in C++.", "tree": {"sha": "1474584ff46cac3fcd7cd344003edcc9e4e44f3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1474584ff46cac3fcd7cd344003edcc9e4e44f3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34dbb5f346459a1b36cd0cfbfe1cf18cd099fdf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34dbb5f346459a1b36cd0cfbfe1cf18cd099fdf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34dbb5f346459a1b36cd0cfbfe1cf18cd099fdf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34dbb5f346459a1b36cd0cfbfe1cf18cd099fdf3/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ead235f60139edc6eb408d8d083cbb15e417b447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead235f60139edc6eb408d8d083cbb15e417b447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead235f60139edc6eb408d8d083cbb15e417b447"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "2efe3e85e59bddabcff1c814047832ef95fd2f23", "filename": "include/ansidecl.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34dbb5f346459a1b36cd0cfbfe1cf18cd099fdf3/include%2Fansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34dbb5f346459a1b36cd0cfbfe1cf18cd099fdf3/include%2Fansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fansidecl.h?ref=34dbb5f346459a1b36cd0cfbfe1cf18cd099fdf3", "patch": "@@ -79,7 +79,7 @@ So instead we use the macro below and test it against specific values.  */\n /* inline requires special treatment; it's in C99, and GCC >=2.7 supports\n    it too, but it's not in C89.  */\n #undef inline\n-#if __STDC_VERSION__ >= 199901L || defined(__cplusplus) || (defined(__SUNPRO_C) && defined(__C99FEATURES__))\n+#if (!defined(__cplusplus) && __STDC_VERSION__ >= 199901L) || defined(__cplusplus) || (defined(__SUNPRO_C) && defined(__C99FEATURES__))\n /* it's a keyword */\n #else\n # if GCC_VERSION >= 2007\n@@ -356,7 +356,7 @@ So instead we use the macro below and test it against specific values.  */\n #define ENUM_BITFIELD(TYPE) unsigned int\n #endif\n \n-#if __cpp_constexpr >= 200704\n+#if defined(__cplusplus) && __cpp_constexpr >= 200704\n #define CONSTEXPR constexpr\n #else\n #define CONSTEXPR\n@@ -419,7 +419,7 @@ So instead we use the macro below and test it against specific values.  */\n \n    so that most attempts at copy are caught at compile-time.  */\n \n-#if __cplusplus >= 201103\n+#if defined(__cplusplus) && __cplusplus >= 201103\n #define DISABLE_COPY_AND_ASSIGN(TYPE)\t\t\\\n   TYPE (const TYPE&) = delete;\t\t\t\\\n   void operator= (const TYPE &) = delete"}]}