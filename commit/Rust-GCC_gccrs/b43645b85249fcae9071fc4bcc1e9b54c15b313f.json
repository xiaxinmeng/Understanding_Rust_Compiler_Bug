{"sha": "b43645b85249fcae9071fc4bcc1e9b54c15b313f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQzNjQ1Yjg1MjQ5ZmNhZTkwNzFmYzRiY2MxZTliNTRjMTViMzEzZg==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2012-04-10T15:39:22Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2012-04-10T15:39:22Z"}, "message": "cshift0.m4 (cshift0_'rtype_code`): Guard use of modulo.\n\n\t* m4/cshift0.m4 (cshift0_'rtype_code`): Guard use of modulo.\n\n\t* generated/cshift0_c10.c: Regenerated.\n\t* generated/cshift0_c16.c: Regenerated.\n\t* generated/cshift0_c4.c: Regenerated.\n\t* generated/cshift0_c8.c: Regenerated.\n\t* generated/cshift0_i16.c: Regenerated.\n\t* generated/cshift0_i1.c: Regenerated.\n\t* generated/cshift0_i2.c: Regenerated.\n\t* generated/cshift0_i4.c: Regenerated.\n\t* generated/cshift0_i8.c: Regenerated.\n\t* generated/cshift0_r10.c: Regenerated.\n\t* generated/cshift0_r16.c: Regenerated.\n\t* generated/cshift0_r4.c: Regenerated.\n\t* generated/cshift0_r8.c: Regenerated.\n\nFrom-SVN: r186283", "tree": {"sha": "669ecf00bcc15e616e0b3f79d838b063f7331a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/669ecf00bcc15e616e0b3f79d838b063f7331a93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b43645b85249fcae9071fc4bcc1e9b54c15b313f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b43645b85249fcae9071fc4bcc1e9b54c15b313f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b43645b85249fcae9071fc4bcc1e9b54c15b313f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b43645b85249fcae9071fc4bcc1e9b54c15b313f/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca18edc55f1c23fcaa06aabe07460f4bb56f937f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca18edc55f1c23fcaa06aabe07460f4bb56f937f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca18edc55f1c23fcaa06aabe07460f4bb56f937f"}], "stats": {"total": 158, "additions": 116, "deletions": 42}, "files": [{"sha": "15b9f94314bee0c2843d7a6397f8a9a11cf0900b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -1,3 +1,21 @@\n+2012-04-10  Michael Matz  <matz@suse.de>\n+\n+\t* m4/cshift0.m4 (cshift0_'rtype_code`): Guard use of modulo.\n+\n+\t* generated/cshift0_c10.c: Regenerated.\n+\t* generated/cshift0_c16.c: Regenerated.\n+\t* generated/cshift0_c4.c: Regenerated.\n+\t* generated/cshift0_c8.c: Regenerated.\n+\t* generated/cshift0_i16.c: Regenerated.\n+\t* generated/cshift0_i1.c: Regenerated.\n+\t* generated/cshift0_i2.c: Regenerated.\n+\t* generated/cshift0_i4.c: Regenerated.\n+\t* generated/cshift0_i8.c: Regenerated.\n+\t* generated/cshift0_r10.c: Regenerated.\n+\t* generated/cshift0_r16.c: Regenerated.\n+\t* generated/cshift0_r4.c: Regenerated.\n+\t* generated/cshift0_r8.c: Regenerated.\n+\n 2012-04-04  Tristan Gingold  <gingold@adacore.com>\n \n \t* libgfortran.h: Include complex.h before math.h"}, {"sha": "ba27a9ed4aeaba8c9293206555899c2210f0325a", "filename": "libgfortran/generated/cshift0_c10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_c10.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_c10 (gfc_array_c10 *ret, const gfc_array_c10 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "0cdc6dc31e9467a098c9ba558c4ce4d2d579194c", "filename": "libgfortran/generated/cshift0_c16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_c16.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_c16 (gfc_array_c16 *ret, const gfc_array_c16 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "176137770467a1f3803c7ac24b973b8b7a3dafad", "filename": "libgfortran/generated/cshift0_c4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_c4.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_c4 (gfc_array_c4 *ret, const gfc_array_c4 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "e4534885d1b57eedc74c9e5d4fc55bbe0a84121b", "filename": "libgfortran/generated/cshift0_c8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_c8.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_c8 (gfc_array_c8 *ret, const gfc_array_c8 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "76c30efbd587a3b9db3ed6a1692700ad94668db6", "filename": "libgfortran/generated/cshift0_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_i1.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_i1 (gfc_array_i1 *ret, const gfc_array_i1 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "b114303202131ab005fbd607af5d15a6163e7936", "filename": "libgfortran/generated/cshift0_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_i16.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_i16 (gfc_array_i16 *ret, const gfc_array_i16 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "0f510f854c93b0c97709b1916846ebc1681e3ca9", "filename": "libgfortran/generated/cshift0_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_i2.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_i2 (gfc_array_i2 *ret, const gfc_array_i2 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "d75b4d6b475ffc8bcc0cc82c13e010fb08a4b302", "filename": "libgfortran/generated/cshift0_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_i4.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_i4 (gfc_array_i4 *ret, const gfc_array_i4 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "4154eb29ef3546de52aefea3100cd4959ecc26f5", "filename": "libgfortran/generated/cshift0_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_i8.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_i8 (gfc_array_i8 *ret, const gfc_array_i8 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "14be683212335570eefdf0c2bd88325127fe312c", "filename": "libgfortran/generated/cshift0_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_r10.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_r10 (gfc_array_r10 *ret, const gfc_array_r10 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "6d351f7bfdd10571cf0e414835ab48c276ba7258", "filename": "libgfortran/generated/cshift0_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_r16.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_r16 (gfc_array_r16 *ret, const gfc_array_r16 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "939ba6e12cc4e407b5314813610e9f604cb0595f", "filename": "libgfortran/generated/cshift0_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_r4.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_r4 (gfc_array_r4 *ret, const gfc_array_r4 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "73afb8a43e00525d241fed43bd4dcd745f15bb6b", "filename": "libgfortran/generated/cshift0_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fgenerated%2Fcshift0_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift0_r8.c?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -97,9 +97,13 @@ cshift0_r8 (gfc_array_r8 *ret, const gfc_array_r8 *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "b1966aa5556b355856326722d46567c0a230134f", "filename": "libgfortran/m4/cshift0.m4", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fm4%2Fcshift0.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43645b85249fcae9071fc4bcc1e9b54c15b313f/libgfortran%2Fm4%2Fcshift0.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fcshift0.m4?ref=b43645b85249fcae9071fc4bcc1e9b54c15b313f", "patch": "@@ -98,9 +98,13 @@ cshift0_'rtype_code` ('rtype` *ret, const 'rtype` *array, ptrdiff_t shift,\n   rptr = ret->base_addr;\n   sptr = array->base_addr;\n \n-  shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n-  if (shift < 0)\n-    shift += len;\n+  /* Avoid the costly modulo for trivially in-bound shifts.  */\n+  if (shift < 0 || shift >= len)\n+    {\n+      shift = len == 0 ? 0 : shift % (ptrdiff_t)len;\n+      if (shift < 0)\n+\tshift += len;\n+    }\n \n   while (rptr)\n     {"}]}