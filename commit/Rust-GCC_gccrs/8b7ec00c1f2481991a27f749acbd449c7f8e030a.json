{"sha": "8b7ec00c1f2481991a27f749acbd449c7f8e030a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI3ZWMwMGMxZjI0ODE5OTFhMjdmNzQ5YWNiZDQ0OWM3ZjhlMDMwYQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1992-07-03T23:42:18Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1992-07-03T23:42:18Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1414", "tree": {"sha": "26f3d97e43089c33d4796695d474ff29eea29e6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26f3d97e43089c33d4796695d474ff29eea29e6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b7ec00c1f2481991a27f749acbd449c7f8e030a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7ec00c1f2481991a27f749acbd449c7f8e030a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7ec00c1f2481991a27f749acbd449c7f8e030a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7ec00c1f2481991a27f749acbd449c7f8e030a/comments", "author": null, "committer": null, "parents": [{"sha": "3fc7c84ff213d5a444731bee8dcf32caa6c5c29b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc7c84ff213d5a444731bee8dcf32caa6c5c29b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fc7c84ff213d5a444731bee8dcf32caa6c5c29b"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "69844ed3ad9e2cc75ef0f69ccb28070a46ca4248", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b7ec00c1f2481991a27f749acbd449c7f8e030a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b7ec00c1f2481991a27f749acbd449c7f8e030a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8b7ec00c1f2481991a27f749acbd449c7f8e030a", "patch": "@@ -99,7 +99,7 @@ GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -B./ -B$(tooldir\n \n # Special flags for compiling enquire.\n # We disable optimization to make floating point more reliable.\n-ENQUIRE_CFLAGS = -DNO_SC -DNO_MEM -DNO_STDDEF -O0\n+ENQUIRE_CFLAGS = -DNO_SC -DNO_MEM -DNO_STDDEF -DNO_LONG_DOUBLE_IO -O0\n ENQUIRE_LDFLAGS = $(LDFLAGS)\n \n # Tools to use when building a cross-compiler.\n@@ -685,6 +685,7 @@ cp-parse.o : $(srcdir)/cp-parse.c $(CONFIG_H) $(CPLUS_TREE_H) flags.h\n $(srcdir)/cp-parse.c $(srcdir)/cp-parse.h : $(srcdir)/cp-parse.y\n \t@echo expect 30 shift/reduce conflicts and 14 reduce/reduce conflicts\n \tcd $(srcdir); $(BISON) $(BISONFLAGS) -d -o cp-parse.c cp-parse.y\n+\tcd $(srcdir); grep '^#define[ \t]*YYEMPTY' cp-parse.c >>cp-parse.y\n \n cp-spew.o : cp-spew.c $(CONFIG_H) $(CPLUS_TREE_H) \\\n    $(srcdir)/cp-parse.h flags.h\n@@ -795,7 +796,7 @@ dbxout.o : dbxout.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h regs.h \\\n sdbout.o : sdbout.c $(CONFIG_H) $(TREE_H) $(RTL_H) gsyms.h flags.h \\\n    insn-config.h reload.h\n dwarfout.o : dwarfout.c $(CONFIG_H) $(TREE_H) $(RTL_H) dwarf.h flags.h \\\n-   insn-config.h reload.h output.h\n+   insn-config.h reload.h output.h defaults.h\n xcoffout.o : xcoffout.c $(CONFIG_H) $(TREE_H) $(RTL_H) xcoffout.h flags.h\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(RTL_H) flags.h gvarargs.h function.h  \\\n    regs.h insn-config.h insn-codes.h real.h expr.h"}]}