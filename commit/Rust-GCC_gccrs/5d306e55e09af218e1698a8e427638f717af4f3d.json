{"sha": "5d306e55e09af218e1698a8e427638f717af4f3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQzMDZlNTVlMDlhZjIxOGUxNjk4YThlNDI3NjM4ZjcxN2FmNGYzZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2015-11-18T21:33:57Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-11-18T21:33:57Z"}, "message": "nvptx.c (nvptx_process_pars): Fix whitespace.\n\n\t* config/nvptx/nvptx.c (nvptx_process_pars): Fix whitespace.\n\t(nvptx_record_offload_symbol): Remove code compensating for lack\n\tof default dimension handling.\n\t(nvptx_goacc_validate_dims): Remove incorrect ARG_UNUSED markers.\n\nFrom-SVN: r230571", "tree": {"sha": "9f56b287eaf3f01bc4b3643b8dd8cd4de8c6f803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f56b287eaf3f01bc4b3643b8dd8cd4de8c6f803"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d306e55e09af218e1698a8e427638f717af4f3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d306e55e09af218e1698a8e427638f717af4f3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d306e55e09af218e1698a8e427638f717af4f3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d306e55e09af218e1698a8e427638f717af4f3d/comments", "author": null, "committer": null, "parents": [{"sha": "5f29a394cdb78df249577d86e39b8c37aab2875d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f29a394cdb78df249577d86e39b8c37aab2875d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f29a394cdb78df249577d86e39b8c37aab2875d"}], "stats": {"total": 36, "additions": 14, "deletions": 22}, "files": [{"sha": "999a15c35142971fa1c9c640c894176c93612cf1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d306e55e09af218e1698a8e427638f717af4f3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d306e55e09af218e1698a8e427638f717af4f3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d306e55e09af218e1698a8e427638f717af4f3d", "patch": "@@ -1,3 +1,10 @@\n+2015-11-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.c (nvptx_process_pars): Fix whitespace.\n+\t(nvptx_record_offload_symbol): Remove code compensating for lack\n+\tof default dimension handling.\n+\t(nvptx_goacc_validate_dims): Remove incorrect ARG_UNUSED markers.\n+\n 2015-11-18  Aditya Kumar  <aditya.k7@samsung.com>\n \n \t* graphite-isl-ast-to-gimple.c (copy_loop_phi_args): Change the return"}, {"sha": "62c6faa9d0346f948f0ba9a0ddfbd21cd50d4923", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d306e55e09af218e1698a8e427638f717af4f3d/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d306e55e09af218e1698a8e427638f717af4f3d/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=5d306e55e09af218e1698a8e427638f717af4f3d", "patch": "@@ -3657,7 +3657,7 @@ nvptx_process_pars (parallel *par)\n \n   if (par->mask & GOMP_DIM_MASK (GOMP_DIM_MAX))\n     /* No propagation needed for a call.  */;\n- else if (par->mask & GOMP_DIM_MASK (GOMP_DIM_WORKER))\n+  else if (par->mask & GOMP_DIM_MASK (GOMP_DIM_WORKER))\n     {\n       nvptx_wpropagate (false, par->forked_block, par->forked_insn);\n       nvptx_wpropagate (true, par->forked_block, par->fork_insn);\n@@ -3694,7 +3694,7 @@ nvptx_neuter_pars (parallel *par, unsigned modes, unsigned outer)\n       if ((outer | me) & GOMP_DIM_MASK (mode))\n \t{} /* Mode is partitioned: no neutering.  */\n       else if (!(modes & GOMP_DIM_MASK (mode)))\n-\t{} /* Mode is not used: nothing to do.  */  \n+\t{} /* Mode is not used: nothing to do.  */\n       else if (par->inner_mask & GOMP_DIM_MASK (mode)\n \t       || !par->forked_insn)\n \t/* Partitioned in inner parallels, or we're not a partitioned\n@@ -3910,31 +3910,17 @@ nvptx_record_offload_symbol (tree decl)\n     case FUNCTION_DECL:\n       {\n \ttree attr = get_oacc_fn_attrib (decl);\n-\ttree dims = NULL_TREE;\n+\ttree dims = TREE_VALUE (attr);\n \tunsigned ix;\n \n-\tif (attr)\n-\t  dims = TREE_VALUE (attr);\n \tfprintf (asm_out_file, \"//:FUNC_MAP \\\"%s\\\"\",\n \t\t IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n \n-\tfor (ix = 0; ix != GOMP_DIM_MAX; ix++)\n+\tfor (ix = 0; ix != GOMP_DIM_MAX; ix++, dims = TREE_CHAIN (dims))\n \t  {\n-\t    int size = 1;\n+\t    int size = TREE_INT_CST_LOW (TREE_VALUE (dims));\n \n-\t    /* TODO: This check can go away once the dimension default\n-\t       machinery is merged to trunk.  */\n-\t    if (dims)\n-\t      {\n-\t\ttree dim = TREE_VALUE (dims);\n-\n-\t\tif (dim)\n-\t\t  size = TREE_INT_CST_LOW (dim);\n-\n-\t\tgcc_assert (!TREE_PURPOSE (dims));\n-\t\tdims = TREE_CHAIN (dims);\n-\t      }\n-\t    \n+\t    gcc_assert (!TREE_PURPOSE (dims));\n \t    fprintf (asm_out_file, \", %#x\", size);\n \t  }\n \n@@ -4186,8 +4172,7 @@ nvptx_expand_builtin (tree exp, rtx target, rtx ARG_UNUSED (subtarget),\n    routine might spawn a loop.  It is negative for non-routines.  */\n \n static bool\n-nvptx_goacc_validate_dims (tree ARG_UNUSED (decl), int *ARG_UNUSED (dims),\n-\t\t\t   int ARG_UNUSED (fn_level))\n+nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level)\n {\n   bool changed = false;\n "}]}