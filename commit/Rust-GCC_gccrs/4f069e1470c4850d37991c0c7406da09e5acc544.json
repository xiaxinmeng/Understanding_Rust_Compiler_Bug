{"sha": "4f069e1470c4850d37991c0c7406da09e5acc544", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYwNjllMTQ3MGM0ODUwZDM3OTkxYzBjNzQwNmRhMDllNWFjYzU0NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-29T12:43:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-29T12:43:09Z"}, "message": "(RETURN_ADDRESS_OFFSET, RETURN_ADDR_RTX): Define.\n\nFrom-SVN: r10540", "tree": {"sha": "f4c61c31ef760d88f95101e657eba8177451b361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4c61c31ef760d88f95101e657eba8177451b361"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f069e1470c4850d37991c0c7406da09e5acc544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f069e1470c4850d37991c0c7406da09e5acc544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f069e1470c4850d37991c0c7406da09e5acc544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f069e1470c4850d37991c0c7406da09e5acc544/comments", "author": null, "committer": null, "parents": [{"sha": "139eda626f1994d1f1b0bac849db4e0836850990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139eda626f1994d1f1b0bac849db4e0836850990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/139eda626f1994d1f1b0bac849db4e0836850990"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "99386c089039174f0f91ed89cdc8f44de52239c8", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f069e1470c4850d37991c0c7406da09e5acc544/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f069e1470c4850d37991c0c7406da09e5acc544/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=4f069e1470c4850d37991c0c7406da09e5acc544", "patch": "@@ -551,6 +551,20 @@ gen_rtx (PLUS, Pmode, frame, gen_rtx (CONST_INT, VOIDmode, 12))\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 11)),\t\\\n \t\t  plus_constant (FNADDR, 2));\t\t\t\t\\\n }\n+\n+/* Byte offset of return address in a stack frame.  The \"saved PC\" field\n+   is in element [4] when treating the frame as an array of longwords.  */\n+\n+#define RETURN_ADDRESS_OFFSET\t(4 * UNITS_PER_WORD)\t/* 16 */\n+\n+/* A C expression whose value is RTL representing the value of the return\n+   address for the frame COUNT steps up from the current frame.\n+   FRAMEADDR is already the frame pointer of the COUNT frame, so we\n+   can ignore COUNT.  */\n+\n+#define RETURN_ADDR_RTX(COUNT, FRAME)\t\\\n+  gen_rtx (MEM, Pmode, plus_constant (FRAME, RETURN_ADDRESS_OFFSET))\n+\n \f\n /* Addressing modes, and classification of registers for them.  */\n "}]}