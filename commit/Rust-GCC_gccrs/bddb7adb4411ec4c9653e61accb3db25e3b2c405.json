{"sha": "bddb7adb4411ec4c9653e61accb3db25e3b2c405", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRkYjdhZGI0NDExZWM0Yzk2NTNlNjFhY2NiM2RiMjVlM2IyYzQwNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-02-22T10:31:41Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-02-22T10:31:41Z"}, "message": "Add dot-fn to gdbhooks.py\n\n2016-02-22  Richard Biener  <rguenther@suse.de>\n\t    Tom de Vries  <tom@codesourcery.com>\n\n\t* graph.c: Include dumpfile.h.\n\t(print_graph_cfg): Split into three overloads.\n\t* gdbhooks.py (class DotFn): Add and instantiate, adding command dot-fn.\n\nCo-Authored-By: Tom de Vries <tom@codesourcery.com>\n\nFrom-SVN: r233600", "tree": {"sha": "0325e4200547ba999678e700113902517c36175c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0325e4200547ba999678e700113902517c36175c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bddb7adb4411ec4c9653e61accb3db25e3b2c405", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bddb7adb4411ec4c9653e61accb3db25e3b2c405", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bddb7adb4411ec4c9653e61accb3db25e3b2c405", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bddb7adb4411ec4c9653e61accb3db25e3b2c405/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6e5b400c3253134d0c7dd71c7976bdd0be55391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6e5b400c3253134d0c7dd71c7976bdd0be55391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6e5b400c3253134d0c7dd71c7976bdd0be55391"}], "stats": {"total": 109, "additions": 105, "deletions": 4}, "files": [{"sha": "3e4273bb2132cfb7b4880403817b44cd12ed8a82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddb7adb4411ec4c9653e61accb3db25e3b2c405/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddb7adb4411ec4c9653e61accb3db25e3b2c405/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bddb7adb4411ec4c9653e61accb3db25e3b2c405", "patch": "@@ -1,3 +1,10 @@\n+2016-02-22  Richard Biener  <rguenther@suse.de>\n+\t    Tom de Vries  <tom@codesourcery.com>\n+\n+\t* graph.c: Include dumpfile.h.\n+\t(print_graph_cfg): Split into three overloads.\n+\t* gdbhooks.py (class DotFn): Add and instantiate, adding command dot-fn.\n+\n 2016-02-22  Tom de Vries  <tom@codesourcery.com>\n \n \t* gdbhooks.py (class DumpFn): Add and instantiate, adding command"}, {"sha": "12123129a32c0d438239c5029be499f2f54c2dd3", "filename": "gcc/gdbhooks.py", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddb7adb4411ec4c9653e61accb3db25e3b2c405/gcc%2Fgdbhooks.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddb7adb4411ec4c9653e61accb3db25e3b2c405/gcc%2Fgdbhooks.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgdbhooks.py?ref=bddb7adb4411ec4c9653e61accb3db25e3b2c405", "patch": "@@ -680,4 +680,74 @@ def invoke(self, arg, from_tty):\n \n DumpFn()\n \n+class DotFn(gdb.Command):\n+    \"\"\"\n+    A custom command to show a gimple/rtl function control flow graph.\n+    By default, it show the current function, but the function can also be\n+    specified.\n+\n+    Examples of use:\n+      (gdb) dot-fn\n+      (gdb) dot-fn cfun\n+      (gdb) dot-fn cfun 0\n+      (gdb) dot-fn cfun dump_flags\n+    \"\"\"\n+    def __init__(self):\n+        gdb.Command.__init__(self, 'dot-fn', gdb.COMMAND_USER)\n+\n+    def invoke(self, arg, from_tty):\n+        # Parse args, check number of args\n+        args = gdb.string_to_argv(arg)\n+        if len(args) > 2:\n+            print(\"Too many arguments\")\n+            return\n+\n+        # Set func\n+        if len(args) >= 1:\n+            funcname = args[0]\n+            printfuncname = \"function %s\" % funcname\n+        else:\n+            funcname = \"cfun\"\n+            printfuncname = \"current function\"\n+        func = gdb.parse_and_eval(funcname)\n+        if func == 0:\n+            print(\"Could not find %s\" % printfuncname)\n+            return\n+        func = \"(struct function *)%s\" % func\n+\n+        # Set flags\n+        if len(args) >= 2:\n+            flags = gdb.parse_and_eval(args[1])\n+        else:\n+            flags = 0\n+\n+        # Get temp file\n+        f = tempfile.NamedTemporaryFile(delete=False)\n+        filename = f.name\n+\n+        # Close and reopen temp file to get C FILE*\n+        f.close()\n+        fp = gdb.parse_and_eval(\"fopen (\\\"%s\\\", \\\"w\\\")\" % filename)\n+        if fp == 0:\n+            print(\"Cannot open temp file\")\n+            return\n+        fp = \"(FILE *)%u\" % fp\n+\n+        # Write graph to temp file\n+        _ = gdb.parse_and_eval(\"start_graph_dump (%s, \\\"<debug>\\\")\" % fp)\n+        _ = gdb.parse_and_eval(\"print_graph_cfg (%s, %s, %u)\"\n+                               % (fp, func, flags))\n+        _ = gdb.parse_and_eval(\"end_graph_dump (%s)\" % fp)\n+\n+        # Close temp file\n+        ret = gdb.parse_and_eval(\"fclose (%s)\" % fp)\n+        if ret != 0:\n+            print(\"Could not close temp file: %s\" % filename)\n+            return\n+\n+        # Show graph in temp file\n+        os.system(\"( dot -Tx11 \\\"%s\\\"; rm \\\"%s\\\" ) &\" % (filename, filename))\n+\n+DotFn()\n+\n print('Successfully loaded GDB hooks for GCC')"}, {"sha": "dd5bc4e735c99f5635f222ed09a4748ed56a44b2", "filename": "gcc/graph.c", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddb7adb4411ec4c9653e61accb3db25e3b2c405/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddb7adb4411ec4c9653e61accb3db25e3b2c405/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=bddb7adb4411ec4c9653e61accb3db25e3b2c405", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfganal.h\"\n #include \"cfgloop.h\"\n #include \"graph.h\"\n+#include \"dumpfile.h\"\n \n /* DOT files with the .dot extension are recognized as document templates\n    by a well-known piece of word processing software out of Redmond, WA.\n@@ -272,14 +273,13 @@ draw_cfg_edges (pretty_printer *pp, struct function *fun)\n    subgraphs right for GraphViz, which requires nodes to be defined\n    before edges to cluster nodes properly.  */\n \n-void\n-print_graph_cfg (const char *base, struct function *fun)\n+void DEBUG_FUNCTION\n+print_graph_cfg (FILE *fp, struct function *fun)\n {\n-  const char *funcname = function_name (fun);\n-  FILE *fp = open_graph_file (base, \"a\");\n   pretty_printer graph_slim_pp;\n   graph_slim_pp.buffer->stream = fp;\n   pretty_printer *const pp = &graph_slim_pp;\n+  const char *funcname = function_name (fun);\n   pp_printf (pp, \"subgraph \\\"cluster_%s\\\" {\\n\"\n \t\t \"\\tstyle=\\\"dashed\\\";\\n\"\n \t\t \"\\tcolor=\\\"black\\\";\\n\"\n@@ -289,6 +289,30 @@ print_graph_cfg (const char *base, struct function *fun)\n   draw_cfg_edges (pp, fun);\n   pp_printf (pp, \"}\\n\");\n   pp_flush (pp);\n+}\n+\n+/* Overload with additional flag argument.  */\n+\n+void DEBUG_FUNCTION\n+print_graph_cfg (FILE *fp, struct function *fun, int flags)\n+{\n+  int saved_dump_flags = dump_flags;\n+  dump_flags = flags;\n+  print_graph_cfg (fp, fun);\n+  dump_flags = saved_dump_flags;\n+}\n+\n+\n+/* Print a graphical representation of the CFG of function FUN.\n+   First print all basic blocks.  Draw all edges at the end to get\n+   subgraphs right for GraphViz, which requires nodes to be defined\n+   before edges to cluster nodes properly.  */\n+\n+void\n+print_graph_cfg (const char *base, struct function *fun)\n+{\n+  FILE *fp = open_graph_file (base, \"a\");\n+  print_graph_cfg (fp, fun);\n   fclose (fp);\n }\n "}]}