{"sha": "44bd7f65250cd0814b346679ef801ae0722e0483", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRiZDdmNjUyNTBjZDA4MTRiMzQ2Njc5ZWY4MDFhZTA3MjJlMDQ4Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-12-04T09:05:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-12-04T09:05:49Z"}, "message": "ia64.c (ia64_compute_frame_size): Allocate the scratch area if the function allocates dynamic stack space.\n\n\t* config/ia64/ia64.c (ia64_compute_frame_size): Allocate the scratch\n\tarea if the function allocates dynamic stack space.\n\t(ia64_initial_elimination_offset): Adjust offsets to above change.\n\nFrom-SVN: r194121", "tree": {"sha": "817ce919e43053dca36bf49e122166abae711f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/817ce919e43053dca36bf49e122166abae711f60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44bd7f65250cd0814b346679ef801ae0722e0483", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44bd7f65250cd0814b346679ef801ae0722e0483", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44bd7f65250cd0814b346679ef801ae0722e0483", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44bd7f65250cd0814b346679ef801ae0722e0483/comments", "author": null, "committer": null, "parents": [{"sha": "8c4d267c6e834ccc20632d2c9077d7622b8145cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c4d267c6e834ccc20632d2c9077d7622b8145cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c4d267c6e834ccc20632d2c9077d7622b8145cf"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "74cd0bcb8660c8adf6cb8a1938675c78178f14c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44bd7f65250cd0814b346679ef801ae0722e0483/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44bd7f65250cd0814b346679ef801ae0722e0483/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44bd7f65250cd0814b346679ef801ae0722e0483", "patch": "@@ -1,3 +1,9 @@\n+2012-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/ia64/ia64.c (ia64_compute_frame_size): Allocate the scratch\n+\tarea if the function allocates dynamic stack space.\n+\t(ia64_initial_elimination_offset): Adjust offsets to above change.\n+\n 2012-12-03  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* gcse.c (struct reg_use): Remove unused struct."}, {"sha": "3b19b98b5ce249f0d5476d90007f6fc9027458eb", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44bd7f65250cd0814b346679ef801ae0722e0483/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44bd7f65250cd0814b346679ef801ae0722e0483/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=44bd7f65250cd0814b346679ef801ae0722e0483", "patch": "@@ -2885,8 +2885,10 @@ ia64_compute_frame_size (HOST_WIDE_INT size)\n \n   /* We always use the 16-byte scratch area provided by the caller, but\n      if we are a leaf function, there's no one to which we need to provide\n-     a scratch area.  */\n-  if (crtl->is_leaf)\n+     a scratch area.  However, if the function allocates dynamic stack space,\n+     the dynamic offset is computed early and contains STACK_POINTER_OFFSET,\n+     so we need to cope.  */\n+  if (crtl->is_leaf && !cfun->calls_alloca)\n     total_size = MAX (0, total_size - 16);\n \n   current_frame_info.total_size = total_size;\n@@ -2920,18 +2922,15 @@ ia64_initial_elimination_offset (int from, int to)\n       switch (to)\n \t{\n \tcase HARD_FRAME_POINTER_REGNUM:\n-\t  if (crtl->is_leaf)\n-\t    offset = -current_frame_info.total_size;\n-\t  else\n-\t    offset = -(current_frame_info.total_size\n-\t\t       - crtl->outgoing_args_size - 16);\n+\t  offset = -current_frame_info.total_size;\n+\t  if (!crtl->is_leaf || cfun->calls_alloca)\n+\t    offset += 16 + crtl->outgoing_args_size;\n \t  break;\n \n \tcase STACK_POINTER_REGNUM:\n-\t  if (crtl->is_leaf)\n-\t    offset = 0;\n-\t  else\n-\t    offset = 16 + crtl->outgoing_args_size;\n+\t  offset = 0;\n+\t  if (!crtl->is_leaf || cfun->calls_alloca)\n+\t    offset += 16 + crtl->outgoing_args_size;\n \t  break;\n \n \tdefault:"}]}