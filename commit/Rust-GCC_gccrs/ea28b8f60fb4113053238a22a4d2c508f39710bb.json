{"sha": "ea28b8f60fb4113053238a22a4d2c508f39710bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEyOGI4ZjYwZmI0MTEzMDUzMjM4YTIyYTRkMmM1MDhmMzk3MTBiYg==", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2004-11-30T23:59:12Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2004-11-30T23:59:12Z"}, "message": "revert: [multiple changes]\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics.java (drawImage variants):\n\tUpdate image observer.\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java (createImage):\n\tStart image production.\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (setMenuBar): Protect\n\tagainst negative menu bar widths.\n\t(setBounds): Likewise.\n\t(postConfigureEvent): Likewise.\n\t* gnu/java/awt/peer/gtk/GtkImage.java (imageComplete): Don't\n\tremove consumer unless only a single frame has completed.\n\t* gnu/java/awt/peer/gtk/GtkImagePainter.java (GtkImagePainter):\n\tAdd observer parameter.\n\t(setPixels): Update image observer.\n\t(imageComplete): Likewise.\n\t* java/applet/Applet.java (width): New field.\n\t(height): Likewise.\n\t(setStub): Set size if width or height field has been set.\n\t(resize): If stub is null save width and height values.\n\t* java/awt/Component.java (reshape): Protect against null\n\tparent.\n\t* java/awt/image/MemoryImageSource.java\n\t(MemoryImageSource(int,int,ColorModel,byte[],int,int)):\n\tDocument.\n\t(MemoryImageSource(int,int,ColorModel,int[],int,int)):\n\tLikewise.\n\t(MemoryImageSource(int,int,ColorModel,byte[],int,int,Hashtable)):\n\tReference pixel array directly, rather than creating a local\n\tcopy.\n\t(MemoryImageSource(int,int,ColorModel,int[],int,int,Hashtable)):\n\tLikewise.\n\t(newPixels(int,int,int,int)): Fix for loop and array copy\n\tbounds.\n\t(newPixels(int,int,int,int,boolean)): Likewise.\n\t(startProduction): If animated call imageComplete with\n\tSINGLEFRAME.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c: Uncomment\n\tgdk_flush lines.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c\n\t(drawPixels): Return if g is null or g->drawable is not a gdk\n\tdrawable.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DefaultSingleSelectionModel.java,\n\tjavax/swing/JPasswordField.java,\n\tjavax/swing/tree/AbstractLayoutCache.java:\n\tReformatted and javadocs cleaned up.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Component.java:\n\tFixed argument names to match javadocs.\n\t(setFont): Rewritten set property first and then fire event.\n\t(setLocale): Likewise.\n\t* javax/swing/text/JTextComponent.java\n\t(setEditable): Likewise.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Button.java\n\t(AccessibleAWTButton.getAccessibleActionDescription): Explain the\n\tsource of 'click'.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Checkbox.java: Remove stub comments.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Button.java\n\t(AccessibleAWTButton.getAccessibleActionDescription): Return\n\t'click'.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/CardLayout.java:\n\tMade some constants static.\n\t(serialVersionUID): Made private.\n\t(addLayoutComponent): Simplified code.\n\t* java/awt/event/InputEvent.java\n\t(getModifiersEx): Added missing @param tag.\n\t* java/awt/image/RGBImageFilter.java\n\t(filterRGBPixels): Reformatted, removed wrong @param tag.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/FieldView.java,\n\tjavax/swing/text/JTextComponent.java:\n\tRemoved debug code.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/BorderFactory.java\n\t(BorderFactory): Added private constructor.\n\t* javax/swing/SwingUtilities.java\n\t(SwingUtilities): Likewise.\n\t(computeStringWidth): New method.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/color/ICC_Profile.java\n\t(icSigNamedColorTag): Removed.\n\t* java/awt/datatransfer/DataFlavor.java\n\t(isMimeTypeEqual): Made final.\n\t* java/awt/image/AffineTransformOp.java:\n\tReworked javadocs.\n\t(TYPE_BICUBIC): Added @since tag.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Checkbox.java (AccessibleAWTCheckBox): Remove todo\n\tcomments.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Checkbox.java (itemStateChanged): Implement function.\n\t(getAccessibleContext): Add AccessibleAWTCheckBox to item listeners.\n\n2004-11-30  Sven de Marothy  <sven@physto.se>\n\n\t* java/awt/Polygon.java (contains): Reimplemented.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/print/PrinterJob.java: Reformatted.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/image/AffineTransformOp.java,\n\tjava/awt/image/ColorConvertOp.java,\n\tjava/awt/image/LookupOp.java,\n\tjava/awt/image/RescaleOp.java:\n\tAdded final keywords where they belong.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/CardLayout.java,\n\tjava/awt/Component.java,\n\tjava/awt/Font.java,\n\tjava/awt/image/SinglePixelPackedSampleModel.java:\n\tFixed javadocs and argument names all over.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/image/DataBufferShort.java: Fixed file header.\n\t* java/awt/image/DataBufferUShort.java: Likewise.\n\t(DataBufferUShort): Throw NullPointerException if dataArray is null.\n\n2004-11-30  Sven de Marothy  <sven@physto.se>\n\n\t* java/awt/geom/Arc2D.java\n\t(setAngleStart): Corrected (wrong sign on atan2 y parameter).\n\t(setAngles): Likewise.\n\t(containsAngle): Return false on zero extent, don't include\n\tfinal angle.\n\t(contains): Treat OPEN-type arcs like CHORD ones, not as PIE\n\tones.\n\n2004-11-30  Sven de Marothy  <sven@physto.se>\n\n\t* java/awt/geom/AffineTransform.java,\n\t(inverseTransform): Fixed bug and simplified code.\n\t(createTransformedShape): Return null on null parameter.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/color/ICC_ColorSpace.java,\n\tjava/awt/color/ICC_Profile.java,\n\tjava/awt/color/ICC_ProfileGray.java,\n\tjava/awt/color/ICC_ProfileRGB.java:\n\tRe-indent copyright header to be standardish.\n\t* java/awt/datatransfer/StringSelection.java:\n\tReformatted.\n\t* java/awt/geom/Area.java\n\t(EPSILON): Made static.\n\t(RS_EPSILON): Likewise.\n\t(PE_EPSILON): Likewide.\n\n2004-11-30  Sven de Marothy  <sven@physto.se>\n\n\t* javax/swing/SwingUtilities.java:\n\t(computeDifference): Implemented\n\t(computeIntersection): Likewise\n\t(computeUnion): Likewise\n\t(isRectangleContainingRectangle): Likewise\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/BasicStroke.java,\n\tjava/awt/Button.java,\n\tjava/awt/Canvas.java,\n\tjava/awt/CheckboxMenuItem.java,\n\tjava/awt/Container.java,\n\tjava/awt/EventQueue.java,\n\tjava/awt/FileDialog.java,\n\tjava/awt/FlowLayout.java,\n\tjava/awt/FontMetrics.java,\n\tjava/awt/Graphics.java,\n\tjava/awt/GridLayout.java,\n\tjava/awt/KeyboardFocusManager.java,\n\tjava/awt/Label.java,\n\tjava/awt/LayoutManager2.java,\n\tjava/awt/List.java,\n\tjava/awt/MenuBar.java,\n\tjava/awt/Scrollbar.java,\n\tjava/awt/Toolkit.java,\n\tjava/awt/Window.java,\n\tjava/awt/datatransfer/DataFlavor.java,\n\tjava/awt/datatransfer/FlavorTable.java,\n\tjava/awt/event/ActionListener.java,\n\tjava/awt/event/HierarchyBoundsAdapter.java,\n\tjava/awt/geom/Arc2D.java,\n\tjava/awt/geom/Rectangle2D.java,\n\tjava/awt/geom/RectangularShape.java,\n\tjava/awt/im/spi/InputMethod.java,\n\tjava/awt/image/ByteLookupTable.java,\n\tjava/awt/image/ColorModel.java,\n\tjava/awt/image/DirectColorModel.java,\n\tjava/awt/image/ShortLookupTable.java,\n\tjava/awt/print/Book.java:\n\tFixed javadocs and method argument names all over.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GdkFontPeer.java\n\t(buildString): Optimise String building.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/TextArea.java (AccessibleAWTTextArea,\n\tgetAccessibleContext): Implement.\n\t* java/awt/TextField.java (AccessibleAWTTextField,\n\tgetAccessibleContext): Implement.\n\n2004-11-30  Tom Tromey  <tromey@redhat.com>\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo):\n\tFixed typo.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Menu.java (AccessibleAWTMenu, getAccessibleContext):\n\tImplement.\n\t* java/awt/PopupMenu.java (AccessibleAWTMenu, getAccessibleContext):\n\tImplement.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/print/PrinterJob.java (lookupPrintServices,\n\tgetPrintService, setPrintService): Implement.\n\t(lookupStreamPrintServices): Add commented out implementation.\n\t(printer): New field.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* javax/swing/ToolTipManager.java (mouseMoved): Set currentComponent\n\twhen not yet set.\n\n2004-11-30  Sven de Marothy  <sven@physto.se>\n\n\t* java/awt/geom/GeneralPath.java (evaluateCrossings):\n\tFixed epsilon value, should always be nonzero.\n\n2004-11-30  Paul Jenner  <psj.home@ntlworld.com>\n\n\t* java/awt/image/Raster.java\n\t(createPackedRaster): Implemented.\n\n2004-11-30  Graydon Hoare  <graydon@redhat.com>\n\n\t* javax/swing/plaf/basic/BasicTextUI.java:\n\tListen to focus events, indicate focus via caret.\n\t* javax/swing/text/GapContent.java (getString): Return substring.\n\t* javax/swing/text/PlainDocument.java (reindex): New method.\n\t(createDefaultRoot): Call it.\n\t(insertUpdate): Likewise.\n\t(removeUpdate): Likewise.\n\t* javax/swing/text/Utilities.java (drawTabbedText): Always advance\n\ton tab and newline, even if no painting happens.\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* Makefile.am: List peer JNI header: Java source file\n\tdependencies explicitly.  Likewise for JNI .lo: JNI header\n\tdependencies.\n\t* Makefile.in: Regenerate.\n\n2004-11-30  Graydon Hoare  <graydon@redhat.com>\n\n\t* Makefile.am: Add entry for BasicTextPaneUI.java\n\t* Makefile.in: Regenerate.\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n\t(GdkGraphics2D): Set clip after transform.\n\t(drawImage): Protect against null image.\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n\t(setIconImage): Protect against non-GtkImage args.\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java\n\t(checkImage): Protect against non-GtkImage args.\n\t* java/awt/print/PrinterJob.java:\n\t(print): Add variant taking PrintRequestAttributeSet.\n\t(printDialog): Likewise.\n\t* javax/swing/JComponent.java:\n\t(transferHandler): New field.\n\t(getComponentGraphics): Build new Graphics for each sub-paint.\n\t(getTransferHandler): New method.\n\t(setTransferHandler): New method.\n\t* javax/swing/JDesktopPane.java\n\t(setDragMode): Force LIVE_DRAG_MODE.\n\t* javax/swing/JMenuItem.java\n\t(menuSelectionChanged): Protect against null parent.\n\t* javax/swing/JTable.java (setDefaultRenderer): New method.\n\t* javax/swing/JTree.java: Get basic ctors and UI working.\n\t* javax/swing/JViewport.java (JViewport): Set scroll mode.\n\t* javax/swing/RepaintManager.java\n\t(addDirtyRegion): Skip empty regions.\n\t* javax/swing/ScrollPaneLayout.java (minimumLayoutSize): Do not\n\tbound scrollpane minimum by central view minimum.\n\t* javax/swing/ToolTipManager.java\n\t(showTip): Guard against null component.\n\t* javax/swing/TransferHandler.java: Stub out.\n\t* javax/swing/plaf/basic/BasicLookAndFeel.java:\n\tAdd entry for TextPaneUI, change Tree icons to pngs.\n\t* javax/swing/plaf/basic/BasicMenuItemUI.java:\n\t(installDefaults): Set text position and alignment.\n\t(paintMenuItem): Layout icon with normal compound function.\n\t* javax/swing/plaf/basic/BasicTableHeaderUI.java:\n\t(getMaximumSize): Delete.\n\t(getMinimumSize): Delete.\n\t(getPreferredSize): Use column model's total width.\n\t* javax/swing/plaf/basic/BasicTextPaneUI.java: New file.\n\t* javax/swing/plaf/basic/BasicTextUI.java\n\t(modelChanged): Make resilient against nulls.\n\t* javax/swing/plaf/basic/BasicTreeUI.java:\n\tAdd some simplistic config / painting functions.\n\t* javax/swing/plaf/basic/BasicViewportUI.java\n\t(paintSimple): Add new non-backingstore paint mode.\n\t(paintBackingStore): Split out backing store code.\n\t(paint): Switch on painting mode.\n\t* javax/swing/text/SimpleAttributeSet.java\n\t(SimpleAttributeSet): Resist nulls.\n\t* javax/swing/tree/DefaultTreeCellRenderer.java: Implement.\n\t* javax/swing/tree/DefaultTreeModel.java: Partially implement.\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c (setFont):\n\tSet pango context's description and language.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* java/awt/image/LookupOp.java: Comments and indentation fixes.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Checkbox.java (AccessibleAWTCheckBox): Implement.\n\t(getAccessibleContext): Implement.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/TextComponent.java (AccessibleAWTTextComponent):\n\tImplement.\n\t(getIndexAtPoint, getCharacterBounds): New methods.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Button.java (AccessibleAWTButton): Implement.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n\t(filenameFilterCallback): Made static.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n\t(cairoShowGlyphs) Removed.\n\n2004-11-30  Sven de Marothy <sven@physto.se>\n\n\t* gnu/java/awt/color/RgbProfileConverter.java (RgbProfileConverter):\n\tDon't invert matrix when reverse CLUT is available.\n\t* gnu/java/awt/color/LinearRGBConverter.java: Documentation update.\n\t* java/awt/color/ICC_ColorSpace.java: Likewise.\n\t* java/awt/color/ICC_Profile.java: Likewise.\n\t* java/awt/color/ICC_ProfileGray.java: Likewise.\n\t* java/awt/color/ICC_ProfileRGB.java: Likewise.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/MenuItem.java (AccessibleAWTMenuItem): Implement.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Choice.java (AccessibleAWTChoice): Implement.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/BandedSampleModel.java (scanlineStride): Remove\n\tfield hiding ComponentSampleModel.scanlineStride.\n\n2004-11-30  Noa Resare  <noa@resare.com>\n\n\t* java/awt/geom/GeneralPath.java (currentSegment):\n\tFix typo in transform.transform() invocation.\n\n2004-11-30  Sven de Marothy <sven@physto.se>\n\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n\t(createImage): Created bitmap should be filled with bg color\n\n2004-11-30  Noa Resare  <noa@resare.com>\n\n\t* java/awt/Choice.java (add):\n\tImplement correct selection behavior when peer == null.\n\t(insert): Likewise.\n\t(remove): Likewise.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* gnu/java/awt/peer/gtk/GtkChoicePeer.java (GtkChoicePeer):\n\tCall select() when Choice has a selected item.\n\n2004-11-30  Michael Koch  <address@bogus.example.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c:\n\tFixed method names to start at begin of line. This is desired by GNU\n\tcoding style guide.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n\t(gtkWidgetSetVisible): Unused. Removed.\n\t(connectJObject): Likewise.\n\t* gnu/java/awt/peer/gtk/GtkScrollPanePeer.java\n\t(gtkScrolledWindowSetScrollPosition): Commented out.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c\n\t(Java_gnu_java_awt_peer_gtk_GdkTextLayout_setText): Installed and\n\trenamed from Java_gnu_java_awt_peer_gtk_GdkGlyphVector_setText.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c\n\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_setText): Removed.\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n\t(init_dpi_conversion_factor): Correct prototype.\n\n2004-11-30  Sven de Marothy  <sven@physto.se>\n\n\t* java/awt/image/ConvolveOp.java: Added missing\n\tcopyright notice.\n\n2004-11-30  Robert Schuster  <theBohemian@gmx.net>\n\n\tFixes bug #10908\n\t* gnu/java/beans/IntrospectionIncubator.java:\n\t(addMethod): static methods are discarded now, too.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* Makefile.am (awt_java_source_files): Add new gnu/java/awt/color\n\tjava source files.\n\t* Makefile.in: Regenerated.\n\n2004-11-30  Sven de Marothy  <sven@physto.se>\n\n\t* gnu/java/awt/color/CieXyzConverter.java,\n\tgnu/java/awt/color/GrayScaleConverter.java,\n\tgnu/java/awt/color/SrgbConverter.java,\n\tgnu/java/awt/color/ClutProfileConverter.java,\n\tgnu/java/awt/color/LinearRGBConverter.java,\n\tgnu/java/awt/color/TagEntry.java,\n\tgnu/java/awt/color/ColorLookUpTable.java,\n\tgnu/java/awt/color/ProfileHeader.java,\n\tgnu/java/awt/color/ToneReproductionCurve.java,\n\tgnu/java/awt/color/ColorSpaceConverter.java,\n\tgnu/java/awt/color/PyccConverter.java,\n\tgnu/java/awt/color/GrayProfileConverter.java,\n\tgnu/java/awt/color/RgbProfileConverter.java:\n\tNew files.\n\t* java/awt/color/ICC_ColorSpace.java,\n\tjava/awt/color/ICC_Profile.java,\n\tjava/awt/color/ICC_ProfileGray.java,\n\tjava/awt/color/ICC_ProfileRGB.java:\n\tImplemented (sans PhotoYCC color space).\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/AffineTransformOp.java (filter):  Implement\n\tbilinear interpolation for Rasters.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/IndexColorModel.java (IndexColorModel): Actually\n\tuse the provided colormap.  Throw documented exceptions.  Document\n\texceptions.\n\n2004-11-30  Paul Jenner  <psj.home@ntlworld.com>\n\n\t* java/awt/image/IndexColorModel.java (IndexColorModel): Fix\n\tconstructor.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/AffineTransformOp.java: Add TYPE_BICUBIC.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/AffineTransformOp.java (filter): Implement Raster\n\tfiltering.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ComponentSampleModel.java (getDataElements,\n\tsetDataElements): Implement SHORT, FLOAT, and INT transfer types.\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* java/awt/Font.java (name): New field.\n\t(size): Likewise.\n\t(style): Likewise.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/Raster.java (createBandedRaster): Implement.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ConvolveOp.java: New class.\n\t* Makefile.am: Add ConvolveOp.\n\t* Makefile.in: Regenerate.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/RescaleOp.java (BandCombineOp, ColorConvertOp,\n\tLookupOp, RescaleOp): Fix loop bounds.\n\n2004-11-30  jlquinn  <jlquinn@optonline.net>\n\n\t* Makefile.am: Fix typo in BandCombineOp.\n\t* Makefile.in: Regenerate.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/BandCombineOp.java: New class.\n\t* Makefile.am: Add BandCombineOp.\n\t* Makefile.in: Regenerate.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/LookupOp.java: New class.\n\t* Makefile.am: Add LookupOp.\n\t* Makefile.in: Regenerate.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/SampleModel.java (createSubsetSampleModel): Add\n\tjavadocs.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ColorModel.java (cloneColorModel): Fix line\n\twrap.  Use Boolean.valueOf.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n\t(releasePeerGraphicsResource): Fixed typo in method name.\n\t* gnu/java/awt/peer/gtk/GdkFontPeer.java\n\t(finalize): Fixed typo in releasePeerGraphicsResource.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/font/TextAttribute.java\n\t(RUN_DIRECTION_LTR): Initialie with static value instead of\n\tcalculating it.\n\t(RUN_DIRECTION_RTL): Likewise.\n\t(STRIKETHROUGH_ON): Likewise.\n\t(SWAP_COLORS_ON): Likewise.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ColorConvertOp.java: New class.\n\t* java/awt/image/ColorModel.java (cloneColorModel): New method.\n\t* Makefile.am: Add ColorConvertOp.\n\t* Makefile.in: Regenerate.\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* java/awt/DefaultKeyboardFocusManager.java (dispatchEvent):\n\tTrack Window focus owner on FOCUS_GAINED events.\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.c\n\t(nativeSetIconImage): Rename to nativeSetIconImageFromDecoder.\n\n2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c\n\t(Java_gnu_java_awt_peer_gtk_GThreadNativeMethodRunner_nativeRun):\n\tFix pointer warning.\n\n2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n\t(Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_nativeSetFilenameFilter):\n\tFix pointer warning.\n\n\t* jni/gtk-peer/gtkpeer.h: Introduce widget_union to fix type punned\n\twarnings.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n\t(Java_gnu_java_awt_peer_gtk_GdkGraphics_clearRect): Use widget_union\n\tto fix type punned pointer warning.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c (pre_event_handler):\n\tLikewise.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n\t(window_get_new_state): Introduce unions to fix warnings as above.\n\t(window_property_changed_cb): Likewise.\n\t(window_active_state_change_cb): Mark unused variables unused.\n\t(window_focus_state_change_cb): Likewise.\n\t(window_focus_in_cb): Likewise.\n\t(window_focus_out_cb): Likewise.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c\n\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_setFont): Convert\n\tPangoFontMap correctly with PANGO_FT2FONT_MAP macro.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JMenuBar.java\n\t(updateUI): Simplified.\n\t* javax/swing/tree/DefaultTreeSelectionModel.java:\n\tReorganized import statements.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/font/TextAttribute.java,\n\tjavax/swing/JComponent.java,\n\tjavax/swing/JInternalFrame.java,\n\tjavax/swing/table/TableColumn.java,\n\tjavax/swing/text/StyleConstants.java:\n\tReplaced \"new Boolean(boolean)\" with \"Boolean.valueOf(boolean)\".\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/tree/DefaultTreeCellEditor.java,\n\tjavax/swing/tree/DefaultTreeModel.java,\n\tjavax/swing/tree/DefaultTreeSelectionModel.java:\n\tJalopied.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/tree/DefaultTreeCellEditor.java\n\t(EditorContainer.EditorContainer): Fixed arguments.\n\t(EditorContainer.EditorContainer): New method.\n\t(DefaultTextField.DefaultTextField): Fixed arguments, implemented.\n\t(DefaultTextField.getBorder): Implemented.\n\t(listenerList): New field.\n\t(addCellEditorListener): Implemented.\n\t(removeCellEditorListener): Implemented.\n\t(getCellEditorListeners): New method.\n\t* javax/swing/tree/DefaultTreeModel.java\n\t(addTreeModelListener): Fixed javadoc.\n\t(removeTreeModelListener): Likewise.\n\t(getTreeModelListeners): New method.\n\t(fireTreeNodesChanged): Implemented.\n\t(fireTreeNodesInserted): Likewise.\n\t(fireTreeNodesRemoved): Likewise.\n\t(fireTreeStructureChanged): Likewise.\n\t(getListeners): Fixed javadoc.\n\t* javax/swing/tree/DefaultTreeSelectionModel.java\n\t(addTreeSelectionListener): Implemented.\n\t(removeTreeSelectionListener): Likewise.\n\t(fireValueChanged): Likewise.\n\t(getListeners): Likewise.\n\t(addPropertyChangeListener): Likewise.\n\t(removePropertyChangeListener): Likewise.\n\t(getTreeSelectionListeners): New method.\n\t(getPropertyChangeListeners): Likewise.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicScrollBarUI.java\n\t(maximumThumbSize): Removed static keyword.\n\t(minimumThumbSize): Likewise.\n\t* javax/swing/plaf/basic/BasicInternalFrameTitlePane.java\n\t(CloseAction): Made public.\n\t(IconifyAction): Likewise.\n\t(MaximizeAction): Likewise.\n\t(MoveAction): Likewise.\n\t(RestoreAction): Likewise.\n\t(SizeAction): Likewise.\n\t(SystemMenuBar): Likewise.\n\t* javax/swing/plaf/basic/BasicSliderUI.java\n\t(TrackListener): Likewise.\n\t* javax/swing/plaf/basic/BasicSplitPaneUI.java\n\t(KeyboardDownRightHandler): Likewise.\n\t(KeyboardEndHandler): Likewise.\n\t(KeyboardHomeHandler): Likewise.\n\t(KeyboardResizeToggleHandler): Likewise.\n\t(KeyboardUpLeftHandler): Likewise.\n\t(PropertyHandler): Likewise.\n\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n\t(PropertyChangeHandler): Likewise.\n\t(TabSelectionHandler): Likewise.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/JTextComponent.java\n\t(getKeymap): Made public.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JEditorPane.java\n\t(getStream): Throws IOException.\n\t(read): Likewise.\n\t* javax/swing/JRootPane.java\n\t(createContentPane): Fixed return type.\n\t* javax/swing/JSpinner.java\n\t(commitEdit): Throws ParseException.\n\t* javax/swing/plaf/metal/MetalLookAndFeel.java\n\t(serialVersionUID): New field.\n\t* javax/swing/table/TableColumn.java\n\t(resizedPostingDisableCount): Added @deprecated tag.\n\t(disableResizedPosting): Likewise.\n\t(enableResizedPosting): Likewise.\n\t* javax/swing/text/Document.java\n\t(TitleProperty): Fixed value.\n\t* javax/swing/tree/TreeCellEditor.java\n\t(TreeCellEditor): Extends CellEditor.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JWindow.java\n\tjavax/swing/SpinnerModel.java\n\tjavax/swing/Timer.java\n\tjavax/swing/event/MenuKeyEvent.java\n\tjavax/swing/plaf/basic/BasicButtonUI.java\n\tjavax/swing/plaf/basic/BasicIconFactory.java\n\tjavax/swing/plaf/basic/BasicTabbedPaneUI.java\n\tjavax/swing/text/AttributeSet.java\n\tjavax/swing/text/Highlighter.java\n\tjavax/swing/text/StyleConstants.java\n\tjavax/swing/tree/TreeCellEditor.java:\n\tRemoved redundant and reordered modifiers.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicToolTipUI.java:\n\tReformatted copyright header.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractAction.java,\n\tjavax/swing/AbstractButton.java,\n\tjavax/swing/AbstractCellEditor.java,\n\tjavax/swing/AbstractListModel.java,\n\tjavax/swing/AbstractSpinnerModel.java,\n\tjavax/swing/ActionMap.java,\n\tjavax/swing/BorderFactory.java,\n\tjavax/swing/Box.java,\n\tjavax/swing/ButtonModel.java,\n\tjavax/swing/CellEditor.java,\n\tjavax/swing/CellRendererPane.java,\n\tjavax/swing/DefaultBoundedRangeModel.java,\n\tjavax/swing/DefaultButtonModel.java,\n\tjavax/swing/DefaultCellEditor.java,\n\tjavax/swing/DefaultDesktopManager.java,\n\tjavax/swing/DefaultListCellRenderer.java,\n\tjavax/swing/DefaultListSelectionModel.java,\n\tjavax/swing/DefaultSingleSelectionModel.java,\n\tjavax/swing/GrayFilter.java,\n\tjavax/swing/InputMap.java,\n\tjavax/swing/JApplet.java,\n\tjavax/swing/JCheckBoxMenuItem.java,\n\tjavax/swing/JColorChooser.java,\n\tjavax/swing/JComboBox.java,\n\tjavax/swing/JComponent.java,\n\tjavax/swing/JDesktopPane.java,\n\tjavax/swing/JDialog.java,\n\tjavax/swing/JEditorPane.java,\n\tjavax/swing/JFileChooser.java,\n\tjavax/swing/JFormattedTextField.java,\n\tjavax/swing/JFrame.java,\n\tjavax/swing/JInternalFrame.java,\n\tjavax/swing/JLabel.java,\n\tjavax/swing/JLayeredPane.java,\n\tjavax/swing/JList.java,\n\tjavax/swing/JMenu.java,\n\tjavax/swing/JMenuBar.java,\n\tjavax/swing/JMenuItem.java,\n\tjavax/swing/JOptionPane.java,\n\tjavax/swing/JPanel.java,\n\tjavax/swing/JPasswordField.java,\n\tjavax/swing/JPopupMenu.java,\n\tjavax/swing/JRadioButtonMenuItem.java,\n\tjavax/swing/JRootPane.java,\n\tjavax/swing/JSpinner.java,\n\tjavax/swing/JSplitPane.java,\n\tjavax/swing/JTabbedPane.java,\n\tjavax/swing/JTable.java,\n\tjavax/swing/JTextArea.java,\n\tjavax/swing/JTextPane.java,\n\tjavax/swing/JToggleButton.java,\n\tjavax/swing/JToolBar.java,\n\tjavax/swing/JToolTip.java,\n\tjavax/swing/JTree.java,\n\tjavax/swing/JViewport.java,\n\tjavax/swing/ListModel.java,\n\tjavax/swing/LookAndFeel.java,\n\tjavax/swing/MenuSelectionManager.java,\n\tjavax/swing/ProgressMonitorInputStream.java,\n\tjavax/swing/RepaintManager.java,\n\tjavax/swing/RootPaneContainer.java,\n\tjavax/swing/ScrollPaneLayout.java,\n\tjavax/swing/SpringLayout.java,\n\tjavax/swing/SwingUtilities.java,\n\tjavax/swing/Timer.java,\n\tjavax/swing/ToolTipManager.java,\n\tjavax/swing/UIDefaults.java,\n\tjavax/swing/UIManager.java,\n\tjavax/swing/border/MatteBorder.java,\n\tjavax/swing/colorchooser/AbstractColorChooserPanel.java,\n\tjavax/swing/colorchooser/ColorSelectionModel.java,\n\tjavax/swing/colorchooser/DefaultColorSelectionModel.java,\n\tjavax/swing/colorchooser/DefaultHSBChooserPanel.java,\n\tjavax/swing/colorchooser/DefaultPreviewPanel.java,\n\tjavax/swing/colorchooser/DefaultRGBChooserPanel.java,\n\tjavax/swing/colorchooser/DefaultSwatchChooserPanel.java,\n\tjavax/swing/event/AncestorEvent.java,\n\tjavax/swing/event/HyperlinkEvent.java,\n\tjavax/swing/event/InternalFrameEvent.java,\n\tjavax/swing/event/MenuDragMouseEvent.java,\n\tjavax/swing/event/TableColumnModelEvent.java,\n\tjavax/swing/event/TableModelEvent.java,\n\tjavax/swing/event/TreeExpansionEvent.java,\n\tjavax/swing/event/TreeModelEvent.java,\n\tjavax/swing/event/TreeSelectionEvent.java,\n\tjavax/swing/event/TreeWillExpandListener.java,\n\tjavax/swing/event/UndoableEditEvent.java,\n\tjavax/swing/filechooser/FileView.java,\n\tjavax/swing/plaf/BorderUIResource.java,\n\tjavax/swing/plaf/ComponentUI.java,\n\tjavax/swing/plaf/FileChooserUI.java,\n\tjavax/swing/plaf/IconUIResource.java,\n\tjavax/swing/plaf/ListUI.java,\n\tjavax/swing/plaf/PopupMenuUI.java,\n\tjavax/swing/plaf/SplitPaneUI.java,\n\tjavax/swing/plaf/TabbedPaneUI.java,\n\tjavax/swing/plaf/TextUI.java,\n\tjavax/swing/plaf/TreeUI.java,\n\tjavax/swing/plaf/basic/BasicArrowButton.java,\n\tjavax/swing/plaf/basic/BasicBorders.java,\n\tjavax/swing/plaf/basic/BasicButtonUI.java,\n\tjavax/swing/plaf/basic/BasicCheckBoxMenuItemUI.java,\n\tjavax/swing/plaf/basic/BasicColorChooserUI.java,\n\tjavax/swing/plaf/basic/BasicComboBoxEditor.java,\n\tjavax/swing/plaf/basic/BasicComboBoxRenderer.java,\n\tjavax/swing/plaf/basic/BasicComboBoxUI.java,\n\tjavax/swing/plaf/basic/BasicComboPopup.java,\n\tjavax/swing/plaf/basic/BasicDesktopIconUI.java,\n\tjavax/swing/plaf/basic/BasicDesktopPaneUI.java,\n\tjavax/swing/plaf/basic/BasicIconFactory.java,\n\tjavax/swing/plaf/basic/BasicInternalFrameTitlePane.java,\n\tjavax/swing/plaf/basic/BasicInternalFrameUI.java,\n\tjavax/swing/plaf/basic/BasicListUI.java,\n\tjavax/swing/plaf/basic/BasicLookAndFeel.java,\n\tjavax/swing/plaf/basic/BasicMenuBarUI.java,\n\tjavax/swing/plaf/basic/BasicMenuItemUI.java,\n\tjavax/swing/plaf/basic/BasicMenuUI.java,\n\tjavax/swing/plaf/basic/BasicOptionPaneUI.java,\n\tjavax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java,\n\tjavax/swing/plaf/basic/BasicPopupMenuUI.java,\n\tjavax/swing/plaf/basic/BasicProgressBarUI.java,\n\tjavax/swing/plaf/basic/BasicRadioButtonMenuItemUI.java,\n\tjavax/swing/plaf/basic/BasicRootPaneUI.java,\n\tjavax/swing/plaf/basic/BasicScrollBarUI.java,\n\tjavax/swing/plaf/basic/BasicSeparatorUI.java,\n\tjavax/swing/plaf/basic/BasicSliderUI.java,\n\tjavax/swing/plaf/basic/BasicSpinnerUI.java,\n\tjavax/swing/plaf/basic/BasicSplitPaneDivider.java,\n\tjavax/swing/plaf/basic/BasicSplitPaneUI.java,\n\tjavax/swing/plaf/basic/BasicTabbedPaneUI.java,\n\tjavax/swing/plaf/basic/BasicTableHeaderUI.java,\n\tjavax/swing/plaf/basic/BasicTableUI.java,\n\tjavax/swing/plaf/basic/BasicTextAreaUI.java,\n\tjavax/swing/plaf/basic/BasicTextFieldUI.java,\n\tjavax/swing/plaf/basic/BasicTextUI.java,\n\tjavax/swing/plaf/basic/BasicToolBarSeparatorUI.java,\n\tjavax/swing/plaf/basic/BasicToolBarUI.java,\n\tjavax/swing/plaf/basic/BasicToolTipUI.java,\n\tjavax/swing/plaf/basic/BasicTreeUI.java,\n\tjavax/swing/plaf/basic/BasicViewportUI.java,\n\tjavax/swing/plaf/basic/ComboPopup.java,\n\tjavax/swing/table/AbstractTableModel.java,\n\tjavax/swing/table/DefaultTableCellRenderer.java,\n\tjavax/swing/table/DefaultTableColumnModel.java,\n\tjavax/swing/table/DefaultTableModel.java,\n\tjavax/swing/table/JTableHeader.java,\n\tjavax/swing/table/TableCellEditor.java,\n\tjavax/swing/table/TableCellRenderer.java,\n\tjavax/swing/table/TableColumn.java,\n\tjavax/swing/table/TableColumnModel.java,\n\tjavax/swing/text/AbstractDocument.java,\n\tjavax/swing/text/Caret.java,\n\tjavax/swing/text/DefaultCaret.java,\n\tjavax/swing/text/DefaultEditorKit.java,\n\tjavax/swing/text/DefaultHighlighter.java,\n\tjavax/swing/text/EditorKit.java,\n\tjavax/swing/text/JTextComponent.java,\n\tjavax/swing/text/LayeredHighlighter.java,\n\tjavax/swing/text/PasswordView.java,\n\tjavax/swing/text/SimpleAttributeSet.java,\n\tjavax/swing/text/StyleConstants.java,\n\tjavax/swing/text/StyleContext.java,\n\tjavax/swing/text/StyledEditorKit.java,\n\tjavax/swing/text/TextAction.java,\n\tjavax/swing/text/View.java,\n\tjavax/swing/tree/AbstractLayoutCache.java,\n\tjavax/swing/tree/DefaultTreeCellRenderer.java,\n\tjavax/swing/tree/DefaultTreeModel.java,\n\tjavax/swing/tree/DefaultTreeSelectionModel.java,\n\tjavax/swing/tree/FixedHeightLayoutCache.java,\n\tjavax/swing/tree/TreeCellRenderer.java,\n\tjavax/swing/tree/TreeSelectionModel.java,\n\tjavax/swing/tree/VariableHeightLayoutCache.java,\n\tjavax/swing/undo/AbstractUndoableEdit.java,\n\tjavax/swing/undo/UndoableEditSupport.java:\n\tImports cleaned up.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Container.java,\n\tjava/awt/Font.java,\n\tjava/awt/font/TextLayout.java:\n\tImports cleaned up.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractButton.java\n\t(getLabel): Added @deprecated tag.\n\t(setLabel): Likewise.\n\t* javax/swing/FocusManager.java\n\t(disableSwingFocusManager): Likewise.\n\t(isFocusManagerEnabled): Likewise.\n\t* javax/swing/JComponent.java\n\t(isManagingFocus): Added version to @deprecated tag.\n\t(getNextFocusableComponent): Moved @deprecated tag to bottom of\n\tjavadoc.\n\t(getConditionForKeyStroke): Likewise.\n\t(getActionForKeyStroke): Likewise.\n\t* javax/swing/JDesktopPane.java\n\t(LIVE_DRAG_MODE): Added @specnote tag.\n\t(OUTLINE_DRAG_MODE): Likewise.\n\t* javax/swing/JInternalFrame.java\n\t(MENU_BAR_PROPERTY): Fixed value.\n\t(getMenuBar): Added @deprecated tag.\n\t(setMenuBar): Likewise.\n\t* javax/swing/JViewport.java\n\t(isBackingStoreEnabled): Likewise.\n\t(setBackingStoreEnabled): Likewise.\n\t* javax/swing/plaf/basic/BasicDesktopPaneUI.java\n\t(closeKey): Likewise.\n\t(maximizeKey): Likewise.\n\t(minimizeKey): Likewise.\n\t(navigateKey): Likewise.\n\t(navigateKey2): Likewise.\n\t* javax/swing/plaf/basic/BasicInternalFrameUI.java\n\t(openMenuKey): Likewise.\n\t* javax/swing/plaf/basic/BasicSplitPaneUI.java\n\t(keyboardDownRightListener): Likewise.\n\t(keyboardEndListener): Likewise.\n\t(keyboardHomeListener): Likewise.\n\t(keyboardResizeToggleListener): Likewise.\n\t(keyboardUpLeftListener): Likewise.\n\t(dividerResizeToggleKey): Likewise.\n\t(downKey): Likewise.\n\t(endKey): Likewise.\n\t(homeKey): Likewise.\n\t(leftKey): Likewise.\n\t(rightKey): Likewise.\n\t(upKey): Likewise.\n\t(createKeyboardUpLeftListener): Likewise.\n\t(createKeyboardDownRightListener): Likewise.\n\t(createKeyboardHomeListener): Likewise.\n\t(createKeyboardEndListener): Likewise.\n\t(createKeyboardResizeToggleListener): Likewise.\n\t(getDividerBorderSize): Likewise.\n\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n\t(downKey): Likewise.\n\t(leftKey): Likewise.\n\t(rightKey): Likewise.\n\t(upKey): Likewise.\n\n2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c\n\t(Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_create): Use the\n\tGTK_TEXT_VIEW macro.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n\t(connect_awt_hook_cb): Mark unused variable unused.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c (selection_get):\n\tDo the cast right.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n\t(Java_gnu_java_awt_peer_gtk_GtkChoicePeer_create): According to\n\tthe gtk API gtk_combo_box_new_text actually returns a GtkWidget.\n\tRemove unused var menu.\n\t(selection_changed): Remove unused value.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n\t(Java_gnu_java_awt_peer_gtk_GtkButtonPeer_setNativeBounds): Fix pointer\n\twarning with using an intermediate variable.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c\n\t(area_updated): Fix unused var warning for BE archs.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n\t(Java_gnu_java_awt_peer_gtk_GdkGraphics_connectSignals): Remove unused\n\tvar.\n\t(realize_cb): Mark unused variable unused.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n\t(seek_glyphstring_idx): Fix a C90 warning.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c\n\t(Java_gnu_java_awt_peer_gtk_GThreadNativeMethodRunner_nativeRun):\n\tMark unused arguments unused.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_initState),\n\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_setGlyphCodes),\n\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_glyphCharIndex),\n\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_glyphIsHorizontal):\n\tLikewise.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c\n\t(Java_gnu_java_awt_peer_gtk_GdkFontMetrics_getPeerFontMetrics),\n\t(Java_gnu_java_awt_peer_gtk_GdkFontMetrics_getPeerTextMetrics):\n\tLikewise.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n\t(Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_nativeSetFilenameFilter):\n\tLikewise.\n\t(filenameFilterCallback): Remove unused var.\n\t(handle_response): Declare str_fileName and remove last else statement.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.c:\n\tNew File.\n\t(nativeGetNumFontsFamilies) New function.\n\t(nativeGetFontFamilies) Likewise.\n\t* gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java\n\t(getAvailableFontFamilyNames): Implement.\n\t* Makefile.am (gtk_c_source_files): Add GdkGraphicsEnvironment.c.\n\t* Makefile.in: Regenerate.\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/ClasspathFontPeer.java\n\t(setStandardAttributes(String,Map)): If size attribute doesn't\n\texist, default to size 12.  Clamp size value to a minimum of 1.\n\n2004-11-30  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* javax/swing/JDialog.java\n\t(decorated): Likewise.\n\t* javax/swing/JFrame.java\n\t(defaultLookAndFeelDecorated): Likewise.\n\n2004-11-30  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* javax/swing/plaf/basic/BasicToolBarUI.java\n\t(offset, regular): Made final.\n\t* javax/swing/plaf/basic/BasicScrollBarUI.java\n\t(DECREASE_HIGHLIGHT, INCREASE_HIGHLIGHT, NO_HIGHLIGHT,\n\tPOSITIVE_SCROLL, NEGATIVE_SCROLL): Made final.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/BitwiseXORComposite.java,\n\tgnu/java/awt/ClasspathToolkit.java,\n\tgnu/java/awt/image/XBMDecoder.java,\n\tgnu/java/awt/peer/GLightweightPeer.java,\n\tgnu/java/awt/peer/gtk/GdkGlyphVector.java:\n\tReorganized import statements.\n\n2004-11-30  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/awt/Button.java\n\t(next_button_number): Removed useless initializer.\n\t* java/awt/Frame.java\n\t(next_frame_number): Likewise.\n\t* java/awt/Panel.java\n\t(next_panel_number): Likewise,\n\t* java/awt/Scrollbar.java\n\t(next_scrollbar_number): Likewise.\n\t* java/awt/TextArea.java\n\t(next_text_number): Likewise.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/image/ByteLookupTable.java\n\t(ByteLookupTable) :Fixed HTML entities in javadocs.\n\t(lookupPixel): Fix case when dst is null.\n\t* java/awt/image/ShortLookupTable.java\n\t(ShortLookupTable) :Fixed HTML entities in javadocs.\n\t(lookupPixel): Fix case when dst is null.\n\t* java/awt/image/DataBufferByte.java,\n\tjava/awt/image/DataBufferDouble.java,\n\tjava/awt/image/DataBufferFloat.java,\n\tjava/awt/image/DataBufferInt.java,\n\tjava/awt/image/DataBufferShort.java,\n\tjava/awt/image/DataBufferUShort.java:\n\tFix initialization of bankData in constructors.\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n\t(setNativeBounds): Set GtkEventBox, GtkButton and GtkLabel size\n\trequests.\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n\t(setNativeBounds): Make package private.  Set size request even\n\tif GTK parent is NULL.\n\t* gnu/java/awt/peer/gtk/GtkLabelPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c\n\t(setNativeBounds): Set GtkEventBox and GtkLabel size requests.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\tWorkaround for bug #17952.\n\t*  jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n\t(request_frame_extents): Check window->window != NULL.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* jni/gtk-peer/gdkfont.h: Include gtkpeer.h not gtkcairopeer.h.\n\n2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c: Use\n\tnative_text_layout_state_table here.\n\n\t* jni/gtk-peer/gdkfont.h: Mark native_text_layout_state_table extern.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n\t(setChars): Only call pango_itemize() when vec->glyphitems != NULL.\n\tOnly call pango_shape() when gi->glyphs->num_glyphs > 0.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java:\n\tMerged import statements.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n\t(isBufferedImageGraphics): Simplified.\n\n2004-11-30  Paul Jenner  <psj.home@ntlworld.com>\n\n\t* javax/swing/JTree.java\n\t(isRootVisible): Fixed typo in method name.\n\t* javax/swing/JScrollBar.java\n\t(setValues): Likewise.\n\t* javax/swing/JScrollPane.java\n\t(createScrollListener): Call JScrollBar.setValues.\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkContainerPeer.java (endValidate):\n\tDon't call setParentAndBounds on GtkWindowPeers.\n\n\t* java/awt/Component.java (static): Don't set default keyboard\n\tfocus manager.\n\t* java/awt/KeyboardFocusManager.java\n\t(getCurrentKeyboardFocusManager): If current keyboard focus\n\tmanager is null set a default.\n\n\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n\t(gtkWidgetSetBackground): New method.\n\t(block_expose_events_cb): New function.\n\t(connectSignals): Block the AWT's expose event processing on\n\tbutton press and release.\n\t(gtkSetLabel): Set text on proper widget.\n\t(gtkWidgetModifyFont): Modify font on proper widget.\n\t(gtkWidgetSetBackground): Set normal, active and prelight\n\tcolours.\n\t(gtkWidgetSetForeground): Set forground colour of proper widget.\n\t(gtkActivate): Activate the correct widget.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c (clearRect):\n\tOnly clear rectangle if the backing component is not an event\n\tbox.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n\t(beginNativeRepaintID): New variable.\n\t(endNativeRepaintID): Likewise.\n\t(gtkInit): Initialize new fields with method IDs.\n\t* jni/gtk-peer/gtkpeer.h (beginNativeRepaintID): Declare extern.\n\t(endNativeRepaintID): Likewise.\n\n2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* javax/swing/JList.java (init): Revert accidental commit.\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c (GdkGraphics):\n\tCall initComponentGraphics or connectSignals depending on\n\tcomponent's realization status.\n\t(realize_cb): New function.\n\t(initComponentGraphics): New method.\n\t(connectSignals): New method.\n\t(clipRect): Return immediately if component is not realized.\n\t(setClip): Likewise.\n\t(translate): Likewise.\n\t(drawImage variants): Return false immediately if component is\n\tnot realized.\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n\t(connectSignals): New method.\n\t(GdkGraphics2D): Call initComponentGraphics2D or connectSignals\n\tdepending on component's realization status.  Move other\n\tinitialization calls to ...\n\t(initComponentGraphics2D): New method.\n\t(realize_cb): New function.\n\t(cairoSetMatrix): Return immediately if gr is NULL.\n\t(cairoNewPath): Likewise.\n\t(cairoRectangle): Likewise.\n\t(cairoClip): Likewise.\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n\t(gtkWidgetRepaintArea): Remove method.\n\t(isRealized): New method.\n\t(GtkComponentPeer): Move setParent, connectJObject and setCursor\n\tcalls to setParentAndBounds.  Call setParentAndBounds.\n\t(setParentAndBounds): New method.\n\t(setComponentBounds): Return immediately if bounds are all zero.\n\t(repaint): Remove call to gtkWidgetRepaintArea.  Return\n\timmediately if requested paint region is 0x0.\n\t(setCursor): New method.\n\t(gtkWidgetSetParent): Only set widget's parent if its parent is\n\tcurrently NULL.\n\t(setNativeBounds): Only set widget's bounds if it has a parent.\n\t(connectSignals): Don't call gtk_widget_realize.  Connect\n\t\"realize\" signal to connect_awt_hook_cb handler.\n\t* gnu/java/awt/peer/gtk/GtkContainerPeer.java (isValidating):\n\tNew field.\n\t(beginValidate): Set isValidating true.\n\t(endValidate): Set parents and bounds for children first, then\n\tfor this.  Set isValidating false.\n\t* gnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n\t(connectJObject): Remove method.\n\t(connectSignals): Don't call gtk_widget_realize.\n\t* gnu/java/awt/peer/gtk/GtkListPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c\n\t(connectJObject): Remove method.\n\t(connectSignals): Don't call gtk_widget_realize.\n\t* gnu/java/awt/peer/gtk/GtkPanelPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.c\n\t(connectJObject): Remove method.\n\t* gnu/java/awt/peer/gtk/GtkScrollbarPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c\n\t(connectJObject): Remove method.\n\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n\t(create): Don't call gtk_widget_realize.\n\t(connectJObject): Remove method.\n\t(connectSignals): Don't call gtk_widget_realize.  Connect\n\t\"realize\" signal to connect_awt_hook_cb handler.\n\t(nativeSetBounds): Don't attempt to move GDK window if it is\n\tNULL.\n\t* java/awt/Container.java (addImpl): Don't call comp.addNotify\n\tif peer is not null.\n\t(validateTree): Create peers for all children before calling\n\tdoLayout.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n\t(connectSignals): Don't call gtk_widget_realize.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n\t(connect_awt_hook_cb): New function.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n\t(initComponentGraphicsID): New variable.\n\t(initComponentGraphics2DID): Likewise.\n\t(setCursorID): Likewise.\n\t(gtkInit): Initialize new fields with method IDs.\n\t* jni/gtk-peer/gtkpeer.h (initComponentGraphicsID): Declare\n\textern.\n\t(initComponentGraphics2DID): Declare extern.\n\t(setCursorID): Likewise.\n\t(connect_awt_hook_cb): Declare function.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java,\n\tgnu/java/awt/peer/gtk/GdkGlyphVector.java,\n\tgnu/java/awt/peer/gtk/GdkGraphics2D.java,\n\tgnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java,\n\tgnu/java/awt/peer/gtk/GdkPixbufDecoder.java,\n\tgnu/java/awt/peer/gtk/GtkButtonPeer.java,\n\tgnu/java/awt/peer/gtk/GtkClipboard.java,\n\tgnu/java/awt/peer/gtk/GtkDialogPeer.java,\n\tgnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n\tgnu/java/awt/peer/gtk/GtkFontPeer.java,\n\tgnu/java/awt/peer/gtk/GtkListPeer.java,\n\tgnu/java/awt/peer/gtk/GtkMenuItemPeer.java,\n\tgnu/java/awt/peer/gtk/GtkToolkit.java,\n\tgnu/java/awt/peer/gtk/GtkWindowPeer.java:\n\tImport statements reworked.  Some little reformattings.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/image/AffineTransformOp.java\n\t(TYPE_BILINEAR): Initialize with 2.\n\t* java/awt/print/Printable.java: Jalopied.\n\t(PAGE_EXISTS): Initialize with 0;\n\t(NO_SUCH_PAGE): Initialized with 1.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* Makefile.am: Add BufferedImageFilter.java.\n\t* Makefile.in: Regenerate.\n\n2004-11-30  Graydon Hoare  <graydon@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n\t(install_font_peer): Minor bug fixes to track cairo font semantics.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/BufferedImageFilter.java: Implement.\n\n2004-11-30  Graydon Hoare  <graydon@redhat.com>\n\n\t* Makefile.am\n\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c)\n\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c)\n\t(gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java)\n\t(gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java): Remove.\n\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c)\n\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c)\n\t(gnu/java/awt/peer/gtk/GdkTextLayout.java)\n\t(gnu/java/awt/peer/gtk/GdkFontPeer.java)\n\t(gnu/java/awt/peer/ClasspathTextLayoutPeer.java): Add\n\t* Makefile.in: Regenerate.\n\t* gnu/awt/xlib/XToolkit.java\n\t(getClasspathTextLayoutPeer): Add stub.\n\t* gnu/java/awt/ClasspathToolkit.java\n\t(getClasspathTextLayoutPeer) Add.\n\t* gnu/java/awt/peer/ClasspathFontPeer.java\n\t(copyStyleToAttrs)\n\t(copySizeToAttrs): Make public.\n\t* gnu/java/awt/peer/ClasspathTextLayoutPeer.java: New file.\n\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java: Remove.\n\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java: Remove.\n\t* gnu/java/awt/peer/gtk/GdkFontMetrics.java: Rewrite.\n\t* gnu/java/awt/peer/gtk/GdkFontPeer.java: New file.\n\t* gnu/java/awt/peer/gtk/GdkGlyphVector.java: Adjust type names.\n\t* gnu/java/awt/peer/gtk/GdkGraphics.java\n\t(getFontPeer): New function.\n\t(drawString): Pass font peer to native side.\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n\t(cairoSetFont)\n\t(cairoShowGlyphs)\n\t(PainterThread): Remove.\n\t(GdkGraphics2D): Set hints during construction.\n\t(shifted)\n\t(walkPath)\n\t(draw)\n\t(setRenderingHint)\n\t(setRenderingHints): Reimplement normalization logic.\n\t(getDefaultHints)\n\t(updateBufferedImage)\n\t(isBufferedImageGraphics)\n\t(updateImagePixels)\n\t(drawImage): Make final.\n\t(drawImage): Always paint synchronously.\n\t(drawString)\n\t(drawGlyphVector): Rewrite.\n\t(releasePeerGraphicResource)\n\t(getPeerTextMetrics)\n\t(getPeerFontMetrics)\n\t(drawGdkGlyphVector)\n\t(drawGdkTextLayout)\n\t(cairoDrawGdkGlyphVector)\n\t(cairoDrawGdkTextLayout)\n\t(cairoDrawString)\n\t(getFontPeer): New functions.\n\t* gnu/java/awt/peer/gtk/GdkTextLayout.java: New file.\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n\t(getFontMetrics): Get metrics via toolkit, to hit cache.\n\t* gnu/java/awt/peer/gtk/GtkTextAreaPeer.java: Use getFontMetrics.\n\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java (LRUCache): New class.\n\t(fontCache)\n\t(metricsCache)\n\t(imageCache): New members.\n\t(getFontMetrics)\n\t(getImage)\n\t(getClasspathFontPeer): Use caches.\n\t(getFontPeer): Route through getClasspathFontPeer.\n\t* java/awt/Font.java (attrsToMap): Remove, adjust ctors.\n\t* java/awt/font/TextLayout.java: Implement in terms of peer.\n\t* javax/swing/plaf/basic/BasicSliderUI.java\n\t(paintThumb): Use polyline rather than polygon.\n\t* javax/swing/plaf/basic/BasicGraphicsUtils.java:\n\tUpdate comment but, alas, still do not switch to using TextLayouts.\n\t* javax/swing/text/Utilities.java (drawTabbedText):\n\tDraw text run-at-a-time, not char-at-a-time.\n\t* jni/gtk-peer/gdkfont.h: Publicize some of the font interface, add\n\tlayout table.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c:\n\tRemove files.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c: Rewrite to\n\tincorporate brains of old GdkClasspathFontPeerMetrics.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c: Rewrite to\n\tincorporate brains of old GdkClasspathFontPeer.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c: New file.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n\t(drawString): Rewrite to use persistent layout in peer font.\n\tComment out extraneous gdk_flush calls.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n\t(metrics_cairo)\n\t(metrics_surface): New static variables.\n\t(paint_glyph_run)\n\t(install_font_peer): New helper functions.\n\t(releasePeerGraphicResource)\n\t(getPeerTextMetrics)\n\t(getPeerFontMetrics)\n\t(cairoDrawGdkTextLayout)\n\t(cairoDrawGdkGlyphVector): New native methods.\n\t(cairoDrawString): Rewrite, leaving layout-based version\n\tcommented out for the time being.\n\t* jni/gtk-peer/gtkpeer.h (graphics): Add fields for pango stuff.\n\n2004-11-30  David Gilbert  <david.gilbert@object-refinery.com>\n\n\t* java/awt/geom/AffineTransform.java:\n\tFixed javadocs overall.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ComponentColorModel.java: Remove FIXME comment since\n\tit's correct.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/IndexColorModel.java: Fix use of immutable\n\tBigIntegers.\n\n2004-11-30  Tom Tromey  <tromey@redhat.com>\n\n\t* javax/swing/plaf/basic/BasicOptionPaneUI.java (MessageIcon):\n\tRenamed from 'messageIcon'.\n\t(errorIcon, infoIcon, warningIcon, questionIcon): Updated.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/RescaleOp.java: Fix formatting.\n\n2004-11-30   Olga Rodimina  <rodimina@redhat.com>\n\n\t* javax/swing/plaf/basic/BasicComboPopup.java\n\t(SCROLL_DOWN): made final.\n\t(SCROLL_UP): made final.\n\n2004-11-30   Olga Rodimina  <rodimina@redhat.com>\n\n\t* javax/swing/plaf/basic/BasicComboPopup.java:\n\tAdded javadocs for undocumented fields.\n\t(show): scroll down to the selected item and\n\thighlight selected item.\n\t(startAutoScrolling): Implemented.\n\t(stopAutoScrolling): Implemented.\n\t(autoScrollUp): Implemented.\n\t(autoScrollDown): Implemented.\n\t(InvocationMouseHandler.mouseReleased): Implemented.\n\t(InvocationMouseMotionHandler.mouseDragged): Implemented.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/RescaleOp.java: Implement.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/IndexColorModel.java (getRGBs,\n\tconvertToIntDiscrete): Implement.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/IndexColorModel.java: Add class docs.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/IndexColorModel.java (isValid, getValidPixels):\n\tImplement.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/MenuBar.java,\n\tjava/awt/peer/MenuBarPeer.java:\n\tRevert accidentally commited changes.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/AWTKeyStroke.java,\n\tjava/awt/Canvas.java,\n\tjava/awt/CardLayout.java,\n\tjava/awt/CheckboxMenuItem.java,\n\tjava/awt/Component.java,\n\tjava/awt/Container.java,\n\tjava/awt/DefaultKeyboardFocusManager.java,\n\tjava/awt/EventDispatchThread.java,\n\tjava/awt/FileDialog.java,\n\tjava/awt/FlowLayout.java,\n\tjava/awt/Font.java,\n\tjava/awt/Frame.java,\n\tjava/awt/Graphics2D.java,\n\tjava/awt/GraphicsEnvironment.java,\n\tjava/awt/GridBagConstraints.java,\n\tjava/awt/GridBagLayout.java,\n\tjava/awt/GridLayout.java,\n\tjava/awt/Image.java,\n\tjava/awt/KeyboardFocusManager.java,\n\tjava/awt/Label.java,\n\tjava/awt/List.java,\n\tjava/awt/MediaTracker.java,\n\tjava/awt/Menu.java,\n\tjava/awt/MenuBar.java,\n\tjava/awt/MenuComponent.java,\n\tjava/awt/Panel.java,\n\tjava/awt/PopupMenu.java,\n\tjava/awt/ScrollPane.java,\n\tjava/awt/Scrollbar.java,\n\tjava/awt/SystemColor.java,\n\tjava/awt/TextArea.java,\n\tjava/awt/TextField.java,\n\tjava/awt/Toolkit.java,\n\tjava/awt/Window.java,\n\tjava/awt/color/ICC_Profile.java,\n\tjava/awt/datatransfer/DataFlavor.java,\n\tjava/awt/datatransfer/StringSelection.java,\n\tjava/awt/datatransfer/SystemFlavorMap.java,\n\tjava/awt/dnd/Autoscroll.java,\n\tjava/awt/dnd/DropTarget.java,\n\tjava/awt/dnd/DropTargetContext.java,\n\tjava/awt/dnd/DropTargetDragEvent.java,\n\tjava/awt/dnd/peer/DropTargetContextPeer.java,\n\tjava/awt/event/AdjustmentEvent.java,\n\tjava/awt/event/InputEvent.java,\n\tjava/awt/event/InvocationEvent.java,\n\tjava/awt/event/KeyEvent.java,\n\tjava/awt/event/MouseEvent.java,\n\tjava/awt/font/TextLayout.java,\n\tjava/awt/geom/GeneralPath.java,\n\tjava/awt/geom/Point2D.java,\n\tjava/awt/im/InputContext.java,\n\tjava/awt/im/spi/InputMethodContext.java,\n\tjava/awt/image/AffineTransformOp.java,\n\tjava/awt/image/BufferedImage.java,\n\tjava/awt/image/ColorModel.java,\n\tjava/awt/image/ComponentColorModel.java,\n\tjava/awt/image/CropImageFilter.java,\n\tjava/awt/image/DirectColorModel.java,\n\tjava/awt/image/MemoryImageSource.java,\n\tjava/awt/image/PackedColorModel.java,\n\tjava/awt/image/PixelGrabber.java,\n\tjava/awt/image/RasterOp.java,\n\tjava/awt/peer/MenuBarPeer.java:\n\tSome fixes for checkstyle. Import statement and modifier order\n\tredordering.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTable.java\n\t(setModel): Reimplemented.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTextArea.java\n\t(append): Re-implemented.\n\t(insert): Likewise.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JSpinner.java\n\t(serialVersionUID): New static field.\n\t* javax/swing/JToggleButton.java\n\t(JToggleButton): Fixed email addresses.\n\t* javax/swing/SpinnerNumberModel.java\n\t(serialVersionUID): Added javadoc.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTextArea.java:\n\tDon't use JTextComponent.doc directly. GCJ from java-gui-branch has a\n\tbug here which is fixed in HEAD ...\n\n2004-11-30  Andrew John Hughes  <address@hidden>\n\n\t* javax/swing/JTextArea.java: Added additional\n\tdocumentation.\n\n2004-11-30  Andrew John Hughes  <address@hidden>\n\n\t* javax/swing/JRadioButton.java:\n\tImplemented additional constructors and accessibility\n\tclasses.  Added documentation and fixed a typo in\n\tAbstractButton.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/IndexColorModel.java (IndexColorModel): Implement\n\tmissing constructor.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ComponentColorModel.java (ComponentColorModel):\n\tImplement missing 1.4 constructor.\n\n2004-11-30  Andrew John Hughes  <address@hidden>\n\n\t* javax/swing/JToggleButton.java:\n\tImplemented additional constructors and accessibility\n\tclasses.  Added documentation and fixed a typo in\n\tAbstractButton.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ColorModel.java (getDataElement,\n\tgetDataElements): Document since 1.4.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/BandedSampleModel.java: Implement.\n\t* Makefile.am: Add java/awt/image/BandedSampleModel.java.\n\t* Makefile.in: Regenerated.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Window.java: Fixed whitespace difference with GNU\n\tclasspath.\n\n2004-11-30  Mark Wielaard  <mark@klomp.org>\n\n\t* Makefile.am: Add javax/swing/SpinnerListModel.java.\n\t* Makefile.in: Regenerated.\n\n2004-11-30  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* javax/swing/SpinnerListModel.java, javax/swing/SpinnerModel.java\n\tImplemented SpinnerListModel.  Added documentation to\n\tSpinnerModel.\n\n2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n\t(init_dpi_conversion_factor): Apply the patch from main correctly.\n\t2004-06-26  Andreas Tobler  <a.tobler@schweiz.ch>\n\n2004-11-30  Tom Tromey  <tromey@redhat.com>\n\n\tBug 9948.\n\t* javax/swing/JDesktopPane.java (LIVE_DRAG_MODE): Now final.\n\t(OUTLINE_DRAG_MODE): LIVE_DRAG_MODE.\n\t* javax/swing/plaf/basic/BasicSplitPaneUI.java\n\t(NON_CONTINUOUS_DIVIDER): Now final.  Initialize.\n\n2004-11-30  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* java/awt/Canvas.java\n\t(AccessibleAWTCanvas): added serialization UID\n\t* java/awt/Label.java\n\t(AccessibleAWTLabel): added serialization UID\n\t* javax/swing/JRootPane.java\n\t(AccessibleJRootPane): added comment to existing UID\n\t* javax/swing/JSpinner.java\n\t(DefaultEditor): added serialization UID\n\t(NumberEditor): added serialization UID\n\t* javax/swing/text/html/HTML.java\n\t(UnknownTag): added serialization UID\n\n2004-11-30  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* javax/swing/JInternalFrame.java\n\t(CONTENT_PANE_PROPERTY,FRAME_ICON_PROPERTY,GLASS_PANE_PROPERTY,\n\tIS_CLOSED_PROPERTY,IS_ICON_PROPERTY,IS_MAXIMUM_PROPERTY,\n\tIS_SELECTED_PROPERTY,LAYERED_PANE_PROPERTY,MENU_BAR_PROPERTY,\n\tROOT_PANE_PROPERTY,TITLE_PROPERTY): Made final as per API spec.\n\t* javax/swing/plaf/basic/BasicInternalFrameTitlePane.java\n\t(CLOSE_CMD,ICONIFY_CMD,MAXIMIZE_CMD,MOVE_CMD,RESTORE_CMD,SIZE_CMD):\n\tMade final as per API spec.\n\n2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* jni/gtk-peer/gtkpeer.h: Remove duplicated copyright string.\n\n2004-11-30  Sven de Marothy  <sven@physto.se>\n\n\t* java/awt/geom/Arc2D.java: Reformatted.\n\t(setArc): Correct documentation to say 'upper left corner'.\n\t(setArcByTangent,contains,intersects): Implemented.\n\t(containsAngle): Corrected to handle negative extents.\n\t(ArcIterator): Set to private.\n\t(ArcIterator): Corrected for CHORD-type arcs, negative extents.\n\t(intersects): Fix: Now checks the arc segment.\n\t(contains): Cleaned up.\n\t* java/awt/geom/CubicCurve2a.javaD: Fix insideness-test. Reindent.\n\t(contains): Implemented.\n\t(intersects): Implemented.\n\t* java/awt/geom/QuadCurve2D.java: Fix insideness-test. Reindent.\n\t* java/awt/geom/GeneralPath: Fix insideness-test. Reindent and\n\tdocument.  Fully (re)implemented using separate xpoints and ypoints\n\tfloat[] coords.\n\n2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* configure.ac: Introduce AC_C_BIGENDIAN_CROSS for WORDS_BIGENDIAN.\n\t* configure: Regenerate.\n\t* include/config.h.in: Likewise.\n\t* jni/gtk-peer/gtkpeer.h (SWAPU32): Introduce macro to swap pixels.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c: Moved SWAPU32\n\tmacro to gtkpeer.h.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n\t(Java_gnu_java_awt_peer_gtk_GdkGraphics2D_getImagePixels): Convert\n\tpixels from  0xBBGGRRAA to 0xAARRGGBB only on Little Endian\n\tarchitectures.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c (area_updated):\n\tLikewise.\n\n2004-11-30  David Gilbert  <david.gilbert@object-refinery.com>\n\n\t* java/awt/SystemColor.java: Fix @link doc entries.\n\n2004-11-30  David Gilbert  <david.gilbert@object-refinery.com>\n\n\t* java/awt/RenderingHints.java: Documented.\n\t(RenderingHints): Accept null init Map.\n\t(putAll): Preprocess map to generate appropriate exceptions.\n\t(remove): Cast object to Key and remove from hintMap.\n\n2004-11-30  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* java/awt/MenuComponent.java, java/awt/MenuBar.java:\n\tImplementation of accessibility classes and methods\n\tfor these two components.\n\n2004-11-30  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* java/awt/KeyboardFocusManager.java:\n\tAdded missing documentation.\n\n2004-11-30  Andrew John Hughes <gnu_andrew@member.fsf.org>\n\n\t* java/awt/Label.java, java/awt/Canvas.java:\n\tAdded accessibility classes to AWT Label and Canvas,\n\tas well as additional documentation for Canvas.\n\n2004-11-30  David Gilbert  <address@bogus.example.com>\n\n\t* java/awt/image/DataBuffer.java: Update API documentation.\n\t* java/awt/image/DataBufferByte.java: Likewise.\n\t* java/awt/image/DataBufferDouble.java: Likewise.\n\t* java/awt/image/DataBufferFloat.java: Likewise.\n\t* java/awt/image/DataBufferInt.java: Likewise.\n\t* java/awt/image/DataBufferShort.java: Likewise.\n\t* java/awt/image/DataBufferUShort.java: Likewise.\n\n2004-11-30  Dalibor Topic  <robilad@kaffe.org>\n\n\t* java/awt/Component.java (postEvent):\n\tOnly delegate to parent if a parent exists.\n\tReported by: Stephane Meslin-Weber <steph@tangency.co.uk>\n\n2004-11-30  Sven de Marothy  <sven@physto.se>\n\n\t*java/awt/AWTEventMulticaster.java,\n\tjava/awt/Adjustable.java,\n\tjava/awt/Point.java,\n\tjava/awt/Polygon.java,\n\tjava/awt/Rectangle.java,\n\tjava/awt/Shape.java,\n\tjava/awt/geom/Area.java,\n\tjava/awt/geom/Ellipse2D.java,\n\tjava/awt/geom/PathIterator.java,\n\tjava/awt/geom/Point2D.java,\n\tjava/awt/geom/Rectangle2D.java,\n\tjava/lang/Comparable.java,\n\tjava/util/Arrays.java:\n\tFixed documentation errors\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ComponentSampleModel.java: Add documentation.\n\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ComponentSampleModel.java (constructor):\n\tInitialize numBanks when figuring out the max bank index.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/Raster.java (createPackedRaster): Implement\n\tMultiPixelPackedSampleModel codepath.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/MultiPixelPackedSampleModel.java: Implement.\n\t* Makefile.am: Add MultiPixelPackedSampleModel.java.\n\t* Makefile.in: Regenerate.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/Raster.java (getNumBands): Implement.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/Raster.java\n\t(createPackedRaster(int,int,int,int,int,Point)): Implement for\n\tbands>1.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/SinglePixelPackedSampleModel.java\n\t(SinglePixelPackedSampleModel): Throw exception for unsupported\n\tdatatype.\n\n2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/ColorModel.java (getDataElement): Implemented.\n\tUpdate javadoc.\n\t(getDataElements): Add missing version.  Remove bogus version.\n\tUpdate javadoc.\n\n2004-11-30  Olga Rodimina  <rodimina@redhat.com>\n\n\t* javax/swing/plaf/basic/BasicComboBoxUI.java:\n\t(paintCurrentValue): Pass correct parameters to\n\tgetListCellRendererComponent().\n\t(ListDataHandler.intervalRemoved): Implemented.\n\t(PropertyChangeHandler.propertyChange): Handle changes in\n\tMODEL_CHANGED_PROPERTY of the JComboBox\n\t* javax/swing/plaf/basic/BasicComboPopup.java:\n\t(BasicComboPopup): Moved code that configures popup to\n\tconfigurePopup() and call it instead.\n\t(firePopupMenuWillBecomeVisible): Implemented.\n\t(firePopupMenuWillBecomeInvisible): Likewise.\n\t(firePopupMenuCanceled): Likewise.\n\t(configureList): Set list's visibleRowCount same as\n\tcomboBox's visibleRowCount.\n\t(configurePopup): Implemented.\n\t(getPopupHeightForRowCount): Get item's from JComboBox's model and\n\tnot from model of the JList.\n\t(ListMouseMotionHandler.mouseMoved): Implemented.\n\t(PropertyChangeHandler.propertyChange): Handles change in the\n\tJComboBox's model.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JComponent.java\n\t(isMaximumSizeSet): New method.\n\t(isMinimumSizeSet): Likewise.\n\t(isPreferredSizeSet): Likewise.\n\n2004-11-30  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JSpinner.java:\n\tSome Re-formatting.\n\t(spinner): New field.\n\t(DefaultEditor): New method.\n\t(getSpinner): Likewise.\n\t(NumberEdito): Likew\u2026", "tree": {"sha": "35ad0bbb429ac9e5e658fea57b904ce331b0a4dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35ad0bbb429ac9e5e658fea57b904ce331b0a4dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea28b8f60fb4113053238a22a4d2c508f39710bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea28b8f60fb4113053238a22a4d2c508f39710bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea28b8f60fb4113053238a22a4d2c508f39710bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea28b8f60fb4113053238a22a4d2c508f39710bb/comments", "author": null, "committer": null, "parents": [{"sha": "c21accc5d9378aa5b20c868364d8025faa5b1ea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21accc5d9378aa5b20c868364d8025faa5b1ea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21accc5d9378aa5b20c868364d8025faa5b1ea5"}], "stats": {"total": 38552, "additions": 29765, "deletions": 8787}, "files": [{"sha": "bc8537271f721e182ae543247edab26f5bd23b3a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 2492, "deletions": 3, "changes": 2495, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,3 +1,2469 @@\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java (drawImage variants):\n+\tUpdate image observer.\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java (createImage):\n+\tStart image production.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (setMenuBar): Protect\n+\tagainst negative menu bar widths.\n+\t(setBounds): Likewise.\n+\t(postConfigureEvent): Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkImage.java (imageComplete): Don't\n+\tremove consumer unless only a single frame has completed.\n+\t* gnu/java/awt/peer/gtk/GtkImagePainter.java (GtkImagePainter):\n+\tAdd observer parameter.\n+\t(setPixels): Update image observer.\n+\t(imageComplete): Likewise.\n+\t* java/applet/Applet.java (width): New field.\n+\t(height): Likewise.\n+\t(setStub): Set size if width or height field has been set.\n+\t(resize): If stub is null save width and height values.\n+\t* java/awt/Component.java (reshape): Protect against null\n+\tparent.\n+\t* java/awt/image/MemoryImageSource.java\n+\t(MemoryImageSource(int,int,ColorModel,byte[],int,int)):\n+\tDocument.\n+\t(MemoryImageSource(int,int,ColorModel,int[],int,int)):\n+\tLikewise.\n+\t(MemoryImageSource(int,int,ColorModel,byte[],int,int,Hashtable)):\n+\tReference pixel array directly, rather than creating a local\n+\tcopy.\n+\t(MemoryImageSource(int,int,ColorModel,int[],int,int,Hashtable)):\n+\tLikewise.\n+\t(newPixels(int,int,int,int)): Fix for loop and array copy\n+\tbounds.\n+\t(newPixels(int,int,int,int,boolean)): Likewise.\n+\t(startProduction): If animated call imageComplete with\n+\tSINGLEFRAME.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c: Uncomment\n+\tgdk_flush lines.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c\n+\t(drawPixels): Return if g is null or g->drawable is not a gdk\n+\tdrawable.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultSingleSelectionModel.java,\n+\tjavax/swing/JPasswordField.java,\n+\tjavax/swing/tree/AbstractLayoutCache.java:\n+\tReformatted and javadocs cleaned up.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Component.java:\n+\tFixed argument names to match javadocs.\n+\t(setFont): Rewritten set property first and then fire event.\n+\t(setLocale): Likewise.\n+\t* javax/swing/text/JTextComponent.java\n+\t(setEditable): Likewise.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Button.java\n+\t(AccessibleAWTButton.getAccessibleActionDescription): Explain the\n+\tsource of 'click'.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Checkbox.java: Remove stub comments.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Button.java\n+\t(AccessibleAWTButton.getAccessibleActionDescription): Return\n+\t'click'.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/CardLayout.java:\n+\tMade some constants static.\n+\t(serialVersionUID): Made private.\n+\t(addLayoutComponent): Simplified code.\n+\t* java/awt/event/InputEvent.java\n+\t(getModifiersEx): Added missing @param tag.\n+\t* java/awt/image/RGBImageFilter.java\n+\t(filterRGBPixels): Reformatted, removed wrong @param tag.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/FieldView.java,\n+\tjavax/swing/text/JTextComponent.java:\n+\tRemoved debug code.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/BorderFactory.java\n+\t(BorderFactory): Added private constructor.\n+\t* javax/swing/SwingUtilities.java\n+\t(SwingUtilities): Likewise.\n+\t(computeStringWidth): New method.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/color/ICC_Profile.java\n+\t(icSigNamedColorTag): Removed.\n+\t* java/awt/datatransfer/DataFlavor.java\n+\t(isMimeTypeEqual): Made final.\n+\t* java/awt/image/AffineTransformOp.java:\n+\tReworked javadocs.\n+\t(TYPE_BICUBIC): Added @since tag.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Checkbox.java (AccessibleAWTCheckBox): Remove todo\n+\tcomments.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Checkbox.java (itemStateChanged): Implement function.\n+\t(getAccessibleContext): Add AccessibleAWTCheckBox to item listeners.\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/Polygon.java (contains): Reimplemented.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/print/PrinterJob.java: Reformatted.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/image/AffineTransformOp.java,\n+\tjava/awt/image/ColorConvertOp.java,\n+\tjava/awt/image/LookupOp.java,\n+\tjava/awt/image/RescaleOp.java:\n+\tAdded final keywords where they belong.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/CardLayout.java,\n+\tjava/awt/Component.java,\n+\tjava/awt/Font.java,\n+\tjava/awt/image/SinglePixelPackedSampleModel.java:\n+\tFixed javadocs and argument names all over.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/image/DataBufferShort.java: Fixed file header.\n+\t* java/awt/image/DataBufferUShort.java: Likewise.\n+\t(DataBufferUShort): Throw NullPointerException if dataArray is null.\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/geom/Arc2D.java\n+\t(setAngleStart): Corrected (wrong sign on atan2 y parameter).\n+\t(setAngles): Likewise.\n+\t(containsAngle): Return false on zero extent, don't include\n+\tfinal angle.\n+\t(contains): Treat OPEN-type arcs like CHORD ones, not as PIE\n+\tones.\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/geom/AffineTransform.java,\n+\t(inverseTransform): Fixed bug and simplified code.\n+\t(createTransformedShape): Return null on null parameter.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/color/ICC_ColorSpace.java,\n+\tjava/awt/color/ICC_Profile.java,\n+\tjava/awt/color/ICC_ProfileGray.java,\n+\tjava/awt/color/ICC_ProfileRGB.java:\n+\tRe-indent copyright header to be standardish.\n+\t* java/awt/datatransfer/StringSelection.java:\n+\tReformatted.\n+\t* java/awt/geom/Area.java\n+\t(EPSILON): Made static.\n+\t(RS_EPSILON): Likewise.\n+\t(PE_EPSILON): Likewide.\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+\n+\t* javax/swing/SwingUtilities.java:\n+\t(computeDifference): Implemented\n+\t(computeIntersection): Likewise\n+\t(computeUnion): Likewise\n+\t(isRectangleContainingRectangle): Likewise\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/BasicStroke.java,\n+\tjava/awt/Button.java,\n+\tjava/awt/Canvas.java,\n+\tjava/awt/CheckboxMenuItem.java,\n+\tjava/awt/Container.java,\n+\tjava/awt/EventQueue.java,\n+\tjava/awt/FileDialog.java,\n+\tjava/awt/FlowLayout.java,\n+\tjava/awt/FontMetrics.java,\n+\tjava/awt/Graphics.java,\n+\tjava/awt/GridLayout.java,\n+\tjava/awt/KeyboardFocusManager.java,\n+\tjava/awt/Label.java,\n+\tjava/awt/LayoutManager2.java,\n+\tjava/awt/List.java,\n+\tjava/awt/MenuBar.java,\n+\tjava/awt/Scrollbar.java,\n+\tjava/awt/Toolkit.java,\n+\tjava/awt/Window.java,\n+\tjava/awt/datatransfer/DataFlavor.java,\n+\tjava/awt/datatransfer/FlavorTable.java,\n+\tjava/awt/event/ActionListener.java,\n+\tjava/awt/event/HierarchyBoundsAdapter.java,\n+\tjava/awt/geom/Arc2D.java,\n+\tjava/awt/geom/Rectangle2D.java,\n+\tjava/awt/geom/RectangularShape.java,\n+\tjava/awt/im/spi/InputMethod.java,\n+\tjava/awt/image/ByteLookupTable.java,\n+\tjava/awt/image/ColorModel.java,\n+\tjava/awt/image/DirectColorModel.java,\n+\tjava/awt/image/ShortLookupTable.java,\n+\tjava/awt/print/Book.java:\n+\tFixed javadocs and method argument names all over.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GdkFontPeer.java\n+\t(buildString): Optimise String building.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/TextArea.java (AccessibleAWTTextArea,\n+\tgetAccessibleContext): Implement.\n+\t* java/awt/TextField.java (AccessibleAWTTextField,\n+\tgetAccessibleContext): Implement.\n+\n+2004-11-30  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo):\n+\tFixed typo.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Menu.java (AccessibleAWTMenu, getAccessibleContext):\n+\tImplement.\n+\t* java/awt/PopupMenu.java (AccessibleAWTMenu, getAccessibleContext):\n+\tImplement.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/print/PrinterJob.java (lookupPrintServices,\n+\tgetPrintService, setPrintService): Implement.\n+\t(lookupStreamPrintServices): Add commented out implementation.\n+\t(printer): New field.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* javax/swing/ToolTipManager.java (mouseMoved): Set currentComponent\n+\twhen not yet set.\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/geom/GeneralPath.java (evaluateCrossings):\n+\tFixed epsilon value, should always be nonzero.\n+\n+2004-11-30  Paul Jenner  <psj.home@ntlworld.com>\n+\n+\t* java/awt/image/Raster.java\n+\t(createPackedRaster): Implemented.\n+\n+2004-11-30  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* javax/swing/plaf/basic/BasicTextUI.java: \n+\tListen to focus events, indicate focus via caret.\n+\t* javax/swing/text/GapContent.java (getString): Return substring.\n+\t* javax/swing/text/PlainDocument.java (reindex): New method.\n+\t(createDefaultRoot): Call it.\n+\t(insertUpdate): Likewise.\n+\t(removeUpdate): Likewise.\n+\t* javax/swing/text/Utilities.java (drawTabbedText): Always advance\n+\ton tab and newline, even if no painting happens.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am: List peer JNI header: Java source file\n+\tdependencies explicitly.  Likewise for JNI .lo: JNI header\n+\tdependencies.\n+\t* Makefile.in: Regenerate.\n+\n+2004-11-30  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* Makefile.am: Add entry for BasicTextPaneUI.java\n+\t* Makefile.in: Regenerate.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n+\t(GdkGraphics2D): Set clip after transform.\n+\t(drawImage): Protect against null image.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n+\t(setIconImage): Protect against non-GtkImage args.\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java\n+\t(checkImage): Protect against non-GtkImage args.\n+\t* java/awt/print/PrinterJob.java:\n+\t(print): Add variant taking PrintRequestAttributeSet.\n+\t(printDialog): Likewise.\n+\t* javax/swing/JComponent.java:\n+\t(transferHandler): New field.\n+\t(getComponentGraphics): Build new Graphics for each sub-paint.\n+\t(getTransferHandler): New method.\n+\t(setTransferHandler): New method.\n+\t* javax/swing/JDesktopPane.java \n+\t(setDragMode): Force LIVE_DRAG_MODE.\n+\t* javax/swing/JMenuItem.java\n+\t(menuSelectionChanged): Protect against null parent.\n+\t* javax/swing/JTable.java (setDefaultRenderer): New method.\n+\t* javax/swing/JTree.java: Get basic ctors and UI working.\n+\t* javax/swing/JViewport.java (JViewport): Set scroll mode.\n+\t* javax/swing/RepaintManager.java \n+\t(addDirtyRegion): Skip empty regions.\n+\t* javax/swing/ScrollPaneLayout.java (minimumLayoutSize): Do not\n+\tbound scrollpane minimum by central view minimum.\n+\t* javax/swing/ToolTipManager.java \n+\t(showTip): Guard against null component.\n+\t* javax/swing/TransferHandler.java: Stub out.\n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java:\n+\tAdd entry for TextPaneUI, change Tree icons to pngs.\n+\t* javax/swing/plaf/basic/BasicMenuItemUI.java:\n+\t(installDefaults): Set text position and alignment.\n+\t(paintMenuItem): Layout icon with normal compound function.\n+\t* javax/swing/plaf/basic/BasicTableHeaderUI.java:\n+\t(getMaximumSize): Delete.\n+\t(getMinimumSize): Delete.\n+\t(getPreferredSize): Use column model's total width.\n+\t* javax/swing/plaf/basic/BasicTextPaneUI.java: New file.\n+\t* javax/swing/plaf/basic/BasicTextUI.java\n+\t(modelChanged): Make resilient against nulls.\n+\t* javax/swing/plaf/basic/BasicTreeUI.java: \n+\tAdd some simplistic config / painting functions.\n+\t* javax/swing/plaf/basic/BasicViewportUI.java\n+\t(paintSimple): Add new non-backingstore paint mode.\n+\t(paintBackingStore): Split out backing store code.\n+\t(paint): Switch on painting mode.\n+\t* javax/swing/text/SimpleAttributeSet.java\n+\t(SimpleAttributeSet): Resist nulls.\n+\t* javax/swing/tree/DefaultTreeCellRenderer.java: Implement.\n+\t* javax/swing/tree/DefaultTreeModel.java: Partially implement.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c (setFont):\n+\tSet pango context's description and language.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/awt/image/LookupOp.java: Comments and indentation fixes.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Checkbox.java (AccessibleAWTCheckBox): Implement.\n+\t(getAccessibleContext): Implement.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/TextComponent.java (AccessibleAWTTextComponent):\n+\tImplement.\n+\t(getIndexAtPoint, getCharacterBounds): New methods.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Button.java (AccessibleAWTButton): Implement.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n+\t(filenameFilterCallback): Made static.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n+\t(cairoShowGlyphs) Removed.\n+\n+2004-11-30  Sven de Marothy <sven@physto.se>\n+\n+\t* gnu/java/awt/color/RgbProfileConverter.java (RgbProfileConverter):\n+\tDon't invert matrix when reverse CLUT is available.\n+\t* gnu/java/awt/color/LinearRGBConverter.java: Documentation update.\n+\t* java/awt/color/ICC_ColorSpace.java: Likewise.\n+\t* java/awt/color/ICC_Profile.java: Likewise.\n+\t* java/awt/color/ICC_ProfileGray.java: Likewise.\n+\t* java/awt/color/ICC_ProfileRGB.java: Likewise.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/MenuItem.java (AccessibleAWTMenuItem): Implement.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Choice.java (AccessibleAWTChoice): Implement.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/BandedSampleModel.java (scanlineStride): Remove\n+\tfield hiding ComponentSampleModel.scanlineStride.\n+\n+2004-11-30  Noa Resare  <noa@resare.com>\n+\n+\t* java/awt/geom/GeneralPath.java (currentSegment):\n+\tFix typo in transform.transform() invocation.\n+\n+2004-11-30  Sven de Marothy <sven@physto.se>\n+\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n+\t(createImage): Created bitmap should be filled with bg color\n+\n+2004-11-30  Noa Resare  <noa@resare.com>\n+\n+\t* java/awt/Choice.java (add):\n+\tImplement correct selection behavior when peer == null.\n+\t(insert): Likewise.\n+\t(remove): Likewise.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* gnu/java/awt/peer/gtk/GtkChoicePeer.java (GtkChoicePeer):\n+\tCall select() when Choice has a selected item.\n+\n+2004-11-30  Michael Koch  <address@bogus.example.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c:\n+\tFixed method names to start at begin of line. This is desired by GNU\n+\tcoding style guide.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n+\t(gtkWidgetSetVisible): Unused. Removed.\n+\t(connectJObject): Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkScrollPanePeer.java\n+\t(gtkScrolledWindowSetScrollPosition): Commented out.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c\n+\t(Java_gnu_java_awt_peer_gtk_GdkTextLayout_setText): Installed and\n+\trenamed from Java_gnu_java_awt_peer_gtk_GdkGlyphVector_setText.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c\n+\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_setText): Removed.\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n+\t(init_dpi_conversion_factor): Correct prototype.\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+        \n+\t* java/awt/image/ConvolveOp.java: Added missing\n+\tcopyright notice.\n+\n+2004-11-30  Robert Schuster  <theBohemian@gmx.net>\n+\n+\tFixes bug #10908\n+\t* gnu/java/beans/IntrospectionIncubator.java:\n+\t(addMethod): static methods are discarded now, too.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* Makefile.am (awt_java_source_files): Add new gnu/java/awt/color\n+\tjava source files.\n+\t* Makefile.in: Regenerated.\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+\n+\t* gnu/java/awt/color/CieXyzConverter.java,\n+\tgnu/java/awt/color/GrayScaleConverter.java,\n+\tgnu/java/awt/color/SrgbConverter.java,\n+\tgnu/java/awt/color/ClutProfileConverter.java,\n+\tgnu/java/awt/color/LinearRGBConverter.java,\n+\tgnu/java/awt/color/TagEntry.java,\n+\tgnu/java/awt/color/ColorLookUpTable.java,\n+\tgnu/java/awt/color/ProfileHeader.java,\n+\tgnu/java/awt/color/ToneReproductionCurve.java,\n+\tgnu/java/awt/color/ColorSpaceConverter.java,\n+\tgnu/java/awt/color/PyccConverter.java,\n+\tgnu/java/awt/color/GrayProfileConverter.java,\n+\tgnu/java/awt/color/RgbProfileConverter.java:\n+\tNew files.\n+\t* java/awt/color/ICC_ColorSpace.java,\n+\tjava/awt/color/ICC_Profile.java,\n+\tjava/awt/color/ICC_ProfileGray.java,\n+\tjava/awt/color/ICC_ProfileRGB.java:\n+\tImplemented (sans PhotoYCC color space).\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/AffineTransformOp.java (filter):  Implement\n+\tbilinear interpolation for Rasters.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/IndexColorModel.java (IndexColorModel): Actually\n+\tuse the provided colormap.  Throw documented exceptions.  Document\n+\texceptions.\n+\n+2004-11-30  Paul Jenner  <psj.home@ntlworld.com>\n+\n+\t* java/awt/image/IndexColorModel.java (IndexColorModel): Fix\n+\tconstructor.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/AffineTransformOp.java: Add TYPE_BICUBIC.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/AffineTransformOp.java (filter): Implement Raster\n+\tfiltering.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ComponentSampleModel.java (getDataElements,\n+\tsetDataElements): Implement SHORT, FLOAT, and INT transfer types.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* java/awt/Font.java (name): New field.\n+\t(size): Likewise.\n+\t(style): Likewise.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/Raster.java (createBandedRaster): Implement.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ConvolveOp.java: New class.\n+\t* Makefile.am: Add ConvolveOp.\n+\t* Makefile.in: Regenerate.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/RescaleOp.java (BandCombineOp, ColorConvertOp,\n+\tLookupOp, RescaleOp): Fix loop bounds.\n+\n+2004-11-30  jlquinn  <jlquinn@optonline.net>\n+\n+\t* Makefile.am: Fix typo in BandCombineOp.\n+\t* Makefile.in: Regenerate.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/BandCombineOp.java: New class.\n+\t* Makefile.am: Add BandCombineOp.\n+\t* Makefile.in: Regenerate.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/LookupOp.java: New class.\n+\t* Makefile.am: Add LookupOp.\n+\t* Makefile.in: Regenerate.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/SampleModel.java (createSubsetSampleModel): Add\n+\tjavadocs.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ColorModel.java (cloneColorModel): Fix line\n+\twrap.  Use Boolean.valueOf.\n+\t\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n+\t(releasePeerGraphicsResource): Fixed typo in method name.\n+\t* gnu/java/awt/peer/gtk/GdkFontPeer.java\n+\t(finalize): Fixed typo in releasePeerGraphicsResource.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/font/TextAttribute.java\n+\t(RUN_DIRECTION_LTR): Initialie with static value instead of\n+\tcalculating it.\n+\t(RUN_DIRECTION_RTL): Likewise.\n+\t(STRIKETHROUGH_ON): Likewise.\n+\t(SWAP_COLORS_ON): Likewise.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ColorConvertOp.java: New class.\n+\t* java/awt/image/ColorModel.java (cloneColorModel): New method.\n+\t* Makefile.am: Add ColorConvertOp.\n+\t* Makefile.in: Regenerate.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* java/awt/DefaultKeyboardFocusManager.java (dispatchEvent):\n+\tTrack Window focus owner on FOCUS_GAINED events.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.c\n+\t(nativeSetIconImage): Rename to nativeSetIconImageFromDecoder.\n+\n+2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c\n+\t(Java_gnu_java_awt_peer_gtk_GThreadNativeMethodRunner_nativeRun):\n+\tFix pointer warning.\n+\n+2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_nativeSetFilenameFilter):\n+\tFix pointer warning.\n+\n+\t* jni/gtk-peer/gtkpeer.h: Introduce widget_union to fix type punned\n+\twarnings.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n+\t(Java_gnu_java_awt_peer_gtk_GdkGraphics_clearRect): Use widget_union\n+\tto fix type punned pointer warning.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c (pre_event_handler):\n+\tLikewise.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(window_get_new_state): Introduce unions to fix warnings as above.\n+\t(window_property_changed_cb): Likewise.\n+\t(window_active_state_change_cb): Mark unused variables unused.\n+\t(window_focus_state_change_cb): Likewise.\n+\t(window_focus_in_cb): Likewise.\n+\t(window_focus_out_cb): Likewise.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_setFont): Convert\n+\tPangoFontMap correctly with PANGO_FT2FONT_MAP macro.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JMenuBar.java\n+\t(updateUI): Simplified.\n+\t* javax/swing/tree/DefaultTreeSelectionModel.java:\n+\tReorganized import statements.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/font/TextAttribute.java,\n+\tjavax/swing/JComponent.java,\n+\tjavax/swing/JInternalFrame.java,\n+\tjavax/swing/table/TableColumn.java,\n+\tjavax/swing/text/StyleConstants.java:\n+\tReplaced \"new Boolean(boolean)\" with \"Boolean.valueOf(boolean)\".\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/tree/DefaultTreeCellEditor.java,\n+\tjavax/swing/tree/DefaultTreeModel.java,\n+\tjavax/swing/tree/DefaultTreeSelectionModel.java:\n+\tJalopied.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/tree/DefaultTreeCellEditor.java\n+\t(EditorContainer.EditorContainer): Fixed arguments.\n+\t(EditorContainer.EditorContainer): New method.\n+\t(DefaultTextField.DefaultTextField): Fixed arguments, implemented.\n+\t(DefaultTextField.getBorder): Implemented.\n+\t(listenerList): New field.\n+\t(addCellEditorListener): Implemented.\n+\t(removeCellEditorListener): Implemented.\n+\t(getCellEditorListeners): New method.\n+\t* javax/swing/tree/DefaultTreeModel.java\n+\t(addTreeModelListener): Fixed javadoc.\n+\t(removeTreeModelListener): Likewise.\n+\t(getTreeModelListeners): New method.\n+\t(fireTreeNodesChanged): Implemented.\n+\t(fireTreeNodesInserted): Likewise.\n+\t(fireTreeNodesRemoved): Likewise.\n+\t(fireTreeStructureChanged): Likewise.\n+\t(getListeners): Fixed javadoc.\n+\t* javax/swing/tree/DefaultTreeSelectionModel.java\n+\t(addTreeSelectionListener): Implemented.\n+\t(removeTreeSelectionListener): Likewise.\n+\t(fireValueChanged): Likewise.\n+\t(getListeners): Likewise.\n+\t(addPropertyChangeListener): Likewise.\n+\t(removePropertyChangeListener): Likewise.\n+\t(getTreeSelectionListeners): New method.\n+\t(getPropertyChangeListeners): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicScrollBarUI.java\n+\t(maximumThumbSize): Removed static keyword.\n+\t(minimumThumbSize): Likewise.\n+\t* javax/swing/plaf/basic/BasicInternalFrameTitlePane.java\n+\t(CloseAction): Made public.\n+\t(IconifyAction): Likewise.\n+\t(MaximizeAction): Likewise.\n+\t(MoveAction): Likewise.\n+\t(RestoreAction): Likewise.\n+\t(SizeAction): Likewise.\n+\t(SystemMenuBar): Likewise.\n+\t* javax/swing/plaf/basic/BasicSliderUI.java\n+\t(TrackListener): Likewise.\n+\t* javax/swing/plaf/basic/BasicSplitPaneUI.java\n+\t(KeyboardDownRightHandler): Likewise.\n+\t(KeyboardEndHandler): Likewise.\n+\t(KeyboardHomeHandler): Likewise.\n+\t(KeyboardResizeToggleHandler): Likewise.\n+\t(KeyboardUpLeftHandler): Likewise.\n+\t(PropertyHandler): Likewise.\n+\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n+\t(PropertyChangeHandler): Likewise.\n+\t(TabSelectionHandler): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/JTextComponent.java\n+\t(getKeymap): Made public.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JEditorPane.java\n+\t(getStream): Throws IOException.\n+\t(read): Likewise.\n+\t* javax/swing/JRootPane.java\n+\t(createContentPane): Fixed return type.\n+\t* javax/swing/JSpinner.java\n+\t(commitEdit): Throws ParseException.\n+\t* javax/swing/plaf/metal/MetalLookAndFeel.java\n+\t(serialVersionUID): New field.\n+\t* javax/swing/table/TableColumn.java\n+\t(resizedPostingDisableCount): Added @deprecated tag.\n+\t(disableResizedPosting): Likewise.\n+\t(enableResizedPosting): Likewise.\n+\t* javax/swing/text/Document.java\n+\t(TitleProperty): Fixed value.\n+\t* javax/swing/tree/TreeCellEditor.java\n+\t(TreeCellEditor): Extends CellEditor.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JWindow.java\n+\tjavax/swing/SpinnerModel.java\n+\tjavax/swing/Timer.java\n+\tjavax/swing/event/MenuKeyEvent.java\n+\tjavax/swing/plaf/basic/BasicButtonUI.java\n+\tjavax/swing/plaf/basic/BasicIconFactory.java\n+\tjavax/swing/plaf/basic/BasicTabbedPaneUI.java\n+\tjavax/swing/text/AttributeSet.java\n+\tjavax/swing/text/Highlighter.java\n+\tjavax/swing/text/StyleConstants.java\n+\tjavax/swing/tree/TreeCellEditor.java:\n+\tRemoved redundant and reordered modifiers.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicToolTipUI.java:\n+\tReformatted copyright header.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractAction.java,\n+\tjavax/swing/AbstractButton.java,\n+\tjavax/swing/AbstractCellEditor.java,\n+\tjavax/swing/AbstractListModel.java,\n+\tjavax/swing/AbstractSpinnerModel.java,\n+\tjavax/swing/ActionMap.java,\n+\tjavax/swing/BorderFactory.java,\n+\tjavax/swing/Box.java,\n+\tjavax/swing/ButtonModel.java,\n+\tjavax/swing/CellEditor.java,\n+\tjavax/swing/CellRendererPane.java,\n+\tjavax/swing/DefaultBoundedRangeModel.java,\n+\tjavax/swing/DefaultButtonModel.java,\n+\tjavax/swing/DefaultCellEditor.java,\n+\tjavax/swing/DefaultDesktopManager.java,\n+\tjavax/swing/DefaultListCellRenderer.java,\n+\tjavax/swing/DefaultListSelectionModel.java,\n+\tjavax/swing/DefaultSingleSelectionModel.java,\n+\tjavax/swing/GrayFilter.java,\n+\tjavax/swing/InputMap.java,\n+\tjavax/swing/JApplet.java,\n+\tjavax/swing/JCheckBoxMenuItem.java,\n+\tjavax/swing/JColorChooser.java,\n+\tjavax/swing/JComboBox.java,\n+\tjavax/swing/JComponent.java,\n+\tjavax/swing/JDesktopPane.java,\n+\tjavax/swing/JDialog.java,\n+\tjavax/swing/JEditorPane.java,\n+\tjavax/swing/JFileChooser.java,\n+\tjavax/swing/JFormattedTextField.java,\n+\tjavax/swing/JFrame.java,\n+\tjavax/swing/JInternalFrame.java,\n+\tjavax/swing/JLabel.java,\n+\tjavax/swing/JLayeredPane.java,\n+\tjavax/swing/JList.java,\n+\tjavax/swing/JMenu.java,\n+\tjavax/swing/JMenuBar.java,\n+\tjavax/swing/JMenuItem.java,\n+\tjavax/swing/JOptionPane.java,\n+\tjavax/swing/JPanel.java,\n+\tjavax/swing/JPasswordField.java,\n+\tjavax/swing/JPopupMenu.java,\n+\tjavax/swing/JRadioButtonMenuItem.java,\n+\tjavax/swing/JRootPane.java,\n+\tjavax/swing/JSpinner.java,\n+\tjavax/swing/JSplitPane.java,\n+\tjavax/swing/JTabbedPane.java,\n+\tjavax/swing/JTable.java,\n+\tjavax/swing/JTextArea.java,\n+\tjavax/swing/JTextPane.java,\n+\tjavax/swing/JToggleButton.java,\n+\tjavax/swing/JToolBar.java,\n+\tjavax/swing/JToolTip.java,\n+\tjavax/swing/JTree.java,\n+\tjavax/swing/JViewport.java,\n+\tjavax/swing/ListModel.java,\n+\tjavax/swing/LookAndFeel.java,\n+\tjavax/swing/MenuSelectionManager.java,\n+\tjavax/swing/ProgressMonitorInputStream.java,\n+\tjavax/swing/RepaintManager.java,\n+\tjavax/swing/RootPaneContainer.java,\n+\tjavax/swing/ScrollPaneLayout.java,\n+\tjavax/swing/SpringLayout.java,\n+\tjavax/swing/SwingUtilities.java,\n+\tjavax/swing/Timer.java,\n+\tjavax/swing/ToolTipManager.java,\n+\tjavax/swing/UIDefaults.java,\n+\tjavax/swing/UIManager.java,\n+\tjavax/swing/border/MatteBorder.java,\n+\tjavax/swing/colorchooser/AbstractColorChooserPanel.java,\n+\tjavax/swing/colorchooser/ColorSelectionModel.java,\n+\tjavax/swing/colorchooser/DefaultColorSelectionModel.java,\n+\tjavax/swing/colorchooser/DefaultHSBChooserPanel.java,\n+\tjavax/swing/colorchooser/DefaultPreviewPanel.java,\n+\tjavax/swing/colorchooser/DefaultRGBChooserPanel.java,\n+\tjavax/swing/colorchooser/DefaultSwatchChooserPanel.java,\n+\tjavax/swing/event/AncestorEvent.java,\n+\tjavax/swing/event/HyperlinkEvent.java,\n+\tjavax/swing/event/InternalFrameEvent.java,\n+\tjavax/swing/event/MenuDragMouseEvent.java,\n+\tjavax/swing/event/TableColumnModelEvent.java,\n+\tjavax/swing/event/TableModelEvent.java,\n+\tjavax/swing/event/TreeExpansionEvent.java,\n+\tjavax/swing/event/TreeModelEvent.java,\n+\tjavax/swing/event/TreeSelectionEvent.java,\n+\tjavax/swing/event/TreeWillExpandListener.java,\n+\tjavax/swing/event/UndoableEditEvent.java,\n+\tjavax/swing/filechooser/FileView.java,\n+\tjavax/swing/plaf/BorderUIResource.java,\n+\tjavax/swing/plaf/ComponentUI.java,\n+\tjavax/swing/plaf/FileChooserUI.java,\n+\tjavax/swing/plaf/IconUIResource.java,\n+\tjavax/swing/plaf/ListUI.java,\n+\tjavax/swing/plaf/PopupMenuUI.java,\n+\tjavax/swing/plaf/SplitPaneUI.java,\n+\tjavax/swing/plaf/TabbedPaneUI.java,\n+\tjavax/swing/plaf/TextUI.java,\n+\tjavax/swing/plaf/TreeUI.java,\n+\tjavax/swing/plaf/basic/BasicArrowButton.java,\n+\tjavax/swing/plaf/basic/BasicBorders.java,\n+\tjavax/swing/plaf/basic/BasicButtonUI.java,\n+\tjavax/swing/plaf/basic/BasicCheckBoxMenuItemUI.java,\n+\tjavax/swing/plaf/basic/BasicColorChooserUI.java,\n+\tjavax/swing/plaf/basic/BasicComboBoxEditor.java,\n+\tjavax/swing/plaf/basic/BasicComboBoxRenderer.java,\n+\tjavax/swing/plaf/basic/BasicComboBoxUI.java,\n+\tjavax/swing/plaf/basic/BasicComboPopup.java,\n+\tjavax/swing/plaf/basic/BasicDesktopIconUI.java,\n+\tjavax/swing/plaf/basic/BasicDesktopPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicIconFactory.java,\n+\tjavax/swing/plaf/basic/BasicInternalFrameTitlePane.java,\n+\tjavax/swing/plaf/basic/BasicInternalFrameUI.java,\n+\tjavax/swing/plaf/basic/BasicListUI.java,\n+\tjavax/swing/plaf/basic/BasicLookAndFeel.java,\n+\tjavax/swing/plaf/basic/BasicMenuBarUI.java,\n+\tjavax/swing/plaf/basic/BasicMenuItemUI.java,\n+\tjavax/swing/plaf/basic/BasicMenuUI.java,\n+\tjavax/swing/plaf/basic/BasicOptionPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java,\n+\tjavax/swing/plaf/basic/BasicPopupMenuUI.java,\n+\tjavax/swing/plaf/basic/BasicProgressBarUI.java,\n+\tjavax/swing/plaf/basic/BasicRadioButtonMenuItemUI.java,\n+\tjavax/swing/plaf/basic/BasicRootPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicScrollBarUI.java,\n+\tjavax/swing/plaf/basic/BasicSeparatorUI.java,\n+\tjavax/swing/plaf/basic/BasicSliderUI.java,\n+\tjavax/swing/plaf/basic/BasicSpinnerUI.java,\n+\tjavax/swing/plaf/basic/BasicSplitPaneDivider.java,\n+\tjavax/swing/plaf/basic/BasicSplitPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicTabbedPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicTableHeaderUI.java,\n+\tjavax/swing/plaf/basic/BasicTableUI.java,\n+\tjavax/swing/plaf/basic/BasicTextAreaUI.java,\n+\tjavax/swing/plaf/basic/BasicTextFieldUI.java,\n+\tjavax/swing/plaf/basic/BasicTextUI.java,\n+\tjavax/swing/plaf/basic/BasicToolBarSeparatorUI.java,\n+\tjavax/swing/plaf/basic/BasicToolBarUI.java,\n+\tjavax/swing/plaf/basic/BasicToolTipUI.java,\n+\tjavax/swing/plaf/basic/BasicTreeUI.java,\n+\tjavax/swing/plaf/basic/BasicViewportUI.java,\n+\tjavax/swing/plaf/basic/ComboPopup.java,\n+\tjavax/swing/table/AbstractTableModel.java,\n+\tjavax/swing/table/DefaultTableCellRenderer.java,\n+\tjavax/swing/table/DefaultTableColumnModel.java,\n+\tjavax/swing/table/DefaultTableModel.java,\n+\tjavax/swing/table/JTableHeader.java,\n+\tjavax/swing/table/TableCellEditor.java,\n+\tjavax/swing/table/TableCellRenderer.java,\n+\tjavax/swing/table/TableColumn.java,\n+\tjavax/swing/table/TableColumnModel.java,\n+\tjavax/swing/text/AbstractDocument.java,\n+\tjavax/swing/text/Caret.java,\n+\tjavax/swing/text/DefaultCaret.java,\n+\tjavax/swing/text/DefaultEditorKit.java,\n+\tjavax/swing/text/DefaultHighlighter.java,\n+\tjavax/swing/text/EditorKit.java,\n+\tjavax/swing/text/JTextComponent.java,\n+\tjavax/swing/text/LayeredHighlighter.java,\n+\tjavax/swing/text/PasswordView.java,\n+\tjavax/swing/text/SimpleAttributeSet.java,\n+\tjavax/swing/text/StyleConstants.java,\n+\tjavax/swing/text/StyleContext.java,\n+\tjavax/swing/text/StyledEditorKit.java,\n+\tjavax/swing/text/TextAction.java,\n+\tjavax/swing/text/View.java,\n+\tjavax/swing/tree/AbstractLayoutCache.java,\n+\tjavax/swing/tree/DefaultTreeCellRenderer.java,\n+\tjavax/swing/tree/DefaultTreeModel.java,\n+\tjavax/swing/tree/DefaultTreeSelectionModel.java,\n+\tjavax/swing/tree/FixedHeightLayoutCache.java,\n+\tjavax/swing/tree/TreeCellRenderer.java,\n+\tjavax/swing/tree/TreeSelectionModel.java,\n+\tjavax/swing/tree/VariableHeightLayoutCache.java,\n+\tjavax/swing/undo/AbstractUndoableEdit.java,\n+\tjavax/swing/undo/UndoableEditSupport.java:\n+\tImports cleaned up.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Container.java,\n+\tjava/awt/Font.java,\n+\tjava/awt/font/TextLayout.java:\n+\tImports cleaned up.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractButton.java\n+\t(getLabel): Added @deprecated tag.\n+\t(setLabel): Likewise.\n+\t* javax/swing/FocusManager.java\n+\t(disableSwingFocusManager): Likewise.\n+\t(isFocusManagerEnabled): Likewise.\n+\t* javax/swing/JComponent.java\n+\t(isManagingFocus): Added version to @deprecated tag.\n+\t(getNextFocusableComponent): Moved @deprecated tag to bottom of\n+\tjavadoc.\n+\t(getConditionForKeyStroke): Likewise.\n+\t(getActionForKeyStroke): Likewise.\n+\t* javax/swing/JDesktopPane.java\n+\t(LIVE_DRAG_MODE): Added @specnote tag.\n+\t(OUTLINE_DRAG_MODE): Likewise.\n+\t* javax/swing/JInternalFrame.java\n+\t(MENU_BAR_PROPERTY): Fixed value.\n+\t(getMenuBar): Added @deprecated tag.\n+\t(setMenuBar): Likewise.\n+\t* javax/swing/JViewport.java\n+\t(isBackingStoreEnabled): Likewise.\n+\t(setBackingStoreEnabled): Likewise.\n+\t* javax/swing/plaf/basic/BasicDesktopPaneUI.java\n+\t(closeKey): Likewise.\n+\t(maximizeKey): Likewise.\n+\t(minimizeKey): Likewise.\n+\t(navigateKey): Likewise.\n+\t(navigateKey2): Likewise.\n+\t* javax/swing/plaf/basic/BasicInternalFrameUI.java\n+\t(openMenuKey): Likewise.\n+\t* javax/swing/plaf/basic/BasicSplitPaneUI.java\n+\t(keyboardDownRightListener): Likewise.\n+\t(keyboardEndListener): Likewise.\n+\t(keyboardHomeListener): Likewise.\n+\t(keyboardResizeToggleListener): Likewise.\n+\t(keyboardUpLeftListener): Likewise.\n+\t(dividerResizeToggleKey): Likewise.\n+\t(downKey): Likewise.\n+\t(endKey): Likewise.\n+\t(homeKey): Likewise.\n+\t(leftKey): Likewise.\n+\t(rightKey): Likewise.\n+\t(upKey): Likewise.\n+\t(createKeyboardUpLeftListener): Likewise.\n+\t(createKeyboardDownRightListener): Likewise.\n+\t(createKeyboardHomeListener): Likewise.\n+\t(createKeyboardEndListener): Likewise.\n+\t(createKeyboardResizeToggleListener): Likewise.\n+\t(getDividerBorderSize): Likewise.\n+\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n+\t(downKey): Likewise.\n+\t(leftKey): Likewise.\n+\t(rightKey): Likewise.\n+\t(upKey): Likewise.\n+\n+2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_create): Use the\n+\tGTK_TEXT_VIEW macro.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+\t(connect_awt_hook_cb): Mark unused variable unused.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c (selection_get):\n+\tDo the cast right.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkChoicePeer_create): According to\n+\tthe gtk API gtk_combo_box_new_text actually returns a GtkWidget.\n+\tRemove unused var menu.\n+\t(selection_changed): Remove unused value.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkButtonPeer_setNativeBounds): Fix pointer\n+\twarning with using an intermediate variable.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c\n+\t(area_updated): Fix unused var warning for BE archs.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n+\t(Java_gnu_java_awt_peer_gtk_GdkGraphics_connectSignals): Remove unused\n+\tvar.\n+\t(realize_cb): Mark unused variable unused.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n+\t(seek_glyphstring_idx): Fix a C90 warning.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c\n+\t(Java_gnu_java_awt_peer_gtk_GThreadNativeMethodRunner_nativeRun):\n+\tMark unused arguments unused.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n+\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_initState),\n+\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_setGlyphCodes),\n+\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_glyphCharIndex),\n+\t(Java_gnu_java_awt_peer_gtk_GdkGlyphVector_glyphIsHorizontal):\n+\tLikewise.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c\n+\t(Java_gnu_java_awt_peer_gtk_GdkFontMetrics_getPeerFontMetrics),\n+\t(Java_gnu_java_awt_peer_gtk_GdkFontMetrics_getPeerTextMetrics):\n+\tLikewise.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_nativeSetFilenameFilter):\n+\tLikewise.\n+\t(filenameFilterCallback): Remove unused var.\n+\t(handle_response): Declare str_fileName and remove last else statement.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.c:\n+\tNew File.\n+\t(nativeGetNumFontsFamilies) New function.\n+\t(nativeGetFontFamilies) Likewise.\n+\t* gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java\n+\t(getAvailableFontFamilyNames): Implement.\n+\t* Makefile.am (gtk_c_source_files): Add GdkGraphicsEnvironment.c.\n+\t* Makefile.in: Regenerate.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/ClasspathFontPeer.java\n+\t(setStandardAttributes(String,Map)): If size attribute doesn't\n+\texist, default to size 12.  Clamp size value to a minimum of 1.\n+\n+2004-11-30  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* javax/swing/JDialog.java\n+\t(decorated): Likewise.\n+\t* javax/swing/JFrame.java\n+\t(defaultLookAndFeelDecorated): Likewise.\n+\n+2004-11-30  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* javax/swing/plaf/basic/BasicToolBarUI.java\n+\t(offset, regular): Made final.\n+\t* javax/swing/plaf/basic/BasicScrollBarUI.java\n+\t(DECREASE_HIGHLIGHT, INCREASE_HIGHLIGHT, NO_HIGHLIGHT,\n+\tPOSITIVE_SCROLL, NEGATIVE_SCROLL): Made final.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/BitwiseXORComposite.java,\n+\tgnu/java/awt/ClasspathToolkit.java,\n+\tgnu/java/awt/image/XBMDecoder.java,\n+\tgnu/java/awt/peer/GLightweightPeer.java,\n+\tgnu/java/awt/peer/gtk/GdkGlyphVector.java:\n+\tReorganized import statements.\n+\n+2004-11-30  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/awt/Button.java\n+\t(next_button_number): Removed useless initializer.\n+\t* java/awt/Frame.java\n+\t(next_frame_number): Likewise.\n+\t* java/awt/Panel.java\n+\t(next_panel_number): Likewise,\n+\t* java/awt/Scrollbar.java\n+\t(next_scrollbar_number): Likewise.\n+\t* java/awt/TextArea.java\n+\t(next_text_number): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/image/ByteLookupTable.java\n+\t(ByteLookupTable) :Fixed HTML entities in javadocs.\n+\t(lookupPixel): Fix case when dst is null.\n+\t* java/awt/image/ShortLookupTable.java\n+\t(ShortLookupTable) :Fixed HTML entities in javadocs.\n+\t(lookupPixel): Fix case when dst is null.\n+\t* java/awt/image/DataBufferByte.java,\n+\tjava/awt/image/DataBufferDouble.java,\n+\tjava/awt/image/DataBufferFloat.java,\n+\tjava/awt/image/DataBufferInt.java,\n+\tjava/awt/image/DataBufferShort.java,\n+\tjava/awt/image/DataBufferUShort.java:\n+\tFix initialization of bankData in constructors.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n+\t(setNativeBounds): Set GtkEventBox, GtkButton and GtkLabel size\n+\trequests.\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(setNativeBounds): Make package private.  Set size request even\n+\tif GTK parent is NULL.\n+\t* gnu/java/awt/peer/gtk/GtkLabelPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c\n+\t(setNativeBounds): Set GtkEventBox and GtkLabel size requests.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\tWorkaround for bug #17952.\n+\t*  jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(request_frame_extents): Check window->window != NULL.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* jni/gtk-peer/gdkfont.h: Include gtkpeer.h not gtkcairopeer.h.\n+\n+2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c: Use\n+\tnative_text_layout_state_table here.\n+\n+\t* jni/gtk-peer/gdkfont.h: Mark native_text_layout_state_table extern.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n+\t(setChars): Only call pango_itemize() when vec->glyphitems != NULL.\n+\tOnly call pango_shape() when gi->glyphs->num_glyphs > 0.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java:\n+\tMerged import statements.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n+\t(isBufferedImageGraphics): Simplified.\n+\n+2004-11-30  Paul Jenner  <psj.home@ntlworld.com>\n+\n+\t* javax/swing/JTree.java\n+\t(isRootVisible): Fixed typo in method name.\n+\t* javax/swing/JScrollBar.java\n+\t(setValues): Likewise.\n+\t* javax/swing/JScrollPane.java\n+\t(createScrollListener): Call JScrollBar.setValues.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkContainerPeer.java (endValidate):\n+\tDon't call setParentAndBounds on GtkWindowPeers.\n+\n+\t* java/awt/Component.java (static): Don't set default keyboard\n+\tfocus manager.\n+\t* java/awt/KeyboardFocusManager.java\n+\t(getCurrentKeyboardFocusManager): If current keyboard focus\n+\tmanager is null set a default.\n+\n+\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n+\t(gtkWidgetSetBackground): New method.\n+\t(block_expose_events_cb): New function.\n+\t(connectSignals): Block the AWT's expose event processing on\n+\tbutton press and release.\n+\t(gtkSetLabel): Set text on proper widget.\n+\t(gtkWidgetModifyFont): Modify font on proper widget.\n+\t(gtkWidgetSetBackground): Set normal, active and prelight\n+\tcolours.\n+\t(gtkWidgetSetForeground): Set forground colour of proper widget.\n+\t(gtkActivate): Activate the correct widget.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c (clearRect):\n+\tOnly clear rectangle if the backing component is not an event\n+\tbox.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n+\t(beginNativeRepaintID): New variable.\n+\t(endNativeRepaintID): Likewise.\n+\t(gtkInit): Initialize new fields with method IDs.\n+\t* jni/gtk-peer/gtkpeer.h (beginNativeRepaintID): Declare extern.\n+\t(endNativeRepaintID): Likewise.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* javax/swing/JList.java (init): Revert accidental commit.\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c (GdkGraphics):\n+\tCall initComponentGraphics or connectSignals depending on\n+\tcomponent's realization status.\n+\t(realize_cb): New function.\n+\t(initComponentGraphics): New method.\n+\t(connectSignals): New method.\n+\t(clipRect): Return immediately if component is not realized.\n+\t(setClip): Likewise.\n+\t(translate): Likewise.\n+\t(drawImage variants): Return false immediately if component is\n+\tnot realized.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n+\t(connectSignals): New method.\n+\t(GdkGraphics2D): Call initComponentGraphics2D or connectSignals\n+\tdepending on component's realization status.  Move other\n+\tinitialization calls to ...\n+\t(initComponentGraphics2D): New method.\n+\t(realize_cb): New function.\n+\t(cairoSetMatrix): Return immediately if gr is NULL.\n+\t(cairoNewPath): Likewise.\n+\t(cairoRectangle): Likewise.\n+\t(cairoClip): Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(gtkWidgetRepaintArea): Remove method.\n+\t(isRealized): New method.\n+\t(GtkComponentPeer): Move setParent, connectJObject and setCursor\n+\tcalls to setParentAndBounds.  Call setParentAndBounds.\n+\t(setParentAndBounds): New method.\n+\t(setComponentBounds): Return immediately if bounds are all zero.\n+\t(repaint): Remove call to gtkWidgetRepaintArea.  Return\n+\timmediately if requested paint region is 0x0.\n+\t(setCursor): New method.\n+\t(gtkWidgetSetParent): Only set widget's parent if its parent is\n+\tcurrently NULL.\n+\t(setNativeBounds): Only set widget's bounds if it has a parent.\n+\t(connectSignals): Don't call gtk_widget_realize.  Connect\n+\t\"realize\" signal to connect_awt_hook_cb handler.\n+\t* gnu/java/awt/peer/gtk/GtkContainerPeer.java (isValidating):\n+\tNew field.\n+\t(beginValidate): Set isValidating true.\n+\t(endValidate): Set parents and bounds for children first, then\n+\tfor this.  Set isValidating false.\n+\t* gnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n+\t(connectJObject): Remove method.\n+\t(connectSignals): Don't call gtk_widget_realize.\n+\t* gnu/java/awt/peer/gtk/GtkListPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c\n+\t(connectJObject): Remove method.\n+\t(connectSignals): Don't call gtk_widget_realize.\n+\t* gnu/java/awt/peer/gtk/GtkPanelPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.c\n+\t(connectJObject): Remove method.\n+\t* gnu/java/awt/peer/gtk/GtkScrollbarPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c\n+\t(connectJObject): Remove method.\n+\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(create): Don't call gtk_widget_realize.\n+\t(connectJObject): Remove method.\n+\t(connectSignals): Don't call gtk_widget_realize.  Connect\n+\t\"realize\" signal to connect_awt_hook_cb handler.\n+\t(nativeSetBounds): Don't attempt to move GDK window if it is\n+\tNULL.\n+\t* java/awt/Container.java (addImpl): Don't call comp.addNotify\n+\tif peer is not null.\n+\t(validateTree): Create peers for all children before calling\n+\tdoLayout.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n+\t(connectSignals): Don't call gtk_widget_realize.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+\t(connect_awt_hook_cb): New function.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n+\t(initComponentGraphicsID): New variable.\n+\t(initComponentGraphics2DID): Likewise.\n+\t(setCursorID): Likewise.\n+\t(gtkInit): Initialize new fields with method IDs.\n+\t* jni/gtk-peer/gtkpeer.h (initComponentGraphicsID): Declare\n+\textern.\n+\t(initComponentGraphics2DID): Declare extern.\n+\t(setCursorID): Likewise.\n+\t(connect_awt_hook_cb): Declare function.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java,\n+\tgnu/java/awt/peer/gtk/GdkGlyphVector.java,\n+\tgnu/java/awt/peer/gtk/GdkGraphics2D.java,\n+\tgnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java,\n+\tgnu/java/awt/peer/gtk/GdkPixbufDecoder.java,\n+\tgnu/java/awt/peer/gtk/GtkButtonPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkClipboard.java,\n+\tgnu/java/awt/peer/gtk/GtkDialogPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkFontPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkListPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkMenuItemPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkToolkit.java,\n+\tgnu/java/awt/peer/gtk/GtkWindowPeer.java:\n+\tImport statements reworked.  Some little reformattings.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/image/AffineTransformOp.java\n+\t(TYPE_BILINEAR): Initialize with 2.\n+\t* java/awt/print/Printable.java: Jalopied.\n+\t(PAGE_EXISTS): Initialize with 0;\n+\t(NO_SUCH_PAGE): Initialized with 1.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* Makefile.am: Add BufferedImageFilter.java.\n+\t* Makefile.in: Regenerate.\n+\n+2004-11-30  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c \n+\t(install_font_peer): Minor bug fixes to track cairo font semantics.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/BufferedImageFilter.java: Implement.\n+\n+2004-11-30  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* Makefile.am\n+\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c)\n+\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c)\n+\t(gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java)\n+\t(gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java): Remove.\n+\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c)\n+\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c)\n+\t(gnu/java/awt/peer/gtk/GdkTextLayout.java)\n+\t(gnu/java/awt/peer/gtk/GdkFontPeer.java)\n+\t(gnu/java/awt/peer/ClasspathTextLayoutPeer.java): Add\n+\t* Makefile.in: Regenerate.\n+\t* gnu/awt/xlib/XToolkit.java \n+\t(getClasspathTextLayoutPeer): Add stub.\n+\t* gnu/java/awt/ClasspathToolkit.java \n+\t(getClasspathTextLayoutPeer) Add.\n+\t* gnu/java/awt/peer/ClasspathFontPeer.java \n+\t(copyStyleToAttrs)\n+\t(copySizeToAttrs): Make public.\n+\t* gnu/java/awt/peer/ClasspathTextLayoutPeer.java: New file.\n+\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java: Remove.\n+\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java: Remove.\n+\t* gnu/java/awt/peer/gtk/GdkFontMetrics.java: Rewrite.\n+\t* gnu/java/awt/peer/gtk/GdkFontPeer.java: New file.\n+\t* gnu/java/awt/peer/gtk/GdkGlyphVector.java: Adjust type names.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java \n+\t(getFontPeer): New function.\n+\t(drawString): Pass font peer to native side.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n+\t(cairoSetFont)\n+\t(cairoShowGlyphs)\n+\t(PainterThread): Remove.\n+\t(GdkGraphics2D): Set hints during construction.\n+\t(shifted)\n+\t(walkPath)\n+\t(draw)\n+\t(setRenderingHint)\n+\t(setRenderingHints): Reimplement normalization logic.\n+\t(getDefaultHints)\n+\t(updateBufferedImage)\n+\t(isBufferedImageGraphics)\n+\t(updateImagePixels)\n+\t(drawImage): Make final.\n+\t(drawImage): Always paint synchronously.\n+\t(drawString)\n+\t(drawGlyphVector): Rewrite.\n+\t(releasePeerGraphicResource)\n+\t(getPeerTextMetrics)\n+\t(getPeerFontMetrics)\n+\t(drawGdkGlyphVector)\n+\t(drawGdkTextLayout)\n+\t(cairoDrawGdkGlyphVector)\n+\t(cairoDrawGdkTextLayout)\n+\t(cairoDrawString)\n+\t(getFontPeer): New functions.\n+\t* gnu/java/awt/peer/gtk/GdkTextLayout.java: New file.\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java \n+\t(getFontMetrics): Get metrics via toolkit, to hit cache.\n+\t* gnu/java/awt/peer/gtk/GtkTextAreaPeer.java: Use getFontMetrics.\n+\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java (LRUCache): New class.\n+\t(fontCache)\n+\t(metricsCache)\n+\t(imageCache): New members.\n+\t(getFontMetrics)\n+\t(getImage)\n+\t(getClasspathFontPeer): Use caches.\n+\t(getFontPeer): Route through getClasspathFontPeer.\n+\t* java/awt/Font.java (attrsToMap): Remove, adjust ctors.\n+\t* java/awt/font/TextLayout.java: Implement in terms of peer.\n+\t* javax/swing/plaf/basic/BasicSliderUI.java \n+\t(paintThumb): Use polyline rather than polygon.\n+\t* javax/swing/plaf/basic/BasicGraphicsUtils.java: \n+\tUpdate comment but, alas, still do not switch to using TextLayouts.\n+\t* javax/swing/text/Utilities.java (drawTabbedText):\n+\tDraw text run-at-a-time, not char-at-a-time.\n+\t* jni/gtk-peer/gdkfont.h: Publicize some of the font interface, add\n+\tlayout table.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c:\n+\tRemove files.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c: Rewrite to\n+\tincorporate brains of old GdkClasspathFontPeerMetrics.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c: Rewrite to\n+\tincorporate brains of old GdkClasspathFontPeer.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c: New file.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n+\t(drawString): Rewrite to use persistent layout in peer font.\n+\tComment out extraneous gdk_flush calls.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n+\t(metrics_cairo)\n+\t(metrics_surface): New static variables.\n+\t(paint_glyph_run)\n+\t(install_font_peer): New helper functions.\n+\t(releasePeerGraphicResource)\n+\t(getPeerTextMetrics)\n+\t(getPeerFontMetrics)\n+\t(cairoDrawGdkTextLayout)\n+\t(cairoDrawGdkGlyphVector): New native methods.\n+\t(cairoDrawString): Rewrite, leaving layout-based version \n+\tcommented out for the time being.\n+\t* jni/gtk-peer/gtkpeer.h (graphics): Add fields for pango stuff.\n+\n+2004-11-30  David Gilbert  <david.gilbert@object-refinery.com>\n+\n+\t* java/awt/geom/AffineTransform.java:\n+\tFixed javadocs overall.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ComponentColorModel.java: Remove FIXME comment since\n+\tit's correct.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/IndexColorModel.java: Fix use of immutable\n+\tBigIntegers.\n+\n+2004-11-30  Tom Tromey  <tromey@redhat.com>\n+\n+\t* javax/swing/plaf/basic/BasicOptionPaneUI.java (MessageIcon):\n+\tRenamed from 'messageIcon'.\n+\t(errorIcon, infoIcon, warningIcon, questionIcon): Updated.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/RescaleOp.java: Fix formatting.\n+\n+2004-11-30   Olga Rodimina  <rodimina@redhat.com>\n+\n+\t* javax/swing/plaf/basic/BasicComboPopup.java\n+\t(SCROLL_DOWN): made final.\n+\t(SCROLL_UP): made final.\n+\n+2004-11-30   Olga Rodimina  <rodimina@redhat.com>\n+\n+\t* javax/swing/plaf/basic/BasicComboPopup.java:\n+\tAdded javadocs for undocumented fields.\n+\t(show): scroll down to the selected item and \n+\thighlight selected item.\n+\t(startAutoScrolling): Implemented.\n+\t(stopAutoScrolling): Implemented.\n+\t(autoScrollUp): Implemented.\n+\t(autoScrollDown): Implemented.\n+\t(InvocationMouseHandler.mouseReleased): Implemented.\n+\t(InvocationMouseMotionHandler.mouseDragged): Implemented.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/RescaleOp.java: Implement.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/IndexColorModel.java (getRGBs,\n+\tconvertToIntDiscrete): Implement.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/IndexColorModel.java: Add class docs.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/IndexColorModel.java (isValid, getValidPixels):\n+\tImplement.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/MenuBar.java,\n+\tjava/awt/peer/MenuBarPeer.java:\n+\tRevert accidentally commited changes.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/AWTKeyStroke.java,\n+\tjava/awt/Canvas.java,\n+\tjava/awt/CardLayout.java,\n+\tjava/awt/CheckboxMenuItem.java,\n+\tjava/awt/Component.java,\n+\tjava/awt/Container.java,\n+\tjava/awt/DefaultKeyboardFocusManager.java,\n+\tjava/awt/EventDispatchThread.java,\n+\tjava/awt/FileDialog.java,\n+\tjava/awt/FlowLayout.java,\n+\tjava/awt/Font.java,\n+\tjava/awt/Frame.java,\n+\tjava/awt/Graphics2D.java,\n+\tjava/awt/GraphicsEnvironment.java,\n+\tjava/awt/GridBagConstraints.java,\n+\tjava/awt/GridBagLayout.java,\n+\tjava/awt/GridLayout.java,\n+\tjava/awt/Image.java,\n+\tjava/awt/KeyboardFocusManager.java,\n+\tjava/awt/Label.java,\n+\tjava/awt/List.java,\n+\tjava/awt/MediaTracker.java,\n+\tjava/awt/Menu.java,\n+\tjava/awt/MenuBar.java,\n+\tjava/awt/MenuComponent.java,\n+\tjava/awt/Panel.java,\n+\tjava/awt/PopupMenu.java,\n+\tjava/awt/ScrollPane.java,\n+\tjava/awt/Scrollbar.java,\n+\tjava/awt/SystemColor.java,\n+\tjava/awt/TextArea.java,\n+\tjava/awt/TextField.java,\n+\tjava/awt/Toolkit.java,\n+\tjava/awt/Window.java,\n+\tjava/awt/color/ICC_Profile.java,\n+\tjava/awt/datatransfer/DataFlavor.java,\n+\tjava/awt/datatransfer/StringSelection.java,\n+\tjava/awt/datatransfer/SystemFlavorMap.java,\n+\tjava/awt/dnd/Autoscroll.java,\n+\tjava/awt/dnd/DropTarget.java,\n+\tjava/awt/dnd/DropTargetContext.java,\n+\tjava/awt/dnd/DropTargetDragEvent.java,\n+\tjava/awt/dnd/peer/DropTargetContextPeer.java,\n+\tjava/awt/event/AdjustmentEvent.java,\n+\tjava/awt/event/InputEvent.java,\n+\tjava/awt/event/InvocationEvent.java,\n+\tjava/awt/event/KeyEvent.java,\n+\tjava/awt/event/MouseEvent.java,\n+\tjava/awt/font/TextLayout.java,\n+\tjava/awt/geom/GeneralPath.java,\n+\tjava/awt/geom/Point2D.java,\n+\tjava/awt/im/InputContext.java,\n+\tjava/awt/im/spi/InputMethodContext.java,\n+\tjava/awt/image/AffineTransformOp.java,\n+\tjava/awt/image/BufferedImage.java,\n+\tjava/awt/image/ColorModel.java,\n+\tjava/awt/image/ComponentColorModel.java,\n+\tjava/awt/image/CropImageFilter.java,\n+\tjava/awt/image/DirectColorModel.java,\n+\tjava/awt/image/MemoryImageSource.java,\n+\tjava/awt/image/PackedColorModel.java,\n+\tjava/awt/image/PixelGrabber.java,\n+\tjava/awt/image/RasterOp.java,\n+\tjava/awt/peer/MenuBarPeer.java:\n+\tSome fixes for checkstyle. Import statement and modifier order\n+\tredordering.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTable.java\n+\t(setModel): Reimplemented.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTextArea.java\n+\t(append): Re-implemented.\n+\t(insert): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JSpinner.java\n+\t(serialVersionUID): New static field.\n+\t* javax/swing/JToggleButton.java\n+\t(JToggleButton): Fixed email addresses.\n+\t* javax/swing/SpinnerNumberModel.java\n+\t(serialVersionUID): Added javadoc.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTextArea.java:\n+\tDon't use JTextComponent.doc directly. GCJ from java-gui-branch has a\n+\tbug here which is fixed in HEAD ...\n+\n+2004-11-30  Andrew John Hughes  <address@hidden>\n+\n+\t* javax/swing/JTextArea.java: Added additional\n+\tdocumentation.\n+\n+2004-11-30  Andrew John Hughes  <address@hidden>\n+\n+\t* javax/swing/JRadioButton.java:\n+\tImplemented additional constructors and accessibility\n+\tclasses.  Added documentation and fixed a typo in\n+\tAbstractButton.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/IndexColorModel.java (IndexColorModel): Implement\n+\tmissing constructor.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ComponentColorModel.java (ComponentColorModel):\n+\tImplement missing 1.4 constructor.\n+\n+2004-11-30  Andrew John Hughes  <address@hidden>\n+\n+\t* javax/swing/JToggleButton.java:\n+\tImplemented additional constructors and accessibility\n+\tclasses.  Added documentation and fixed a typo in\n+\tAbstractButton.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ColorModel.java (getDataElement,\n+\tgetDataElements): Document since 1.4.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/BandedSampleModel.java: Implement.\n+\t* Makefile.am: Add java/awt/image/BandedSampleModel.java.\n+\t* Makefile.in: Regenerated.\n+\t\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Window.java: Fixed whitespace difference with GNU\n+\tclasspath.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* Makefile.am: Add javax/swing/SpinnerListModel.java.\n+\t* Makefile.in: Regenerated.\n+\n+2004-11-30  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* javax/swing/SpinnerListModel.java, javax/swing/SpinnerModel.java\n+\tImplemented SpinnerListModel.  Added documentation to\n+\tSpinnerModel.\n+\n+2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c \n+\t(init_dpi_conversion_factor): Apply the patch from main correctly.\n+\t2004-06-26  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+2004-11-30  Tom Tromey  <tromey@redhat.com>\n+\n+\tBug 9948.\n+\t* javax/swing/JDesktopPane.java (LIVE_DRAG_MODE): Now final.\n+\t(OUTLINE_DRAG_MODE): LIVE_DRAG_MODE.\n+\t* javax/swing/plaf/basic/BasicSplitPaneUI.java\n+\t(NON_CONTINUOUS_DIVIDER): Now final.  Initialize.\n+\n+2004-11-30  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/awt/Canvas.java\n+\t(AccessibleAWTCanvas): added serialization UID\n+\t* java/awt/Label.java\n+\t(AccessibleAWTLabel): added serialization UID\n+\t* javax/swing/JRootPane.java\n+\t(AccessibleJRootPane): added comment to existing UID\n+\t* javax/swing/JSpinner.java\n+\t(DefaultEditor): added serialization UID\n+\t(NumberEditor): added serialization UID\n+\t* javax/swing/text/html/HTML.java\n+\t(UnknownTag): added serialization UID\n+\t\n+2004-11-30  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* javax/swing/JInternalFrame.java\n+\t(CONTENT_PANE_PROPERTY,FRAME_ICON_PROPERTY,GLASS_PANE_PROPERTY,\n+\tIS_CLOSED_PROPERTY,IS_ICON_PROPERTY,IS_MAXIMUM_PROPERTY,\n+\tIS_SELECTED_PROPERTY,LAYERED_PANE_PROPERTY,MENU_BAR_PROPERTY,\n+\tROOT_PANE_PROPERTY,TITLE_PROPERTY): Made final as per API spec.\n+\t* javax/swing/plaf/basic/BasicInternalFrameTitlePane.java\n+\t(CLOSE_CMD,ICONIFY_CMD,MAXIMIZE_CMD,MOVE_CMD,RESTORE_CMD,SIZE_CMD):\n+\tMade final as per API spec.\n+\n+2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* jni/gtk-peer/gtkpeer.h: Remove duplicated copyright string.\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/geom/Arc2D.java: Reformatted.\n+\t(setArc): Correct documentation to say 'upper left corner'.\n+\t(setArcByTangent,contains,intersects): Implemented.\n+\t(containsAngle): Corrected to handle negative extents.\n+\t(ArcIterator): Set to private.\n+\t(ArcIterator): Corrected for CHORD-type arcs, negative extents.\n+\t(intersects): Fix: Now checks the arc segment.\n+\t(contains): Cleaned up.\n+\t* java/awt/geom/CubicCurve2a.javaD: Fix insideness-test. Reindent.\n+\t(contains): Implemented.\n+\t(intersects): Implemented.\n+\t* java/awt/geom/QuadCurve2D.java: Fix insideness-test. Reindent.\n+\t* java/awt/geom/GeneralPath: Fix insideness-test. Reindent and\n+\tdocument.  Fully (re)implemented using separate xpoints and ypoints\n+\tfloat[] coords.\n+\n+2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* configure.ac: Introduce AC_C_BIGENDIAN_CROSS for WORDS_BIGENDIAN.\n+\t* configure: Regenerate.\n+\t* include/config.h.in: Likewise.\n+\t* jni/gtk-peer/gtkpeer.h (SWAPU32): Introduce macro to swap pixels.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c: Moved SWAPU32\n+\tmacro to gtkpeer.h.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n+\t(Java_gnu_java_awt_peer_gtk_GdkGraphics2D_getImagePixels): Convert\n+\tpixels from  0xBBGGRRAA to 0xAARRGGBB only on Little Endian\n+\tarchitectures.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c (area_updated):\n+\tLikewise.\n+\n+2004-11-30  David Gilbert  <david.gilbert@object-refinery.com>\n+\n+\t* java/awt/SystemColor.java: Fix @link doc entries.\n+\n+2004-11-30  David Gilbert  <david.gilbert@object-refinery.com>\n+\n+\t* java/awt/RenderingHints.java: Documented.\n+\t(RenderingHints): Accept null init Map.\n+\t(putAll): Preprocess map to generate appropriate exceptions.\n+\t(remove): Cast object to Key and remove from hintMap.\n+\n+2004-11-30  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/awt/MenuComponent.java, java/awt/MenuBar.java:\n+\tImplementation of accessibility classes and methods\n+\tfor these two components.\n+\n+2004-11-30  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/awt/KeyboardFocusManager.java:\n+\tAdded missing documentation.\n+\n+2004-11-30  Andrew John Hughes <gnu_andrew@member.fsf.org>\n+\n+\t* java/awt/Label.java, java/awt/Canvas.java:\n+\tAdded accessibility classes to AWT Label and Canvas,\n+\tas well as additional documentation for Canvas.\n+\n+2004-11-30  David Gilbert  <address@bogus.example.com>\n+\n+\t* java/awt/image/DataBuffer.java: Update API documentation.\n+\t* java/awt/image/DataBufferByte.java: Likewise.\n+\t* java/awt/image/DataBufferDouble.java: Likewise.\n+\t* java/awt/image/DataBufferFloat.java: Likewise.\n+\t* java/awt/image/DataBufferInt.java: Likewise.\n+\t* java/awt/image/DataBufferShort.java: Likewise.\n+\t* java/awt/image/DataBufferUShort.java: Likewise.\n+\n+2004-11-30  Dalibor Topic  <robilad@kaffe.org>\n+\n+\t* java/awt/Component.java (postEvent):\n+\tOnly delegate to parent if a parent exists.\n+\tReported by: Stephane Meslin-Weber <steph@tangency.co.uk>\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+\n+\t*java/awt/AWTEventMulticaster.java,\n+\tjava/awt/Adjustable.java,\n+\tjava/awt/Point.java,\n+\tjava/awt/Polygon.java,\n+\tjava/awt/Rectangle.java,\n+\tjava/awt/Shape.java,\n+\tjava/awt/geom/Area.java,\n+\tjava/awt/geom/Ellipse2D.java,\n+\tjava/awt/geom/PathIterator.java,\n+\tjava/awt/geom/Point2D.java,\n+\tjava/awt/geom/Rectangle2D.java,\n+\tjava/lang/Comparable.java,\n+\tjava/util/Arrays.java:\n+\tFixed documentation errors\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ComponentSampleModel.java: Add documentation.\n+\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ComponentSampleModel.java (constructor):\n+\tInitialize numBanks when figuring out the max bank index.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/Raster.java (createPackedRaster): Implement\n+\tMultiPixelPackedSampleModel codepath.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/MultiPixelPackedSampleModel.java: Implement.\n+\t* Makefile.am: Add MultiPixelPackedSampleModel.java.\n+\t* Makefile.in: Regenerate.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/Raster.java (getNumBands): Implement.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/Raster.java\n+\t(createPackedRaster(int,int,int,int,int,Point)): Implement for\n+\tbands>1.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/SinglePixelPackedSampleModel.java\n+\t(SinglePixelPackedSampleModel): Throw exception for unsupported\n+\tdatatype.\n+\n+2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/ColorModel.java (getDataElement): Implemented.\n+\tUpdate javadoc.\n+\t(getDataElements): Add missing version.  Remove bogus version.\n+\tUpdate javadoc.\n+\n+2004-11-30  Olga Rodimina  <rodimina@redhat.com>\n+\n+\t* javax/swing/plaf/basic/BasicComboBoxUI.java:\n+\t(paintCurrentValue): Pass correct parameters to \n+\tgetListCellRendererComponent().\n+\t(ListDataHandler.intervalRemoved): Implemented. \n+\t(PropertyChangeHandler.propertyChange): Handle changes in\n+\tMODEL_CHANGED_PROPERTY of the JComboBox\n+\t* javax/swing/plaf/basic/BasicComboPopup.java:\n+\t(BasicComboPopup): Moved code that configures popup to \n+\tconfigurePopup() and call it instead. \n+\t(firePopupMenuWillBecomeVisible): Implemented.\n+\t(firePopupMenuWillBecomeInvisible): Likewise.\n+\t(firePopupMenuCanceled): Likewise.\n+\t(configureList): Set list's visibleRowCount same as \n+\tcomboBox's visibleRowCount.\n+\t(configurePopup): Implemented.\n+\t(getPopupHeightForRowCount): Get item's from JComboBox's model and \n+\tnot from model of the JList.\n+\t(ListMouseMotionHandler.mouseMoved): Implemented.\n+\t(PropertyChangeHandler.propertyChange): Handles change in the\n+\tJComboBox's model.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JComponent.java\n+\t(isMaximumSizeSet): New method.\n+\t(isMinimumSizeSet): Likewise.\n+\t(isPreferredSizeSet): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JSpinner.java:\n+\tSome Re-formatting.\n+\t(spinner): New field.\n+\t(DefaultEditor): New method.\n+\t(getSpinner): Likewise.\n+\t(NumberEdito): Likewise.\n+\t(getModel): Likewise\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/InputVerifier.java:\n+\tRe-formatted.\n+\t* javax/swing/JComponent.java\n+\t(inputVerifier): New property field.\n+\t(getInputVerifier): New method.\n+\t(setInputVerifier): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JComponent.java\n+\t(JComponent): Added javadoc comment.\n+\t(setBorder): Fire property change eventr.\n+\t(setEnabled): Likewise.\n+\t(setMaximumSize): Likewise.\n+\t(setMinimumSize): Likewise.\n+\t(setPreferredSize): Likewise.\n+\t(setOpaque): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTextField.java\n+\t(action): New field.\n+\t(actionCommand): Likewise.\n+\t(actionPropertyChangeListener): Likewise.\n+\t(setHorizontalAlignment): Abort soon if new value == old value. Fire\n+\tevent before repainting.\n+\t(postActionEvent): New method.\n+\t(getAction): Likewise.\n+\t(setAction): Likewise.\n+\t(getActionCommand): Likewise.\n+\t(setActionCommand): Likewise.\n+\t(createActionPropertyChangeListener): Likewise.\n+\t(configurePropertiesFromAction): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DebugGraphics.java:\n+\tRe-formatted. Fixed some javadocs.\n+\t* javax/swing/JApplet.java\n+\t(rootPaneCheckingEnabled): Renamed from checking.\n+\t* javax/swing/JCheckBox.java\n+\t(BORDER_PAINTED_FLAT_CHANGED_PROPERTY): New statif field.\n+\t* javax/swing/JFrame.java:\n+\tRe-formatted a bit and reordered some methods.\n+\t(rootPaneCheckingEnabled): Renamed from checking.\n+\t(getPreferredSize): Simplified.\n+\t* javax/swing/JTextArea.java\n+\t(getColumnWidth): New method.\n+\t(getLineCount): Likewise.\n+\t(getLineStartOffset): Likewise.\n+\t(getLineEndOffset): Likewise.\n+\t(getLineOfOffset): Likewise.\n+\t(getRowHeight): Likewise.\n+\t(insert): Likewise.\n+\t(replaceRange): Likewise.\n+\t* javax/swing/JTextField.java\n+\t(scrollOffset): new field.\n+\t(getScrollOffset): New method.\n+\t(setScrollOffset): Likewise.\n+\t(getColumnWidth): Likewise.\n+\t* javax/swing/JTree.java\n+\t(ANCHOR_SELECTION_PATH_PROPERTY): New static field.\n+\t(CELL_EDITOR_PROPERTY): Likewise.\n+\t(CELL_RENDERER_PROPERTY): Likewise.\n+\t(EDITABLE_PROPERTY): Likewise.\n+\t(EXPANDS_SELECTED_PATHS_PROPERTY): Likewise.\n+\t(INVOKES_STOP_CELL_EDITING_PROPERTY): Likewise.\n+\t(LARGE_MODEL_PROPERTY): Likewise.\n+\t(LEAD_SELECTION_PATH_PROPERTY): Likewise.\n+\t(ROOT_VISIBLE_PROPERTY): Likewise.\n+\t(ROW_HEIGHT_PROPERTY): Likewise.\n+\t(SCROLLS_ON_EXPAND_PROPERTY): Likewise.\n+\t(SELECTION_MODEL_PROPERTY): Likewise.\n+\t(SHOWS_ROOT_HANDLES_PROPERTY): Likewise.\n+\t(TOGGLE_CLICK_COUNT_PROPERTY): Likewise.\n+\t(TREE_MODEL_PROPERTY): Likewise.\n+\t(VISIBLE_ROW_COUNT_PROPERTY): Likewise.\n+\t(cellEditor): New field.\n+\t(invokesStopCellEditing): Likewise.\n+\t(largeModel): Likewise.\n+\t(rowHeight): Likewise.\n+\t(scrollsOnExpand): Likewise.\n+\t(selectionModel): Likewise.\n+\t(toggleClickCount): Likewise.\n+\t(visibleRowCount): Likewise.\n+\t(setShowsRootHandles): Fixed typo in method name.\n+\t(getCellEditor): New method.\n+\t(setCellEditor): Likewise.\n+\t(getSelectionModel): Likewise.\n+\t(setSelectionModel): Likewise.\n+\t(getVisibleRowCount): Likewise.\n+\t(setVisibleRowCount): Likewise.\n+\t(isLargeModel): Likewise.\n+\t(setLargeModel): Likewise.\n+\t(getRowHeight): Likewise.\n+\t(setRowHeight): Likewise.\n+\t(getInvokesStopCellEditing): Likewise.\n+\t(setInvokesStopCellEditing): Likewise.\n+\t(getToggleClickCount): Likewise.\n+\t(setToggleClickCount): Likewise.\n+\t(getScrollsOnExpand): Likewise.\n+\t(setScrollsOnExpand): Likewise.\n+\t* javax/swing/table/DefaultTableColumnModel.java\n+\t(addColumnModelListener): Fixed javadoc.\n+\t(removeColumnModelListener): Implemented. Fixed javadoc.\n+\t(getColumnModelListeners): New method.\n+\t* javax/swing/table/JTableHeader.java\n+\t(columnModel): Made protected.\n+\t(draggedColumn): Likewise.\n+\t(draggedDistance): Likewise.\n+\t(reorderingAllowed): Likewise.\n+\t(resizingAllowed): Likewise.\n+\t(resizingColumn): Likewise.\n+\t(table): Likewise.\n+\t(updateTableInRealTime): Likewise.\n+\t(createDefaultColumnModel): Renamed from\n+\tcreateDefaultTableColumnModel.\n+\t(setDefaultRenderer): New method.\n+\t* javax/swing/table/TableColumn.java\n+\t(getPropertyChangeListeners): New method.\n+\t* javax/swing/text/DefaultHighlighter.java\n+\t(drawsLayeredHighlights): New field.\n+\t(getDrawsLayeredHighlights): New method.\n+\t(setDrawsLayeredHighlights): Likewise.\n+\t* javax/swing/text/DocumentFilter.java\n+\t(FilterBypass): New inner class.\n+\t(insertString): New method.\n+\t(remove): Likewise.\n+\t(replace): Likewise.\n+\t* javax/swing/text/JTextComponent.java\n+\t(dragEnabled): New field.\n+\t(getSelectedText): New method.\n+\t(getDragEnabled): Likewise.\n+\t(setDragEnabled): Likewise.\n+\t(replaceSelection): Reimplemented.\n+\t* javax/swing/text/NavigationFilter.java\n+\t(FilterBypass): New inner class.\n+\t(NavigationFilter): New method.\n+\t(moveDot): Likewise.\n+\t(setDot): Likewise.\n+\t* javax/swing/text/SimpleAttributeSet.java\n+\t(EMPTY): Made public final.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/SpinnerNumberModel.java\n+\t(getMinimum): New method.\n+\t(setMinimum): Likewise.\n+\t(getMaximum): Likewise.\n+\t(setMaximum): Likewise.\n+\t(getStepSize): Likewise.\n+\t(setStepSize): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JMenu.java\n+\t(getMenuListeners): New method.\n+\t(fireMenuSelected): Simplified.\n+\t* javax/swing/JRootPane.java\n+\t(NONE): New static field.\n+\t(FRAME): Likewise.\n+\t(PLAIN_DIALOG): Likewise.\n+\t(INFORMATION_DIALOG): Likewise.\n+\t(ERROR_DIALOG): Likewise.\n+\t(COLOR_CHOOSER_DIALOG): Likewise.\n+\t(FILE_CHOOSER_DIALOG): Likewise.\n+\t(QUESTION_DIALOG): Likewise.\n+\t(WARNING_DIALOG): Likewise.\n+\t(defaultButton): New field.\n+\t(getDefaultButton): New method.\n+\t(setDefaultButton): Likewise.\n+\t* javax/swing/JScrollPane.java\n+\t(getUI): New method.\n+\t(setUI): Likewise.\n+\t* javax/swing/JTable.java\n+\t(getUI): Javadoc added.\n+\t(setUI): New method.\n+\t* javax/swing/JViewport.java\n+\t(getUI): New method.\n+\t(setUI): Likewise.\n+\t* javax/swing/UIDefaults.java\n+\t(removePropertyChangeListener): Made public.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JApplet.java, javax/swing/JFrame.java:\n+\tRe-indented.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractButton.java:\n+\tLittle re-formatting.\n+\t(changeEvent): Made protected.\n+\t(fireStateChanged): Removed argument.\n+\t(setHorizontalAlignment): Abort method when old value is equal too new\n+\tvalue.\n+\t(setHorizontalTextPosition): Likewise.\n+\t(setVerticalAlignment): Likewise.\n+\t(setVerticalTextPosition): Likewise.\n+\t(setBorderPainted): Likewise.\n+\t(setIcon): Likewise.\n+\t(setText): Likewise.\n+\t(setIconTextGap): Likewise.\n+\t(setMargin): Likewise.\n+\t(setPressedIcon): Likewise.\n+\t(setFocusPainted): Likewise.\n+\t(setDisabledSelectedIcon): Likewise.\n+\t(setRolloverIcon): Likewise.\n+\t(setRolloverSelectedIcon): Likewise.\n+\t(setSelectedIcon): Likewise.\n+\t(setContentAreaFilled): Likewise.\n+\n+2004-11-30  Kim Ho  <kho@redhat.com>\n+\n+\t* javax/swing/plaf/basic/BasicArrowButton.java:\n+\tJalopy. Reimplement.\n+\t* javax/swing/plaf/basic/BasicScrollBarUI.java:\n+\tJalopy.\n+\t(arrowIcon, upIcon, downIcon, leftIcon,\n+\trightIcon): Removed.\n+\t(createIncreaseButton): Use BasicArrowButton.\n+\t(createDecreaseButton): Ditto.\n+\t* javax/swing/plaf/basic/BasicSplitPaneDivider.java:\n+\t(createRightOneTouchButton): Remove button border.\n+\t(createLeftOneTouchButton): Ditto.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JSpinner.java\n+\t(setModel): New method.\n+\t* javax/swing/SpringLayout.java\n+\t(Constraints): May not be final.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GtkClipboard.java,\n+\tjava/awt/datatransfer/Clipboard.java,\n+\tjava/awt/datatransfer/ClipboardOwner.java:\n+\tReformated to make it use our coding standard.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/SpinnerNumberModel.java\n+\t(SpinnerNumberModel): Implements java.io.Serializable.\n+\t(serialVersionUID): New field.\n+\t(SpinnerNumberModel): Added missing @throws tags to javadocs.\n+\t* javax/swing/UIManager.java\n+\t(get): New method.\n+\t(getBoolean): Likewise.\n+\t(getBorder): Likewise.\n+\t(getColor): Likewise.\n+\t(getDimension): Likewise.\n+\t(getFont): Likewise.\n+\t(getIcon): Likewise.\n+\t(getInsets): Likewise.\n+\t(getInt): Likewise.\n+\t(getString): Likewise.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JPasswordField.java:\n+\tReformated. Implemented construtors.\n+\t* javax/swing/plaf/basic/BasicPasswordFieldUI.java\n+\t(create): New method.\n+\t* javax/swing/text/PlainView.java\n+\t(selectedColor): Made package-private to allow access from sub-classes\n+\tin same package too.\n+\t(unselectedColor): Likewise.\n+\t(font): Likewise.\n+\t(drawSelectedText): Make protected.\n+\t(drawUnselectedText): Likewise.\n+\t* javax/swing/text/PasswordView.java: New file.\n+\t* Makefile.am: Added javax/swing/text/PasswordView.java.\n+\t* Makefile.in: Regenerated.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (setMenuBar): Set menu\n+\tbar's width.\n+\t* gnu/java/awt/peer/gtk/GtkMenuBarPeer.java (nativeSetHelpMenu):\n+\tAdd FIXME comment.\n+\t(addHelpMenu): Elide call to nativeSetHelpMenu.\n+\t* java/awt/Menu.java (isTearOff): Rename to tearOff.\n+\t(menuSerializedDataVersion): Initialize to 1.\n+\t(separatorLabel): Mark transient.\n+\t(insert(MenuItem,int)): Implement.\n+\t* java/awt/MenuBar.java (setHelpMenu): Call getPeer to retrieve\n+\tpeer.\n+\t(countMenus): Count help menu.\n+\t* java/awt/MenuComponent.java (nameExplicitlySet, newEventsOnly,\n+\taccessibleContext): Add fields.\n+\t* java/awt/MenuItem.java: Remove event mask FIXME.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c\n+\t(gtkWidgetModifyFont): Only set font if label is non-NULL.\n+\t(setLabel): Don't treat \"-\" specially.\n+\n+2004-11-30  Kim Ho  <kho@redhat.com>\n+\n+\t* javax/swing/colorchooser/DefaultHSBChooserPanel.java:\n+\t(stateChanged): Only update the image and the track if\n+\tthe values are not being adjusted.\n+\t(updateChooser): Grab the new mouse point from the\n+\tspinner values. Update the image and track only if \n+\tthe values are not being adjusted. \n+\t(getHSBValues): New method.\n+\t* javax/swing/colorchooser/DefaultRGBChooserPanel.java:\n+\t(SliderHandler::stateChanged): Changed internalChange \n+\tto updateChange. Set sliderChange.\n+\t(SpinnerHandler::stateChanged): Ditto. Set spinnerChange.\n+\t(spinnerChange): New variable.\n+\t(sliderChange): Ditto.\n+\t(updateChange): Renamed from internalChange.\n+\t(updateChooser): Do not update sliders if the sliders\n+\twere the original source of the change. Ditto for spinners.\n+\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java:\n+\t(mousePress): Don't scroll the JViewport if there will\n+\tbe extra space at the end of the run. Change layout() to\n+\trevalidate().\n+\t(calculateSize): Use the component's width/height unless\n+\tit is smaller than the max tab width/height.\n+\t(calculateTabRects): Subtract the tab run overlay.\n+\t(rotateTabRuns): Don't rotate if there's only one run.\n+\t(layoutContainer): Reuse the viewport point.\n+\t(createLayoutManager): Set the viewport to use no layout.\n+\t(paintTabArea): Don't paint the tabs that are not visible\n+\tto the JViewport.\n+\t(paintContentBorderTopEdge): Check for scroll tab layout before\n+\tlooking for gap.\n+\t(paintContentBorderLeftEdge): Ditto.\n+\t(paintContentBorderBottomEdge): Ditto.\n+\t(paintContentBorderRightEdge): Ditto.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java (gtkWidgetSetFont):\n+\tRename ...\n+\t(gtkWidgetModifyFont): New method.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.c\n+\t(setMenuBarWidth): New method.\n+\t(setBounds): Set the menu bar width.\n+\t(postConfigureEvent): Set the menu bar width if the window's\n+\twidth has changed.\n+\t* gnu/java/awt/peer/gtk/GtkMenuBarPeer.java (GtkMenuBarPeer):\n+\tDon't call create.\n+\t(setFont): New method.\n+\t* gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java (create): New\n+\tmethod.\n+\t(setFont): Likewise.\n+\t(GtkMenuComponentPeer): Call create and setFont.\n+\t* gnu/java/awt/peer/gtk/GtkMenuItemPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c\n+\t(connectSignals): Make package private.\n+\t(gtkWidgetModifyFont): New method.\n+\t(create): Likewise.\n+\t(GtkMenuItemPeer): Don't call create.\n+\t(setFont): New method.\n+\t* java/awt/CheckboxMenuItem.java (addNotify): Fix peer == null\n+\tcondition.\n+\t* java/awt/Container.java (validateTree): Fix comment typos.\n+\t* java/awt/MenuComponent.java (getFont): Return parent's font if\n+\tour font is null.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.c\n+\t(create): Remove call to deprecated\n+\tgtk_check_menu_item_set_show_toggle function.\n+\n+2004-11-30  Hans Boehm <Hans.Boehm@hp.com>\n+\n+\t* java/lang/natObject.cc (LOCK_LOG, LOG): Add debug tracing.\n+\t(Almost everywhere): add LOG calls, fix, add comments.\n+\t(_Jv_MonitorEnter): Replace masking of LOCKED bit with assertion.\n+\tAdd explicit check for LOCKED bit in slow case (PR 16662).\n+\t(_Jv_MonitorExit): Add casts in debug-only code.\n+\tAlways release LOCKED bit before throwing exception.\n+\t(_Jv_ObjectCheckMonitor): Lock may be held if lightweight lock\n+\tisn't.  Handle easy cases without lock acquisition.\n+\t(Object::wait): Use NotifyAll for lock inflation.\n+\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.c\n+\t(gtkFixedMove): Remove method.\n+\n+2004-11-30  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/geom/Area.java: Implemented.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/awt/geom/Arc2D.java (ArcIterator): Make package private.\n+\n+2004-11-30 Sven de Marothy <sven@physto.se>\n+\n+\t* java/awt/geom/Arc2D.java\n+\tReformatted.\n+\t(setArc): Correct documentation to say 'upper left corner'.\n+\t(setArcByTangent,contains,intersects): Implemented.\n+\t(containsAngle): Corrected to handle negative extents.\n+\t(ArcIterator): Set to private.\n+\t(ArcIterator): Corrected for CHORD-type arcs, negative extents.\n+\t* java/awt/geom/Ellipse2D.java\n+\tDocumented.\n+\t(contains,intersects): Implemented.\n+\t* java/awt/geom/Line2D.java\n+\t(linesIntersect): Correct handling of special cases.\n+\n+2004-11-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java (setColor): Use\n+\tColor.BLACK if c == null, don't create new Color object each time.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java (comp): New private\n+\tfield.\n+\t(setColor): Use Color.BLACK when argument null.\n+\t(setComposite): Set this.comp field.\n+\t(getComposite): Return this.comp, or AlphaComposite.SrcOver when null.\n+\t(DrawState.comp): New private field.\n+\t(DrawState.save): Save Composite.\n+\t(DrawState.restore): Restore comp field.\n+\t* java/awt/FontMetrics.java (gRC): New static final private field.\n+\t(getLineMetrics(String, Graphics)): New method.\n+\t(getLineMetrics(String, int, int, Graphics)): Likewise.\n+\t(getLineMetrics(char[], int, int, Graphics)): Likewise.\n+\t(getLineMetrics(CharacterIterator, int, int, Graphics)): Likewise.\n+\t* javax/swing/JMenu.java (JMenu(String, boolean)): Ignore tearoff\n+\targument. PR SWING/17294.\n+\t* javax/swing/plaf/basic/BasicGraphicsUtils.java (): Always use\n+\tthe fall-back code since none of the TextArea methods are really\n+\timplemented now. PR SWING/17296.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n+\t(GdkGlyphVector_setChars): Replace assert() with if block when\n+\tpango_itemize() returns null. PR AWT/17295.\n+\t(GdkGlyphVector_allInkExtents): Likewise when vec->glyphitems is null.\n+\t\n+2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am (gtk_c_source_files): Add\n+\tgnu_java_awt_peer_gtk_GtkFramePeer.c.\n+\t* Makefile.in: Regenerate.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java (getClipBounds): Remove\n+\tcomment.\n+\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n+\t(create): Pack GtkButton in GtkEventBox.\n+\t(connectJObject): Remove.\n+\t(focus_in_cb): New function.\n+\t(focus_out_cb): Likewise.\n+\t(connectSignals): Connect focus-in-event and focus-out-event\n+\tsignals.\n+\t(gtkSetFont): Rename to ...\n+\t(gtkWidgetModifyFont): New method.\n+\t(gtkWidgetRequestFocus): New method.\n+\t* gnu/java/awt/peer/gtk/GtkCheckboxPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c\n+\t(gtkSetFont): Rename to ...\n+\t(gtkWidgetModifyFont): New method.\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(isInRepaint): New field.\n+\t(gtkSetFont): Remove method.\n+\t(addExposeFilter): Likewise.\n+\t(removeExposeFilter): Likewise.\n+\t(gtkWidgetQueueDrawArea): Rename to ...\n+\t(gtkWidgetRepaintArea): New method.\n+\t(beginNativeRepaint): New method.\n+\t(endNativeRepaint): New method.\n+\t(setComponentBounds): Move implementation here from\n+\tGtkComponentPeer.\n+\t(paint): Remove implementation.\n+\t(repaint): Wrap call to gtkWidgetRepaintArea with calls to\n+\tbeginNativeRepaint and endNativeRepaint.\n+\t(setBounds): Use menu bar height in bounds calculation.\n+\t(postExposeEvent): Only post paint event if we're not doing a\n+\tnative repaint.\n+\t(gtkWidgetSetParent): Replace gtk_layout_put with gtk_fixed_put.\n+\t(setNativeBounds): Replace gtk_layout_move with gtk_fixed_move.\n+\t(find_gtk_layout): Remove function.\n+\t(filter_expose_event_handler): Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java (postExposeEvent):\n+\tLikewise.\n+\t* gnu/java/awt/peer/gtk/GtkFileDialogPeer.java\n+\t(setComponentBounds): Call GtkComponentPeer's\n+\tsetComponentBounds.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (getMenuBarHeight):\n+\tNew method.\n+\t(moveLayout): Rename to ...\n+\t(gtkFixedMove): New method.\n+\t(gtkLayoutSetVisible): Rename to ...\n+\t(gtkFixedSetVisible): New method.\n+\t(setMenuBar): Rearrange, to make the three separate cases\n+\tclearer.\n+\t(postExposeEvent): Only post paint event if we're not doing a\n+\tnative repaint.\n+\t* gnu/java/awt/peer/gtk/GtkGenericPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c\n+\t(gtkWidgetModifyFont): New method.\n+\t* gnu/java/awt/peer/gtk/GtkImagePainter.java\n+\t(GtkImagePainter(GtkImage,GdkGraphics,int,int,int,int,Color)):\n+\tCall run directly, rather than spawning a new thread.\n+\t(GtkImagePainter(GtkImage,GdkGraphics,int,int,int,int,int,int,int,int,Color)):\n+\tLikewise.\n+\t* gnu/java/awt/peer/gtk/GtkLabelPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c (gtkSetFont):\n+\tRename to ...\n+\t(gtkWidgetModifyFont): New method.\n+\t(create): Rename ebox to eventbox.\n+\t* gnu/java/awt/peer/gtk/GtkListPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c (gtkSetFont):\n+\tRename to ...\n+\t(gtkWidgetModifyFont): New method.\n+\t* gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java\n+\t(GtkMenuComponentPeer): Set the default font.\n+\t* gnu/java/awt/peer/gtk/GtkTextAreaPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c\n+\t(gtkSetFont): Rename to ...\n+\t(gtkWidgetModifyFont): New method.\n+\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c: Likewise.\n+\t* java/awt/Component.java (locale): Initialize to default\n+\tlocale.\n+\t* java/awt/Container.java (invalidateTree): Make\n+\tpackage-private.\n+\t(paint): Paint self first.\n+\t(setMenuBar): Call invalidateTree.\n+\t* java/awt/Panel.java (dispatchEventImpl): Remove method.\n+\t* java/awt/Window.java (show): Call no-parameter variant of\n+\trequestFocusInWindow.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c (initState):\n+\tRemove special case for window widget.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n+\t(grab_current_drawable): Likewise.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.c\n+\t(create): Replace GtkLayout with GtkFixed.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+\t(pre_event_handler): Remove special cases for GDK_EXPOSE events.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.c: New file.\n+\tMove all GtkFramePeer native method implementations here from\n+\tgnu_java_awt_peer_gtk_GtkWindowPeer.c.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.c (create):\n+\tReplace GtkLayout with GtkFixed.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(find_layout): Remove function.\n+\t(create): Replace GtkLayout with GtkFixed.\n+\t(connectSignals): Remove find_layout call.\n+\t(toBack): Replace XFlush with gdk_flush.\n+\t(toFront): Replace XFlush with gdk_flush.\n+\tMove GtkFramePeer native method implementations to\n+\tgnu_java_awt_peer_gtk_GtkFramePeer.c.\n+\t* jni/gtk-peer/gtkpeer.h: Remove declaration of find_gtk_layout.\n+\n+2004-11-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTextArea.java\n+\t(lineWrap): Renamed from \"wrapping\".\n+\t(wrapStyleWord): NEw field.\n+\t(getLineWrap): Re-edited javadoc comment.\n+\t(setLineWrap): Likewise.\n+\t(getWrapStyleWord): New method.\n+\t(setWrapStyleWord): Likewise.\n+\n 2004-11-29  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* configure: Regenerate for libtool change.\n@@ -2601,6 +5067,29 @@\n \tjava/applet/AudioClip.java:\n \tJalopied and checkstyle clean.\n \n+\t* javax/swing/JCheckBox.java: Reformated.\n+\t(JCheckBox): Fixed all constructors.\n+\t(isBorderPaintedFlat): New method.\n+\t(setBorderPaintedFlat): New method.\n+\t* javax/swing/JEditorPane.java\n+\t(createEditorKitForContentType): Made public.\n+\t(scrollToReference): Likewise.\n+\t* javax/swing/JTextArea.java\n+\t(setLineWrap): Fire property change.\n+\t* javax/swing/JToggleButton.java\n+\t(JToggleButton): New constructor.\n+\t(JToggleButton): Simplified.\n+\t* javax/swing/text/AttributeSet.java\n+\t(FontAttribute): Renamed from FontCharacterAttribute.\n+\t* javax/swing/text/JTextComponent.java\n+\t(KeyBinBinding): Added javadoc.\n+\t(JTextComponent): Likewise.\n+\t(getAccessibleContext): Fixed javadoc.\n+\t* javax/swing/text/View.java\n+\t(View): Added javadoc.\n+\t* javax/swing/text/TabableView.java: New file.\n+\t* Makefile.am: Added javax/swing/text/TabableView.java.\n+\t* Makefile.in: Regenerated.\n 2004-09-23  Mark Wielaard  <mark@klomp.org>\n \n \t* java/util/Collections.java\n@@ -12750,7 +15239,7 @@\n \tReset the queue after transferring its contents.\n \t(push): Start a new dispatch thread if none is running.\n \n-2004-01-16\u00a0 Olga Rodimina <rodimina@redhat.com>\n+2004-01-16  Olga Rodimina <rodimina@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java:\n \t(doPolygon): set fill rule of polygon to \n@@ -12855,14 +15344,14 @@\n \t* gnu/java/awt/peer/gtk/TestAWT.java (DialogWindow): Add WindowAdapter\n \tto handle Window \"Closing\" events.\n  \n-2004-01-13\u00a0 David Jee\u00a0 <djee@redhat.com>\n+2004-01-13  David Jee  <djee@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GtkContainerPeer.java\n \t(setBackground): New method. Children with no explicitly-set\n \tbackground will be repainted with the parent container's new\n \tbackground color.\n \n-2004-01-13\u00a0 David Jee\u00a0 <djee@redhat.com>\n+2004-01-13  David Jee  <djee@redhat.com>\n \n \t* Makefile.am: Add BitwiseXORComposite.java.\n \t* Makefile.in: Regenerated."}, {"sha": "253e190f6dda05d46378654d031ec4f827b991de", "filename": "libjava/Makefile.am", "status": "modified", "additions": 118, "deletions": 7, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -235,9 +235,6 @@ libgcj_la_LINK = $(LIBLINK)\n # Gtk/Cairo JNI sources.\n if GTK_CAIRO\n gtk_cairo_c_source_files = \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n else\n gtk_cairo_c_source_files = \n@@ -246,8 +243,12 @@ endif\n ## Gtk JNI sources.\n gtk_c_source_files = \\\n $(gtk_cairo_c_source_files) \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.c \\\n@@ -260,6 +261,7 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c \\\n@@ -287,9 +289,9 @@ jni/classpath/primlib.c\n \n ## Java sources for Gtk peers.\n gtk_awt_peer_sources = \\\n-gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java \\\n-gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java \\\n+gnu/java/awt/peer/gtk/GdkTextLayout.java \\\n gnu/java/awt/peer/gtk/GdkFontMetrics.java \\\n+gnu/java/awt/peer/gtk/GdkFontPeer.java \\\n gnu/java/awt/peer/gtk/GdkGlyphVector.java \\\n gnu/java/awt/peer/gtk/GdkGraphics.java \\\n gnu/java/awt/peer/gtk/GdkGraphics2D.java \\\n@@ -307,7 +309,6 @@ gnu/java/awt/peer/gtk/GtkContainerPeer.java \\\n gnu/java/awt/peer/gtk/GtkDialogPeer.java \\\n gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.java \\\n gnu/java/awt/peer/gtk/GtkFileDialogPeer.java \\\n-gnu/java/awt/peer/gtk/GtkFontPeer.java \\\n gnu/java/awt/peer/gtk/GtkFramePeer.java\t\\\n gnu/java/awt/peer/gtk/GtkGenericPeer.java \\\n gnu/java/awt/peer/gtk/GtkImage.java \\\n@@ -335,11 +336,96 @@ gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java\n \n gtk_jni_headers = $(patsubst %.java,jniinclude/%.h,$(subst /,_,$(gtk_awt_peer_sources)))\n \n-$(gtk_jni_headers): $(gtk_awt_peer_sources)\n+jniinclude/gnu_java_awt_peer_gtk_GdkFontMetrics.h: gnu/java/awt/peer/gtk/GdkFontMetrics.java\n+jniinclude/gnu_java_awt_peer_gtk_GdkGlyphVector.h: gnu/java/awt/peer/gtk/GdkGlyphVector.java\n+jniinclude/gnu_java_awt_peer_gtk_GdkGraphics.h: gnu/java/awt/peer/gtk/GdkGraphics.java\n+jniinclude/gnu_java_awt_peer_gtk_GdkGraphics2D.h: gnu/java/awt/peer/gtk/GdkGraphics2D.java\n+jniinclude/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.h: gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java\n+jniinclude/gnu_java_awt_peer_gtk_GdkPixbufDecoder.h: gnu/java/awt/peer/gtk/GdkPixbufDecoder.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkButtonPeer.h: gnu/java/awt/peer/gtk/GtkButtonPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkCanvasPeer.h: gnu/java/awt/peer/gtk/GtkCanvasPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.h: gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.h: gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkCheckboxPeer.h: gnu/java/awt/peer/gtk/GtkCheckboxPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkChoicePeer.h: gnu/java/awt/peer/gtk/GtkChoicePeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkClipboard.h: gnu/java/awt/peer/gtk/GtkClipboard.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkComponentPeer.h: gnu/java/awt/peer/gtk/GtkComponentPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkContainerPeer.h: gnu/java/awt/peer/gtk/GtkContainerPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkDialogPeer.h: gnu/java/awt/peer/gtk/GtkDialogPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.h: gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkFileDialogPeer.h: gnu/java/awt/peer/gtk/GtkFileDialogPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkFontPeer.h: gnu/java/awt/peer/gtk/GtkFontPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkFramePeer.h: gnu/java/awt/peer/gtk/GtkFramePeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkGenericPeer.h: gnu/java/awt/peer/gtk/GtkGenericPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkImage.h: gnu/java/awt/peer/gtk/GtkImage.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkImagePainter.h: gnu/java/awt/peer/gtk/GtkImagePainter.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkLabelPeer.h: gnu/java/awt/peer/gtk/GtkLabelPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkListPeer.h: gnu/java/awt/peer/gtk/GtkListPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkMainThread.h: gnu/java/awt/peer/gtk/GtkMainThread.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkMenuBarPeer.h: gnu/java/awt/peer/gtk/GtkMenuBarPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.h: gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkMenuItemPeer.h: gnu/java/awt/peer/gtk/GtkMenuItemPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkMenuPeer.h: gnu/java/awt/peer/gtk/GtkMenuPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkOffScreenImage.h: gnu/java/awt/peer/gtk/GtkOffScreenImage.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkPanelPeer.h: gnu/java/awt/peer/gtk/GtkPanelPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.h: gnu/java/awt/peer/gtk/GtkPopupMenuPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkScrollPanePeer.h: gnu/java/awt/peer/gtk/GtkScrollPanePeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkScrollbarPeer.h: gnu/java/awt/peer/gtk/GtkScrollbarPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkTextAreaPeer.h: gnu/java/awt/peer/gtk/GtkTextAreaPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkTextComponentPeer.h: gnu/java/awt/peer/gtk/GtkTextComponentPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkTextFieldPeer.h: gnu/java/awt/peer/gtk/GtkTextFieldPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkToolkit.h: gnu/java/awt/peer/gtk/GtkToolkit.java\n+jniinclude/gnu_java_awt_peer_gtk_GtkWindowPeer.h: gnu/java/awt/peer/gtk/GtkWindowPeer.java\n+jniinclude/gnu_java_awt_peer_gtk_GThreadMutex.h: gnu/java/awt/peer/gtk/GThreadMutex.java\n+jniinclude/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.h: gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java\n+jniinclude/gnu_java_awt_peer_gtk_GdkTextLayout.h: gnu/java/awt/peer/gtk/GdkTextLayout.java\n+jniinclude/gnu_java_awt_peer_gtk_GdkFontPeer.h: gnu/java/awt/peer/gtk/GdkFontPeer.java\n+\n+$(gtk_jni_headers): %.h:\n \t@input=`echo $@ | sed -e 's,jniinclude/,,' -e 's,_,.,g' -e 's,.h$$,,'`; \\\n \techo \"$(GCJH) -jni -d jniinclude -classpath '' -bootclasspath $(top_builddir) $$input\"; \\\n \t$(GCJH) -jni -d jniinclude -classpath '' -bootclasspath $(top_builddir) $$input\n \n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkFontMetrics.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkFontPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGlyphVector.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGraphics2D.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGraphics.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkPixbufDecoder.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkTextLayout.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkButtonPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkCanvasPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkCheckboxPeer.h $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkComponentPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkChoicePeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkClipboard.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkComponentPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkFileDialogPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkFramePeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkGenericPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkImagePainter.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkLabelPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkListPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMainThread.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuBarPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuItemPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkPanelPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkScrollbarPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkScrollPanePeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkTextAreaPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkTextComponentPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkTextFieldPeer.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkToolkit.h\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkWindowPeer.h\n+\n+\n ## For the peer library, DEPENDENCIES need to come before OBJECTS so\n ## that JNI headers are built before JNI C files.\n $(lib_gnu_java_awt_peer_gtk_la_OBJECTS): $(lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES)\n@@ -1046,11 +1132,25 @@ gnu/java/awt/ClasspathToolkit.java \\\n gnu/java/awt/EmbeddedWindow.java \\\n gnu/java/awt/EmbeddedWindowSupport.java \\\n gnu/java/awt/EventModifier.java \\\n+gnu/java/awt/color/CieXyzConverter.java \\\n+gnu/java/awt/color/ClutProfileConverter.java \\\n+gnu/java/awt/color/ColorLookUpTable.java \\\n+gnu/java/awt/color/ColorSpaceConverter.java \\\n+gnu/java/awt/color/GrayProfileConverter.java \\\n+gnu/java/awt/color/GrayScaleConverter.java \\\n+gnu/java/awt/color/LinearRGBConverter.java \\\n+gnu/java/awt/color/ProfileHeader.java \\\n+gnu/java/awt/color/PyccConverter.java \\\n+gnu/java/awt/color/RgbProfileConverter.java \\\n+gnu/java/awt/color/SrgbConverter.java \\\n+gnu/java/awt/color/TagEntry.java \\\n+gnu/java/awt/color/ToneReproductionCurve.java \\\n gnu/java/awt/image/ImageDecoder.java \\\n gnu/java/awt/image/XBMDecoder.java \\\n gnu/java/awt/peer/EmbeddedWindowPeer.java \\\n gnu/java/awt/peer/GLightweightPeer.java \\\n gnu/java/awt/peer/ClasspathFontPeer.java \\\n+gnu/java/awt/peer/ClasspathTextLayoutPeer.java \\\n gnu/java/beans/editors/ColorEditor.java\t\\\n gnu/java/beans/editors/FontEditor.java \\\n gnu/java/beans/editors/NativeBooleanEditor.java\t\\\n@@ -1230,12 +1330,17 @@ java/awt/geom/CubicCurve2D.java \\\n java/awt/geom/FlatteningPathIterator.java \\\n java/awt/geom/GeneralPath.java \\\n java/awt/geom/QuadCurve2D.java \\\n+java/awt/image/BandCombineOp.java \\\n+java/awt/image/BandedSampleModel.java \\\n java/awt/image/AffineTransformOp.java \\\n java/awt/image/BufferedImage.java \\\n+java/awt/image/BufferedImageFilter.java \\\n java/awt/image/ByteLookupTable.java \\\n+java/awt/image/ColorConvertOp.java \\\n java/awt/image/ColorModel.java \\\n java/awt/image/ComponentColorModel.java \\\n java/awt/image/ComponentSampleModel.java \\\n+java/awt/image/ConvolveOp.java \\\n java/awt/image/DataBuffer.java \\\n java/awt/image/DataBufferByte.java \\\n java/awt/image/DataBufferDouble.java \\\n@@ -1249,11 +1354,14 @@ java/awt/image/ImageObserver.java \\\n java/awt/image/ImageProducer.java \\\n java/awt/image/IndexColorModel.java \\\n java/awt/image/Kernel.java \\\n+java/awt/image/LookupOp.java \\\n java/awt/image/LookupTable.java \\\n+java/awt/image/MultiPixelPackedSampleModel.java \\\n java/awt/image/PackedColorModel.java \\\n java/awt/image/PixelInterleavedSampleModel.java \\\n java/awt/image/Raster.java \\\n java/awt/image/RasterOp.java \\\n+java/awt/image/RescaleOp.java \\\n java/awt/image/SampleModel.java \\\n java/awt/image/ShortLookupTable.java \\\n java/awt/image/SinglePixelPackedSampleModel.java \\\n@@ -1491,6 +1599,7 @@ javax/swing/plaf/basic/BasicTableUI.java \\\n javax/swing/plaf/basic/BasicTableHeaderUI.java \\\n javax/swing/plaf/basic/BasicTextAreaUI.java \\\n javax/swing/plaf/basic/BasicTextFieldUI.java \\\n+javax/swing/plaf/basic/BasicTextPaneUI.java \\\n javax/swing/plaf/basic/BasicTextUI.java \\\n javax/swing/plaf/basic/BasicToggleButtonUI.java \\\n javax/swing/plaf/basic/BasicToolBarSeparatorUI.java \\\n@@ -1614,6 +1723,7 @@ javax/swing/ListModel.java \\\n javax/swing/ListSelectionModel.java \\\n javax/swing/LookAndFeel.java \\\n javax/swing/Scrollable.java \\\n+javax/swing/SpinnerListModel.java \\\n javax/swing/SpinnerModel.java \\\n javax/swing/SpinnerNumberModel.java \\\n javax/swing/Spring.java \\\n@@ -1690,6 +1800,7 @@ javax/swing/text/Keymap.java \\\n javax/swing/text/LayeredHighlighter.java \\\n javax/swing/text/MutableAttributeSet.java \\\n javax/swing/text/NavigationFilter.java \\\n+javax/swing/text/PasswordView.java \\\n javax/swing/text/PlainDocument.java \\\n javax/swing/text/PlainView.java \\\n javax/swing/text/Position.java \\"}, {"sha": "11bdeada50b3c93d6fdde0200ac6d38618e1be69", "filename": "libjava/Makefile.in", "status": "modified", "additions": 420, "deletions": 101, "changes": 521, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "a1d2440eef5112fb14c8e44db0e5c77d8bf0b4c0", "filename": "libjava/gnu/awt/xlib/XToolkit.java", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -19,13 +19,15 @@\n import java.net.*;\n import java.awt.datatransfer.Clipboard;\n import java.io.InputStream;\n+import java.text.AttributedString;\n import java.util.Map;\n import java.util.Properties;\n import gnu.gcj.xlib.Display;\n import gnu.gcj.xlib.Screen;\n import gnu.gcj.xlib.Visual;\n import gnu.java.awt.ClasspathToolkit;\n import gnu.java.awt.peer.ClasspathFontPeer;\n+import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n \n public class XToolkit extends ClasspathToolkit\n {\n@@ -400,6 +402,12 @@ public ClasspathFontPeer getClasspathFontPeer (String name, Map attrs)\n \n     return new XFontPeer (name,style,size);\n   }\n+\n+  public ClasspathTextLayoutPeer \n+  getClasspathTextLayoutPeer (AttributedString str, FontRenderContext frc)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n   \n   /** Creates a font, reading the glyph definitions from a stream.\n    *"}, {"sha": "6a05ee6c51b95c9cb4bf4bee6198d7175a63f943", "filename": "libjava/gnu/java/awt/BitwiseXORComposite.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2FBitwiseXORComposite.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2FBitwiseXORComposite.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FBitwiseXORComposite.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* BitwiseXORComposite.java -- Composite for emulating old-style XOR.\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,6 @@\n import java.awt.Color;\n import java.awt.Composite;\n import java.awt.CompositeContext;\n-import java.awt.Graphics;\n import java.awt.Rectangle;\n import java.awt.RenderingHints;\n import java.awt.image.ColorModel;"}, {"sha": "c2492315b089539fe893c9f18b1799029eeea840", "filename": "libjava/gnu/java/awt/ClasspathToolkit.java", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* ClasspathToolkit.java -- Abstract superclass for Classpath toolkits.\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,27 +38,27 @@\n \n package gnu.java.awt;\n \n+import gnu.java.awt.peer.ClasspathFontPeer;\n+import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n+\n import java.awt.Image;\n import java.awt.Dimension;\n import java.awt.DisplayMode;\n import java.awt.Font;\n-import java.awt.FontFormatException;\n import java.awt.FontMetrics;\n import java.awt.GraphicsEnvironment;\n-import java.awt.HeadlessException;\n import java.awt.Toolkit;\n+import java.awt.font.FontRenderContext;\n import java.awt.image.ColorModel;\n import java.awt.image.ImageProducer;\n import java.io.File;\n import java.io.InputStream;\n-import java.io.IOException;\n import java.net.MalformedURLException;\n import java.net.URL;\n+import java.text.AttributedString;\n import java.util.HashMap;\n import java.util.Map;\n \n-import gnu.java.awt.peer.ClasspathFontPeer;\n-\n \n /**\n  * An abstract superclass for Classpath toolkits.\n@@ -171,6 +171,9 @@ public FontMetrics getFontMetrics(Font font)\n \n   public abstract ClasspathFontPeer getClasspathFontPeer (String name, Map attrs); \n \n+  public abstract ClasspathTextLayoutPeer \n+  getClasspathTextLayoutPeer (AttributedString str, FontRenderContext frc); \n+\n \n   /** \n    * Creates a {@link Font}, in a platform-specific manner."}, {"sha": "ee183cd64bba294564b7852e0a4016c7fa8359fd", "filename": "libjava/gnu/java/awt/color/CieXyzConverter.java", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FCieXyzConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FCieXyzConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FCieXyzConverter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,74 @@\n+/* CieXyzConverter.java -- CieXyz conversion class\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+\n+/**\n+ * CieXyzConverter - converts to/from a D50-relative CIE XYZ color space.\n+ * \n+ * The sRGB<->CIE XYZ conversions in SrgbConverter are used.\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class CieXyzConverter implements ColorSpaceConverter\n+{\n+  public float[] toCIEXYZ(float[] in)\n+  {\n+    float[] out = new float[3];\n+    System.arraycopy(in, 0, out, 0, 3);\n+    return out;\n+  }\n+\n+  public float[] fromCIEXYZ(float[] in)\n+  {\n+    float[] out = new float[3];\n+    System.arraycopy(in, 0, out, 0, 3);\n+    return out;\n+  }\n+\n+  public float[] toRGB(float[] in)\n+  {\n+    return SrgbConverter.XYZtoRGB(in);\n+  }\n+\n+  public float[] fromRGB(float[] in)\n+  {\n+    return SrgbConverter.RGBtoXYZ(in);\n+  }\n+}"}, {"sha": "d33a6887eec0cb65577df2b40ec921a76f717dc5", "filename": "libjava/gnu/java/awt/color/ClutProfileConverter.java", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FClutProfileConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FClutProfileConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FClutProfileConverter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,154 @@\n+/* ClutProfileConverter.java -- Conversion routines for CLUT-Based profiles\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_Profile;\n+\n+\n+/**\n+ * ClutProfileConverter - conversions through a CLUT-based profile\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class ClutProfileConverter implements ColorSpaceConverter\n+{\n+  private ColorLookUpTable toPCS;\n+  private ColorLookUpTable fromPCS;\n+  private int nChannels;\n+\n+  public ClutProfileConverter(ICC_Profile profile)\n+  {\n+    nChannels = profile.getNumComponents();\n+\n+    // Sun does not specifiy which rendering intent should be used,\n+    // neither does the ICC v2 spec really. \n+    // Try intent 0\n+    try\n+      {\n+\ttoPCS = new ColorLookUpTable(profile, ICC_Profile.icSigAToB0Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\ttoPCS = null;\n+      }\n+\n+    try\n+      {\n+\tfromPCS = new ColorLookUpTable(profile, ICC_Profile.icSigBToA0Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\tfromPCS = null;\n+      }\n+\n+    if (toPCS != null || fromPCS != null)\n+      return;\n+\n+    // If no intent 0 clut is available, look for a intent 1 clut.\n+    try\n+      {\n+\ttoPCS = new ColorLookUpTable(profile, ICC_Profile.icSigAToB1Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\ttoPCS = null;\n+      }\n+\n+    try\n+      {\n+\tfromPCS = new ColorLookUpTable(profile, ICC_Profile.icSigBToA1Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\tfromPCS = null;\n+      }\n+\n+    if (toPCS != null || fromPCS != null)\n+      return;\n+\n+    // Last shot.. intent 2 CLUT.\n+    try\n+      {\n+\ttoPCS = new ColorLookUpTable(profile, ICC_Profile.icSigAToB2Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\ttoPCS = null;\n+      }\n+\n+    try\n+      {\n+\tfromPCS = new ColorLookUpTable(profile, ICC_Profile.icSigBToA2Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\tfromPCS = null;\n+      }\n+\n+    if (toPCS == null && fromPCS == null)\n+      throw new IllegalArgumentException(\"No CLUTs in profile!\");\n+  }\n+\n+  public float[] toCIEXYZ(float[] in)\n+  {\n+    if (toPCS != null)\n+      return toPCS.lookup(in);\n+    else\n+      return new float[3];\n+  }\n+\n+  public float[] toRGB(float[] in)\n+  {\n+    return SrgbConverter.XYZtoRGB(toCIEXYZ(in));\n+  }\n+\n+  public float[] fromCIEXYZ(float[] in)\n+  {\n+    if (fromPCS != null)\n+      return fromPCS.lookup(in);\n+    else\n+      return new float[nChannels];\n+  }\n+\n+  public float[] fromRGB(float[] in)\n+  {\n+    return fromCIEXYZ(SrgbConverter.RGBtoXYZ(in));\n+  }\n+}"}, {"sha": "138d27adb351ba47c06fadf6cd71fc622acf3225", "filename": "libjava/gnu/java/awt/color/ColorLookUpTable.java", "status": "added", "additions": 430, "deletions": 0, "changes": 430, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FColorLookUpTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FColorLookUpTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FColorLookUpTable.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,430 @@\n+/* ColorLookUpTable.java -- ICC v2 CLUT\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.nio.ByteBuffer;\n+\n+\n+/**\n+ * ColorLookUpTable handles color lookups through a color lookup table,\n+ * as defined in the ICC specification.\n+ * Both 'mft2' and 'mft1' (8 and 16-bit) type CLUTs are handled.\n+ *\n+ * This will have to be updated later for ICC 4.0.0\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class ColorLookUpTable\n+{\n+  /**\n+   * CIE 1931 D50 white point (in Lab coordinates)\n+   */\n+  private static float[] D50 = { 0.96422f, 1.00f, 0.82521f };\n+\n+  /**\n+   * Number of input/output channels\n+   */\n+  int nIn;\n+\n+  /**\n+   * Number of input/output channels\n+   */\n+  int nOut;\n+  int nInTableEntries; // Number of input table entries\n+  int nOutTableEntries; // Number of output table entries\n+  int gridpoints; // Number of gridpoints\n+  int nClut; // This is nOut*(gridpoints**nIn)\n+  double[][] inTable; // 1D input table ([channel][table])\n+  short[][] outTable; // 1D input table ([channel][table])\n+  double[] clut; // The color lookup table\n+  float[][] inMatrix; // input matrix (XYZ only)\n+  boolean useMatrix; // Whether to use the matrix or not.\n+  int[] multiplier;\n+  int[] offsets; // Hypercube offsets \n+  boolean inputLab; // Set if the CLUT input CS is Lab\n+  boolean outputLab; // Set if the CLUT output CS is Lab\n+\n+  /**\n+   * Constructor\n+   * Requires a profile file to get the CLUT from and the tag of the\n+   * CLUT to create. (icSigXToYZTag where X,Y = [A | B], Z = [0,1,2])\n+   */\n+  public ColorLookUpTable(ICC_Profile profile, int tag)\n+  {\n+    useMatrix = false;\n+\n+    switch (tag)\n+      {\n+      case ICC_Profile.icSigAToB0Tag:\n+      case ICC_Profile.icSigAToB1Tag:\n+      case ICC_Profile.icSigAToB2Tag:\n+\tif (profile.getColorSpaceType() == ColorSpace.TYPE_XYZ)\n+\t  useMatrix = true;\n+\tinputLab = false;\n+\toutputLab = (profile.getPCSType() == ColorSpace.TYPE_Lab);\n+\tbreak;\n+      case ICC_Profile.icSigBToA0Tag:\n+      case ICC_Profile.icSigBToA1Tag:\n+      case ICC_Profile.icSigBToA2Tag:\n+\tif (profile.getPCSType() == ColorSpace.TYPE_XYZ)\n+\t  useMatrix = true;\n+\tinputLab = (profile.getPCSType() == ColorSpace.TYPE_Lab);\n+\toutputLab = false;\n+\tbreak;\n+      default:\n+\tthrow new IllegalArgumentException(\"Not a clut-type tag.\");\n+      }\n+\n+    byte[] data = profile.getData(tag);\n+    if (data == null)\n+      throw new IllegalArgumentException(\"Unsuitable profile, does not contain a CLUT.\");\n+\n+    // check 'mft'\n+    if (data[0] != 0x6d || data[1] != 0x66 || data[2] != 0x74)\n+      throw new IllegalArgumentException(\"Unsuitable profile, invalid CLUT data.\");\n+\n+    if (data[3] == 0x32)\n+      readClut16(data);\n+    else if (data[3] == 0x31)\n+      readClut8(data);\n+    else\n+      throw new IllegalArgumentException(\"Unknown/invalid CLUT type.\");\n+  }\n+\n+  /**\n+   * Loads a 16-bit CLUT into our data structures\n+   */\n+  private void readClut16(byte[] data)\n+  {\n+    ByteBuffer buf = ByteBuffer.wrap(data);\n+\n+    nIn = data[8] & (0xFF);\n+    nOut = data[9] & (0xFF);\n+    nInTableEntries = buf.getShort(48);\n+    nOutTableEntries = buf.getShort(50);\n+    gridpoints = data[10] & (0xFF);\n+\n+    inMatrix = new float[3][3];\n+    for (int i = 0; i < 3; i++)\n+      for (int j = 0; j < 3; j++)\n+\tinMatrix[i][j] = ((float) (buf.getInt(12 + (i * 3 + j) * 4))) / 65536.0f;\n+\n+    inTable = new double[nIn][nInTableEntries];\n+    for (int channel = 0; channel < nIn; channel++)\n+      for (int i = 0; i < nInTableEntries; i++)\n+\tinTable[channel][i] = (double) ((int) buf.getShort(52\n+\t                                                   + (channel * nInTableEntries\n+\t                                                   + i) * 2)\n+\t                      & (0xFFFF)) / 65536.0;\n+\n+    nClut = nOut;\n+    multiplier = new int[nIn];\n+    multiplier[nIn - 1] = nOut;\n+    for (int i = 0; i < nIn; i++)\n+      {\n+\tnClut *= gridpoints;\n+\tif (i > 0)\n+\t  multiplier[nIn - i - 1] = multiplier[nIn - i] * gridpoints;\n+      }\n+\n+    int clutOffset = 52 + nIn * nInTableEntries * 2;\n+    clut = new double[nClut];\n+    for (int i = 0; i < nClut; i++)\n+      clut[i] = (double) ((int) buf.getShort(clutOffset + i * 2) & (0xFFFF)) / 65536.0;\n+\n+    outTable = new short[nOut][nOutTableEntries];\n+    for (int channel = 0; channel < nOut; channel++)\n+      for (int i = 0; i < nOutTableEntries; i++)\n+\toutTable[channel][i] = buf.getShort(clutOffset\n+\t                                    + (nClut\n+\t                                    + channel * nOutTableEntries + i) * 2);\n+\n+    // calculate the hypercube corner offsets\n+    offsets = new int[(1 << nIn)];\n+    offsets[0] = 0;\n+    for (int j = 0; j < nIn; j++)\n+      {\n+\tint factor = 1 << j;\n+\tfor (int i = 0; i < factor; i++)\n+\t  offsets[factor + i] = offsets[i] + multiplier[j];\n+      }\n+  }\n+\n+  /**\n+   * Loads a 8-bit CLUT into our data structures.\n+   */\n+  private void readClut8(byte[] data)\n+  {\n+    ByteBuffer buf = ByteBuffer.wrap(data);\n+\n+    nIn = (data[8] & (0xFF));\n+    nOut = (data[9] & (0xFF));\n+    nInTableEntries = 256; // always 256\n+    nOutTableEntries = 256; // always 256\n+    gridpoints = (data[10] & (0xFF));\n+\n+    inMatrix = new float[3][3];\n+    for (int i = 0; i < 3; i++)\n+      for (int j = 0; j < 3; j++)\n+\tinMatrix[i][j] = ((float) (buf.getInt(12 + (i * 3 + j) * 4))) / 65536.0f;\n+\n+    inTable = new double[nIn][nInTableEntries];\n+    for (int channel = 0; channel < nIn; channel++)\n+      for (int i = 0; i < nInTableEntries; i++)\n+\tinTable[channel][i] = (double) ((int) buf.get(48\n+\t                                              + (channel * nInTableEntries\n+\t                                              + i)) & (0xFF)) / 255.0;\n+\n+    nClut = nOut;\n+    multiplier = new int[nIn];\n+    multiplier[nIn - 1] = nOut;\n+    for (int i = 0; i < nIn; i++)\n+      {\n+\tnClut *= gridpoints;\n+\tif (i > 0)\n+\t  multiplier[nIn - i - 1] = multiplier[nIn - i] * gridpoints;\n+      }\n+\n+    int clutOffset = 48 + nIn * nInTableEntries;\n+    clut = new double[nClut];\n+    for (int i = 0; i < nClut; i++)\n+      clut[i] = (double) ((int) buf.get(clutOffset + i) & (0xFF)) / 255.0;\n+\n+    outTable = new short[nOut][nOutTableEntries];\n+    for (int channel = 0; channel < nOut; channel++)\n+      for (int i = 0; i < nOutTableEntries; i++)\n+\toutTable[channel][i] = (short) (buf.get(clutOffset + nClut\n+\t                                        + channel * nOutTableEntries\n+\t                                        + i) * 257);\n+\n+    // calculate the hypercube corner offsets\n+    offsets = new int[(1 << nIn)];\n+    offsets[0] = 0;\n+    for (int j = 0; j < nIn; j++)\n+      {\n+\tint factor = 1 << j;\n+\tfor (int i = 0; i < factor; i++)\n+\t  offsets[factor + i] = offsets[i] + multiplier[j];\n+      }\n+  }\n+\n+  /**\n+   * Performs a lookup through the Color LookUp Table.\n+   * If the CLUT tag type is AtoB the conversion will be from the device\n+   * color space to the PCS, BtoA type goes in the opposite direction.\n+   *\n+   * For convenience, the PCS values for input or output will always be\n+   * CIE XYZ (D50), if the actual PCS is Lab, the values will be converted.\n+   *\n+   * N-dimensional linear interpolation is used.\n+   */\n+  float[] lookup(float[] in)\n+  {\n+    float[] in2 = new float[in.length];\n+    if (useMatrix)\n+      {\n+\tfor (int i = 0; i < 3; i++)\n+\t  in2[i] = in[0] * inMatrix[i][0] + in[1] * inMatrix[i][1]\n+\t           + in[2] * inMatrix[i][2];\n+      }\n+    else if (inputLab)\n+      in2 = XYZtoLab(in);\n+    else\n+      System.arraycopy(in, 0, in2, 0, in.length);\n+\n+    // input table \n+    for (int i = 0; i < nIn; i++)\n+      {\n+\tint index = (int) Math.floor(in2[i] * (double) (nInTableEntries - 1)); // floor in\n+\n+\t// clip values.\n+\tif (index >= nInTableEntries - 1)\n+\t  in2[i] = (float) inTable[i][nInTableEntries - 1];\n+\telse if (index < 0)\n+\t  in2[i] = (float) inTable[i][0];\n+\telse\n+\t  {\n+\t    // linear interpolation\n+\t    double alpha = in2[i] * ((double) nInTableEntries - 1.0) - index;\n+\t    in2[i] = (float) (inTable[i][index] * (1 - alpha)\n+\t             + inTable[i][index + 1] * alpha);\n+\t  }\n+      }\n+\n+    // CLUT lookup\n+    double[] output2 = new double[nOut];\n+    double[] weights = new double[(1 << nIn)];\n+    double[] clutalpha = new double[nIn]; // interpolation values\n+    int offset = 0; // = gp\n+    for (int i = 0; i < nIn; i++)\n+      {\n+\tint index = (int) Math.floor(in2[i] * ((double) gridpoints - 1.0));\n+\tdouble alpha = in2[i] * ((double) gridpoints - 1.0) - (double) index;\n+\n+\t// clip values.\n+\tif (index >= gridpoints - 1)\n+\t  {\n+\t    index = gridpoints - 1;\n+\t    alpha = 1.0;\n+\t  }\n+\telse if (index < 0)\n+\t  index = 0;\n+\tclutalpha[i] = alpha;\n+\toffset += index * multiplier[i];\n+      }\n+\n+    // Calculate interpolation weights\n+    weights[0] = 1.0;\n+    for (int j = 0; j < nIn; j++)\n+      {\n+\tint factor = 1 << j;\n+\tfor (int i = 0; i < factor; i++)\n+\t  {\n+\t    weights[factor + i] = weights[i] * clutalpha[j];\n+\t    weights[i] *= (1.0 - clutalpha[j]);\n+\t  }\n+      }\n+\n+    for (int i = 0; i < nOut; i++)\n+      output2[i] = weights[0] * clut[offset + i];\n+\n+    for (int i = 1; i < (1 << nIn); i++)\n+      {\n+\tint offset2 = offset + offsets[i];\n+\tfor (int f = 0; f < nOut; f++)\n+\t  output2[f] += weights[i] * clut[offset2 + f];\n+      }\n+\n+    // output table \n+    float[] output = new float[nOut];\n+    for (int i = 0; i < nOut; i++)\n+      {\n+\tint index = (int) Math.floor(output2[i] * ((double) nOutTableEntries\n+\t                             - 1.0));\n+\n+\t// clip values.\n+\tif (index >= nOutTableEntries - 1)\n+\t  output[i] = outTable[i][nOutTableEntries - 1];\n+\telse if (index < 0)\n+\t  output[i] = outTable[i][0];\n+\telse\n+\t  {\n+\t    // linear interpolation\n+\t    double a = output2[i] * ((double) nOutTableEntries - 1.0)\n+\t               - (double) index;\n+\t    output[i] = (float) ((double) ((int) outTable[i][index] & (0xFFFF)) * (1\n+\t                - a)\n+\t                + (double) ((int) outTable[i][index + 1] & (0xFFFF)) * a) / 65536f;\n+\t  }\n+      }\n+\n+    if (outputLab)\n+      return LabtoXYZ(output);\n+    return output;\n+  }\n+\n+  /**\n+   * Converts CIE Lab coordinates to (D50) XYZ ones.\n+   */\n+  private float[] LabtoXYZ(float[] in)\n+  {\n+    // Convert from byte-packed format to a \n+    // more convenient one (actual Lab values)\n+    // (See ICC spec for details)\n+    // factor is 100 * 65536 / 65280\n+    in[0] = (float) (100.392156862745 * in[0]);\n+    in[1] = (in[1] * 256.0f) - 128.0f;\n+    in[2] = (in[2] * 256.0f) - 128.0f;\n+\n+    float[] out = new float[3];\n+\n+    out[1] = (in[0] + 16.0f) / 116.0f;\n+    out[0] = in[1] / 500.0f + out[1];\n+    out[2] = out[1] - in[2] / 200.0f;\n+\n+    for (int i = 0; i < 3; i++)\n+      {\n+\tdouble exp = out[i] * out[i] * out[i];\n+\tif (exp <= 0.008856)\n+\t  out[i] = (out[i] - 16.0f / 116.0f) / 7.787f;\n+\telse\n+\t  out[i] = (float) exp;\n+\tout[i] = D50[i] * out[i];\n+      }\n+    return out;\n+  }\n+\n+  /**\n+   * Converts CIE XYZ coordinates to Lab ones.\n+   */\n+  private float[] XYZtoLab(float[] in)\n+  {\n+    float[] temp = new float[3];\n+\n+    for (int i = 0; i < 3; i++)\n+      {\n+\ttemp[i] = in[i] / D50[i];\n+\n+\tif (temp[i] <= 0.008856f)\n+\t  temp[i] = (7.7870689f * temp[i]) + (16f / 116.0f);\n+\telse\n+\t  temp[i] = (float) Math.exp((1.0 / 3.0) * Math.log(temp[i]));\n+      }\n+\n+    float[] out = new float[3];\n+    out[0] = (116.0f * temp[1]) - 16f;\n+    out[1] = 500.0f * (temp[0] - temp[1]);\n+    out[2] = 200.0f * (temp[1] - temp[2]);\n+\n+    // Normalize to packed format\n+    out[0] = (float) (out[0] / 100.392156862745);\n+    out[1] = (out[1] + 128f) / 256f;\n+    out[2] = (out[2] + 128f) / 256f;\n+    for (int i = 0; i < 3; i++)\n+      {\n+\tif (out[i] < 0f)\n+\t  out[i] = 0f;\n+\tif (out[i] > 1f)\n+\t  out[i] = 1f;\n+      }\n+    return out;\n+  }\n+}"}, {"sha": "1fee749258e7ccc572ec3d1912117339aec4b3c7", "filename": "libjava/gnu/java/awt/color/ColorSpaceConverter.java", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FColorSpaceConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FColorSpaceConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FColorSpaceConverter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,70 @@\n+/* ColorSpaceConverter.java -- an interface for colorspace conversion\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+\n+/**\n+ * ColorSpaceConverter - used by java.awt.color.ICC_ColorSpace\n+ *\n+ * Color space conversion can occur in several ways:\n+ *\n+ * -Directly (for the built in spaces sRGB, linear RGB, gray, CIE XYZ and PYCC\n+ * -ICC_ProfileRGB works through TRC curves and a matrix\n+ * -ICC_ProfileGray works through a single TRC\n+ * -Everything else is done through Color lookup tables.\n+ *\n+ * The different conversion methods are implemented through\n+ * an interface. The built-in colorspaces are implemented directly\n+ * with the relevant conversion equations.\n+ *\n+ * In this way, we hopefully will always use the fastest and most\n+ * accurate method available.\n+ *\n+ * @author Sven de Marothy\n+ */\n+public interface ColorSpaceConverter\n+{\n+  float[] toCIEXYZ(float[] in);\n+\n+  float[] fromCIEXYZ(float[] in);\n+\n+  float[] toRGB(float[] in);\n+\n+  float[] fromRGB(float[] in);\n+}"}, {"sha": "22dd49360b2a6c711b40b07c2c1106995dc2ea45", "filename": "libjava/gnu/java/awt/color/GrayProfileConverter.java", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FGrayProfileConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FGrayProfileConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FGrayProfileConverter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,138 @@\n+/* GrayProfileConverter.java -- Gray profile conversion class\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+import java.awt.color.ProfileDataException;\n+import java.awt.color.ICC_Profile;\n+import java.awt.color.ICC_ProfileGray;\n+\n+\n+/**\n+ * GrayProfileConverter - converts Grayscale profiles (ICC_ProfileGray)\n+ *\n+ * This type of profile contains a single tone reproduction curve (TRC).\n+ * Conversion consists of simple TRC lookup.\n+ *\n+ * This implementation is very lazy and does everything applying the TRC and\n+ * utilizing the built-in linear grayscale color space.\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class GrayProfileConverter implements ColorSpaceConverter\n+{\n+  private GrayScaleConverter gc;\n+  private ToneReproductionCurve trc;\n+  private ColorLookUpTable toPCS;\n+  private ColorLookUpTable fromPCS;\n+\n+  /**\n+   * Constructs the converter described by an ICC_ProfileGray object\n+   */\n+  public GrayProfileConverter(ICC_ProfileGray profile)\n+  {\n+    try\n+      {\n+\ttrc = new ToneReproductionCurve(profile.getGamma());\n+      }\n+    catch (ProfileDataException e)\n+      {\n+\ttrc = new ToneReproductionCurve(profile.getTRC());\n+      }\n+\n+    // linear grayscale converter\n+    gc = new GrayScaleConverter();\n+\n+    // If a CLUT is available, it should be used, and the TRCs ignored.\n+    // Note: A valid profile may only have CLUTs in one direction, and\n+    // TRC:s without useful info, making reverse-transforms impossible.\n+    // In this case the TRC will be used for the reverse-transform with\n+    // unpredictable results. This is in line with the Java specification,\n+    try\n+      {\n+\ttoPCS = new ColorLookUpTable(profile, ICC_Profile.icSigAToB0Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\ttoPCS = null;\n+      }\n+\n+    try\n+      {\n+\tfromPCS = new ColorLookUpTable(profile, ICC_Profile.icSigBToA0Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\tfromPCS = null;\n+      }\n+  }\n+\n+  public float[] toCIEXYZ(float[] in)\n+  {\n+    if (toPCS != null)\n+      return toPCS.lookup(in);\n+    float[] gray = new float[1];\n+    gray[0] = trc.lookup(in[0]);\n+    return gc.toCIEXYZ(gray);\n+  }\n+\n+  public float[] toRGB(float[] in)\n+  {\n+    float[] gray = new float[1];\n+    gray[0] = trc.lookup(in[0]);\n+    return gc.toRGB(gray);\n+  }\n+\n+  public float[] fromRGB(float[] in)\n+  {\n+    // get linear grayscale value\n+    float[] gray = gc.fromRGB(in);\n+    gray[0] = trc.reverseLookup(gray[0]);\n+    return gray;\n+  }\n+\n+  public float[] fromCIEXYZ(float[] in)\n+  {\n+    if (fromPCS != null)\n+      return fromPCS.lookup(in);\n+\n+    float[] gray = gc.fromCIEXYZ(in);\n+    gray[0] = trc.reverseLookup(gray[0]);\n+    return gray;\n+  }\n+}"}, {"sha": "446c3f6e56aedf89d3018504305343915500425d", "filename": "libjava/gnu/java/awt/color/GrayScaleConverter.java", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FGrayScaleConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FGrayScaleConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FGrayScaleConverter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,111 @@\n+/* GrayScaleConverter.java -- Linear grayscale conversion class\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+\n+/**\n+ * Linear Grayscale converter\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class GrayScaleConverter implements ColorSpaceConverter\n+{\n+  // intensity factors (ITU Rec. BT.709)\n+  double[] coeff = { 0.2125f, 0.7154f, 0.0721f };\n+\n+  /**\n+   * CIE 1931 D50 white point (in Lab coordinates)\n+   */\n+  private static float[] D50 = { 0.96422f, 1.00f, 0.82521f };\n+\n+  public float[] toCIEXYZ(float[] in)\n+  {\n+    float g = in[0];\n+    if (g < 0)\n+      g = 1 + g;\n+    float[] out = { g * D50[0], g * D50[1], g * D50[2] }; // White spot\n+    return out;\n+  }\n+\n+  public float[] toRGB(float[] in)\n+  {\n+    float[] out = new float[3];\n+    if (in[0] <= 0.00304f)\n+      out[0] = in[0] * 12.92f;\n+    else\n+      out[0] = 1.055f * ((float) Math.exp((1 / 2.4) * Math.log(in[0])))\n+               - 0.055f;\n+    out[1] = out[2] = out[0];\n+    return out;\n+  }\n+\n+  public float[] fromCIEXYZ(float[] in)\n+  {\n+    float[] temp = new float[3];\n+    temp[0] = 3.1338f * in[0] - 1.6171f * in[1] - 0.4907f * in[2];\n+    temp[1] = -0.9785f * in[0] + 1.9160f * in[1] + 0.0334f * in[2];\n+    temp[2] = 0.0720f * in[0] - 0.2290f * in[1] + 1.4056f * in[2];\n+    float[] out = new float[1];\n+    for (int i = 0; i < 3; i++)\n+      out[0] = (float) (temp[i] * coeff[i]);\n+    return out;\n+  }\n+\n+  public float[] fromRGB(float[] in)\n+  {\n+    float[] out = new float[1];\n+\n+    // Convert non-linear RGB coordinates to linear ones,\n+    //  numbers from the w3 spec.\n+    out[0] = 0;\n+    for (int i = 0; i < 3; i++)\n+      {\n+\tfloat n = in[i];\n+\tif (n < 0)\n+\t  n = 0f;\n+\tif (n > 1)\n+\t  n = 1f;\n+\tif (n <= 0.03928f)\n+\t  out[0] += (float) (coeff[i] * n / 12.92);\n+\telse\n+\t  out[0] += (float) (coeff[i] * Math.exp(2.4 * Math.log((n + 0.055) / 1.055)));\n+      }\n+    return out;\n+  }\n+}"}, {"sha": "b40c2f0292754214c67488a6bb0e7f41c834584c", "filename": "libjava/gnu/java/awt/color/LinearRGBConverter.java", "status": "added", "additions": 152, "deletions": 0, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FLinearRGBConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FLinearRGBConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FLinearRGBConverter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,152 @@\n+/* LinearRGBConverter.java -- conversion to a linear RGB color space\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version. */\n+\n+package gnu.java.awt.color;\n+\n+\n+/**\n+ * LinearRGBConverter - conversion routines for a linear sRGB colorspace\n+ * sRGB is a standard for RGB colorspaces, adopted by the w3c.\n+ *\n+ * The specification is available at:\n+ * http://www.w3.org/Graphics/Color/sRGB.html\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class LinearRGBConverter implements ColorSpaceConverter\n+{\n+  /**\n+   * linear RGB --> sRGB\n+   * Use the inverse gamma curve\n+   */\n+  public float[] toRGB(float[] in)\n+  {\n+    float[] out = new float[3];\n+    for (int i = 0; i < 3; i++)\n+      {\n+\tfloat n = in[i];\n+\tif (n < 0)\n+\t  n = 0f;\n+\tif (n > 1)\n+\t  n = 1f;\n+\tif (n <= 0.00304f)\n+\t  out[i] = in[0] * 12.92f;\n+\telse\n+\t  out[i] = 1.055f * ((float) Math.exp((1 / 2.4) * Math.log(n)))\n+\t           - 0.055f;\n+      }\n+    return out;\n+  }\n+\n+  /**\n+   * sRGB --> linear RGB\n+   * Use the gamma curve (gamma=2.4 in sRGB)\n+   */\n+  public float[] fromRGB(float[] in)\n+  {\n+    float[] out = new float[3];\n+\n+    // Convert non-linear RGB coordinates to linear ones,\n+    //  numbers from the w3 spec.\n+    for (int i = 0; i < 3; i++)\n+      {\n+\tfloat n = in[i];\n+\tif (n < 0)\n+\t  n = 0f;\n+\tif (n > 1)\n+\t  n = 1f;\n+\tif (n <= 0.03928f)\n+\t  out[i] = (float) (n / 12.92);\n+\telse\n+\t  out[i] = (float) (Math.exp(2.4 * Math.log((n + 0.055) / 1.055)));\n+      }\n+    return out;\n+  }\n+\n+  /**\n+   * Linear RGB --> CIE XYZ (D50 relative)\n+   * This is a simple matrix transform, the matrix (relative D65)\n+   * is given in the sRGB spec. This has been combined with a\n+   * linear Bradford transform for the D65-->D50 mapping, resulting\n+   * in a single matrix which does the whole thing.\n+   *\n+   */\n+  public float[] fromCIEXYZ(float[] in)\n+  {\n+    /*\n+     * Note: The numbers which were used to calculate this only had four\n+     * digits of accuracy. So don't be fooled by the number of digits here.\n+     * If someone has more accurate source, feel free to update this.\n+     */\n+    float[] out = new float[3];\n+    out[0] = (float) (3.13383065124221 * in[0] - 1.61711949411313 * in[1]\n+             - 0.49071914111101 * in[2]);\n+    out[1] = (float) (-0.97847026691142 * in[0] + 1.91597856031996 * in[1]\n+             + 0.03340430640699 * in[2]);\n+    out[2] = (float) (0.07203679486279 * in[0] - 0.22903073553113 * in[1]\n+             + 1.40557835776234 * in[2]);\n+    if (out[0] < 0)\n+      out[0] = 0f;\n+    if (out[1] < 0)\n+      out[1] = 0f;\n+    if (out[2] < 0)\n+      out[2] = 0f;\n+    if (out[0] > 1.0f)\n+      out[0] = 1.0f;\n+    if (out[1] > 1.0f)\n+      out[1] = 1.0f;\n+    if (out[2] > 1.0f)\n+      out[2] = 1.0f;\n+    return out;\n+  }\n+\n+  /**\n+   * Linear RGB --> CIE XYZ (D50 relative)\n+   * Uses the inverse of the above matrix.\n+   */\n+  public float[] toCIEXYZ(float[] in)\n+  {\n+    float[] out = new float[3];\n+    out[0] = (float) (0.43606375022190 * in[0] + 0.38514960146481 * in[1]\n+             + 0.14308641888799 * in[2]);\n+    out[1] = (float) (0.22245089403542 * in[0] + 0.71692584775182 * in[1]\n+             + 0.06062451125578 * in[2]);\n+    out[2] = (float) (0.01389851860679 * in[0] + 0.09707969011198 * in[1]\n+             + 0.71399604572506 * in[2]);\n+    return out;\n+  }\n+}"}, {"sha": "fc4c0c3c912ba22aca84941c127cd0fbd1205abe", "filename": "libjava/gnu/java/awt/color/ProfileHeader.java", "status": "added", "additions": 399, "deletions": 0, "changes": 399, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FProfileHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FProfileHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FProfileHeader.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,399 @@\n+/* ProfileHeader.java -- Encapsules ICC Profile header data\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.nio.ByteBuffer;\n+\n+\n+/**\n+ * Header, abstracts and validates the header data.\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class ProfileHeader\n+{\n+  /**\n+   * Magic identifier (ASCII 'acsp')\n+   */\n+  private static final int icMagicNumber = 0x61637370;\n+\n+  /**\n+   * Mapping from ICC Profile signatures to ColorSpace types\n+   */\n+  private static final int[] csTypeMap = \n+                                         {\n+                                           ICC_Profile.icSigXYZData,\n+                                           ColorSpace.TYPE_XYZ,\n+                                           ICC_Profile.icSigLabData,\n+                                           ColorSpace.TYPE_Lab,\n+                                           ICC_Profile.icSigLuvData,\n+                                           ColorSpace.TYPE_Luv,\n+                                           ICC_Profile.icSigYCbCrData,\n+                                           ColorSpace.TYPE_YCbCr,\n+                                           ICC_Profile.icSigYxyData,\n+                                           ColorSpace.TYPE_Yxy,\n+                                           ICC_Profile.icSigRgbData,\n+                                           ColorSpace.TYPE_RGB,\n+                                           ICC_Profile.icSigGrayData,\n+                                           ColorSpace.TYPE_GRAY,\n+                                           ICC_Profile.icSigHsvData,\n+                                           ColorSpace.TYPE_HSV,\n+                                           ICC_Profile.icSigHlsData,\n+                                           ColorSpace.TYPE_HLS,\n+                                           ICC_Profile.icSigCmykData,\n+                                           ColorSpace.TYPE_CMYK,\n+                                           ICC_Profile.icSigCmyData,\n+                                           ColorSpace.TYPE_CMY,\n+                                           ICC_Profile.icSigSpace2CLR,\n+                                           ColorSpace.TYPE_2CLR,\n+                                           ICC_Profile.icSigSpace3CLR,\n+                                           ColorSpace.TYPE_3CLR,\n+                                           ICC_Profile.icSigSpace4CLR,\n+                                           ColorSpace.TYPE_4CLR,\n+                                           ICC_Profile.icSigSpace5CLR,\n+                                           ColorSpace.TYPE_5CLR,\n+                                           ICC_Profile.icSigSpace6CLR,\n+                                           ColorSpace.TYPE_6CLR,\n+                                           ICC_Profile.icSigSpace7CLR,\n+                                           ColorSpace.TYPE_7CLR,\n+                                           ICC_Profile.icSigSpace8CLR,\n+                                           ColorSpace.TYPE_8CLR,\n+                                           ICC_Profile.icSigSpace9CLR,\n+                                           ColorSpace.TYPE_9CLR,\n+                                           ICC_Profile.icSigSpaceACLR,\n+                                           ColorSpace.TYPE_ACLR,\n+                                           ICC_Profile.icSigSpaceBCLR,\n+                                           ColorSpace.TYPE_BCLR,\n+                                           ICC_Profile.icSigSpaceCCLR,\n+                                           ColorSpace.TYPE_CCLR,\n+                                           ICC_Profile.icSigSpaceDCLR,\n+                                           ColorSpace.TYPE_DCLR,\n+                                           ICC_Profile.icSigSpaceECLR,\n+                                           ColorSpace.TYPE_ECLR,\n+                                           ICC_Profile.icSigSpaceFCLR,\n+                                           ColorSpace.TYPE_FCLR\n+                                         };\n+\n+  /**\n+   * Size of an ICC header (128 bytes)\n+   */\n+  public static final int HEADERSIZE = 128;\n+\n+  /**\n+   * Mapping of ICC class signatures to profile class constants\n+   */\n+  private static final int[] classMap = \n+                                        {\n+                                          ICC_Profile.icSigInputClass,\n+                                          ICC_Profile.CLASS_INPUT,\n+                                          ICC_Profile.icSigDisplayClass,\n+                                          ICC_Profile.CLASS_DISPLAY,\n+                                          ICC_Profile.icSigOutputClass,\n+                                          ICC_Profile.CLASS_OUTPUT,\n+                                          ICC_Profile.icSigLinkClass,\n+                                          ICC_Profile.CLASS_DEVICELINK,\n+                                          ICC_Profile.icSigColorSpaceClass,\n+                                          ICC_Profile.CLASS_COLORSPACECONVERSION,\n+                                          ICC_Profile.icSigAbstractClass,\n+                                          ICC_Profile.CLASS_ABSTRACT,\n+                                          ICC_Profile.icSigNamedColorClass,\n+                                          ICC_Profile.CLASS_NAMEDCOLOR\n+                                        };\n+  private int size;\n+  private int cmmId;\n+\n+  // Major/Minor version, The ICC-1998 spec is major v2\n+  private int majorVersion;\n+\n+  // Major/Minor version, The ICC-1998 spec is major v2\n+  private int minorVersion;\n+  private int profileClass; // profile device class\n+  private int colorSpace; // data color space type\n+  private int profileColorSpace; // profile connection space (PCS) type\n+  private byte[] timestamp; // original creation timestamp\n+  private int platform; // platform signature\n+  private int flags; // flags\n+  private int magic; // magic number.\n+  private int manufacturerSig; // manufacturer sig\n+  private int modelSig; // model sig\n+  private byte[] attributes; // Attributes\n+  private int intent; // rendering intent\n+  private byte[] illuminant; // illuminant info (Coordinates of D50 in the PCS)\n+  private int creatorSig; // Creator sig (same type as manufacturer)\n+\n+  /**\n+   * Creates a 'default' header for use with our predefined profiles.\n+   * Note the device and profile color spaces are not set.\n+   */\n+  public ProfileHeader()\n+  {\n+    creatorSig = 0;\n+    intent = 0;\n+    modelSig = manufacturerSig = (int) 0x6E6f6E65; // 'none'\n+    magic = icMagicNumber;\n+    cmmId = 0;\n+    platform = 0; // no preferred platform\n+    timestamp = new byte[8];\n+    majorVersion = 2;\n+    minorVersion = 0x10;\n+    flags = 0;\n+\n+    // D50 in XYZ format (encoded)\n+    illuminant = new byte[]\n+                 {\n+                   (byte) 0x00, (byte) 0x00, (byte) 0xf6, (byte) 0xd6,\n+                   (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x00,\n+                   (byte) 0x00, (byte) 0x00, (byte) 0xd3, (byte) 0x2d\n+                 };\n+    attributes = new byte[8];\n+    profileClass = ICC_Profile.CLASS_DISPLAY;\n+  }\n+\n+  /**\n+   * Creates a header from profile data. Only the header portion (128 bytes)\n+   * is read, so the array passed need not be the full profile.\n+   */\n+  public ProfileHeader(byte[] data)\n+  {\n+    ByteBuffer buf = ByteBuffer.wrap(data);\n+\n+    // Get size (the sign bit shouldn't matter. \t\n+    // A valid profile can never be +2Gb)\n+    size = buf.getInt(ICC_Profile.icHdrSize);\n+\n+    // CMM ID\n+    cmmId = buf.getInt(ICC_Profile.icHdrCmmId);\n+\n+    // Version number\n+    majorVersion = (int) (data[ICC_Profile.icHdrVersion]);\n+    minorVersion = (int) (data[ICC_Profile.icHdrVersion + 1]);\n+\n+    // Profile/Device class\n+    int classSig = buf.getInt(ICC_Profile.icHdrDeviceClass);\n+    profileClass = -1;\n+    for (int i = 0; i < classMap.length; i += 2)\n+      if (classMap[i] == classSig)\n+        {\n+\t  profileClass = classMap[i + 1];\n+\t  break;\n+        }\n+\n+    // get the data color space\n+    int csSig = buf.getInt(ICC_Profile.icHdrColorSpace);\n+    colorSpace = -1;\n+    for (int i = 0; i < csTypeMap.length; i += 2)\n+      if (csTypeMap[i] == csSig)\n+        {\n+\t  colorSpace = csTypeMap[i + 1];\n+\t  break;\n+        }\n+\n+    // get the profile color space (PCS), must be xyz or lab except\n+    // for device-link-class profiles\n+    int pcsSig = buf.getInt(ICC_Profile.icHdrPcs);\n+    profileColorSpace = -1;\n+    if (profileClass != ICC_Profile.CLASS_DEVICELINK)\n+      {\n+\tif (pcsSig == ICC_Profile.icSigXYZData)\n+\t  profileColorSpace = ColorSpace.TYPE_XYZ;\n+\tif (pcsSig == ICC_Profile.icSigLabData)\n+\t  profileColorSpace = ColorSpace.TYPE_Lab;\n+      }\n+    else\n+      {\n+\tfor (int i = 0; i < csTypeMap.length; i += 2)\n+\t  if (csTypeMap[i] == pcsSig)\n+\t    {\n+\t      profileColorSpace = csTypeMap[i + 1];\n+\t      break;\n+\t    }\n+      }\n+\n+    // creation timestamp\n+    timestamp = new byte[8];\n+    System.arraycopy(data, ICC_Profile.icHdrDate, timestamp, 0, 8);\n+\n+    // magic number\n+    magic = buf.getInt(ICC_Profile.icHdrMagic);\n+\n+    //  platform info\n+    platform = buf.getInt(ICC_Profile.icHdrPlatform);\n+    // get flags\n+    flags = buf.getInt(ICC_Profile.icHdrFlags);\n+    // get manufacturer sign\n+    manufacturerSig = buf.getInt(ICC_Profile.icHdrManufacturer);\n+    // get header model\n+    modelSig = buf.getInt(ICC_Profile.icHdrModel);\n+    // attributes\n+    attributes = new byte[8];\n+    System.arraycopy(data, ICC_Profile.icHdrAttributes, attributes, 0, 8);\n+    // rendering intent\n+    intent = buf.getInt(ICC_Profile.icHdrRenderingIntent);\n+    // illuminant info \n+    illuminant = new byte[12];\n+    System.arraycopy(data, ICC_Profile.icHdrIlluminant, illuminant, 0, 12);\n+    // Creator signature\n+    creatorSig = buf.getInt(ICC_Profile.icHdrCreator);\n+    // The rest of the header (Total size: 128 bytes) is unused..\n+  }\n+\n+  /**\n+   * Verify that the header is valid\n+   * @param size equals the file size if it is to be verified, -1 otherwise\n+   * @throws IllegalArgumentException if the header is found to be invalid.\n+   */\n+  public void verifyHeader(int size) throws IllegalArgumentException\n+  {\n+    // verify size\n+    if (size != -1 && this.size != size)\n+      throw new IllegalArgumentException(\"Invalid profile length:\" + size);\n+\n+    // Check version number\n+    if (majorVersion != 2)\n+      throw new IllegalArgumentException(\"Wrong major version number:\"\n+                                         + majorVersion);\n+\n+    // Profile/Device class\n+    if (profileClass == -1)\n+      throw new IllegalArgumentException(\"Invalid profile/device class\");\n+\n+    // get the data color space\n+    if (colorSpace == -1)\n+      throw new IllegalArgumentException(\"Invalid colorspace\");\n+\n+    // profile color space\n+    if (profileColorSpace == -1)\n+      throw new IllegalArgumentException(\"Invalid PCS.\");\n+\n+    // check magic number\n+    if (magic != icMagicNumber)\n+      throw new IllegalArgumentException(\"Invalid magic number!\");\n+  }\n+\n+  /**\n+   * Creates a header, setting the header file size at the same time.\n+   * @param size the profile file size.\n+   */\n+  public byte[] getData(int size)\n+  {\n+    byte[] data = new byte[HEADERSIZE];\n+    ByteBuffer buf = ByteBuffer.wrap(data);\n+    buf.putInt(ICC_Profile.icHdrSize, size);\n+    buf.putInt(ICC_Profile.icHdrCmmId, cmmId);\n+    buf.putShort(ICC_Profile.icHdrVersion,\n+                 (short) (majorVersion << 8 | minorVersion));\n+    for (int i = 1; i < classMap.length; i += 2)\n+      if (profileClass == classMap[i])\n+\tbuf.putInt(ICC_Profile.icHdrDeviceClass, classMap[i - 1]);\n+    for (int i = 1; i < csTypeMap.length; i += 2)\n+      if (csTypeMap[i] == colorSpace)\n+\tbuf.putInt(ICC_Profile.icHdrColorSpace, csTypeMap[i - 1]);\n+    for (int i = 1; i < csTypeMap.length; i += 2)\n+      if (csTypeMap[i] == profileColorSpace)\n+\tbuf.putInt(ICC_Profile.icHdrPcs, csTypeMap[i - 1]);\n+\n+    System.arraycopy(timestamp, 0, data, ICC_Profile.icHdrDate,\n+                     timestamp.length);\n+    buf.putInt(ICC_Profile.icHdrMagic, icMagicNumber);\n+    buf.putInt(ICC_Profile.icHdrPlatform, platform);\n+    buf.putInt(ICC_Profile.icHdrFlags, flags);\n+    buf.putInt(ICC_Profile.icHdrManufacturer, manufacturerSig);\n+    buf.putInt(ICC_Profile.icHdrModel, modelSig);\n+    System.arraycopy(attributes, 0, data, ICC_Profile.icHdrAttributes,\n+                     attributes.length);\n+    buf.putInt(ICC_Profile.icHdrRenderingIntent, intent);\n+    System.arraycopy(illuminant, 0, data, ICC_Profile.icHdrIlluminant,\n+                     illuminant.length);\n+    buf.putInt(ICC_Profile.icHdrCreator, creatorSig);\n+    return buf.array();\n+  }\n+\n+  public int getSize()\n+  {\n+    return size;\n+  }\n+\n+  public void setSize(int s)\n+  {\n+    size = s;\n+  }\n+\n+  public int getMajorVersion()\n+  {\n+    return majorVersion;\n+  }\n+\n+  public int getMinorVersion()\n+  {\n+    return minorVersion;\n+  }\n+\n+  public int getProfileClass()\n+  {\n+    return profileClass;\n+  }\n+\n+  public void setProfileClass(int pc)\n+  {\n+    profileClass = pc;\n+  }\n+\n+  public int getColorSpace()\n+  {\n+    return colorSpace;\n+  }\n+\n+  public int getProfileColorSpace()\n+  {\n+    return profileColorSpace;\n+  }\n+\n+  public void setColorSpace(int cs)\n+  {\n+    colorSpace = cs;\n+  }\n+\n+  public void setProfileColorSpace(int pcs)\n+  {\n+    profileColorSpace = pcs;\n+  }\n+\n+}"}, {"sha": "638d944a5b4222f37a3acf1b3ab7cbd7f9ba1408", "filename": "libjava/gnu/java/awt/color/PyccConverter.java", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FPyccConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FPyccConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FPyccConverter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,73 @@\n+/* PyccConverter.java -- PhotoYCC conversion class\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+\n+/**\n+ * PyccConverter - conversion routines for the PhotoYCC colorspace\n+ *\n+ * Also known as PhotoCD YCC, it is an expansion of the conventional\n+ * YCC color space to also include colors with over 100% white.\n+ *\n+ * XXX FIXME: Not yet implemented, implementation pending.\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class PyccConverter implements ColorSpaceConverter\n+{\n+  public float[] toRGB(float[] in)\n+  {\n+    return null;\n+  }\n+\n+  public float[] fromRGB(float[] in)\n+  {\n+    return null;\n+  }\n+\n+  public float[] toCIEXYZ(float[] in)\n+  {\n+    return null;\n+  }\n+\n+  public float[] fromCIEXYZ(float[] in)\n+  {\n+    return null;\n+  }\n+}"}, {"sha": "0482b3fe6690164ef459a756f8daa64973c412cf", "filename": "libjava/gnu/java/awt/color/RgbProfileConverter.java", "status": "added", "additions": 245, "deletions": 0, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FRgbProfileConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FRgbProfileConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FRgbProfileConverter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,245 @@\n+/* RgbProfileConverter.java -- RGB Profile conversion class\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+import java.awt.color.ProfileDataException;\n+import java.awt.color.ICC_Profile;\n+import java.awt.color.ICC_ProfileRGB;\n+\n+\n+/**\n+ * RgbProfileConverter - converts RGB profiles (ICC_ProfileRGB)\n+ *\n+ * This type of profile contains a matrix and three\n+ * tone reproduction curves (TRCs).\n+ *\n+ * Device RGB --> CIE XYZ is done through first multiplying with\n+ * a matrix, then each component is looked-up against it's TRC.\n+ *\n+ * The opposite transform is done using the inverse of the matrix,\n+ * and TRC:s.\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class RgbProfileConverter implements ColorSpaceConverter\n+{\n+  private float[][] matrix;\n+  private float[][] inv_matrix;\n+  private ToneReproductionCurve rTRC;\n+  private ToneReproductionCurve gTRC;\n+  private ToneReproductionCurve bTRC;\n+  private ColorLookUpTable toPCS;\n+  private ColorLookUpTable fromPCS;\n+\n+  /**\n+   * CIE 1931 D50 white point (in Lab coordinates)\n+   */\n+  private static float[] D50 = { 0.96422f, 1.00f, 0.82521f };\n+\n+  /**\n+   * Constructs an RgbProfileConverter from a given ICC_ProfileRGB\n+   */\n+  public RgbProfileConverter(ICC_ProfileRGB profile)\n+  {\n+    toPCS = fromPCS = null;\n+    matrix = profile.getMatrix();\n+\n+    // get TRCs\n+    try\n+      {\n+\trTRC = new ToneReproductionCurve(profile.getGamma(ICC_ProfileRGB.REDCOMPONENT));\n+      }\n+    catch (ProfileDataException e)\n+      {\n+\trTRC = new ToneReproductionCurve(profile.getTRC(ICC_ProfileRGB.REDCOMPONENT));\n+      }\n+    try\n+      {\n+\tgTRC = new ToneReproductionCurve(profile.getGamma(ICC_ProfileRGB.GREENCOMPONENT));\n+      }\n+    catch (ProfileDataException e)\n+      {\n+\tgTRC = new ToneReproductionCurve(profile.getTRC(ICC_ProfileRGB.GREENCOMPONENT));\n+      }\n+    try\n+      {\n+\tbTRC = new ToneReproductionCurve(profile.getGamma(ICC_ProfileRGB.BLUECOMPONENT));\n+      }\n+    catch (ProfileDataException e)\n+      {\n+\tbTRC = new ToneReproductionCurve(profile.getTRC(ICC_ProfileRGB.BLUECOMPONENT));\n+      }\n+\n+    // If a CLUT is available, it should be used, and the TRCs ignored.\n+    // Note: A valid profile may only have CLUTs in one direction, and\n+    // TRC:s without useful info, making reverse-transforms impossible.\n+    // In this case the TRC will be used for the reverse-transform with\n+    // unpredictable results. This is in line with the Java specification,\n+    try\n+      {\n+\ttoPCS = new ColorLookUpTable(profile, ICC_Profile.icSigAToB0Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\ttoPCS = null;\n+      }\n+\n+    try\n+      {\n+\tfromPCS = new ColorLookUpTable(profile, ICC_Profile.icSigBToA0Tag);\n+      }\n+    catch (Exception e)\n+      {\n+\tfromPCS = null;\n+      }\n+\n+    // Calculate the inverse matrix if no reverse CLUT is available\n+    if(fromPCS == null)\n+\tinv_matrix = invertMatrix(matrix);\n+    else \n+      {\n+        // otherwise just set it to an identity matrix\n+\tinv_matrix = new float[3][3];\n+\tinv_matrix[0][0] = inv_matrix[1][1] = inv_matrix[2][2] = 1.0f;\n+      }\n+  }\n+\n+  public float[] toCIEXYZ(float[] in)\n+  {\n+    // CLUT takes precedence\n+    if (toPCS != null)\n+      return toPCS.lookup(in);\n+\n+    float[] temp = new float[3];\n+    float[] out = new float[3];\n+\n+    // device space --> linear gamma\n+    temp[0] = rTRC.lookup(in[0]);\n+    temp[1] = gTRC.lookup(in[1]);\n+    temp[2] = bTRC.lookup(in[2]);\n+\n+    // matrix multiplication\n+    out[0] = matrix[0][0] * temp[0] + matrix[0][1] * temp[1]\n+             + matrix[0][2] * temp[2];\n+    out[1] = matrix[1][0] * temp[0] + matrix[1][1] * temp[1]\n+             + matrix[1][2] * temp[2];\n+    out[2] = matrix[2][0] * temp[0] + matrix[2][1] * temp[1]\n+             + matrix[2][2] * temp[2];\n+\n+    return out;\n+  }\n+\n+  public float[] toRGB(float[] in)\n+  {\n+    return SrgbConverter.XYZtoRGB(toCIEXYZ(in));\n+  }\n+\n+  public float[] fromCIEXYZ(float[] in)\n+  {\n+    if (fromPCS != null)\n+      return fromPCS.lookup(in);\n+\n+    float[] temp = new float[3];\n+    float[] out = new float[3];\n+\n+    // matrix multiplication\n+    temp[0] = inv_matrix[0][0] * in[0] + inv_matrix[0][1] * in[1]\n+              + inv_matrix[0][2] * in[2];\n+    temp[1] = inv_matrix[1][0] * in[0] + inv_matrix[1][1] * in[1]\n+              + inv_matrix[1][2] * in[2];\n+    temp[2] = inv_matrix[2][0] * in[0] + inv_matrix[2][1] * in[1]\n+              + inv_matrix[2][2] * in[2];\n+\n+    // device space --> linear gamma\n+    out[0] = rTRC.reverseLookup(temp[0]);\n+    out[1] = gTRC.reverseLookup(temp[1]);\n+    out[2] = bTRC.reverseLookup(temp[2]);\n+\n+    // FIXME: Sun appears to clip the return values to [0,1]\n+    // I don't believe that is a Good Thing, \n+    // (some colorspaces may allow values outside that range.)\n+    // So we return the actual values here.\n+    return out;\n+  }\n+\n+  public float[] fromRGB(float[] in)\n+  {\n+    return fromCIEXYZ(SrgbConverter.RGBtoXYZ(in));\n+  }\n+\n+  /**\n+   * Inverts a 3x3 matrix, returns the inverse,\n+   * throws an IllegalArgumentException if the matrix is not\n+   * invertible (this shouldn't happen for a valid profile)\n+   */\n+  private float[][] invertMatrix(float[][] matrix)\n+  {\n+    float[][] out = new float[3][3];\n+    double determinant = matrix[0][0] * (matrix[1][1] * matrix[2][2]\n+                         - matrix[2][1] * matrix[1][2])\n+                         - matrix[0][1] * (matrix[1][0] * matrix[2][2]\n+                         - matrix[2][0] * matrix[1][2])\n+                         + matrix[0][2] * (matrix[1][0] * matrix[2][1]\n+                         - matrix[2][0] * matrix[1][1]);\n+\n+    if (determinant == 0.0)\n+      throw new IllegalArgumentException(\"Can't invert conversion matrix.\");\n+    float invdet = (float) (1.0 / determinant);\n+\n+    out[0][0] = invdet * (matrix[1][1] * matrix[2][2]\n+                - matrix[1][2] * matrix[2][1]);\n+    out[0][1] = invdet * (matrix[0][2] * matrix[2][1]\n+                - matrix[0][1] * matrix[2][2]);\n+    out[0][2] = invdet * (matrix[0][1] * matrix[1][2]\n+                - matrix[0][2] * matrix[1][1]);\n+    out[1][0] = invdet * (matrix[1][2] * matrix[2][0]\n+                - matrix[1][0] * matrix[2][2]);\n+    out[1][1] = invdet * (matrix[0][0] * matrix[2][2]\n+                - matrix[0][2] * matrix[2][0]);\n+    out[1][2] = invdet * (matrix[0][2] * matrix[1][0]\n+                - matrix[0][0] * matrix[1][2]);\n+    out[2][0] = invdet * (matrix[1][0] * matrix[2][1]\n+                - matrix[1][1] * matrix[2][0]);\n+    out[2][1] = invdet * (matrix[0][1] * matrix[2][0]\n+                - matrix[0][0] * matrix[2][1]);\n+    out[2][2] = invdet * (matrix[0][0] * matrix[1][1]\n+                - matrix[0][1] * matrix[1][0]);\n+    return out;\n+  }\n+}"}, {"sha": "65123e2305ccfd07a3aaaf1a28e6232ede005bbe", "filename": "libjava/gnu/java/awt/color/SrgbConverter.java", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FSrgbConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FSrgbConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FSrgbConverter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,153 @@\n+/* SrgbConverter.java -- sRGB conversion class\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+\n+/**\n+ * SrgbConverter - conversion routines for the sRGB colorspace\n+ * sRGB is a standard for RGB colorspaces, adopted by the w3c.\n+ *\n+ * The specification is available at:\n+ * http://www.w3.org/Graphics/Color/sRGB.html\n+ *\n+ * @author Sven de Marothy\n+ */\n+/**\n+ *\n+ * Note the matrix numbers used here are NOT identical to those in the\n+ * w3 spec, as those numbers are CIE XYZ relative a D65 white point.\n+ * The CIE XYZ we use is relative a D50 white point, so therefore a\n+ * linear Bradford transform matrix for D65->D50 mapping has been applied.\n+ * (The ICC documents describe this transform)\n+ *\n+ *   Linearized Bradford transform:\n+ *    0.8951    0.2664   -0.1614\n+ *   -0.7502    1.7135    0.0367\n+ *    0.0389   -0.0685    1.0296\n+ *\n+ *   Inverse:\n+ *   0.9870   -0.1471    0.1600\n+ *   0.4323    0.5184    0.0493\n+ *  -0.00853   0.0400    0.9685\n+ */\n+public class SrgbConverter implements ColorSpaceConverter\n+{\n+  public float[] fromCIEXYZ(float[] in)\n+  {\n+    return XYZtoRGB(in);\n+  }\n+\n+  public float[] toCIEXYZ(float[] in)\n+  {\n+    return RGBtoXYZ(in);\n+  }\n+\n+  public float[] toRGB(float[] in)\n+  {\n+    float[] out = new float[3];\n+    System.arraycopy(in, 0, out, 0, 3);\n+    return out;\n+  }\n+\n+  public float[] fromRGB(float[] in)\n+  {\n+    float[] out = new float[3];\n+    System.arraycopy(in, 0, out, 0, 3);\n+    return out;\n+  }\n+\n+  /**\n+   * CIE XYZ (D50 relative) --> sRGB\n+   *\n+   * Static as it's used by other ColorSpaceConverters to\n+   * convert to sRGB if the color space is defined in XYZ.\n+   */\n+  public static float[] XYZtoRGB(float[] in)\n+  {\n+    float[] temp = new float[3];\n+    temp[0] = 3.1338f * in[0] - 1.6171f * in[1] - 0.4907f * in[2];\n+    temp[1] = -0.9785f * in[0] + 1.9160f * in[1] + 0.0334f * in[2];\n+    temp[2] = 0.0720f * in[0] - 0.2290f * in[1] + 1.4056f * in[2];\n+\n+    float[] out = new float[3];\n+    for (int i = 0; i < 3; i++)\n+      {\n+\tif (temp[i] < 0)\n+\t  temp[i] = 0.0f;\n+\tif (temp[i] > 1)\n+\t  temp[i] = 1.0f;\n+\tif (temp[i] <= 0.00304f)\n+\t  out[i] = temp[i] * 12.92f;\n+\telse\n+\t  out[i] = 1.055f * ((float) Math.exp((1 / 2.4) * Math.log(temp[i])))\n+\t           - 0.055f;\n+      }\n+    return out;\n+  }\n+\n+  /**\n+   * sRGB --> CIE XYZ (D50 relative)\n+   *\n+   * Static as it's used by other ColorSpaceConverters to\n+   * convert to XYZ if the color space is defined in RGB.\n+   */\n+  public static float[] RGBtoXYZ(float[] in)\n+  {\n+    float[] temp = new float[3];\n+    float[] out = new float[3];\n+    for (int i = 0; i < 3; i++)\n+      if (in[i] <= 0.03928f)\n+\ttemp[i] = in[i] / 12.92f;\n+      else\n+\ttemp[i] = (float) Math.exp(2.4 * Math.log((in[i] + 0.055) / 1.055));\n+\n+    /*\n+     * Note: The numbers which were used to calculate this only had four\n+     * digits of accuracy. So don't be fooled by the number of digits here.\n+     * If someone has more accurate source, feel free to update this.\n+     */\n+    out[0] = (float) (0.436063750222 * temp[0] + 0.385149601465 * temp[1]\n+             + 0.143086418888 * temp[2]);\n+    out[1] = (float) (0.222450894035 * temp[0] + 0.71692584775 * temp[1]\n+             + 0.060624511256 * temp[2]);\n+    out[2] = (float) (0.0138985186 * temp[0] + 0.097079690112 * temp[1]\n+             + 0.713996045725 * temp[2]);\n+    return out;\n+  }\n+}"}, {"sha": "7726e45d3bacf5e90f11f80b32d93b9d933f7d86", "filename": "libjava/gnu/java/awt/color/TagEntry.java", "status": "renamed", "additions": 55, "deletions": 49, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FTagEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FTagEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FTagEntry.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n-/* GdkClasspathFontPeerMetrics.java\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+/* TagEntry.java -- A utility class used for storing the tags in ICC_Profile\n+   Copyright (C) 2004 Free Software Foundation\n \n    This file is part of GNU Classpath.\n \n@@ -33,84 +33,90 @@\n    or based on this library.  If you modify this library, you may extend\n    this exception to your version of the library, but you are not\n    obligated to do so.  If you do not wish to do so, delete this\n-   exception statement from your version. */\n+   exception statement from your version.\n+*/\n \n+package gnu.java.awt.color;\n \n-package gnu.java.awt.peer.gtk;\n \n-import java.awt.*;\n-import java.awt.font.*;\n-import java.awt.geom.*;\n-\n-public class GdkClasspathFontPeerMetrics extends FontMetrics\n+/**\n+ * TagEntry - stores a profile tag.\n+ * These are conveniently stored in a hashtable with the tag signature\n+ * as a key. A legal profile can only have one tag with a given sig,\n+ * so we can conveniently ignore collisions.\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class TagEntry\n {\n-  private final int native_state = GtkGenericPeer.getUniqueInteger();\n-\n-  private static final int ASCENT = 0, MAX_ASCENT = 1, \n-                       DESCENT = 2, MAX_DESCENT = 3, \n-                       MAX_ADVANCE = 4;\n-\n-  private int[] metrics;\n-  private native int[] initState (Object font);\n-\n-  public GdkClasspathFontPeerMetrics (Font font)\n+  // tag table entry size\n+  public static final int entrySize = 12;\n+  private int signature;\n+  private int size;\n+  private int offset;\n+  private byte[] data;\n+\n+  public TagEntry(int sig, int offset, int size, byte[] data)\n   {\n-    super (font);\n-    metrics = initState (font.getPeer());\n+    this.signature = sig;\n+    this.offset = offset;\n+    this.size = size;\n+    this.data = new byte[size];\n+    System.arraycopy(data, offset, this.data, 0, size);\n   }\n \n-  public int stringWidth (String str)\n+  public TagEntry(int sig, byte[] data)\n   {\n-    GlyphVector gv = font.createGlyphVector \n-      (new FontRenderContext \n-       (new AffineTransform (), false, false), str);\n-    Rectangle2D r = gv.getVisualBounds ();\n-    return (int) r.getWidth ();\n+    this.signature = sig;\n+    this.size = data.length;\n+    this.data = new byte[size];\n+    System.arraycopy(data, offset, this.data, 0, size);\n   }\n \n-  public int charWidth (char ch)\n+  public byte[] getData()\n   {\n-    return stringWidth (new String (new char[] { ch }));\n+    byte[] d = new byte[size];\n+    System.arraycopy(this.data, 0, d, 0, size);\n+    return d;\n   }\n \n-  public int charsWidth (char data[], int off, int len)\n+  public String hashKey()\n   {\n-    return stringWidth (new String (data, off, len));\n+    return tagHashKey(signature);\n   }\n \n-  /* \n-     Sun's Motif implementation always returns 0 or 1 here (???), but\n-     going by the X11 man pages, it seems as though we should return\n-     font.ascent + font.descent.\n-  */\n-  public int getLeading ()\n+  public String toString()\n   {\n-    return 1;\n-//      return metrics[ASCENT] + metrics[DESCENT];\n+    String s = \"\";\n+    s = s + (char) ((byte) ((signature >> 24) & 0xFF));\n+    s = s + (char) ((byte) ((signature >> 16) & 0xFF));\n+    s = s + (char) ((byte) ((signature >> 8) & 0xFF));\n+    s = s + (char) ((byte) (signature & 0xFF));\n+    return s;\n   }\n \n-  public int getAscent ()\n+  public int getSignature()\n   {\n-    return metrics[ASCENT];\n+    return signature;\n   }\n \n-  public int getMaxAscent ()\n+  public int getSize()\n   {\n-    return metrics[MAX_ASCENT];\n+    return size;\n   }\n \n-  public int getDescent ()\n+  public int getOffset()\n   {\n-    return metrics[DESCENT];\n+    return offset;\n   }\n \n-  public int getMaxDescent ()\n+  public void setOffset(int offset)\n   {\n-    return metrics[MAX_DESCENT];\n+    this.offset = offset;\n   }\n \n-  public int getMaxAdvance ()\n+  public static String tagHashKey(int sig)\n   {\n-    return metrics[MAX_ADVANCE];\n+    return \"\" + sig;\n   }\n }", "previous_filename": "libjava/gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java"}, {"sha": "a29598c4b4841214048a676ec05dcf0d18b25d5e", "filename": "libjava/gnu/java/awt/color/ToneReproductionCurve.java", "status": "added", "additions": 178, "deletions": 0, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FToneReproductionCurve.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FToneReproductionCurve.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FToneReproductionCurve.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,178 @@\n+/* ToneReproductionCurve.java -- Representation of an ICC 'curv' type TRC\n+   Copyright (C) 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version.\n+*/\n+\n+package gnu.java.awt.color;\n+\n+\n+/**\n+ * ToneReproductionCurve - TRCs are used to describe RGB\n+ * and Grayscale profiles. The TRC is essentially the gamma\n+ * function of the color space.\n+ *\n+ * For example, Apple RGB has a gamma of 1.8, most monitors are ~2.2,\n+ * sRGB is 2.4 with a small linear part near 0.\n+ * Linear spaces are of course 1.0.\n+ * (The exact function is implemented in SrgbConverter)\n+ *\n+ * The ICC specification allows the TRC to be described as a single\n+ * Gamma value, where the function is thus out = in**gamma.\n+ * Alternatively, the gamma function may be represented by a lookup table\n+ * of values, in which case linear interpolation is used.\n+ *\n+ * @author Sven de Marothy\n+ */\n+public class ToneReproductionCurve\n+{\n+  private float[] trc;\n+  private float gamma;\n+  private float[] reverseTrc;\n+\n+  /**\n+   * Constructs a TRC from a gamma values\n+   */\n+  public ToneReproductionCurve(float gamma)\n+  {\n+    trc = null;\n+    reverseTrc = null;\n+    this.gamma = gamma;\n+  }\n+\n+  /**\n+   * Constructs a TRC from a set of float values\n+   */\n+  public ToneReproductionCurve(float[] trcValues)\n+  {\n+    trc = new float[trcValues.length];\n+    System.arraycopy(trcValues, 0, trc, 0, trcValues.length);\n+    setupReverseTrc();\n+  }\n+\n+  /**\n+   * Constructs a TRC from a set of short values normalized to\n+   * the 0-65535 range (as in the ICC profile file).\n+   * (Note the values are treated as unsigned)\n+   */\n+  public ToneReproductionCurve(short[] trcValues)\n+  {\n+    trc = new float[trcValues.length];\n+    for (int i = 0; i < trcValues.length; i++)\n+      trc[i] = (float) ((int) trcValues[i] & (0xFFFF)) / 65535.0f;\n+    setupReverseTrc();\n+  }\n+\n+  /**\n+   * Performs a TRC lookup\n+   */\n+  public float lookup(float in)\n+  {\n+    float out;\n+\n+    if (trc == null)\n+      {\n+\tif (in == 0f)\n+\t  return 0.0f;\n+\treturn (float) Math.exp(gamma * Math.log(in));\n+      }\n+    else\n+      {\n+\tdouble alpha = in * (trc.length - 1);\n+\tint index = (int) Math.floor(alpha);\n+\talpha = alpha - (double) index;\n+\tif (index >= trc.length - 1)\n+\t  return trc[trc.length - 1];\n+\tif (index <= 0)\n+\t  return trc[0];\n+\tout = (float) (trc[index] * (1.0 - alpha) + trc[index + 1] * alpha);\n+      }\n+    return out;\n+  }\n+\n+  /**\n+   * Performs an reverse lookup\n+   */\n+  public float reverseLookup(float in)\n+  {\n+    float out;\n+\n+    if (trc == null)\n+      {\n+\tif (in == 0f)\n+\t  return 0.0f;\n+\treturn (float) Math.exp((1.0 / gamma) * Math.log(in));\n+      }\n+    else\n+      {\n+\tdouble alpha = in * (reverseTrc.length - 1);\n+\tint index = (int) Math.floor(alpha);\n+\talpha = alpha - (double) index;\n+\tif (index >= reverseTrc.length - 1)\n+\t  return reverseTrc[reverseTrc.length - 1];\n+\tif (index <= 0)\n+\t  return reverseTrc[0];\n+\tout = (float) (reverseTrc[index] * (1.0 - alpha)\n+\t      + reverseTrc[index + 1] * alpha);\n+      }\n+    return out;\n+  }\n+\n+  /**\n+   * Calculates a reverse-lookup table.\n+   * We use a whopping 10,000 entries.. This is should be more than any\n+   * real-life TRC table (typically around 256-1024) so we won't be losing\n+   * any precision.\n+   *\n+   * This will of course generate completely invalid results if the curve\n+   * is not monotonic and invertable. But what's the alternative?\n+   */\n+  public void setupReverseTrc()\n+  {\n+    reverseTrc = new float[10000];\n+    int j = 0;\n+    for (int i = 0; i < 10000; i++)\n+      {\n+\tfloat n = ((float) i) / 10000f;\n+\twhile (trc[j + 1] < n && j < trc.length - 2)\n+\t  j++;\n+\n+\tif (j == trc.length - 2)\n+\t  reverseTrc[i] = trc[trc.length - 1];\n+\telse\n+\t  reverseTrc[i] = (j + (n - trc[j]) / (trc[j + 1] - trc[j])) / ((float) trc.length);\n+      }\n+  }\n+}"}, {"sha": "da58dbbcfe39a809ea88a91550ec557cb72cbc6a", "filename": "libjava/gnu/java/awt/image/XBMDecoder.java", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fimage%2FXBMDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fimage%2FXBMDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fimage%2FXBMDecoder.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* XBMDecoder -- Decodes X-bitmaps\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,13 +35,19 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package gnu.java.awt.image;\n \n-import java.awt.*;\n-import java.awt.image.*;\n-import java.util.*;\n-import java.io.*;\n+import java.awt.image.ColorModel;\n+import java.awt.image.ImageConsumer;\n+import java.io.BufferedReader;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.IOException;\n+import java.io.Reader;\n import java.net.URL;\n+import java.util.StringTokenizer;\n+import java.util.Vector;\n \n public class XBMDecoder extends ImageDecoder\n {"}, {"sha": "79b1adf1807009b5b0036fc34dc1d075cf6c34b7", "filename": "libjava/gnu/java/awt/peer/ClasspathFontPeer.java", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -160,7 +160,7 @@ protected static String faceNameToFamilyName (String name)\n     return name;\n   }\n \n-  protected static void copyStyleToAttrs (int style, Map attrs)\n+  public static void copyStyleToAttrs (int style, Map attrs)\n   {\n     if ((style & Font.BOLD) == Font.BOLD)\n       attrs.put (TextAttribute.WEIGHT, TextAttribute.WEIGHT_BOLD);\n@@ -179,7 +179,7 @@ protected static void copyFamilyToAttrs (String fam, Map attrs)\n       attrs.put (TextAttribute.FAMILY, fam);\n   }\n   \n-  protected static void copySizeToAttrs (float size, Map attrs)\n+  public static void copySizeToAttrs (float size, Map attrs)\n   {\n     attrs.put (TextAttribute.SIZE, new Float (size));\n   }\n@@ -218,7 +218,7 @@ protected void setStandardAttributes (String name, Map attribs)\n     AffineTransform trans = this.transform;\n     float size = this.size;\n     int style = this.style;\n-    \n+\n     if (attribs.containsKey (TextAttribute.FAMILY))\n       family = (String) attribs.get (TextAttribute.FAMILY);\n \n@@ -243,7 +243,13 @@ protected void setStandardAttributes (String name, Map attribs)\n       {\n         Float sz = (Float) attribs.get (TextAttribute.SIZE);\n         size = sz.floatValue ();\n+\n+        // Pango doesn't accept 0 as a font size.\n+        if (size < 1)\n+          size = 1;\n       }\n+    else\n+      size = 12;\n \n     if (attribs.containsKey (TextAttribute.TRANSFORM))\n       {"}, {"sha": "143412caf994b973fc618feb71ae24dc07a57966", "filename": "libjava/gnu/java/awt/peer/ClasspathTextLayoutPeer.java", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathTextLayoutPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathTextLayoutPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathTextLayoutPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,111 @@\n+/* ClasspathTextLayoutPeer.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer;\n+\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.Shape;\n+import java.awt.font.TextHitInfo;\n+import java.awt.font.TextLayout;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Rectangle2D;\n+import java.text.CharacterIterator;\n+import java.text.AttributedCharacterIterator;\n+import java.text.AttributedString;\n+import java.util.Map;\n+import java.awt.font.TextAttribute;\n+\n+\n+/**\n+ * @author Graydon Hoare\n+ */\n+\n+public interface ClasspathTextLayoutPeer\n+{\n+  TextHitInfo getStrongCaret (TextHitInfo hit1, \n+                              TextHitInfo hit2);\n+\n+  void draw (Graphics2D g2, float x, float y);\n+\n+  byte getBaseline ();\n+\n+  boolean isLeftToRight ();\n+  boolean isVertical ();\n+\n+  float getAdvance ();\n+  float getAscent ();\n+  float getDescent ();\n+  float getLeading ();\n+\n+  int getCharacterCount ();\n+  byte getCharacterLevel (int index);\n+\n+  float[] getBaselineOffsets ();\n+  Shape getBlackBoxBounds (int firstEndpoint, int secondEndpoint);\n+  Rectangle2D getBounds ();\n+\n+  float[] getCaretInfo (TextHitInfo hit, Rectangle2D bounds);\n+  Shape getCaretShape (TextHitInfo hit, Rectangle2D bounds);\n+  Shape[] getCaretShapes (int offset, Rectangle2D bounds,\n+                          TextLayout.CaretPolicy policy);\n+\n+  Shape getLogicalHighlightShape (int firstEndpoint, int secondEndpoint,\n+                                  Rectangle2D bounds);\n+  int[] getLogicalRangesForVisualSelection (TextHitInfo firstEndpoint,\n+                                            TextHitInfo secondEndpoint);\n+\n+  TextHitInfo getNextLeftHit (int offset, TextLayout.CaretPolicy policy);\n+  TextHitInfo getNextRightHit (int offset, TextLayout.CaretPolicy policy);\n+  TextHitInfo hitTestChar (float x, float y, Rectangle2D bounds);\n+  TextHitInfo getVisualOtherHit (TextHitInfo hit);\n+\n+  float getVisibleAdvance ();\n+  Shape getOutline (AffineTransform tx);\n+  Shape getVisualHighlightShape (TextHitInfo firstEndpoint,\n+                                 TextHitInfo secondEndpoint,\n+                                 Rectangle2D bounds);\n+\n+  TextLayout getJustifiedLayout (float justificationWidth);\n+  void handleJustify (float justificationWidth);\n+\n+  Object clone ();\n+  int hashCode ();\n+  boolean equals (ClasspathTextLayoutPeer tl);\n+  String toString ();\n+}"}, {"sha": "c3219d1ea2472911da3a5453b10b5399d190d104", "filename": "libjava/gnu/java/awt/peer/GLightweightPeer.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -35,6 +35,7 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package gnu.java.awt.peer;\n \n import java.awt.AWTEvent;"}, {"sha": "3cd2f9a1cd2cf0ef2a6dc3d7f99adce730938e68", "filename": "libjava/gnu/java/awt/peer/gtk/GdkFontMetrics.java", "status": "modified", "additions": 60, "deletions": 25, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* GdkFontMetrics.java\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,33 +38,63 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import gnu.java.awt.ClasspathToolkit;\n+\n import java.awt.Font;\n import java.awt.FontMetrics;\n+import java.awt.Toolkit;\n \n public class GdkFontMetrics extends FontMetrics\n {\n-  private final int native_state = GtkGenericPeer.getUniqueInteger();\n-\n-  private static final int ASCENT = 0, MAX_ASCENT = 1, \n-                       DESCENT = 2, MAX_DESCENT = 3, \n-                       MAX_ADVANCE = 4;\n-\n-  private int[] metrics;\n-  private native int[] initState (String fname, int style, int size);\n+  \n+  private int[] font_metrics;\n+  GdkFontPeer peer;\n+\n+  static final int FONT_METRICS_ASCENT = 0;\n+  static final int FONT_METRICS_MAX_ASCENT = 1;\n+  static final int FONT_METRICS_DESCENT = 2;\n+  static final int FONT_METRICS_MAX_DESCENT = 3;\n+  static final int FONT_METRICS_MAX_ADVANCE = 4;\n+\n+  static final int TEXT_METRICS_X_BEARING = 0;\n+  static final int TEXT_METRICS_Y_BEARING = 1;\n+  static final int TEXT_METRICS_WIDTH = 2;\n+  static final int TEXT_METRICS_HEIGHT = 3;\n+  static final int TEXT_METRICS_X_ADVANCE = 4;\n+  static final int TEXT_METRICS_Y_ADVANCE = 5;\n+\n+  static native void getPeerFontMetrics(GdkFontPeer peer, double [] metrics);\n+  static native void getPeerTextMetrics(GdkFontPeer peer, String str, double [] metrics);\n \n   public GdkFontMetrics (Font font)\n-  {\n-    super (font);\n-    metrics = initState (font.getName (), font.getStyle (), font.getSize ());\n+  {    \n+    super (font.getPeer() instanceof GdkFontPeer \n+           ? font \n+           : ((ClasspathToolkit)(Toolkit.getDefaultToolkit ()))\n+           .getFont (font.getName(), font.getAttributes ()));\n+    \n+    peer = (GdkFontPeer) this.font.getPeer();\n+\n+    font_metrics = new int[5];\n+    double [] hires = new double[5];\n+\n+    if (GtkToolkit.useGraphics2D ())\n+      GdkGraphics2D.getPeerFontMetrics(peer, hires);\n+    else\n+      getPeerFontMetrics (peer, hires);\n+\n+    for (int i = 0; i < 5; ++i)\n+      font_metrics[i] = (int) hires[i];\n   }\n-\n-  native public int stringWidth (String fname, int style, int size,\n-                                 String str);\n-\n+  \n   public int stringWidth (String str)\n   {\n-    return stringWidth (font.getName (), font.getStyle (), font.getSize (),\n-                        str);\n+    double [] hires = new double[6];\n+    if (GtkToolkit.useGraphics2D())\n+      GdkGraphics2D.getPeerTextMetrics(peer, str, hires);\n+    else\n+      getPeerTextMetrics(peer, str, hires);\n+    return (int) hires [TEXT_METRICS_WIDTH];\n   }\n \n   public int charWidth (char ch)\n@@ -77,34 +107,39 @@ public int charsWidth (char data[], int off, int len)\n     return stringWidth (new String (data, off, len));\n   }\n \n-  // Sun's Motif implementation always returns 0 or 1 here (???).\n+  /* \n+     Sun's Motif implementation always returns 0 or 1 here (???), but\n+     going by the X11 man pages, it seems as though we should return\n+     font.ascent + font.descent.\n+  */\n   public int getLeading ()\n   {\n-    return 0;\n+    return 1;\n+//      return metrics[ASCENT] + metrics[DESCENT];\n   }\n \n   public int getAscent ()\n   {\n-    return metrics[ASCENT];\n+    return font_metrics[FONT_METRICS_ASCENT];\n   }\n \n   public int getMaxAscent ()\n   {\n-    return metrics[MAX_ASCENT];\n+    return font_metrics[FONT_METRICS_MAX_ASCENT];\n   }\n \n   public int getDescent ()\n   {\n-    return metrics[DESCENT];\n+    return font_metrics[FONT_METRICS_DESCENT];\n   }\n \n   public int getMaxDescent ()\n   {\n-    return metrics[MAX_DESCENT];\n+    return font_metrics[FONT_METRICS_MAX_DESCENT];\n   }\n \n   public int getMaxAdvance ()\n   {\n-    return metrics[MAX_ADVANCE];\n+    return font_metrics[FONT_METRICS_MAX_ADVANCE];\n   }\n }"}, {"sha": "ee05145102692e267ec45bb76a2c2423af14ae69", "filename": "libjava/gnu/java/awt/peer/gtk/GdkFontPeer.java", "status": "renamed", "additions": 86, "deletions": 86, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,68 +1,62 @@\n-/* GdkClasspathFontPeer.java -- backend implementation for Font object\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n-\n-   This file is part of GNU Classpath.\n-\n-   GNU Classpath is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-\n-   GNU Classpath is distributed in the hope that it will be useful, but\n-   WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GNU Classpath; see the file COPYING.  If not, write to the\n-   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-   02111-1307 USA.\n-\n-   Linking this library statically or dynamically with other modules is\n-   making a combined work based on this library.  Thus, the terms and\n-   conditions of the GNU General Public License cover the whole\n-   combination.\n-\n-   As a special exception, the copyright holders of this library give you\n-   permission to link this library with independent modules to produce an\n-   executable, regardless of the license terms of these independent\n-   modules, and to copy and distribute the resulting executable under\n-   terms of your choice, provided that you also meet, for each linked\n-   independent module, the terms and conditions of the license of that\n-   module.  An independent module is a module which is not derived from\n-   or based on this library.  If you modify this library, you may extend\n-   this exception to your version of the library, but you are not\n-   obligated to do so.  If you do not wish to do so, delete this\n-   exception statement from your version. */\n+/* GdkFontPeer.java -- Implements FontPeer with GTK+\n+   Copyright (C) 1999, 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n \n package gnu.java.awt.peer.gtk;\n-\n+import java.awt.peer.FontPeer;\n import java.awt.*;\n-import java.awt.font.*;\n import java.awt.geom.*;\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.io.Serializable;\n+import java.awt.font.*;\n import java.util.Locale;\n import java.util.Map;\n-import java.util.StringTokenizer;\n+import java.util.ResourceBundle;\n+import java.util.MissingResourceException;\n import java.text.CharacterIterator;\n import java.text.AttributedCharacterIterator;\n import java.text.StringCharacterIterator;\n-import java.awt.font.TextAttribute;\n import gnu.classpath.Configuration;\n import gnu.java.awt.peer.ClasspathFontPeer;\n \n-/**\n- * This class represents a windowing system font using the Pango\n- * unicode/glyph/font library and the Cairo rendering library.\n- *\n- * @author Graydon Hoare (graydon@redhat.com)\n- */\n-\n-public class GdkClasspathFontPeer extends ClasspathFontPeer\n+public class GdkFontPeer extends ClasspathFontPeer\n {\n+\n+  native static void initStaticState ();\n+  private final int native_state = GtkGenericPeer.getUniqueInteger ();\n+  private static ResourceBundle bundle;\n   \n   static \n   {\n@@ -71,26 +65,26 @@ public class GdkClasspathFontPeer extends ClasspathFontPeer\n         System.loadLibrary(\"gtkpeer\");\n       }\n \n-    if (GtkToolkit.useGraphics2D ())\n-      initStaticState ();\n-  }\n-  native static void initStaticState ();\n-  private final int native_state = GtkGenericPeer.getUniqueInteger ();\n-\n+    initStaticState ();\n \n-  /* Instance Variables */\n+    try\n+      {\n+\tbundle = ResourceBundle.getBundle (\"gnu.java.awt.peer.gtk.font\");\n+      }\n+    catch (Throwable ignored)\n+      {\n+\tbundle = null;\n+      }\n+  }\n \n   private native void initState ();\n   private native void dispose ();\n-  private native void setFont (String family, int style, int size);\n-\n-  protected void sync ()\n-  {\n-    this.setFont (this.familyName, this.style, (int)this.size);\n-  }\n+  private native void setFont (String family, int style, int size, boolean useGraphics2D);\n \n   protected void finalize ()\n   {\n+    if (GtkToolkit.useGraphics2D ())\n+      GdkGraphics2D.releasePeerGraphicsResource(this);\n     dispose ();\n   }\n \n@@ -101,49 +95,57 @@ protected void finalize ()\n    * triplicate.\n    */\n \n-  private String buildString(CharacterIterator i) {\n-    String s = new String ();\n-    for(char c = i.first(); c != CharacterIterator.DONE; c = i.next()) \n-      s += c;\n-    return s;\n+  private String buildString(CharacterIterator iter)\n+  {\n+    StringBuffer sb = new StringBuffer();\n+    for(char c = iter.first(); c != CharacterIterator.DONE; c = iter.next()) \n+      sb.append(c);\n+    return sb.toString();\n   }\n \n-  private String buildString(CharacterIterator iter, int begin, int limit) {\n-    String s = new String ();\n+  private String buildString(CharacterIterator iter, int begin, int limit)\n+  {\n+    StringBuffer sb = new StringBuffer();\n     int i = 0;\n     for(char c = iter.first(); c != CharacterIterator.DONE; c = iter.next(), i++) \n       {\n         if (begin <= i)\n-          s += c;\n+          sb.append(c);\n         if (limit <= i)\n           break;\n       }\n-    return s;\n+    return sb.toString();\n   }\n   \n-  private String buildString(char[] chars, int begin, int limit) {\n-    String s = new String ();\n-    for(int i = begin; i <= limit; i++)\n-      s += chars[i];\n-    return s;\n+  private String buildString(char[] chars, int begin, int limit)\n+  {\n+    return new String(chars, begin, limit - begin);\n   }\n \n   /* Public API */\n \n-  public GdkClasspathFontPeer (String name, int style, int size)\n+  public GdkFontPeer (String name, int style)\n+  {\n+    // All fonts get a default size of 12 if size is not specified.\n+    this(name, style, 12);\n+  }\n+\n+  public GdkFontPeer (String name, int style, int size)\n   {  \n     super(name, style, size);    \n     initState ();\n-    setFont (this.familyName, this.style, (int)this.size);\n+    setFont (this.familyName, this.style, (int)this.size, \n+             GtkToolkit.useGraphics2D());\n   }\n \n-  public GdkClasspathFontPeer (String name, Map attributes)\n+  public GdkFontPeer (String name, Map attributes)\n   {\n     super(name, attributes);\n     initState ();\n-    setFont (this.familyName, this.style, (int)this.size);\n+    setFont (this.familyName, this.style, (int)this.size,\n+             GtkToolkit.useGraphics2D());\n   }\n-\n+  \n   public String getSubFamilyName(Font font, Locale locale)\n   {\n     return null;\n@@ -228,7 +230,6 @@ public float getHeight()\n \n   }\n \n-\n   public LineMetrics getLineMetrics (Font font, CharacterIterator ci, \n                                      int begin, int limit, FontRenderContext rc)\n   {\n@@ -288,8 +289,7 @@ public LineMetrics getLineMetrics (Font font, String str,\n \n   public FontMetrics getFontMetrics (Font font)\n   {\n-    return new GdkClasspathFontPeerMetrics (font);\n+    return new GdkFontMetrics (font);\n   }\n \n }\n-", "previous_filename": "libjava/gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java"}, {"sha": "c37de5274ac83bea0b8b30f5ac98debb91d07914", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGlyphVector.java", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGlyphVector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGlyphVector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGlyphVector.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,57 +1,57 @@\n /* GdkGlyphVector.java -- Glyph vector object\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n-\n-   This file is part of GNU Classpath.\n-\n-   GNU Classpath is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-\n-   GNU Classpath is distributed in the hope that it will be useful, but\n-   WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GNU Classpath; see the file COPYING.  If not, write to the\n-   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-   02111-1307 USA.\n-\n-   Linking this library statically or dynamically with other modules is\n-   making a combined work based on this library.  Thus, the terms and\n-   conditions of the GNU General Public License cover the whole\n-   combination.\n-\n-   As a special exception, the copyright holders of this library give you\n-   permission to link this library with independent modules to produce an\n-   executable, regardless of the license terms of these independent\n-   modules, and to copy and distribute the resulting executable under\n-   terms of your choice, provided that you also meet, for each linked\n-   independent module, the terms and conditions of the license of that\n-   module.  An independent module is a module which is not derived from\n-   or based on this library.  If you modify this library, you may extend\n-   this exception to your version of the library, but you are not\n-   obligated to do so.  If you do not wish to do so, delete this\n-   exception statement from your version. */\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.*;\n-import java.awt.font.*;\n-import java.awt.geom.*;\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.io.Serializable;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.StringTokenizer;\n-import java.text.CharacterIterator;\n-import java.text.AttributedCharacterIterator;\n import gnu.classpath.Configuration;\n \n-public class GdkGlyphVector extends GlyphVector \n+import java.awt.Font;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphMetrics;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.GlyphJustificationInfo;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Point2D;\n+import java.awt.geom.Rectangle2D;\n+\n+public class GdkGlyphVector extends GlyphVector\n {\n \n   static \n@@ -70,7 +70,7 @@ public class GdkGlyphVector extends GlyphVector\n   private Font font;\n   private FontRenderContext ctx;\n     \n-  private native void initState (GdkClasspathFontPeer peer, FontRenderContext ctx);\n+  private native void initState (GdkFontPeer peer, FontRenderContext ctx);\n   private native void setChars (String s);\n   private native void setGlyphCodes (int codes[]);\n   private native void dispose ();\n@@ -109,15 +109,15 @@ storage format in pango (1024ths of pixels).\n    */\n \n \n-  public GdkGlyphVector (Font f, GdkClasspathFontPeer peer, FontRenderContext c, String s)\n+  public GdkGlyphVector (Font f, GdkFontPeer peer, FontRenderContext c, String s)\n   {\n     font = f;\n     ctx = c;\n     initState (peer, ctx);\n     setChars (s);\n   }\n \n-  public GdkGlyphVector (Font f, GdkClasspathFontPeer peer, FontRenderContext c, int codes[])\n+  public GdkGlyphVector (Font f, GdkFontPeer peer, FontRenderContext c, int codes[])\n   {\n     font = f;\n     ctx = c;"}, {"sha": "5aacf5296c64d0da4cc76893257acd6f331e41c0", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics.java", "status": "modified", "additions": 80, "deletions": 21, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -90,17 +90,31 @@ public class GdkGraphics extends Graphics\n   GdkGraphics (GtkComponentPeer component)\n   {\n     this.component = component;\n+    font = component.awtComponent.getFont ();\n+\n+    if (component.isRealized ())\n+      initComponentGraphics ();\n+    else\n+      connectSignals (component);\n+  }\n+\n+  void initComponentGraphics ()\n+  {\n     initState (component);\n     color = component.awtComponent.getForeground ();\n-    font = component.awtComponent.getFont ();\n     Dimension d = component.awtComponent.getSize ();\n     clip = new Rectangle (0, 0, d.width, d.height);\n   }\n \n+  native void connectSignals (GtkComponentPeer component);\n+\n   public native void clearRect (int x, int y, int width, int height);\n \n   public void clipRect (int x, int y, int width, int height)\n   {\n+    if (component != null && ! component.isRealized ())\n+      return;\n+\n     clip = clip.intersection (new Rectangle (x, y, width, height));\n     setClipRectangle (clip.x, clip.y, clip.width, clip.height);\n   }\n@@ -113,16 +127,6 @@ public Graphics create ()\n     return new GdkGraphics (this);\n   }\n \n-//    public Graphics create (int x, int y, int width, int height)\n-//    {\n-//      GdkGraphics g = new GdkGraphics (this);\n-//      System.out.println (\"translating by: \" + x +\" \" + y);\n-//      g.translate (x, y);\n-//      g.clipRect (0, 0, width, height);\n-\n-//      return g;\n-//    }\n-  \n   native public void dispose ();\n \n   native void copyPixmap (Graphics g, int x, int y, int width, int height);\n@@ -134,24 +138,45 @@ native void copyAndScalePixmap (Graphics g, boolean flip_x, boolean flip_y,\n   public boolean drawImage (Image img, int x, int y, \n \t\t\t    Color bgcolor, ImageObserver observer)\n   {\n+    if (component != null && ! component.isRealized ())\n+      return false;\n+\n     if (img instanceof GtkOffScreenImage)\n       {\n+        int width = img.getWidth (null);\n+        int height = img.getHeight (null);\n \tcopyPixmap (img.getGraphics (), \n-\t\t    x, y, img.getWidth (null), img.getHeight (null));\n+\t\t    x, y, width, height);\n+        // FIXME: need to differentiate between SOMEBITS and FRAMEBITS.\n+        if (observer != null)\n+          observer.imageUpdate (img,\n+                                ImageObserver.FRAMEBITS,\n+                                x, y, width, height);\n \treturn true;\n       }\n \n     GtkImage image = (GtkImage) img;\n-    new GtkImagePainter (image, this, x, y, -1, -1, bgcolor);\n+    new GtkImagePainter (image, this, x, y, -1, -1, bgcolor, observer);\n     return image.isLoaded ();\n   }\n \n   public boolean drawImage (Image img, int x, int y, ImageObserver observer)\n   {\n+    if (component != null && ! component.isRealized ())\n+      return false;\n+\n     if (img instanceof GtkOffScreenImage)\n       {\n+        int width = img.getWidth (null);\n+        int height = img.getHeight (null);\n \tcopyPixmap (img.getGraphics (), \n-\t\t    x, y, img.getWidth (null), img.getHeight (null));\n+\t\t    x, y, width, height);\n+\n+        // FIXME: need to differentiate between SOMEBITS and FRAMEBITS.\n+        if (observer != null)\n+          observer.imageUpdate (img,\n+                                ImageObserver.FRAMEBITS,\n+                                x, y, width, height);\n \treturn true;\n       }\n \n@@ -164,22 +189,33 @@ public boolean drawImage (Image img, int x, int y, ImageObserver observer)\n   public boolean drawImage (Image img, int x, int y, int width, int height, \n \t\t\t    Color bgcolor, ImageObserver observer)\n   {\n+    if (component != null && ! component.isRealized ())\n+      return false;\n+\n     if (img instanceof GtkOffScreenImage)\n       {\n         copyAndScalePixmap (img.getGraphics (), false, false,\n                             0, 0, img.getWidth (null), img.getHeight (null), \n                             x, y, width, height);\n+        // FIXME: need to differentiate between SOMEBITS and FRAMEBITS.\n+        if (observer != null)\n+          observer.imageUpdate (img,\n+                                ImageObserver.FRAMEBITS,\n+                                x, y, width, height);\n         return true;\n       }\n \n     GtkImage image = (GtkImage) img;\n-    new GtkImagePainter (image, this, x, y, width, height, bgcolor);\n+    new GtkImagePainter (image, this, x, y, width, height, bgcolor, observer);\n     return image.isLoaded ();\n   }\n \n   public boolean drawImage (Image img, int x, int y, int width, int height, \n \t\t\t    ImageObserver observer)\n   {\n+    if (component != null && ! component.isRealized ())\n+      return false;\n+\n     if (component != null)\n       return drawImage (img, x, y, width, height, component.getBackground (),\n                         observer);\n@@ -192,6 +228,9 @@ public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2,\n \t\t\t    int sx1, int sy1, int sx2, int sy2, \n \t\t\t    Color bgcolor, ImageObserver observer)\n   {\n+    if (component != null && ! component.isRealized ())\n+      return false;\n+\n     if (img instanceof GtkOffScreenImage)\n       {\n         int dx_start, dy_start, d_width, d_height;\n@@ -247,19 +286,28 @@ public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2,\n         copyAndScalePixmap (img.getGraphics (), x_flip, y_flip,\n                             sx_start, sy_start, s_width, s_height, \n                             dx_start, dy_start, d_width, d_height);\n+\n+        // FIXME: need to differentiate between SOMEBITS and FRAMEBITS.\n+        if (observer != null)\n+          observer.imageUpdate (img,\n+                                ImageObserver.FRAMEBITS,\n+                                dx_start, dy_start, d_width, d_height);\n         return true;\n       }\n \n     GtkImage image = (GtkImage) img;\n     new GtkImagePainter (image, this, dx1, dy1, dx2, dy2, \n-\t\t\t sx1, sy1, sx2, sy2, bgcolor);\n+\t\t\t sx1, sy1, sx2, sy2, bgcolor, observer);\n     return image.isLoaded ();\n   }\n \n   public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2, \n \t\t\t    int sx1, int sy1, int sx2, int sy2, \n \t\t\t    ImageObserver observer) \n   {\n+    if (component != null && ! component.isRealized ())\n+      return false;\n+\n     if (component != null)\n       return drawImage (img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2,\n                         component.getBackground (), observer);\n@@ -285,11 +333,17 @@ native public void fillArc (int x, int y, int width, int height,\n   native public void drawRect(int x, int y, int width, int height);\n   native public void fillRect (int x, int y, int width, int height);\n \n-  native void drawString (String str, int x, int y, String fname, int style, int size);\n+  GdkFontPeer getFontPeer() \n+  {\n+    return (GdkFontPeer) getFont().getPeer(); \n+  }\n+\n+  native void drawString (GdkFontPeer f, String str, int x, int y);\n   public void drawString (String str, int x, int y)\n   {\n-    drawString (str, x, y, font.getName(), font.getStyle(), font.getSize());\n+    drawString(getFontPeer(), str, x, y);\n   }\n+  \n \n   public void drawString (AttributedCharacterIterator ci, int x, int y)\n   {\n@@ -350,7 +404,6 @@ public Shape getClip ()\n \n   public Rectangle getClipBounds ()\n   {\n-//      System.out.println (\"returning CLIP: \" + clip);\n     return new Rectangle (clip.x, clip.y, clip.width, clip.height);\n   }\n \n@@ -373,6 +426,9 @@ public FontMetrics getFontMetrics (Font font)\n \n   public void setClip (int x, int y, int width, int height)\n   {\n+    if (component != null && ! component.isRealized ())\n+      return;\n+\n     clip.x = x;\n     clip.y = y;\n     clip.width = width;\n@@ -396,7 +452,7 @@ public void setClip (Shape clip)\n   public void setColor (Color c)\n   {\n     if (c == null)\n-      color = new Color (0, 0, 0);\n+      color = Color.BLACK;\n     else\n       color = c;\n \n@@ -407,7 +463,7 @@ public void setColor (Color c)\n \t\t  color.getGreen () ^ xorColor.getGreen (),\n \t\t  color.getBlue  () ^ xorColor.getBlue ());\n   }\n-\n+  \n   public void setFont (Font font)\n   {\n     this.font = font;\n@@ -437,6 +493,9 @@ public void setXORMode (Color c)\n \n   public void translate (int x, int y)\n   {\n+    if (component != null && ! component.isRealized ())\n+      return;\n+\n     clip.x -= x;\n     clip.y -= y;\n "}, {"sha": "82de03d5aecb043ec0ab39207a216e77a9580870", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics2D.java", "status": "modified", "additions": 241, "deletions": 325, "changes": 566, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* GdkGraphics2D.java\n-   Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,21 +38,60 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.*;\n-import java.awt.geom.*;\n-import java.awt.font.*;\n-import java.awt.color.*;\n-import java.awt.image.*;\n-import java.awt.image.renderable.*;\n-import java.util.HashMap;\n-import java.util.Map;\n+import gnu.classpath.Configuration;\n+import gnu.java.awt.ClasspathToolkit;\n+import gnu.java.awt.peer.ClasspathFontPeer;\n \n+import java.awt.AlphaComposite;\n+import java.awt.BasicStroke;\n+import java.awt.Color;\n+import java.awt.Composite;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.GradientPaint;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.Image;\n+import java.awt.Paint;\n+import java.awt.Rectangle;\n+import java.awt.RenderingHints;\n+import java.awt.Shape;\n+import java.awt.Stroke;\n+import java.awt.TexturePaint;\n+import java.awt.Toolkit;\n+import java.awt.color.ColorSpace;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.GlyphJustificationInfo;\n+import java.awt.geom.Arc2D;\n+import java.awt.geom.GeneralPath;\n+import java.awt.geom.NoninvertibleTransformException;\n+import java.awt.geom.PathIterator;\n+import java.awt.geom.Point2D;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.geom.AffineTransform;\n+import java.awt.image.AffineTransformOp;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.BufferedImageOp;\n+import java.awt.image.ColorModel;\n+import java.awt.image.CropImageFilter;\n+import java.awt.image.DataBuffer;\n+import java.awt.image.DataBufferInt;\n+import java.awt.image.FilteredImageSource;\n+import java.awt.image.ImageConsumer;\n+import java.awt.image.ImageObserver;\n+import java.awt.image.ImagingOpException;\n+import java.awt.image.SampleModel;\n+import java.awt.image.Raster;\n+import java.awt.image.RenderedImage;\n+import java.awt.image.WritableRaster;\n+import java.awt.image.renderable.RenderableImage;\n+import java.awt.image.renderable.RenderContext;\n import java.text.AttributedCharacterIterator;\n+import java.util.HashMap;\n+import java.util.Map;\n import java.util.Stack;\n-import java.lang.Integer;\n-import gnu.java.awt.ClasspathToolkit;\n-import gnu.java.awt.peer.ClasspathFontPeer;\n-import gnu.classpath.Configuration;\n \n public class GdkGraphics2D extends Graphics2D\n {\n@@ -85,6 +124,8 @@ public class GdkGraphics2D extends Graphics2D\n   private RenderingHints hints;\n   private BufferedImage bimage;\n \n+  private Composite comp;\n+\n   private Stack stateStack;\n   \n   native private void initState (GtkComponentPeer component);\n@@ -93,6 +134,7 @@ public class GdkGraphics2D extends Graphics2D\n   native public void dispose ();\n   native private int[] getImagePixels();\n   native private void cairoSurfaceSetFilter(int filter);\n+  native void connectSignals (GtkComponentPeer component);\n \n   public void finalize ()\n   {\n@@ -113,7 +155,7 @@ public Graphics create (int x, int y, int width, int height)\n   {\n     paint = g.paint;\n     stroke = g.stroke;\n-    hints = g.hints;\n+    setRenderingHints (g.hints);\n \n     if (g.fg.getAlpha() != -1)\n       fg = new Color (g.fg.getRed (), g.fg.getGreen (), \n@@ -145,8 +187,8 @@ public Graphics create (int x, int y, int width, int height)\n     setBackground (bg);\n     setPaint (paint);\n     setStroke (stroke);\n-    setClip (clip);\n     setTransform (transform);\n+    setClip (clip);\n     stateStack = new Stack();\n   }\n \n@@ -168,12 +210,22 @@ public Graphics create (int x, int y, int width, int height)\n   GdkGraphics2D (GtkComponentPeer component)\n   {\n     this.component = component;\n+\n+    setFont (new Font(\"SansSerif\", Font.PLAIN, 12));\n+\n+    if (component.isRealized ())\n+      initComponentGraphics2D ();\n+    else\n+      connectSignals (component);\n+  }\n+\n+  void initComponentGraphics2D ()\n+  {\n     initState (component);\n \n     setColor (component.awtComponent.getForeground ());\n     setBackground (component.awtComponent.getBackground ());\n     setPaint (getColor());\n-    setFont (new Font(\"SansSerif\", Font.PLAIN, 12));\n     setTransform (new AffineTransform ());\n     setStroke (new BasicStroke ());\n     setRenderingHints (getDefaultHints());\n@@ -224,9 +276,6 @@ private native void setGradient (double x1, double y1,\n   private native void cairoSave ();\n   private native void cairoRestore ();\n   private native void cairoSetMatrix (double m[]);\n-  private native void cairoSetFont (GdkClasspathFontPeer peer);\n-  private native void cairoShowGlyphs (int codes[],\n-                                       float positions[]);\n   private native void cairoSetOperator (int cairoOperator);\n   private native void cairoSetRGBColor (double red, double green, double blue);\n   private native void cairoSetAlpha (double alpha);\n@@ -268,6 +317,7 @@ private native void cairoRectangle (double x, double y,\n \tprivate Shape clip;\n \tprivate AffineTransform transform;\n \tprivate Font font;  \n+\tprivate Composite comp;\n \tDrawState (GdkGraphics2D g)\n \t{\n \t    this.paint = g.paint;\n@@ -278,6 +328,7 @@ private native void cairoRectangle (double x, double y,\n \t    if (g.transform != null)\n \t\tthis.transform = (AffineTransform) g.transform.clone();\n \t    this.font = g.font;\n+\t    this.comp = g.comp;\n \t}\n \tpublic void restore(GdkGraphics2D g)\n \t{\n@@ -288,6 +339,7 @@ public void restore(GdkGraphics2D g)\n \t    g.clip = this.clip;\n \t    g.transform = this.transform;\n \t    g.font = this.font;\n+\t    g.comp = this.comp;\n \t}\n     }\n     \n@@ -303,17 +355,23 @@ private void stateRestore ()\n \tcairoRestore ();\n     }\n \n+  // Some operations (drawing rather than filling) require that their\n+  // coords be shifted to land on 0.5-pixel boundaries, in order to land on\n+  // \"middle of pixel\" coordinates and light up complete pixels.\n \n-  double x;\n-  double y;\n-  private void setPos (double nx, double ny)\n+  private boolean shiftDrawCalls = false;\n+  private final double shifted(double coord, boolean doShift)\n   {\n-    x = nx;\n-    y = ny;\n+    if (doShift)\n+      return Math.floor(coord) + 0.5;\n+    else\n+      return coord;\n   }\n \n-  private void walkPath(PathIterator p)\n+  private final void walkPath(PathIterator p, boolean doShift)\n   {\n+    double x = 0;\n+    double y = 0;\n     double coords[] = new double[6];\n \n     cairoSetFillRule (p.getWindingRule ());\n@@ -324,37 +382,41 @@ private void walkPath(PathIterator p)\n           {\n \n           case PathIterator.SEG_MOVETO:\n-            setPos(coords[0], coords[1]);\n-            cairoMoveTo (coords[0], coords[1]);\n+            x = shifted(coords[0], doShift);\n+            y = shifted(coords[1], doShift);\n+            cairoMoveTo (x, y);\n             break;\n \n           case PathIterator.SEG_LINETO:\n-            setPos(coords[0], coords[1]);\n-            cairoLineTo (coords[0], coords[1]);\n+            x = shifted(coords[0], doShift);\n+            y = shifted(coords[1], doShift);\n+            cairoLineTo (x, y);\n             break;\n \n           case PathIterator.SEG_QUADTO:\n \n             // splitting a quadratic bezier into a cubic:\n             // see: http://pfaedit.sourceforge.net/bezier.html\n \n-            double x1 = x + (2.0/3.0) * (coords[0] - x);\n-            double y1 = y + (2.0/3.0) * (coords[1] - y);\n+            double x1 = x + (2.0/3.0) * (shifted(coords[0], doShift) - x);\n+            double y1 = y + (2.0/3.0) * (shifted(coords[1], doShift) - y);\n             \n-            double x2 = x1 + (1.0/3.0) * (coords[2] - x);\n-            double y2 = y1 + (1.0/3.0) * (coords[3] - y);\n+            double x2 = x1 + (1.0/3.0) * (shifted(coords[2], doShift) - x);\n+            double y2 = y1 + (1.0/3.0) * (shifted(coords[3], doShift) - y);\n \n-            setPos(coords[2], coords[3]);\n+            x = shifted(coords[2], doShift);\n+            y = shifted(coords[3], doShift);\n             cairoCurveTo (x1, y1,\n                           x2, y2,\n-                          coords[2], coords[3]);\n+                          x, y);\n             break;\n \n           case PathIterator.SEG_CUBICTO:\n-            setPos(coords[4], coords[5]);\n-            cairoCurveTo (coords[0], coords[1],\n-                          coords[2], coords[3],\n-                          coords[4], coords[5]);\n+            x = shifted(coords[4], doShift);\n+            y = shifted(coords[5], doShift);\n+            cairoCurveTo (shifted(coords[0], doShift), shifted(coords[1], doShift),\n+                          shifted(coords[2], doShift), shifted(coords[3], doShift),\n+                          x, y);\n             break;\n \n           case PathIterator.SEG_CLOSE:\n@@ -365,7 +427,7 @@ private void walkPath(PathIterator p)\n   }\n \n \n-  private Map getDefaultHints()\n+  private final Map getDefaultHints()\n   {\n     HashMap defaultHints = new HashMap ();\n     \n@@ -388,23 +450,19 @@ private Map getDefaultHints()\n     \n   }\n \n-  private void updateBufferedImage()\n+  private final void updateBufferedImage()\n   {\n     int[] pixels = getImagePixels();\n     updateImagePixels(pixels);\n   }\n \n   \n-  private boolean isBufferedImageGraphics ()\n+  private final boolean isBufferedImageGraphics ()\n   {\n-\n-    if (bimage != null)\n-      return true;\n-    else\n-      return false;\n+    return bimage != null;\n   }\n     \n-  private void updateImagePixels (int[] pixels)\n+  private final void updateImagePixels (int[] pixels)\n   {\n \n     // This function can only be used if \n@@ -439,11 +497,15 @@ private void updateImagePixels (int[] pixels)\n   }\n \n \n-  private boolean drawImage(Image img, \n-                            AffineTransform xform,\n-                            Color bgcolor,\t\t\t    \n-                            ImageObserver obs)\n+  private final boolean drawImage(Image img, \n+                                  AffineTransform xform,\n+                                  Color bgcolor,\t\t\t    \n+                                  ImageObserver obs)\n   {\n+\n+    if (img == null)\n+      return false;\n+\n     if (img instanceof GtkOffScreenImage &&\n         img.getGraphics () instanceof GdkGraphics2D &&            \n         (xform == null \n@@ -461,8 +523,8 @@ private boolean drawImage(Image img,\n         return true;\n       }\n     else\n-      {\n-      \n+      {      \n+\n         // In this case, xform is an AffineTransform that transforms bounding\n         // box of the specified image from image space to user space. However\n         // when we pass this transform to cairo, cairo will use this transform\n@@ -475,23 +537,22 @@ private boolean drawImage(Image img,\n \n         try\n           {             \n-\t      invertedXform = xform.createInverse();\n+            invertedXform = xform.createInverse();\n              if (img instanceof BufferedImage)\n                {\n                    // draw an image which has actually been loaded \n                    // into memory fully\n                    \n-\t\t     BufferedImage b = (BufferedImage) img;\n-                   return drawRaster (b.getColorModel (), \n-                                      b.getData (), \n-                                      invertedXform,\n-                                      bgcolor);\n+                 BufferedImage b = (BufferedImage) img;\n+                 return drawRaster (b.getColorModel (), \n+                                    b.getData (), \n+                                    invertedXform,\n+                                    bgcolor);\n                }\n              else\n                {\n-                   // begin progressive loading in a separate thread\n-                   new PainterThread (this, img, invertedXform, bgcolor);\n-                   return false;\n+                 return this.drawImage(GdkPixbufDecoder.createBufferedImage(img.getSource()),\n+                                       xform, bgcolor,obs);\n                }\t       \n           }\n         catch (NoninvertibleTransformException e)\n@@ -517,48 +578,34 @@ public void draw (Shape s)\n         return;\n       }\n \n-    stateSave ();\n     cairoNewPath ();\n-\n-    boolean normalize;\n-    normalize = hints.containsValue (RenderingHints.VALUE_STROKE_NORMALIZE)\n-                || hints.containsValue (RenderingHints.VALUE_STROKE_DEFAULT);\n-\n-    if (normalize)\n-      translate (0.5,0.5);      \n     \n     if (s instanceof Rectangle2D)\n       {\n         Rectangle2D r = (Rectangle2D)s;\n-        cairoRectangle (r.getX (), r.getY (), r.getWidth (), r.getHeight ());\n+        cairoRectangle (shifted(r.getX (), shiftDrawCalls), \n+                        shifted(r.getY (), shiftDrawCalls), \n+                        r.getWidth (), r.getHeight ());\n       }\n     else      \n-      walkPath (s.getPathIterator (null));\n+      walkPath (s.getPathIterator (null), shiftDrawCalls);\n     cairoStroke ();\n     \n-    if (normalize)\n-      translate (-0.5,-0.5);\n-      \n-    stateRestore ();\n-    \n     if (isBufferedImageGraphics ()) \n       updateBufferedImage();   \n-\n   }\n \n   public void fill (Shape s)\n   {\n-    stateSave();\n     cairoNewPath ();\n     if (s instanceof Rectangle2D)\n       {\n         Rectangle2D r = (Rectangle2D)s;\n         cairoRectangle (r.getX (), r.getY (), r.getWidth (), r.getHeight ());\n       }\n     else      \n-      walkPath (s.getPathIterator (null));\n+      walkPath (s.getPathIterator (null), false);\n     cairoFill ();\n-    stateRestore ();\n     \n    if (isBufferedImageGraphics ()) \n      updateBufferedImage();   \n@@ -592,8 +639,8 @@ else if (s instanceof Rectangle2D\n \t\t\t\t      r.getWidth (), r.getHeight ());\n \t\t  }\n \t      else\n-\t\t  walkPath (clip.getPathIterator (null));\n-\t      cairoClosePath ();\n+                walkPath (clip.getPathIterator (null), false);\n+\t      // cairoClosePath ();\n \t      cairoClip ();\n \t  }\n   }\n@@ -739,7 +786,7 @@ public void setStroke (Stroke st)\n       {\n         BasicStroke bs = (BasicStroke) stroke;\n         cairoSetLineCap (bs.getEndCap());\n-        cairoSetLineWidth (bs.getLineWidth() / 2.0);\n+        cairoSetLineWidth (bs.getLineWidth());\n         cairoSetLineJoin (bs.getLineJoin());\n         cairoSetMiterLimit (bs.getMiterLimit());\n         float dashes[] = bs.getDashArray();\n@@ -771,6 +818,9 @@ public void setXORMode (Color c)\n \n   public void setColor (Color c)\n   {\n+    if (c == null)\n+      c = Color.BLACK;\n+    \n     fg = c;\n     paint = c;\n     cairoSetRGBColor (fg.getRed() / 255.0, \n@@ -802,23 +852,23 @@ public Rectangle getClipBounds ()\n       return clip.getBounds ();\n   }\n \n-    protected Rectangle2D getClipInDevSpace ()\n-    {\n-\tRectangle2D uclip = clip.getBounds2D ();\n-\tif (transform == null)\n-\t    return uclip;\n-\telse\n-\t    {\n-\t\tPoint2D pos = transform.transform (new Point2D.Double(uclip.getX (), \n-\t\t\t\t\t\t\t\t      uclip.getY ()), \n-\t\t\t\t\t\t   (Point2D)null);\t\t\n-\t\tPoint2D extent = transform.deltaTransform (new Point2D.Double(uclip.getWidth (), \n-\t\t\t\t\t\t\t\t\t      uclip.getHeight ()), \n-\t\t\t\t\t\t\t   (Point2D)null);\n-\t\treturn new Rectangle2D.Double (pos.getX (), pos.getY (),\n-\t\t\t\t\t       extent.getX (), extent.getY ());\t      \n-\t    }\n-    }\n+  protected Rectangle2D getClipInDevSpace ()\n+  {\n+    Rectangle2D uclip = clip.getBounds2D ();\n+    if (transform == null)\n+      return uclip;\n+    else\n+      {\n+        Point2D pos = transform.transform (new Point2D.Double(uclip.getX (), \n+                                                              uclip.getY ()), \n+                                           (Point2D)null);\t\t\n+        Point2D extent = transform.deltaTransform (new Point2D.Double(uclip.getWidth (), \n+                                                                      uclip.getHeight ()), \n+                                                   (Point2D)null);\n+        return new Rectangle2D.Double (pos.getX (), pos.getY (),\n+                                       extent.getX (), extent.getY ());\t      \n+      }\n+  }\n \n   public void setClip (int x, int y, int width, int height)\n   {\n@@ -839,96 +889,34 @@ public void setClip (Shape s)\n                             r.getWidth (), r.getHeight ());\n           }\n         else\n-          walkPath (s.getPathIterator (null));\n-        cairoClosePath ();\n+          walkPath (s.getPathIterator (null), false);\n+        // cairoClosePath ();\n         cairoClip ();\n       }\n   }\n   \n+  private static BasicStroke draw3DRectStroke = new BasicStroke();\n+\n   public void draw3DRect(int x, int y, int width, \n                          int height, boolean raised)\n   {\n-    Color std = fg;\n-    Color light = std.brighter();\n-    Color dark = std.darker();\n-\n-    if (!raised)\n-      {\n-        Color t = light;\n-        light = dark;\n-        dark = t;\n-      }\n-    \n-    double x1 = (double) x;\n-    double x2 = (double) x + width;\n-\n-    double y1 = (double) y;\n-    double y2 = (double) y + height;\n-\n-    stateSave ();\n-    \n-    cairoNewPath ();\n-    \n-    boolean normalize;\n-    normalize = hints.containsValue (RenderingHints.VALUE_STROKE_NORMALIZE)\n-                || hints.containsValue (RenderingHints.VALUE_STROKE_DEFAULT);\n-\t\t\n-    if (normalize) \n-      {\n-    \tx1 += 0.5;\n-\ty1 += 0.5; \n-\tx2 += 0.5;\n-\ty2 += 0.5; \n-      }\n-    \n-    setColor (light);\n-    cairoMoveTo (x1, y1);\n-    cairoLineTo (x2, y1);\n-    cairoLineTo (x2, y2);\n-    cairoStroke ();\n-    \n-    cairoNewPath ();\n-    setColor (dark);\n-    cairoMoveTo (x1, y1);\n-    cairoLineTo (x1, y2);\n-    cairoLineTo (x2, y2);\n-    cairoStroke ();\n-    \n-    stateRestore ();    \n-    \n+    Stroke tmp = stroke;\n+    setStroke(draw3DRectStroke);\n+    super.draw3DRect(x, y, width, height, raised);\n+    setStroke(tmp);    \n     if (isBufferedImageGraphics ()) \n       updateBufferedImage();   \n-\n   }\n \n   public void fill3DRect(int x, int y, int width, \n                          int height, boolean raised)\n   {\n-    double step = 1.0;\n-    if (stroke != null && stroke instanceof BasicStroke)\n-      {\n-        BasicStroke bs = (BasicStroke) stroke;\n-        step = bs.getLineWidth();\n-      }\n-\n-    Color bright = fg.brighter ();\n-    Color dark = fg.darker ();\n-      \n-    draw3DRect (x, y, width, height, raised);\n-    \n-    stateSave ();\n-    translate (step/2.0, step/2.0);\n-    cairoNewPath ();\n-    cairoRectangle ((double) x, (double) y, \n-                    ((double) width) - step, \n-                    ((double) height) - step );\n-    cairoClosePath ();\n-    cairoFill ();\n-    stateRestore ();\n-    \n+    Stroke tmp = stroke;\n+    setStroke(draw3DRectStroke);\n+    super.fill3DRect(x, y, width, height, raised);\n+    setStroke(tmp);    \n     if (isBufferedImageGraphics ()) \n       updateBufferedImage();   \n-\n   }\n \n \n@@ -939,21 +927,21 @@ public void drawRect (int x, int y, int width, int height)\n \n   public void fillRect (int x, int y, int width, int height)\n   {\n-    fill(new Rectangle (x, y, width, height));\n+    cairoNewPath ();\n+    cairoRectangle (x, y, width, height);\n+    cairoFill ();\n   }\n \n   public void clearRect (int x, int y, int width, int height)\n   {\n-    stateSave ();\n     cairoSetRGBColor (bg.getRed() / 255.0, \n                       bg.getGreen() / 255.0, \n                       bg.getBlue() / 255.0);\n     cairoSetAlpha (1.0);\n     cairoNewPath ();\n     cairoRectangle (x, y, width, height);\n-    cairoClosePath ();\n     cairoFill ();\n-    stateRestore ();\n+    setColor (fg);\n        \n     if (isBufferedImageGraphics ()) \n       updateBufferedImage();   \n@@ -970,8 +958,8 @@ public Color getBackground()\n     return bg;\n   }\n \n-  private void doPolygon(int[] xPoints, int[] yPoints, int nPoints, \n-                         boolean close, boolean fill)\n+  private final void doPolygon(int[] xPoints, int[] yPoints, int nPoints, \n+                               boolean close, boolean fill)\n   {    \n     if (nPoints < 1)\n       return;\n@@ -1026,9 +1014,9 @@ public void drawPolyline(int[] xPoints, int[] yPoints, int nPoints)\n     doPolygon (xPoints, yPoints, nPoints, false, false);\n   }\n \n-  private boolean drawRaster (ColorModel cm, Raster r, \n-                              AffineTransform imageToUser, \n-                              Color bgcolor)\n+  private final boolean drawRaster (ColorModel cm, Raster r, \n+                                    AffineTransform imageToUser, \n+                                    Color bgcolor)\n   {\n     if (r == null)\n       return false;\n@@ -1087,10 +1075,7 @@ private boolean drawRaster (ColorModel cm, Raster r,\n           }\n       } \n \n-    stateSave ();\n-    translate (x, y);\n     drawPixels (pixels, r.getWidth (), r.getHeight (), r.getWidth (), i2u);\n-    stateRestore ();    \n     \n     if (isBufferedImageGraphics ()) \n       updateBufferedImage();   \n@@ -1133,113 +1118,6 @@ public boolean drawImage (Image img, int x, int y,\n   }\n \n \n-  ////////////////////////////////////////\n-  ////// Supporting Private Classes //////\n-  ////////////////////////////////////////\n-  \n-  private class PainterThread implements Runnable, ImageConsumer\n-  {\n-\n-    // this is a helper which is spun off when someone tries to do\n-    // Graphics2D.drawImage on an image we cannot determine to be either\n-    // one of our own offscreen images or a BufferedImage; that is, when\n-    // someone wants to draw an image which is possibly still loading over\n-    // a network or something. you run it in a separate thread and it\n-    // writes through to the underlying Graphics2D as pixels becomg\n-    // available.\n-\n-    GdkGraphics2D gr;\n-    Image image;\n-    ColorModel defaultModel;\n-    AffineTransform xform;\n-    Color bgcolor;\n-\n-    public PainterThread (GdkGraphics2D g, Image im, \n-                          AffineTransform xf, Color bg)\n-    {\n-      image = im;\n-      xform = xf;\n-      bgcolor = bg;\n-      this.gr = (GdkGraphics2D) g.create ();\n-      new Thread (this).start ();\n-    }\n-    \n-    public void imageComplete (int status)\n-    {\n-    }\n-    \n-    public void setColorModel (ColorModel model) \n-    {\n-      defaultModel = model;\n-    }\n-    \n-    public void setDimensions (int width, int height)\n-    {\n-    }\n-    \n-    public void setHints (int hintflags)\n-    {\n-    }\n-    \n-    public void setPixels (int x, int y, int w, int h, ColorModel model, \n-                           byte[] pixels, int off, int scansize)\n-    {\n-    }\n-    \n-    public void setPixels (int x, int y, int w, int h, ColorModel model, \n-                           int[] pixels, int off, int scansize)\n-      {\n-        gr.stateSave ();\n-        gr.translate (x, y);\n-\n-        if (model == null)\n-          model = defaultModel;\n-\n-        int pixels2[];\n-        if (model != null)\n-          {\n-            pixels2 = new int[pixels.length];\n-            for (int yy = 0; yy < h; yy++)\n-              for (int xx = 0; xx < w; xx++)\n-                {\n-                  int i = yy * scansize + xx;\n-                  pixels2[i] = model.getRGB (pixels[i]);\n-                }\n-          }\n-        else\n-          pixels2 = pixels;\n-\n-        // change all transparent pixels in the image to the \n-        // specified bgcolor\n-            \n-        if (bgcolor != null) \n-          {\n-            for (int i = 0; i < pixels2.length; i++) \n-              {\n-                if (model.getAlpha (pixels2[i]) == 0) \n-                pixels2[i] = bgcolor.getRGB ();\t    \n-              }\n-          } \n-\n-        double[] xf = new double[6];\n-        xform.getMatrix(xf);        \n-        gr.drawPixels (pixels2, w, h, scansize, xf);\n-        gr.stateRestore ();\n-      }\n-\n-    public void setProperties (java.util.Hashtable props)\n-    {\n-    }\n-    \n-    public void run ()\n-    {\n-      image.getSource ().startProduction (this);\n-      gr.dispose ();\n-    }\n-  }\n-\n-\n-\n   ///////////////////////////////////////////////\n   ////// Unimplemented Stubs and Overloads //////\n   ///////////////////////////////////////////////\n@@ -1259,6 +1137,8 @@ public GraphicsConfiguration getDeviceConfiguration()\n \n   public void setComposite(Composite comp)\n   {\n+    this.comp = comp;\n+\n     if (comp instanceof AlphaComposite)\n       {\n         AlphaComposite a = (AlphaComposite) comp;\n@@ -1297,8 +1177,11 @@ else if (hintValue.equals(RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY))\n         else if (hintValue.equals(RenderingHints.VALUE_ALPHA_INTERPOLATION_DEFAULT))\n            cairoSurfaceSetFilter(4);\n       \n-      } \n+      }\n \n+    shiftDrawCalls = hints.containsValue (RenderingHints.VALUE_STROKE_NORMALIZE)\n+      || hints.containsValue (RenderingHints.VALUE_STROKE_DEFAULT);\n+    \n   }\n \n   public Object getRenderingHint(RenderingHints.Key hintKey)\n@@ -1331,6 +1214,9 @@ else if (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY))\n          else if(hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_DEFAULT)) \n             cairoSurfaceSetFilter(4);\n       }      \n+\n+    shiftDrawCalls = hints.containsValue (RenderingHints.VALUE_STROKE_NORMALIZE)\n+      || hints.containsValue (RenderingHints.VALUE_STROKE_DEFAULT);\n   }\n \n   public void addRenderingHints(Map hints)\n@@ -1345,31 +1231,17 @@ public RenderingHints getRenderingHints()\n \n   public Composite getComposite()\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    if (comp == null)\n+      return AlphaComposite.SrcOver;\n+    else\n+      return comp;\n   }\n \n   public FontRenderContext getFontRenderContext ()\n   {\n     return new FontRenderContext (transform, true, true);\n   }\n \n-  public void drawGlyphVector (GlyphVector g, float x, float y)\n-  {    \n-    stateSave ();\n-    setFont (g.getFont ());\n-    translate ((double)x, (double)y);\n-    cairoMoveTo (0, 0);\n-    int nglyphs = g.getNumGlyphs ();\n-    int codes[] = g.getGlyphCodes (0, nglyphs, (int []) null);\n-    float posns[] = g.getGlyphPositions (0, nglyphs, (float []) null);\n-    cairoShowGlyphs (codes, posns);\n-    \n-    if (isBufferedImageGraphics ()) \n-      updateBufferedImage();   \n-\n-    stateRestore ();\n-  }\n-\n   public void copyArea (int x, int y, int width, int height, int dx, int dy)\n   {\n     throw new java.lang.UnsupportedOperationException ();\n@@ -1418,6 +1290,9 @@ public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2,\n                             Color bgcolor, ImageObserver observer)\n   {\n   \n+    if (img == null)\n+      return false;\n+\n     Image subImage;\t\n     \n     int sourceWidth = sx2 - sx1;\n@@ -1501,22 +1376,55 @@ public void drawRoundRect(int x, int y, int width, int height,\n     drawLine (x1, y + height, x2, y + height);\n   }\n \n-  public void drawString (String str, int x, int y)\n+  // these are the most accelerated painting paths\n+  native void cairoDrawGdkGlyphVector (GdkFontPeer f, GdkGlyphVector gv, float x, float y);\n+  native void cairoDrawGdkTextLayout (GdkFontPeer f, GdkTextLayout gl, float x, float y);\n+  native void cairoDrawString (GdkFontPeer f, String str, float x, float y);\n+\n+  GdkFontPeer getFontPeer() \n   {\n-    drawString (str, (float)x, (float)y);\n+    return (GdkFontPeer) getFont().getPeer(); \n+  }\n+\n+  public void drawGdkGlyphVector(GdkGlyphVector gv, float x, float y)\n+  {\n+    cairoDrawGdkGlyphVector(getFontPeer(), gv, x, y);\n+    if (isBufferedImageGraphics ()) \n+      updateBufferedImage();   \n+  }\n+\n+  public void drawGdkTextLayout(GdkTextLayout gl, float x, float y)\n+  {\n+    cairoDrawGdkTextLayout(getFontPeer(), gl, x, y);\n+    if (isBufferedImageGraphics ()) \n+      updateBufferedImage();   \n   }\n \n   public void drawString (String str, float x, float y)\n   {\n-    GlyphVector gv = font.createGlyphVector (getFontRenderContext(), str);\n-    drawGlyphVector (gv, x, y);\n+    cairoDrawString(getFontPeer(), str, x, y);\n+    if (isBufferedImageGraphics ()) \n+      updateBufferedImage();       \n+  }\n+\n+  public void drawString (String str, int x, int y)\n+  {\n+    drawString (str, (float)x, (float)y);\n   }\n \n   public void drawString (AttributedCharacterIterator ci, int x, int y)\n   {\n     drawString (ci, (float)x, (float)y);\n   }\n \n+  public void drawGlyphVector (GlyphVector gv, float x, float y)\n+  {\n+    if (gv instanceof GdkGlyphVector)\n+      drawGdkGlyphVector((GdkGlyphVector)gv, x, y);\n+    else\n+      throw new java.lang.UnsupportedOperationException ();\n+  }\n+\n   public void drawString (AttributedCharacterIterator ci, float x, float y)\n   {\n     GlyphVector gv = font.createGlyphVector (getFontRenderContext(), ci);\n@@ -1562,30 +1470,38 @@ public Font getFont ()\n     return font;\n   }\n \n+  // Until such time as pango is happy to talk directly to cairo, we\n+  // actually need to redirect some calls from the GtkFontPeer and\n+  // GtkFontMetrics into the drawing kit and ask cairo ourselves.\n+\n+  static native void releasePeerGraphicsResource(GdkFontPeer f);\n+  static native void getPeerTextMetrics (GdkFontPeer f, String str, double [] metrics);\n+  static native void getPeerFontMetrics (GdkFontPeer f, double [] metrics);\n+\n   public FontMetrics getFontMetrics ()\n   {\n+    // the reason we go via the toolkit here is to try to get\n+    // a cached object. the toolkit keeps such a cache.\n     return Toolkit.getDefaultToolkit ().getFontMetrics (font);\n   }\n \n   public FontMetrics getFontMetrics (Font f)\n   {\n+    // the reason we go via the toolkit here is to try to get\n+    // a cached object. the toolkit keeps such a cache.\n     return Toolkit.getDefaultToolkit ().getFontMetrics (f);\n   }\n \n   public void setFont (Font f)\n   {\n-    if (f.getPeer() instanceof GdkClasspathFontPeer)\n+    if (f.getPeer() instanceof GdkFontPeer)\n       font = f;\n     else\n       font = \n         ((ClasspathToolkit)(Toolkit.getDefaultToolkit ()))\n-        .getFont (f.getName(), f.getAttributes ());\n-\n-    if (f != null && \n-        f.getPeer() instanceof GdkClasspathFontPeer)\n-      cairoSetFont ((GdkClasspathFontPeer) f.getPeer());\n+        .getFont (f.getName(), f.getAttributes ());    \n   }\n-\n+  \n   public String toString()\n   {\n     return  getClass ().getName () +"}, {"sha": "45e0c21c0f2113dcdac1d2bb19faee8f2b70978c", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -38,18 +38,20 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.*;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.GraphicsDevice;\n import java.awt.GraphicsEnvironment;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n import java.awt.image.BufferedImage;\n import java.util.Locale;\n \n-\n public class GdkGraphicsEnvironment extends GraphicsEnvironment\n {\n-  \n   public GdkGraphicsEnvironment ()\n   {\n-  \tsuper();\n+    super();\n   }\n \n   public GraphicsDevice[] getScreenDevices ()\n@@ -66,22 +68,28 @@ public Graphics2D createGraphics (BufferedImage image)\n   {\n     return new GdkGraphics2D (image);\n   }\n+    native private int nativeGetNumFontFamilies ();\n+    native private void nativeGetFontFamilies (String[] family_names);\n \n   public Font[] getAllFonts ()\n   {\n     throw new java.lang.UnsupportedOperationException ();\n   }\n \n-  public String[] getAvailableFontFamilyNames ()\n-  {\n-    throw new java.lang.UnsupportedOperationException ();\n-  }\n+    public String[] getAvailableFontFamilyNames ()\n+    {\n+\tString[] family_names;\n+\tint array_size;\n+\n+\tarray_size = nativeGetNumFontFamilies();\n+\tfamily_names = new String[array_size];\n+\n+\tnativeGetFontFamilies(family_names);\n+\treturn family_names;\n+    }\n \n   public String[] getAvailableFontFamilyNames (Locale l)\n   {\n     throw new java.lang.UnsupportedOperationException ();\n   }\n-\n-\n-} // class GdkGraphicsEnvironment\n-\n+}"}, {"sha": "a7b93e5b9ad25359511fd4527a0a053d6d937a53", "filename": "libjava/gnu/java/awt/peer/gtk/GdkPixbufDecoder.java", "status": "modified", "additions": 44, "deletions": 39, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,52 +1,57 @@\n /* GdkPixbufDecoder.java -- Image data decoding object\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n-   \n-   This file is part of GNU Classpath.\n-   \n-   GNU Classpath is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-   \n-   GNU Classpath is distributed in the hope that it will be useful, but\n-   WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   General Public License for more details.\n-   \n-   You should have received a copy of the GNU General Public License\n-   along with GNU Classpath; see the file COPYING.  If not, write to the\n-   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-   02111-1307 USA.\n-   \n-   Linking this library statically or dynamically with other modules is\n-   making a combined work based on this library.  Thus, the terms and\n-   conditions of the GNU General Public License cover the whole\n-   combination.\n-   \n-   As a special exception, the copyright holders of this library give you\n-   permission to link this library with independent modules to produce an\n-   executable, regardless of the license terms of these independent\n-   modules, and to copy and distribute the resulting executable under\n-   terms of your choice, provided that you also meet, for each linked\n-   independent module, the terms and conditions of the license of that\n-   module.  An independent module is a module which is not derived from\n-   or based on this library.  If you modify this library, you may extend\n-   this exception to your version of the library, but you are not\n-   obligated to do so.  If you do not wish to do so, delete this\n-   exception statement from your version. */\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.image.*;\n+import gnu.classpath.Configuration;\n+\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorModel;\n+import java.awt.image.DirectColorModel;\n+import java.awt.image.ImageConsumer;\n+import java.awt.image.ImageProducer;\n import java.io.FileDescriptor;\n import java.io.FileInputStream;\n-import java.io.InputStream;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.net.URL;\n-import java.util.Vector;\n import java.util.Hashtable;\n-import gnu.classpath.Configuration;\n+import java.util.Vector;\n \n public class GdkPixbufDecoder extends gnu.java.awt.image.ImageDecoder\n {"}, {"sha": "26cfc16f0da58675b3fc7716c91f5f3847cd6347", "filename": "libjava/gnu/java/awt/peer/gtk/GdkTextLayout.java", "status": "added", "additions": 435, "deletions": 0, "changes": 435, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -0,0 +1,435 @@\n+/* GdkTextLayout.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.gtk;\n+\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.Shape;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphMetrics;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.TextHitInfo;\n+import java.awt.font.TextLayout;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.GeneralPath;\n+import java.awt.geom.Rectangle2D;\n+import java.text.CharacterIterator;\n+import java.text.AttributedCharacterIterator;\n+import java.text.AttributedString;\n+import java.util.Map;\n+import java.awt.font.TextAttribute;\n+\n+import gnu.classpath.Configuration;\n+import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n+\n+/**\n+ * This is an implementation of the text layout peer interface which\n+ * delegates all the hard work to pango.\n+ *\n+ * @author Graydon Hoare\n+ */\n+\n+public class GdkTextLayout \n+  implements ClasspathTextLayoutPeer\n+{\n+  // native side, plumbing, etc.\n+  static \n+  {\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary(\"gtkpeer\");\n+      }\n+    initStaticState ();\n+  }\n+  private native void setText(String str);\n+  private native void getExtents(double[] inkExtents,\n+                                 double[] logExtents);\n+  private native void indexToPos(int idx, double[] pos);\n+  private native void initState ();\n+  private native void dispose ();\n+  native static void initStaticState ();\n+  private final int native_state = GtkGenericPeer.getUniqueInteger ();\n+  protected void finalize ()\n+  {\n+    dispose ();\n+  }\n+\n+  // we hold on to these to make sure we can render when presented\n+  // with non-GdkGraphics2D paint targets\n+  private AttributedString attributedString;\n+  private FontRenderContext fontRenderContext;\n+\n+  public GdkTextLayout(AttributedString str, FontRenderContext frc)\n+  {\n+    initState();\n+    attributedString = str;\n+    fontRenderContext = frc;\n+  }\n+\n+  protected class CharacterIteratorProxy \n+    implements CharacterIterator\n+  {\n+    public CharacterIterator target;\n+    public int begin;\n+    public int limit;\n+    public int index;\n+\n+    public CharacterIteratorProxy (CharacterIterator ci)\n+    {\n+      target = ci;\n+    }\n+\n+    public int getBeginIndex ()\n+    {\n+      return begin;\n+    }\n+\n+    public int getEndIndex ()\n+    {\n+      return limit;\n+    }\n+\n+    public int getIndex ()\n+    {\n+      return index;\n+    }\n+\n+    public char setIndex (int idx) \n+      throws IllegalArgumentException\n+    {\n+      if (idx < begin || idx >= limit)\n+        throw new IllegalArgumentException ();\n+      char ch = target.setIndex (idx);\n+      index = idx;\n+      return ch;\n+    }\n+\n+    public char first ()\n+    {\n+      int save = target.getIndex ();\n+      char ch = target.setIndex (begin);\n+      target.setIndex (save);\n+      return ch;\n+    }\n+\n+    public char last ()\n+    {\n+      if (begin == limit)\n+        return this.first ();\n+\n+      int save = target.getIndex ();\n+      char ch = target.setIndex (limit - 1);\n+      target.setIndex (save);\n+      return ch;\n+    }\n+\n+    public char current ()\n+    {\n+      return target.current();\n+    }\n+\n+    public char next ()\n+    {\n+      if (index >= limit - 1)\n+        return CharacterIterator.DONE;\n+      else\n+        {\n+          index++;\n+          return target.next();\n+        }\n+    }\n+\n+    public char previous ()\n+    {\n+      if (index <= begin)\n+        return CharacterIterator.DONE;\n+      else\n+        {\n+          index--;\n+          return target.previous ();\n+        }\n+    }\n+\n+    public Object clone ()\n+    {\n+      CharacterIteratorProxy cip = new CharacterIteratorProxy (this.target);\n+      cip.begin = this.begin;\n+      cip.limit = this.limit;\n+      cip.index = this.index;\n+      return cip;\n+    }\n+    \n+  }\n+\n+\n+  // public side\n+\n+  public void draw (Graphics2D g2, float x, float y)\n+  {\n+    if (g2 instanceof GdkGraphics2D)\n+      {\n+        // we share pango structures directly with GdkGraphics2D \n+        // when legal\n+        GdkGraphics2D gg2 = (GdkGraphics2D) g2;\n+        gg2.drawGdkTextLayout(this, x, y);\n+      }\n+    else \n+      {\n+        // falling back to a rather tedious layout algorithm when\n+        // not legal\n+        AttributedCharacterIterator ci = attributedString.getIterator ();\n+        CharacterIteratorProxy proxy = new CharacterIteratorProxy (ci);\n+        Font defFont = g2.getFont ();\n+\n+        /* Note: this implementation currently only interprets FONT text\n+         * attributes. There is a reasonable argument to be made for some\n+         * attributes being interpreted out here, where we have control of the\n+         * Graphics2D and can construct or derive new fonts, and some\n+         * attributes being interpreted by the GlyphVector itself. So far, for\n+         * all attributes except FONT we do neither.\n+         */\n+\n+        for (char c = ci.first ();\n+             c != CharacterIterator.DONE;\n+             c = ci.next ())\n+          {                \n+            proxy.begin = ci.getIndex ();\n+            proxy.limit = ci.getRunLimit(TextAttribute.FONT);\n+            if (proxy.limit <= proxy.begin)\n+              continue;\n+\n+            proxy.index = proxy.begin;\n+\n+            Object fnt = ci.getAttribute(TextAttribute.FONT);\n+            GlyphVector gv;\n+            if (fnt instanceof Font)\n+              gv = ((Font)fnt).createGlyphVector (fontRenderContext, proxy);\n+            else\n+              gv = defFont.createGlyphVector (fontRenderContext, proxy);\n+\n+            g2.drawGlyphVector (gv, x, y);\n+\n+            int n = gv.getNumGlyphs ();\n+            for (int i = 0; i < n; ++i)\n+              {\n+                GlyphMetrics gm = gv.getGlyphMetrics (i);\n+                if (gm.getAdvanceX() == gm.getAdvance ())\n+                  x += gm.getAdvanceX ();\n+                else\n+                  y += gm.getAdvanceY ();\n+              }\n+          }\n+      }\n+  }\n+\n+  public TextHitInfo getStrongCaret (TextHitInfo hit1, \n+                                     TextHitInfo hit2)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public byte getBaseline ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public boolean isLeftToRight ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public boolean isVertical ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public float getAdvance ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public float getAscent ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public float getDescent ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public float getLeading ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public int getCharacterCount ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public byte getCharacterLevel (int index)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public float[] getBaselineOffsets ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public Shape getBlackBoxBounds (int firstEndpoint, int secondEndpoint)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public Rectangle2D getBounds ()\n+  {\n+    double[] inkExtents = new double[4];\n+    double[] logExtents = new double[4];\n+    getExtents(inkExtents, logExtents);\n+    return new Rectangle2D.Double(logExtents[0], logExtents[1],\n+                                  logExtents[2], logExtents[3]);\n+  }\n+\n+  public float[] getCaretInfo (TextHitInfo hit, Rectangle2D bounds)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public Shape getCaretShape (TextHitInfo hit, Rectangle2D bounds)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public Shape[] getCaretShapes (int offset, Rectangle2D bounds,\n+                                 TextLayout.CaretPolicy policy)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public Shape getLogicalHighlightShape (int firstEndpoint, int secondEndpoint,\n+                                         Rectangle2D bounds)\n+  {\n+    AffineTransform at = new AffineTransform();\n+    GeneralPath gp = new GeneralPath();\n+    double [] rect = new double[4];\n+    Rectangle2D tmp = new Rectangle2D.Double();\n+    for (int i = firstEndpoint; i <= secondEndpoint; ++i)\n+      {\n+        indexToPos(i, rect);\n+        tmp.setRect(rect[0], rect[1], rect[2], rect[3]);\n+        Rectangle2D.intersect(tmp, bounds, tmp);\n+        gp.append(tmp.getPathIterator(at), false);\n+      }\n+    return gp;\n+  }\n+\n+  public int[] getLogicalRangesForVisualSelection (TextHitInfo firstEndpoint,\n+                                                   TextHitInfo secondEndpoint)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  \n+  public TextHitInfo getNextLeftHit (int offset, TextLayout.CaretPolicy policy)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public TextHitInfo getNextRightHit (int offset, TextLayout.CaretPolicy policy)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public TextHitInfo hitTestChar (float x, float y, Rectangle2D bounds)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public TextHitInfo getVisualOtherHit (TextHitInfo hit)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public float getVisibleAdvance ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public Shape getOutline (AffineTransform tx)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public Shape getVisualHighlightShape (TextHitInfo firstEndpoint,\n+                                        TextHitInfo secondEndpoint,\n+                                        Rectangle2D bounds)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  \n+  public TextLayout getJustifiedLayout (float justificationWidth)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public void handleJustify (float justificationWidth)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public Object clone ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public int hashCode ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public boolean equals (ClasspathTextLayoutPeer tl)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public String toString ()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+}"}, {"sha": "9fba828b74b47d16a495807182d9f043c31bb292", "filename": "libjava/gnu/java/awt/peer/gtk/GtkButtonPeer.java", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* GtkButtonPeer.java -- Implements ButtonPeer with GTK\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,22 +43,24 @@\n import java.awt.Component;\n import java.awt.Font;\n import java.awt.Point;\n-import java.awt.event.MouseEvent;\n import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n import java.awt.peer.ButtonPeer;\n \n public class GtkButtonPeer extends GtkComponentPeer\n     implements ButtonPeer\n {\n   native void create (String label);\n \n-  public native void connectJObject ();\n   public native void connectSignals ();\n \n-  native void gtkSetFont (String name, int style, int size);\n+  native void gtkWidgetModifyFont (String name, int style, int size);\n   native void gtkSetLabel (String label);\n   native void gtkWidgetSetForeground (int red, int green, int blue);\n+  native void gtkWidgetSetBackground (int red, int green, int blue);\n   native void gtkActivate ();\n+  native void gtkWidgetRequestFocus ();\n+  native void setNativeBounds (int x, int y, int width, int height);\n \n   public GtkButtonPeer (Button b)\n   {\n@@ -86,8 +88,8 @@ public void handleEvent (AWTEvent e)\n \tif (!me.isConsumed ()\n \t    && (me.getModifiersEx () & MouseEvent.BUTTON1_DOWN_MASK) != 0\n \t    && awtComponent.getBounds().contains(p))\n-\t  postActionEvent (((Button)awtComponent).getActionCommand (), \n-\t\t\t   me.getModifiersEx ());\n+          postActionEvent (((Button) awtComponent).getActionCommand (), \n+                           me.getModifiersEx ());\n       }\n \n     if (e.getID () == KeyEvent.KEY_PRESSED)"}, {"sha": "a6fd1bac183175f3b9bc4e7392cf517c39f453c4", "filename": "libjava/gnu/java/awt/peer/gtk/GtkCheckboxPeer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -55,7 +55,7 @@ public class GtkCheckboxPeer extends GtkComponentPeer\n   public native void create (GtkCheckboxGroupPeer group);\n   public native void nativeSetCheckboxGroup (GtkCheckboxGroupPeer group);\n   public native void connectSignals ();\n-  native void gtkSetFont (String name, int style, int size);\n+  native void gtkWidgetModifyFont (String name, int style, int size);\n   native void gtkButtonSetLabel (String label);\n   native void gtkToggleButtonSetActive (boolean is_active);\n "}, {"sha": "05464143dcf724332ac1fde1cc1e746271c5f111", "filename": "libjava/gnu/java/awt/peer/gtk/GtkChoicePeer.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -59,6 +59,10 @@ public GtkChoicePeer (Choice c)\n \t  \n \tappend (items);\n       }\n+\n+    int selected = c.getSelectedIndex();\n+    if (selected >= 0)\n+      select(selected);\n   }\n \n   native void create ();"}, {"sha": "ecc4c5cf7a18dbe7108a2d1a9a3baee09c2f51f6", "filename": "libjava/gnu/java/awt/peer/gtk/GtkClipboard.java", "status": "modified", "additions": 47, "deletions": 46, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -43,9 +43,9 @@\n import java.awt.datatransfer.DataFlavor;\n import java.awt.datatransfer.StringSelection;\n import java.awt.datatransfer.Transferable;\n+import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n-import java.io.IOException;\n \n public class GtkClipboard extends Clipboard\n {\n@@ -60,15 +60,13 @@ public class GtkClipboard extends Clipboard\n \n   static boolean hasSelection = false;\n \n-  protected \n-  GtkClipboard ()\n+  protected GtkClipboard()\n   {\n-    super (\"System Clipboard\");\n-    initNativeState ();\n+    super(\"System Clipboard\");\n+    initNativeState();\n   }\n \n-  public Transferable \n-  getContents (Object requestor)\n+  public Transferable getContents(Object requestor)\n   {\n     synchronized (this)\n       {\n@@ -77,93 +75,96 @@ public class GtkClipboard extends Clipboard\n       }\n \n     /* Java doesn't own the selection, so we need to ask X11 */\n+    // XXX: Does this hold with Swing too ?\n     synchronized (selectionLock)\n       {\n-\trequestStringConversion ();\n+\trequestStringConversion();\n+\t\n \ttry \n \t  {\n-\t    selectionLock.wait (SELECTION_RECEIVED_TIMEOUT);\n+\t    selectionLock.wait(SELECTION_RECEIVED_TIMEOUT);\n \t  } \n \tcatch (InterruptedException e)\n \t  {\n \t    return null;\n \t  }\n \t\n-\treturn (selection == null) ? null : new StringSelection (selection);\n+\treturn selection == null ? null : new StringSelection(selection);\n       }\n   }\n \n-  void \n-  stringSelectionReceived (String newSelection)\n+  void stringSelectionReceived(String newSelection)\n   {\n     synchronized (selectionLock)\n       {\n \tselection = newSelection;\n-\tselectionLock.notify ();\n+\tselectionLock.notify();\n       }\n   }\n \n   /* convert Java clipboard data into a String suitable for sending\n      to another application */\n-  synchronized String\n-  stringSelectionHandler () throws IOException\n+  synchronized String stringSelectionHandler() throws IOException\n   {\n     String selection = null;\n \n-    try {\n-      if (contents.isDataFlavorSupported (DataFlavor.stringFlavor))\n-\tselection = (String)contents.getTransferData (DataFlavor.stringFlavor);\n-      else if (contents.isDataFlavorSupported (DataFlavor.plainTextFlavor))\n-\t{\n-\t  StringBuffer sbuf = new StringBuffer ();\n-\t  InputStreamReader reader;\n-\t  char readBuf[] = new char[512];\n-\t  int numChars;\n+    try\n+      {\n+\tif (contents.isDataFlavorSupported(DataFlavor.stringFlavor))\n+\t  selection = (String)contents.getTransferData(DataFlavor.stringFlavor);\n+\telse if (contents.isDataFlavorSupported(DataFlavor.plainTextFlavor))\n+\t  {\n+\t    StringBuffer sbuf = new StringBuffer();\n+\t    InputStreamReader reader;\n+\t    char readBuf[] = new char[512];\n+\t    int numChars;\n \t  \n-\t  reader = new InputStreamReader \n-\t    ((InputStream) \n-\t     contents.getTransferData (DataFlavor.plainTextFlavor), \"UNICODE\");\n+\t    reader = new InputStreamReader \n+\t      ((InputStream) \n+\t       contents.getTransferData(DataFlavor.plainTextFlavor), \"UNICODE\");\n \t  \n-\t  while (true)\n-\t    {\n-\t      numChars = reader.read (readBuf);\n-\t      if (numChars == -1)\n-\t\tbreak;\n-\t      sbuf.append (readBuf, 0, numChars);\n-\t    }\n+\t    while (true)\n+\t      {\n+\t\tnumChars = reader.read(readBuf);\n+\t\tif (numChars == -1)\n+\t\t  break;\n+\t\tsbuf.append(readBuf, 0, numChars);\n+\t      }\n \t  \n-\t  selection = new String (sbuf);\n-\t}\n-    } catch (Exception e) { }\n+\t    selection = new String(sbuf);\n+\t  }\n+      }\n+    catch (Exception e)\n+      {\n+      }\n     \n     return selection;\n   }\n \n-  public synchronized void\n-  setContents (Transferable contents, ClipboardOwner owner)\n+  public synchronized void setContents(Transferable contents,\n+\t\t\t\t       ClipboardOwner owner)\n   {\n-    selectionGet ();\n+    selectionGet();\n \n     this.contents = contents;\n     this.owner = owner;\n \n     hasSelection = true;\n   }\n \n-  synchronized\n-  void selectionClear ()\n+  synchronized void selectionClear()\n   {\n     hasSelection = false;\n \n     if (owner != null)\n       {\n-\towner.lostOwnership (this, contents);\n+\towner.lostOwnership(this, contents);\n \towner = null;\n \tcontents = null;\n       }\n   }\n \n-  native void initNativeState ();\n-  native static void requestStringConversion ();\n-  native static void selectionGet ();\n+  native void initNativeState();\n+  native static void requestStringConversion();\n+  native static void selectionGet();\n }"}, {"sha": "31d59ce19b0b7034a8be0351c9de7c0275da605b", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 68, "deletions": 41, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -77,6 +77,8 @@ public class GtkComponentPeer extends GtkGenericPeer\n \n   Insets insets;\n \n+  boolean isInRepaint;\n+\n   /* this isEnabled differs from Component.isEnabled, in that it\n      knows if a parent is disabled.  In that case Component.isEnabled \n      may return true, but our isEnabled will always return false */\n@@ -85,7 +87,6 @@ public class GtkComponentPeer extends GtkGenericPeer\n \n   native int[] gtkWidgetGetForeground ();\n   native int[] gtkWidgetGetBackground ();\n-  native void gtkWidgetSetVisible (boolean b);\n   native void gtkWidgetGetDimensions (int[] dim);\n   native void gtkWidgetGetPreferredDimensions (int[] dim);\n   native void gtkWidgetGetLocationOnScreen (int[] point);\n@@ -97,17 +98,14 @@ public class GtkComponentPeer extends GtkGenericPeer\n   native void gtkWidgetRequestFocus ();\n   native void gtkWidgetDispatchKeyEvent (int id, long when, int mods,\n                                          int keyCode, int keyLocation);\n-  native void gtkSetFont (String name, int style, int size);\n-  native void gtkWidgetQueueDrawArea(int x, int y, int width, int height);\n-  native void addExposeFilter();\n-  native void removeExposeFilter();\n+\n+  native boolean isRealized ();\n \n   void create ()\n   {\n     throw new RuntimeException ();\n   }\n \n-  native void connectJObject ();\n   native void connectSignals ();\n \n   protected GtkComponentPeer (Component awtComponent)\n@@ -118,9 +116,6 @@ protected GtkComponentPeer (Component awtComponent)\n \n     create ();\n \n-    setParent ();\n-\n-    connectJObject ();\n     connectSignals ();\n \n     if (awtComponent.getForeground () != null)\n@@ -130,12 +125,22 @@ protected GtkComponentPeer (Component awtComponent)\n     if (awtComponent.getFont() != null)\n       setFont(awtComponent.getFont());\n \n-    setCursor (awtComponent.getCursor ());\n+    Component parent = awtComponent.getParent ();\n+\n+    // Only set our parent on the GTK side if our parent on the AWT\n+    // side is not showing.  Otherwise the gtk peer will be shown\n+    // before we've had a chance to position and size it properly.\n+    if (awtComponent instanceof Window\n+        || (parent != null && ! parent.isShowing ()))\n+      setParentAndBounds ();\n+  }\n+\n+  void setParentAndBounds ()\n+  {\n+    setParent ();\n \n     setComponentBounds ();\n \n-    Rectangle bounds = awtComponent.getBounds ();\n-    setBounds (bounds.x, bounds.y, bounds.width, bounds.height);\n     setVisibleAndEnabled ();\n   }\n \n@@ -154,15 +159,32 @@ void setParent ()\n       gtkWidgetSetParent (p);\n   }\n \n+  void beginNativeRepaint ()\n+  {\n+    isInRepaint = true;\n+  }\n+\n+  void endNativeRepaint ()\n+  {\n+    isInRepaint = false;\n+  }\n+\n   /*\n    * Set the bounds of this peer's AWT Component based on dimensions\n    * returned by the native windowing system.  Most Components impose\n-   * their dimensions on the peers so the default implementation does\n-   * nothing.  However some peers, like GtkFileDialogPeer, need to\n-   * pass their size back to the AWT Component.\n+   * their dimensions on the peers which is what the default\n+   * implementation does.  However some peers, like GtkFileDialogPeer,\n+   * need to pass their size back to the AWT Component.\n    */\n   void setComponentBounds ()\n   {\n+    Rectangle bounds = awtComponent.getBounds ();\n+\n+    if (bounds.x == 0 && bounds.y == 0\n+        && bounds.width == 0 && bounds.height == 0)\n+      return;\n+\n+    setBounds (bounds.x, bounds.y, bounds.width, bounds.height);\n   }\n \n   void setVisibleAndEnabled ()\n@@ -180,7 +202,9 @@ public int checkImage (Image image, int width, int height,\n \n   public Image createImage (ImageProducer producer) \n   {\n-    return new GtkImage (producer, null);\n+    GtkImage image = new GtkImage (producer, null);\n+    producer.startProduction (image);\n+    return image;\n   }\n \n   public Image createImage (int width, int height)\n@@ -195,6 +219,9 @@ public Image createImage (int width, int height)\n     else\n       g = new GdkGraphics (width, height);\n \n+    g.setColor(getBackground());\n+    g.fillRect(0, 0, width, height);\n+\n     return new GtkOffScreenImage (null, g, width, height);\n   }\n \n@@ -215,7 +242,7 @@ public ColorModel getColorModel ()\n \n   public FontMetrics getFontMetrics (Font font)\n   {\n-    return new GdkFontMetrics (font);\n+    return getToolkit().getFontMetrics(font);\n   }\n \n   public Graphics getGraphics ()\n@@ -265,8 +292,8 @@ public void handleEvent (AWTEvent event)\n               // Some peers like GtkFileDialogPeer are repainted by Gtk itself\n               if (g == null)\n                 break;\n-\t\t\n-              g.setClip (((PaintEvent)event).getUpdateRect());\n+\n+              g.setClip (((PaintEvent) event).getUpdateRect());\n \n               if (id == PaintEvent.PAINT)\n                 awtComponent.paint (g);\n@@ -310,21 +337,6 @@ public Dimension minimumSize ()\n \n   public void paint (Graphics g)\n   {\n-    Component parent = awtComponent.getParent();\n-    GtkComponentPeer parentPeer = null;\n-    if ((parent instanceof Container) && !parent.isLightweight())\n-      parentPeer = (GtkComponentPeer) parent.getPeer();\n-\n-    addExposeFilter();\n-    if (parentPeer != null)\n-      parentPeer.addExposeFilter();\n-\n-    Rectangle clip = g.getClipBounds();\n-    gtkWidgetQueueDrawArea(clip.x, clip.y, clip.width, clip.height);\n-\n-    removeExposeFilter();\n-    if (parentPeer != null)\n-      parentPeer.removeExposeFilter();\n   }\n \n   public Dimension preferredSize ()\n@@ -371,8 +383,11 @@ public void print (Graphics g)\n \n   public void repaint (long tm, int x, int y, int width, int height)\n   {\n+    if (x == 0 && y == 0 && width == 0 && height == 0)\n+      return;\n+\n     q.postEvent (new PaintEvent (awtComponent, PaintEvent.UPDATE,\n-\t\t\t\t new Rectangle (x, y, width, height)));\n+                                 new Rectangle (x, y, width, height)));\n   }\n \n   public void requestFocus ()\n@@ -391,7 +406,7 @@ public void setBackground (Color c)\n     gtkWidgetSetBackground (c.getRed(), c.getGreen(), c.getBlue());\n   }\n \n-  native public void setNativeBounds (int x, int y, int width, int height);\n+  native void setNativeBounds (int x, int y, int width, int height);\n \n   public void setBounds (int x, int y, int width, int height)\n   {\n@@ -426,13 +441,24 @@ public void setBounds (int x, int y, int width, int height)\n     if (parent instanceof Window && !lightweightChild)\n       {\n \tInsets insets = ((Window) parent).getInsets ();\n-\t// Convert from Java coordinates to GTK coordinates.\n-\tsetNativeBounds (x - insets.left, y - insets.top, width, height);\n+        GtkWindowPeer peer = (GtkWindowPeer) parent.getPeer ();\n+        int menuBarHeight = 0;\n+        if (peer instanceof GtkFramePeer)\n+          menuBarHeight = ((GtkFramePeer) peer).getMenuBarHeight ();\n+\n+        // Convert from Java coordinates to GTK coordinates.\n+        setNativeBounds (x - insets.left, y - insets.top + menuBarHeight,\n+                         width, height);\n       }\n     else\n       setNativeBounds (x, y, width, height);\n   }\n \n+  void setCursor ()\n+  {\n+    setCursor (awtComponent.getCursor ());\n+  }\n+\n   public void setCursor (Cursor cursor) \n   {\n     gtkWidgetSetCursor (cursor.getType ());\n@@ -448,7 +474,7 @@ public void setFont (Font f)\n     // FIXME: This should really affect the widget tree below me.\n     // Currently this is only handled if the call is made directly on\n     // a text widget, which implements setFont() itself.\n-    gtkSetFont(f.getName(), f.getStyle(), f.getSize());\n+    gtkWidgetModifyFont(f.getName(), f.getStyle(), f.getSize());\n   }\n \n   public void setForeground (Color c) \n@@ -488,8 +514,9 @@ protected void postMouseEvent(int id, long when, int mods, int x, int y,\n \n   protected void postExposeEvent (int x, int y, int width, int height)\n   {\n-    q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n-\t\t\t\t new Rectangle (x, y, width, height)));\n+    if (!isInRepaint)\n+      q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n+                                   new Rectangle (x, y, width, height)));\n   }\n \n   protected void postKeyEvent (int id, long when, int mods,"}, {"sha": "7fddd56619f7da0b98eb2bfbc1a80176d4a62a1b", "filename": "libjava/gnu/java/awt/peer/gtk/GtkContainerPeer.java", "status": "modified", "additions": 31, "deletions": 12, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -45,36 +45,55 @@\n import java.awt.Font;\n import java.awt.Graphics;\n import java.awt.Insets;\n+import java.awt.Window;\n import java.awt.event.PaintEvent;\n+import java.awt.peer.ComponentPeer;\n import java.awt.peer.ContainerPeer;\n \n public class GtkContainerPeer extends GtkComponentPeer\n   implements ContainerPeer\n {\n   Container c;\n+  boolean isValidating;\n \n   public GtkContainerPeer(Container c)\n   {\n     super (c);\n     this.c = c;\n   }\n \n-  public void beginValidate() \n+  public void beginValidate ()\n   {\n+    isValidating = true;\n   }\n \n-  public void endValidate() \n+  public void endValidate ()\n   {\n-//      q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n-//  \t\t\t\t new Rectangle (x, y, width, height)));\n-//      Graphics gc = getGraphics ();\n-//      if (gc != null)\n-//        {\n-//  \tawtComponent.update (gc);\n-//  \tgc.dispose ();\n-//        }\n-//      System.out.println (\"got here\");\n-//      awtComponent.repaint ();\n+    Component parent = awtComponent.getParent ();\n+\n+    // Only set our parent on the GTK side if our parent on the AWT\n+    // side is not showing.  Otherwise the gtk peer will be shown\n+    // before we've had a chance to position and size it properly.\n+    if (parent != null && parent.isShowing ())\n+      {\n+        Component[] components = ((Container) awtComponent).getComponents ();\n+        int ncomponents = components.length;\n+\n+        for (int i = 0; i < ncomponents; i++)\n+          {\n+            ComponentPeer peer = components[i].getPeer ();\n+\n+            // Skip lightweight peers.\n+            if (peer instanceof GtkComponentPeer)\n+              ((GtkComponentPeer) peer).setParentAndBounds ();\n+          }\n+\n+        // GTK windows don't have parents.\n+        if (!(awtComponent instanceof Window))\n+          setParentAndBounds ();\n+      }\n+\n+    isValidating = false;\n   }\n \n   public Insets getInsets() "}, {"sha": "af22a2723efe4bc342477c3a27947de6434a9a0f", "filename": "libjava/gnu/java/awt/peer/gtk/GtkDialogPeer.java", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -42,9 +42,9 @@\n import java.awt.Component;\n import java.awt.Dialog;\n import java.awt.Graphics;\n-import java.awt.peer.DialogPeer;\n import java.awt.Rectangle;\n import java.awt.event.PaintEvent;\n+import java.awt.peer.DialogPeer;\n \n public class GtkDialogPeer extends GtkWindowPeer\n   implements DialogPeer\n@@ -75,11 +75,12 @@ protected void postMouseEvent(int id, long when, int mods, int x, int y,\n \n   protected void postExposeEvent (int x, int y, int width, int height)\n   {\n-    q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n-\t\t\t\t new Rectangle (x + insets.left, \n-\t\t\t\t\t\ty + insets.top, \n-\t\t\t\t\t\twidth, height)));\n-  }  \n+    if (!isInRepaint)\n+      q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n+                                   new Rectangle (x + insets.left, \n+                                                  y + insets.top, \n+                                                  width, height)));\n+  }\n \n   void create ()\n   {"}, {"sha": "19925568e87800b2e6431f27c89d093437cf3982", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFileDialogPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -45,8 +45,8 @@\n import java.awt.Window;\n import java.awt.event.WindowEvent;\n import java.awt.peer.FileDialogPeer;\n-import java.io.FilenameFilter;\n import java.io.File;\n+import java.io.FilenameFilter;\n \n public class GtkFileDialogPeer extends GtkDialogPeer implements FileDialogPeer\n {\n@@ -57,7 +57,6 @@ public class GtkFileDialogPeer extends GtkDialogPeer implements FileDialogPeer\n   private FilenameFilter filter;\n \n   native void create (GtkContainerPeer parent);\n-  native void connectJObject ();\n   native void connectSignals ();\n   native void nativeSetFile (String file);\n   native public String nativeGetDirectory();\n@@ -94,6 +93,7 @@ void setComponentBounds ()\n                                                       awtComponent.getY (),\n                                                       dims[0], dims[1]);\n       }\n+    super.setComponentBounds ();\n   }\n \n   public void setFile (String fileName)"}, {"sha": "605d738a199d2db649cf90d265da2a28d32a9015", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFontPeer.java", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* GtkFontPeer.java -- Implements FontPeer with GTK+\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,20 +37,25 @@\n \n \n package gnu.java.awt.peer.gtk;\n+\n+import gnu.java.awt.peer.ClasspathFontPeer;\n+\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.LineMetrics;\n+import java.awt.geom.Rectangle2D;\n import java.awt.peer.FontPeer;\n-import java.awt.*;\n-import java.awt.geom.*;\n-import java.awt.font.*;\n+import java.text.CharacterIterator;\n import java.util.Locale;\n-import java.util.ResourceBundle;\n import java.util.MissingResourceException;\n-import java.text.*;\n-import gnu.java.awt.peer.ClasspathFontPeer;\n+import java.util.ResourceBundle;\n \n public class GtkFontPeer extends ClasspathFontPeer\n {\n   private static ResourceBundle bundle;\n-  \n+\n   static\n   {\n     try"}, {"sha": "c0c1437b656c14630b593a6a49f6958b0a024809", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 63, "deletions": 35, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -39,6 +39,7 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Component;\n+import java.awt.Container;\n import java.awt.Frame;\n import java.awt.Graphics;\n import java.awt.Graphics2D;\n@@ -57,51 +58,72 @@ public class GtkFramePeer extends GtkWindowPeer\n   private int menuBarHeight;\n   private MenuBarPeer menuBar;\n   native int getMenuBarHeight (MenuBarPeer bar);\n-\n+  native void setMenuBarWidth (MenuBarPeer bar, int width);\n   native void setMenuBarPeer (MenuBarPeer bar);\n   native void removeMenuBarPeer ();\n-  native void moveLayout (int offset);\n-  native void gtkLayoutSetVisible (boolean vis);\n+  native void gtkFixedSetVisible (boolean visible);\n+\n+  int getMenuBarHeight ()\n+  {\n+    return menuBar == null ? 0 : getMenuBarHeight (menuBar);\n+  }\n \n   public void setMenuBar (MenuBar bar)\n   {\n-    if (bar == null)\n-    {    \n-      if (menuBar != null)\n+    if (bar == null && menuBar != null)\n       {\n-        gtkLayoutSetVisible(false);\n-        removeMenuBarPeer(); \n+        // We're removing the menubar.\n+        gtkFixedSetVisible (false);\n         menuBar = null;\n-        moveLayout(menuBarHeight);\n+        removeMenuBarPeer ();\n         insets.top -= menuBarHeight;\n-        menuBarHeight = 0;      \n-        awtComponent.doLayout();\n-        gtkLayoutSetVisible(true);\n+        menuBarHeight = 0;\n+        awtComponent.validate ();\n+        gtkFixedSetVisible (true);\n       }\n-    }\n-    else\n-    {\n-      gtkLayoutSetVisible(false);\n-      int oldHeight = 0;\n-      if (menuBar != null)\n+    else if (bar != null && menuBar == null)\n+      {\n+        // We're adding a menubar where there was no menubar before.\n+        gtkFixedSetVisible (false);\n+        menuBar = (MenuBarPeer) ((MenuBar) bar).getPeer();\n+        setMenuBarPeer (menuBar);\n+        int menuBarWidth =\n+          awtComponent.getWidth () - insets.left - insets.right;\n+        if (menuBarWidth > 0)\n+          setMenuBarWidth (menuBar, menuBarWidth);\n+        menuBarHeight = getMenuBarHeight ();\n+        insets.top += menuBarHeight;\n+        awtComponent.validate ();\n+        gtkFixedSetVisible (true);\n+      }\n+    else if (bar != null && menuBar != null)\n       {\n+        // We're swapping the menubar.\n+        gtkFixedSetVisible (false);\n         removeMenuBarPeer();\n-        oldHeight = menuBarHeight;\n-        insets.top -= menuBarHeight;\n+        int oldHeight = menuBarHeight;\n+        int menuBarWidth =\n+          awtComponent.getWidth () - insets.left - insets.right;\n+        menuBar = (MenuBarPeer) ((MenuBar) bar).getPeer ();\n+        setMenuBarPeer (menuBar);\n+        if (menuBarWidth > 0)\n+          setMenuBarWidth (menuBar, menuBarWidth);\n+        menuBarHeight = getMenuBarHeight ();\n+        if (oldHeight != menuBarHeight)\n+          {\n+            insets.top += (menuBarHeight - oldHeight);\n+            awtComponent.validate ();\n+          }\n+        gtkFixedSetVisible (true);\n       }\n-      menuBar = (MenuBarPeer) ((MenuBar) bar).getPeer();\n-      setMenuBarPeer(menuBar);\n-      menuBarHeight = getMenuBarHeight (menuBar);\n-      if (oldHeight != menuBarHeight)\n-        moveLayout(oldHeight - menuBarHeight);\n-      insets.top += menuBarHeight;\n-      awtComponent.doLayout();\n-      gtkLayoutSetVisible(true);\n-    }\n   }\n \n   public void setBounds (int x, int y, int width, int height)\n   {\n+    int menuBarWidth = width - insets.left - insets.right;\n+    if (menuBar != null && menuBarWidth > 0)\n+      setMenuBarWidth (menuBar, menuBarWidth);\n+\n     nativeSetBounds (x, y,\n \t\t     width - insets.left - insets.right,\n \t\t     height - insets.top - insets.bottom\n@@ -151,7 +173,7 @@ void create ()\n   native void nativeSetIconImageFromData (int[] pixels, int width, int height);\n   public void setIconImage (Image image) \n   {\n-      if (image != null)\n+      if (image != null && image instanceof GtkImage)\n         {\n           GtkImage img = (GtkImage) image;\n           // FIXME: Image should be loaded, but if not, do image loading here.\n@@ -206,15 +228,20 @@ protected void postConfigureEvent (int x, int y, int width, int height)\n         || frame_width != awtComponent.getWidth()\n         || frame_height != awtComponent.getHeight())\n       {\n+        if (frame_width != awtComponent.getWidth() && menuBar != null\n+            && width > 0)\n+          setMenuBarWidth (menuBar, width);\n+\n         setBoundsCallback ((Window) awtComponent,\n                            frame_x,\n                            frame_y,\n                            frame_width,\n                            frame_height);\n       }\n+\n     awtComponent.validate();\n   }\n-  \n+\n   protected void postMouseEvent(int id, long when, int mods, int x, int y, \n \t\t\t\tint clickCount, boolean popupTrigger)\n   {\n@@ -225,10 +252,11 @@ protected void postMouseEvent(int id, long when, int mods, int x, int y,\n \n   protected void postExposeEvent (int x, int y, int width, int height)\n   {\n-    q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n-\t\t\t\t new Rectangle (x + insets.left, \n-\t\t\t\t\t\ty + insets.top, \n-\t\t\t\t\t\twidth, height)));\n+    if (!isInRepaint)\n+      q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n+                                   new Rectangle (x + insets.left, \n+                                                  y + insets.top, \n+                                                  width, height)));\n   }\n \n   public int getState ()"}, {"sha": "657e830bf2e349f1e22b16ff513c45a09f1981be", "filename": "libjava/gnu/java/awt/peer/gtk/GtkGenericPeer.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkGenericPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkGenericPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkGenericPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -82,4 +82,6 @@ static synchronized int getUniqueInteger ()\n     // Let's assume this will never wrap.\n     return next_native_state++;\n   }\n+\n+  native void gtkWidgetModifyFont (String name, int style, int size);\n }"}, {"sha": "510646c5a6adf189221ab639ed16618043cb581b", "filename": "libjava/gnu/java/awt/peer/gtk/GtkImage.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -230,7 +230,7 @@ public void setObserver (ImageObserver observer)\n \t     int offset, int scansize)\n   {\n     setPixels (x, y, width, height, cm, convertPixels (pixels), offset,\n-\t       scansize);\n+               scansize);\n \n     if (observer != null)\n       observer.imageUpdate (this,\n@@ -255,7 +255,8 @@ public void setObserver (ImageObserver observer)\n \n     if (scansize == width && height == 1)\n       {\n-\tSystem.arraycopy (pixels, offset, \n+        // Copy contents of pixels array into pixel cache.\n+\tSystem.arraycopy (pixels, offset,\n \t\t\t  pixelCache, y * this.width + x,\n \t\t\t  pixels.length - offset);\n       }\n@@ -274,7 +275,7 @@ public void setObserver (ImageObserver observer)\n     if (status == ImageConsumer.STATICIMAGEDONE && isCacheable)\n       isLoaded = true;\n \n-    if (status == ImageConsumer.SINGLEFRAMEDONE)\n+    if (status == ImageConsumer.SINGLEFRAME)\n       isCacheable = false;\n \n     if (observer != null)\n@@ -289,7 +290,7 @@ public void setObserver (ImageObserver observer)\n \t\t\t\t-1, -1, -1, -1);\n       }\n \n-    if (source != null)\n+    if (source != null && status != ImageConsumer.SINGLEFRAME)\n       source.removeConsumer (this);\n   }\n "}, {"sha": "1e5eb4f6ab36593e34de96ce2ea72ade7be87a1a", "filename": "libjava/gnu/java/awt/peer/gtk/GtkImagePainter.java", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImagePainter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImagePainter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImagePainter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -42,6 +42,7 @@\n import java.awt.Rectangle;\n import java.awt.image.ColorModel;\n import java.awt.image.ImageConsumer;\n+import java.awt.image.ImageObserver;\n import java.util.Hashtable;\n \n public class GtkImagePainter implements Runnable, ImageConsumer\n@@ -57,10 +58,11 @@ public class GtkImagePainter implements Runnable, ImageConsumer\n   boolean flipX, flipY;\n   Rectangle clip;\n   int s_width, s_height;\n+  ImageObserver observer;\n \n   public\n   GtkImagePainter (GtkImage image, GdkGraphics gc, int x, int y, \n-\t\t   int width, int height, Color bgcolor)\n+\t\t   int width, int height, Color bgcolor, ImageObserver o)\n   {\n     this.image = image;\n     this.gc = (GdkGraphics) gc.create ();\n@@ -74,15 +76,16 @@ public class GtkImagePainter implements Runnable, ImageConsumer\n     flipX = flipY = false;\n     s_width = s_height = 0;\n     clip = null;\n+    observer = o;\n \n-    new Thread (this).start ();\n+    run ();\n   }\n \n   public\n   GtkImagePainter (GtkImage image, GdkGraphics gc, \n \t\t   int dx1, int dy1, int dx2, int dy2,\n \t\t   int sx1, int sy1, int sx2, int sy2,\n-\t\t   Color bgcolor)\n+\t\t   Color bgcolor, ImageObserver o)\n   {\n     this.image = image;\n     this.gc = (GdkGraphics) gc.create ();\n@@ -91,6 +94,7 @@ public class GtkImagePainter implements Runnable, ImageConsumer\n     redBG = bgcolor.getRed ();\n     greenBG = bgcolor.getGreen ();\n     blueBG = bgcolor.getBlue ();\n+    observer = o;\n \n     this.width = Math.abs (dx2 - dx1);\n     this.height = Math.abs (dy2 - dy1);\n@@ -105,7 +109,7 @@ public class GtkImagePainter implements Runnable, ImageConsumer\n     s_height = Math.abs (sy2 - sy1);\n     clip = new Rectangle (sx1, sy1, s_width, s_height);\n \n-    new Thread (this).start ();\n+    run ();\n   }\n \n   public void\n@@ -126,7 +130,7 @@ public class GtkImagePainter implements Runnable, ImageConsumer\n \n     if (model.equals (ColorModel.getRGBdefault ()))\n       return pixels;\n-    \n+\n     int ret[] = new int[pixels.length];\n \n     for (int i = 0; i < pixels.length; i++)\n@@ -180,6 +184,11 @@ public class GtkImagePainter implements Runnable, ImageConsumer\n \t        startX + x, startY + y,\n \t\twidth, height, convertPixels (pixels, model), offset,\n \t\tscansize, affine);\n+\n+    if (observer != null)\n+      observer.imageUpdate (image,\n+\t\t\t    ImageObserver.SOMEBITS,\n+\t\t\t    x, y, width, height);\n   }\n \n   public void \n@@ -247,5 +256,17 @@ width, height, convertPixels (pixels, model), offset,\n   imageComplete (int status)\n   {\n     image.imageComplete(status);\n+\n+    if (observer != null)\n+      {\n+\tif (status == ImageConsumer.IMAGEERROR)\n+\t  observer.imageUpdate (null,\n+\t\t\t\tImageObserver.ERROR,\n+\t\t\t\t-1, -1, -1, -1);\n+\telse\n+\t  observer.imageUpdate (null,\n+\t\t\t\tImageObserver.ALLBITS,\n+\t\t\t\t-1, -1, -1, -1);\n+      }\n   }\n }"}, {"sha": "25473d78ea21beedb609c3565be93bd5e0ddb426", "filename": "libjava/gnu/java/awt/peer/gtk/GtkLabelPeer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -47,10 +47,11 @@ public class GtkLabelPeer extends GtkComponentPeer\n     implements LabelPeer\n {\n   native void create (String text, float alignment);\n-  native void gtkSetFont (String name, int style, int size);\n+  native void gtkWidgetModifyFont (String name, int style, int size);\n   native void nativeSetAlignment (float alignment);\n \n   native public void setText (String text);\n+  native void setNativeBounds (int x, int y, int width, int height);\n \n   void create ()\n   {"}, {"sha": "13055d33c277431dbd3dea5cad4ac693645e0738", "filename": "libjava/gnu/java/awt/peer/gtk/GtkListPeer.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -41,8 +41,8 @@\n import java.awt.AWTEvent;\n import java.awt.Dimension;\n import java.awt.List;\n-import java.awt.event.MouseEvent;\n import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n import java.awt.peer.ListPeer;\n \n public class GtkListPeer extends GtkComponentPeer\n@@ -58,9 +58,8 @@ void create ()\n   }\n \n   native void create (int rows);\n-  native void connectJObject ();\n   native void connectSignals ();\n-  native void gtkSetFont (String name, int style, int size);\n+  native void gtkWidgetModifyFont (String name, int style, int size);\n   native void gtkWidgetRequestFocus ();\n \n   native void getSize (int rows, int visibleRows, int dims[]);"}, {"sha": "90ad0c01b59225a894d7ae8abc60f802aaf6d083", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuBarPeer.java", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -38,8 +38,10 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import java.awt.Font;\n import java.awt.Menu;\n import java.awt.MenuBar;\n+import java.awt.MenuComponent;\n import java.awt.peer.MenuBarPeer;\n import java.awt.peer.MenuPeer;\n \n@@ -53,15 +55,25 @@ public class GtkMenuBarPeer extends GtkMenuComponentPeer\n   public GtkMenuBarPeer (MenuBar target)\n   {\n     super (target);\n-    create ();\n   }\n \n-  native void nativeSetHelpMenu(MenuPeer menuPeer);\n+  void setFont ()\n+  {\n+    MenuComponent mc = (MenuComponent) awtWidget;\n+    Font f = mc.getFont ();\n+\n+    if (f == null)\n+      mc.setFont (new Font (\"Dialog\", Font.PLAIN, 12));\n+  }\n \n+  // FIXME: remove this method or replace it with one that does\n+  // something useful.\n   /* In Gnome, help menus are no longer right flushed. */\n+  native void nativeSetHelpMenu(MenuPeer menuPeer);\n+\n   public void addHelpMenu (Menu menu)\n   {\n-    nativeSetHelpMenu((MenuPeer) menu.getPeer());\n+    // nativeSetHelpMenu((MenuPeer) menu.getPeer());\n   }\n \n   native public void delMenu (int index);"}, {"sha": "dd061ed37b8111e73d10ff2ac6065fff7036d0f8", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -38,15 +38,28 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import java.awt.Font;\n+import java.awt.MenuComponent;\n import java.awt.peer.MenuComponentPeer;\n \n public class GtkMenuComponentPeer extends GtkGenericPeer\n   implements MenuComponentPeer\n {\n+  void create ()\n+  {\n+    throw new RuntimeException ();\n+  }\n+\n+  void setFont ()\n+  {\n+  }\n+\n   public GtkMenuComponentPeer (Object awtWidget)\n   {\n     super (awtWidget);\n+    create ();\n+    setFont ();\n   }\n-  \n+\n   public native void dispose();\n }"}, {"sha": "81da90df0120c1adac5788e078ade1ab702d05a6", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuItemPeer.java", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -38,31 +38,53 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import java.awt.Font;\n import java.awt.Menu;\n+import java.awt.MenuComponent;\n import java.awt.MenuBar;\n import java.awt.MenuItem;\n-import java.awt.peer.MenuItemPeer;\n-import java.awt.peer.MenuComponentPeer;\n import java.awt.peer.MenuBarPeer;\n+import java.awt.peer.MenuComponentPeer;\n+import java.awt.peer.MenuItemPeer;\n import java.awt.peer.MenuPeer;\n \n public class GtkMenuItemPeer extends GtkMenuComponentPeer\n   implements MenuItemPeer\n {\n   native void create (String label);\n-  public native void connectSignals ();\n+  native void connectSignals ();\n+  native void gtkWidgetModifyFont (String name, int style, int size);\n+\n+  void create ()\n+  {\n+    create (((MenuItem) awtWidget).getLabel());\n+  }\n \n   public GtkMenuItemPeer (MenuItem item)\n   {\n     super (item);\n-    create (item.getLabel ());\n     setEnabled (item.isEnabled ());\n     setParent (item);\n \n     if (item.getParent() instanceof Menu && ! (item instanceof Menu))\n       connectSignals();\n   }\n \n+  void setFont ()\n+  {\n+    MenuComponent mc = ((MenuComponent) awtWidget);\n+    Font f = mc.getFont ();\n+\n+    if (f == null)\n+      {\n+        MenuComponent parent = (MenuComponent) mc.getParent ();\n+        Font pf = parent.getFont ();\n+        gtkWidgetModifyFont (pf.getName (), pf.getStyle (), pf.getSize ());\n+      }\n+    else\n+      gtkWidgetModifyFont(f.getName(), f.getStyle(), f.getSize());\n+  }\n+\n   void setParent (MenuItem item)\n   {\n     // add ourself differently, based on what type of parent we have"}, {"sha": "fbdfcf472ca08aeb9375d5bcba07b2312fdd3bc7", "filename": "libjava/gnu/java/awt/peer/gtk/GtkPanelPeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPanelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPanelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPanelPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -47,7 +47,6 @@ public class GtkPanelPeer extends GtkContainerPeer\n   implements PanelPeer\n {\n   native void create ();\n-  native void connectJObject ();\n \n   public GtkPanelPeer (Panel p)\n   {"}, {"sha": "233bed75a9b913e6cf2ad8ef9da4e902b682e01d", "filename": "libjava/gnu/java/awt/peer/gtk/GtkScrollPanePeer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollPanePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollPanePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollPanePeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -54,7 +54,7 @@ void create ()\n     create (awtComponent.getWidth (), awtComponent.getHeight ());\n   }\n \n-  native void gtkScrolledWindowSetScrollPosition(int x, int y);\n+  // native void gtkScrolledWindowSetScrollPosition(int x, int y);\n   native void gtkScrolledWindowSetHScrollIncrement (int u);\n   native void gtkScrolledWindowSetVScrollIncrement (int u);\n "}, {"sha": "ef4289633c4a81f0596829faf4f6dc125adfcded", "filename": "libjava/gnu/java/awt/peer/gtk/GtkScrollbarPeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -60,7 +60,6 @@ native void create (int orientation, int value,\n \t\t      int min, int max, int stepIncr, int pageIncr,\n \t\t      int visibleAmount);\n \n-  native void connectJObject ();\n   native void connectSignals ();\n \n   public GtkScrollbarPeer (Scrollbar s)"}, {"sha": "94874deb617ff26f39b0883df63232c23c5ce279", "filename": "libjava/gnu/java/awt/peer/gtk/GtkTextAreaPeer.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -52,7 +52,7 @@ public class GtkTextAreaPeer extends GtkTextComponentPeer\n \n   native void create (int width, int height, int scrollbarVisibility);\n \n-  native void gtkSetFont (String name, int style, int size);\n+  native void gtkWidgetModifyFont (String name, int style, int size);\n   native void gtkWidgetRequestFocus ();\n \n   void create ()\n@@ -68,11 +68,7 @@ void create ()\n \tawtComponent.setFont (f);\n       }\n \n-    FontMetrics fm;\n-    if (GtkToolkit.useGraphics2D ())\n-      fm = new GdkClasspathFontPeerMetrics (f);\n-    else\n-      fm = new GdkFontMetrics (f);\n+    FontMetrics fm = getFontMetrics (f);\n \n     TextArea ta = ((TextArea) awtComponent);\n     int sizeRows = ta.getRows ();\n@@ -130,11 +126,7 @@ public Dimension minimumSize (int rows, int cols)\n     if (f == null)\n       return new Dimension (width, height);\n \n-    FontMetrics fm;\n-    if (GtkToolkit.useGraphics2D ())\n-      fm = new GdkClasspathFontPeerMetrics (f);\n-    else\n-      fm = new GdkFontMetrics (f);\n+    FontMetrics fm = getFontMetrics (f);\n \n     int sizeRows = rows == 0 ? DEFAULT_ROWS : rows;\n     int sizeCols = cols == 0 ? DEFAULT_COLS : cols;\n@@ -163,11 +155,7 @@ public Dimension preferredSize (int rows, int cols)\n     if (f == null)\n       return new Dimension (width, height);\n \n-    FontMetrics fm;\n-    if (GtkToolkit.useGraphics2D ())\n-      fm = new GdkClasspathFontPeerMetrics (f);\n-    else\n-      fm = new GdkFontMetrics (f);\n+    FontMetrics fm = getFontMetrics (f);\n \n     int sizeRows = rows == 0 ? DEFAULT_ROWS : rows;\n     int sizeCols = cols == 0 ? DEFAULT_COLS : cols;"}, {"sha": "bd1ac8124705dd1444c87e0c5c8e615a30205757", "filename": "libjava/gnu/java/awt/peer/gtk/GtkTextFieldPeer.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -66,11 +66,7 @@ void create ()\n \tawtComponent.setFont (f);\n       }\n \n-    FontMetrics fm;\n-    if (GtkToolkit.useGraphics2D ())\n-      fm = new GdkClasspathFontPeerMetrics (f);\n-    else\n-      fm = new GdkFontMetrics (f);\n+    FontMetrics fm = getFontMetrics (f);\n \n     TextField tf = ((TextField) awtComponent);\n     int cols = tf.getColumns ();\n@@ -84,7 +80,7 @@ void create ()\n \n   native int gtkEntryGetBorderWidth ();\n \n-  native void gtkSetFont (String name, int style, int size);\n+  native void gtkWidgetModifyFont (String name, int style, int size);\n \n   public GtkTextFieldPeer (TextField tf)\n   {\n@@ -117,11 +113,7 @@ public Dimension minimumSize (int cols)\n     if (f == null)\n       return new Dimension (2 * gtkEntryGetBorderWidth (), dim[1]);\n \n-    FontMetrics fm;\n-    if (GtkToolkit.useGraphics2D ())\n-      fm = new GdkClasspathFontPeerMetrics (f);\n-    else\n-      fm = new GdkFontMetrics (f);\n+    FontMetrics fm = getFontMetrics (f);\n \n     int text_width = cols * fm.getMaxAdvance ();\n \n@@ -140,11 +132,7 @@ public Dimension preferredSize (int cols)\n     if (f == null)\n       return new Dimension (2 * gtkEntryGetBorderWidth (), dim[1]);\n \n-    FontMetrics fm;\n-    if (GtkToolkit.useGraphics2D ())\n-      fm = new GdkClasspathFontPeerMetrics (f);\n-    else\n-      fm = new GdkFontMetrics (f);\n+    FontMetrics fm = getFontMetrics (f);\n \n     int text_width = cols * fm.getMaxAdvance ();\n "}, {"sha": "def22e9874e92610cfdccd92cf00b5b48589c7ea", "filename": "libjava/gnu/java/awt/peer/gtk/GtkToolkit.java", "status": "modified", "additions": 86, "deletions": 50, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* GtkToolkit.java -- Implements an AWT Toolkit using GTK for peers\n-   Copyright (C) 1998, 1999, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,36 +38,40 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import gnu.classpath.Configuration;\n+import gnu.java.awt.EmbeddedWindow;\n+import gnu.java.awt.EmbeddedWindowSupport;\n+import gnu.java.awt.peer.ClasspathFontPeer;\n+import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n+import gnu.java.awt.peer.EmbeddedWindowPeer;\n+import gnu.java.awt.peer.gtk.GdkPixbufDecoder;\n+\n import java.awt.*;\n import java.awt.datatransfer.Clipboard;\n import java.awt.dnd.DragGestureEvent;\n import java.awt.dnd.peer.DragSourceContextPeer;\n+import java.awt.font.FontRenderContext;\n import java.awt.font.TextAttribute;\n import java.awt.im.InputMethodHighlight;\n import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n-import java.awt.image.ImageObserver;\n import java.awt.image.ImageConsumer;\n+import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n-import java.awt.GraphicsEnvironment;\n import java.awt.peer.*;\n import java.net.URL;\n+import java.text.AttributedString;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Hashtable;\n import java.util.Iterator;\n import java.util.Map;\n import java.util.MissingResourceException;\n import java.util.Properties;\n-import gnu.java.awt.EmbeddedWindow;\n-import gnu.java.awt.EmbeddedWindowSupport;\n-import gnu.java.awt.peer.EmbeddedWindowPeer;\n-import gnu.java.awt.peer.ClasspathFontPeer;\n-import gnu.classpath.Configuration;\n-import gnu.java.awt.peer.gtk.GdkPixbufDecoder;\n \n /* This class uses a deprecated method java.awt.peer.ComponentPeer.getPeer().\n    This merits comment.  We are basically calling Sun's bluff on this one.\n-   We think Sun has deprecated it simply to discourage its use as it is \n+   We think Sun has deprecated it simply to discourage its use as it is\n    bad programming style.  However, we need to get at a component's peer in\n    this class.  If getPeer() ever goes away, we can implement a hash table\n    that will keep up with every window's peer, but for now this is faster. */\n@@ -79,15 +83,13 @@ this class.  If getPeer() ever goes away, we can implement a hash table\n  * drawing contexts. Any other value will cause the older GdkGraphics\n  * object to be used.\n  */\n-\n public class GtkToolkit extends gnu.java.awt.ClasspathToolkit\n   implements EmbeddedWindowSupport\n {\n   GtkMainThread main;\n   Hashtable containers = new Hashtable();\n   static EventQueue q = new EventQueue();\n   static Clipboard systemClipboard;\n-\n   static boolean useGraphics2dSet;\n   static boolean useGraphics2d;\n \n@@ -120,14 +122,21 @@ public GtkToolkit ()\n   public int checkImage (Image image, int width, int height, \n \t\t\t ImageObserver observer) \n   {\n-    int status = ((GtkImage) image).checkImage ();\n+    int status = ImageObserver.ALLBITS \n+      | ImageObserver.WIDTH \n+      | ImageObserver.HEIGHT;\n+\n+    if (image instanceof GtkImage)\n+      {        \n+        status = ((GtkImage) image).checkImage ();\n+      }\n \n     if (observer != null)\n       observer.imageUpdate (image, status,\n                             -1, -1,\n                             image.getWidth (observer),\n                             image.getHeight (observer));\n-\n+    \n     return status;\n   }\n \n@@ -304,22 +313,59 @@ public String[] getFontList ()\n \t\t\t   \"SansSerif\" });\n   }\n \n+  private class LRUCache extends java.util.LinkedHashMap\n+  {    \n+    int max_entries;\n+    public LRUCache(int max)\n+    {\n+      super(max, 0.75f, true);\n+      max_entries = max;\n+    }\n+    protected boolean removeEldestEntry(Map.Entry eldest)\n+    {\n+      return size() > max_entries;\n+    }\n+  }\n+\n+  private LRUCache fontCache = new LRUCache(50);\n+  private LRUCache metricsCache = new LRUCache(50);\n+  private LRUCache imageCache = new LRUCache(50);\n+\n   public FontMetrics getFontMetrics (Font font) \n   {\n-    if (useGraphics2D())\n-      return new GdkClasspathFontPeerMetrics (font);\n+    if (metricsCache.containsKey(font))\n+      return (FontMetrics) metricsCache.get(font);\n     else\n-      return new GdkFontMetrics (font);\n+      {\n+        FontMetrics m;\n+        m = new GdkFontMetrics (font);\n+        metricsCache.put(font, m);\n+        return m;\n+      }    \n   }\n \n   public Image getImage (String filename) \n   {\n-    return createImage (filename);\n+    if (imageCache.containsKey(filename))\n+      return (Image) imageCache.get(filename);\n+    else\n+      {\n+        Image im = createImage(filename);\n+        imageCache.put(filename, im);\n+        return im;\n+      }\n   }\n \n   public Image getImage (URL url) \n   {\n-    return createImage (url);\n+    if (imageCache.containsKey(url))\n+      return (Image) imageCache.get(url);\n+    else\n+      {\n+        Image im = createImage(url);\n+        imageCache.put(url, im);\n+        return im;\n+      }\n   }\n \n   public PrintJob getPrintJob (Frame frame, String jobtitle, Properties props) \n@@ -510,8 +556,10 @@ protected FontPeer getFontPeer (String name, int style) {\n    */\n   private FontPeer getFontPeer (String name, int style, int size) \n   {\n-    GtkFontPeer fp = new GtkFontPeer (name, style, size);\n-    return fp;\n+    Map attrs = new HashMap ();\n+    ClasspathFontPeer.copyStyleToAttrs (style, attrs);\n+    ClasspathFontPeer.copySizeToAttrs (size, attrs);\n+    return getClasspathFontPeer (name, attrs);\n   }\n \n   /**\n@@ -522,40 +570,28 @@ private FontPeer getFontPeer (String name, int style, int size)\n \n   public ClasspathFontPeer getClasspathFontPeer (String name, Map attrs)\n   {\n-    if (useGraphics2D())\n-      return new GdkClasspathFontPeer (name, attrs);\n+    Map keyMap = new HashMap (attrs);\n+    // We don't know what kind of \"name\" the user requested (logical, face,\n+    // family), and we don't actually *need* to know here. The worst case\n+    // involves failure to consolidate fonts with the same backend in our\n+    // cache. This is harmless.\n+    keyMap.put (\"GtkToolkit.RequestedFontName\", name);\n+    if (fontCache.containsKey (keyMap))\n+      return (ClasspathFontPeer) fontCache.get (keyMap);\n     else\n       {\n-        // Default values\n-        int size = 12;\n-        int style = Font.PLAIN;\n-        if (name == null)\n-          name = \"Default\";\n-\n-        if (attrs.containsKey (TextAttribute.WEIGHT))\n-          {\n-            Float weight = (Float) attrs.get (TextAttribute.WEIGHT);\n-            if (weight.floatValue () >= TextAttribute.WEIGHT_BOLD.floatValue ())\n-              style += Font.BOLD;\n-          }\n-        \n-        if (attrs.containsKey (TextAttribute.POSTURE))\n-          {\n-            Float posture = (Float) attrs.get (TextAttribute.POSTURE);\n-            if (posture.floatValue () >= TextAttribute.POSTURE_OBLIQUE.floatValue ())\n-              style += Font.ITALIC;\n-          }\n-        \n-        if (attrs.containsKey (TextAttribute.SIZE))\n-          {\n-            Float fsize = (Float) attrs.get (TextAttribute.SIZE);\n-            size = fsize.intValue();\n-          }\n- \n-        return (ClasspathFontPeer) this.getFontPeer (name, style, size);\n+        ClasspathFontPeer newPeer = new GdkFontPeer (name, attrs);\n+        fontCache.put (keyMap, newPeer);\n+        return newPeer;\n       }\n   }\n \n+  public ClasspathTextLayoutPeer getClasspathTextLayoutPeer (AttributedString str, \n+                                                             FontRenderContext frc)\n+  {\n+    return new GdkTextLayout(str, frc);\n+  }\n+\n   protected EventQueue getSystemEventQueueImpl() \n   {\n     return q;"}, {"sha": "c61eecd5aa594a4f2f2c3ae3120e47d329f07db8", "filename": "libjava/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -40,8 +40,8 @@\n \n import java.awt.Component;\n import java.awt.Dimension;\n-import java.awt.Window;\n import java.awt.Frame;\n+import java.awt.Window;\n import java.awt.event.WindowEvent;\n import java.awt.peer.WindowPeer;\n \n@@ -106,7 +106,6 @@ void setVisibleAndEnabled ()\n   {\n   }\n \n-  native void connectJObject ();\n   native void connectSignals ();\n \n   public GtkWindowPeer (Window window)"}, {"sha": "ac08f7ae5cd26dfc18cb94aaf49a252ef97f0d9b", "filename": "libjava/gnu/java/beans/IntrospectionIncubator.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fbeans%2FIntrospectionIncubator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fgnu%2Fjava%2Fbeans%2FIntrospectionIncubator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fbeans%2FIntrospectionIncubator.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -99,7 +99,8 @@ public IntrospectionIncubator() {\n \t * @param method The method instance to examine.\n \t */\n \tpublic void addMethod(Method method) {\n-\t\tif(Modifier.isPublic(method.getModifiers())) {\n+\t\tif(Modifier.isPublic(method.getModifiers()) &&\n+\t\t\t!Modifier.isStatic(method.getModifiers())) {\n \t\t\tString name = ClassHelper.getTruncatedName(method.getName());\n \t\t\tClass retType = method.getReturnType();\n \t\t\tClass[] params = method.getParameterTypes();"}, {"sha": "7e9b70ddfbe555aab94421cd5cc3849124a1ba38", "filename": "libjava/include/config.h.in", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fconfig.h.in?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -429,6 +429,18 @@\n \tSTACK_DIRECTION < 0 => grows toward lower addresses\n \tSTACK_DIRECTION = 0 => direction of growth unknown */\n #undef STACK_DIRECTION\n+/* whether byteorder is bigendian */\n+#undef WORDS_BIGENDIAN\n+\n+/* Define if the host machine stores words of multi-word integers in\n+   big-endian order. */\n+#undef HOST_WORDS_BIG_ENDIAN\n+\n+/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */\n+#undef BYTEORDER\n+\n+/* Short GCJ version ID */\n+#undef GCJVERSION\n \n /* Define to 1 if you have the ANSI C header files. */\n #undef STDC_HEADERS"}, {"sha": "a7609d9ab63a2f68e74afa377ef5d3c5c177c2c3", "filename": "libjava/java/applet/Applet.java", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fapplet%2FApplet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fapplet%2FApplet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fapplet%2FApplet.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -78,6 +78,12 @@ public class Applet extends Panel\n   /** The applet stub for this applet. */\n   private transient AppletStub stub;\n \n+  /** Some applets call setSize in their constructors.  In that case,\n+      these fields are used to store width and height values until a\n+      stub is set. */\n+  private transient int width;\n+  private transient int height;\n+\n   /**\n    * The accessibility context for this applet.\n    *\n@@ -107,6 +113,9 @@ public Applet()\n   public final void setStub(AppletStub stub)\n   {\n     this.stub = stub;\n+\n+    if (width != 0 && height != 0)\n+      stub.appletResize (width, height);\n   }\n \n   /**\n@@ -174,7 +183,13 @@ public AppletContext getAppletContext()\n    */\n   public void resize(int width, int height)\n   {\n-    stub.appletResize(width, height);\n+    if (stub == null)\n+      {\n+        this.width = width;\n+        this.height = height;\n+      }\n+    else\n+      stub.appletResize(width, height);\n   }\n \n   /**"}, {"sha": "b26d1f35d058c903a0ada9fc0f050f9e919e5925", "filename": "libjava/java/awt/AWTEventMulticaster.java", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -181,7 +181,7 @@ protected EventListener remove(EventListener oldl)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void componentResized(ComponentEvent e)\n   {\n@@ -193,7 +193,7 @@ public void componentResized(ComponentEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void componentMoved(ComponentEvent e)\n   {\n@@ -205,7 +205,7 @@ public void componentMoved(ComponentEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void componentShown(ComponentEvent e)\n   {\n@@ -217,7 +217,7 @@ public void componentShown(ComponentEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void componentHidden(ComponentEvent e)\n   {\n@@ -229,7 +229,7 @@ public void componentHidden(ComponentEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void componentAdded(ContainerEvent e)\n   {\n@@ -241,7 +241,7 @@ public void componentAdded(ContainerEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void componentRemoved(ContainerEvent e)\n   {\n@@ -253,7 +253,7 @@ public void componentRemoved(ContainerEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void focusGained(FocusEvent e)\n   {\n@@ -265,7 +265,7 @@ public void focusGained(FocusEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void focusLost(FocusEvent e)\n   {\n@@ -277,7 +277,7 @@ public void focusLost(FocusEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void keyTyped(KeyEvent e)\n   {\n@@ -289,7 +289,7 @@ public void keyTyped(KeyEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void keyPressed(KeyEvent e)\n   {\n@@ -301,7 +301,7 @@ public void keyPressed(KeyEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void keyReleased(KeyEvent e)\n   {\n@@ -313,7 +313,7 @@ public void keyReleased(KeyEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void mouseClicked(MouseEvent e)\n   {\n@@ -325,7 +325,7 @@ public void mouseClicked(MouseEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void mousePressed(MouseEvent e)\n   {\n@@ -337,7 +337,7 @@ public void mousePressed(MouseEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void mouseReleased(MouseEvent e)\n   {\n@@ -349,7 +349,7 @@ public void mouseReleased(MouseEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void mouseEntered(MouseEvent e)\n   {\n@@ -361,7 +361,7 @@ public void mouseEntered(MouseEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void mouseExited(MouseEvent e)\n   {\n@@ -373,7 +373,7 @@ public void mouseExited(MouseEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void mouseDragged(MouseEvent e)\n   {\n@@ -385,7 +385,7 @@ public void mouseDragged(MouseEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void mouseMoved(MouseEvent e)\n   {\n@@ -397,7 +397,7 @@ public void mouseMoved(MouseEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void windowOpened(WindowEvent e)\n   {\n@@ -409,7 +409,7 @@ public void windowOpened(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void windowClosing(WindowEvent e)\n   {\n@@ -421,7 +421,7 @@ public void windowClosing(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void windowClosed(WindowEvent e)\n   {\n@@ -433,7 +433,7 @@ public void windowClosed(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void windowIconified(WindowEvent e)\n   {\n@@ -445,7 +445,7 @@ public void windowIconified(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void windowDeiconified(WindowEvent e)\n   {\n@@ -457,7 +457,7 @@ public void windowDeiconified(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void windowActivated(WindowEvent e)\n   {\n@@ -469,7 +469,7 @@ public void windowActivated(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void windowDeactivated(WindowEvent e)\n   {\n@@ -481,7 +481,7 @@ public void windowDeactivated(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    * @since 1.4\n    */\n   public void windowStateChanged(WindowEvent e)\n@@ -494,7 +494,7 @@ public void windowStateChanged(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    * @since 1.4\n    */\n   public void windowGainedFocus(WindowEvent e)\n@@ -507,7 +507,7 @@ public void windowGainedFocus(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    * @since 1.4\n    */\n   public void windowLostFocus(WindowEvent e)\n@@ -520,7 +520,7 @@ public void windowLostFocus(WindowEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void actionPerformed(ActionEvent e)\n   {\n@@ -532,7 +532,7 @@ public void actionPerformed(ActionEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void itemStateChanged(ItemEvent e)\n   {\n@@ -544,7 +544,7 @@ public void itemStateChanged(ItemEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void adjustmentValueChanged(AdjustmentEvent e)\n   {\n@@ -556,7 +556,7 @@ public void adjustmentValueChanged(AdjustmentEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    */\n   public void textValueChanged(TextEvent e)\n   {\n@@ -568,7 +568,7 @@ public void textValueChanged(TextEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    * @since 1.2\n    */\n   public void inputMethodTextChanged(InputMethodEvent e)\n@@ -581,7 +581,7 @@ public void inputMethodTextChanged(InputMethodEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    * @since 1.2\n    */\n   public void caretPositionChanged(InputMethodEvent e)\n@@ -594,7 +594,7 @@ public void caretPositionChanged(InputMethodEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    * @since 1.3\n    */\n   public void hierarchyChanged(HierarchyEvent e)\n@@ -607,7 +607,7 @@ public void hierarchyChanged(HierarchyEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    * @since 1.3\n    */\n   public void ancestorMoved(HierarchyEvent e)\n@@ -620,7 +620,7 @@ public void ancestorMoved(HierarchyEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    * @since 1.3\n    */\n   public void ancestorResized(HierarchyEvent e)\n@@ -633,7 +633,7 @@ public void ancestorResized(HierarchyEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event the event to handle\n+   * @param e the event to handle\n    * @since 1.4\n    */\n   public void mouseWheelMoved(MouseWheelEvent e)"}, {"sha": "53e64b7fb1b310f5aa249550d461688dc6c7f259", "filename": "libjava/java/awt/AWTKeyStroke.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* AWTKeyStroke.java -- an immutable key stroke\n-   Copyright (C) 2002 Free Software Foundation\n+   Copyright (C) 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -48,9 +48,9 @@\n import java.security.PrivilegedAction;\n import java.security.PrivilegedActionException;\n import java.security.PrivilegedExceptionAction;\n-import java.util.Map;\n import java.util.HashMap;\n import java.util.LinkedHashMap;\n+import java.util.Map;\n import java.util.StringTokenizer;\n \n /**"}, {"sha": "815c77ca9361d406779fdfac7bbd7f8afe7d896d", "filename": "libjava/java/awt/Adjustable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FAdjustable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FAdjustable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAdjustable.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -157,15 +157,15 @@\n    * Adds a listener that will receive adjustment events for this object.\n    *\n    * @param listener the adjustment listener to add\n-   * @see AdjustmentEvent\n+   * @see java.awt.event.AdjustmentEvent\n    */\n   void addAdjustmentListener(AdjustmentListener listener);\n \n   /**\n    * Removes an adjustment listener from this object.\n    *\n    * @param listener the adjustment listener to remove\n-   * @see AdjustmentEvent\n+   * @see java.awt.event.AdjustmentEvent\n    */\n   void removeAdjustmentListener(AdjustmentListener listener);\n } // interface Adjustable"}, {"sha": "e302a0ebc9f9b2cef006a3c86ed03a67d6e9d9ae", "filename": "libjava/java/awt/BasicStroke.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FBasicStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FBasicStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FBasicStroke.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* BasicStroke.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -69,7 +69,7 @@ public class BasicStroke implements Stroke\n    * greater than or equal to 1.0f.\n    * @param dash The array representing the dashing pattern. There must be at\n    * least one non-zero entry.\n-   * @param dash_phase is negative and dash is not null.\n+   * @param dashPhase is negative and dash is not null.\n    *\n    * @exception IllegalArgumentException If one input parameter doesn't meet\n    * its needs."}, {"sha": "86cb37cac9017060f249d66a2b1b722a6e1bc604", "filename": "libjava/java/awt/Button.java", "status": "modified", "additions": 124, "deletions": 4, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FButton.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* Button.java -- AWT button widget\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,13 +44,21 @@\n import java.lang.reflect.Array;\n import java.util.EventListener;\n \n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRelation;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleValue;\n+\n /**\n   * This class provides a button widget for the AWT. \n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   * @author Tom Tromey <tromey@cygnus.com>\n   */\n-public class Button extends Component implements java.io.Serializable\n+public class Button extends Component\n+  implements java.io.Serializable, Accessible\n {\n \n /*\n@@ -84,7 +92,102 @@ public class Button extends Component implements java.io.Serializable\n   /*\n    * The number used to generate the name returned by getName.\n    */\n-  private static transient long next_button_number = 0;\n+  private static transient long next_button_number;\n+  \n+  protected class AccessibleAWTButton extends AccessibleAWTComponent\n+    implements AccessibleAction, AccessibleValue\n+  {\n+    protected AccessibleAWTButton() { }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleAction#getAccessibleActionCount()\n+     */\n+    public int getAccessibleActionCount()\n+    {\n+      // Only 1 action possible\n+      return 1;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleAction#getAccessibleActionDescription(int)\n+     */\n+    public String getAccessibleActionDescription(int i)\n+    {\n+      // JDK 1.4.2 returns the string \"click\" for action 0.  However, the API\n+      // docs don't say what the string to be returned is, beyond being a\n+      // description of the action.  So we return the same thing for\n+      // compatibility with 1.4.2.\n+      if (i == 0)\n+        return \"click\";\n+      return null;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleAction#doAccessibleAction(int)\n+     */\n+    public boolean doAccessibleAction(int i)\n+    {\n+      if (i != 0)\n+        return false;\n+      processActionEvent(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, actionCommand));\n+      return true;\n+    }\n+    \n+    public String getAccessibleName()\n+    {\n+      return label;\n+    }\n+    \n+    public AccessibleAction getAccessibleAction()\n+    {\n+      return this;\n+    }\n+    \n+    public AccessibleValue getAccessibleValue()\n+    {\n+      return this;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleValue#getCurrentAccessibleValue()\n+     */\n+    public Number getCurrentAccessibleValue()\n+    {\n+      // Docs say return 1 if selected, but buttons can't be selected, right?\n+      return new Integer(0);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleValue#setCurrentAccessibleValue(java.lang.Number)\n+     */\n+    public boolean setCurrentAccessibleValue(Number number)\n+    {\n+      // Since there's no selection with buttons, we're ignoring this.\n+      // TODO someone who knows shoulw check this.\n+      return false;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleValue#getMinimumAccessibleValue()\n+     */\n+    public Number getMinimumAccessibleValue()\n+    {\n+      return new Integer(0);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleValue#getMaximumAccessibleValue()\n+     */\n+    public Number getMaximumAccessibleValue()\n+    {\n+      return new Integer(0);\n+    }\n+    \n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.PUSH_BUTTON;\n+    }\n+  }\n \n /*************************************************************************/\n \n@@ -215,17 +318,29 @@ public class Button extends Component implements java.io.Serializable\n   action_listeners = AWTEventMulticaster.remove(action_listeners, listener);\n }\n \n+  /**\n+   * Returns all added <code>ActionListener</code> objects.\n+   *\n+   * @return an array of listeners\n+   *\n+   * @since 1.4\n+   */\n   public synchronized ActionListener[] getActionListeners()\n   {\n     return (ActionListener[])\n       AWTEventMulticaster.getListeners(action_listeners,\n                                        ActionListener.class);\n   }\n \n-/** Returns all registered EventListers of the given listenerType. \n+/**\n+ * Returns all registered EventListers of the given listenerType. \n  * listenerType must be a subclass of EventListener, or a \n  * ClassClassException is thrown.\n  *\n+ * @param listenerType the listener type to return\n+ *\n+ * @return an array of listeners\n+ * \n  * @exception ClassCastException If listenerType doesn't specify a class or\n  * interface that implements @see java.util.EventListener.\n  *\n@@ -314,6 +429,11 @@ public EventListener[] getListeners(Class listenerType)\n     + getWidth () + \"x\" + getHeight () + \",label=\" + getLabel ();\n }\n \n+public AccessibleContext getAccessibleContext()\n+{\n+  return new AccessibleAWTButton();\n+}\n+\n   /**\n    * Generate a unique name for this button.\n    *"}, {"sha": "d177c9b7d7a50d8f1ba25b4674ed4d519fb008f9", "filename": "libjava/java/awt/Canvas.java", "status": "modified", "additions": 134, "deletions": 7, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FCanvas.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FCanvas.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCanvas.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n+/* Canvas.java --\n+   Copyright (C) 1999, 2000, 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,17 +38,61 @@\n \n package java.awt;\n \n+import java.awt.image.BufferStrategy;\n import java.awt.peer.ComponentPeer;\n-\n-public class Canvas extends Component implements java.io.Serializable\n+import java.io.Serializable;\n+\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+\n+/**\n+ * The <code>Canvas</code> component provides a blank rectangular\n+ * area, which the client application can use for drawing and for\n+ * capturing events.  By overriding the <code>paint()</code> method,\n+ * the canvas can be used for anything from simple line drawings to\n+ * full-scale custom components.\n+ *\n+ * @author Original author unknown\n+ * @author Tom Tromey  <tromey@redhat.com>\n+ * @author Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+ * @since 1.0\n+ */\n+\n+public class Canvas\n+  extends Component\n+  implements Serializable, Accessible\n {\n+\n+  /**\n+   * Compatible with Sun's JDK.\n+   */\n+  private static final long serialVersionUID = -2284879212465893870L;\n+\n+  /**\n+   * The graphics configuration associated with the canvas.\n+   */\n   transient GraphicsConfiguration graphicsConfiguration;\n \n+  /**\n+   * The buffer strategy associated with this canvas.\n+   */\n+  transient BufferStrategy bufferStrategy;\n+\n   /**\n    * Initializes a new instance of <code>Canvas</code>.\n    */\n-  public Canvas() { }\n+  public Canvas() \n+  { \n+  }\n \n+  /**\n+   * Initializes a new instance of <code>Canvas</code>\n+   * with the supplied graphics configuration.\n+   *\n+   * @param graphicsConfiguration the graphics configuration to use\n+   *        for this particular canvas.\n+   */\n   public Canvas(GraphicsConfiguration graphicsConfiguration)\n   {\n     this.graphicsConfiguration = graphicsConfiguration;\n@@ -71,9 +116,11 @@ public void addNotify()\n   }\n \n   /**\n-   * Repaints the canvas window.  This method should be overriden by \n+   * Repaints the canvas window.  This method should be overridden by \n    * a subclass to do something useful, as this method simply paints\n    * the window with the background color.\n+   *\n+   * @param gfx the <code>Graphics</code> to use for painting\n    */\n   public void paint(Graphics gfx)\n   {\n@@ -86,6 +133,86 @@ public void paint(Graphics gfx)\n     gfx.fillRect(0, 0, size.width, size.height);\n   }\n \n-  // Serialization constant\n-  private static final long serialVersionUID = -2284879212465893870L;\n+  /**\n+   * This class provides accessibility support for the canvas.\n+   */\n+  protected class AccessibleAWTCanvas\n+    extends AccessibleAWTComponent\n+  {\n+    /**\n+     * For compatability with Sun's JDK\n+     */\n+    private static final long serialVersionUID = -6325592262103146699L;\n+\n+    /**\n+     * Constructor for the accessible canvas.\n+     */\n+    protected AccessibleAWTCanvas()\n+    {\n+    }\n+\n+    /**\n+     * Returns the accessible role for the canvas.\n+     *\n+     * @return an instance of <code>AccessibleRole</code>, describing\n+     *         the role of the canvas.\n+     */\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.CANVAS;\n+    }\n+    \n+  }\n+\n+  /**\n+   * Gets the AccessibleContext associated with this <code>Canvas</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      {\n+        /* Create the context */\n+        accessibleContext = new AccessibleAWTCanvas();\n+      }\n+    return accessibleContext;\n+  }\n+\n+  /**\n+   * Returns the buffer strategy used by the canvas.\n+   *\n+   * @return the buffer strategy.\n+   * @since 1.4\n+   */\n+  public BufferStrategy getBufferStrategy()\n+  {\n+    return bufferStrategy;\n+  }\n+\n+  /**\n+   * Updates the canvas in response to a request to\n+   * <code>repaint()</code> it.  The canvas is cleared\n+   * with the current background colour, before <code>paint()</code>\n+   * is called to add the new contents.  Subclasses\n+   * which override this method should either call this\n+   * method via <code>super.update(graphics)</code> or re-implement\n+   * this behaviour, so as to ensure that the canvas is\n+   * clear before painting takes place.\n+   *\n+   * @param graphics the graphics context.\n+   */\n+  public void update(Graphics graphics)\n+  {\n+    Dimension size;\n+\n+    /* Clear the canvas */\n+    size = getSize();\n+    graphics.clearRect(0, 0, size.width, size.height);\n+    /* Call the paint method */\n+    paint(graphics);\n+  }\n+\n }"}, {"sha": "e1f3831b30fed0cb2a1079ea0e82335638fa1bd0", "filename": "libjava/java/awt/CardLayout.java", "status": "modified", "additions": 90, "deletions": 38, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FCardLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FCardLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCardLayout.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,6 +1,5 @@\n-// CardLayout.java - Card-based layout engine\n-\n-/* Copyright (C) 1999, 2000, 2002, 2003  Free Software Foundation\n+/* CardLayout.java -- Card-based layout engine\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -39,21 +38,22 @@\n \n package java.awt;\n \n+import java.io.Serializable;\n import java.util.Enumeration;\n import java.util.Hashtable;\n-import java.io.Serializable;\n \n-/** This class implements a card-based layout scheme.  Each included\n+/**\n+ * This class implements a card-based layout scheme.  Each included\n  * component is treated as a card.  Only one card can be shown at a\n  * time.  This class includes methods for changing which card is\n  * shown.\n  *\n- * @author Tom Tromey <tromey@redhat.com>\n+ * @author Tom Tromey (tromey@redhat.com)\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n public class CardLayout implements LayoutManager2, Serializable\n {\n-  static final long serialVersionUID = -4328196481005934313L;\n+  private static final long serialVersionUID = -4328196481005934313L;\n \n   /**\n    * Initializes a new instance of <code>CardLayout</code> with horizontal\n@@ -67,6 +67,7 @@ public CardLayout ()\n   /**\n    * Create a new <code>CardLayout</code> object with the specified\n    * horizontal and vertical gaps.\n+   *\n    * @param hgap The horizontal gap\n    * @param vgap The vertical gap\n    */\n@@ -77,11 +78,14 @@ public CardLayout (int hgap, int vgap)\n     this.tab = new Hashtable ();\n   }\n \n-  /** Add a new component to the layout.  The constraint must be a\n+  /**\n+   * Add a new component to the layout.  The constraint must be a\n    * string which is used to name the component.  This string can\n    * later be used to refer to the particular component.\n+   *\n    * @param comp The component to add\n    * @param constraints The name by which the component can later be called\n+   * \n    * @exception IllegalArgumentException If `constraints' is not a\n    * <code>String</code>\n    */\n@@ -93,68 +97,90 @@ public void addLayoutComponent (Component comp, Object constraints)\n     addLayoutComponent ((String) constraints, comp);\n   }\n \n-  /** Add a new component to the layout.  The name can be used later\n+  /**\n+   * Add a new component to the layout.  The name can be used later\n    * to refer to the component.\n+   * \n    * @param name The name by which the component can later be called\n    * @param comp The component to add\n+   * \n    * @deprecated This method is deprecated in favor of\n    * <code>addLayoutComponent(Component, Object)</code>.\n    */\n   public void addLayoutComponent (String name, Component comp)\n   {\n     tab.put (name, comp);\n     // First component added is the default component.\n-    if (tab.size() == 1)\n-      comp.setVisible(true);\n-    else\n-      comp.setVisible(false);\n+    comp.setVisible(tab.size() == 1);\n   }\n \n-  /** Cause the first component in the container to be displayed.\n+  /**\n+   * Cause the first component in the container to be displayed.\n+   *\n    * @param parent The parent container\n    */\n   public void first (Container parent)\n   {\n     gotoComponent (parent, FIRST);\n   }\n \n-  /** Return this layout manager's horizontal gap.  */\n+  /**\n+   * Return this layout manager's horizontal gap.\n+   *\n+   * @return the horizontal gap\n+   */\n   public int getHgap ()\n   {\n     return hgap;\n   }\n \n-  /** Return this layout manager's x alignment.  This method always\n+  /**\n+   * Return this layout manager's x alignment.  This method always\n    * returns Component.CENTER_ALIGNMENT.\n+   * \n    * @param parent Container using this layout manager instance\n+   *\n+   * @return the x-axis alignment\n    */\n   public float getLayoutAlignmentX (Container parent)\n   {\n     return Component.CENTER_ALIGNMENT;\n   }\n \n-  /** Returns this layout manager's y alignment.  This method always\n+  /**\n+   * Returns this layout manager's y alignment.  This method always\n    * returns Component.CENTER_ALIGNMENT.\n+   * \n    * @param parent Container using this layout manager instance\n+   *\n+   * @return the y-axis alignment\n    */\n   public float getLayoutAlignmentY (Container parent)\n   {\n     return Component.CENTER_ALIGNMENT;\n   }\n \n-  /** Return this layout manager's vertical gap.  */\n+  /**\n+   * Return this layout manager's vertical gap.\n+   *\n+   * @return the vertical gap\n+   */\n   public int getVgap ()\n   {\n     return vgap;\n   }\n \n-  /** Invalidate this layout manager's state.  */\n+  /**\n+   * Invalidate this layout manager's state.\n+   */\n   public void invalidateLayout (Container target)\n   {\n     // Do nothing.\n   }\n \n-  /** Cause the last component in the container to be displayed.\n+  /**\n+   * Cause the last component in the container to be displayed.\n+   * \n    * @param parent The parent container\n    */\n   public void last (Container parent)\n@@ -190,8 +216,12 @@ public void layoutContainer (Container parent)\n       }\n   }\n \n-  /** Get the maximum layout size of the container.\n+  /**\n+   * Get the maximum layout size of the container.\n+   * \n    * @param target The parent container\n+   *\n+   * @return the maximum layout size\n    */\n   public Dimension maximumLayoutSize (Container target)\n   {\n@@ -200,43 +230,57 @@ public Dimension maximumLayoutSize (Container target)\n     return getSize (target, MAX);\n   }\n \n-  /** Get the minimum layout size of the container.\n+  /**\n+   * Get the minimum layout size of the container.\n+   * \n    * @param target The parent container\n+   *\n+   * @return the minimum layout size\n    */\n   public Dimension minimumLayoutSize (Container target)\n   {\n     return getSize (target, MIN);\n   }\n \n-  /** Cause the next component in the container to be displayed.  If\n+  /**\n+   * Cause the next component in the container to be displayed.  If\n    * this current card is the  last one in the deck, the first\n    * component is displayed.\n+   * \n    * @param parent The parent container\n    */\n   public void next (Container parent)\n   {\n     gotoComponent (parent, NEXT);\n   }\n \n-  /** Get the preferred layout size of the container.\n-   * @param target The parent container\n+  /**\n+   * Get the preferred layout size of the container.\n+   * \n+   * @param parent The parent container\n+   *\n+   * @return the preferred layout size\n    */\n   public Dimension preferredLayoutSize (Container parent)\n   {\n     return getSize (parent, PREF);\n   }\n \n-  /** Cause the previous component in the container to be displayed.\n+  /**\n+   * Cause the previous component in the container to be displayed.\n    * If this current card is the first one in the deck, the last\n    * component is displayed.\n+   * \n    * @param parent The parent container\n    */\n   public void previous (Container parent)\n   {\n     gotoComponent (parent, PREV);\n   }\n \n-  /** Remove the indicated component from this layout manager.\n+  /**\n+   * Remove the indicated component from this layout manager.\n+   * \n    * @param comp The component to remove\n    */\n   public void removeLayoutComponent (Component comp)\n@@ -255,24 +299,30 @@ public void removeLayoutComponent (Component comp)\n       }\n   }\n \n-  /** Set this layout manager's horizontal gap.\n+  /**\n+   * Set this layout manager's horizontal gap.\n+   * \n    * @param hgap The new gap\n    */\n   public void setHgap (int hgap)\n   {\n     this.hgap = hgap;\n   }\n \n-  /** Set this layout manager's vertical gap.\n+  /**\n+   * Set this layout manager's vertical gap.\n+   * \n    * @param vgap The new gap\n    */\n   public void setVgap (int vgap)\n   {\n     this.vgap = vgap;\n   }\n \n-  /** Cause the named component to be shown.  If the component name is\n+  /**\n+   * Cause the named component to be shown.  If the component name is\n    * unknown, this method does nothing.\n+   * \n    * @param parent The parent container\n    * @param name The name of the component to show\n    */\n@@ -307,7 +357,9 @@ public String toString ()\n     return getClass ().getName () + \"[\" + hgap + \",\" + vgap + \"]\";\n   }\n \n-  /** This implements first(), last(), next(), and previous().\n+  /**\n+   * This implements first(), last(), next(), and previous().\n+   * \n    * @param parent The parent container\n    * @param what The type of goto: FIRST, LAST, NEXT or PREV\n    */\n@@ -419,13 +471,13 @@ else if (what == MAX)\n   private Hashtable tab;\n \n   // These constants are used by the private gotoComponent method.\n-  private int FIRST = 0;\n-  private int LAST = 1;\n-  private int NEXT = 2;\n-  private int PREV = 3;\n+  private static final int FIRST = 0;\n+  private static final int LAST = 1;\n+  private static final int NEXT = 2;\n+  private static final int PREV = 3;\n \n   // These constants are used by the private getSize method.\n-  private int MIN = 0;\n-  private int MAX = 1;\n-  private int PREF = 2;\n+  private static final int MIN = 0;\n+  private static final int MAX = 1;\n+  private static final int PREF = 2;\n }"}, {"sha": "04ace46cabe0735fe08f7e24d5a066105b38ae62", "filename": "libjava/java/awt/Checkbox.java", "status": "modified", "additions": 106, "deletions": 1, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FCheckbox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FCheckbox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCheckbox.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -43,14 +43,22 @@\n import java.awt.peer.CheckboxPeer;\n import java.io.Serializable;\n \n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleValue;\n+\n /**\n  * This class implements a component which has an on/off state.  Two\n  * or more Checkboxes can be grouped by a CheckboxGroup.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @author Tom Tromey <tromey@redhat.com>\n  */\n-public class Checkbox extends Component implements ItemSelectable, Serializable\n+public class Checkbox extends Component\n+  implements ItemSelectable, Accessible, Serializable\n {\n \n // FIXME: Need readObject/writeObject for this.\n@@ -86,6 +94,96 @@ public class Checkbox extends Component implements ItemSelectable, Serializable\n // The list of listeners for this object.\n private transient ItemListener item_listeners;\n \n+protected class AccessibleAWTCheckBox\n+  extends AccessibleAWTComponent\n+  implements ItemListener, AccessibleAction, AccessibleValue\n+{\n+  \n+\n+  /* (non-Javadoc)\n+   * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)\n+   */\n+  public void itemStateChanged(ItemEvent event)\n+  {\n+    firePropertyChange(ACCESSIBLE_STATE_PROPERTY,\n+\t\t       state ? null : AccessibleState.CHECKED,\n+                       state ? AccessibleState.CHECKED : null);\n+  }\n+  \n+  public AccessibleAction getAccessibleAction()\n+  {\n+    return this;\n+  }\n+  \n+  public AccessibleValue getAccessibleValue()\n+  {\n+    return this;\n+  }\n+  \n+  /* (non-Javadoc)\n+   * @see javax.accessibility.AccessibleAction#getAccessibleActionCount()\n+   */\n+  public int getAccessibleActionCount()\n+  {\n+    // 1.4.1 does this\n+    return 0;\n+  }\n+\n+  /* (non-Javadoc)\n+   * @see javax.accessibility.AccessibleAction#getAccessibleActionDescription(int)\n+   */\n+  public String getAccessibleActionDescription(int i)\n+  {\n+    return null;\n+  }\n+\n+  /* (non-Javadoc)\n+   * @see javax.accessibility.AccessibleAction#doAccessibleAction(int)\n+   */\n+  public boolean doAccessibleAction(int i)\n+  {\n+    return false;\n+  }\n+\n+  /* (non-Javadoc)\n+   * @see javax.accessibility.AccessibleValue#getCurrentAccessibleValue()\n+   */\n+  public Number getCurrentAccessibleValue()\n+  {\n+    return null;\n+  }\n+\n+  /* (non-Javadoc)\n+   * @see javax.accessibility.AccessibleValue#setCurrentAccessibleValue(java.lang.Number)\n+   */\n+  public boolean setCurrentAccessibleValue(Number number)\n+  {\n+    return false;\n+  }\n+\n+  /* (non-Javadoc)\n+   * @see javax.accessibility.AccessibleValue#getMinimumAccessibleValue()\n+   */\n+  public Number getMinimumAccessibleValue()\n+  {\n+    return null;\n+  }\n+\n+  /* (non-Javadoc)\n+   * @see javax.accessibility.AccessibleValue#getMaximumAccessibleValue()\n+   */\n+  public Number getMaximumAccessibleValue()\n+  {\n+    return null;\n+  }\n+  \n+  public AccessibleRole getAccessibleRole() \n+  {\n+    return AccessibleRole.CHECK_BOX;\n+  }\n+  \n+}\n+\n /*************************************************************************/\n \n /*\n@@ -392,4 +490,11 @@ public ItemListener[] getItemListeners ()\n \t  + \",\" + super.paramString());\n }\n \n+public AccessibleContext getAccessibleContext()\n+{\n+  AccessibleAWTCheckBox ac = new AccessibleAWTCheckBox();\n+  addItemListener(ac);\n+  return ac;\n+}\n+\n } // class Checkbox "}, {"sha": "ab4cb60f03ce69f43dd8a9856f9b00d8520ba5f5", "filename": "libjava/java/awt/CheckboxMenuItem.java", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* CheckboxMenuItem.java -- A menu option with a checkbox on it.\n-   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,6 @@\n import java.awt.event.ItemEvent;\n import java.awt.event.ItemListener;\n import java.awt.peer.CheckboxMenuItemPeer;\n-import java.awt.peer.MenuItemPeer;\n import java.util.EventListener;\n \n /**\n@@ -175,7 +174,7 @@ public class CheckboxMenuItem extends MenuItem implements ItemSelectable\n   * Returns an array of length 1 with the menu item label for this object\n   * if the state is on.  Otherwise <code>null</code> is returned.\n   *\n-  * @param An array with this menu item's label if it has a state of on,\n+  * @return An array with this menu item's label if it has a state of on,\n   * or <code>null</code> otherwise.\n   */\n public Object[]\n@@ -198,12 +197,9 @@ public class CheckboxMenuItem extends MenuItem implements ItemSelectable\n public synchronized void\n addNotify()\n {\n-  if (peer != null)\n-    {\n-      // This choice of toolkit seems unsatisfying, but I'm not sure\n-      // what else to do.\n-      peer = getToolkit().createCheckboxMenuItem(this);\n-    }\n+  if (peer == null)\n+    peer = getToolkit().createCheckboxMenuItem(this);\n+\n   super.addNotify ();\n }\n "}, {"sha": "89e91ca78b86f7d67230b1bb7bbf1a72d54cd5f5", "filename": "libjava/java/awt/Choice.java", "status": "modified", "additions": 68, "deletions": 1, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FChoice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FChoice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FChoice.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* Choice.java -- Java choice button widget.\n-   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,6 +45,10 @@\n import java.util.EventListener;\n import java.util.Vector;\n \n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+\n /**\n   * This class implements a drop down choice list.\n   *\n@@ -79,6 +83,53 @@ public class Choice extends Component implements ItemSelectable, Serializable\n // Listener chain\n private ItemListener item_listeners;\n \n+  protected class AccessibleAWTChoice\n+    extends Component.AccessibleAWTComponent\n+    implements AccessibleAction\n+  {\n+    public AccessibleAction getAccessibleAction()\n+    {\n+      return this;\n+    }\n+\n+    // FIXME: I think this is right, but should be checked by someone who\n+    // knows better.\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.POPUP_MENU;\n+    }\n+\t  \n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleAction#getAccessibleActionCount()\n+     */\n+    public int getAccessibleActionCount()\n+    {\n+      return pItems.size();\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleAction#getAccessibleActionDescription(int)\n+     */\n+    public String getAccessibleActionDescription(int i)\n+    {\n+      return (String) pItems.get(i);\n+    }\n+\t  \n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleAction#doAccessibleAction(int)\n+     */\n+    public boolean doAccessibleAction(int i)\n+    {\n+      if (i < 0 || i >= pItems.size())\n+\treturn false;\n+\t    \n+      Choice.this.processItemEvent(new ItemEvent(Choice.this,\n+\t\t\t\t\t\t ItemEvent.ITEM_STATE_CHANGED,\n+\t\t\t\t\t\t this, ItemEvent.SELECTED));\n+      return true;\n+    }\n+  }\n+\n /*************************************************************************/\n \n /*\n@@ -169,6 +220,8 @@ public Choice()\n       ChoicePeer cp = (ChoicePeer) peer;\n       cp.add (item, i);\n     }\n+  else if (selectedIndex == -1) \n+    select(0);\n }\n \n /*************************************************************************/\n@@ -218,6 +271,8 @@ public Choice()\n       ChoicePeer cp = (ChoicePeer) peer;\n       cp.add (item, index);\n     }\n+  else if (selectedIndex == -1 || selectedIndex >= index)\n+    select(0);\n }\n \n /*************************************************************************/\n@@ -261,6 +316,13 @@ public Choice()\n       ChoicePeer cp = (ChoicePeer) peer;\n       cp.remove (index);\n     }\n+  else\n+    {\n+      if (getItemCount() == 0)\n+\tselectedIndex = -1;\n+      else if (index == selectedIndex)\n+\tselect(0);\n+    }\n \n   if (selectedIndex > index)\n     --selectedIndex;\n@@ -501,4 +563,9 @@ public ItemListener[] getItemListeners ()\n   {\n     return (ItemListener[]) getListeners (ItemListener.class);\n   }\n+\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    return new AccessibleAWTChoice();\n+  }\n } // class Choice "}, {"sha": "cb47f777acb545cdf4556f4754f09f12deed9e4c", "filename": "libjava/java/awt/Component.java", "status": "modified", "additions": 116, "deletions": 91, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* Component.java -- a graphics component\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -47,16 +47,16 @@\n import java.awt.event.HierarchyBoundsListener;\n import java.awt.event.HierarchyEvent;\n import java.awt.event.HierarchyListener;\n-import java.awt.event.KeyEvent;\n-import java.awt.event.KeyListener;\n import java.awt.event.InputEvent;\n import java.awt.event.InputMethodEvent;\n import java.awt.event.InputMethodListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n import java.awt.event.MouseEvent;\n import java.awt.event.MouseListener;\n import java.awt.event.MouseMotionListener;\n-import java.awt.event.MouseWheelListener;\n import java.awt.event.MouseWheelEvent;\n+import java.awt.event.MouseWheelListener;\n import java.awt.event.PaintEvent;\n import java.awt.event.WindowEvent;\n import java.awt.im.InputContext;\n@@ -70,8 +70,8 @@\n import java.awt.peer.LightweightPeer;\n import java.beans.PropertyChangeListener;\n import java.beans.PropertyChangeSupport;\n-import java.io.ObjectInputStream;\n import java.io.IOException;\n+import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.PrintStream;\n import java.io.PrintWriter;\n@@ -84,6 +84,7 @@\n import java.util.Locale;\n import java.util.Set;\n import java.util.Vector;\n+\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleComponent;\n import javax.accessibility.AccessibleContext;\n@@ -293,7 +294,7 @@\n    * @see #getLocale()\n    * @see #setLocale(Locale)\n    */\n-  Locale locale;\n+  Locale locale = Locale.getDefault ();\n \n   /**\n    * True if the object should ignore repaint events (usually because it is\n@@ -575,8 +576,6 @@\n   {\n     incrementalDraw = Boolean.getBoolean (\"awt.image.incrementalDraw\");\n     redrawRate = Long.getLong (\"awt.image.redrawrate\");\n-    // Set the default KeyboardFocusManager.\n-    KeyboardFocusManager.setCurrentKeyboardFocusManager (null);\n   }\n \f\n   // Public and protected API.\n@@ -785,13 +784,15 @@ public boolean isEnabled()\n    * events).\n    *\n    * @param enabled true to enable this component\n+   * \n    * @see #isEnabled()\n    * @see #isLightweight()\n+   * \n    * @since 1.1\n    */\n-  public void setEnabled(boolean b)\n+  public void setEnabled(boolean enabled)\n   {\n-    enable (b);\n+    enable(enabled);\n   }\n \n   /**\n@@ -810,14 +811,15 @@ public void enable()\n    * Enables or disables this component.\n    *\n    * @param enabled true to enable this component\n+   * \n    * @deprecated use {@link #setEnabled(boolean)} instead\n    */\n-  public void enable(boolean b)\n+  public void enable(boolean enabled)\n   {\n-    if (b)\n-      enable ();\n+    if (enabled)\n+      enable();\n     else\n-      disable ();\n+      disable();\n   }\n \n   /**\n@@ -865,15 +867,17 @@ public void enableInputMethods(boolean enable)\n    * not show the component, if a parent is invisible.\n    *\n    * @param visible true to make this component visible\n+   * \n    * @see #isVisible()\n+   * \n    * @since 1.1\n    */\n-  public void setVisible(boolean b)\n+  public void setVisible(boolean visible)\n   {\n     // Inspection by subclassing shows that Sun's implementation calls\n     // show(boolean) which then calls show() or hide(). It is the show()\n     // method that is overriden in subclasses like Window.\n-    show (b);\n+    show(visible);\n   }\n \n   /**\n@@ -904,14 +908,15 @@ public void show()\n    * Makes this component visible or invisible.\n    *\n    * @param visible true to make this component visible\n+   * \n    * @deprecated use {@link #setVisible(boolean)} instead\n    */\n-  public void show(boolean b)\n+  public void show(boolean visible)\n   {\n-    if (b)\n-      show ();\n+    if (visible)\n+      show();\n     else\n-      hide ();\n+      hide();\n   }\n \n   /**\n@@ -1041,16 +1046,21 @@ public Font getFont()\n    * Sets the font for this component to the specified font. This is a bound\n    * property.\n    *\n-   * @param font the new font for this component\n+   * @param newFont the new font for this component\n+   * \n    * @see #getFont()\n    */\n-  public void setFont(Font f)\n+  public void setFont(Font newFont)\n   {\n-    firePropertyChange(\"font\", font, f);\n+    if (font == newFont)\n+      return;\n+    \n+    Font oldFont = font;\n+    font = newFont;\n     if (peer != null)\n-      peer.setFont(f);\n+      peer.setFont(font);\n+    firePropertyChange(\"font\", oldFont, newFont);\n     invalidate();\n-    font = f;\n   }\n \n   /**\n@@ -1087,12 +1097,16 @@ public Locale getLocale()\n    * Sets the locale for this component to the specified locale. This is a\n    * bound property.\n    *\n-   * @param locale the new locale for this component\n+   * @param newLocale the new locale for this component\n    */\n-  public void setLocale(Locale l)\n+  public void setLocale(Locale newLocale)\n   {\n-    firePropertyChange(\"locale\", locale, l);\n-    locale = l;\n+    if (locale == newLocale)\n+      return;\n+\n+    Locale oldLocale = locale;\n+    locale = newLocale;\n+    firePropertyChange(\"locale\", oldLocale, newLocale);\n     // New writing/layout direction or more/less room for localized labels.\n     invalidate();\n   }\n@@ -1366,7 +1380,7 @@ public void reshape(int x, int y, int width, int height)\n             shouldRepaintSelf = parentBounds.intersects(newBounds);\n           }\n \n-        if (shouldRepaintParent)\n+        if (shouldRepaintParent && parent != null)\n           parent.repaint(oldx, oldy, oldwidth, oldheight);\n         if (shouldRepaintSelf)\n           repaint();\n@@ -1787,7 +1801,8 @@ public void paint(Graphics g)\n    * relative to this component. Subclasses should call either\n    * <code>super.update(g)</code> or <code>paint(g)</code>.\n    *\n-   * @param graphics the graphics context for this update\n+   * @param g the graphics context for this update\n+   *\n    * @see #paint(Graphics)\n    * @see #repaint()\n    */\n@@ -1808,7 +1823,8 @@ public void update(Graphics g)\n   /**\n    * Paints this entire component, including any sub-components.\n    *\n-   * @param graphics the graphics context for this paint job\n+   * @param g the graphics context for this paint job\n+   * \n    * @see #paint(Graphics)\n    */\n   public void paintAll(Graphics g)\n@@ -1870,8 +1886,8 @@ public void repaint(int x, int y, int w, int h)\n    * @param tm milliseconds before this component should be repainted\n    * @param x the X coordinate of the upper left of the region to repaint\n    * @param y the Y coordinate of the upper left of the region to repaint\n-   * @param w the width of the region to repaint\n-   * @param h the height of the region to repaint\n+   * @param width the width of the region to repaint\n+   * @param height the height of the region to repaint\n    * @see #update(Graphics)\n    */\n   public void repaint(long tm, int x, int y, int width, int height)\n@@ -1891,7 +1907,8 @@ else if (peer != null)\n    * done in a different manner from painting. However, the implementation\n    * in this class simply calls the <code>paint()</code> method.\n    *\n-   * @param graphics the graphics context of the print device\n+   * @param g the graphics context of the print device\n+   * \n    * @see #paint(Graphics)\n    */\n   public void print(Graphics g)\n@@ -1905,7 +1922,8 @@ public void print(Graphics g)\n    * painting. However, the implementation in this class simply calls the\n    * <code>paintAll()</code> method.\n    *\n-   * @param graphics the graphics context of the print device\n+   * @param g the graphics context of the print device\n+   * \n    * @see #paintAll(Graphics)\n    */\n   public void printAll(Graphics g)\n@@ -1923,7 +1941,7 @@ public void printAll(Graphics g)\n    *\n    * <p>The coordinate system used depends on the particular flags.\n    *\n-   * @param image the image that has been updated\n+   * @param img the image that has been updated\n    * @param flags tlags as specified in <code>ImageObserver</code>\n    * @param x the X coordinate\n    * @param y the Y coordinate\n@@ -2270,7 +2288,7 @@ public boolean postEvent(Event e)\n   {\n     boolean handled = handleEvent (e);\n \n-    if (!handled)\n+    if (!handled && getParent() != null)\n       // FIXME: need to translate event coordinates to parent's\n       // coordinate space.\n       handled = getParent ().postEvent (e);\n@@ -2289,9 +2307,9 @@ public boolean postEvent(Event e)\n    * @see #getComponentListeners()\n    * @since 1.1\n    */\n-  public synchronized void addComponentListener(ComponentListener l)\n+  public synchronized void addComponentListener(ComponentListener listener)\n   {\n-    componentListener = AWTEventMulticaster.add(componentListener, l);\n+    componentListener = AWTEventMulticaster.add(componentListener, listener);\n     if (componentListener != null)\n       enableEvents(AWTEvent.COMPONENT_EVENT_MASK);\n   }\n@@ -2306,9 +2324,9 @@ public synchronized void addComponentListener(ComponentListener l)\n    * @see #getComponentListeners()\n    * @since 1.1\n    */\n-  public synchronized void removeComponentListener(ComponentListener l)\n+  public synchronized void removeComponentListener(ComponentListener listener)\n   {\n-    componentListener = AWTEventMulticaster.remove(componentListener, l);\n+    componentListener = AWTEventMulticaster.remove(componentListener, listener);\n   }\n \n   /**\n@@ -2337,9 +2355,9 @@ public synchronized ComponentListener[] getComponentListeners()\n    * @see #getFocusListeners()\n    * @since 1.1\n    */\n-  public synchronized void addFocusListener(FocusListener l)\n+  public synchronized void addFocusListener(FocusListener listener)\n   {\n-    focusListener = AWTEventMulticaster.add(focusListener, l);\n+    focusListener = AWTEventMulticaster.add(focusListener, listener);\n     if (focusListener != null)\n       enableEvents(AWTEvent.FOCUS_EVENT_MASK);\n   }\n@@ -2354,9 +2372,9 @@ public synchronized void addFocusListener(FocusListener l)\n    * @see #getFocusListeners()\n    * @since 1.1\n    */\n-  public synchronized void removeFocusListener(FocusListener l)\n+  public synchronized void removeFocusListener(FocusListener listener)\n   {\n-    focusListener = AWTEventMulticaster.remove(focusListener, l);\n+    focusListener = AWTEventMulticaster.remove(focusListener, listener);\n   }\n \n   /**\n@@ -2384,9 +2402,9 @@ public synchronized FocusListener[] getFocusListeners()\n    * @see #getHierarchyListeners()\n    * @since 1.3\n    */\n-  public synchronized void addHierarchyListener(HierarchyListener l)\n+  public synchronized void addHierarchyListener(HierarchyListener listener)\n   {\n-    hierarchyListener = AWTEventMulticaster.add(hierarchyListener, l);\n+    hierarchyListener = AWTEventMulticaster.add(hierarchyListener, listener);\n     if (hierarchyListener != null)\n       enableEvents(AWTEvent.HIERARCHY_EVENT_MASK);\n   }\n@@ -2401,9 +2419,9 @@ public synchronized void addHierarchyListener(HierarchyListener l)\n    * @see #getHierarchyListeners()\n    * @since 1.3\n    */\n-  public synchronized void removeHierarchyListener(HierarchyListener l)\n+  public synchronized void removeHierarchyListener(HierarchyListener listener)\n   {\n-    hierarchyListener = AWTEventMulticaster.remove(hierarchyListener, l);\n+    hierarchyListener = AWTEventMulticaster.remove(hierarchyListener, listener);\n   }\n \n   /**\n@@ -2433,10 +2451,10 @@ public synchronized HierarchyListener[] getHierarchyListeners()\n    * @since 1.3\n    */\n   public synchronized void\n-    addHierarchyBoundsListener(HierarchyBoundsListener l)\n+    addHierarchyBoundsListener(HierarchyBoundsListener listener)\n   {\n     hierarchyBoundsListener =\n-      AWTEventMulticaster.add(hierarchyBoundsListener, l);\n+      AWTEventMulticaster.add(hierarchyBoundsListener, listener);\n     if (hierarchyBoundsListener != null)\n       enableEvents(AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK);\n   }\n@@ -2452,10 +2470,10 @@ public synchronized HierarchyListener[] getHierarchyListeners()\n    * @since 1.3\n    */\n   public synchronized void\n-    removeHierarchyBoundsListener(HierarchyBoundsListener l)\n+    removeHierarchyBoundsListener(HierarchyBoundsListener listener)\n   {\n     hierarchyBoundsListener =\n-      AWTEventMulticaster.remove(hierarchyBoundsListener, l);\n+      AWTEventMulticaster.remove(hierarchyBoundsListener, listener);\n   }\n \n   /**\n@@ -2484,9 +2502,9 @@ public synchronized HierarchyBoundsListener[] getHierarchyBoundsListeners()\n    * @see #getKeyListeners()\n    * @since 1.1\n    */\n-  public synchronized void addKeyListener(KeyListener l)\n+  public synchronized void addKeyListener(KeyListener listener)\n   {\n-    keyListener = AWTEventMulticaster.add(keyListener, l);\n+    keyListener = AWTEventMulticaster.add(keyListener, listener);\n     if (keyListener != null)\n       enableEvents(AWTEvent.KEY_EVENT_MASK);\n   }\n@@ -2501,9 +2519,9 @@ public synchronized void addKeyListener(KeyListener l)\n    * @see #getKeyListeners()\n    * @since 1.1\n    */\n-  public synchronized void removeKeyListener(KeyListener l)\n+  public synchronized void removeKeyListener(KeyListener listener)\n   {\n-    keyListener = AWTEventMulticaster.remove(keyListener, l);\n+    keyListener = AWTEventMulticaster.remove(keyListener, listener);\n   }\n \n   /**\n@@ -2531,9 +2549,9 @@ public synchronized KeyListener[] getKeyListeners()\n    * @see #getMouseListeners()\n    * @since 1.1\n    */\n-  public synchronized void addMouseListener(MouseListener l)\n+  public synchronized void addMouseListener(MouseListener listener)\n   {\n-    mouseListener = AWTEventMulticaster.add(mouseListener, l);\n+    mouseListener = AWTEventMulticaster.add(mouseListener, listener);\n     if (mouseListener != null)\n       enableEvents(AWTEvent.MOUSE_EVENT_MASK);\n   }\n@@ -2548,9 +2566,9 @@ public synchronized void addMouseListener(MouseListener l)\n    * @see #getMouseListeners()\n    * @since 1.1\n    */\n-  public synchronized void removeMouseListener(MouseListener l)\n+  public synchronized void removeMouseListener(MouseListener listener)\n   {\n-    mouseListener = AWTEventMulticaster.remove(mouseListener, l);\n+    mouseListener = AWTEventMulticaster.remove(mouseListener, listener);\n   }\n \n   /**\n@@ -2578,9 +2596,9 @@ public synchronized MouseListener[] getMouseListeners()\n    * @see #getMouseMotionListeners()\n    * @since 1.1\n    */\n-  public synchronized void addMouseMotionListener(MouseMotionListener l)\n+  public synchronized void addMouseMotionListener(MouseMotionListener listener)\n   {\n-    mouseMotionListener = AWTEventMulticaster.add(mouseMotionListener, l);\n+    mouseMotionListener = AWTEventMulticaster.add(mouseMotionListener, listener);\n     if (mouseMotionListener != null)\n       enableEvents(AWTEvent.MOUSE_EVENT_MASK);\n   }\n@@ -2595,9 +2613,9 @@ public synchronized void addMouseMotionListener(MouseMotionListener l)\n    * @see #getMouseMotionListeners()\n    * @since 1.1\n    */\n-  public synchronized void removeMouseMotionListener(MouseMotionListener l)\n+  public synchronized void removeMouseMotionListener(MouseMotionListener listener)\n   {\n-    mouseMotionListener = AWTEventMulticaster.remove(mouseMotionListener, l);\n+    mouseMotionListener = AWTEventMulticaster.remove(mouseMotionListener, listener);\n   }\n \n   /**\n@@ -2627,9 +2645,9 @@ public synchronized MouseMotionListener[] getMouseMotionListeners()\n    * @see #getMouseWheelListeners()\n    * @since 1.4\n    */\n-  public synchronized void addMouseWheelListener(MouseWheelListener l)\n+  public synchronized void addMouseWheelListener(MouseWheelListener listener)\n   {\n-    mouseWheelListener = AWTEventMulticaster.add(mouseWheelListener, l);\n+    mouseWheelListener = AWTEventMulticaster.add(mouseWheelListener, listener);\n     if (mouseWheelListener != null)\n       enableEvents(AWTEvent.MOUSE_WHEEL_EVENT_MASK);\n   }\n@@ -2645,9 +2663,9 @@ public synchronized void addMouseWheelListener(MouseWheelListener l)\n    * @see #getMouseWheelListeners()\n    * @since 1.4\n    */\n-  public synchronized void removeMouseWheelListener(MouseWheelListener l)\n+  public synchronized void removeMouseWheelListener(MouseWheelListener listener)\n   {\n-    mouseWheelListener = AWTEventMulticaster.remove(mouseWheelListener, l);\n+    mouseWheelListener = AWTEventMulticaster.remove(mouseWheelListener, listener);\n   }\n \n   /**\n@@ -2677,9 +2695,9 @@ public synchronized MouseWheelListener[] getMouseWheelListeners()\n    * @see #getInputMethodRequests()\n    * @since 1.2\n    */\n-  public synchronized void addInputMethodListener(InputMethodListener l)\n+  public synchronized void addInputMethodListener(InputMethodListener listener)\n   {\n-    inputMethodListener = AWTEventMulticaster.add(inputMethodListener, l);\n+    inputMethodListener = AWTEventMulticaster.add(inputMethodListener, listener);\n     if (inputMethodListener != null)\n       enableEvents(AWTEvent.INPUT_METHOD_EVENT_MASK);\n   }\n@@ -2694,9 +2712,9 @@ public synchronized void addInputMethodListener(InputMethodListener l)\n    * @see #getInputMethodRequests()\n    * @since 1.2\n    */\n-  public synchronized void removeInputMethodListener(InputMethodListener l)\n+  public synchronized void removeInputMethodListener(InputMethodListener listener)\n   {\n-    inputMethodListener = AWTEventMulticaster.remove(inputMethodListener, l);\n+    inputMethodListener = AWTEventMulticaster.remove(inputMethodListener, listener);\n   }\n \n   /**\n@@ -2858,7 +2876,7 @@ protected AWTEvent coalesceEvents(AWTEvent existingEvent, AWTEvent newEvent)\n    * Processes the specified event. In this class, this method simply\n    * calls one of the more specific event handlers.\n    *\n-   * @param event the event to process\n+   * @param e the event to process\n    * @throws NullPointerException if e is null\n    * @see #processComponentEvent(ComponentEvent)\n    * @see #processFocusEvent(FocusEvent)\n@@ -2909,7 +2927,7 @@ else if (e instanceof HierarchyEvent)\n    * enabled. This method passes the event along to any listeners\n    * that are attached.\n    *\n-   * @param event the <code>ComponentEvent</code> to process\n+   * @param e the <code>ComponentEvent</code> to process\n    * @throws NullPointerException if e is null\n    * @see ComponentListener\n    * @see #addComponentListener(ComponentListener)\n@@ -2942,7 +2960,7 @@ protected void processComponentEvent(ComponentEvent e)\n    * enabled. This method passes the event along to any listeners\n    * that are attached.\n    *\n-   * @param event the <code>FocusEvent</code> to process\n+   * @param e the <code>FocusEvent</code> to process\n    * @throws NullPointerException if e is null\n    * @see FocusListener\n    * @see #addFocusListener(FocusListener)\n@@ -2970,7 +2988,7 @@ protected void processFocusEvent(FocusEvent e)\n    * enabled. This method passes the event along to any listeners\n    * that are attached.\n    *\n-   * @param event the <code>KeyEvent</code> to process\n+   * @param e the <code>KeyEvent</code> to process\n    * @throws NullPointerException if e is null\n    * @see KeyListener\n    * @see #addKeyListener(KeyListener)\n@@ -3000,7 +3018,7 @@ protected void processKeyEvent(KeyEvent e)\n    * enabled. This method passes the event along to any listeners\n    * that are attached.\n    *\n-   * @param event the <code>MouseEvent</code> to process\n+   * @param e the <code>MouseEvent</code> to process\n    * @throws NullPointerException if e is null\n    * @see MouseListener\n    * @see #addMouseListener(MouseListener)\n@@ -3037,7 +3055,7 @@ protected void processMouseEvent(MouseEvent e)\n    * enabled. This method passes the event along to any listeners\n    * that are attached.\n    *\n-   * @param event the <code>MouseMotionEvent</code> to process\n+   * @param e the <code>MouseMotionEvent</code> to process\n    * @throws NullPointerException if e is null\n    * @see MouseMotionListener\n    * @see #addMouseMotionListener(MouseMotionListener)\n@@ -3065,7 +3083,7 @@ protected void processMouseMotionEvent(MouseEvent e)\n    * enabled. This method passes the event along to any listeners that are\n    * attached.\n    *\n-   * @param event the <code>MouseWheelEvent</code> to process\n+   * @param e the <code>MouseWheelEvent</code> to process\n    * @throws NullPointerException if e is null\n    * @see MouseWheelListener\n    * @see #addMouseWheelListener(MouseWheelListener)\n@@ -3087,7 +3105,7 @@ protected void processMouseWheelEvent(MouseWheelEvent e)\n    * enabled. This method passes the event along to any listeners that are\n    * attached.\n    *\n-   * @param event the <code>InputMethodEvent</code> to process\n+   * @param e the <code>InputMethodEvent</code> to process\n    * @throws NullPointerException if e is null\n    * @see InputMethodListener\n    * @see #addInputMethodListener(InputMethodListener)\n@@ -3114,7 +3132,7 @@ protected void processInputMethodEvent(InputMethodEvent e)\n    * are enabled. This method passes the event along to any listeners that are\n    * attached.\n    *\n-   * @param event the <code>HierarchyEvent</code> to process\n+   * @param e the <code>HierarchyEvent</code> to process\n    * @throws NullPointerException if e is null\n    * @see HierarchyListener\n    * @see #addHierarchyListener(HierarchyListener)\n@@ -3134,7 +3152,7 @@ protected void processHierarchyEvent(HierarchyEvent e)\n    * are enabled. This method passes the event along to any listeners that are\n    * attached.\n    *\n-   * @param event the <code>HierarchyEvent</code> to process\n+   * @param e the <code>HierarchyEvent</code> to process\n    * @throws NullPointerException if e is null\n    * @see HierarchyBoundsListener\n    * @see #addHierarchyBoundsListener(HierarchyBoundsListener)\n@@ -3587,11 +3605,16 @@ public void setFocusTraversalKeys(int id, Set keystrokes)\n    *\n    * @param id one of FORWARD_TRAVERSAL_KEYS, BACKWARD_TRAVERSAL_KEYS,\n    * or UP_CYCLE_TRAVERSAL_KEYS\n+   *\n+   * @return set of traversal keys\n+   *\n    * @throws IllegalArgumentException if id is invalid\n+   * \n    * @see #setFocusTraversalKeys (int, Set)\n    * @see KeyboardFocusManager#FORWARD_TRAVERSAL_KEYS\n    * @see KeyboardFocusManager#BACKWARD_TRAVERSAL_KEYS\n    * @see KeyboardFocusManager#UP_CYCLE_TRAVERSAL_KEYS\n+   * \n    * @since 1.4\n    */\n   public Set getFocusTraversalKeys (int id)\n@@ -4087,8 +4110,10 @@ public boolean isFocusOwner()\n   /**\n    * Adds the specified popup menu to this component.\n    *\n-   * @param menu the popup menu to be added\n+   * @param popup the popup menu to be added\n+   * \n    * @see #remove(MenuComponent)\n+   * \n    * @since 1.1\n    */\n   public synchronized void add(PopupMenu popup)\n@@ -4107,7 +4132,7 @@ public synchronized void add(PopupMenu popup)\n   /**\n    * Removes the specified popup menu from this component.\n    *\n-   * @param menu the popup menu to remove\n+   * @param popup the popup menu to remove\n    * @see #add(PopupMenu)\n    * @since 1.1\n    */\n@@ -4168,7 +4193,7 @@ public void list()\n   /**\n    * Prints a listing of this component to the specified print stream.\n    *\n-   * @param stream the <code>PrintStream</code> to print to\n+   * @param out the <code>PrintStream</code> to print to\n    */\n   public void list(PrintStream out)\n   {\n@@ -4179,7 +4204,7 @@ public void list(PrintStream out)\n    * Prints a listing of this component to the specified print stream,\n    * starting at the specified indentation point.\n    *\n-   * @param stream the <code>PrintStream</code> to print to\n+   * @param out the <code>PrintStream</code> to print to\n    * @param indent the indentation point\n    */\n   public void list(PrintStream out, int indent)\n@@ -4192,7 +4217,7 @@ public void list(PrintStream out, int indent)\n   /**\n    * Prints a listing of this component to the specified print writer.\n    *\n-   * @param writer the <code>PrintWrinter</code> to print to\n+   * @param out the <code>PrintWrinter</code> to print to\n    * @since 1.1\n    */\n   public void list(PrintWriter out)\n@@ -4204,7 +4229,7 @@ public void list(PrintWriter out)\n    * Prints a listing of this component to the specified print writer,\n    * starting at the specified indentation point.\n    *\n-   * @param writer the <code>PrintWriter</code> to print to\n+   * @param out the <code>PrintWriter</code> to print to\n    * @param indent the indentation point\n    * @since 1.1\n    */\n@@ -4505,7 +4530,7 @@ GraphicsConfiguration getGraphicsConfigurationImpl()\n    *\n    * @return an AWT 1.0 event representing e\n    */\n-  private Event translateEvent (AWTEvent e)\n+  static Event translateEvent (AWTEvent e)\n   {\n     Component target = (Component) e.getSource ();\n     Event translated = null;"}, {"sha": "6c835d23d8eeb0267053e8b434b3aba277137d10", "filename": "libjava/java/awt/Container.java", "status": "modified", "additions": 45, "deletions": 34, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -35,28 +35,29 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt;\n \n-import java.awt.event.AWTEventListener;\n import java.awt.event.ContainerEvent;\n import java.awt.event.ContainerListener;\n-import java.awt.event.MouseEvent;\n import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n import java.awt.peer.ContainerPeer;\n import java.awt.peer.LightweightPeer;\n import java.beans.PropertyChangeListener;\n import java.beans.PropertyChangeSupport;\n-import java.io.ObjectInputStream;\n import java.io.IOException;\n+import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.PrintStream;\n import java.io.PrintWriter;\n import java.io.Serializable;\n import java.util.Collections;\n import java.util.EventListener;\n-import java.util.Iterator;\n import java.util.HashSet;\n+import java.util.Iterator;\n import java.util.Set;\n+\n import javax.accessibility.Accessible;\n import javax.swing.SwingUtilities;\n \n@@ -146,7 +147,7 @@ public int countComponents()\n   /**\n    * Returns the component at the specified index.\n    *\n-   * @param index The index of the component to retrieve.\n+   * @param n The index of the component to retrieve.\n    *\n    * @return The requested component.\n    *\n@@ -230,7 +231,7 @@ public Insets insets()\n    * Adds the specified component to this container at the end of the\n    * component list.\n    *\n-   * @param component The component to add to the container.\n+   * @param comp The component to add to the container.\n    *\n    * @return The same component that was added.\n    */\n@@ -246,7 +247,7 @@ public Component add(Component comp)\n    * <code>add(Component, Object)</code>.\n    *\n    * @param name The name of the component to be added.\n-   * @param component The component to be added.\n+   * @param comp The component to be added.\n    *\n    * @return The same component that was added.\n    *\n@@ -262,7 +263,7 @@ public Component add(String name, Component comp)\n    * Adds the specified component to this container at the specified index\n    * in the component list.\n    *\n-   * @param component The component to be added.\n+   * @param comp The component to be added.\n    * @param index The index in the component list to insert this child\n    * at, or -1 to add at the end of the list.\n    *\n@@ -281,7 +282,7 @@ public Component add(Component comp, int index)\n    * component list.  The layout manager will use the specified constraints\n    * when laying out this component.\n    *\n-   * @param component The component to be added to this container.\n+   * @param comp The component to be added to this container.\n    * @param constraints The layout constraints for this component.\n    */\n   public void add(Component comp, Object constraints)\n@@ -294,7 +295,7 @@ public void add(Component comp, Object constraints)\n    * in the component list.  The layout manager will use the specified\n    * constraints when layout out this component.\n    *\n-   * @param component The component to be added.\n+   * @param comp The component to be added.\n    * @param constraints The layout constraints for this component.\n    * @param index The index in the component list to insert this child\n    * at, or -1 to add at the end of the list.\n@@ -313,7 +314,7 @@ public void add(Component comp, Object constraints, int index)\n    * method.  Any subclass doing this must call the superclass version of\n    * this method in order to ensure proper functioning of the container.\n    *\n-   * @param component The component to be added.\n+   * @param comp The component to be added.\n    * @param constraints The layout constraints for this component, or\n    * <code>null</code> if there are no constraints.\n    * @param index The index in the component list to insert this child\n@@ -339,8 +340,6 @@ protected void addImpl(Component comp, Object constraints, int index)\n         comp.parent = this;\n         if (peer != null)\n           {\n-            comp.addNotify();\n-            \n             if (comp.isLightweight ())\n \t      {\n \t\tenableEvents (comp.eventMask);\n@@ -527,7 +526,7 @@ public void validate()\n   /**\n    * Recursively invalidates the container tree.\n    */\n-  private void invalidateTree()\n+  void invalidateTree()\n   {\n     for (int i = 0; i < ncomponents; i++)\n       {\n@@ -554,10 +553,19 @@ protected void validateTree()\n         cPeer.beginValidate();\n       }\n \n-    doLayout();\n     for (int i = 0; i < ncomponents; ++i)\n       {\n         Component comp = component[i];\n+\n+        if (comp.getPeer () == null)\n+          comp.addNotify();\n+      }\n+\n+    doLayout ();\n+    for (int i = 0; i < ncomponents; ++i)\n+      {\n+        Component comp = component[i];\n+\n         if (! comp.isValid())\n           {\n             if (comp instanceof Container)\n@@ -572,8 +580,8 @@ protected void validateTree()\n       }\n \n     /* children will call invalidate() when they are layed out. It\n-       is therefore imporant that valid is not set to true\n-       before after the children has been layed out. */\n+       is therefore important that valid is not set to true\n+       until after the children have been layed out. */\n     valid = true;\n \n     if (cPeer != null)\n@@ -698,12 +706,14 @@ public float getAlignmentY()\n    * a superclass method so that lightweight components are properly\n    * drawn.\n    *\n-   * @param graphics The graphics context for this paint job.\n+   * @param g The graphics context for this paint job.\n    */\n   public void paint(Graphics g)\n   {\n     if (!isShowing())\n       return;\n+    // Paint self first.\n+    super.paint(g);\n     // Visit heavyweights as well, in case they were\n     // erased when we cleared the background for this container.\n     visitChildren(g, GfxPaintVisitor.INSTANCE, false);\n@@ -716,7 +726,7 @@ public void paint(Graphics g)\n    * a superclass method so that lightweight components are properly\n    * drawn.\n    *\n-   * @param graphics The graphics context for this update.\n+   * @param g The graphics context for this update.\n    */\n   public void update(Graphics g)\n   {\n@@ -730,7 +740,7 @@ public void update(Graphics g)\n    * a superclass method so that lightweight components are properly\n    * drawn.\n    *\n-   * @param graphics The graphics context for this print job.\n+   * @param g The graphics context for this print job.\n    */\n   public void print(Graphics g)\n   {\n@@ -741,7 +751,7 @@ public void print(Graphics g)\n   /**\n    * Paints all of the components in this container.\n    *\n-   * @param graphics The graphics context for this paint job.\n+   * @param g The graphics context for this paint job.\n    */\n   public void paintComponents(Graphics g)\n   {\n@@ -752,7 +762,7 @@ public void paintComponents(Graphics g)\n   /**\n    * Prints all of the components in this container.\n    *\n-   * @param graphics The graphics context for this print job.\n+   * @param g The graphics context for this print job.\n    */\n   public void printComponents(Graphics g)\n   {\n@@ -766,9 +776,9 @@ public void printComponents(Graphics g)\n    *\n    * @param listener The listener to add.\n    */\n-  public synchronized void addContainerListener(ContainerListener l)\n+  public synchronized void addContainerListener(ContainerListener listener)\n   {\n-    containerListener = AWTEventMulticaster.add(containerListener, l);\n+    containerListener = AWTEventMulticaster.add(containerListener, listener);\n   }\n \n   /**\n@@ -777,9 +787,9 @@ public synchronized void addContainerListener(ContainerListener l)\n    *\n    * @param listener The listener to remove.\n    */\n-  public synchronized void removeContainerListener(ContainerListener l)\n+  public synchronized void removeContainerListener(ContainerListener listener)\n   {\n-    containerListener = AWTEventMulticaster.remove(containerListener, l);\n+    containerListener = AWTEventMulticaster.remove(containerListener, listener);\n   }\n \n   /**\n@@ -815,7 +825,7 @@ public EventListener[] getListeners(Class listenerType)\n    * <code>ContainerEvent</code>, otherwise it calls the superclass\n    * method.\n    *\n-   * @param event The event to be processed.\n+   * @param e The event to be processed.\n    */\n   protected void processEvent(AWTEvent e)\n   {\n@@ -829,7 +839,7 @@ protected void processEvent(AWTEvent e)\n    * Called when a container event occurs if container events are enabled.\n    * This method calls any registered listeners.\n    *\n-   * @param event The event that occurred.\n+   * @param e The event that occurred.\n    */\n   protected void processContainerEvent(ContainerEvent e)\n   {\n@@ -850,7 +860,7 @@ protected void processContainerEvent(ContainerEvent e)\n   /**\n    * AWT 1.0 event processor.\n    *\n-   * @param event The event that occurred.\n+   * @param e The event that occurred.\n    *\n    * @deprecated use {@link #dispatchEvent(AWTEvent)} instead\n    */\n@@ -895,7 +905,8 @@ public Component getComponentAt(int x, int y)\n    * unless the point does not exist within this container, in which\n    * case <code>null</code> is returned.\n    *\n-   * @param point The point to return the component at.\n+   * @param x The x position of the point to return the component at.\n+   * @param y The y position of the point to return the component at.\n    *\n    * @return The component containing the specified point, or <code>null</code>\n    * if there is no such point.\n@@ -931,7 +942,7 @@ public Component locate(int x, int y)\n    * unless the point does not exist within this container, in which\n    * case <code>null</code> is returned.\n    *\n-   * @param point The point to return the component at.\n+   * @param p The point to return the component at.\n    * @return The component containing the specified point, or <code>null</code>\n    * if there is no such point.\n    */\n@@ -1007,7 +1018,7 @@ public void removeNotify()\n    * Tests whether or not the specified component is contained within\n    * this components subtree.\n    *\n-   * @param component The component to test.\n+   * @param comp The component to test.\n    *\n    * @return <code>true</code> if this container is an ancestor of the\n    * specified component, <code>false</code> otherwise.\n@@ -1046,7 +1057,7 @@ protected String paramString()\n    * Writes a listing of this container to the specified stream starting\n    * at the specified indentation point.\n    *\n-   * @param stream The <code>PrintStream</code> to write to.\n+   * @param out The <code>PrintStream</code> to write to.\n    * @param indent The indentation point.\n    */\n   public void list(PrintStream out, int indent)\n@@ -1063,7 +1074,7 @@ public void list(PrintStream out, int indent)\n    * Writes a listing of this container to the specified stream starting\n    * at the specified indentation point.\n    *\n-   * @param stream The <code>PrintWriter</code> to write to.\n+   * @param out The <code>PrintWriter</code> to write to.\n    * @param indent The indentation point.\n    */\n   public void list(PrintWriter out, int indent)"}, {"sha": "800b01d4639ec7fc2064b828142bbfc9034a2c8b", "filename": "libjava/java/awt/DefaultKeyboardFocusManager.java", "status": "modified", "additions": 24, "deletions": 17, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* DefaultKeyboardFocusManager.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,8 +38,15 @@\n \n package java.awt;\n \n-import java.util.*;\n-import java.awt.event.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.WindowEvent;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n \n // FIXME: finish documentation\n public class DefaultKeyboardFocusManager extends KeyboardFocusManager\n@@ -164,18 +171,15 @@ else if (e instanceof FocusEvent)\n \n         if (e.id == FocusEvent.FOCUS_GAINED)\n           {\n-            if (((FocusEvent) e).isTemporary ())\n-              setGlobalFocusOwner (target);\n-            else\n-              setGlobalPermanentFocusOwner (target);\n-          }\n-        else if (e.id == FocusEvent.FOCUS_LOST)\n-          {\n-            // We need to set the window's focus owner here; we can't\n-            // set it when the window loses focus because by that time\n-            // the previous focus owner has already lost focus\n-            // (FOCUS_LOST events are delivered before\n-            // WINDOW_LOST_FOCUS events).\n+            if (! (target instanceof Window))\n+              {\n+                if (((FocusEvent) e).isTemporary ())\n+                  setGlobalFocusOwner (target);\n+                else\n+                  setGlobalPermanentFocusOwner (target);\n+              }\n+\n+            // Keep track of this window's focus owner.\n \n             // Find the target Component's top-level ancestor.\n             Container parent = target.getParent ();\n@@ -188,9 +192,12 @@ else if (e.id == FocusEvent.FOCUS_LOST)\n               (Window) target : (Window) parent;\n \n             Component focusOwner = getFocusOwner ();\n-            if (focusOwner != null)\n+            if (focusOwner != null\n+                && ! (focusOwner instanceof Window))\n               toplevel.setFocusOwner (focusOwner);\n-\n+          }\n+        else if (e.id == FocusEvent.FOCUS_LOST)\n+          {\n             if (((FocusEvent) e).isTemporary ())\n               setGlobalFocusOwner (null);\n             else"}, {"sha": "0803ff675c8c6b980ce2df85d27a972b4a621e77", "filename": "libjava/java/awt/EventDispatchThread.java", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FEventDispatchThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FEventDispatchThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventDispatchThread.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2002  Free Software Foundation\n+/* EventDispatchThread.java -\n+   Copyright (C) 2000, 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -34,22 +35,22 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-/** @author Bryce McKinlay */\n-\n-/* Status: believed complete, but untested. */\n-\n package java.awt;\n \n+/**\n+ * @author Bryce McKinlay\n+ * @status believed complete, but untested.\n+ */\n class EventDispatchThread extends Thread\n {\n-  private static int dispatchThreadNum = 1;\n+  private static int dispatchThreadNum;\n \n   private EventQueue queue;\n \n   EventDispatchThread(EventQueue queue)\n   {\n     super();\n-    setName(\"AWT-EventQueue-\" + dispatchThreadNum++);\n+    setName(\"AWT-EventQueue-\" + ++dispatchThreadNum);\n     this.queue = queue;\n     setPriority(NORM_PRIORITY + 1);\n     start();"}, {"sha": "fd1c8062d71af08b060f8109b8bae65b5073d411", "filename": "libjava/java/awt/EventQueue.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FEventQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FEventQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventQueue.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -155,7 +155,7 @@ public synchronized AWTEvent peekEvent(int id)\n   /**\n    * Posts a new event to the queue.\n    *\n-   * @param event The event to post to the queue.\n+   * @param evt The event to post to the queue.\n    *\n    * @exception NullPointerException If event is null.\n    */"}, {"sha": "e345018550a51963fdb851a4f9ece41d3f9ae017", "filename": "libjava/java/awt/FileDialog.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFileDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFileDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFileDialog.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* FileDialog.java -- A filename selection dialog box\n-   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,7 +39,6 @@\n package java.awt;\n \n import java.awt.peer.FileDialogPeer;\n-import java.awt.peer.DialogPeer;\n import java.io.FilenameFilter;\n import java.io.Serializable;\n \n@@ -262,7 +261,7 @@ public class FileDialog extends Dialog implements Serializable\n /**\n   * Returns the filename filter being used by this dialog.\n   *\n-  * @param The filename filter being used by this dialog.\n+  * @return The filename filter being used by this dialog.\n   */\n public FilenameFilter\n getFilenameFilter()"}, {"sha": "eb2bc98cb1b5f4be98f631ee8f3f36ce74eecd99", "filename": "libjava/java/awt/FlowLayout.java", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFlowLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFlowLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFlowLayout.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,6 +1,5 @@\n-// FlowLayout.java - Grid-based layout engine\n-\n-/* Copyright (C) 1999, 2000, 2001, 2002  Free Software Foundation\n+/* FlowLayout.java -- Grid-based layout engine\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +46,7 @@\n  * supports horizontal and vertical gaps.  These are used for spacing\n  * between components.\n  *\n- * @author Tom Tromey <tromey@redhat.com>\n+ * @author Tom Tromey (tromey@redhat.com)\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n public class FlowLayout implements LayoutManager, Serializable\n@@ -69,8 +68,12 @@ public class FlowLayout implements LayoutManager, Serializable\n   // Serialization constant\n   private static final long serialVersionUID = -7262534875583282631L;\n \n-  /** Add a new component to the layout.  This particular implementation\n+  /**\n+   * Add a new component to the layout.  This particular implementation\n    * does nothing.\n+   *\n+   * @param name the name\n+   * @param comp the component \n    */\n   public void addLayoutComponent (String name, Component comp)\n   {"}, {"sha": "4b2ad5a4f9f118d76abd975df974132759edad5a", "filename": "libjava/java/awt/Font.java", "status": "modified", "additions": 45, "deletions": 37, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFont.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -38,35 +38,33 @@\n \n package java.awt;\n \n+import gnu.java.awt.ClasspathToolkit;\n+import gnu.java.awt.peer.ClasspathFontPeer;\n+\n import java.awt.font.FontRenderContext;\n import java.awt.font.GlyphVector;\n import java.awt.font.LineMetrics;\n-import java.awt.font.TextAttribute;\n-import java.awt.font.TransformAttribute;\n import java.awt.geom.AffineTransform;\n import java.awt.geom.Rectangle2D;\n import java.awt.peer.FontPeer;\n-import java.io.InputStream;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.io.Serializable;\n+import java.text.AttributedCharacterIterator;\n+import java.text.CharacterIterator;\n+import java.text.StringCharacterIterator;\n+import java.util.HashMap;\n import java.util.Locale;\n import java.util.Map;\n-import java.util.HashMap;\n import java.util.StringTokenizer;\n-import java.text.CharacterIterator;\n-import java.text.AttributedCharacterIterator;\n-import java.text.StringCharacterIterator;\n-\n-import gnu.java.awt.ClasspathToolkit;\n-import gnu.java.awt.peer.ClasspathFontPeer;\n \n /**\n-  * This class represents a windowing system font.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n- * @author Graydon Hoare <graydon@redhat.com>\n-  */\n+ * This class represents a windowing system font.\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Warren Levy (warrenl@cygnus.com)\n+ * @author Graydon Hoare (graydon@redhat.com)\n+ */\n public class Font implements Serializable\n {\n \n@@ -163,6 +161,26 @@ public class Font implements Serializable\n    */\n   public static final int LAYOUT_NO_LIMIT_CONTEXT = 4;\n \n+  /**\n+   * The logical name of this font.\n+   *\n+   * @since 1.0\n+   */\n+  protected String name;\n+\n+  /**\n+   * The size of this font in pixels.\n+   *\n+   * @since 1.0\n+   */\n+  protected int size;\n+\n+  /**\n+   * The style of this font -- PLAIN, BOLD, ITALIC or BOLD+ITALIC.\n+   *\n+   * @since 1.0\n+   */\n+  protected int style;\n \n // Serialization constant\n private static final long serialVersionUID = -4206021311591459213L;\n@@ -235,7 +253,11 @@ public static Font decode (String fontspec)\n         size = tokenval;\n     }\n \n-    return getFontFromToolkit (name, attrsToMap (style, size));\n+    HashMap attrs = new HashMap();\n+    ClasspathFontPeer.copyStyleToAttrs (style, attrs);\n+    ClasspathFontPeer.copySizeToAttrs (size, attrs);\n+\n+    return getFontFromToolkit (name, attrs);\n }\n \n   /* These methods delegate to the toolkit. */\n@@ -245,23 +267,6 @@ protected static ClasspathToolkit tk ()\n     return (ClasspathToolkit)(Toolkit.getDefaultToolkit ());\n   }\n \n-  protected static Map attrsToMap(int style, int size)\n-  {\n-    Map attrs = new HashMap();\n-    attrs.put (TextAttribute.SIZE, new Float ((float)size));\n-    \n-    if ((style & BOLD) == BOLD)\n-      attrs.put (TextAttribute.WEIGHT, TextAttribute.WEIGHT_BOLD);\n-    else\n-      attrs.put (TextAttribute.WEIGHT, TextAttribute.WEIGHT_REGULAR);\n-\n-    if ((style & ITALIC) == ITALIC)\n-      attrs.put (TextAttribute.POSTURE, TextAttribute.POSTURE_OBLIQUE);\n-    else\n-      attrs.put (TextAttribute.POSTURE, TextAttribute.POSTURE_REGULAR);\n-    return attrs;\n-  }\n-\n   /* Every factory method in Font should eventually call this. */\n   protected static Font getFontFromToolkit (String name, Map attribs)\n   {\n@@ -281,7 +286,7 @@ protected static ClasspathFontPeer getPeerFromToolkit (String name, Map attrs)\n   * Returns a <code>Font</code> object from the passed property name.\n   *\n   * @param propname The name of the system property.\n-  * @param default Value to use if the property is not found.\n+  * @param defval Value to use if the property is not found.\n   *\n   * @return The requested font, or <code>default</code> if the property \n   * not exist or is malformed.\n@@ -326,7 +331,10 @@ public static Font getFont (String propname)\n \n   public Font (String name, int style, int size)\n   {\n-    this.peer = getPeerFromToolkit (name, attrsToMap (style, size));\n+    HashMap attrs = new HashMap();\n+    ClasspathFontPeer.copyStyleToAttrs (style, attrs);\n+    ClasspathFontPeer.copySizeToAttrs (size, attrs);\n+    this.peer = getPeerFromToolkit (name, attrs);\n   }\n \n   public Font (Map attrs)\n@@ -629,7 +637,7 @@ public GlyphVector createGlyphVector (FontRenderContext ctx, char[] chars)\n   * GlyphVector} with a mapped glyph for each input glyph code. \n   *\n   * @param ctx The rendering context used for precise glyph placement.\n-  * @param chars Array of characters to convert to glyphs.\n+  * @param glyphCodes Array of characters to convert to glyphs.\n   *\n   * @return A new {@link GlyphVector} containing glyphs mapped from str,\n   * through the font's cmap table."}, {"sha": "1520d594993c619d2cbd838399689c08e38b3d1f", "filename": "libjava/java/awt/FontMetrics.java", "status": "modified", "additions": 110, "deletions": 1, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFontMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFontMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFontMetrics.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -38,6 +38,10 @@\n \n package java.awt;\n \n+import java.awt.font.FontRenderContext;\n+import java.awt.font.LineMetrics;\n+import java.text.CharacterIterator;\n+\n // FIXME: I leave many methods basically unimplemented.  This\n // should be reviewed.\n \n@@ -349,6 +353,111 @@ public abstract class FontMetrics implements java.io.Serializable\n \t  + \",descent=\" + getDescent() + \",height=\" + getHeight() + \"]\");\n }\n \n-} // class FontMetrics \n \n+// Generic FontRenderContext used when getLineMetrics is called with a\n+// plain Graphics object.\n+private static final FontRenderContext gRC = new FontRenderContext(null,\n+\t\t\t\t\t\t\t\t   false,\n+\t\t\t\t\t\t\t\t   false);\n+\n+/**\n+  * Returns a {@link LineMetrics} object constructed with the\n+  * specified text and the {@link FontRenderContext} of the Graphics\n+  * object when it is an instance of Graphics2D or a generic\n+  * FontRenderContext with a null transform, not anti-aliased and not\n+  * using fractional metrics.\n+  *\n+  * @param text The string to calculate metrics from.\n+  * @param g The Graphics object that will be used.\n+  *\n+  * @return A new {@link LineMetrics} object.\n+  */\n+public LineMetrics getLineMetrics(String text, Graphics g)\n+{\n+  return getLineMetrics(text, 0, text.length(), g);\n+}\n \n+/**\n+ * Returns a {@link LineMetrics} object constructed with the\n+ * specified text and the {@link FontRenderContext} of the Graphics\n+ * object when it is an instance of Graphics2D or a generic\n+ * FontRenderContext with a null transform, not anti-aliased and not\n+ * using fractional metrics.\n+ *\n+ * @param text The string to calculate metrics from.\n+ * @param begin Index of first character in <code>text</code> to measure.\n+ * @param limit Index of last character in <code>text</code> to measure.\n+ * @param g The Graphics object that will be used.\n+ *\n+ * @return A new {@link LineMetrics} object.\n+ *\n+ * @throws IndexOutOfBoundsException if the range [begin, limit] is\n+ * invalid in <code>text</code>.\n+ */\n+public LineMetrics getLineMetrics(String text, int begin, \n+\t\t\t\t  int limit, Graphics g)\n+{\n+  FontRenderContext rc;\n+  if (g instanceof Graphics2D)\n+    rc = ((Graphics2D) g).getFontRenderContext();\n+  else\n+    rc = gRC;\n+  return font.getLineMetrics(text, begin, limit, rc);\n+}\n+\n+/**\n+ * Returns a {@link LineMetrics} object constructed with the\n+ * specified text and the {@link FontRenderContext} of the Graphics\n+ * object when it is an instance of Graphics2D or a generic\n+ * FontRenderContext with a null transform, not anti-aliased and not\n+ * using fractional metrics.\n+ *\n+ * @param chars The string to calculate metrics from.\n+ * @param begin Index of first character in <code>text</code> to measure.\n+ * @param limit Index of last character in <code>text</code> to measure.\n+ * @param g The Graphics object that will be used.\n+ *\n+ * @return A new {@link LineMetrics} object.\n+ *\n+ * @throws IndexOutOfBoundsException if the range [begin, limit] is\n+ * invalid in <code>text</code>.\n+ */\n+public LineMetrics getLineMetrics(char[] chars, int begin, \n+\t\t\t\t  int limit, Graphics g)\n+{\n+  FontRenderContext rc;\n+  if (g instanceof Graphics2D)\n+    rc = ((Graphics2D) g).getFontRenderContext();\n+  else\n+    rc = gRC;\n+  return font.getLineMetrics(chars, begin, limit, rc);\n+}\n+\n+/**\n+ * Returns a {@link LineMetrics} object constructed with the\n+ * specified text and the {@link FontRenderContext} of the Graphics\n+ * object when it is an instance of Graphics2D or a generic\n+ * FontRenderContext with a null transform, not anti-aliased and not\n+ * using fractional metrics.\n+ *\n+ * @param ci An iterator over the string to calculate metrics from.\n+ * @param begin Index of first character in <code>text</code> to measure.\n+ * @param limit Index of last character in <code>text</code> to measure.\n+ * @param g The Graphics object that will be used.\n+ *\n+ * @return A new {@link LineMetrics} object.\n+ *\n+ * @throws IndexOutOfBoundsException if the range [begin, limit] is\n+ * invalid in <code>text</code>.\n+ */\n+public LineMetrics getLineMetrics(CharacterIterator ci, int begin, \n+\t\t\t\t  int limit, Graphics g)\n+{\n+  FontRenderContext rc;\n+  if (g instanceof Graphics2D)\n+    rc = ((Graphics2D) g).getFontRenderContext();\n+  else\n+    rc = gRC;\n+  return font.getLineMetrics(ci, begin, limit, rc);\n+}\n+}"}, {"sha": "80d2c99ae4d15073a0de5e11679e79761eb47f21", "filename": "libjava/java/awt/Frame.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFrame.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -39,7 +39,6 @@\n package java.awt;\n \n import java.awt.peer.FramePeer;\n-import java.util.Enumeration;\n import java.util.Vector;\n \n /**\n@@ -199,8 +198,8 @@ public class Frame extends Window implements MenuContainer\n \n /*\n    * The number used to generate the name returned by getName.\n- */\n-  private static transient long next_frame_number = 0;\n+   */\n+  private static transient long next_frame_number;\n \n /**\n   * Initializes a new instance of <code>Frame</code> that is not visible\n@@ -317,6 +316,7 @@ public class Frame extends Window implements MenuContainer\n       this.menuBar.removeNotify();  \n     if (menuBar != null)\n       menuBar.addNotify();\n+    invalidateTree ();\n     ((FramePeer) peer).setMenuBar(menuBar);\n   }\n   this.menuBar = menuBar;"}, {"sha": "8dc703c327432f29b6f1a4a6a6a24d193865d94d", "filename": "libjava/java/awt/Graphics.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphics.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -243,7 +243,7 @@\n   * region and the rectangle determined by the specified parameters.\n   *\n   * @param x The X coordinate of the upper left corner of the intersect rect.\n-  * @param Y The Y coordinate of the upper left corner of the intersect rect.\n+  * @param y The Y coordinate of the upper left corner of the intersect rect.\n   * @param width The width of the intersect rect.\n   * @param height The height of the intersect rect.\n   */\n@@ -279,7 +279,7 @@\n /**\n   * Sets the clipping region to the specified <code>Shape</code>.\n   *\n-  * @param shape The new clipping region.\n+  * @param clip The new clipping region.\n   */\n public abstract void\n setClip(Shape clip);\n@@ -371,7 +371,7 @@\n   * @param width The width of the draw rect.\n   * @param height The height of the draw rect.\n   * @param arcWidth The width of the corner arcs.\n-  * @param arcHeigth The height of the corner arcs.\n+  * @param arcHeight The height of the corner arcs.\n   */\n public abstract void\n drawRoundRect(int x, int y, int width, int height, int arcWidth, int arcHeight);\n@@ -386,7 +386,7 @@\n   * @param width The width of the fill rect.\n   * @param height The height of the fill rect.\n   * @param arcWidth The width of the corner arcs.\n-  * @param arcHeigth The height of the corner arcs.\n+  * @param arcHeight The height of the corner arcs.\n   */\n public abstract void\n fillRoundRect(int x, int y, int width, int height, int arcWidth, int arcHeight);\n@@ -480,7 +480,7 @@\n   * @param arcAngle The extent of the arc.\n   */\n public abstract void\n-drawArc(int x, int y, int width, int height, int startAngle, int arcAngle);\n+drawArc(int x, int y, int width, int height, int arcStart, int arcAngle);\n \n /*************************************************************************/\n \n@@ -498,7 +498,7 @@\n   * @param arcAngle The extent of the arc.\n   */\n public abstract void\n-fillArc(int x, int y, int width, int height, int startAngle, int arcAngle);\n+fillArc(int x, int y, int width, int height, int arcStart, int arcAngle);\n \n /*************************************************************************/\n \n@@ -734,7 +734,7 @@\n /**\n  * Returns a string representation of this object.\n  *\n- * @param A string representation of this object. \n+ * @return A string representation of this object. \n  */\n public String\n toString()"}, {"sha": "e16c2d8fbefac6c997fe9eeb5ad8a8d6a80c3bc4", "filename": "libjava/java/awt/Graphics2D.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphics2D.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000, 2002  Free Software Foundation\n+/* Copyright (C) 2000, 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -34,19 +34,18 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt;\n \n import java.awt.font.FontRenderContext;\n import java.awt.font.GlyphVector;\n import java.awt.geom.AffineTransform;\n import java.awt.image.BufferedImage;\n import java.awt.image.BufferedImageOp;\n-import java.awt.image.RenderedImage;\n import java.awt.image.ImageObserver;\n+import java.awt.image.RenderedImage;\n import java.awt.image.renderable.RenderableImage;\n-\n import java.text.AttributedCharacterIterator;\n-\n import java.util.Map;\n \n /**"}, {"sha": "b963f4bab2bc5db11d2b79ac2619be31a6506ef0", "filename": "libjava/java/awt/GraphicsEnvironment.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsEnvironment.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* GraphicsEnvironment.java -- information about the graphics environment\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,16 +38,17 @@\n \n package java.awt;\n \n+import gnu.java.awt.ClasspathToolkit;\n+\n import java.awt.image.BufferedImage;\n import java.util.Locale;\n-import gnu.java.awt.ClasspathToolkit;\n \n /**\n  * This descibes the collection of GraphicsDevice and Font objects available\n  * on a given platform. The resources might be local or remote, and specify\n  * the valid configurations for displaying graphics.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see GraphicsDevice\n  * @see GraphicsConfiguration\n  * @since 1.4"}, {"sha": "2795b9ed994cd4f2694ebfd781ebe08bac13aa73", "filename": "libjava/java/awt/GridBagConstraints.java", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGridBagConstraints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGridBagConstraints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGridBagConstraints.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,6 +1,5 @@\n-// GridBagConstraints.java - Constraints for GridBag layout manager\n-\n-/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+/* GridBagConstraints.java -- Constraints for GridBag layout manager\n+   Copyright (C) 2000, 2001, 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -41,8 +40,10 @@\n \n import java.io.Serializable;\n \n-/** This specifies the constraints for a component managed by the\n- * GridBagLayout layout manager.  */\n+/**\n+ * This specifies the constraints for a component managed by the\n+ * GridBagLayout layout manager.\n+ */\n public class GridBagConstraints implements Cloneable, Serializable\n {\n   static final long serialVersionUID = -1000070633030801713L;"}, {"sha": "85fdfb56eaac6bafcf983727e20de90ebb773f6d", "filename": "libjava/java/awt/GridBagLayout.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGridBagLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGridBagLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGridBagLayout.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* GridBagLayout - Layout manager for components according to GridBagConstraints\n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,8 +40,8 @@\n \n import java.io.Serializable;\n import java.util.ArrayList;\n-import java.util.Hashtable;\n import java.util.HashMap;\n+import java.util.Hashtable;\n \n /**\n  * @author Michael Koch <konqueror@gmx.de>"}, {"sha": "a9e9eac66299808d5725d2d344444305cf1f6937", "filename": "libjava/java/awt/GridLayout.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGridLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FGridLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGridLayout.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,6 +1,5 @@\n-// GridLayout.java - Grid-based layout engine\n-\n-/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n+/* GridLayout.java -- Grid-based layout engine\n+   Copyright (C) 1999, 2000, 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -63,7 +62,7 @@ public class GridLayout implements LayoutManager, Serializable\n   /** Add a new component to the layout.  This particular implementation\n    * does nothing.\n    * @param name The name of the component to add.\n-   * @param component The component to add.\n+   * @param comp The component to add.\n    */\n   public void addLayoutComponent (String name, Component comp)\n   {"}, {"sha": "37617719b019914ed64855e68ad1528e20074133", "filename": "libjava/java/awt/Image.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FImage.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* Image.java -- superclass for images\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,7 +38,6 @@\n \n package java.awt;\n \n-import java.awt.image.AreaAveragingScaleFilter;\n import java.awt.image.FilteredImageSource;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;"}, {"sha": "6fa56d8a88ee9a7152068ad73ab0d7a00a9c12ab", "filename": "libjava/java/awt/KeyboardFocusManager.java", "status": "modified", "additions": 542, "deletions": 19, "changes": 561, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* KeyboardFocusManager.java -- manage component focusing via the keyboard\n-   Copyright (C) 2002 Free Software Foundation\n+   Copyright (C) 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -38,8 +38,8 @@\n \n package java.awt;\n \n-import java.awt.event.KeyEvent;\n import java.awt.event.FocusEvent;\n+import java.awt.event.KeyEvent;\n import java.beans.PropertyChangeListener;\n import java.beans.PropertyChangeSupport;\n import java.beans.PropertyVetoException;\n@@ -55,20 +55,64 @@\n import java.util.Map;\n import java.util.Set;\n \n-// FIXME: finish documentation\n-\n /**\n- *\n- * FIXME: discuss applet contexts and thread groups and codebases\n- * being insulated.\n- *\n- * FIXME: discuss where default focus traversal key sets apply\n- * (inherited by child Components etc.)\n+ * The <code>KeyboardFocusManager</code> handles the focusing of\n+ * windows for receiving keyboard events.  The manager handles\n+ * the dispatch of all <code>FocusEvent</code>s and\n+ * <code>KeyEvent</code>s, along with <code>WindowEvent</code>s\n+ * relating to the focused window.  Users can use the manager\n+ * to ascertain the current focus owner and fire events.\n+ * <br />\n+ * <br />\n+ * The focus owner is the <code>Component</code> that receives\n+ * key events.  The focus owner is either the currently focused\n+ * window or a component within this window.\n+ * <br />\n+ * <br />\n+ * The underlying native windowing system may denote the active\n+ * window or its children with special decorations (e.g. a highlighted\n+ * title bar).  The active window is always either a <code>Frame</code>\n+ * or <code>Dialog</code>, and is either the currently focused\n+ * window or its owner.\n+ * <br />\n+ * <br />\n+ * Applets may be partitioned into different applet contexts, according\n+ * to their code base.  In this case, each context has its own\n+ * <code>KeyboardFocusManager</code>, as opposed to the global\n+ * manager maintained by applets which share the same context.\n+ * Each context is insulated from the others, and they don't interact.\n+ * The resulting behaviour, as with context division, depends on the browser\n+ * supporting the applets.  Regardless, there can only ever be\n+ * one focused window, one active window and one focus owner\n+ * per <code>ClassLoader</code>.\n+ * <br />\n+ * <br />\n+ * To support this separation of focus managers, the manager instances\n+ * and the internal state information is grouped by the\n+ * <code>ThreadGroup</code> to which it pertains.  With respect to\n+ * applets, each code base has its own <code>ThreadGroup</code>, so the\n+ * isolation of each context is enforced within the manager.\n+ * <br />\n+ * <br />\n+ * By default, the manager defines TAB and Ctrl+TAB as the\n+ * forward focus traversal keys and Shift+TAB and Ctrl+Shift+TAB\n+ * as the backward focus traversal keys.  No up or down cycle\n+ * traversal keys are defined by default.  Traversal takes effect\n+ * on the firing of a relevant <code>KEY_PRESSED</code> event.\n+ * However, all other key events related to the use of the\n+ * defined focus traversal key sequence are consumed and not\n+ * dispatched.\n+ * <br />\n+ * <br />\n+ * These default traversal keys come into effect on all windows\n+ * for which no alternative set of keys is defined.  This also\n+ * applies recursively to any child components of such a window,\n+ * which define no traversal keys of their own.\n  *\n  * @author Eric Blake <ebb9@email.byu.edu>\n  * @author Thomas Fitzsimmons <fitzsim@redhat.com>\n+ * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n  * @since 1.4\n- * @status partially updated to 1.4, needs documentation.\n  */\n public abstract class KeyboardFocusManager\n   implements KeyEventDispatcher, KeyEventPostProcessor\n@@ -182,7 +226,14 @@\n     Collections.EMPTY_SET, Collections.EMPTY_SET\n   };\n \n+  /**\n+   * A utility class to support the handling of events relating to property changes.\n+   */\n   private final PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport (this);\n+\n+  /**\n+   * A utility class to support the handling of events relating to vetoable changes.\n+   */\n   private final VetoableChangeSupport vetoableChangeSupport = new VetoableChangeSupport (this);\n \n   /** A list of {@link KeyEventDispatcher}s that process {@link\n@@ -211,6 +262,10 @@ public KeyboardFocusManager ()\n   public static KeyboardFocusManager getCurrentKeyboardFocusManager ()\n   {\n     ThreadGroup currentGroup = Thread.currentThread ().getThreadGroup ();\n+\n+    if (currentKeyboardFocusManagers.get (currentGroup) == null)\n+      setCurrentKeyboardFocusManager (null);\n+\n     return (KeyboardFocusManager) currentKeyboardFocusManagers.get (currentGroup);\n   }\n \n@@ -623,121 +678,428 @@ public void setGlobalCurrentFocusCycleRoot (Container cycleRoot)\n     setGlobalObject (currentFocusCycleRoots, cycleRoot, \"currentFocusCycleRoot\");\n   }\n \n+  /**\n+   * Registers the supplied property change listener for receiving\n+   * events caused by the following property changes:\n+   *\n+   * <ul>\n+   * <li>the current focus owner (\"focusOwner\")</li>\n+   * <li>the permanent focus owner (\"permanentFocusOwner\")</li>\n+   * <li>the focused window (\"focusedWindow\")</li>\n+   * <li>the active window (\"activeWindow\")</li>\n+   * <li>the default focus traversal policy (\"defaultFocusTraversalPolicy\")</li>\n+   * <li>the default set of forward traversal keys (\"forwardDefaultFocusTraversalKeys\")</li>\n+   * <li>the default set of backward traversal keys (\"backwardDefaultFocusTraversalKeys\")</li>\n+   * <li>the default set of up cycle traversal keys (\"upCycleDefaultFocusTraversalKeys\")</li>\n+   * <li>the default set of down cycle traversal keys (\"downCycleDefaultFocusTraversalKeys\")</li>\n+   * <li>the current focus cycle root (\"currentFocusCycleRoot\")</li>\n+   * </ul>\n+   *\n+   * If the supplied listener is null, nothing occurs.\n+   *\n+   * @param l the new listener to register.\n+   * @see KeyboardFocusManager#addPropertyChangeListener(String, java.beans.PropertyChangeListener)\n+   */\n   public void addPropertyChangeListener(PropertyChangeListener l)\n   {\n     if (l != null)\n       propertyChangeSupport.addPropertyChangeListener(l);\n   }\n \n+  /**\n+   * Removes the supplied property change listener from the list\n+   * of registered listeners.  If the supplied listener is null,\n+   * nothing occurs.\n+   *\n+   * @param l the listener to remove.\n+   */\n   public void removePropertyChangeListener(PropertyChangeListener l)\n   {\n     if (l != null)\n       propertyChangeSupport.removePropertyChangeListener(l);\n   }\n \n+  /**\n+   * Returns the currently registered property change listeners\n+   * in array form.  The returned array is empty if no listeners are\n+   * currently registered.\n+   *\n+   * @return an array of registered property change listeners.\n+   */\n   public PropertyChangeListener[] getPropertyChangeListeners()\n   {\n     return propertyChangeSupport.getPropertyChangeListeners();\n   }\n \n+  /**\n+   * Registers a property change listener for receiving events relating\n+   * to a change to a specified property.  The supplied property name can be\n+   * either user-defined or one from the following list of properties\n+   * relevant to this class:\n+   *\n+   * <ul>\n+   * <li>the current focus owner (\"focusOwner\")</li>\n+   * <li>the permanent focus owner (\"permanentFocusOwner\")</li>\n+   * <li>the focused window (\"focusedWindow\")</li>\n+   * <li>the active window (\"activeWindow\")</li>\n+   * <li>the default focus traversal policy (\"defaultFocusTraversalPolicy\")</li>\n+   * <li>the default set of forward traversal keys (\"forwardDefaultFocusTraversalKeys\")</li>\n+   * <li>the default set of backward traversal keys (\"backwardDefaultFocusTraversalKeys\")</li>\n+   * <li>the default set of up cycle traversal keys (\"upCycleDefaultFocusTraversalKeys\")</li>\n+   * <li>the default set of down cycle traversal keys (\"downCycleDefaultFocusTraversalKeys\")</li>\n+   * <li>the current focus cycle root (\"currentFocusCycleRoot\")</li>\n+   * </ul>\n+   *\n+   * Nothing occurs if a null listener is supplied.  null is regarded as a valid property name.\n+   *\n+   * @param name the name of the property to handle change events for.\n+   * @param l the listener to register for changes to the specified property. \n+   * @see KeyboardFocusManager#addPropertyChangeListener(java.beans.PropertyChangeListener)\n+   */\n   public void addPropertyChangeListener(String name, PropertyChangeListener l)\n   {\n     if (l != null)\n       propertyChangeSupport.addPropertyChangeListener(name, l);\n   }\n \n+  /**\n+   * Removes the supplied property change listener registered for the\n+   * specified property from the list of registered listeners.  If the\n+   * supplied listener is null, nothing occurs.\n+   *\n+   * @param name the name of the property the listener is\n+   *        monitoring changes to.\n+   * @param l the listener to remove.\n+   */\n   public void removePropertyChangeListener(String name,\n                                            PropertyChangeListener l)\n   {\n     if (l != null)\n       propertyChangeSupport.removePropertyChangeListener(name, l);\n   }\n \n+  /**\n+   * Returns the currently registered property change listeners\n+   * in array form, which listen for changes to the supplied property.\n+   * The returned array is empty, if no listeners are currently registered\n+   * for events pertaining to the supplied property.\n+   *\n+   * @param name The property the returned listeners monitor for changes.\n+   * @return an array of registered property change listeners which\n+   *         listen for changes to the supplied property.\n+   */\n   public PropertyChangeListener[] getPropertyChangeListeners(String name)\n   {\n     return propertyChangeSupport.getPropertyChangeListeners(name);\n   }\n \n+  /**\n+   * Fires a property change event as a response to a change to\n+   * to the specified property.  The event is only fired if a\n+   * change has actually occurred (i.e. o and n are different).\n+   *\n+   * @param name The name of the property to which a change occurred.\n+   * @param o The old value of the property.\n+   * @param n The new value of the property.\n+   */\n   protected void firePropertyChange(String name, Object o, Object n)\n   {\n     propertyChangeSupport.firePropertyChange(name, o, n);\n   }\n \n+  /**\n+   * Registers a vetoable property change listener for receiving events\n+   * relating to the following properties:\n+   *\n+   * <ul>\n+   * <li>the current focus owner (\"focusOwner\")</li>\n+   * <li>the permanent focus owner (\"permanentFocusOwner\")</li>\n+   * <li>the focused window (\"focusedWindow\")</li>\n+   * <li>the active window (\"activeWindow\")</li>\n+   * </ul>\n+   *\n+   * Nothing occurs if a null listener is supplied.\n+   *\n+   * @param l the listener to register. \n+   * @see KeyboardFocusManager#addVetoableChangeListener(String, java.beans.VetoableChangeListener)\n+   */\n   public void addVetoableChangeListener(VetoableChangeListener l)\n   {\n     if (l != null)\n       vetoableChangeSupport.addVetoableChangeListener(l);\n   }\n \n+  /**\n+   * Removes the supplied vetoable property change listener from\n+   * the list of registered listeners.  If the supplied listener\n+   * is null, nothing occurs.\n+   *\n+   * @param l the listener to remove.\n+   */\n   public void removeVetoableChangeListener(VetoableChangeListener l)\n   {\n     if (l != null)\n       vetoableChangeSupport.removeVetoableChangeListener(l);\n   }\n \n+  /**\n+   * Returns the currently registered vetoable property change listeners\n+   * in array form.  The returned array is empty if no listeners are\n+   * currently registered.\n+   *\n+   * @return an array of registered vetoable property change listeners.\n+   * @since 1.4\n+   */\n   public VetoableChangeListener[] getVetoableChangeListeners()\n   {\n     return vetoableChangeSupport.getVetoableChangeListeners();\n   }\n \n+  /**\n+   * Registers a vetoable property change listener for receiving events relating\n+   * to a vetoable change to a specified property.  The supplied property name can be\n+   * either user-defined or one from the following list of properties\n+   * relevant to this class:\n+   *\n+   * <ul>\n+   * <li>the current focus owner (\"focusOwner\")</li>\n+   * <li>the permanent focus owner (\"permanentFocusOwner\")</li>\n+   * <li>the focused window (\"focusedWindow\")</li>\n+   * <li>the active window (\"activeWindow\")</li>\n+   * </ul>\n+   *\n+   * Nothing occurs if a null listener is supplied.  null is regarded as a valid property name.\n+   *\n+   * @param name the name of the property to handle change events for.\n+   * @param l the listener to register for changes to the specified property. \n+   * @see KeyboardFocusManager#addVetoableChangeListener(java.beans.VetoableChangeListener)\n+   */\n   public void addVetoableChangeListener(String name, VetoableChangeListener l)\n   {\n     if (l != null)\n       vetoableChangeSupport.addVetoableChangeListener(name, l);\n   }\n \n+  /**\n+   * Removes the supplied vetoable property change listener registered\n+   * for the specified property from the list of registered listeners.\n+   * If the supplied listener is null, nothing occurs.\n+   *\n+   * @param name the name of the vetoable property the listener is\n+   *        monitoring changes to.\n+   * @param l the listener to remove.\n+   */\n   public void removeVetoableChangeListener(String name,\n                                            VetoableChangeListener l)\n   {\n     if (l != null)\n       vetoableChangeSupport.removeVetoableChangeListener(name, l);\n   }\n \n+  /**\n+   * Returns the currently registered vetoable property change listeners\n+   * in array form, which listen for changes to the supplied property.\n+   * The returned array is empty, if no listeners are currently registered\n+   * for events pertaining to the supplied property.\n+   *\n+   * @param name The property the returned listeners monitor for changes.\n+   * @return an array of registered property change listeners which\n+   *         listen for changes to the supplied property.\n+   * @since 1.4\n+   */\n   public VetoableChangeListener[] getVetoableChangeListeners(String name)\n   {\n     return vetoableChangeSupport.getVetoableChangeListeners(name);\n   }\n \n+  /**\n+   * Fires a property change event as a response to a vetoable change to\n+   * to the specified property.  The event is only fired if a\n+   * change has actually occurred (i.e. o and n are different).\n+   * In the event that the property change is vetoed, the following\n+   * occurs:\n+   *\n+   * <ol>\n+   * <li>\n+   * This method throws a <code>PropertyVetoException</code> to\n+   * the proposed change.\n+   * </li>\n+   * <li>\n+   * A new event is fired to reverse the previous change.\n+   * </li>\n+   * <li>\n+   * This method again throws a <code>PropertyVetoException</code>\n+   * in response to the reversion.\n+   * </li>\n+   * </ol>\n+   *\n+   * @param name The name of the property to which a change occurred.\n+   * @param o The old value of the property.\n+   * @param n The new value of the property.\n+   * @throws PropertyVetoException if one of the listeners vetos\n+   *         the change by throwing this exception.\n+   */\n   protected void fireVetoableChange(String name, Object o, Object n)\n     throws PropertyVetoException\n   {\n     vetoableChangeSupport.fireVetoableChange(name, o, n);\n   }\n \n+  /**\n+   * Adds a key event dispatcher to the list of registered dispatchers.\n+   * When a key event is fired, each dispatcher's <code>dispatchKeyEvent</code>\n+   * method is called in the order that they were added, prior to the manager\n+   * dispatching the event itself.  Notifications halt when one of the\n+   * dispatchers returns true.\n+   * <br />\n+   * <br />\n+   * The same dispatcher can exist multiple times within the list\n+   * of registered dispatchers, and there is no limit on the length\n+   * of this list.  A null dispatcher is simply ignored.\n+   *\n+   * @param dispatcher The dispatcher to register.\n+   */\n   public void addKeyEventDispatcher(KeyEventDispatcher dispatcher)\n   {\n     if (dispatcher != null)\n       keyEventDispatchers.add(dispatcher);\n   }\n \n+  /**\n+   * Removes the specified key event dispatcher from the list of\n+   * registered dispatchers.  The manager always dispatches events,\n+   * regardless of its existence within the list.  The manager\n+   * can be added and removed from the list, as with any other\n+   * dispatcher, but this does not affect its ability to dispatch\n+   * key events.  Non-existent and null dispatchers are simply ignored\n+   * by this method.\n+   *\n+   * @param dispatcher The dispatcher to remove.\n+   */\n   public void removeKeyEventDispatcher(KeyEventDispatcher dispatcher)\n   {\n     keyEventDispatchers.remove(dispatcher);\n   }\n \n+  /**\n+   * Returns the currently registered key event dispatchers in <code>List</code>\n+   * form.  At present, this only includes dispatchers explicitly registered\n+   * via the <code>addKeyEventDispatcher()</code> method, but this behaviour\n+   * is subject to change and should not be depended on.  The manager itself\n+   * may be a member of the list, but only if explicitly registered.  If no\n+   * dispatchers have been registered, the list will be empty.\n+   *\n+   * @return A list of explicitly registered key event dispatchers.\n+   * @see KeyboardFocusManager#addKeyEventDispatcher(java.awt.KeyEventDispatcher)\n+   */\n   protected List getKeyEventDispatchers ()\n   {\n     return (List) keyEventDispatchers.clone ();\n   }\n \n+  /**\n+   * Adds a key event post processor to the list of registered post processors.\n+   * Post processors work in the same way as key event dispatchers, except\n+   * that they are invoked after the manager has dispatched the key event,\n+   * and not prior to this.  Each post processor's <code>postProcessKeyEvent</code>\n+   * method is called to see if any post processing needs to be performed.  THe\n+   * processors are called in the order in which they were added to the list,\n+   * and notifications continue until one returns true.  As with key event\n+   * dispatchers, the manager is implicitly called following this process,\n+   * regardless of whether or not it is present within the list.\n+   * <br />\n+   * <br />\n+   * The same post processor can exist multiple times within the list\n+   * of registered post processors, and there is no limit on the length\n+   * of this list.  A null post processor is simply ignored.\n+   *\n+   * @param postProcessor the post processor to register.\n+   * @see KeyboardFocusManager#addKeyEventDispatcher(java.awt.KeyEventDispatcher)\n+   */\n   public void addKeyEventPostProcessor (KeyEventPostProcessor postProcessor)\n   {\n     if (postProcessor != null)\n       keyEventPostProcessors.add (postProcessor);\n   }\n \n+  /**\n+   * Removes the specified key event post processor from the list of\n+   * registered post processors.  The manager always post processes events,\n+   * regardless of its existence within the list.  The manager\n+   * can be added and removed from the list, as with any other\n+   * post processor, but this does not affect its ability to post process\n+   * key events.  Non-existent and null post processors are simply ignored\n+   * by this method.\n+   *\n+   * @param postProcessor the post processor to remove.\n+   */\n   public void removeKeyEventPostProcessor (KeyEventPostProcessor postProcessor)\n   {\n     keyEventPostProcessors.remove (postProcessor);\n   }\n \n+  /**\n+   * Returns the currently registered key event post processors in <code>List</code>\n+   * form.  At present, this only includes post processors explicitly registered\n+   * via the <code>addKeyEventPostProcessor()</code> method, but this behaviour\n+   * is subject to change and should not be depended on.  The manager itself\n+   * may be a member of the list, but only if explicitly registered.  If no\n+   * post processors have been registered, the list will be empty.\n+   *\n+   * @return A list of explicitly registered key event post processors.\n+   * @see KeyboardFocusManager#addKeyEventPostProcessor(java.awt.KeyEventPostProcessor)\n+   */\n   protected List getKeyEventPostProcessors ()\n   {\n     return (List) keyEventPostProcessors.clone ();\n   }\n \n+  /**\n+   * The AWT event dispatcher uses this method to request that the manager\n+   * handle a particular event.  If the manager fails or refuses to\n+   * dispatch the supplied event (this method returns false), the\n+   * AWT event dispatcher will try to dispatch the event itself.\n+   * <br />\n+   * <br />\n+   * The manager is expected to handle all <code>FocusEvent</code>s\n+   * and <code>KeyEvent</code>s, and <code>WindowEvent</code>s\n+   * relating to the focus.  Dispatch is done with regard to the\n+   * the focus owner and the currently focused and active windows.\n+   * In handling the event, the source of the event may be overridden.\n+   * <br />\n+   * <br />\n+   * The actual dispatching is performed by calling\n+   * <code>redispatchEvent()</code>.  This avoids the infinite recursion\n+   * of dispatch requests which may occur if this method is called on\n+   * the target component.  \n+   *\n+   * @param e the event to dispatch.\n+   * @return true if the event was dispatched.\n+   * @see KeyboardFocusManager#redispatchEvent(java.awt.Component, java.awt.AWTEvent)\n+   * @see KeyEvent\n+   * @see FocusEvent\n+   * @see WindowEvent\n+   */\n   public abstract boolean dispatchEvent (AWTEvent e);\n \n+  /**\n+   * Handles redispatching of an event so that recursion of\n+   * dispatch requests does not occur.  Event dispatch methods\n+   * within this manager (<code>dispatchEvent()</code>) and\n+   * the key event dispatchers should use this method to handle\n+   * dispatching rather than the dispatch method of the target\n+   * component.  \n+   * <br />\n+   * <br />\n+   * <strong>\n+   * This method is not intended for general consumption, and is\n+   * only for the use of the aforementioned classes.\n+   * </strong>\n+   * \n+   * @param target the target component to which the event is\n+   *        dispatched.\n+   * @param e the event to dispatch.\n+   */\n   public final void redispatchEvent (Component target, AWTEvent e)\n   {\n     synchronized (e)\n@@ -747,42 +1109,203 @@ public final void redispatchEvent (Component target, AWTEvent e)\n       }\n   }\n \n+  /**\n+   * Attempts to dispatch key events for which no key event dispatcher\n+   * has so far succeeded.  This method is usually called by\n+   * <code>dispatchEvent()</code> following the sending of the key\n+   * event to any registered key event dispatchers.  If the key\n+   * event reaches this stage, none of the dispatchers returned\n+   * true.  This is, of course, always the case if there are no\n+   * registered dispatchers.\n+   * <br />\n+   * <br />\n+   * If this method also fails to handle the key event, then\n+   * false is returned to the caller.  In the case of\n+   * <code>dispatchEvent()</code>, the calling method may try\n+   * to handle the event itself or simply forward on the\n+   * false result to its caller.  When the event is dispatched\n+   * by this method, a true result is propogated through the\n+   * calling methods.\n+   *\n+   * @param e the key event to dispatch.\n+   * @return true if the event was dispatched successfully.\n+   */\n   public abstract boolean dispatchKeyEvent (KeyEvent e);\n \n+  /**\n+   * Handles the post processing of key events.  By default,\n+   * this method will map unhandled key events to appropriate\n+   * <code>MenuShortcut</code>s.  The event is consumed\n+   * in the process and the shortcut is activated.  This\n+   * method is usually called by <code>dispatchKeyEvent</code>.\n+   *\n+   * @param e the key event to post process.\n+   * @return true by default, as the event was handled.\n+   */\n   public abstract boolean postProcessKeyEvent (KeyEvent e);\n \n+  /**\n+   * Handles focus traversal operations for key events which\n+   * represent focus traversal keys in relation to the supplied\n+   * component.  The supplied component is assumed to have the\n+   * focus, whether it does so or not, and the operation is\n+   * carried out as appropriate, with this in mind.\n+   *\n+   * @param focused the component on which to perform focus traversal,\n+   *        on the assumption that this component has the focus.\n+   * @param e the possible focus traversal key event.\n+   */\n   public abstract void processKeyEvent (Component focused, KeyEvent e);\n \n+  /**\n+   * Delays all key events following the specified timestamp until the\n+   * supplied component has focus.  The AWT calls this method when it is\n+   * determined that a focus change may occur within the native windowing\n+   * system.  Any key events which occur following the time specified by\n+   * after are delayed until a <code>FOCUS_GAINED</code> event is received\n+   * for the untilFocused component.  The manager is responsible for ensuring\n+   * this takes place.\n+   *\n+   * @param after the timestamp beyond which all key events are delayed until\n+   *        the supplied component gains focus.\n+   * @param untilFocused the component to wait on gaining focus.\n+   */\n   protected abstract void enqueueKeyEvents (long after, Component untilFocused);\n \n+  /**\n+   * Removes the key event block specified by the supplied timestamp and component.\n+   * All delayed key events are released for normal dispatching following its\n+   * removal and subsequent key events that would have been blocked are now\n+   * immediately dispatched.  If the specified timestamp is below 0, then\n+   * the request with the oldest timestamp is removed.\n+   *\n+   * @param after the timestamp of the key event block to be removed, or a\n+   *        value smaller than 0 if the oldest is to be removed.\n+   * @param untilFocused the component of the key event block to be removed.\n+   */\n   protected abstract void dequeueKeyEvents (long after, Component untilFocused);\n \n+  /**\n+   * Discards all key event blocks relating to focus requirements for\n+   * the supplied component, regardless of timestamp.\n+   *\n+   * @param comp the component of the key event block(s) to be removed.\n+   */\n   protected abstract void discardKeyEvents (Component comp);\n \n-  public abstract void focusNextComponent (Component comp);\n+  /**\n+   * Moves the current focus to the next component following\n+   * comp, based on the current focus traversal policy.  By\n+   * default, only visible, displayable, accepted components\n+   * can receive focus.  <code>Canvas</code>es, <code>Panel</code>s,\n+   * <code>Label</code>s, <code>ScrollPane</code>s, <code>Scrollbar</code>s,\n+   * <code>Window</code>s and lightweight components are judged\n+   * to be unacceptable by default.  See the\n+   * <code>DefaultFocusTraversalPolicy</code> for more details.\n+   *\n+   * @param comp the component prior to the one which will\n+   *        become the focus, following execution of this method.\n+   * @see DefaultFocusTraversalPolicy\n+   */\n+  public abstract void focusNextComponent(Component comp);\n \n-  public abstract void focusPreviousComponent (Component comp);\n+  /**\n+   * Moves the current focus to the previous component, prior to\n+   * comp, based on the current focus traversal policy.  By\n+   * default, only visible, displayable, accepted components\n+   * can receive focus.  <code>Canvas</code>es, <code>Panel</code>s,\n+   * <code>Label</code>s, <code>ScrollPane</code>s, <code>Scrollbar</code>s,\n+   * <code>Window</code>s and lightweight components are judged\n+   * to be unacceptable by default.  See the\n+   * <code>DefaultFocusTraversalPolicy</code> for more details.\n+   *\n+   * @param comp the component following the one which will\n+   *        become the focus, following execution of this method.\n+   * @see DefaultFocusTraversalPolicy\n+   */\n+  public abstract void focusPreviousComponent(Component comp);\n \n-  public abstract void upFocusCycle (Component comp);\n+  /**\n+   * Moves the current focus upwards by one focus cycle.\n+   * Both the current focus owner and current focus cycle root\n+   * become the focus cycle root of the supplied component.\n+   * However, in the case of a <code>Window</code>, the default\n+   * focus component becomes the focus owner and the focus cycle\n+   * root is not changed.\n+   * \n+   * @param comp the component used as part of the focus traversal.\n+   */ \n+  public abstract void upFocusCycle(Component comp);\n \n-  public abstract void downFocusCycle (Container cont);\n+  /**\n+   * Moves the current focus downwards by one focus cycle.\n+   * If the supplied container is a focus cycle root, then this\n+   * becomes the current focus cycle root and the focus goes\n+   * to the default component of the specified container.\n+   * Nothing happens for non-focus cycle root containers. \n+   * \n+   * @param cont the container used as part of the focus traversal.\n+   */ \n+  public abstract void downFocusCycle(Container cont);\n \n-  public final void focusNextComponent ()\n+  /**\n+   * Moves the current focus to the next component, based on the\n+   * current focus traversal policy.  By default, only visible,\n+   * displayable, accepted component can receive focus.\n+   * <code>Canvas</code>es, <code>Panel</code>s,\n+   * <code>Label</code>s, <code>ScrollPane</code>s, <code>Scrollbar</code>s,\n+   * <code>Window</code>s and lightweight components are judged\n+   * to be unacceptable by default.  See the\n+   * <code>DefaultFocusTraversalPolicy</code> for more details.\n+   *\n+   * @see DefaultFocusTraversalPolicy\n+   */\n+  public final void focusNextComponent()\n   {\n     focusNextComponent (null);\n   }\n \n-  public final void focusPreviousComponent ()\n+  /**\n+   * Moves the current focus to the previous component, based on the\n+   * current focus traversal policy.  By default, only visible,\n+   * displayable, accepted component can receive focus.\n+   * <code>Canvas</code>es, <code>Panel</code>s,\n+   * <code>Label</code>s, <code>ScrollPane</code>s, <code>Scrollbar</code>s,\n+   * <code>Window</code>s and lightweight components are judged\n+   * to be unacceptable by default.  See the\n+   * <code>DefaultFocusTraversalPolicy</code> for more details.\n+   *\n+   * @see DefaultFocusTraversalPolicy\n+   */\n+  public final void focusPreviousComponent()\n   {\n     focusPreviousComponent (null);\n   }\n \n-  public final void upFocusCycle ()\n+  /**\n+   * Moves the current focus upwards by one focus cycle,\n+   * so that the new focus owner is the focus cycle root\n+   * of the current owner.  The current focus cycle root then\n+   * becomes the focus cycle root of the new focus owner.\n+   * However, in the case of the focus cycle root of the\n+   * current focus owner being a <code>Window</code>, the default\n+   * component of this window becomes the focus owner and the\n+   * focus cycle root is not changed.\n+   */\n+  public final void upFocusCycle()\n   {\n     upFocusCycle (null);\n   }\n \n-  public final void downFocusCycle ()\n+  /**\n+   * Moves the current focus downwards by one focus cycle,\n+   * iff the current focus cycle root is a <code>Container</code>.\n+   * Usually, the new focus owner is set to the default component\n+   * of the container and the current focus cycle root is set\n+   * to the current focus owner.  Nothing occurs if the current\n+   * focus cycle root is not a container.\n+   */\n+  public final void downFocusCycle()\n   {\n     Component focusOwner = getGlobalFocusOwner ();\n     if (focusOwner instanceof Container"}, {"sha": "189bc10a7563a70037b25b7d85a86b1469ac6be4", "filename": "libjava/java/awt/Label.java", "status": "modified", "additions": 67, "deletions": 3, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLabel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* Label.java -- Java label widget\n-   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,14 +39,18 @@\n package java.awt;\n \n import java.awt.peer.LabelPeer;\n+\n import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n \n /**\n   * This component is used for displaying simple text strings that cannot\n-  * be edited.\n+  * be edited by the user.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   * @author Tom Tromey <tromey@cygnus.com>\n+  * @author Andrew John Hughes  <gnu_andrew@member.fsf.org>\n   */\n public class Label extends Component implements Accessible\n {\n@@ -240,7 +244,7 @@ public class Label extends Component implements Accessible\n /**\n   * Returns a parameter string useful for debugging.\n   *\n-  * @param A debugging string.\n+  * @return A debugging string.\n   */\n protected String\n paramString()\n@@ -249,5 +253,65 @@ public class Label extends Component implements Accessible\n \t  getAlignment() + \",\" + super.paramString());\n }\n \n+/**\n+ * This class provides accessibility support for the label.\n+ */\n+protected class AccessibleAWTLabel\n+  extends AccessibleAWTComponent\n+{\n+  /**\n+   * For compatability with Sun's JDK 1.4.2 rev. 5\n+   */\n+  private static final long serialVersionUID = -3568967560160480438L;\n+\n+  /**\n+   * Constructor for the accessible label.\n+   */\n+  public AccessibleAWTLabel()\n+  {\n+  }\n+\n+  /**\n+   * Returns the accessible name for the label.  This is\n+   * the text used in the label.\n+   *\n+   * @return a <code>String</code> containing the accessible\n+   *         name for this label.\n+   */\n+  public String getAccessibleName()\n+  {\n+    return getText();\n+  }\n+\n+  /**\n+   * Returns the accessible role for the label.\n+   *\n+   * @return an instance of <code>AccessibleRole</code>, describing\n+   *         the role of the label.\n+   */\n+  public AccessibleRole getAccessibleRole()\n+  {\n+    return AccessibleRole.LABEL;\n+  }\n+\n+}\n+\n+/**\n+ * Gets the AccessibleContext associated with this <code>Label</code>.\n+ * The context is created, if necessary.\n+ *\n+ * @return the associated context\n+ */\n+public AccessibleContext getAccessibleContext()\n+{\n+  /* Create the context if this is the first request */\n+  if (accessibleContext == null)\n+    {\n+      /* Create the context */\n+      accessibleContext = new AccessibleAWTLabel();\n+    }\n+  return accessibleContext;\n+}\n+\n } // class Label\n "}, {"sha": "4caa7f2cff26f2b1f0f206f038427cc5620dd3ca", "filename": "libjava/java/awt/LayoutManager2.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FLayoutManager2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FLayoutManager2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLayoutManager2.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -42,7 +42,7 @@\n  * Layout manager for laying out containers based on contraints. The\n  * constraints control how the layout will proceed.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see LayoutManager\n  * @see Container\n  * @since 1.0\n@@ -57,7 +57,7 @@ public interface LayoutManager2 extends LayoutManager\n    * @param component the component to add\n    * @param constraints the constraints to satisfy\n    */\n-  void addLayoutComponent(Component component, Object contraints);\n+  void addLayoutComponent(Component component, Object constraints);\n \n   /**\n    * Determines the maximum size of the specified target container."}, {"sha": "8fbbc07720ef01b57dc248856d6e010de6d38027", "filename": "libjava/java/awt/List.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FList.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* List.java -- A listbox widget\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,6 +45,7 @@\n import java.awt.peer.ListPeer;\n import java.util.EventListener;\n import java.util.Vector;\n+\n import javax.accessibility.Accessible;\n \n /**\n@@ -129,7 +130,7 @@ public class List extends Component\n   * Initializes a new instance of <code>List</code> with the specified\n   * number of visible lines and multi-select disabled.\n   *\n-  * @param lines The number of visible lines in the list.\n+  * @param rows The number of visible rows in the list.\n   *\n   * @exception HeadlessException If GraphicsEnvironment.isHeadless() is true.\n   */\n@@ -145,7 +146,7 @@ public class List extends Component\n   * Initializes a new instance of <code>List</code> with the specified\n   * number of lines and the specified multi-select setting.\n   *\n-  * @param lines The number of visible lines in the list.\n+  * @param rows The number of visible rows in the list.\n   * @param multipleMode <code>true</code> if multiple lines can be selected\n   * simultaneously, <code>false</code> otherwise.\n   *"}, {"sha": "e69832d11a07cbe32eca232b920eff19ead89223", "filename": "libjava/java/awt/MediaTracker.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMediaTracker.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMediaTracker.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMediaTracker.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* MediaTracker.java -- Class used for keeping track of images\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002i, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,8 +38,8 @@\n \n package java.awt;\n \n-import java.util.ArrayList;\n import java.awt.image.ImageObserver;\n+import java.util.ArrayList;\n \n /**\n   * This class is used for keeping track of the status of various media"}, {"sha": "35798a066df891d176dde3570c0d51b47dcab9dc", "filename": "libjava/java/awt/Menu.java", "status": "modified", "additions": 57, "deletions": 20, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenu.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -40,8 +40,11 @@\n \n import java.awt.peer.MenuPeer;\n import java.io.Serializable;\n-import java.util.Vector;\n import java.util.Enumeration;\n+import java.util.Vector;\n+\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n \n /**\n   * This class represents a pull down or tear off menu in Java's AWT.\n@@ -72,17 +75,20 @@ public class Menu extends MenuItem implements MenuContainer, Serializable\n /**\n   * @serial Flag indicating whether or not this menu is a tear off\n   */\n-private boolean isTearOff;\n+private boolean tearOff;\n \n /**\n   * @serial Indicates whether or not this is a help menu.\n   */\n private boolean isHelpMenu;\n \n-// From the serialization spec.  FIXME: what should it be?\n-private int menuSerializedDataVersion;\n+  /*\n+   * @serial Unused in this implementation, but present in Sun's\n+   * serialization spec.  Value obtained via reflection.\n+   */\n+  private int menuSerializedDataVersion = 1;\n \n-static final String separatorLabel = \"-\";\n+static final transient String separatorLabel = \"-\";\n \n /*************************************************************************/\n \n@@ -134,7 +140,7 @@ public class Menu extends MenuItem implements MenuContainer, Serializable\n {\n   super(label);\n \n-  this.isTearOff = isTearOff;\n+  tearOff = isTearOff;\n \n   if (label.equals(\"Help\"))\n     isHelpMenu = true;\n@@ -158,7 +164,7 @@ public class Menu extends MenuItem implements MenuContainer, Serializable\n public boolean\n isTearOff()\n {\n-  return(isTearOff);\n+  return(tearOff);\n }\n \n /*************************************************************************/\n@@ -251,8 +257,6 @@ public int countItems ()\n   * @param item The menu item to add.\n   * @param index The index of the menu item.\n   *\n-  * XXX: FIXME\n-  *\n   * @exception IllegalArgumentException If the index is less than zero.\n   * @exception ArrayIndexOutOfBoundsException If the index is otherwise invalid.\n   */\n@@ -262,12 +266,26 @@ public int countItems ()\n   if (index < 0)\n     throw new IllegalArgumentException(\"Index is less than zero\");\n \n-  items.insertElementAt(item, index);\n+  MenuPeer peer = (MenuPeer) getPeer();\n+  if (peer == null)\n+    return;\n \n-  MenuPeer mp = (MenuPeer)getPeer();\n-  // FIXME: Need to add a peer method here.\n-//    if (mp != null)\n-//      mp.insertItem(item, index);\n+  int count = getItemCount ();\n+\n+  if (index >= count)\n+    peer.addItem (item);\n+  else\n+    {\n+      for (int i = count - 1; i >= index; i--)\n+        peer.delItem (i);\n+\n+      peer.addItem (item);\n+\n+      for (int i = index; i < count; i++)\n+        peer.addItem ((MenuItem) items.elementAt (i));\n+    }\n+\n+  items.insertElementAt(item, index);\n }\n \n /*************************************************************************/\n@@ -305,8 +323,6 @@ public int countItems ()\n   *\n   * @param index The index at which to insert a separator bar.\n   *\n-  * XXX: FIXME\n-  *\n   * @exception IllegalArgumentException If the index is less than zero.\n   * @exception ArrayIndexOutOfBoundsException If the index is otherwise invalid.\n   */\n@@ -339,7 +355,7 @@ public int countItems ()\n \n /**\n   * Removes the specifed item from the menu.  If the specified component\n-  * does not exist, this method does nothing. // FIXME: Right?\n+  * does not exist, this method does nothing.\n   *\n   * @param item The component to remove.\n   */\n@@ -415,11 +431,32 @@ public int countItems ()\n public String\n paramString()\n {\n-  return (\",isTearOff=\" + isTearOff + \",isHelpMenu=\" + isHelpMenu\n+  return (\",tearOff=\" + tearOff + \",isHelpMenu=\" + isHelpMenu\n \t  + super.paramString());\n }\n \n-// Accessibility API not yet implemented.\n-// public AccessibleContext getAccessibleContext()\n+  /**\n+   * Basic Accessibility class for Menu.  Details get provided in derived\n+   * classes.\n+   */\n+  protected class AccessibleAWTMenu extends AccessibleAWTMenuItem\n+  {\n+    protected AccessibleAWTMenu()\n+    {\n+    }\n+    \n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.MENU;\n+    }\n+  }\n+\n+  /* (non-Javadoc)\n+   * @see java.awt.MenuComponent#getAccessibleContext()\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    return new AccessibleAWTMenu();\n+  }\n \n } // class Menu"}, {"sha": "6a97fa9568581ecb69058c223c218ab5faa382eb", "filename": "libjava/java/awt/MenuBar.java", "status": "modified", "additions": 72, "deletions": 6, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuBar.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -45,14 +45,19 @@\n import java.util.Enumeration;\n import java.util.Vector;\n \n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+\n /**\n   * This class implements a menu bar in the AWT system.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   * @author Tom Tromey <tromey@redhat.com>\n+  * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n   */\n public class MenuBar extends MenuComponent\n-  implements MenuContainer, Serializable\n+  implements MenuContainer, Serializable, Accessible\n {\n \n /*\n@@ -78,6 +83,14 @@ public class MenuBar extends MenuComponent\n   */\n private Vector menus = new Vector();\n \n+  /**\n+   * The accessible context for this component.\n+   *\n+   * @see #getAccessibleContext()\n+   * @serial ignored.\n+   */\n+  private transient AccessibleContext accessibleContext;\n+\n /*************************************************************************/\n \n /*\n@@ -118,7 +131,7 @@ public class MenuBar extends MenuComponent\n /**\n   * Sets the help menu for this menu bar.\n   *\n-  * @param helpMenu The new help menu for this menu bar.\n+  * @param menu The new help menu for this menu bar.\n   */\n public synchronized void\n setHelpMenu(Menu menu)\n@@ -134,11 +147,11 @@ public class MenuBar extends MenuComponent\n     menu.parent.remove (menu);\n   menu.parent = this;\n \n+  MenuBarPeer peer = (MenuBarPeer) getPeer ();\n   if (peer != null)\n     {\n       menu.addNotify();\n-      MenuBarPeer mp = (MenuBarPeer) peer;\n-      mp.addHelpMenu (menu);\n+      peer.addHelpMenu (menu);\n     }\n }\n \n@@ -233,15 +246,16 @@ public class MenuBar extends MenuComponent\n public int\n countMenus()\n {\n-  // FIXME: How does the help menu fit in here?\n-  return menus.size ();\n+  return menus.size () + (getHelpMenu () == null ? 0 : 1);\n }\n \n /*************************************************************************/\n \n /**\n   * Returns the menu at the specified index.\n   *\n+  * @param index the index of the menu\n+  *\n   * @return The requested menu.\n   *\n   * @exception ArrayIndexOutOfBoundsException If the index is not valid.\n@@ -357,4 +371,56 @@ public class MenuBar extends MenuComponent\n     it.deleteShortcut ();\n }\n \n+/**\n+ * Gets the AccessibleContext associated with this <code>MenuBar</code>.\n+ * The context is created, if necessary.\n+ *\n+ * @return the associated context\n+ */\n+public AccessibleContext getAccessibleContext()\n+{\n+  /* Create the context if this is the first request */\n+  if (accessibleContext == null)\n+    {\n+      /* Create the context */\n+      accessibleContext = new AccessibleAWTMenuBar();\n+    }\n+  return accessibleContext;\n+}\n+\n+/**\n+ * This class provides accessibility support for AWT menu bars.\n+ *\n+ * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n+ */\n+protected class AccessibleAWTMenuBar\n+  extends AccessibleAWTMenuComponent\n+{\n+  \n+  /**\n+   * Compatible with JDK 1.4.2 revision 5\n+   */\n+  private static final long serialVersionUID = -8577604491830083815L;\n+\n+  /**\n+   * This is the default constructor, which simply calls the default\n+   * constructor of the superclass.\n+   */\n+  protected AccessibleAWTMenuBar()\n+  {\n+    super();\n+  }\n+\n+  /**\n+   * Returns the accessible role relating to the menu bar.\n+   *\n+   * @return <code>AccessibleRole.MENU_BAR</code>.\n+   */\n+  public AccessibleRole getAccessibleRole()\n+  {\n+    return AccessibleRole.MENU_BAR;\n+  }\n+\n+} // class AccessibleAWTMenuBar\n+\n } // class MenuBar"}, {"sha": "78adfaea6e3300405f615442a57ed2c68b2aa283", "filename": "libjava/java/awt/MenuComponent.java", "status": "modified", "additions": 1023, "deletions": 30, "changes": 1053, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMenuComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMenuComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuComponent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* MenuComponent.java -- Superclass of all AWT menu components\n-   Copyright (C) 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,15 +38,24 @@\n \n package java.awt;\n \n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n import java.awt.peer.MenuComponentPeer;\n import java.io.Serializable;\n+import java.util.Locale;\n \n-// FIXME: Java 1.0 event model unimplemented\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleComponent;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleSelection;\n+import javax.accessibility.AccessibleStateSet;\n \n /**\n-  * This is the superclass of all non-menu AWT widgets. \n+  * This is the superclass of all menu AWT widgets. \n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n+  * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n   */\n public abstract class MenuComponent implements Serializable\n {\n@@ -59,31 +68,101 @@ public abstract class MenuComponent implements Serializable\n private static final long serialVersionUID = -4536902356223894379L;\n \n /*************************************************************************/\n-\n+  \n /*\n  * Instance Variables\n  */\n \n-  // FIXME: missing serialized fields `nameExplicitlySet',\n-  // `newEventsOnly', and `accessibleContext'.\n+/**\n+ * The font for this component.\n+ *\n+ * @see #getFont()\n+ * @see #setFont(java.awt.Font)\n+ * @serial the component's font.\n+ */\n+  private Font font;\n+\n+  /**\n+   * The name of the component.\n+   *\n+   * @see #getName()\n+   * @see #setName(String)\n+   * @serial the component's name.\n+   */\n+  private String name;\n+\n+  /**\n+   * The parent of this component.\n+   *\n+   * @see #getParent()\n+   * @see #setParent(java.awt.MenuContainer)\n+   * @serial ignored.\n+   */\n+  transient MenuContainer parent;\n \n-// The font for this component\n-private Font font;\n+  /**\n+   * The native peer for this component.\n+   *\n+   * @see #getPeer()\n+   * @see #setPeer(java.awt.peer.MenuComponentPeer)\n+   * @serial ignored.\n+   */\n+  transient MenuComponentPeer peer;\n \n-// The name of the component\n-private String name;\n+  /**\n+   * The synchronization locking object for this component.\n+   *\n+   * @serial ignored.\n+   */\n+  private transient Object tree_lock = this;\n \n-// The parent of this component\n-transient MenuContainer parent;\n+  /**\n+   * The toolkit for this object.\n+   *\n+   * @see #getToolkit()\n+   * @serial ignored.\n+   */\n+  private static transient Toolkit toolkit = Toolkit.getDefaultToolkit();\n \n-// The native peer for this componet\n-transient MenuComponentPeer peer;\n+  /**\n+   * The accessible context for this component.\n+   *\n+   * @see #getAccessibleContext()\n+   * @serial the accessibility information for this component.\n+   */\n+  private AccessibleContext accessibleContext;\n \n-// The synchronization locking object for this component\n-private transient Object tree_lock = this;\n+  /**\n+   * Was the name of the component set?  This value defaults\n+   * to false and becomes true after a call to <code>setName()</code>.\n+   * Please note that this does not guarantee that name will then\n+   * be non-null, as this may be the value passed to <code>setName()</code>.\n+   *\n+   * @see #setName(String)\n+   * @serial true if the name value has been explicitly set by calling\n+   *         <code>setName()</code>.\n+   */\n+  private boolean nameExplicitlySet;\n \n-// The toolkit for this object\n-private static transient Toolkit toolkit = Toolkit.getDefaultToolkit();\n+  /**\n+   * Does this component handle new events?  Events will be handled\n+   * by this component if this is true.  Otherwise, they will be forwarded\n+   * up the component hierarchy.  This implementation does not use this\n+   * variable; it is merely provided for serialization compatability.\n+   *\n+   * @see #dispatchEvent(AWTEvent)\n+   * @serial true if events are to be processed locally.  Unused.\n+   */\n+  private boolean newEventsOnly;\n+\n+  /**\n+   * The focus listener chain handler which deals with focus events for\n+   * the accessible context of this component.\n+   *\n+   * @see AccessibleAWTMenuComponent#addFocusListener(java.awt.event.FocusListener)\n+   * @serial ignored.\n+   */\n+  private transient FocusListener focusListener;\n \n /*************************************************************************/\n \n@@ -117,7 +196,13 @@ public abstract class MenuComponent implements Serializable\n public Font\n getFont()\n {\n-  return(font);\n+  if (font != null)\n+    return font;\n+\n+  if (parent != null)\n+    return parent.getFont ();\n+\n+  return null;\n }\n \n /*************************************************************************/\n@@ -157,6 +242,7 @@ public abstract class MenuComponent implements Serializable\n setName(String name)\n {\n   this.name = name;\n+  nameExplicitlySet = true;\n }\n \n /*************************************************************************/\n@@ -260,31 +346,50 @@ public abstract class MenuComponent implements Serializable\n   * AWT 1.0 event dispatcher.\n   *\n   * @deprecated Deprecated in favor of <code>dispatchEvent()</code>.\n+  * @return true if the event was dispatched, false otherwise.\n   */\n public boolean\n postEvent(Event event)\n {\n-  return(false);\n+  // This is overridden by subclasses that support events.\n+  return false;\n }\n-\n /*************************************************************************/\n \n /**\n   * Sends this event to this component or a subcomponent for processing.\n   *\n   * @param event The event to dispatch\n   */\n-public final void\n-dispatchEvent(AWTEvent event)\n+public final void dispatchEvent(AWTEvent event)\n {\n   // See comment in Component.dispatchEvent().\n   dispatchEventImpl(event);\n }\n \n-void\n-dispatchEventImpl(AWTEvent e)\n+\n+/**\n+ * Implementation of dispatchEvent. Allows trusted package classes\n+ * to dispatch additional events first.  This implementation first\n+ * translates <code>event</code> to an AWT 1.0 event and sends the\n+ * result to {@link #postEvent}.  The event is then\n+ * passed on to {@link #processEvent} for local processing.\n+ *\n+ * @param event the event to dispatch.\n+ */\n+void dispatchEventImpl(AWTEvent event)\n {\n+  Event oldStyleEvent;\n+\n   // This is overridden by subclasses that support events.\n+  /* Convert AWT 1.1 event to AWT 1.0 event */\n+  oldStyleEvent = Component.translateEvent(event);\n+  if (oldStyleEvent != null)\n+    {\n+      postEvent(oldStyleEvent);\n+    }\n+  /* Do local processing */\n+  processEvent(event);\n }\n \n /*************************************************************************/\n@@ -298,6 +403,25 @@ public abstract class MenuComponent implements Serializable\n protected void\n processEvent(AWTEvent event)\n {\n+  /* \n+     Pass a focus event to the focus listener for\n+     the accessibility context.\n+  */\n+  if (event instanceof FocusEvent)\n+    {\n+      if (focusListener != null)\n+        {\n+          switch (event.id)\n+            {\n+            case FocusEvent.FOCUS_GAINED:\n+              focusListener.focusGained((FocusEvent) event);\n+              break;\n+            case FocusEvent.FOCUS_LOST:\n+              focusListener.focusLost((FocusEvent) event);\n+              break;\n+            }\n+        }\n+    }\n }\n \n /*************************************************************************/\n@@ -316,15 +440,884 @@ public abstract class MenuComponent implements Serializable\n /*************************************************************************/\n \n /**\n-  * Returns a debugging string for this component\n-  */\n+ * Returns a debugging string for this component\n+ */\n protected String\n paramString()\n {\n   return \"name=\" + getName();\n }\n \n-// Accessibility API not yet implemented.\n-// public AccessibleContext getAccessibleContext()\n+/**\n+ * Gets the AccessibleContext associated with this <code>MenuComponent</code>.\n+ * As an abstract class, we return null.  Concrete subclasses should return\n+ * their implementation of the accessibility context.\n+ *\n+ * @return null.\n+ */\n+\n+public AccessibleContext getAccessibleContext()\n+{\n+  return null;\n+}\n+\n+/**\n+ * This class provides a base for the accessibility support of menu\n+ * components.\n+ *\n+ * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n+ */\n+protected abstract class AccessibleAWTMenuComponent\n+  extends AccessibleContext\n+  implements Serializable, AccessibleComponent, AccessibleSelection\n+{\n+\n+  /**\n+   * Compatible with JDK 1.4.2 revision 5\n+   */\n+  private static final long serialVersionUID = -4269533416223798698L;\n+\n+  /**\n+   * This is the default constructor.  It should be called by\n+   * concrete subclasses to ensure necessary groundwork is completed.\n+   */\n+  protected AccessibleAWTMenuComponent()\n+  {\n+  }\n+\n+  /**\n+   * Replaces or supplements the component's selection with the\n+   * <code>Accessible</code> child at the supplied index.  If\n+   * the component supports multiple selection, the child is\n+   * added to the current selection.  Otherwise, the current\n+   * selection becomes the specified child.  If the child is\n+   * already selected, nothing happens.\n+   * <br />\n+   * <br />\n+   * As the existence of children can not be determined from\n+   * this abstract class, the implementation of this method\n+   * is left to subclasses.\n+   *\n+   * @param index the index of the specified child within a\n+   *        zero-based list of the component's children.\n+   */\n+  public void addAccessibleSelection(int index)\n+  {\n+    /* Subclasses with children should implement this */\n+  }\n+\n+  /**\n+   * Registers the specified focus listener to receive\n+   * focus events from this component.\n+   *\n+   * @param listener the new focus listener.\n+   */\n+  public void addFocusListener(FocusListener listener)\n+  {\n+    /*\n+     * Chain the new focus listener to the existing chain\n+     * of focus listeners.  Each new focus listener is\n+     * coupled via multicasting to the existing chain.\n+     */\n+    focusListener = AWTEventMulticaster.add(focusListener, listener);\n+  }\n+\n+  /**\n+   * Clears the component's current selection.  Following\n+   * the calling of this method, no children of the component\n+   * will be selected.\n+   * <br />\n+   * <br />\n+   * As the existence of children can not be determined from\n+   * this abstract class, the implementation of this method\n+   * is left to subclasses.\n+   */\n+  public void clearAccessibleSelection()\n+  {\n+  }\n+\n+  /**\n+   * Returns true if the specified point lies within the\n+   * component.  The supplied co-ordinates are assumed to\n+   * be relative to the co-ordinate system of the component\n+   * itself.  Thus, the point (0,0) is the upper left corner\n+   * of this component.\n+   * <br />\n+   * <br />\n+   * Please note that this method depends on a correctly implemented\n+   * version of the <code>getBounds()</code> method.  Subclasses\n+   * must provide the bounding rectangle via <code>getBounds()</code>\n+   * in order for this method to work.  \n+   *\n+   * @param point the point to check against this component.\n+   * @return true if the point is within this component.\n+   * @see #getBounds()\n+   */\n+  public boolean contains(Point point)\n+  {\n+    /* \n+       We can simply return the result of a\n+       test for containment in the bounding rectangle \n+    */\n+    return getBounds().contains(point);\n+  }\n+\n+  /**\n+   * Returns the <code>Accessible</code> child of this component present\n+   * at the specified point.  The supplied co-ordinates are\n+   * assumed to be relative to the co-ordinate system of this\n+   * component (the parent of any returned accessible).  Thus,\n+   * the point (0,0) is the upper left corner of this menu\n+   * component.\n+   * <br />\n+   * <br />\n+   * As the existence of children can not be determined from\n+   * this abstract class, the implementation of this method\n+   * is left to subclasses.\n+   * \n+   * @param point the point at which the returned accessible\n+   *        is located.\n+   * @return null.\n+   */\n+  public Accessible getAccessibleAt(Point point)\n+  {\n+    return null;\n+  }\n+\n+  /**\n+   * Returns the <code>Accessible</code> child at the supplied\n+   * index within the list of children of this component.\n+   * <br />\n+   * <br />\n+   * As the existence of children can not be determined from\n+   * this abstract class, the implementation of this method\n+   * is left to subclasses.\n+   *\n+   * @param index the index of the <code>Accessible</code> child\n+   *        to retrieve.\n+   * @return null.\n+   */\n+  public Accessible getAccessibleChild(int index)\n+  {\n+    return null;\n+  }\n+\n+  /**\n+   * Returns the number of children of this component which\n+   * implement the <code>Accessible</code> interface.  If\n+   * all children of this component are accessible, then\n+   * the returned value will be the same as the number of\n+   * children.\n+   * <br />\n+   * <br />\n+   *\n+   * @return 0.\n+   */\n+  public int getAccessibleChildrenCount()\n+  {\n+    return 0;\n+  }\n+\n+  /**\n+   * Retrieves the <code>AccessibleComponent</code> associated\n+   * with this accessible context and its component.  As the\n+   * context itself implements <code>AccessibleComponent</code>,\n+   * this is the return value.\n+   *\n+   * @return the context itself.\n+   */\n+  public AccessibleComponent getAccessibleComponent()\n+  {\n+    return this;\n+  }\n+\n+  /**\n+   * Returns the accessible name for this menu component.  This\n+   * is the name given to the component, which may be null if\n+   * not set using <code>setName()</code>.\n+   * <br />\n+   * <br />\n+   * The name is not the most appropriate description of this\n+   * object.  Subclasses should preferably provide a more\n+   * accurate description.  For example, a File menu could\n+   * have the description `Lists commands related to the\n+   * file system'.\n+   *\n+   * @return a description of the component.  Currently,\n+   *         this is just the contents of the name property.\n+   * @see MenuComponent#setName(String)\n+   */\n+  public String getAccessibleDescription()\n+  {\n+    return MenuComponent.this.getName();\n+  }\n+\n+  /**\n+   * Retrieves the index of this component within its parent.\n+   * If no parent exists, -1 is returned.\n+   *\n+   * @return -1 as the parent, a <code>MenuContainer</code>\n+   *         is not <code>Accessible</code>.\n+   */\n+  public int getAccessibleIndexInParent()\n+  {\n+    return -1;\n+  }\n+\n+  /**\n+   * Returns the accessible name of this component.  This\n+   * is the name given to the component, which may be null if\n+   * not set using <code>setName()</code>.\n+   * <br />\n+   * <br />\n+   * The name property is not the most suitable string to return\n+   * for this method.  The string should be localized, and\n+   * relevant to the operation of the component.  For example,\n+   * it could be the text of a menu item.  However, this can\n+   * not be used at this level of abstraction, so it is the\n+   * responsibility of subclasses to provide a more appropriate\n+   * name.\n+   *\n+   * @return a localized name for this component.  Currently, this\n+   *         is just the contents of the name property.\n+   * @see MenuComponent#setName(String)\n+   */\n+  public String getAccessibleName()\n+  {\n+    return MenuComponent.this.getName();\n+  }\n+\n+  /**\n+   * Returns the <code>Accessible</code> parent of this component.\n+   * As the parent of a <code>MenuComponent</code> is a\n+   * <code>MenuContainer</code>, which doesn't implement\n+   * <code>Accessible</code>, this method returns null.\n+   *\n+   * @return null.\n+   */\n+  public Accessible getAccessibleParent()\n+  {\n+    return null;\n+  }\n+\n+  /**\n+   * Returns the accessible role of this component.\n+   * <br />\n+   * <br />\n+   * The abstract implementation of this method returns\n+   * <code>AccessibleRole.AWT_COMPONENT</code>,\n+   * as the abstract component has no specific role.  This\n+   * method should be overridden by concrete subclasses, so\n+   * as to return an appropriate role for the component.\n+   *\n+   * @return <code>AccessibleRole.AWT_COMPONENT</code>.\n+   */\n+  public AccessibleRole getAccessibleRole()\n+  {\n+    return AccessibleRole.AWT_COMPONENT;\n+  }\n+\n+  /**\n+   * Retrieves the <code>AccessibleSelection</code> associated\n+   * with this accessible context and its component.  As the\n+   * context itself implements <code>AccessibleSelection</code>,\n+   * this is the return value.\n+   *\n+   * @return the context itself.\n+   */\n+  public AccessibleSelection getAccessibleSelection()\n+  {\n+    return this;\n+  }\n+\n+  /**\n+   * Retrieves the <code>Accessible</code> selected child\n+   * at the specified index.  If there are no selected children\n+   * or the index is outside the range of selected children,\n+   * null is returned.  Please note that the index refers\n+   * to the index of the child in the list of <strong>selected\n+   * children</strong>, and not the index of the child in\n+   * the list of all <code>Accessible</code> children.\n+   * <br />\n+   * <br />\n+   * As the existence of children can not be determined from\n+   * this abstract class, the implementation of this method\n+   * is left to subclasses.\n+   *\n+   * @param index the index of the selected <code>Accessible</code>\n+   *        child.\n+   */\n+  public Accessible getAccessibleSelection(int index)\n+  {\n+    return null;\n+  }\n+\n+  /**\n+   * Returns a count of the number of <code>Accessible</code>\n+   * children of this component which are currently selected.\n+   * If there are no children currently selected, 0 is returned.\n+   * <br />\n+   * <br />\n+   * As the existence of children can not be determined from\n+   * this abstract class, the implementation of this method\n+   * is left to subclasses.\n+   *\n+   * @return 0.\n+   */\n+  public int getAccessibleSelectionCount()\n+  {\n+    return 0;\n+  }\n+\n+  /**\n+   * Retrieves the current state of this component\n+   * in an accessible form.  For example, a given component\n+   * may be visible, selected, disabled, etc.\n+   * <br />\n+   * <br />\n+   * As this class tells us virtually nothing about the component,\n+   * except for its name and font, no state information can be\n+   * provided.  This implementation thus returns an empty\n+   * state set, and it is left to concrete subclasses to provide\n+   * a more acceptable and relevant state set.  Changes to these\n+   * properties also need to be handled using\n+   * <code>PropertyChangeListener</code>s.\n+   *\n+   * @return an empty <code>AccessibleStateSet</code>.\n+   */\n+  public AccessibleStateSet getAccessibleStateSet()\n+  {\n+    return new AccessibleStateSet();\n+  }\n+\n+  /**\n+   * Returns the background color of the component, or null\n+   * if this property is unsupported.\n+   * <br />\n+   * <br />\n+   * This abstract class knows nothing about how the component\n+   * is drawn on screen, so this method simply returns the\n+   * default system background color used for rendering menus.\n+   * Concrete subclasses which handle the drawing of an onscreen\n+   * menu component should override this method and provide\n+   * the appropriate information.\n+   *\n+   * @return the default system background color for menus.\n+   * @see #setBackground(java.awt.Color)\n+   */\n+  public Color getBackground()\n+  {\n+    return SystemColor.menu;\n+  }\n+\n+  /**\n+   * Returns a <code>Rectangle</code> which represents the\n+   * bounds of this component.  The returned rectangle has the\n+   * height and width of the component's bounds, and is positioned\n+   * at a location relative to this component's parent, the\n+   * <code>MenuContainer</code>.  null is returned if bounds\n+   * are not supported by the component.\n+   * <br />\n+   * <br />\n+   * This abstract class knows nothing about how the component\n+   * is drawn on screen, so this method simply returns null.\n+   * Concrete subclasses which handle the drawing of an onscreen\n+   * menu component should override this method and provide\n+   * the appropriate information.\n+   *\n+   * @return null.\n+   * @see #setBounds(java.awt.Rectangle)\n+   */\n+  public Rectangle getBounds()\n+  {\n+    return null;\n+  }\n+\n+  /**\n+   * Returns the <code>Cursor</code> displayed when the pointer\n+   * is positioned over this component.  Alternatively, null\n+   * is returned if the component doesn't support the cursor\n+   * property.\n+   * <br />\n+   * <br />\n+   * This abstract class knows nothing about how the component\n+   * is drawn on screen, so this method simply returns the default\n+   * system cursor.  Concrete subclasses which handle the drawing\n+   * of an onscreen menu component may override this method and provide\n+   * the appropriate information.\n+   *\n+   * @return the default system cursor.\n+   * @see #setCursor(java.awt.Cursor)\n+   */\n+  public Cursor getCursor()\n+  {\n+    return Cursor.getDefaultCursor();\n+  }\n+\n+  /**\n+   * Returns the <code>Font</code> used for text created by this component.\n+   *\n+   * @return the current font.\n+   * @see #setFont(java.awt.Font)\n+   */\n+  public Font getFont()\n+  {\n+    return MenuComponent.this.getFont();\n+  }\n+\n+  /**\n+   * Retrieves information on the rendering and metrics of the supplied\n+   * font.  If font metrics are not supported by this component, null\n+   * is returned.\n+   * <br />\n+   * <br />\n+   * The abstract implementation of this method simply uses the toolkit\n+   * to obtain the <code>FontMetrics</code>.  Concrete subclasses may\n+   * find it more efficient to invoke their peer class directly, if one\n+   * is available.\n+   *\n+   * @param font the font about which to retrieve rendering and metric\n+   *        information.\n+   * @return the metrics of the given font, as provided by the system\n+   *         toolkit.\n+   * @throws NullPointerException if the supplied font was null.\n+   */\n+  public FontMetrics getFontMetrics(Font font)\n+  {\n+    return MenuComponent.this.getToolkit().getFontMetrics(font);\n+  }\n+\n+  /**\n+   * Returns the foreground color of the component, or null\n+   * if this property is unsupported.\n+   * <br />\n+   * <br />\n+   * This abstract class knows nothing about how the component\n+   * is drawn on screen, so this method simply returns the\n+   * default system text color used for rendering menus.\n+   * Concrete subclasses which handle the drawing of an onscreen\n+   * menu component should override this method and provide\n+   * the appropriate information.\n+   *\n+   * @return the default system text color for menus.\n+   * @see #setForeground(java.awt.Color)\n+   */\n+  public Color getForeground()\n+  {\n+    return SystemColor.menuText;\n+  }\n+\n+  /**\n+   * Returns the locale currently in use by this component.\n+   * <br />\n+   * <br />\n+   * This abstract class has no property relating to the\n+   * locale used by the component, so this method simply\n+   * returns the default locale for the current instance\n+   * of the Java Virtual Machine (JVM).  Concrete subclasses\n+   * which maintain such a property should override this method\n+   * and provide the locale information more accurately.\n+   *\n+   * @return the default locale for this JVM instance.\n+   */\n+  public Locale getLocale()\n+  {\n+    return Locale.getDefault();\n+  }\n+\n+  /**\n+   * Returns the location of the component, with co-ordinates\n+   * relative to the parent component and using the co-ordinate\n+   * space of the screen.  Thus, the point (0,0) is the upper\n+   * left corner of the parent component.\n+   * <br />\n+   * <br />\n+   * Please note that this method depends on a correctly implemented\n+   * version of the <code>getBounds()</code> method.  Subclasses\n+   * must provide the bounding rectangle via <code>getBounds()</code>\n+   * in order for this method to work.  \n+   *\n+   * @return the location of the component, relative to its parent.\n+   * @see #setLocation(java.awt.Point)\n+   */\n+  public Point getLocation()\n+  {\n+    /* Simply return the location of the bounding rectangle */\n+    return getBounds().getLocation();\n+  }\n+\n+  /**\n+   * Returns the location of the component, with co-ordinates\n+   * relative to the screen.  Thus, the point (0,0) is the upper\n+   * left corner of the screen.  null is returned if the component\n+   * is either not on screen or if this property is unsupported.\n+   * <br />\n+   * <br />\n+   * This abstract class knows nothing about how the component\n+   * is drawn on screen, so this method simply returns null.\n+   * Concrete subclasses which handle the drawing of an onscreen\n+   * menu component should override this method and provide\n+   * the appropriate information.\n+   *\n+   * @return the location of the component, relative to the screen.\n+   */\n+  public Point getLocationOnScreen()\n+  {\n+    return null;\n+  }\n+\n+  /**\n+   * Returns the size of the component.\n+   * <br />\n+   * <br />\n+   * Please note that this method depends on a correctly implemented\n+   * version of the <code>getBounds()</code> method.  Subclasses\n+   * must provide the bounding rectangle via <code>getBounds()</code>\n+   * in order for this method to work.  \n+   *\n+   * @return the size of the component.\n+   * @see #setSize(java.awt.Dimension)\n+   */\n+  public Dimension getSize()\n+  {\n+    /* Simply return the size of the bounding rectangle */\n+    return getBounds().getSize();\n+  }\n+\n+  /**\n+   * Returns true if the accessible child specified by the supplied index\n+   * is currently selected.\n+   * <br />\n+   * <br />\n+   * As the existence of children can not be determined from\n+   * this abstract class, the implementation of this method\n+   * is left to subclasses.\n+   *\n+   * @param index the index of the accessible child to check for selection.\n+   * @return false.\n+   */\n+  public boolean isAccessibleChildSelected(int index)\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Returns true if this component is currently enabled.\n+   * <br />\n+   * <br />\n+   * As this abstract component has no properties related to\n+   * its enabled or disabled state, the implementation of this\n+   * method is left to subclasses.\n+   *\n+   * @return false.\n+   * @see #setEnabled(boolean)\n+   */\n+  public boolean isEnabled()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Returns true if this component is included in the traversal\n+   * of the current focus from one component to the other.\n+   * <br />\n+   * <br />\n+   * As this abstract component has no properties related to\n+   * its ability to accept the focus, the implementation of this\n+   * method is left to subclasses.\n+   *\n+   * @return false.\n+   */\n+  public boolean isFocusTraversable()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Returns true if the component is being shown on screen.\n+   * A component is determined to be shown if it is visible,\n+   * and each parent component is also visible.  Please note\n+   * that, even when a component is showing, it may still be\n+   * obscured by other components in front.  This method only\n+   * determines if the component is being drawn on the screen.\n+   * <br />\n+   * <br />\n+   * As this abstract component and its parent have no properties\n+   * relating to visibility, the implementation of this method is\n+   * left to subclasses.\n+   *\n+   * @return false.\n+   * @see #isVisible()\n+   */\n+  public boolean isShowing()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Returns true if the component is visible.  A component may\n+   * be visible but not drawn on the screen if one of its parent\n+   * components is not visible.  To determine if the component is\n+   * actually drawn on screen, <code>isShowing()</code> should be\n+   * used.\n+   * <br />\n+   * <br />\n+   * As this abstract component has no properties relating to its\n+   * visibility, the implementation of this method is left to subclasses.\n+   *\n+   * @return false.\n+   * @see #isShowing()\n+   * @see #setVisible(boolean)\n+   */\n+  public boolean isVisible()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Removes the accessible child specified by the supplied index from\n+   * the list of currently selected children.  If the child specified\n+   * is not selected, nothing happens.\n+   * <br />\n+   * <br />\n+   * As the existence of children can not be determined from\n+   * this abstract class, the implementation of this method\n+   * is left to subclasses.\n+   *\n+   * @param index the index of the <code>Accessible</code> child.\n+   */\n+  public void removeAccessibleSelection(int index)\n+  {\n+    /* Subclasses with children should implement this */\n+  }\n+\n+  /**\n+   * Removes the specified focus listener from the list of registered\n+   * focus listeners for this component.\n+   *\n+   * @param listener the listener to remove.\n+   */\n+  public void removeFocusListener(FocusListener listener)\n+  {\n+    /* Remove the focus listener from the chain */\n+    focusListener = AWTEventMulticaster.remove(focusListener, listener);\n+  }\n+\n+  /**\n+   * Requests that this component gains focus.  This depends on the\n+   * component being focus traversable.\n+   * <br />\n+   * <br />\n+   * As this abstract component has no properties relating to its\n+   * focus traversability, or access to a peer with request focusing\n+   * abilities, the implementation of this method is left to subclasses.\n+   */\n+  public void requestFocus()\n+  {\n+    /* Ignored */\n+  }\n+\n+  /**\n+   * Selects all <code>Accessible</code> children of this component which\n+   * it is possible to select.  The component needs to support multiple\n+   * selections.\n+   * <br />\n+   * <br />\n+   * This abstract component provides a simplistic implementation of this\n+   * method, which ignores the ability of the component to support multiple\n+   * selections and simply uses <code>addAccessibleSelection</code> to\n+   * add each <code>Accessible</code> child to the selection.  The last\n+   * <code>Accessible</code> component is thus selected for components\n+   * which don't support multiple selections.  Concrete implementations should\n+   * override this with a more appopriate and efficient implementation, which\n+   * properly takes into account the ability of the component to support multiple\n+   * selections. \n+   */\n+  public void selectAllAccessibleSelection()\n+  {\n+    /* Simply call addAccessibleSelection() on all accessible children */\n+    for (int a = 0; a < getAccessibleChildrenCount(); ++a)\n+      {\n+        addAccessibleSelection(a);\n+      }\n+  }\n+\n+  /**\n+   * Sets the background color of the component to that specified.\n+   * Unspecified behaviour occurs when null is given as the new\n+   * background color.\n+   * <br />\n+   * <br />\n+   * This abstract class knows nothing about how the component\n+   * is drawn on screen, so this method simply ignores the supplied\n+   * color and continues to use the default system color.   \n+   * Concrete subclasses which handle the drawing of an onscreen\n+   * menu component should override this method and provide\n+   * the appropriate information.\n+   *\n+   * @param color the new color to use for the background.\n+   * @see getBackground()\n+   */\n+  public void setBackground(Color color)\n+  {\n+    /* Ignored */\n+  }\n+\n+  /**\n+   * Sets the height and width of the component, and its position\n+   * relative to this component's parent, to the values specified\n+   * by the supplied rectangle.  Unspecified behaviour occurs when\n+   * null is given as the new bounds.\n+   * <br />\n+   * <br />\n+   * This abstract class knows nothing about how the component\n+   * is drawn on screen, so this method simply ignores the new\n+   * rectangle and continues to return null from <code>getBounds()</code>.\n+   * Concrete subclasses which handle the drawing of an onscreen\n+   * menu component should override this method and provide\n+   * the appropriate information.\n+   *\n+   * @param rectangle a rectangle which specifies the new bounds of\n+   *        the component.\n+   * @see #getBounds()\n+   */\n+  public void setBounds(Rectangle rectangle)\n+  {\n+    /* Ignored */\n+  }\n+\n+  /**\n+   * Sets the <code>Cursor</code> used when the pointer is positioned over the\n+   * component.  Unspecified behaviour occurs when null is given as the new\n+   * cursor.\n+   * <br />\n+   * <br />\n+   * This abstract class knows nothing about how the component\n+   * is drawn on screen, so this method simply ignores the new cursor\n+   * and continues to return the default system cursor.  Concrete\n+   * subclasses which handle the drawing of an onscreen menu component\n+   * may override this method and provide the appropriate information.\n+   *\n+   * @param cursor the new cursor to use.\n+   * @see #getCursor()\n+   */\n+  public void setCursor(Cursor cursor)\n+  {\n+    /* Ignored */\n+  }\n+\n+  /**\n+   * Sets the enabled/disabled state of this component.\n+   * <br />\n+   * <br />\n+   * As this abstract component has no properties related to\n+   * its enabled or disabled state, the implementation of this\n+   * method is left to subclasses.\n+   *\n+   * @param enabled true if the component should be enabled,\n+   *        false otherwise.\n+   * @see #getEnabled()\n+   */\n+  public void setEnabled(boolean enabled)\n+  {\n+    /* Ignored */\n+  }\n+\n+  /**\n+   * Sets the <code>Font</code> used for text created by this component.\n+   * Unspecified behaviour occurs when null is given as the new\n+   * font.\n+   *\n+   * @param font the new font to use for text.\n+   * @see #getFont()\n+   */\n+  public void setFont(Font font)\n+  {\n+    /* Call the method of the enclosing component */\n+    MenuComponent.this.setFont(font);\n+  }\n+\n+  /**\n+   * Sets the foreground color of the component to that specified.\n+   * Unspecified behaviour occurs when null is given as the new\n+   * background color.\n+   * <br />\n+   * <br />\n+   * This abstract class knows nothing about how the component\n+   * is drawn on screen, so this method simply ignores the supplied\n+   * color and continues to return the default system text color used\n+   * for rendering menus.\n+   * Concrete subclasses which handle the drawing of an onscreen\n+   * menu component should override this method and provide\n+   * the appropriate information.\n+   *\n+   * @param color the new foreground color.\n+   * @see #getForeground()\n+   */\n+  public void setForeground(Color color)\n+  {\n+    /* Ignored */\n+  }\n+\n+  /**\n+   * Sets the location of the component, with co-ordinates\n+   * relative to the parent component and using the co-ordinate\n+   * space of the screen.  Thus, the point (0,0) is the upper\n+   * left corner of the parent component.\n+   * <br />\n+   * <br />\n+   * Please note that this method depends on a correctly implemented\n+   * version of the <code>getBounds()</code> method.  Subclasses\n+   * must provide the bounding rectangle via <code>getBounds()</code>\n+   * in order for this method to work.  \n+   *\n+   * @param point the location of the component, relative to its parent.\n+   * @see #getLocation()\n+   */\n+  public void setLocation(Point point)\n+  {\n+    getBounds().setLocation(point);\n+  }\n+\n+  /**\n+   * Sets the size of the component.\n+   * <br />\n+   * <br />\n+   * Please note that this method depends on a correctly implemented\n+   * version of the <code>getBounds()</code> method.  Subclasses\n+   * must provide the bounding rectangle via <code>getBounds()</code>\n+   * in order for this method to work.  \n+   *\n+   * @param size the new size of the component.\n+   * @see #getSize()\n+   */\n+  public void setSize(Dimension size)\n+  {\n+    getBounds().setSize(size);\n+  }\n+\n+  /**\n+   * Sets the visibility state of the component.  A component may\n+   * be visible but not drawn on the screen if one of its parent\n+   * components is not visible.  To determine if the component is\n+   * actually drawn on screen, <code>isShowing()</code> should be\n+   * used.\n+   * <br />\n+   * <br />\n+   * As this abstract component has no properties relating to its\n+   * visibility, the implementation of this method is left to subclasses.\n+   *\n+   * @param visibility the new visibility of the component -- true if\n+   *        the component is visible, false if not.\n+   * @see #isShowing()\n+   * @see #isVisible()\n+   */\n+  public void setVisible(boolean visibility)\n+  {\n+    /* Ignored */\n+  }\n+\n+} /* class AccessibleAWTMenuComponent */\n+          \n \n-} // class Component\n+} // class MenuComponent"}, {"sha": "a58774240ff226cddcd8c71ade1376c0b5eba1f6", "filename": "libjava/java/awt/MenuItem.java", "status": "modified", "additions": 110, "deletions": 3, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuItem.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -45,17 +45,20 @@\n import java.lang.reflect.Array;\n import java.util.EventListener;\n \n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleValue;\n+\n /**\n   * This class represents an item in a menu.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   */\n public class MenuItem extends MenuComponent\n-  implements Serializable\n+  implements Serializable, Accessible\n {\n \n-// FIXME: The enabled event mask is not used at this time.\n-\n /*\n  * Static Variables\n  */\n@@ -97,6 +100,110 @@ public class MenuItem extends MenuComponent\n // The list of action listeners for this menu item.\n private transient ActionListener action_listeners;\n \n+  protected class AccessibleAWTMenuItem\n+    extends MenuComponent.AccessibleAWTMenuComponent\n+    implements AccessibleAction, AccessibleValue\n+  {\n+    /** Constructor */\n+    public AccessibleAWTMenuItem()\n+    {\n+      super();\n+    }\n+  \n+  \n+  \n+    public String getAccessibleName()\n+    {\n+      return label;\n+    }\n+  \n+    public AccessibleAction getAccessibleAction()\n+    {\n+      return this;\n+    }\n+  \n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.MENU_ITEM;\n+    }\n+  \n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleAction#getAccessibleActionCount()\n+     */\n+    public int getAccessibleActionCount()\n+    {\n+      return 1;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleAction#getAccessibleActionDescription(int)\n+     */\n+    public String getAccessibleActionDescription(int i)\n+    {\n+      if (i == 0)\n+\treturn label;\n+      else\n+\treturn null;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleAction#doAccessibleAction(int)\n+     */\n+    public boolean doAccessibleAction(int i)\n+    {\n+      if (i != 0)\n+\treturn false;\n+      processActionEvent(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, actionCommand));\n+      return true;\n+    }\n+\n+    public AccessibleValue getAccessibleValue()\n+    {\n+      return this;\n+    }\n+  \n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleValue#getCurrentAccessibleValue()\n+     */\n+    public Number getCurrentAccessibleValue()\n+    {\n+      return (enabled) ? new Integer(1) : new Integer(0);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleValue#setCurrentAccessibleValue(java.lang.Number)\n+     */\n+    public boolean setCurrentAccessibleValue(Number number)\n+    {\n+      if (number.intValue() == 0)\n+\t{\n+\t  setEnabled(false);\n+\t  return false;\n+\t}\n+    \n+      setEnabled(true);\n+      return true;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleValue#getMinimumAccessibleValue()\n+     */\n+    public Number getMinimumAccessibleValue()\n+    {\n+      return new Integer(0);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleValue#getMaximumAccessibleValue()\n+     */\n+    public Number getMaximumAccessibleValue()\n+    {\n+      return new Integer(0);\n+    }\n+  \n+  }\n+\n+\n /*************************************************************************/\n \n /*"}, {"sha": "1ba9fbd246ebfcb8d155827e51985bf128094c43", "filename": "libjava/java/awt/Panel.java", "status": "modified", "additions": 4, "deletions": 35, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPanel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* Panel.java -- Simple container object\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,7 +38,6 @@\n \n package java.awt;\n \n-import java.awt.event.PaintEvent;\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n import javax.accessibility.AccessibleRole;\n@@ -47,8 +46,8 @@\n  * A panel is a simple container class. It's default layout is the\n  * <code>FlowLayout</code> manager.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see FlowLayout\n  * @since 1.0\n  * @status updated to 1.4\n@@ -74,7 +73,7 @@ public class Panel extends Container implements Accessible\n   /*\n    * The number used to generate the name returned by getName.\n    */\n-  private static transient long next_panel_number = 0;\n+  private static transient long next_panel_number;\n \n   /**\n    * Initializes a new instance of <code>Panel</code> that has a default\n@@ -97,36 +96,6 @@ public Panel(LayoutManager layoutManager)\n     setLayout(layoutManager);\n   }\n \n-  /**\n-   * Consume initial application-requested paint event if it has not\n-   * already been consumed, and if the initial system-requested paint\n-   * event has not already been handled.  Otherwise, call\n-   * super.dispatchEventImpl.  These extra steps are required to\n-   * prevent a Panel from being painted twice when it is initially\n-   * shown.\n-   *\n-   * @param e the event to dispatch\n-   */\n-  void dispatchEventImpl (AWTEvent e)\n-  {\n-    if (e instanceof PaintEvent)\n-      {\n-        if (e.id == PaintEvent.UPDATE)\n-          {\n-            if (!initialUpdateConsumed\n-                && !initialSystemUpdateDone)\n-              {\n-                e.consume ();\n-                initialUpdateConsumed = true;\n-              }\n-          }\n-        else if (e.id == PaintEvent.PAINT)\n-          initialSystemUpdateDone = true;\n-      }\n-    else\n-      super.dispatchEventImpl (e);\n-  }\n-\n   /**\n    * Notifies this object to create its native peer.\n    *"}, {"sha": "3731b4134eec8b9f1c2f1e522cf46de0d3d7725c", "filename": "libjava/java/awt/Point.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FPoint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FPoint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPoint.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -95,7 +95,7 @@ public Point()\n    * Initializes a new instance of <code>Point</code> with coordinates\n    * identical to the coordinates of the specified points.\n    *\n-   * @param point the point to copy the coordinates from\n+   * @param p the point to copy the coordinates from\n    * @throws NullPointerException if p is null\n    */\n   public Point(Point p)"}, {"sha": "4b89bd669f2e5b68c74fb00b9b4333f024e22d98", "filename": "libjava/java/awt/Polygon.java", "status": "modified", "additions": 188, "deletions": 326, "changes": 514, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FPolygon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FPolygon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPolygon.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* Polygon.java -- class representing a polygon\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,6 +39,7 @@\n package java.awt;\n \n import java.awt.geom.AffineTransform;\n+import java.awt.geom.Line2D;\n import java.awt.geom.PathIterator;\n import java.awt.geom.Point2D;\n import java.awt.geom.Rectangle2D;\n@@ -100,17 +101,8 @@ public class Polygon implements Shape, Serializable\n    */\n   protected Rectangle bounds;\n \n-  /**\n-   * Cached flattened version - condense points and parallel lines, so the\n-   * result has area if there are >= 3 condensed vertices. flat[0] is the\n-   * number of condensed points, and (flat[odd], flat[odd+1]) form the\n-   * condensed points.\n-   *\n-   * @see #condense()\n-   * @see #contains(double, double)\n-   * @see #contains(double, double, double, double)\n-   */\n-  private transient int[] condensed;\n+  /** A big number, but not so big it can't survive a few float operations */\n+  private static final double BIG_VALUE = java.lang.Double.MAX_VALUE / 10.0;\n \n   /**\n    * Initializes an empty polygon.\n@@ -168,7 +160,6 @@ public void reset()\n   public void invalidate()\n   {\n     bounds = null;\n-    condensed = null;\n   }\n \n   /**\n@@ -184,15 +175,14 @@ public void translate(int dx, int dy)\n     int i = npoints;\n     while (--i >= 0)\n       {\n-        xpoints[i] += dx;\n-        ypoints[i] += dy;\n+\txpoints[i] += dx;\n+\typoints[i] += dy;\n       }\n     if (bounds != null)\n       {\n-        bounds.x += dx;\n-        bounds.y += dy;\n+\tbounds.x += dx;\n+\tbounds.y += dy;\n       }\n-    condensed = null;\n   }\n \n   /**\n@@ -206,45 +196,44 @@ public void addPoint(int x, int y)\n   {\n     if (npoints + 1 > xpoints.length)\n       {\n-        int[] newx = new int[npoints + 1];\n-        System.arraycopy(xpoints, 0, newx, 0, npoints);\n-        xpoints = newx;\n+\tint[] newx = new int[npoints + 1];\n+\tSystem.arraycopy(xpoints, 0, newx, 0, npoints);\n+\txpoints = newx;\n       }\n     if (npoints + 1 > ypoints.length)\n       {\n-        int[] newy = new int[npoints + 1];\n-        System.arraycopy(ypoints, 0, newy, 0, npoints);\n-        ypoints = newy;\n+\tint[] newy = new int[npoints + 1];\n+\tSystem.arraycopy(ypoints, 0, newy, 0, npoints);\n+\typoints = newy;\n       }\n     xpoints[npoints] = x;\n     ypoints[npoints] = y;\n     npoints++;\n     if (bounds != null)\n       {\n-        if (npoints == 1)\n-          {\n-            bounds.x = x;\n-            bounds.y = y;\n-          }\n-        else\n-          {\n-            if (x < bounds.x)\n-              {\n-                bounds.width += bounds.x - x;\n-                bounds.x = x;\n-              }\n-            else if (x > bounds.x + bounds.width)\n-              bounds.width = x - bounds.x;\n-            if (y < bounds.y)\n-              {\n-                bounds.height += bounds.y - y;\n-                bounds.y = y;\n-              }\n-            else if (y > bounds.y + bounds.height)\n-              bounds.height = y - bounds.y;\n-          }\n+\tif (npoints == 1)\n+\t  {\n+\t    bounds.x = x;\n+\t    bounds.y = y;\n+\t  }\n+\telse\n+\t  {\n+\t    if (x < bounds.x)\n+\t      {\n+\t\tbounds.width += bounds.x - x;\n+\t\tbounds.x = x;\n+\t      }\n+\t    else if (x > bounds.x + bounds.width)\n+\t      bounds.width = x - bounds.x;\n+\t    if (y < bounds.y)\n+\t      {\n+\t\tbounds.height += bounds.y - y;\n+\t\tbounds.y = y;\n+\t      }\n+\t    else if (y > bounds.y + bounds.height)\n+\t      bounds.height = y - bounds.y;\n+\t  }\n       }\n-    condensed = null;\n   }\n \n   /**\n@@ -258,7 +247,7 @@ else if (y > bounds.y + bounds.height)\n    */\n   public Rectangle getBounds()\n   {\n-    return getBoundingBox ();\n+    return getBoundingBox();\n   }\n \n   /**\n@@ -274,27 +263,27 @@ public Rectangle getBoundingBox()\n   {\n     if (bounds == null)\n       {\n-        if (npoints == 0)\n-          return bounds = new Rectangle ();\n-        int i = npoints - 1;\n-        int minx = xpoints[i];\n-        int maxx = minx;\n-        int miny = ypoints[i];\n-        int maxy = miny;\n-        while (--i >= 0)\n-          {\n-            int x = xpoints[i];\n-            int y = ypoints[i];\n-            if (x < minx)\n-              minx = x;\n-            else if (x > maxx)\n-              maxx = x;\n-            if (y < miny)\n-              miny = y;\n-            else if (y > maxy)\n-              maxy = y;\n-          }\n-        bounds = new Rectangle (minx, miny, maxx - minx, maxy - miny);\n+\tif (npoints == 0)\n+\t  return bounds = new Rectangle();\n+\tint i = npoints - 1;\n+\tint minx = xpoints[i];\n+\tint maxx = minx;\n+\tint miny = ypoints[i];\n+\tint maxy = miny;\n+\twhile (--i >= 0)\n+\t  {\n+\t    int x = xpoints[i];\n+\t    int y = ypoints[i];\n+\t    if (x < minx)\n+\t      minx = x;\n+\t    else if (x > maxx)\n+\t      maxx = x;\n+\t    if (y < miny)\n+\t      miny = y;\n+\t    else if (y > maxy)\n+\t      maxy = y;\n+\t  }\n+\tbounds = new Rectangle(minx, miny, maxx - minx, maxy - miny);\n       }\n     return bounds;\n   }\n@@ -365,64 +354,7 @@ public Rectangle2D getBounds2D()\n    */\n   public boolean contains(double x, double y)\n   {\n-    // First, the obvious bounds checks.\n-    if (! condense() || ! getBounds().contains(x, y))\n-      return false;\n-    // A point is contained if a ray to (-inf, y) crosses an odd number\n-    // of segments. This must obey the semantics of Shape when the point is\n-    // exactly on a segment or vertex: a point is inside only if the adjacent\n-    // point in the increasing x or y direction is also inside. Note that we\n-    // are guaranteed that the condensed polygon has area, and no consecutive\n-    // segments with identical slope.\n-    boolean inside = false;\n-    int limit = condensed[0];\n-    int curx = condensed[(limit << 1) - 1];\n-    int cury = condensed[limit << 1];\n-    for (int i = 1; i <= limit; i++)\n-      {\n-        int priorx = curx;\n-        int priory = cury;\n-        curx = condensed[(i << 1) - 1];\n-        cury = condensed[i << 1];\n-        if ((priorx > x && curx > x) // Left of segment, or NaN.\n-            || (priory > y && cury > y) // Below segment, or NaN.\n-            || (priory < y && cury < y)) // Above segment.\n-          continue;\n-        if (priory == cury) // Horizontal segment, y == cury == priory\n-          {\n-            if (priorx < x && curx < x) // Right of segment.\n-              {\n-                inside = ! inside;\n-                continue;\n-              }\n-            // Did we approach this segment from above or below?\n-            // This mess is necessary to obey rules of Shape.\n-            priory = condensed[((limit + i - 2) % limit) << 1];\n-            boolean above = priory > cury;\n-            if ((curx == x && (curx > priorx || above))\n-                || (priorx == x && (curx < priorx || ! above))\n-                || (curx > priorx && ! above) || above)\n-              inside = ! inside;\n-            continue;\n-          }\n-        if (priorx == x && priory == y) // On prior vertex.\n-          continue;\n-        if (priorx == curx // Vertical segment.\n-            || (priorx < x && curx < x)) // Right of segment.\n-          {\n-            inside = ! inside;\n-            continue;\n-          }\n-        // The point is inside the segment's bounding box, compare slopes.\n-        double leftx = curx > priorx ? priorx : curx;\n-        double lefty = curx > priorx ? priory : cury;\n-        double slopeseg = (double) (cury - priory) / (curx - priorx);\n-        double slopepoint = (double) (y - lefty) / (x - leftx);\n-        if ((slopeseg > 0 && slopeseg > slopepoint)\n-            || slopeseg < slopepoint)\n-          inside = ! inside;\n-      }\n-    return inside;\n+    return ((evaluateCrossings(x, y, false, BIG_VALUE) & 1) != 0);\n   }\n \n   /**\n@@ -453,67 +385,17 @@ public boolean contains(Point2D p)\n    */\n   public boolean intersects(double x, double y, double w, double h)\n   {\n-    // First, the obvious bounds checks.\n-    if (w <= 0 || h <= 0 || npoints == 0 ||\n-        ! getBounds().intersects(x, y, w, h))\n-      return false; // Disjoint bounds.\n-    if ((x <= bounds.x && x + w >= bounds.x + bounds.width\n-         && y <= bounds.y && y + h >= bounds.y + bounds.height)\n-        || contains(x, y))\n-      return true; // Rectangle contains the polygon, or one point matches.\n-    // If any vertex is in the rectangle, the two might intersect.\n-    int curx = 0;\n-    int cury = 0;\n-    for (int i = 0; i < npoints; i++)\n-      {\n-        curx = xpoints[i];\n-        cury = ypoints[i];\n-        if (curx >= x && curx < x + w && cury >= y && cury < y + h\n-            && contains(curx, cury)) // Boundary check necessary.\n-          return true;\n-      }\n-    // Finally, if at least one of the four bounding lines intersect any\n-    // segment of the polygon, return true. Be careful of the semantics of\n-    // Shape; coinciding lines do not necessarily return true.\n-    for (int i = 0; i < npoints; i++)\n-      {\n-        int priorx = curx;\n-        int priory = cury;\n-        curx = xpoints[i];\n-        cury = ypoints[i];\n-        if (priorx == curx) // Vertical segment.\n-          {\n-            if (curx < x || curx >= x + w) // Outside rectangle.\n-              continue;\n-            if ((cury >= y + h && priory <= y)\n-                || (cury <= y && priory >= y + h))\n-              return true; // Bisects rectangle.\n-            continue;\n-          }\n-        if (priory == cury) // Horizontal segment.\n-          {\n-            if (cury < y || cury >= y + h) // Outside rectangle.\n-              continue;\n-            if ((curx >= x + w && priorx <= x)\n-                || (curx <= x && priorx >= x + w))\n-              return true; // Bisects rectangle.\n-            continue;\n-          }\n-        // Slanted segment.\n-        double slope = (double) (cury - priory) / (curx - priorx);\n-        double intersect = slope * (x - curx) + cury;\n-        if (intersect > y && intersect < y + h) // Intersects left edge.\n-          return true;\n-        intersect = slope * (x + w - curx) + cury;\n-        if (intersect > y && intersect < y + h) // Intersects right edge.\n-          return true;\n-        intersect = (y - cury) / slope + curx;\n-        if (intersect > x && intersect < x + w) // Intersects bottom edge.\n-          return true;\n-        intersect = (y + h - cury) / slope + cury;\n-        if (intersect > x && intersect < x + w) // Intersects top edge.\n-          return true;\n-      }\n+    /* Does any edge intersect? */\n+    if (evaluateCrossings(x, y, false, w) != 0 /* top */\n+        || evaluateCrossings(x, y + h, false, w) != 0 /* bottom */\n+        || evaluateCrossings(x + w, y, true, h) != 0 /* right */\n+        || evaluateCrossings(x, y, true, h) != 0) /* left */\n+      return true;\n+\n+    /* No intersections, is any point inside? */\n+    if ((evaluateCrossings(x, y, false, BIG_VALUE) & 1) != 0)\n+      return true;\n+\n     return false;\n   }\n \n@@ -547,59 +429,21 @@ public boolean intersects(Rectangle2D r)\n    */\n   public boolean contains(double x, double y, double w, double h)\n   {\n-    // First, the obvious bounds checks.\n-    if (w <= 0 || h <= 0 || ! contains(x, y)\n-        || ! bounds.contains(x, y, w, h))\n+    if (! getBounds2D().intersects(x, y, w, h))\n       return false;\n-    // Now, if any of the four bounding lines intersects a polygon segment,\n-    // return false. The previous check had the side effect of setting\n-    // the condensed array, which we use. Be careful of the semantics of\n-    // Shape; coinciding lines do not necessarily return false.\n-    int limit = condensed[0];\n-    int curx = condensed[(limit << 1) - 1];\n-    int cury = condensed[limit << 1];\n-    for (int i = 1; i <= limit; i++)\n-      {\n-        int priorx = curx;\n-        int priory = cury;\n-        curx = condensed[(i << 1) - 1];\n-        cury = condensed[i << 1];\n-        if (curx > x && curx < x + w && cury > y && cury < y + h)\n-          return false; // Vertex is in rectangle.\n-        if (priorx == curx) // Vertical segment.\n-          {\n-            if (curx < x || curx > x + w) // Outside rectangle.\n-              continue;\n-            if ((cury >= y + h && priory <= y)\n-                || (cury <= y && priory >= y + h))\n-              return false; // Bisects rectangle.\n-            continue;\n-          }\n-        if (priory == cury) // Horizontal segment.\n-          {\n-            if (cury < y || cury > y + h) // Outside rectangle.\n-              continue;\n-            if ((curx >= x + w && priorx <= x)\n-                || (curx <= x && priorx >= x + w))\n-              return false; // Bisects rectangle.\n-            continue;\n-          }\n-        // Slanted segment.\n-        double slope = (double) (cury - priory) / (curx - priorx);\n-        double intersect = slope * (x - curx) + cury;\n-        if (intersect > y && intersect < y + h) // Intersects left edge.\n-          return false;\n-        intersect = slope * (x + w - curx) + cury;\n-        if (intersect > y && intersect < y + h) // Intersects right edge.\n-          return false;\n-        intersect = (y - cury) / slope + curx;\n-        if (intersect > x && intersect < x + w) // Intersects bottom edge.\n-          return false;\n-        intersect = (y + h - cury) / slope + cury;\n-        if (intersect > x && intersect < x + w) // Intersects top edge.\n-          return false;\n-      }\n-    return true;\n+\n+    /* Does any edge intersect? */\n+    if (evaluateCrossings(x, y, false, w) != 0 /* top */\n+        || evaluateCrossings(x, y + h, false, w) != 0 /* bottom */\n+        || evaluateCrossings(x + w, y, true, h) != 0 /* right */\n+        || evaluateCrossings(x, y, true, h) != 0) /* left */\n+      return false;\n+\n+    /* No intersections, is any point inside? */\n+    if ((evaluateCrossings(x, y, false, BIG_VALUE) & 1) != 0)\n+      return true;\n+\n+    return false;\n   }\n \n   /**\n@@ -631,47 +475,47 @@ public boolean contains(Rectangle2D r)\n   public PathIterator getPathIterator(final AffineTransform transform)\n   {\n     return new PathIterator()\n-    {\n-      /** The current vertex of iteration. */\n-      private int vertex;\n-\n-      public int getWindingRule()\n       {\n-        return WIND_EVEN_ODD;\n-      }\n-\n-      public boolean isDone()\n-      {\n-        return vertex > npoints;\n-      }\n-\n-      public void next()\n-      {\n-        vertex++;\n-      }\n-\n-      public int currentSegment(float[] coords)\n-      {\n-        if (vertex >= npoints)\n-          return SEG_CLOSE;\n-        coords[0] = xpoints[vertex];\n-        coords[1] = ypoints[vertex];\n-        if (transform != null)\n-          transform.transform(coords, 0, coords, 0, 1);\n-        return vertex == 0 ? SEG_MOVETO : SEG_LINETO;\n-      }\n-\n-      public int currentSegment(double[] coords)\n-      {\n-        if (vertex >= npoints)\n-          return SEG_CLOSE;\n-        coords[0] = xpoints[vertex];\n-        coords[1] = ypoints[vertex];\n-        if (transform != null)\n-          transform.transform(coords, 0, coords, 0, 1);\n-        return vertex == 0 ? SEG_MOVETO : SEG_LINETO;\n-      }\n-    };\n+\t/** The current vertex of iteration. */\n+\tprivate int vertex;\n+\n+\tpublic int getWindingRule()\n+\t{\n+\t  return WIND_EVEN_ODD;\n+\t}\n+\n+\tpublic boolean isDone()\n+\t{\n+\t  return vertex > npoints;\n+\t}\n+\n+\tpublic void next()\n+\t{\n+\t  vertex++;\n+\t}\n+\n+\tpublic int currentSegment(float[] coords)\n+\t{\n+\t  if (vertex >= npoints)\n+\t    return SEG_CLOSE;\n+\t  coords[0] = xpoints[vertex];\n+\t  coords[1] = ypoints[vertex];\n+\t  if (transform != null)\n+\t    transform.transform(coords, 0, coords, 0, 1);\n+\t  return vertex == 0 ? SEG_MOVETO : SEG_LINETO;\n+\t}\n+\n+\tpublic int currentSegment(double[] coords)\n+\t{\n+\t  if (vertex >= npoints)\n+\t    return SEG_CLOSE;\n+\t  coords[0] = xpoints[vertex];\n+\t  coords[1] = ypoints[vertex];\n+\t  if (transform != null)\n+\t    transform.transform(coords, 0, coords, 0, 1);\n+\t  return vertex == 0 ? SEG_MOVETO : SEG_LINETO;\n+\t}\n+      };\n   }\n \n   /**\n@@ -684,7 +528,7 @@ public int currentSegment(double[] coords)\n    * path iterator is not either.\n    *\n    * @param transform an optional transform to apply to the iterator\n-   * @param double the maximum distance for deviation from the real boundary\n+   * @param flatness the maximum distance for deviation from the real boundary\n    * @return a new iterator over the boundary\n    * @since 1.2\n    */\n@@ -695,57 +539,75 @@ public PathIterator getPathIterator(AffineTransform transform,\n   }\n \n   /**\n-   * Helper for contains, which caches a condensed version of the polygon.\n-   * This condenses all colinear points, so that consecutive segments in\n-   * the condensed version always have different slope.\n+   * Helper for contains, intersects, calculates the number of intersections\n+   * between the polygon and a line extending from the point (x, y) along\n+   * the positive X, or Y axis, within a given interval.\n    *\n-   * @return true if the condensed polygon has area\n+   * @return the winding number.\n    * @see #condensed\n    * @see #contains(double, double)\n    */\n-  private boolean condense()\n+  private int evaluateCrossings(double x, double y, boolean useYaxis,\n+                                double distance)\n   {\n-    if (npoints <= 2)\n-      return false;\n-    if (condensed != null)\n-      return condensed[0] > 2;\n-    condensed = new int[npoints * 2 + 1];\n-    int curx = xpoints[npoints - 1];\n-    int cury = ypoints[npoints - 1];\n-    double curslope = Double.NaN;\n-    int count = 0;\n-  outer:\n-    for (int i = 0; i < npoints; i++)\n+    double x0;\n+    double x1;\n+    double y0;\n+    double y1;\n+    double epsilon = 0.0;\n+    int crossings = 0;\n+    int[] xp;\n+    int[] yp;\n+\n+    if (useYaxis)\n       {\n-        int priorx = curx;\n-        int priory = cury;\n-        double priorslope = curslope;\n-        curx = xpoints[i];\n-        cury = ypoints[i];\n-        while (curx == priorx && cury == priory)\n-          {\n-            if (++i == npoints)\n-              break outer;\n-            curx = xpoints[i];\n-            cury = ypoints[i];\n-          }\n-        curslope = (curx == priorx ? Double.POSITIVE_INFINITY\n-                    : (double) (cury - priory) / (curx - priorx));\n-        if (priorslope == curslope)\n-          {\n-            if (count > 1 && condensed[(count << 1) - 3] == curx\n-                && condensed[(count << 1) - 2] == cury)\n-              {\n-                count--;\n-                continue;\n-              }\n-          }\n-        else\n-          count++;\n-        condensed[(count << 1) - 1] = curx;\n-        condensed[count << 1] = cury;\n+\txp = ypoints;\n+\typ = xpoints;\n+\tdouble swap;\n+\tswap = y;\n+\ty = x;\n+\tx = swap;\n       }\n-    condensed[0] = count;\n-    return count > 2;\n+    else\n+      {\n+\txp = xpoints;\n+\typ = ypoints;\n+      }\n+\n+    /* Get a value which is small but not insignificant relative the path. */\n+    epsilon = 1E-7;\n+\n+    x0 = xp[0] - x;\n+    y0 = yp[0] - y;\n+    for (int i = 1; i < npoints; i++)\n+      {\n+\tx1 = xp[i] - x;\n+\ty1 = yp[i] - y;\n+\n+\tif (y0 == 0.0)\n+\t  y0 -= epsilon;\n+\tif (y1 == 0.0)\n+\t  y1 -= epsilon;\n+\tif (y0 * y1 < 0)\n+\t  if (Line2D.linesIntersect(x0, y0, x1, y1, epsilon, 0.0, distance, 0.0))\n+\t    ++crossings;\n+\n+\tx0 = xp[i] - x;\n+\ty0 = yp[i] - y;\n+      }\n+\n+    // end segment\n+    x1 = xp[0] - x;\n+    y1 = yp[0] - y;\n+    if (y0 == 0.0)\n+      y0 -= epsilon;\n+    if (y1 == 0.0)\n+      y1 -= epsilon;\n+    if (y0 * y1 < 0)\n+      if (Line2D.linesIntersect(x0, y0, x1, y1, epsilon, 0.0, distance, 0.0))\n+\t++crossings;\n+\n+    return crossings;\n   }\n } // class Polygon\n+"}, {"sha": "75082029186efbe11cb1ed93c0eff2bd5ccac1ec", "filename": "libjava/java/awt/PopupMenu.java", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FPopupMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FPopupMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPopupMenu.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* PopupMenu.java -- An AWT popup menu\n-   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,9 +38,11 @@\n \n package java.awt;\n \n-import java.awt.peer.MenuPeer;\n import java.awt.peer.PopupMenuPeer;\n \n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+\n /**\n   * This class implement an AWT popup menu widget\n   *\n@@ -136,5 +138,23 @@ public class PopupMenu extends Menu\n     }\n }\n \n+  protected class AccessibleAWTPopupMenu extends AccessibleAWTMenu\n+  {\n+    protected AccessibleAWTPopupMenu()\n+    {\n+    }\n+    \n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.POPUP_MENU;\n+    }\n+    \n+  }\n+  \n+  public AccessibleContext getAccessibleContext()\n+  {\n+    return new AccessibleAWTPopupMenu();\n+  }\n+\n } // class PopupMenu\n "}, {"sha": "66190960a1223d993bbe98353dd85c70b7810554", "filename": "libjava/java/awt/Rectangle.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FRectangle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FRectangle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRectangle.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -338,7 +338,7 @@ public void reshape(int x, int y, int width, int height)\n    * its upper left corner.\n    *\n    * @return the point where this rectangle is located\n-   * @see setLocation(Point)\n+   * @see #setLocation(Point)\n    * @since 1.1\n    */\n   public Point getLocation()"}, {"sha": "a1ccdff309756b7cf4d7535c09457da9f705e384", "filename": "libjava/java/awt/RenderingHints.java", "status": "modified", "additions": 435, "deletions": 4, "changes": 439, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FRenderingHints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FRenderingHints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRenderingHints.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* RenderingHints.java --\n-   Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+   Copyright (C) 2000, 2001, 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -41,38 +41,75 @@\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.Map;\n import java.util.Set;\n \n /**\n- * NEEDS DOCUMENTATION\n+ * A collection of (key, value) items that provide 'hints' for the \n+ * {@link java.awt.Graphics2D} rendering pipeline.  Because these\n+ * items are hints only, they may be ignored by a particular\n+ * {@link java.awt.Graphics2D} implementation.\n  *\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n  * @author Eric Blake <ebb9@email.byu.edu>\n  */\n public class RenderingHints implements Map, Cloneable\n {\n+  /**\n+   * The base class used to represent keys.\n+   */\n   public abstract static class Key\n   {\n     private final int key;\n \n+    /**\n+     * Creates a new key.\n+     * \n+     * @param privateKey  the private key.\n+     */\n     protected Key(int privateKey)\n     {\n       key = privateKey;\n     }\n \n+    /**\n+     * Returns <code>true</code> if the specified value is compatible with\n+     * this key, and <code>false</code> otherwise.\n+     * \n+     * @param value  the value (<code>null</code> permitted).\n+     * \n+     * @return A boolean.\n+     */\n     public abstract boolean isCompatibleValue(Object value);\n \n+    /**\n+     * Returns the private key for this instance.\n+     * \n+     * @return The private key.\n+     */\n     protected final int intKey()\n     {\n       return key;\n     }\n \n+    /**\n+     * Returns a hash code for the key.\n+     * \n+     * @return A hash code.\n+     */\n     public final int hashCode()\n     {\n       return System.identityHashCode(this);\n     }\n \n+    /**\n+     * Checks this key for equality with an arbitrary object.\n+     * \n+     * @param other  the object (<code>null</code> permitted)\n+     * \n+     * @return A boolean.\n+     */\n     public final boolean equals(Object other)\n     {\n       return this == other;\n@@ -96,11 +133,24 @@ private static final class KeyImpl extends Key\n       this.v3 = v3;\n     }\n \n+    /**\n+     * Returns <code>true</code> if the specified value is compatible with\n+     * this key, and <code>false</code> otherwise.\n+     * \n+     * @param value  the value (<code>null</code> permitted).\n+     * \n+     * @return A boolean.\n+     */\n     public boolean isCompatibleValue(Object value)\n     {\n       return value == v1 || value == v2 || value == v3;\n     }\n \n+    /**\n+     * Returns a string representation of the key.\n+     * \n+     * @return A string.\n+     */\n     public String toString()\n     {\n       return description;\n@@ -109,102 +159,345 @@ public String toString()\n \n   private HashMap hintMap = new HashMap();\n \n+  /**\n+   * A key for the 'antialiasing' hint.  Permitted values are:\n+   * <p>\n+   * <table>\n+   * <tr>\n+   *   <td>{@link #VALUE_ANTIALIAS_OFF}</td>\n+   *   <td>Render without antialiasing (better speed).</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_ANTIALIAS_ON}</td>\n+   *   <td>Render with antialiasing (better quality).</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_ANTIALIAS_DEFAULT}</td>\n+   *   <td>Use the default value for antialiasing.</td>\n+   * </tr>\n+   * </table>\n+   */\n   public static final Key KEY_ANTIALIASING;\n \n+  /**\n+   * This value is for use with the {@link #KEY_ANTIALIASING} key.\n+   */\n   public static final Object VALUE_ANTIALIAS_ON\n     = \"Antialiased rendering mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_ANTIALIASING} key.\n+   */\n   public static final Object VALUE_ANTIALIAS_OFF\n     = \"Nonantialiased rendering mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_ANTIALIASING} key.\n+   */\n   public static final Object VALUE_ANTIALIAS_DEFAULT\n     = \"Default antialiasing rendering mode\";\n \n+  /**\n+   * A key for the 'rendering' hint.  Permitted values are:\n+   * <p>\n+   * <table>\n+   * <tr>\n+   *   <td>{@link #VALUE_RENDER_SPEED}</td>\n+   *   <td>Prefer speed over quality when rendering.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_RENDER_QUALITY}</td>\n+   *   <td>Prefer quality over speed when rendering.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_RENDER_DEFAULT}</td>\n+   *   <td>Use the default value for quality vs. speed when rendering.</td>\n+   * </tr>\n+   * </table>\n+   */\n   public static final Key KEY_RENDERING;\n \n+  /**\n+   * This value is for use with the {@link #KEY_RENDERING} key.\n+   */\n   public static final Object VALUE_RENDER_SPEED\n     = \"Fastest rendering methods\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_RENDERING} key.\n+   */\n   public static final Object VALUE_RENDER_QUALITY\n     = \"Highest quality rendering methods\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_RENDERING} key.\n+   */\n   public static final Object VALUE_RENDER_DEFAULT\n     = \"Default rendering methods\";\n \n+  /**\n+   * A key for the 'dithering' hint.  Permitted values are:\n+   * <p>\n+   * <table>\n+   * <tr>\n+   *   <td>{@link #VALUE_DITHER_DISABLE}</td>\n+   *   <td>Disable dithering.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_DITHER_ENABLE}</td>\n+   *   <td>Enable dithering.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_DITHER_DEFAULT}</td>\n+   *   <td>Use the default value for dithering.</td>\n+   * </tr>\n+   * </table>\n+   */\n   public static final Key KEY_DITHERING;\n \n+  /**\n+   * This value is for use with the {@link #KEY_DITHERING} key.\n+   */\n   public static final Object VALUE_DITHER_DISABLE\n     = \"Nondithered rendering mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_DITHERING} key.\n+   */\n   public static final Object VALUE_DITHER_ENABLE\n     = \"Dithered rendering mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_DITHERING} key.\n+   */\n   public static final Object VALUE_DITHER_DEFAULT\n     = \"Default dithering mode\";\n \n+  /**\n+   * A key for the 'text antialiasing' hint.  Permitted values are:\n+   * <p>\n+   * <table>\n+   * <tr>\n+   *   <td>{@link #VALUE_TEXT_ANTIALIAS_ON}</td>\n+   *   <td>Render text with antialiasing (better quality usually).</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_TEXT_ANTIALIAS_OFF}</td>\n+   *   <td>Render test without antialiasing (better speed).</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_TEXT_ANTIALIAS_DEFAULT}</td>\n+   *   <td>Use the default value for text antialiasing.</td>\n+   * </tr>\n+   * </table>\n+   */\n   public static final Key KEY_TEXT_ANTIALIASING;\n \n+  /**\n+   * This value is for use with the {@link #KEY_TEXT_ANTIALIASING} key.\n+   */\n   public static final Object VALUE_TEXT_ANTIALIAS_ON\n     = \"Antialiased text mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_TEXT_ANTIALIASING} key.\n+   */\n   public static final Object VALUE_TEXT_ANTIALIAS_OFF\n     = \"Nonantialiased text mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_TEXT_ANTIALIASING} key.\n+   */\n   public static final Object VALUE_TEXT_ANTIALIAS_DEFAULT\n     = \"Default antialiasing text mode\";\n \n+  /**\n+   * A key for the 'fractional metrics' hint.  Permitted values are:\n+   * <p>\n+   * <table>\n+   * <tr>\n+   *   <td>{@link #VALUE_FRACTIONALMETRICS_OFF}</td>\n+   *   <td>Render text with fractional metrics off.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_FRACTIONALMETRICS_ON}</td>\n+   *   <td>Render text with fractional metrics on.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_FRACTIONALMETRICS_DEFAULT}</td>\n+   *   <td>Use the default value for fractional metrics.</td>\n+   * </tr>\n+   * </table>\n+   */\n   public static final Key KEY_FRACTIONALMETRICS;\n \n+  /**\n+   * This value is for use with the {@link #KEY_FRACTIONALMETRICS} key.\n+   */\n   public static final Object VALUE_FRACTIONALMETRICS_OFF\n     = \"Integer text metrics mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_FRACTIONALMETRICS} key.\n+   */\n   public static final Object VALUE_FRACTIONALMETRICS_ON\n     = \"Fractional text metrics mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_FRACTIONALMETRICS} key.\n+   */\n   public static final Object VALUE_FRACTIONALMETRICS_DEFAULT\n     = \"Default fractional text metrics mode\";\n \n+  /**\n+   * A key for the 'interpolation' hint.  Permitted values are:\n+   * <p>\n+   * <table>\n+   * <tr>\n+   *   <td>{@link #VALUE_INTERPOLATION_NEAREST_NEIGHBOR}</td>\n+   *   <td>Use nearest neighbour interpolation.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_INTERPOLATION_BILINEAR}</td>\n+   *   <td>Use bilinear interpolation.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_INTERPOLATION_BICUBIC}</td>\n+   *   <td>Use bicubic interpolation.</td>\n+   * </tr>\n+   * </table>\n+   */\n   public static final Key KEY_INTERPOLATION;\n \n+  /**\n+   * This value is for use with the {@link #KEY_INTERPOLATION} key.\n+   */\n   public static final Object VALUE_INTERPOLATION_NEAREST_NEIGHBOR\n     = \"Nearest Neighbor image interpolation mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_INTERPOLATION} key.\n+   */\n   public static final Object VALUE_INTERPOLATION_BILINEAR\n     = \"Bilinear image interpolation mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_INTERPOLATION} key.\n+   */\n   public static final Object VALUE_INTERPOLATION_BICUBIC\n     = \"Bicubic image interpolation mode\";\n \n+  /**\n+   * A key for the 'alpha interpolation' hint.  Permitted values are:\n+   * <p>\n+   * <table>\n+   * <tr>\n+   *   <td>{@link #VALUE_ALPHA_INTERPOLATION_SPEED}</td>\n+   *   <td>Prefer speed over quality.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_ALPHA_INTERPOLATION_QUALITY}</td>\n+   *   <td>Prefer quality over speed.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_ALPHA_INTERPOLATION_DEFAULT}</td>\n+   *   <td>Use the default setting.</td>\n+   * </tr>\n+   * </table>\n+   */\n   public static final Key KEY_ALPHA_INTERPOLATION;\n \n+  /**\n+   * This value is for use with the {@link #KEY_ALPHA_INTERPOLATION} key.\n+   */\n   public static final Object VALUE_ALPHA_INTERPOLATION_SPEED\n     = \"Fastest alpha blending methods\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_ALPHA_INTERPOLATION} key.\n+   */\n   public static final Object VALUE_ALPHA_INTERPOLATION_QUALITY\n     = \"Highest quality alpha blending methods\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_ALPHA_INTERPOLATION} key.\n+   */\n   public static final Object VALUE_ALPHA_INTERPOLATION_DEFAULT\n     = \"Default alpha blending methods\";\n \n+  /**\n+   * A key for the 'color rendering' hint.  Permitted values are:\n+   * <p>\n+   * <table>\n+   * <tr>\n+   *   <td>{@link #VALUE_COLOR_RENDER_SPEED}</td>\n+   *   <td>Prefer speed over quality.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_COLOR_RENDER_QUALITY}</td>\n+   *   <td>Prefer quality over speed.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_COLOR_RENDER_DEFAULT}</td>\n+   *   <td>Use the default setting.</td>\n+   * </tr>\n+   * </table>\n+   */\n   public static final Key KEY_COLOR_RENDERING;\n \n+  /**\n+   * This value is for use with the {@link #KEY_COLOR_RENDERING} key.\n+   */\n   public static final Object VALUE_COLOR_RENDER_SPEED\n     = \"Fastest color rendering mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_COLOR_RENDERING} key.\n+   */\n   public static final Object VALUE_COLOR_RENDER_QUALITY\n     = \"Highest quality color rendering mode\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_COLOR_RENDERING} key.\n+   */\n   public static final Object VALUE_COLOR_RENDER_DEFAULT\n     = \"Default color rendering mode\";\n \n+  /**\n+   * A key for the 'stroke control' hint.  Permitted values are:\n+   * <p>\n+   * <table>\n+   * <tr>\n+   *   <td>{@link #VALUE_STROKE_DEFAULT}</td>\n+   *   <td>Use the default setting.</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_STROKE_NORMALIZE}</td>\n+   *   <td>XXX</td>\n+   * </tr>\n+   * <tr>\n+   *   <td>{@link #VALUE_STROKE_PURE}</td>\n+   *   <td>XXX</td>\n+   * </tr>\n+   * </table>\n+   */\n   public static final Key KEY_STROKE_CONTROL;\n \n+  /**\n+   * This value is for use with the {@link #KEY_STROKE_CONTROL} key.\n+   */\n   public static final Object VALUE_STROKE_DEFAULT\n     = \"Default stroke normalization\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_STROKE_CONTROL} key.\n+   */\n   public static final Object VALUE_STROKE_NORMALIZE\n     = \"Normalize strokes for consistent rendering\";\n \n+  /**\n+   * This value is for use with the {@link #KEY_STROKE_CONTROL} key.\n+   */\n   public static final Object VALUE_STROKE_PURE\n     = \"Pure stroke conversion for accurate paths\";\n \n@@ -250,43 +543,102 @@ public String toString()\n                                      VALUE_STROKE_PURE);\n   }\n \n+  /**\n+   * Creates a new collection of hints containing all the (key, value) pairs\n+   * in the specified map.\n+   * \n+   * @param init  a map containing a collection of hints (<code>null</code> \n+   *              permitted).\n+   */\n   public RenderingHints(Map init)\n   {\n-    putAll(init);\n+    if (init != null)\n+      putAll(init);\n   }\n \n+  /**\n+   * Creates a new collection containing a single (key, value) pair.\n+   * \n+   * @param key  the key.\n+   * @param value  the value.\n+   */\n   public RenderingHints(Key key, Object value)\n   {\n     put(key, value);\n   }\n \n+  /**\n+   * Returns the number of hints in the collection.\n+   * \n+   * @return The number of hints.\n+   */\n   public int size()\n   {\n     return hintMap.size();\n   }\n \n+  /**\n+   * Returns <code>true</code> if there are no hints in the collection,\n+   * and <code>false</code> otherwise.\n+   * \n+   * @return A boolean.\n+   */\n   public boolean isEmpty()\n   {\n     return hintMap.isEmpty();\n   }\n \n+  /**\n+   * Returns <code>true</code> if the collection of hints contains the\n+   * specified key, and <code>false</code> otherwise.\n+   * \n+   * @param key  the key.\n+   * \n+   * @return A boolean.\n+   */\n   public boolean containsKey(Object key)\n   {\n     if (key == null)\n       throw new NullPointerException();\n     return hintMap.containsKey((Key) key);\n   }\n \n+  /**\n+   * Returns <code>true</code> if the collection of hints contains the\n+   * specified value, and <code>false</code> otherwise.\n+   * \n+   * @param value  the value.\n+   * \n+   * @return A boolean.\n+   */\n   public boolean containsValue(Object value)\n   {\n     return hintMap.containsValue(value);\n   }\n \n+  /**\n+   * Returns the value associated with the specified key.\n+   * \n+   * @param key  the key.\n+   * \n+   * @return The value.\n+   */\n   public Object get(Object key)\n   {\n     return hintMap.get((Key) key);\n   }\n \n+  /**\n+   * Adds a (key, value) pair to the collection of hints (if the\n+   * collection already contains the specified key, then the \n+   * value is updated).\n+   * \n+   * @param key  the key.\n+   * @param value  the value.\n+   * \n+   * @return  the previous value of the key or <code>null</code> if the key\n+   * didn't have a value yet.\n+   */\n   public Object put(Object key, Object value)\n   {\n     if (key == null || value == null)\n@@ -296,51 +648,125 @@ public Object put(Object key, Object value)\n     return hintMap.put(key, value);\n   }\n \n+  /**\n+   * Adds all the hints from a collection to this collection.\n+   * \n+   * @param hints  the hint collection.\n+   */\n   public void add(RenderingHints hints)\n   {\n     hintMap.putAll(hints);\n   }\n \n+  /**\n+   * Clears all the hints from this collection.\n+   */\n   public void clear()\n   {\n     hintMap.clear();\n   }\n \n+  /**\n+   * Removes a hint from the collection.\n+   * \n+   * @param key  the key.\n+   * \n+   * @return The value that was associated with the key, or <code>null</code> if \n+   *         the key was not part of the collection\n+   * \n+   * @throws ClassCastException if the key is not a subclass of \n+   *         {@link RenderingHints.Key}.\n+   */\n   public Object remove(Object key)\n   {\n-    return remove((Key) key);\n+    // don't remove the (Key) cast, it is necessary to throw the exception\n+    // required by the spec\n+    return hintMap.remove((Key) key);  \n   }\n \n+  /**\n+   * Adds a collection of (key, value) pairs to the collection.\n+   * \n+   * @param m  a map containing (key, value) items.\n+   * \n+   * @throws ClassCastException if the map contains a key that is not\n+   *         a subclass of {@link RenderingHints.Key}.\n+   * @throws IllegalArgumentException if the map contains a value that is\n+   *         not compatible with its key.\n+   */\n   public void putAll(Map m)\n   {\n+    // preprocess map to generate appropriate exceptions\n+    Iterator iterator = m.keySet().iterator();\n+    while (iterator.hasNext())\n+      {\n+\tKey key = (Key) iterator.next();\n+\tif (!key.isCompatibleValue(m.get(key)))\n+\t  throw new IllegalArgumentException();\n+      }\n+    // map is OK, update\n     hintMap.putAll(m);\n   }\n \n+  /**\n+   * Returns a set containing the keys from this collection.\n+   * \n+   * @return A set of keys.\n+   */\n   public Set keySet()\n   {\n     return hintMap.keySet();\n   }\n \n+  /**\n+   * Returns a collection of the values from this hint collection.  The\n+   * collection is backed by the <code>RenderingHints</code> instance, \n+   * so updates to one will affect the other.\n+   * \n+   * @return A collection of values.\n+   */\n   public Collection values()\n   {\n     return hintMap.values();\n   }\n \n+  /**\n+   * Returns a set of entries from the collection.\n+   * \n+   * @return A set of entries.\n+   */\n   public Set entrySet()\n   {\n     return Collections.unmodifiableSet(hintMap.entrySet());\n   }\n \n+  /**\n+   * Checks this collection for equality with an arbitrary object.\n+   * \n+   * @param o  the object (<code>null</code> permitted)\n+   * \n+   * @return A boolean.\n+   */\n   public boolean equals(Object o)\n   {\n     return hintMap.equals(o);\n   }\n \n+  /**\n+   * Returns a hash code for the collection of hints.\n+   * \n+   * @return A hash code.\n+   */\n   public int hashCode()\n   {\n     return hintMap.hashCode();\n   }\n \n+  /**\n+   * Creates a clone of this instance.\n+   * \n+   * @return A clone.\n+   */\n   public Object clone()\n   {\n     try\n@@ -355,6 +781,11 @@ public Object clone()\n       }\n   }\n \n+  /**\n+   * Returns a string representation of this instance.\n+   * \n+   * @return A string.\n+   */\n   public String toString()\n   {\n     return hintMap.toString();"}, {"sha": "abd5514d8e3ec294cd0ee46148ef61cb7c3793fd", "filename": "libjava/java/awt/ScrollPane.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FScrollPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FScrollPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* ScrollPane.java -- Scrolling window\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,6 +41,7 @@\n import java.awt.event.MouseEvent;\n import java.awt.peer.ComponentPeer;\n import java.awt.peer.ScrollPanePeer;\n+\n import javax.accessibility.Accessible;\n \n /**"}, {"sha": "7cc97153796697d7da3e87012522f63a205e3561", "filename": "libjava/java/awt/Scrollbar.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FScrollbar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FScrollbar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollbar.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,6 @@\n /* Scrollbar.java -- AWT Scrollbar widget\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,10 +39,11 @@\n \n package java.awt;\n \n-import java.awt.event.AdjustmentListener;\n import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n import java.awt.peer.ScrollbarPeer;\n import java.util.EventListener;\n+\n import javax.accessibility.Accessible;\n \n /**\n@@ -123,7 +125,7 @@ public class Scrollbar extends Component implements Accessible,\n   /*\n    * The number used to generate the name returned by getName.\n    */\n-  private static transient long next_scrollbar_number = 0;\n+  private static transient long next_scrollbar_number;\n \n /*************************************************************************/\n \n@@ -363,7 +365,7 @@ public class Scrollbar extends Component implements Accessible,\n   * Sets the width of the scrollbar's thumb, in units relative to the\n   * maximum and minimum value of the scrollbar.\n   *\n-  * @param visibileAmount The new visible amount value of the scrollbar.\n+  * @param visibleAmount The new visible amount value of the scrollbar.\n   */\n public void\n setVisibleAmount(int visibleAmount)"}, {"sha": "47c97192a1767f0bbd0f9a8fa6aaa99420d5777d", "filename": "libjava/java/awt/Shape.java", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FShape.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FShape.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FShape.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -57,8 +57,8 @@\n  * @author Aaron M. Renn <arenn@urbanophile.com>\n  * @see PathIterator\n  * @see AffineTransform\n- * @see FlatteningPathIterator\n- * @see GeneralPath\n+ * @see java.awt.geom.FlatteningPathIterator\n+ * @see java.awt.geom.GeneralPath\n  * @since 1.0\n  * @status updated to 1.4\n  */\n@@ -109,15 +109,15 @@\n    * Test if a high-precision rectangle intersects the shape. This is true\n    * if any point in the rectangle is in the shape, with the caveat that the\n    * operation may include high probability estimates when the actual\n-   * calculation is prohibitively expensive. The {@link Area} class can\n-   * be used for more precise answers.\n+   * calculation is prohibitively expensive. The {@link java.awt.geom.Area} \n+   * class can be used for more precise answers.\n    *\n    * @param x the x coordinate of the rectangle\n    * @param y the y coordinate of the rectangle\n    * @param w the width of the rectangle, undefined results if negative\n    * @param h the height of the rectangle, undefined results if negative\n    * @return true if the rectangle intersects this shape\n-   * @see Area\n+   * @see java.awt.geom.Area\n    * @since 1.2\n    */\n   boolean intersects(double x, double y, double w, double h);\n@@ -126,8 +126,8 @@\n    * Test if a high-precision rectangle intersects the shape. This is true\n    * if any point in the rectangle is in the shape, with the caveat that the\n    * operation may include high probability estimates when the actual\n-   * calculation is prohibitively expensive. The {@link Area} class can\n-   * be used for more precise answers.\n+   * calculation is prohibitively expensive. The {@link java.awt.geom.Area} \n+   * class can be used for more precise answers.\n    *\n    * @param r the rectangle\n    * @return true if the rectangle intersects this shape\n@@ -141,15 +141,15 @@\n    * Test if a high-precision rectangle lies completely in the shape. This is\n    * true if all points in the rectangle are in the shape, with the caveat\n    * that the operation may include high probability estimates when the actual\n-   * calculation is prohibitively expensive. The {@link Area} class can\n-   * be used for more precise answers.\n+   * calculation is prohibitively expensive. The {@link java.awt.geom.Area} \n+   * class can be used for more precise answers.\n    *\n    * @param x the x coordinate of the rectangle\n    * @param y the y coordinate of the rectangle\n    * @param w the width of the rectangle, undefined results if negative\n    * @param h the height of the rectangle, undefined results if negative\n    * @return true if the rectangle is contained in this shape\n-   * @see Area\n+   * @see java.awt.geom.Area\n    * @since 1.2\n    */\n   boolean contains(double x, double y, double w, double h);\n@@ -158,8 +158,8 @@\n    * Test if a high-precision rectangle lies completely in the shape. This is\n    * true if all points in the rectangle are in the shape, with the caveat\n    * that the operation may include high probability estimates when the actual\n-   * calculation is prohibitively expensive. The {@link Area} class can\n-   * be used for more precise answers.\n+   * calculation is prohibitively expensive. The {@link java.awt.geom.Area} \n+   * class can be used for more precise answers.\n    *\n    * @param r the rectangle\n    * @return true if the rectangle is contained in this shape\n@@ -195,7 +195,7 @@\n    * iterations from future changes to the boundary, and document this fact.\n    *\n    * @param transform an optional transform to apply to the iterator\n-   * @param double the maximum distance for deviation from the real boundary\n+   * @param flatness the maximum distance for deviation from the real boundary\n    * @return a new iterator over the boundary\n    * @since 1.2\n    */"}, {"sha": "3428fba3cc5894fbb8d05c8c931f1a16cba9fb71", "filename": "libjava/java/awt/SystemColor.java", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FSystemColor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FSystemColor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FSystemColor.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* SystemColor.java -- access dynamic system color values\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,9 +38,9 @@\n \n package java.awt;\n \n-import java.awt.image.ColorModel;\n import java.awt.geom.AffineTransform;\n import java.awt.geom.Rectangle2D;\n+import java.awt.image.ColorModel;\n import java.io.Serializable;\n \n /**\n@@ -72,215 +72,215 @@ public final class SystemColor extends Color implements Serializable\n \n   /**\n    * Array index of the desktop color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #desktop\n    */\n   public static final int DESKTOP = 0;\n \n   /**\n    * Array index of the active caption color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #activeCaption\n    */\n   public static final int ACTIVE_CAPTION = 1;\n \n   /**\n    * Array index of the active caption text color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #activeCaptionText\n    */\n   public static final int ACTIVE_CAPTION_TEXT = 2;\n \n   /**\n    * Array index of the active caption border color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #activeCaptionBorder\n    */\n   public static final int ACTIVE_CAPTION_BORDER = 3;\n \n   /**\n    * Array index of the inactive caption color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #inactiveCaption\n    */\n   public static final int INACTIVE_CAPTION = 4;\n \n   /**\n    * Array index of the inactive caption text color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #inactiveCaptionText\n    */\n   public static final int INACTIVE_CAPTION_TEXT = 5;\n \n   /**\n    * Array index of the inactive caption border color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #inactiveCaptionBorder\n    */\n   public static final int INACTIVE_CAPTION_BORDER = 6;\n \n   /**\n    * Array index of the window background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #window\n    */\n   public static final int WINDOW = 7;\n \n   /**\n    * Array index of the window border color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #windowBorder\n    */\n   public static final int WINDOW_BORDER = 8;\n \n   /**\n    * Array index of the window text color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #windowText\n    */\n   public static final int WINDOW_TEXT = 9;\n \n   /**\n    * Array index of the menu background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #menu\n    */\n   public static final int MENU = 10;\n \n   /**\n    * Array index of the menu text color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #menuText\n    */\n   public static final int MENU_TEXT = 11;\n \n   /**\n    * Array index of the text background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #text\n    */\n   public static final int TEXT = 12;\n \n   /**\n    * Array index of the text foreground color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #textText\n   */\n   public static final int TEXT_TEXT = 13;\n \n   /**\n    * Array index of the highlighted text background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #textHighlight\n    */\n   public static final int TEXT_HIGHLIGHT = 14;\n \n   /**\n    * Array index of the highlighted text foreground color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #textHighlightText\n    */\n   public static final int TEXT_HIGHLIGHT_TEXT = 15;\n \n   /**\n    * Array index of the inactive text foreground color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #textInactiveText\n    */\n   public static final int TEXT_INACTIVE_TEXT = 16;\n \n   /**\n    * Array index of the control background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #control\n    */\n   public static final int CONTROL = 17;\n \n   /**\n    * Array index of the control text color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #controlText\n    */\n   public static final int CONTROL_TEXT = 18;\n \n   /**\n    * Array index of the highlighted control background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #controlHighlight\n    */\n   public static final int CONTROL_HIGHLIGHT = 19;\n \n   /**\n    * Array index of the lightly highlighted control background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #controlLtHighlight\n    */\n   public static final int CONTROL_LT_HIGHLIGHT = 20;\n \n   /**\n    * Array index of the shadowed control background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #controlShadow\n    */\n   public static final int CONTROL_SHADOW = 21;\n \n   /**\n    * Array index of the darkly shadowed control background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #controlDkShadow\n    */\n   public static final int CONTROL_DK_SHADOW = 22;\n \n   /**\n    * Array index of the scrollbar background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #scrollbar\n    */\n   public static final int SCROLLBAR = 23;\n \n   /**\n    * Array index of the info background color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #info\n    */\n   public static final int INFO = 24;\n \n   /**\n    * Array index of the info text color.  Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    *\n    * @see #infoText\n    */\n   public static final int INFO_TEXT = 25;\n \n   /**\n    * The number of system colors. Used by\n-   * {@link Toolkit#loadSystemColors()}.\n+   * {@link Toolkit#loadSystemColors(int[])}.\n    */\n   public static final int NUM_COLORS = 26;\n "}, {"sha": "9efc7754a204b80197e908454df2589f694350b8", "filename": "libjava/java/awt/TextArea.java", "status": "modified", "additions": 56, "deletions": 35, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FTextArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FTextArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextArea.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,48 +1,52 @@\n /* TextArea.java -- A multi-line text entry component\n    Copyright (C) 1999, 2004 Free Software Foundation, Inc.\n \n-   This file is part of GNU Classpath.\n-\n-   GNU Classpath is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-\n-   GNU Classpath is distributed in the hope that it will be useful, but\n-   WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GNU Classpath; see the file COPYING.  If not, write to the\n-   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-   02111-1307 USA.\n-\n-   Linking this library statically or dynamically with other modules is\n-   making a combined work based on this library.  Thus, the terms and\n-   conditions of the GNU General Public License cover the whole\n-   combination.\n-\n-   As a special exception, the copyright holders of this library give you\n-   permission to link this library with independent modules to produce an\n-   executable, regardless of the license terms of these independent\n-   modules, and to copy and distribute the resulting executable under\n-   terms of your choice, provided that you also meet, for each linked\n-   independent module, the terms and conditions of the license of that\n-   module.  An independent module is a module which is not derived from\n-   or based on this library.  If you modify this library, you may extend\n-   this exception to your version of the library, but you are not\n-   obligated to do so.  If you do not wish to do so, delete this\n-   exception statement from your version. */\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n \n package java.awt;\n \n+import java.awt.event.KeyEvent;\n import java.awt.peer.ComponentPeer;\n import java.awt.peer.TextAreaPeer;\n-import java.awt.event.KeyEvent;\n import java.util.HashSet;\n import java.util.Set;\n \n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleStateSet;\n+\n \n /**\n  * A TextArea is a text component capable of displaying multiple lines\n@@ -100,7 +104,7 @@ public class TextArea extends TextComponent implements java.io.Serializable\n   /*\n    * The number used to generate the name returned by getName.\n    */\n-  private static transient long next_text_number = 0;\n+  private static transient long next_text_number;\n \n   /**\n    * Initialize a new instance of <code>TextArea</code> that is empty.\n@@ -596,4 +600,21 @@ private static synchronized long getUniqueLong ()\n   {\n     return next_text_number++;\n   }\n+  \n+  protected class AccessibleAWTTextArea extends AccessibleAWTTextComponent\n+  {\n+    protected AccessibleAWTTextArea()\n+    {\n+    }\n+    \n+    public AccessibleStateSet getAccessibleStateSet()\n+    {\n+      return super.getAccessibleStateSet();\n+    }\n+  }\n+  \n+  public AccessibleContext getAccessibleContext()\n+  {\n+    return new AccessibleAWTTextArea();\n+  }\n }"}, {"sha": "8f9f875acf386a540e790fcddaf991704eea19ce", "filename": "libjava/java/awt/TextComponent.java", "status": "modified", "additions": 247, "deletions": 1, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextComponent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -42,16 +42,24 @@\n import java.awt.event.TextListener;\n import java.awt.peer.TextComponentPeer;\n import java.io.Serializable;\n+import java.text.BreakIterator;\n import java.util.EventListener;\n \n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.accessibility.AccessibleText;\n+import javax.swing.text.AttributeSet;\n+\n /**\n   * This class provides common functionality for widgets than \n   * contain text.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   */\n public class TextComponent extends Component\n-  implements Serializable\n+  implements Serializable, Accessible\n {\n \n /*\n@@ -90,6 +98,219 @@ public class TextComponent extends Component\n   */\n protected transient TextListener textListener;\n \n+  protected class AccessibleAWTTextComponent\n+    extends AccessibleAWTComponent\n+    implements AccessibleText, TextListener\n+  {\n+    // Constructor\n+    // Adds a listener for tracking caret changes\n+    public AccessibleAWTTextComponent()\n+    {\n+      TextComponent.this.addTextListener(this);\n+    }\n+    \n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.TEXT;\n+    }\n+    \n+    public AccessibleStateSet getAccessibleStateSet()\n+    {\n+      // TODO: Docs say PropertyChangeEvent will fire if this state changes.\n+      // That means that the event has to fire when editable changes.\n+      AccessibleStateSet ss = super.getAccessibleStateSet();\n+      if (editable)\n+        ss.add(AccessibleState.EDITABLE);\n+      return ss;\n+    }\n+    \n+    public AccessibleText getAccessibleText()\n+    {\n+      return this;\n+    }\n+    \n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getIndexAtPoint(java.awt.Point)\n+     */\n+    public int getIndexAtPoint(Point point)\n+    {\n+      return TextComponent.this.getIndexAtPoint(point);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getCharacterBounds(int)\n+     */\n+    public Rectangle getCharacterBounds(int index)\n+    {\n+      return TextComponent.this.getCharacterBounds(index);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getCharCount()\n+     */\n+    public int getCharCount()\n+    {\n+      return text.length();\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getCaretPosition()\n+     */\n+    public int getCaretPosition()\n+    {\n+      return TextComponent.this.getCaretPosition();\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getAtIndex(int, int)\n+     */\n+    public String getAtIndex(int part, int index)\n+    {\n+      if (index < 0 || index >= text.length())\n+        return null;\n+      BreakIterator it = null;\n+      switch (part)\n+      {\n+      \tcase CHARACTER:\n+      \t  return text.substring(index, index + 1);\n+      \tcase WORD:\n+      \t  it = BreakIterator.getWordInstance();\n+      \t  break;\n+      \tcase SENTENCE:\n+      \t  it = BreakIterator.getSentenceInstance();\n+      \t  break;\n+      \tdefault:\n+      \t  return null;\n+      }\n+  \t  it.setText(text);\n+  \t  int start = index;\n+  \t  if (!it.isBoundary(index))\n+  \t    start = it.preceding(index); \n+  \t  int end = it.following(index);\n+  \t  if (end == -1)\n+  \t    return text.substring(index);\n+  \t  else\n+  \t    return text.substring(index, end);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getAfterIndex(int, int)\n+     */\n+    public String getAfterIndex(int part, int index) {\n+      if (index < 0 || index >= text.length())\n+        return null;\n+      BreakIterator it = null;\n+      switch (part)\n+      {\n+      \tcase CHARACTER:\n+      \t  return text.substring(index, index + 1);\n+      \tcase WORD:\n+      \t  it = BreakIterator.getWordInstance();\n+      \t  break;\n+      \tcase SENTENCE:\n+      \t  it = BreakIterator.getSentenceInstance();\n+      \t  break;\n+      \tdefault:\n+      \t  return null;\n+      }\n+  \t  it.setText(text);\n+  \t  int start = index;\n+  \t  if (!it.isBoundary(index))\n+  \t    start = it.following(index);\n+  \t  // Make sure there was a complete unit.  I.e. if index is in the middle\n+  \t  // of a word, return null if there is no word after the that one.\n+  \t  if (start == -1)\n+  \t    return null;\n+  \t  int end = it.following(start);\n+  \t  if (end == -1)\n+  \t    return text.substring(index);\n+  \t  else\n+  \t    return text.substring(index, end);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getBeforeIndex(int, int)\n+     */\n+    public String getBeforeIndex(int part, int index)\n+    {\n+      if (index < 1 || index >= text.length())\n+        return null;\n+      BreakIterator it = null;\n+      switch (part)\n+      {\n+      \tcase CHARACTER:\n+      \t  return text.substring(index - 1, index);\n+      \tcase WORD:\n+      \t  it = BreakIterator.getWordInstance();\n+      \t  break;\n+      \tcase SENTENCE:\n+      \t  it = BreakIterator.getSentenceInstance();\n+      \t  break;\n+      \tdefault:\n+      \t  return null;\n+      }\n+  \t  it.setText(text);\n+  \t  int end = index;\n+  \t  if (!it.isBoundary(index))\n+  \t    end = it.preceding(index); \n+  \t  // Make sure there was a complete unit.  I.e. if index is in the middle\n+  \t  // of a word, return null if there is no word before that one.\n+  \t  if (end == -1)\n+  \t    return null;\n+  \t  int start = it.preceding(end);\n+  \t  if (start == -1)\n+  \t    return text.substring(0, end);\n+  \t  else\n+  \t    return text.substring(start, end);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getCharacterAttribute(int)\n+     */\n+    public AttributeSet getCharacterAttribute(int index)\n+    {\n+      // FIXME: I suspect this really gets filled in by subclasses.\n+      return null;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getSelectionStart()\n+     */\n+    public int getSelectionStart() {\n+      // TODO Auto-generated method stub\n+      return selectionStart;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getSelectionEnd()\n+     */\n+    public int getSelectionEnd()\n+    {\n+      return selectionEnd;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleText#getSelectedText()\n+     */\n+    public String getSelectedText()\n+    {\n+      if (selectionEnd - selectionStart > 0)\n+        return text.substring(selectionStart, selectionEnd);\n+      else\n+        return null;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see java.awt.event.TextListener#textValueChanged(java.awt.event.TextEvent)\n+     */\n+    public void textValueChanged(TextEvent event)\n+    {\n+      // TODO Auto-generated method stub\n+      \n+    }\n+    \n+  }\n+\n /*************************************************************************/\n \n /*\n@@ -468,5 +689,30 @@ public TextListener[] getTextListeners ()\n   {\n     return (TextListener[]) getListeners (TextListener.class);\n   }\n+\n+  /*******************************/\n+  // Provide AccessibleAWTTextComponent access to several peer functions that\n+  // aren't publicly exposed.\n+  private synchronized int\n+  getIndexAtPoint(Point p)\n+  {\n+    TextComponentPeer tcp = (TextComponentPeer)getPeer();\n+    if (tcp != null)\n+      return tcp.getIndexAtPoint(p.x, p.y);\n+    return -1;\n+  }\n+  \n+  private synchronized Rectangle\n+  getCharacterBounds(int i)\n+  {\n+    TextComponentPeer tcp = (TextComponentPeer)getPeer();\n+    if (tcp != null)\n+      return tcp.getCharacterBounds(i);\n+    return null;\n+  }\n+  \n+  \n+\n+\n } // class TextComponent\n "}, {"sha": "5c84aab0965382781244a26caa2533800feb01c8", "filename": "libjava/java/awt/TextField.java", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextField.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* TextField.java -- A one line text entry field\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,10 +40,13 @@\n \n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n-import java.awt.peer.TextFieldPeer;\n import java.awt.peer.ComponentPeer;\n+import java.awt.peer.TextFieldPeer;\n import java.util.EventListener;\n \n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleStateSet;\n+\n /**\n   * This class implements a single line text entry field widget\n   *\n@@ -517,4 +520,22 @@ public ActionListener[] getActionListeners ()\n   {\n     return (ActionListener[]) getListeners (ActionListener.class);\n   }\n+\n+  protected class AccessibleAWTTextField extends AccessibleAWTTextComponent\n+  {\n+    protected AccessibleAWTTextField()\n+    {\n+    }\n+    \n+    public AccessibleStateSet getAccessibleStateSet()\n+    {\n+      return super.getAccessibleStateSet();\n+    }\n+  }\n+  \n+  public AccessibleContext getAccessibleContext()\n+  {\n+    return new AccessibleAWTTextField();\n+  }\n+\n } // class TextField"}, {"sha": "504572a2d5b3225ae7513a3453291ca02a78beca", "filename": "libjava/java/awt/Toolkit.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FToolkit.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -53,8 +53,8 @@\n import java.awt.image.ImageProducer;\n import java.awt.peer.ButtonPeer;\n import java.awt.peer.CanvasPeer;\n-import java.awt.peer.CheckboxPeer;\n import java.awt.peer.CheckboxMenuItemPeer;\n+import java.awt.peer.CheckboxPeer;\n import java.awt.peer.ChoicePeer;\n import java.awt.peer.DialogPeer;\n import java.awt.peer.FileDialogPeer;\n@@ -63,13 +63,13 @@\n import java.awt.peer.LabelPeer;\n import java.awt.peer.LightweightPeer;\n import java.awt.peer.ListPeer;\n-import java.awt.peer.MenuPeer;\n import java.awt.peer.MenuBarPeer;\n import java.awt.peer.MenuItemPeer;\n+import java.awt.peer.MenuPeer;\n import java.awt.peer.PanelPeer;\n import java.awt.peer.PopupMenuPeer;\n-import java.awt.peer.ScrollbarPeer;\n import java.awt.peer.ScrollPanePeer;\n+import java.awt.peer.ScrollbarPeer;\n import java.awt.peer.TextAreaPeer;\n import java.awt.peer.TextFieldPeer;\n import java.awt.peer.WindowPeer;\n@@ -371,8 +371,8 @@ protected LightweightPeer createComponent(Component target)\n    * should override this method and provide real system colors for the\n    * native GUI platform.\n    *\n-   * @param colors The array to copy the system colors into.\n-   *               It must be at least 26 elements.\n+   * @param systemColors The array to copy the system colors into.\n+   * It must be at least 26 elements.\n    *\n    * @exception HeadlessException If GraphicsEnvironment.isHeadless() is true.\n    *"}, {"sha": "d084bb4350b35cda47913536b4ece7ba602dd740", "filename": "libjava/java/awt/Window.java", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FWindow.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* Window.java --\n-   Copyright (C) 1999, 2000, 2002, 2003 Free Software Foundation\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -48,11 +48,12 @@\n import java.awt.peer.WindowPeer;\n import java.lang.ref.Reference;\n import java.lang.ref.WeakReference;\n-import java.util.Iterator;\n import java.util.EventListener;\n+import java.util.Iterator;\n import java.util.Locale;\n import java.util.ResourceBundle;\n import java.util.Vector;\n+\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n \n@@ -141,7 +142,7 @@ public void windowGainedFocus (WindowEvent event)\n    * Initializes a new instance of <code>Window</code> with the specified\n    * parent.  The window will initially be invisible.\n    *\n-   * @param parent The owning <code>Frame</code> of this window.\n+   * @param owner The owning <code>Frame</code> of this window.\n    *\n    * @exception IllegalArgumentException If the owner's GraphicsConfiguration\n    * is not from a screen device, or if owner is null; this exception is always\n@@ -291,7 +292,7 @@ public void show()\n           initialFocusOwner = policy.getInitialComponent (this);\n \n         if (initialFocusOwner != null)\n-          initialFocusOwner.requestFocusInWindow (false);\n+          initialFocusOwner.requestFocusInWindow ();\n \n         shown = true;\n       }\n@@ -604,7 +605,7 @@ void dispatchEventImpl(AWTEvent e)\n    * <code>processWindowEvent()</code> is called to process the event,\n    * otherwise the superclass version of this method is invoked.\n    *\n-   * @param event The event to process.\n+   * @param evt The event to process.\n    */\n   protected void processEvent(AWTEvent evt)\n   {\n@@ -620,7 +621,7 @@ protected void processEvent(AWTEvent evt)\n    * invoked if it is enabled via <code>enableEvents()</code> or if\n    * a listener has been added.\n    *\n-   * @param event The event to process.\n+   * @param evt The event to process.\n    */\n   protected void processWindowEvent(WindowEvent evt)\n   {\n@@ -710,7 +711,7 @@ void setFocusOwner (Component windowFocusOwner)\n   /**\n    * Post a Java 1.0 event to the event queue.\n    *\n-   * @param event The event to post.\n+   * @param e The event to post.\n    *\n    * @deprecated\n    */"}, {"sha": "5cc526adb7a8bf05998d10d894c59291e098dca1", "filename": "libjava/java/awt/color/ICC_ColorSpace.java", "status": "modified", "additions": 140, "deletions": 27, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* ICC_ColorSpace.java -- the canonical color space implementation\n-   Copyright (C) 2000, 2002 Free Software Foundation\n+   Copyright (C) 2000, 2002, 2004 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -38,9 +38,44 @@\n \n package java.awt.color;\n \n+import gnu.java.awt.color.CieXyzConverter;\n+import gnu.java.awt.color.ClutProfileConverter;\n+import gnu.java.awt.color.ColorSpaceConverter;\n+import gnu.java.awt.color.GrayProfileConverter;\n+import gnu.java.awt.color.GrayScaleConverter;\n+import gnu.java.awt.color.LinearRGBConverter;\n+import gnu.java.awt.color.PyccConverter;\n+import gnu.java.awt.color.RgbProfileConverter;\n+import gnu.java.awt.color.SrgbConverter;\n+\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+\n /**\n- * NEEDS DOCUMENTATION\n+ * ICC_ColorSpace - an implementation of ColorSpace\n+ *\n+ * While an ICC_Profile class abstracts the data in an ICC profile file\n+ * an ICC_ColorSpace performs the color space conversions defined by\n+ * an ICC_Profile instance.\n+ *\n+ * Typically, an ICC_Profile will either be created using getInstance,\n+ * either from the built-in colorspaces, or from an ICC profile file.\n+ * Then a ICC_Colorspace will be used to perform transforms from the\n+ * device colorspace to and from the profile color space.\n+ *\n+ * The PCS used by ColorSpace is CIE XYZ relative a D50 white point.\n+ * (Profiles using a CIE Lab PCS will have their input and output converted\n+ * to D50 CIE XYZ accordingly.\n  *\n+ * Note that a valid profile may not contain transforms in both directions,\n+ * in which case the output may be undefined.\n+ * All built-in colorspaces have bidirectional transforms, but developers\n+ * using an ICC profile file may want to check the profile class using\n+ * the ICC_Profile.getProfileClass() method. Input class profiles are\n+ * guaranteed to have transforms to the PCS, output class profiles are\n+ * guaranteed to have transforms from the PCS to device space.\n+ *\n+ * @author Sven de Marothy\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n  * @since 1.2\n  */\n@@ -81,6 +116,13 @@ public class ICC_ColorSpace extends ColorSpace\n    */\n   private boolean needScaleInit;\n \n+  /**\n+   * Tells us if the PCS is CIE LAB (must be CIEXYZ otherwise)\n+   */\n+  private transient int type;\n+  private transient int nComponents;\n+  private transient ColorSpaceConverter converter;\n+\n   /**\n    * Constructs a new ICC_ColorSpace from an ICC_Profile object.\n    *\n@@ -89,10 +131,18 @@ public class ICC_ColorSpace extends ColorSpace\n    */\n   public ICC_ColorSpace(ICC_Profile profile)\n   {\n-    super(CS_sRGB, profile.getNumComponents());\n+    super(profile.getColorSpaceType(), profile.getNumComponents());\n+\n+    converter = getConverter(profile);\n     thisProfile = profile;\n+    nComponents = profile.getNumComponents();\n+    type = profile.getColorSpaceType();\n+    makeArrays();\n   }\n \n+  /**\n+   * Return the profile\n+   */\n   public ICC_Profile getProfile()\n   {\n     return thisProfile;\n@@ -107,11 +157,7 @@ public ICC_Profile getProfile()\n    */\n   public float[] toRGB(float[] colorvalue)\n   {\n-    if (colorvalue.length < numComponents)\n-      throw new IllegalArgumentException ();\n-      \n-    // FIXME: Always assumes sRGB:\n-    return colorvalue;\n+    return converter.toRGB(colorvalue);\n   }\n \n   /**\n@@ -123,11 +169,7 @@ public float[] toRGB(float[] colorvalue)\n    */\n   public float[] fromRGB(float[] rgbvalue)\n   {\n-    if (rgbvalue.length < 3)\n-      throw new IllegalArgumentException ();\n-    \n-    // FIXME: Always assumes sRGB:\n-    return rgbvalue;\n+    return converter.fromRGB(rgbvalue);\n   }\n \n   /**\n@@ -139,8 +181,7 @@ public float[] fromRGB(float[] rgbvalue)\n    */\n   public float[] toCIEXYZ(float[] colorvalue)\n   {\n-    // FIXME: Not implemented\n-    throw new UnsupportedOperationException();\n+    return converter.toCIEXYZ(colorvalue);\n   }\n \n   /**\n@@ -152,8 +193,12 @@ public float[] toCIEXYZ(float[] colorvalue)\n    */\n   public float[] fromCIEXYZ(float[] colorvalue)\n   {\n-    // FIXME: Not implemented\n-    throw new UnsupportedOperationException();\n+    return converter.fromCIEXYZ(colorvalue);\n+  }\n+\n+  public boolean isCS_sRGB()\n+  {\n+    return converter instanceof SrgbConverter;\n   }\n \n   /**\n@@ -167,9 +212,11 @@ public float[] fromCIEXYZ(float[] colorvalue)\n    */\n   public float getMinValue(int idx)\n   {\n-    if (type == TYPE_Lab && (idx == 1 || idx == 2))\n-      return -128;\n-    if (idx < 0 || idx >= numComponents)\n+    // FIXME: Not 100% certain of this. \n+    if (type == ColorSpace.TYPE_Lab && (idx == 1 || idx == 2))\n+      return -128f;\n+\n+    if (idx < 0 || idx >= nComponents)\n       throw new IllegalArgumentException();\n     return 0;\n   }\n@@ -185,17 +232,83 @@ public float getMinValue(int idx)\n    */\n   public float getMaxValue(int idx)\n   {\n-    if (type == TYPE_XYZ && idx >= 0 && idx <= 2)\n+    if (type == ColorSpace.TYPE_XYZ && idx >= 0 && idx <= 2)\n       return 1 + 32767 / 32768f;\n-    else if (type == TYPE_Lab)\n+    else if (type == ColorSpace.TYPE_Lab)\n       {\n-        if (idx == 0)\n-          return 100;\n-        if (idx == 1 || idx == 2)\n-          return 127;\n+\tif (idx == 0)\n+\t  return 100;\n+\tif (idx == 1 || idx == 2)\n+\t  return 127;\n       }\n-    if (idx < 0 || idx >= numComponents)\n+    if (idx < 0 || idx >= nComponents)\n       throw new IllegalArgumentException();\n     return 1;\n   }\n+\n+  /**\n+   * Returns a colorspace converter suitable for a given profile\n+   */\n+  private ColorSpaceConverter getConverter(ICC_Profile profile)\n+  {\n+    ColorSpaceConverter converter;\n+    switch (profile.isPredefined())\n+      {\n+      case CS_sRGB:\n+\tconverter = new SrgbConverter();\n+\tbreak;\n+      case CS_CIEXYZ:\n+\tconverter = new CieXyzConverter();\n+\tbreak;\n+      case CS_GRAY:\n+\tconverter = new GrayScaleConverter();\n+\tbreak;\n+      case CS_LINEAR_RGB:\n+\tconverter = new LinearRGBConverter();\n+\tbreak;\n+      case CS_PYCC:\n+\tconverter = new PyccConverter();\n+\tbreak;\n+      default:\n+\tif (profile instanceof ICC_ProfileRGB)\n+\t  converter = new RgbProfileConverter((ICC_ProfileRGB) profile);\n+\telse if (profile instanceof ICC_ProfileGray)\n+\t  converter = new GrayProfileConverter((ICC_ProfileGray) profile);\n+\telse\n+\t  converter = new ClutProfileConverter(profile);\n+\tbreak;\n+      }\n+    return converter;\n+  }\n+\n+  /**\n+   * Serialization compatibility requires these variable to be set,\n+   * although we don't use them. Perhaps we should?\n+   */\n+  private void makeArrays()\n+  {\n+    minVal = new float[nComponents];\n+    maxVal = new float[nComponents];\n+\n+    invDiffMinMax = diffMinMax = null;\n+    for (int i = 0; i < nComponents; i++)\n+      {\n+\tminVal[i] = getMinValue(i);\n+\tmaxVal[i] = getMaxValue(i);\n+      }\n+    needScaleInit = true;\n+  }\n+\n+  /**\n+   * Deserializes the object\n+   */\n+  private void readObject(ObjectInputStream s)\n+                   throws IOException, ClassNotFoundException\n+  {\n+    s.defaultReadObject();\n+    // set up objects\n+    converter = getConverter(thisProfile);\n+    nComponents = thisProfile.getNumComponents();\n+    type = thisProfile.getColorSpaceType();\n+  }\n } // class ICC_ColorSpace"}, {"sha": "79aa886ec49c5c4cb1c6d1bb60ea1527ce238095", "filename": "libjava/java/awt/color/ICC_Profile.java", "status": "modified", "additions": 1060, "deletions": 113, "changes": 1173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* ICC_Profile.java -- color space profiling\n-   Copyright (C) 2000, 2002 Free Software Foundation\n+   Copyright (C) 2000, 2002, 2004 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -38,18 +38,47 @@\n \n package java.awt.color;\n \n+import gnu.java.awt.color.ProfileHeader;\n+import gnu.java.awt.color.TagEntry;\n+\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n-import java.io.InputStream;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.ObjectStreamException;\n import java.io.OutputStream;\n import java.io.Serializable;\n+import java.io.UnsupportedEncodingException;\n+import java.nio.ByteBuffer;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n \n /**\n- * STUBBED\n+ * ICC Profile - represents an ICC Color profile.\n+ * The ICC profile format is a standard file format which maps the transform\n+ * from a device color space to a standard Profile Color Space (PCS), which\n+ * can either be CIE L*a*b or CIE XYZ.\n+ * (With the exception of device link profiles which map from one device space\n+ * to another)\n+ *\n+ * ICC profiles calibrated to specific input/output devices are used when color\n+ * fidelity is of importance.\n+ *\n+ * An instance of ICC_Profile can be created using the getInstance() methods,\n+ * either using one of the predefined color spaces enumerated in ColorSpace,\n+ * or from an ICC profile file, or from an input stream.\n+ *\n+ * An ICC_ColorSpace object can then be created to transform color values\n+ * through the profile.\n+ *\n+ * The ICC_Profile class implements the version 2 format specified by\n+ * International Color Consortium Specification ICC.1:1998-09,\n+ * and its addendum ICC.1A:1999-04, April 1999\n+ * (available at www.color.org)\n+ *\n+ * @author Sven de Marothy\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n  * @since 1.2\n  */\n@@ -60,6 +89,9 @@ public class ICC_Profile implements Serializable\n    */\n   private static final long serialVersionUID = -3938515861990936766L;\n \n+  /**\n+   * ICC Profile classes\n+   */\n   public static final int CLASS_INPUT = 0;\n   public static final int CLASS_DISPLAY = 1;\n   public static final int CLASS_OUTPUT = 2;\n@@ -68,92 +100,111 @@ public class ICC_Profile implements Serializable\n   public static final int CLASS_ABSTRACT = 5;\n   public static final int CLASS_NAMEDCOLOR = 6;\n \n-  public static final int icSigXYZData = 1482250784;\n-  public static final int icSigLabData = 1281450528;\n-  public static final int icSigLuvData = 1282766368;\n-  public static final int icSigYCbCrData = 1497588338;\n-  public static final int icSigYxyData = 1501067552;\n-  public static final int icSigRgbData = 1380401696;\n-  public static final int icSigGrayData = 1196573017;\n-  public static final int icSigHsvData = 1213421088;\n-  public static final int icSigHlsData = 1212961568;\n-  public static final int icSigCmykData = 1129142603;\n-  public static final int icSigCmyData = 1129142560;\n-  public static final int icSigSpace2CLR = 843271250;\n-  public static final int icSigSpace3CLR = 860048466;\n-  public static final int icSigSpace4CLR = 876825682;\n-  public static final int icSigSpace5CLR = 893602898;\n-  public static final int icSigSpace6CLR = 910380114;\n-  public static final int icSigSpace7CLR = 927157330;\n-  public static final int icSigSpace8CLR = 943934546;\n-  public static final int icSigSpace9CLR = 960711762;\n-  public static final int icSigSpaceACLR = 1094929490;\n-  public static final int icSigSpaceBCLR = 1111706706;\n-  public static final int icSigSpaceCCLR = 1128483922;\n-  public static final int icSigSpaceDCLR = 1145261138;\n-  public static final int icSigSpaceECLR = 1162038354;\n-  public static final int icSigSpaceFCLR = 1178815570;\n-\n-  public static final int icSigInputClass = 1935896178;\n-  public static final int icSigDisplayClass = 1835955314;\n-  public static final int icSigOutputClass = 1886549106;\n-  public static final int icSigLinkClass = 1818848875;\n-  public static final int icSigAbstractClass = 1633842036;\n-  public static final int icSigColorSpaceClass = 1936744803;\n-  public static final int icSigNamedColorClass = 1852662636;\n+  /**\n+   * ICC Profile class signatures\n+   */\n+  public static final int icSigInputClass = 0x73636e72; // 'scnr'\n+  public static final int icSigDisplayClass = 0x6d6e7472; // 'mntr'\n+  public static final int icSigOutputClass = 0x70727472; // 'prtr'\n+  public static final int icSigLinkClass = 0x6c696e6b; // 'link'\n+  public static final int icSigColorSpaceClass = 0x73706163; // 'spac'\n+  public static final int icSigAbstractClass = 0x61627374; // 'abst'\n+  public static final int icSigNamedColorClass = 0x6e6d636c; // 'nmcl'\n+\n+  /**\n+   * Color space signatures\n+   */\n+  public static final int icSigXYZData = 0x58595A20; // 'XYZ ' \n+  public static final int icSigLabData = 0x4C616220; // 'Lab '\n+  public static final int icSigLuvData = 0x4C757620; // 'Luv '\n+  public static final int icSigYCbCrData = 0x59436272; // 'YCbr'\n+  public static final int icSigYxyData = 0x59787920; // 'Yxy '\n+  public static final int icSigRgbData = 0x52474220; // 'RGB '\n+  public static final int icSigGrayData = 0x47524159; // 'GRAY'\n+  public static final int icSigHsvData = 0x48535620; // 'HSV '\n+  public static final int icSigHlsData = 0x484C5320; // 'HLS '\n+  public static final int icSigCmykData = 0x434D594B; // 'CMYK'\n+  public static final int icSigCmyData = 0x434D5920; // 'CMY '\n+  public static final int icSigSpace2CLR = 0x32434C52; // '2CLR'\n+  public static final int icSigSpace3CLR = 0x33434C52; // '3CLR'\n+  public static final int icSigSpace4CLR = 0x34434C52; // '4CLR'\n+  public static final int icSigSpace5CLR = 0x35434C52; // '5CLR'\n+  public static final int icSigSpace6CLR = 0x36434C52; // '6CLR'\n+  public static final int icSigSpace7CLR = 0x37434C52; // '7CLR'\n+  public static final int icSigSpace8CLR = 0x38434C52; // '8CLR'\n+  public static final int icSigSpace9CLR = 0x39434C52; // '9CLR'\n+  public static final int icSigSpaceACLR = 0x41434C52; // 'ACLR'\n+  public static final int icSigSpaceBCLR = 0x42434C52; // 'BCLR'\n+  public static final int icSigSpaceCCLR = 0x43434C52; // 'CCLR'\n+  public static final int icSigSpaceDCLR = 0x44434C52; // 'DCLR'\n+  public static final int icSigSpaceECLR = 0x45434C52; // 'ECLR'\n+  public static final int icSigSpaceFCLR = 0x46434C52; // 'FCLR'\n \n+  /**\n+   * Rendering intents\n+   */\n   public static final int icPerceptual = 0;\n   public static final int icRelativeColorimetric = 1;\n   public static final int icSaturation = 2;\n   public static final int icAbsoluteColorimetric = 3;\n \n-  public static final int icSigHead = 1751474532;\n-  public static final int icSigAToB0Tag = 1093812784;\n-  public static final int icSigAToB1Tag = 1093812785;\n-  public static final int icSigAToB2Tag = 1093812786;\n-  public static final int icSigBlueColorantTag = 1649957210;\n-  public static final int icSigBlueTRCTag = 1649693251;\n-  public static final int icSigBToA0Tag = 1110589744;\n-  public static final int icSigBToA1Tag = 1110589745;\n-  public static final int icSigBToA2Tag = 1110589746;\n-  public static final int icSigCalibrationDateTimeTag = 1667329140;\n-  public static final int icSigCharTargetTag = 1952543335;\n-  public static final int icSigCopyrightTag = 1668313716;\n-  public static final int icSigCrdInfoTag = 1668441193;\n-  public static final int icSigDeviceMfgDescTag = 1684893284;\n-  public static final int icSigDeviceModelDescTag = 1684890724;\n-  public static final int icSigDeviceSettingsTag = 1684371059;\n-  public static final int icSigGamutTag = 1734438260;\n-  public static final int icSigGrayTRCTag = 1800688195;\n-  public static final int icSigGreenColorantTag = 1733843290;\n-  public static final int icSigGreenTRCTag = 1733579331;\n-  public static final int icSigLuminanceTag = 1819635049;\n-  public static final int icSigMeasurementTag = 1835360627;\n-  public static final int icSigMediaBlackPointTag = 1651208308;\n-  public static final int icSigMediaWhitePointTag = 2004119668;\n-  public static final int icSigNamedColor2Tag = 1852009522;\n-  public static final int icSigOutputResponseTag = 1919251312;\n-  public static final int icSigPreview0Tag = 1886545200;\n-  public static final int icSigPreview1Tag = 1886545201;\n-  public static final int icSigPreview2Tag = 1886545202;\n-  public static final int icSigProfileDescriptionTag = 1684370275;\n-  public static final int icSigProfileSequenceDescTag = 1886610801;\n-  public static final int icSigPs2CRD0Tag = 1886610480;\n-  public static final int icSigPs2CRD1Tag = 1886610481;\n-  public static final int icSigPs2CRD2Tag = 1886610482;\n-  public static final int icSigPs2CRD3Tag = 1886610483;\n-  public static final int icSigPs2CSATag = 1886597747;\n-  public static final int icSigPs2RenderingIntentTag = 1886597737;\n-  public static final int icSigRedColorantTag = 1918392666;\n-  public static final int icSigRedTRCTag = 1918128707;\n-  public static final int icSigScreeningDescTag = 1935897188;\n-  public static final int icSigScreeningTag = 1935897198;\n-  public static final int icSigTechnologyTag = 1952801640;\n-  public static final int icSigUcrBgTag = 1650877472;\n-  public static final int icSigViewingCondDescTag = 1987405156;\n-  public static final int icSigViewingConditionsTag = 1986618743;\n-  public static final int icSigChromaticityTag = 1667789421;\n+  /**\n+   * Tag signatures\n+   */\n+  public static final int icSigAToB0Tag = 0x41324230; // 'A2B0' \n+  public static final int icSigAToB1Tag = 0x41324231; // 'A2B1' \n+  public static final int icSigAToB2Tag = 0x41324232; // 'A2B2' \n+  public static final int icSigBlueColorantTag = 0x6258595A; // 'bXYZ' \n+  public static final int icSigBlueTRCTag = 0x62545243; // 'bTRC' \n+  public static final int icSigBToA0Tag = 0x42324130; // 'B2A0' \n+  public static final int icSigBToA1Tag = 0x42324131; // 'B2A1' \n+  public static final int icSigBToA2Tag = 0x42324132; // 'B2A2' \n+  public static final int icSigCalibrationDateTimeTag = 0x63616C74; // 'calt' \n+  public static final int icSigCharTargetTag = 0x74617267; // 'targ' \n+  public static final int icSigCopyrightTag = 0x63707274; // 'cprt' \n+  public static final int icSigCrdInfoTag = 0x63726469; // 'crdi' \n+  public static final int icSigDeviceMfgDescTag = 0x646D6E64; // 'dmnd' \n+  public static final int icSigDeviceModelDescTag = 0x646D6464; // 'dmdd' \n+  public static final int icSigDeviceSettingsTag = 0x64657673; // 'devs' \n+  public static final int icSigGamutTag = 0x67616D74; // 'gamt' \n+  public static final int icSigGrayTRCTag = 0x6b545243; // 'kTRC' \n+  public static final int icSigGreenColorantTag = 0x6758595A; // 'gXYZ' \n+  public static final int icSigGreenTRCTag = 0x67545243; // 'gTRC' \n+  public static final int icSigLuminanceTag = 0x6C756d69; // 'lumi' \n+  public static final int icSigMeasurementTag = 0x6D656173; // 'meas' \n+  public static final int icSigMediaBlackPointTag = 0x626B7074; // 'bkpt' \n+  public static final int icSigMediaWhitePointTag = 0x77747074; // 'wtpt' \n+  public static final int icSigNamedColor2Tag = 0x6E636C32; // 'ncl2' \n+  public static final int icSigOutputResponseTag = 0x72657370; // 'resp' \n+  public static final int icSigPreview0Tag = 0x70726530; // 'pre0' \n+  public static final int icSigPreview1Tag = 0x70726531; // 'pre1' \n+  public static final int icSigPreview2Tag = 0x70726532; // 'pre2' \n+  public static final int icSigProfileDescriptionTag = 0x64657363; // 'desc' \n+  public static final int icSigProfileSequenceDescTag = 0x70736571; // 'pseq' \n+  public static final int icSigPs2CRD0Tag = 0x70736430; // 'psd0' \n+  public static final int icSigPs2CRD1Tag = 0x70736431; // 'psd1' \n+  public static final int icSigPs2CRD2Tag = 0x70736432; // 'psd2' \n+  public static final int icSigPs2CRD3Tag = 0x70736433; // 'psd3' \n+  public static final int icSigPs2CSATag = 0x70733273; // 'ps2s' \n+  public static final int icSigPs2RenderingIntentTag = 0x70733269; // 'ps2i' \n+  public static final int icSigRedColorantTag = 0x7258595A; // 'rXYZ' \n+  public static final int icSigRedTRCTag = 0x72545243; // 'rTRC' \n+  public static final int icSigScreeningDescTag = 0x73637264; // 'scrd' \n+  public static final int icSigScreeningTag = 0x7363726E; // 'scrn' \n+  public static final int icSigTechnologyTag = 0x74656368; // 'tech' \n+  public static final int icSigUcrBgTag = 0x62666420; // 'bfd ' \n+  public static final int icSigViewingCondDescTag = 0x76756564; // 'vued' \n+  public static final int icSigViewingConditionsTag = 0x76696577; // 'view' \n+  public static final int icSigChromaticityTag = 0x6368726D; // 'chrm'\n \n+  /**\n+   * Non-ICC tag 'head' for use in retrieving the header with getData()\n+   */\n+  public static final int icSigHead = 0x68656164;\n+\n+  /**\n+   * Header offsets\n+   */\n   public static final int icHdrSize = 0;\n   public static final int icHdrCmmId = 4;\n   public static final int icHdrVersion = 8;\n@@ -171,129 +222,1025 @@ public class ICC_Profile implements Serializable\n   public static final int icHdrIlluminant = 68;\n   public static final int icHdrCreator = 80;\n \n+  /**\n+   *\n+   */\n   public static final int icTagType = 0;\n   public static final int icTagReserved = 4;\n   public static final int icCurveCount = 8;\n   public static final int icCurveData = 12;\n-\n   public static final int icXYZNumberX = 8;\n \n+  /**\n+   * offset of the Tag table\n+   */\n+  private static final int tagTableOffset = 128;\n+\n   /**\n    * @serial\n    */\n-  final int iccProfileSerializedDataVersion = 1;\n+  private static final int iccProfileSerializedDataVersion = 1;\n+\n+  /**\n+   * Constants related to generating profiles for\n+   * built-in colorspace profiles\n+   */\n+  /**\n+   * Copyright notice to stick into built-in-profile files.\n+   */\n+  private static final String copyrightNotice = \"Generated by GNU Classpath.\";\n+\n+  /**\n+   * Resolution of the TRC to use for predefined profiles.\n+   * 1024 should suffice.\n+   */\n+  private static final int TRC_POINTS = 1024;\n+\n+  /**\n+   * CIE 1931 D50 white point (in Lab coordinates)\n+   */\n+  private static final float[] D50 = { 0.96422f, 1.00f, 0.82521f };\n+\n+  /**\n+   * Color space profile ID\n+   * Set to the predefined profile class (e.g. CS_sRGB) if a predefined\n+   * color space is used, set to -1 otherwise.\n+   * (or if the profile has been modified)\n+   */\n+  private transient int profileID;\n+\n+  /**\n+   * The profile header data\n+   */\n+  private transient ProfileHeader header;\n \n-  transient int profileID;\n+  /**\n+   * A hashtable containing the profile tags as TagEntry objects\n+   */\n+  private transient Hashtable tagTable;\n \n+  /**\n+   * Contructor for predefined colorspaces\n+   */\n   ICC_Profile(int profileID)\n   {\n-    this.profileID = profileID;\n+    header = null;\n+    tagTable = null;\n+    createProfile(profileID);\n+  }\n+\n+  /**\n+   * Constructs an ICC_Profile from a header and a table of loaded tags.\n+   */\n+  ICC_Profile(ProfileHeader h, Hashtable tags) throws IllegalArgumentException\n+  {\n+    header = h;\n+    tagTable = tags;\n+    profileID = -1; // Not a predefined color space\n+  }\n+\n+  /**\n+   * Constructs an ICC_Profile from a byte array of data.\n+   */\n+  ICC_Profile(byte[] data) throws IllegalArgumentException\n+  {\n+    // get header and verify it\n+    header = new ProfileHeader(data);\n+    header.verifyHeader(data.length);\n+    tagTable = createTagTable(data);\n+    profileID = -1; // Not a predefined color space\n   }\n \n+  /**\n+   * Free up the used memory.\n+   */\n   protected void finalize()\n   {\n-    // XXX What resources should we free?\n+    header = null;\n+    tagTable = null;\n   }\n \n+  /**\n+   * Returns an ICC_Profile instance from a byte array of profile data.\n+   *\n+   * An instance of the specialized classes ICC_ProfileRGB or ICC_ProfileGray\n+   * may be returned if appropriate.\n+   *\n+   * @throws IllegalArgumentException if the profile data is an invalid\n+   * v2 profile.\n+   *\n+   * @param data - the profile data\n+   * @return An ICC_Profile object\n+   */\n   public static ICC_Profile getInstance(byte[] data)\n   {\n-    throw new Error(\"not implemented\");\n+    ProfileHeader header = new ProfileHeader(data);\n+\n+    // verify it as a correct ICC header, including size\n+    header.verifyHeader(data.length);\n+\n+    Hashtable tags = createTagTable(data);\n+\n+    if (isRGBProfile(header, tags))\n+      return new ICC_ProfileRGB(data);\n+    if (isGrayProfile(header, tags))\n+      return new ICC_ProfileGray(data);\n+\n+    return new ICC_Profile(header, tags);\n   }\n \n+  /**\n+   * Returns an predefined ICC_Profile instance.\n+   *\n+   * This will construct an ICC_Profile instance from one of the predefined\n+   * color spaces in the ColorSpace class. (e.g. CS_sRGB, CS_GRAY, etc)\n+   *\n+   * An instance of the specialized classes ICC_ProfileRGB or ICC_ProfileGray\n+   * may be returned if appropriate.\n+   *\n+   * @return An ICC_Profile object\n+   */\n   public static ICC_Profile getInstance(int cspace)\n   {\n+    if (cspace == ColorSpace.CS_sRGB || cspace == ColorSpace.CS_LINEAR_RGB)\n+      return new ICC_ProfileRGB(cspace);\n+    if (cspace == ColorSpace.CS_GRAY)\n+      return new ICC_ProfileGray(cspace);\n     return new ICC_Profile(cspace);\n   }\n \n-  public static ICC_Profile getInstance(String filename) throws IOException\n+  /**\n+   * Returns an ICC_Profile instance from an ICC Profile file.\n+   *\n+   * An instance of the specialized classes ICC_ProfileRGB or ICC_ProfileGray\n+   * may be returned if appropriate.\n+   *\n+   * @throws IllegalArgumentException if the profile data is an invalid\n+   * v2 profile.\n+   * @throws IOException if the file could not be read.\n+   *\n+   * @param filename - the file name of the profile file.\n+   * @return An ICC_Profile object\n+   */\n+  public static ICC_Profile getInstance(String filename)\n+                                 throws IOException\n   {\n     return getInstance(new FileInputStream(filename));\n   }\n \n-  public static ICC_Profile getInstance(InputStream in) throws IOException\n+  /**\n+   * Returns an ICC_Profile instance from an InputStream.\n+   *\n+   * This method can be used for reading ICC profiles embedded in files\n+   * which support this. (JPEG and SVG for instance).\n+   *\n+   * The stream is treated in the following way: The profile header\n+   * (128 bytes) is read first, and the header is validated. If the profile\n+   * header is valid, it will then attempt to read the rest of the profile\n+   * from the stream. The stream is not closed after reading.\n+   *\n+   * An instance of the specialized classes ICC_ProfileRGB or ICC_ProfileGray\n+   * may be returned if appropriate.\n+   *\n+   * @throws IllegalArgumentException if the profile data is an invalid\n+   * v2 profile.\n+   * @throws IOException if the stream could not be read.\n+   *\n+   * @param in - the input stream to read the profile from.\n+   * @return An ICC_Profile object\n+   */\n+  public static ICC_Profile getInstance(InputStream in)\n+                                 throws IOException\n   {\n-    throw new Error(\"not implemented\");\n+    // read the header\n+    byte[] headerData = new byte[ProfileHeader.HEADERSIZE];\n+    if (in.read(headerData) != ProfileHeader.HEADERSIZE)\n+      throw new IllegalArgumentException(\"Invalid profile header\");\n+\n+    ProfileHeader header = new ProfileHeader(headerData);\n+\n+    // verify it as a correct ICC header, but do not verify the\n+    // size as we are reading from a stream.\n+    header.verifyHeader(-1);\n+\n+    // get the size\n+    byte[] data = new byte[header.getSize()];\n+    System.arraycopy(headerData, 0, data, 0, ProfileHeader.HEADERSIZE);\n+\n+    // read the rest\n+    if (in.read(data, ProfileHeader.HEADERSIZE,\n+                header.getSize() - ProfileHeader.HEADERSIZE) != header.getSize()\n+        - ProfileHeader.HEADERSIZE)\n+      throw new IOException(\"Incorrect profile size\");\n+\n+    return getInstance(data);\n   }\n \n+  /**\n+   * Returns the major version number\n+   */\n   public int getMajorVersion()\n   {\n-    throw new Error(\"not implemented\");\n+    return header.getMajorVersion();\n   }\n \n+  /**\n+   * Returns the minor version number.\n+   *\n+   * Only the least-significant byte contains data, in BCD form:\n+   * the least-significant nibble is the BCD bug fix revision,\n+   * the most-significant nibble is the BCD minor revision number.\n+   *\n+   * (E.g. For a v2.1.0 profile this will return <code>0x10</code>)\n+   */\n   public int getMinorVersion()\n   {\n-    throw new Error(\"not implemented\");\n+    return header.getMinorVersion();\n   }\n \n+  /**\n+   * Returns the device class of this profile,\n+   *\n+   * (E.g. CLASS_INPUT for a scanner profile,\n+   * CLASS_OUTPUT for a printer)\n+   */\n   public int getProfileClass()\n   {\n-    throw new Error(\"not implemented\");\n+    return header.getProfileClass();\n   }\n \n+  /**\n+   * Returns the color space of this profile, in terms\n+   * of the color space constants defined in ColorSpace.\n+   * (For example, it may be a ColorSpace.TYPE_RGB)\n+   */\n   public int getColorSpaceType()\n   {\n-    throw new Error(\"not implemented\");\n+    return header.getColorSpace();\n   }\n \n+  /**\n+   * Returns the color space of this profile's Profile Connection Space (OCS)\n+   *\n+   * In terms of the color space constants defined in ColorSpace.\n+   * This may be TYPE_XYZ or TYPE_Lab\n+   */\n   public int getPCSType()\n   {\n-    throw new Error(\"not implemented\");\n+    return header.getProfileColorSpace();\n   }\n \n+  /**\n+   * Writes the profile data to an ICC profile file.\n+   * @param filename - The name of the file to write\n+   * @throws IOException if the write failed.\n+   */\n   public void write(String filename) throws IOException\n   {\n-    write(new FileOutputStream(filename));\n+    FileOutputStream out = new FileOutputStream(filename);\n+    write(out);\n+    out.flush();\n+    out.close();\n   }\n \n+  /**\n+   * Writes the profile data in ICC profile file-format to a stream.\n+   * This is useful for embedding ICC profiles in file formats which\n+   * support this (such as JPEG and SVG).\n+   *\n+   * The stream is not closed after writing.\n+   * @param out - The outputstream to which the profile data should be written\n+   * @throws IOException if the write failed.\n+   */\n   public void write(OutputStream out) throws IOException\n   {\n-    throw new Error(\"not implemented\");\n+    out.write(getData());\n   }\n \n+  /**\n+   * Returns the data corresponding to this ICC_Profile as a byte array.\n+   *\n+   * @return The data in a byte array,\n+   * where the first element corresponds to first byte of the profile file.\n+   */\n   public byte[] getData()\n   {\n-    throw new Error(\"not implemented\");\n+    int size = getSize();\n+    byte[] data = new byte[size];\n+\n+    // Header\n+    System.arraycopy(header.getData(size), 0, data, 0, ProfileHeader.HEADERSIZE);\n+    // # of tags\n+    byte[] tt = getTagTable();\n+    System.arraycopy(tt, 0, data, ProfileHeader.HEADERSIZE, tt.length);\n+\n+    Enumeration e = tagTable.elements();\n+    while (e.hasMoreElements())\n+      {\n+\tTagEntry tag = (TagEntry) e.nextElement();\n+\tSystem.arraycopy(tag.getData(), 0, \n+\t\t\t data, tag.getOffset(), tag.getSize());\n+      }\n+    return data;\n   }\n \n+  /**\n+   * Returns the ICC profile tag data\n+   * The non ICC-tag icSigHead is also permitted to request the header data.\n+   *\n+   * @param tagSignature The ICC signature of the requested tag\n+   * @return A byte array containing the tag data\n+   */\n   public byte[] getData(int tagSignature)\n   {\n-    throw new Error(\"not implemented\");\n+    if (tagSignature == icSigHead)\n+      return header.getData(getSize());\n+\n+    TagEntry t = (TagEntry) tagTable.get(TagEntry.tagHashKey(tagSignature));\n+    if (t == null)\n+      return null;\n+    return t.getData();\n   }\n \n+  /**\n+   * Sets the ICC profile tag data.\n+   *\n+   * Note that an ICC profile can only contain one tag of each type, if\n+   * a tag already exists with the given signature, it is replaced.\n+   *\n+   * @param tagSignature - The signature of the tag to set\n+   * @param data - A byte array containing the tag data\n+   */\n   public void setData(int tagSignature, byte[] data)\n   {\n-    throw new Error(\"not implemented\");\n+    profileID = -1; // Not a predefined color space if modified.\n+\n+    if (tagSignature == icSigHead)\n+      header = new ProfileHeader(data);\n+    else\n+      {\n+\tTagEntry t = new TagEntry(tagSignature, data);\n+\ttagTable.put(t.hashKey(), t);\n+      }\n   }\n \n+  /**\n+   * Get the number of components in the profile's device color space.\n+   */\n   public int getNumComponents()\n   {\n-    switch (profileID)\n+    int[] lookup = \n+                   {\n+                     ColorSpace.TYPE_RGB, 3, ColorSpace.TYPE_CMY, 3,\n+                     ColorSpace.TYPE_CMYK, 4, ColorSpace.TYPE_GRAY, 1,\n+                     ColorSpace.TYPE_YCbCr, 3, ColorSpace.TYPE_XYZ, 3,\n+                     ColorSpace.TYPE_Lab, 3, ColorSpace.TYPE_HSV, 3,\n+                     ColorSpace.TYPE_2CLR, 2, ColorSpace.TYPE_Luv, 3,\n+                     ColorSpace.TYPE_Yxy, 3, ColorSpace.TYPE_HLS, 3,\n+                     ColorSpace.TYPE_3CLR, 3, ColorSpace.TYPE_4CLR, 4,\n+                     ColorSpace.TYPE_5CLR, 5, ColorSpace.TYPE_6CLR, 6,\n+                     ColorSpace.TYPE_7CLR, 7, ColorSpace.TYPE_8CLR, 8,\n+                     ColorSpace.TYPE_9CLR, 9, ColorSpace.TYPE_ACLR, 10,\n+                     ColorSpace.TYPE_BCLR, 11, ColorSpace.TYPE_CCLR, 12,\n+                     ColorSpace.TYPE_DCLR, 13, ColorSpace.TYPE_ECLR, 14,\n+                     ColorSpace.TYPE_FCLR, 15\n+                   };\n+    for (int i = 0; i < lookup.length; i += 2)\n+      if (header.getColorSpace() == lookup[i])\n+\treturn lookup[i + 1];\n+    return 3; // should never happen.\n+  }\n+\n+  /**\n+   * After deserializing we must determine if the class we want\n+   * is really one of the more specialized ICC_ProfileRGB or\n+   * ICC_ProfileGray classes.\n+   */\n+  protected Object readResolve() throws ObjectStreamException\n+  {\n+    if (isRGBProfile(header, tagTable))\n+      return new ICC_ProfileRGB(getData());\n+    if (isGrayProfile(header, tagTable))\n+      return new ICC_ProfileGray(getData());\n+    return this;\n+  }\n+\n+  /**\n+   * Deserializes an instance\n+   */\n+  private void readObject(ObjectInputStream s)\n+                   throws IOException, ClassNotFoundException\n+  {\n+    s.defaultReadObject();\n+    String predef = (String) s.readObject();\n+    byte[] data = (byte[]) s.readObject();\n+\n+    if (data != null)\n+      {\n+\theader = new ProfileHeader(data);\n+\ttagTable = createTagTable(data);\n+\tprofileID = -1; // Not a predefined color space\n+      }\n+\n+    if (predef != null)\n+      {\n+\tpredef = predef.intern();\n+\tif (predef.equals(\"CS_sRGB\"))\n+\t  createProfile(ColorSpace.CS_sRGB);\n+\tif (predef.equals(\"CS_LINEAR_RGB\"))\n+\t  createProfile(ColorSpace.CS_LINEAR_RGB);\n+\tif (predef.equals(\"CS_CIEXYZ\"))\n+\t  createProfile(ColorSpace.CS_CIEXYZ);\n+\tif (predef.equals(\"CS_GRAY\"))\n+\t  createProfile(ColorSpace.CS_GRAY);\n+\tif (predef.equals(\"CS_PYCC\"))\n+\t  createProfile(ColorSpace.CS_PYCC);\n+      }\n+  }\n+\n+  /**\n+   * Serializes an instance\n+   * The format is a String and a byte array,\n+   * The string is non-null if the instance is one of the built-in profiles.\n+   * Otherwise the byte array is non-null and represents the profile data.\n+   */\n+  private void writeObject(ObjectOutputStream s) throws IOException\n+  {\n+    s.defaultWriteObject();\n+    if (profileID == ColorSpace.CS_sRGB)\n+      s.writeObject(\"CS_sRGB\");\n+    else if (profileID == ColorSpace.CS_LINEAR_RGB)\n+      s.writeObject(\"CS_LINEAR_RGB\");\n+    else if (profileID == ColorSpace.CS_CIEXYZ)\n+      s.writeObject(\"CS_CIEXYZ\");\n+    else if (profileID == ColorSpace.CS_GRAY)\n+      s.writeObject(\"CS_GRAY\");\n+    else if (profileID == ColorSpace.CS_PYCC)\n+      s.writeObject(\"CS_PYCC\");\n+    else\n+      {\n+\ts.writeObject(null); // null string\n+\ts.writeObject(getData()); // data\n+\treturn;\n+      }\n+    s.writeObject(null); // null data\n+  }\n+\n+  /**\n+   * Sorts a ICC profile byte array into TagEntry objects stored in\n+   * a hash table.\n+   */\n+  private static Hashtable createTagTable(byte[] data)\n+                                   throws IllegalArgumentException\n+  {\n+    ByteBuffer buf = ByteBuffer.wrap(data);\n+    int nTags = buf.getInt(tagTableOffset);\n+\n+    Hashtable tagTable = new Hashtable();\n+    for (int i = 0; i < nTags; i++)\n+      {\n+\tTagEntry te = new TagEntry(buf.getInt(tagTableOffset\n+\t                                      + i * TagEntry.entrySize + 4),\n+\t                           buf.getInt(tagTableOffset\n+\t                                      + i * TagEntry.entrySize + 8),\n+\t                           buf.getInt(tagTableOffset\n+\t                                      + i * TagEntry.entrySize + 12),\n+\t                           data);\n+\n+\tif (tagTable.put(te.hashKey(), te) != null)\n+\t  throw new IllegalArgumentException(\"Duplicate tag in profile:\" + te);\n+      }\n+    return tagTable;\n+  }\n+\n+  /**\n+   * Returns the total size of the padded, stored data\n+   * Note: Tags must be stored on 4-byte aligned offsets.\n+   */\n+  private int getSize()\n+  {\n+    int totalSize = ProfileHeader.HEADERSIZE; // size of header\n+\n+    int tagTableSize = 4 + tagTable.size() * TagEntry.entrySize; // size of tag table\t\n+    if ((tagTableSize & 0x0003) != 0)\n+      tagTableSize += 4 - (tagTableSize & 0x0003); // pad\n+    totalSize += tagTableSize;\n+\n+    Enumeration e = tagTable.elements();\n+    while (e.hasMoreElements())\n+      { // tag data\n+\tint tagSize = ((TagEntry) e.nextElement()).getSize();\n+\tif ((tagSize & 0x0003) != 0)\n+\t  tagSize += 4 - (tagSize & 0x0003); // pad\n+\ttotalSize += tagSize;\n+      }\n+    return totalSize;\n+  }\n+\n+  /**\n+   * Generates the tag index table\n+   */\n+  private byte[] getTagTable()\n+  {\n+    int tagTableSize = 4 + tagTable.size() * TagEntry.entrySize;\n+    if ((tagTableSize & 0x0003) != 0)\n+      tagTableSize += 4 - (tagTableSize & 0x0003); // pad \n+\n+    int offset = 4;\n+    int tagOffset = ProfileHeader.HEADERSIZE + tagTableSize;\n+    ByteBuffer buf = ByteBuffer.allocate(tagTableSize);\n+    buf.putInt(tagTable.size()); // number of tags\n+\n+    Enumeration e = tagTable.elements();\n+    while (e.hasMoreElements())\n+      {\n+\tTagEntry tag = (TagEntry) e.nextElement();\n+\tbuf.putInt(offset, tag.getSignature());\n+\tbuf.putInt(offset + 4, tagOffset);\n+\tbuf.putInt(offset + 8, tag.getSize());\n+\ttag.setOffset(tagOffset);\n+\tint tagSize = tag.getSize();\n+\tif ((tagSize & 0x0003) != 0)\n+\t  tagSize += 4 - (tagSize & 0x0003); // pad\t    \n+\ttagOffset += tagSize;\n+\toffset += 12;\n+      }\n+    return buf.array();\n+  }\n+\n+  /**\n+   * Returns if the criteria for an ICC_ProfileRGB are met.\n+   * This means:\n+   * Color space is TYPE_RGB\n+   * (r,g,b)ColorantTags included\n+   * (r,g,b)TRCTags included\n+   * mediaWhitePointTag included\n+   */\n+  private static boolean isRGBProfile(ProfileHeader header, Hashtable tags)\n+  {\n+    if (header.getColorSpace() != ColorSpace.TYPE_RGB)\n+      return false;\n+    if (tags.get(TagEntry.tagHashKey(icSigRedColorantTag)) == null)\n+      return false;\n+    if (tags.get(TagEntry.tagHashKey(icSigGreenColorantTag)) == null)\n+      return false;\n+    if (tags.get(TagEntry.tagHashKey(icSigBlueColorantTag)) == null)\n+      return false;\n+    if (tags.get(TagEntry.tagHashKey(icSigRedTRCTag)) == null)\n+      return false;\n+    if (tags.get(TagEntry.tagHashKey(icSigGreenTRCTag)) == null)\n+      return false;\n+    if (tags.get(TagEntry.tagHashKey(icSigBlueTRCTag)) == null)\n+      return false;\n+    return (tags.get(TagEntry.tagHashKey(icSigMediaWhitePointTag)) != null);\n+  }\n+\n+  /**\n+   * Returns if the criteria for an ICC_ProfileGray are met.\n+   * This means:\n+   * Colorspace is TYPE_GRAY\n+   * grayTRCTag included\n+   * mediaWhitePointTag included\n+   */\n+  private static boolean isGrayProfile(ProfileHeader header, Hashtable tags)\n+  {\n+    if (header.getColorSpace() != ColorSpace.TYPE_GRAY)\n+      return false;\n+    if (tags.get(TagEntry.tagHashKey(icSigGrayTRCTag)) == null)\n+      return false;\n+    return (tags.get(TagEntry.tagHashKey(icSigMediaWhitePointTag)) != null);\n+  }\n+\n+  /**\n+   * Returns curve data for a 'curv'-type tag\n+   * If it's a gamma curve, a single entry will be returned with the\n+   * gamma value (including 1.0 for linear response)\n+   * Otherwise the TRC table is returned.\n+   *\n+   * (Package private - used by ICC_ProfileRGB and ICC_ProfileGray)\n+   */\n+  short[] getCurve(int signature)\n+  {\n+    byte[] data = getData(signature);\n+    short[] curve;\n+\n+    // can't find tag?\n+    if (data == null)\n+      return null;\n+\n+    // not an curve type tag?\n+    ByteBuffer buf = ByteBuffer.wrap(data);\n+    if (buf.getInt(0) != 0x63757276) // 'curv' type\n+      return null;\n+    int count = buf.getInt(8);\n+    if (count == 0)\n+      {\n+\tcurve = new short[1];\n+\tcurve[0] = 0x0100; // 1.00 in u8fixed8\n+\treturn curve;\n+      }\n+    if (count == 1)\n+      {\n+\tcurve = new short[1];\n+\tcurve[0] = buf.getShort(12); // other u8fixed8 gamma\n+\treturn curve;\n+      }\n+    curve = new short[count];\n+    for (int i = 0; i < count; i++)\n+      curve[i] = buf.getShort(12 + i * 2);\n+    return curve;\n+  }\n+\n+  /**\n+   * Returns XYZ tristimulus values for an 'XYZ ' type tag\n+   * @return the XYZ values, or null if the tag was not an 'XYZ ' type tag.\n+   *\n+   * (Package private - used by ICC_ProfileXYZ and ICC_ProfileGray)\n+   */\n+  float[] getXYZData(int signature)\n+  {\n+    byte[] data = getData(signature);\n+\n+    // can't find tag?\n+    if (data == null)\n+      return null;\n+\n+    // not an XYZData type tag?\n+    ByteBuffer buf = ByteBuffer.wrap(data);\n+    if (buf.getInt(0) != icSigXYZData) // 'XYZ ' type\n+      return null;\n+\n+    float[] point = new float[3];\n+\n+    // get the X,Y,Z tristimulus values\n+    point[0] = ((float) buf.getInt(8)) / 65536f;\n+    point[1] = ((float) buf.getInt(12)) / 65536f;\n+    point[2] = ((float) buf.getInt(16)) / 65536f;\n+    return point;\n+  }\n+\n+  /**\n+   * Returns the profile ID if it's a predefined profile\n+   * Or -1 for a profile loaded from an ICC profile\n+   *\n+   * (Package private - used by ICC_ColorSpace)\n+   */\n+  int isPredefined()\n+  {\n+    return profileID;\n+  }\n+\n+  /**\n+   * Creates a tag of XYZ-value type.\n+   */\n+  private byte[] makeXYZData(float[] values)\n+  {\n+    ByteBuffer buf = ByteBuffer.allocate(20);\n+    buf.putInt(0, icSigXYZData); // 'XYZ '\n+    buf.putInt(4, 0);\n+    buf.putInt(8, (int) (values[0] * 65536.0));\n+    buf.putInt(12, (int) (values[1] * 65536.0));\n+    buf.putInt(16, (int) (values[2] * 65536.0));\n+    return buf.array();\n+  }\n+\n+  /**\n+   * Creates a tag of text type\n+   */\n+  private byte[] makeTextTag(String text)\n+  {\n+    int length = text.length();\n+    ByteBuffer buf = ByteBuffer.allocate(8 + length + 1);\n+    byte[] data;\n+    try\n+      {\n+\tdata = text.getBytes(\"US-ASCII\");\n+      }\n+    catch (UnsupportedEncodingException e)\n+      {\n+\tdata = new byte[length]; // shouldn't happen\n+      }\n+\n+    buf.putInt(0, (int) 0x74657874); // 'text'\n+    buf.putInt(4, 0);\n+    for (int i = 0; i < length; i++)\n+      buf.put(8 + i, data[i]);\n+    buf.put(8 + length, (byte) 0); // null-terminate\n+    return buf.array();\n+  }\n+\n+  /**\n+   * Creates a tag of textDescriptionType\n+   */\n+  private byte[] makeDescTag(String text)\n+  {\n+    int length = text.length();\n+    ByteBuffer buf = ByteBuffer.allocate(90 + length + 1);\n+    buf.putInt(0, (int) 0x64657363); // 'desc'\n+    buf.putInt(4, 0); // reserved \n+    buf.putInt(8, length + 1); // ASCII length, including null termination\n+    byte[] data;\n+\n+    try\n+      {\n+\tdata = text.getBytes(\"US-ASCII\");\n+      }\n+    catch (UnsupportedEncodingException e)\n+      {\n+\tdata = new byte[length]; // shouldn't happen\n+      }\n+\n+    for (int i = 0; i < length; i++)\n+      buf.put(12 + i, data[i]);\n+    buf.put(12 + length, (byte) 0); // null-terminate\n+\n+    for (int i = 0; i < 39; i++)\n+      buf.putShort(13 + length + (i * 2), (short) 0); // 78 bytes we can ignore\n+\n+    return buf.array();\n+  }\n+\n+  /**\n+   * Creates a tag of TRC type (linear curve)\n+   */\n+  private byte[] makeTRC()\n+  {\n+    ByteBuffer buf = ByteBuffer.allocate(12);\n+    buf.putInt(0, 0x63757276); // 'curv' type\n+    buf.putInt(4, 0); // reserved\n+    buf.putInt(8, 0);\n+    return buf.array();\n+  }\n+\n+  /**\n+   * Creates a tag of TRC type (single gamma value)\n+   */\n+  private byte[] makeTRC(float gamma)\n+  {\n+    short gammaValue = (short) (gamma * 256f);\n+    ByteBuffer buf = ByteBuffer.allocate(14);\n+    buf.putInt(0, 0x63757276); // 'curv' type\n+    buf.putInt(4, 0); // reserved\n+    buf.putInt(8, 1);\n+    buf.putShort(12, gammaValue); // 1.00 in u8fixed8\n+    return buf.array();\n+  }\n+\n+  /**\n+   * Creates a tag of TRC type (TRC curve points)\n+   */\n+  private byte[] makeTRC(float[] trc)\n+  {\n+    ByteBuffer buf = ByteBuffer.allocate(12 + 2 * trc.length);\n+    buf.putInt(0, 0x63757276); // 'curv' type\n+    buf.putInt(4, 0); // reserved\n+    buf.putInt(8, trc.length); // number of points\n+\n+    // put the curve values \n+    for (int i = 0; i < trc.length; i++)\n+      buf.putShort(12 + i * 2, (short) (trc[i] * 65535f));\n+\n+    return buf.array();\n+  }\n+\n+  /**\n+   * Creates an identity color lookup table.\n+   */\n+  private byte[] makeIdentityClut()\n+  {\n+    final int nIn = 3;\n+    final int nOut = 3;\n+    final int nInEntries = 256;\n+    final int nOutEntries = 256;\n+    final int gridpoints = 16;\n+\n+    // gridpoints**nIn\n+    final int clutSize = 2 * nOut * gridpoints * gridpoints * gridpoints;\n+    final int totalSize = clutSize + 2 * nInEntries * nIn\n+                          + 2 * nOutEntries * nOut + 52;\n+\n+    ByteBuffer buf = ByteBuffer.allocate(totalSize);\n+    buf.putInt(0, 0x6D667432); // 'mft2'\n+    buf.putInt(4, 0); // reserved\n+    buf.put(8, (byte) nIn); // number input channels\n+    buf.put(9, (byte) nOut); // number output channels\n+    buf.put(10, (byte) gridpoints); // number gridpoints\n+    buf.put(11, (byte) 0); // padding\n+\n+    // identity matrix\n+    buf.putInt(12, 65536); // = 1 in s15.16 fixed point\n+    buf.putInt(16, 0);\n+    buf.putInt(20, 0);\n+    buf.putInt(24, 0);\n+    buf.putInt(28, 65536);\n+    buf.putInt(32, 0);\n+    buf.putInt(36, 0);\n+    buf.putInt(40, 0);\n+    buf.putInt(44, 65536);\n+\n+    buf.putShort(48, (short) nInEntries); // input table entries\n+    buf.putShort(50, (short) nOutEntries); // output table entries\n+\n+    // write the linear input channels, unsigned 16.16 fixed point,\n+    // from 0.0 to FF.FF\n+    for (int channel = 0; channel < 3; channel++)\n+      for (int i = 0; i < nInEntries; i++)\n+        {\n+\t  short n = (short) ((i << 8) | i); // assumes 256 entries\n+\t  buf.putShort(52 + (channel * nInEntries + i) * 2, n);\n+        }\n+    int clutOffset = 52 + nInEntries * nIn * 2;\n+\n+    for (int x = 0; x < gridpoints; x++)\n+      for (int y = 0; y < gridpoints; y++)\n+\tfor (int z = 0; z < gridpoints; z++)\n+\t  {\n+\t    int offset = clutOffset + z * 2 * nOut + y * gridpoints * 2 * nOut\n+\t                 + x * gridpoints * gridpoints * 2 * nOut;\n+\t    double xf = ((double) x) / ((double) gridpoints - 1.0);\n+\t    double yf = ((double) y) / ((double) gridpoints - 1.0);\n+\t    double zf = ((double) z) / ((double) gridpoints - 1.0);\n+\t    buf.putShort(offset, (short) (xf * 65535.0));\n+\t    buf.putShort(offset + 2, (short) (yf * 65535.0));\n+\t    buf.putShort(offset + 4, (short) (zf * 65535.0));\n+\t  }\n+\n+    for (int channel = 0; channel < 3; channel++)\n+      for (int i = 0; i < nOutEntries; i++)\n+        {\n+\t  short n = (short) ((i << 8) | i); // assumes 256 entries\n+\t  buf.putShort(clutOffset + clutSize + (channel * nOutEntries + i) * 2,\n+\t               n);\n+        }\n+\n+    return buf.array();\n+  }\n+\n+  /**\n+   * Creates profile data corresponding to the built-in colorspaces.\n+   */\n+  private void createProfile(int colorSpace) throws IllegalArgumentException\n+  {\n+    this.profileID = colorSpace;\n+    header = new ProfileHeader();\n+    tagTable = new Hashtable();\n+\n+    switch (colorSpace)\n       {\n       case ColorSpace.CS_sRGB:\n+\tcreateRGBProfile();\n+\treturn;\n       case ColorSpace.CS_LINEAR_RGB:\n+\tcreateLinearRGBProfile();\n+\treturn;\n       case ColorSpace.CS_CIEXYZ:\n-\treturn 3;\n+\tcreateCIEProfile();\n+\treturn;\n       case ColorSpace.CS_GRAY:\n-\treturn 1;\n-      case ColorSpace.CS_PYCC: // have no clue about this one\n+\tcreateGrayProfile();\n+\treturn;\n+      case ColorSpace.CS_PYCC:\n+\tcreatePyccProfile();\n+\treturn;\n       default:\n-\tthrow new UnsupportedOperationException(\"profile not implemented\");\n+\tthrow new IllegalArgumentException(\"Not a predefined color space!\");\n       }\n   }\n \n-  protected Object readResolve() throws ObjectStreamException\n+  /**\n+   * Creates an ICC_Profile representing the sRGB color space\n+   */\n+  private void createRGBProfile()\n   {\n-    throw new Error(\"not implemented\");\n+    header.setColorSpace( ColorSpace.TYPE_RGB );\n+    header.setProfileColorSpace( ColorSpace.TYPE_XYZ );\n+    ICC_ColorSpace cs = new ICC_ColorSpace(this);\n+\n+    float[] r = { 1f, 0f, 0f };\n+    float[] g = { 0f, 1f, 0f };\n+    float[] b = { 0f, 0f, 1f };\n+    float[] black = { 0f, 0f, 0f };\n+\n+    // CIE 1931 D50 white point (in Lab coordinates)\n+    float[] white = D50;\n+\n+    // Get tristimulus values (matrix elements)\n+    r = cs.toCIEXYZ(r);\n+    g = cs.toCIEXYZ(g);\n+    b = cs.toCIEXYZ(b);\n+\n+    // Generate the sRGB TRC curve, this is the linear->nonlinear\n+    // RGB transform.\n+    cs = new ICC_ColorSpace(getInstance(ICC_ColorSpace.CS_LINEAR_RGB));\n+    float[] points = new float[TRC_POINTS];\n+    float[] in = new float[3];\n+    for (int i = 0; i < TRC_POINTS; i++)\n+      {\n+\tin[0] = in[1] = in[2] = ((float) i) / ((float) TRC_POINTS - 1);\n+\tin = cs.fromRGB(in);\n+\t// Note this value is the same for all components.\n+\tpoints[i] = in[0];\n+      }\n+\n+    setData(icSigRedColorantTag, makeXYZData(r));\n+    setData(icSigGreenColorantTag, makeXYZData(g));\n+    setData(icSigBlueColorantTag, makeXYZData(b));\n+    setData(icSigMediaWhitePointTag, makeXYZData(white));\n+    setData(icSigMediaBlackPointTag, makeXYZData(black));\n+    setData(icSigRedTRCTag, makeTRC(points));\n+    setData(icSigGreenTRCTag, makeTRC(points));\n+    setData(icSigBlueTRCTag, makeTRC(points));\n+    setData(icSigCopyrightTag, makeTextTag(copyrightNotice));\n+    setData(icSigProfileDescriptionTag, makeDescTag(\"Generic sRGB\"));\n+    this.profileID = ColorSpace.CS_sRGB;\n   }\n \n-  private void readObject(ObjectInputStream s)\n-    throws IOException, ClassNotFoundException\n+  /**\n+   * Creates an linear sRGB profile\n+   */\n+  private void createLinearRGBProfile()\n   {\n-    throw new Error(\"not implemented\");\n+    header.setColorSpace(ColorSpace.TYPE_RGB);\n+    header.setProfileColorSpace(ColorSpace.TYPE_XYZ);\n+    ICC_ColorSpace cs = new ICC_ColorSpace(this);\n+\n+    float[] r = { 1f, 0f, 0f };\n+    float[] g = { 0f, 1f, 0f };\n+    float[] b = { 0f, 0f, 1f };\n+    float[] black = { 0f, 0f, 0f };\n+\n+    float[] white = D50;\n+\n+    // Get tristimulus values (matrix elements)\n+    r = cs.toCIEXYZ(r);\n+    g = cs.toCIEXYZ(g);\n+    b = cs.toCIEXYZ(b);\n+\n+    setData(icSigRedColorantTag, makeXYZData(r));\n+    setData(icSigGreenColorantTag, makeXYZData(g));\n+    setData(icSigBlueColorantTag, makeXYZData(b));\n+\n+    setData(icSigMediaWhitePointTag, makeXYZData(white));\n+    setData(icSigMediaBlackPointTag, makeXYZData(black));\n+\n+    setData(icSigRedTRCTag, makeTRC());\n+    setData(icSigGreenTRCTag, makeTRC());\n+    setData(icSigBlueTRCTag, makeTRC());\n+    setData(icSigCopyrightTag, makeTextTag(copyrightNotice));\n+    setData(icSigProfileDescriptionTag, makeDescTag(\"Linear RGB\"));\n+    this.profileID = ColorSpace.CS_LINEAR_RGB;\n   }\n \n-  private void writeObject(ObjectOutputStream s) throws IOException\n+  /**\n+   * Creates an CIE XYZ identity profile\n+   */\n+  private void createCIEProfile()\n+  {\n+    header.setColorSpace( ColorSpace.TYPE_XYZ );\n+    header.setProfileColorSpace( ColorSpace.TYPE_XYZ );\n+    header.setProfileClass( CLASS_COLORSPACECONVERSION );\n+    ICC_ColorSpace cs = new ICC_ColorSpace(this);\n+\n+    float[] white = D50;\n+\n+    setData(icSigMediaWhitePointTag, makeXYZData(white));\n+    setData(icSigAToB0Tag, makeIdentityClut());\n+    setData(icSigBToA0Tag, makeIdentityClut());\n+    setData(icSigCopyrightTag, makeTextTag(copyrightNotice));\n+    setData(icSigProfileDescriptionTag, makeDescTag(\"CIE XYZ identity profile\"));\n+    this.profileID = ColorSpace.CS_CIEXYZ;\n+  }\n+\n+  /**\n+   * Creates a linear gray ICC_Profile\n+   */\n+  private void createGrayProfile()\n   {\n-    throw new Error(\"not implemented\");\n+    header.setColorSpace(ColorSpace.TYPE_GRAY);\n+    header.setProfileColorSpace(ColorSpace.TYPE_XYZ);\n+\n+    // CIE 1931 D50 white point (in Lab coordinates)\n+    float[] white = D50;\n+\n+    setData(icSigMediaWhitePointTag, makeXYZData(white));\n+    setData(icSigGrayTRCTag, makeTRC(1.0f));\n+    setData(icSigCopyrightTag, makeTextTag(copyrightNotice));\n+    setData(icSigProfileDescriptionTag, makeDescTag(\"Linear grayscale\"));\n+    this.profileID = ColorSpace.CS_GRAY;\n+  }\n+\n+  /**\n+   * XXX Implement me\n+   */\n+  private void createPyccProfile()\n+  {\n+    header.setColorSpace(ColorSpace.TYPE_3CLR);\n+    header.setProfileColorSpace(ColorSpace.TYPE_XYZ);\n+\n+    // Create CLUTs here. :-)\n+\n+    setData(icSigCopyrightTag, makeTextTag(copyrightNotice));\n+    setData(icSigProfileDescriptionTag, makeDescTag(\"Photo YCC\"));\n+    this.profileID = ColorSpace.CS_PYCC;\n   }\n } // class ICC_Profile"}, {"sha": "54c2771332d50ec2068f4991b11cff5864c90f79", "filename": "libjava/java/awt/color/ICC_ProfileGray.java", "status": "modified", "additions": 69, "deletions": 7, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileGray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileGray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileGray.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* ICC_ProfileGray.java -- the ICC profile for a Gray colorspace\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,7 +39,22 @@\n package java.awt.color;\n \n /**\n- * STUBBED\n+ * ICC_ProfileGray - a special case of ICC_Profiles.\n+ *\n+ * The ICC_Profile.getInstance() method will return an instance of the \n+ * ICC_ProfileGray subclass when all the following conditions are met:\n+ * The device color space of the profile is TYPE_GRAY.\n+ * The profile contains a gray TRCTag.\n+ * The profile contains a mediaWhitePointTag.\n+ *\n+ * As per the ICC specification, the color space conversion can then\n+ * be done through the following method:\n+ * linearGray = grayTRC[deviceGray]\n+ *\n+ * Note that if the profile contains a CLUT for the color space conversion,\n+ * it should be used instead, and the TRC information ignored. \n+ *\n+ * @author Sven de Marothy\n  * @since 1.2\n  */\n public class ICC_ProfileGray extends ICC_Profile\n@@ -48,24 +63,71 @@ public class ICC_ProfileGray extends ICC_Profile\n    * Compatible with JDK 1.2+.\n    */\n   private static final long serialVersionUID = -1124721290732002649L;\n+  private transient float[] whitePoint;\n \n-  ICC_ProfileGray()\n+  /**\n+   * Package-private constructor used by ICC_ColorSpace for creating an\n+   * ICC_ProfileGray from a predefined ColorSpace (CS_GRAY)\n+   */\n+  ICC_ProfileGray(int cspace)\n+  {\n+    super(cspace);\n+    whitePoint = getXYZData(icSigMediaWhitePointTag);\n+  }\n+\n+  /**\n+   * Package-private constructor used by ICC_ColorSpace for creating an\n+   * ICC_ProfileGray from profile data.\n+   */\n+  ICC_ProfileGray(byte[] data)\n   {\n-    super(ColorSpace.CS_GRAY);\n+    super(data);\n+    whitePoint = getXYZData(icSigMediaWhitePointTag);\n   }\n \n+\n+  /**\n+   * Returns the media white point of the profile.\n+   */\n   public float[] getMediaWhitePoint()\n   {\n-    return null;\n+    float[] wp = new float[3];\n+    wp[0] = whitePoint[0];\n+    wp[1] = whitePoint[1];\n+    wp[2] = whitePoint[2];\n+    return wp;\n   }\n \n+  /**\n+   * Returns the TRC gamma value.\n+   * @throws ProfileDataException if the TRC is described by a lookup\n+   * table and not a gamma value.\n+   */\n   public float getGamma()\n   {\n-    return 0;\n+    short[] data = getCurve(icSigGrayTRCTag);\n+    if (data == null)\n+      throw new IllegalArgumentException(\"Couldn't read Gray TRC data.\");\n+    if (data.length != 1)\n+      throw new ProfileDataException(\"TRC is a table, not a gamma value.\");\n+\n+    // convert the unsigned 7.8 fixed-point gamma to a float.\n+    double gamma = (double) (data[0] & (0xFFFF)) / 256.0;\n+    return (float) gamma;\n   }\n \n+  /**\n+   * Returns the TRC lookup table.\n+   * @throws ProfileDataException if the TRC is described by a gamma value\n+   * and not a lookup table.\n+   */\n   public short[] getTRC()\n   {\n-    return null;\n+    short[] data = getCurve(icSigGrayTRCTag);\n+    if (data == null)\n+      throw new IllegalArgumentException(\"Couldn't read Gray TRC data.\");\n+    if (data.length <= 1)\n+      throw new ProfileDataException(\"Gamma value, not a TRC table.\");\n+    return data;\n   }\n } // class ICC_ProfileGray"}, {"sha": "cb947f67705a3aef66569ad1cddc61774b6628f1", "filename": "libjava/java/awt/color/ICC_ProfileRGB.java", "status": "modified", "additions": 155, "deletions": 8, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileRGB.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileRGB.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileRGB.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* ICC_ProfileRGB.java -- the ICC profile for a RGB colorspace\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,7 +39,34 @@\n package java.awt.color;\n \n /**\n- * STUBBED\n+ * ICC_ProfileRGB - a special case of ICC_Profiles.\n+ *\n+ * The ICC_Profile.getInstance() method will return an instance of the \n+ * ICC_ProfileRGB subclass when all the following conditions are met:\n+ * The device color space of the profile is TYPE_RGB.\n+ * The profile contains red, green and blue ColorantTags.\n+ * The profile contains red, green and blue TRCTags.\n+ * The profile contains a mediaWhitePointTag included.\n+ *\n+ * As per the ICC specification, the color space conversion can then\n+ * be done through the following method:\n+ * linearR = redTRC[deviceR]\n+ * linearG = greenTRC[deviceG]\n+ * linearB = blueTRC[deviceB]\n+ * TRC curves are either a single gamma value, or a 1-dimensional lookup table.\n+ * \n+ * Followed by the matrix transform:\n+ * PCS = M*linear\n+ *\n+ * Where PCS is the vector of profile color space (must be XYZ) coordinates,\n+ * linear is the vector of linear RGB coordinates, and the matrix M is \n+ * constructed from the ColorantTags, where the columns are red, green and\n+ * blue respectively, and the rows are X, Y and Z.\n+ *\n+ * Note that if the profile contains a CLUT for the color space conversion,\n+ * it should be used instead, and the TRC information ignored. \n+ *\n+ * @author Sven de Marothy\n  * @since 1.2\n  */\n public class ICC_ProfileRGB extends ICC_Profile\n@@ -50,31 +77,151 @@ public class ICC_ProfileRGB extends ICC_Profile\n   private static final long serialVersionUID = 8505067385152579334L;\n \n   public static final int REDCOMPONENT = 0;\n+\n   public static final int GREENCOMPONENT = 1;\n+\n   public static final int BLUECOMPONENT = 2;\n \n-  ICC_ProfileRGB()\n+  private transient float[][] matrix;\n+\n+  private transient float[] gamma;\n+\n+  private transient float[] whitePoint;\n+\n+\n+  /**\n+   * Package-private constructor used by ICC_ColorSpace for creating an\n+   * ICC_ProfileRGB from a predefined ColorSpace (CS_LINEAR_RGB and CS_sRGB)\n+   */\n+  ICC_ProfileRGB(int cspace)\n   {\n-    super(ColorSpace.CS_sRGB);\n+    super(cspace);\n+    matrix = createMatrix();\n+    whitePoint = getXYZData(icSigMediaWhitePointTag);\n   }\n \n+  /**\n+   * Package-private constructor used by ICC_ColorSpace for creating an\n+   * ICC_ProfileRGB from profile data.\n+   */\n+  ICC_ProfileRGB(byte[] data)\n+  {\n+    super(data);\n+    matrix = createMatrix();\n+    whitePoint = getXYZData(icSigMediaWhitePointTag);\n+  }\n+\n+  /**\n+   * Returns the media white point of the profile.\n+   */\n   public float[] getMediaWhitePoint()\n   {\n-    return null;\n+    float[] wp = new float[3];\n+    wp[0] = whitePoint[0];\n+    wp[1] = whitePoint[1];\n+    wp[2] = whitePoint[2];\n+    return wp;\n   }\n \n+  /**\n+   * Returns the colorant matrix of the conversion.\n+   */\n   public float[][] getMatrix()\n   {\n-    return null;\n+    float[][] mat = new float[3][3];\n+    for (int i = 0; i < 3; i++)\n+      for (int j = 0; j < 3; j++)\n+\tmat[i][j] = matrix[i][j];\n+    return mat;\n   }\n \n+  /**\n+   * Returns the gamma value of a component\n+   * @throws ProfileDataException if the TRC is described by a lookup\n+   * table and not a gamma value.\n+   */\n   public float getGamma(int component)\n   {\n-    return 0;\n+    short[] data;\n+    switch (component)\n+      {\n+      case REDCOMPONENT:\n+\tdata = getCurve(icSigRedTRCTag);\n+\tbreak;\n+      case GREENCOMPONENT:\n+\tdata = getCurve(icSigGreenTRCTag);\n+\tbreak;\n+      case BLUECOMPONENT:\n+\tdata = getCurve(icSigBlueTRCTag);\n+\tbreak;\n+      default:\n+\tthrow new IllegalArgumentException(\"Not a valid component\");\n+      }\n+    if (data == null)\n+      throw new IllegalArgumentException(\"Error reading TRC\");\n+\n+    if (data.length != 1)\n+      throw new ProfileDataException(\"Not a single-gamma TRC\");\n+\n+    // convert the unsigned 7.8 fixed-point gamma to a float.\n+    float gamma = (float) (((int) data[0] & 0xFF00) >> 8);\n+    double fraction = ((int) data[0] & 0x00FF) / 256.0;\n+    gamma += (float) fraction;\n+    return gamma;\n   }\n \n+  /**\n+   * Returns the TRC lookup table for a component\n+   * @throws ProfileDataException if the TRC is described by a gamma\n+   * value and not a lookup table.\n+   */\n   public short[] getTRC(int component)\n   {\n-    return null;\n+    short[] data;\n+    switch (component)\n+      {\n+      case REDCOMPONENT:\n+\tdata = getCurve(icSigRedTRCTag);\n+\tbreak;\n+      case GREENCOMPONENT:\n+\tdata = getCurve(icSigGreenTRCTag);\n+\tbreak;\n+      case BLUECOMPONENT:\n+\tdata = getCurve(icSigBlueTRCTag);\n+\tbreak;\n+      default:\n+\tthrow new IllegalArgumentException(\"Not a valid component\");\n+      }\n+    if (data == null)\n+      throw new IllegalArgumentException(\"Error reading TRC\");\n+\n+    if (data.length <= 1)\n+      throw new ProfileDataException(\"Gamma value, not a TRC table.\");\n+\n+    return data;\n+  }\n+\n+  /**\n+   * Creates the colorspace conversion matrix from the RGB tristimulus\n+   * values.\n+   */\n+  private float[][] createMatrix() throws IllegalArgumentException\n+  {\n+    float[][] mat = new float[3][3];\n+    float[] r;\n+    float[] g;\n+    float[] b;\n+    r = getXYZData(icSigRedColorantTag);\n+    g = getXYZData(icSigGreenColorantTag);\n+    b = getXYZData(icSigBlueColorantTag);\n+    if (r == null || g == null || b == null)\n+      throw new IllegalArgumentException(\"Error reading colorant tags!\");\n+    for (int i = 0; i < 3; i++)\n+      {\n+\tmat[i][0] = r[i];\n+\tmat[i][1] = g[i];\n+\tmat[i][2] = b[i];\n+      }\n+    return mat;\n   }\n } // class ICC_ProfileRGB"}, {"sha": "ca9b6ebdb0a915aa7c3927674e1fd4d0a9106acd", "filename": "libjava/java/awt/datatransfer/Clipboard.java", "status": "modified", "additions": 68, "deletions": 94, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FClipboard.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FClipboard.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FClipboard.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -39,102 +39,76 @@\n package java.awt.datatransfer;\n \n /**\n-  * This class allows data to be transferred using a cut and paste type\n-  * mechanism.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public class Clipboard\n-{\n-\n-/*\n- * Instance Variables\n- */\n-\n-/**\n-  * The data being transferred.\n-  */\n-protected Transferable contents;\n-\n-/**\n-  * The owner of this clipboard.\n-  */\n-protected ClipboardOwner owner;\n-\n-// The clipboard name\n-private String name;\n-\n-/*************************************************************************/\n-\n-/*\n- * Constructors\n- */\n-\n-/**\n-  * Initializes a new instance of <code>Clipboard</code> with the\n-  * specified name.\n-  *\n-  * @param name The clipboard name.\n-  */\n-public \n-Clipboard(String name)\n-{\n-  this.name = name;\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n+ * This class allows data to be transferred using a cut and paste type\n+ * mechanism.\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n-\n-/**\n-  * Returns the name of the clipboard.\n-  */\n-public String\n-getName()\n-{\n-  return(name);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the contents of the clipboard.\n-  *\n-  * @param requestor The object requesting the contents.\n-  *\n-  * @exception IllegalStateException If the clipboard is currently unavailable\n-  */\n-public synchronized Transferable\n-getContents(Object requestor)\n-{\n-  return(contents);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the content and owner of this clipboard.\n-  * If the given owner is different from the current owner\n-  * then lostOwnership is called on the current owner.\n-  * XXX - is this called with the old or new contents.\n-  *\n-  * @param contents The new clipboard contents.\n-  * @param owner The new clipboard owner\n-  *\n-  * @exception IllegalStateException If the clipboard is currently unavailable\n-  */\n-public synchronized void\n-setContents(Transferable contents, ClipboardOwner owner)\n+public class Clipboard\n {\n-  if (this.owner != owner)\n-    if (this.owner != null)\n-      this.owner.lostOwnership(this, contents);\n+  /**\n+   * The data being transferred.\n+   */\n+  protected Transferable contents;\n+\n+  /**\n+   * The owner of this clipboard.\n+   */\n+  protected ClipboardOwner owner;\n+\n+  // The clipboard name\n+  private String name;\n+\n+  /**\n+   * Initializes a new instance of <code>Clipboard</code> with the\n+   * specified name.\n+   *\n+   * @param name The clipboard name.\n+   */\n+  public Clipboard(String name)\n+  {\n+    this.name = name;\n+  }\n+\n+  /**\n+    * Returns the name of the clipboard.\n+    */\n+  public String getName()\n+  {\n+    return name;\n+  }\n+\n+  /**\n+   * Returns the contents of the clipboard.\n+   *\n+   * @param requestor The object requesting the contents.\n+   *\n+   * @exception IllegalStateException If the clipboard is currently unavailable\n+   */\n+  public synchronized Transferable getContents(Object requestor)\n+  {\n+    return contents;\n+  }\n+\n+  /**\n+   * Sets the content and owner of this clipboard.\n+   * If the given owner is different from the current owner\n+   * then lostOwnership is called on the current owner.\n+   * XXX - is this called with the old or new contents.\n+   *\n+   * @param contents The new clipboard contents.\n+   * @param owner The new clipboard owner\n+   *\n+   * @exception IllegalStateException If the clipboard is currently unavailable\n+   */\n+  public synchronized void setContents(Transferable contents, ClipboardOwner owner)\n+  {\n+    if (this.owner != owner)\n+      if (this.owner != null)\n+        this.owner.lostOwnership(this, contents);\n  \n-  this.owner = owner;\n-  this.contents = contents;\n+    this.owner = owner;\n+    this.contents = contents;\n+  }\n }\n \n-} // class Clipboard\n-"}, {"sha": "b5ca9e37d8f5f096d52b9b48a0921dd5672a81bb", "filename": "libjava/java/awt/datatransfer/ClipboardOwner.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FClipboardOwner.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FClipboardOwner.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FClipboardOwner.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -53,6 +53,5 @@\n    * @param contents The contents of the clipboard which are no longer owned.\n    */\n   void lostOwnership (Clipboard clipboard, Transferable contents); \n-\n-} // interface ClipboardOwner\n+}\n "}, {"sha": "19f69d5c726b6859046b0bb7db398ed31fbf810a", "filename": "libjava/java/awt/datatransfer/DataFlavor.java", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -39,11 +39,11 @@\n package java.awt.datatransfer;\n \n import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n-import java.io.IOException;\n-import java.io.ObjectOutput;\n import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n import java.io.Reader;\n import java.io.StringReader;\n import java.io.UnsupportedEncodingException;\n@@ -328,7 +328,6 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n  *\n  * @param mimeType The MIME type for this flavor.\n  * @param humanPresentableName The display name of this flavor.\n- * @param classLoader The class loader for finding classes.\n  *\n  * @exception IllegalArgumentException If the representation class\n  * specified cannot be loaded.\n@@ -529,7 +528,7 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n  * @return <code>true</code> if the flavor's MIME type is equal to this \n  * object's MIME type, <code>false</code> otherwise.\n  */\n-public boolean\n+public final boolean\n isMimeTypeEqual(DataFlavor flavor)\n {\n   return(isMimeTypeEqual(flavor.getMimeType()));\n@@ -555,7 +554,7 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n  * Tests whether or not this flavor has a representation class of\n  * <code>java.io.InputStream</code>.\n  *\n- * @param <code>true</code> if the representation class of this flavor\n+ * @return <code>true</code> if the representation class of this flavor\n  * is <code>java.io.InputStream</code>, <code>false</code> otherwise.\n  */\n public boolean\n@@ -570,7 +569,7 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n  * Tests whether the representation class for this flavor is\n  * serializable.\n  *\n- * @param <code>true</code> if the representation class is serializable,\n+ * @return <code>true</code> if the representation class is serializable,\n  * <code>false</code> otherwise.\n  */\n public boolean"}, {"sha": "3822cdec60b1439daeced1126610909888882668", "filename": "libjava/java/awt/datatransfer/FlavorTable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FFlavorTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FFlavorTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FFlavorTable.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -66,8 +66,8 @@ public interface FlavorTable extends FlavorMap\n    * list should be sorted from best to worst. The list must be modifiable\n    * without affecting this table.\n    *\n-   * @param native the native to look up, or null to return all flavors\n+   * @param name the native name to look up, or null to return all flavors\n    * @return the sorted list of flavors\n    */\n   List getFlavorsForNative(String name);\n-} // interface FlavorTable\n+}"}, {"sha": "b41c936990dd79fc34d4d526dd7075eb4c3a42d9", "filename": "libjava/java/awt/datatransfer/StringSelection.java", "status": "modified", "additions": 11, "deletions": 22, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FStringSelection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FStringSelection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FStringSelection.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* StringSelection.java -- Clipboard handler for text.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,8 +38,8 @@\n \n package java.awt.datatransfer;\n \n-import java.io.StringReader;\n import java.io.IOException;\n+import java.io.StringReader;\n \n /**\n   * This class transfers a string as plain text using the clipboard.\n@@ -68,26 +68,15 @@ public class StringSelection implements Transferable, ClipboardOwner\n // This is the data to transfer\n private String data;\n \n-/*************************************************************************/\n-\n-/*\n- * Constructors\n- */\n-\n-/**\n-  * Transfer the specfied string as text.\n-  */\n-public\n-StringSelection(String data)\n-{\n-  this.data = data;\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n- */\n+  /**\n+   * Transfer the specfied string as text.\n+   *\n+   * @param data the data for the string selection\n+   */\n+  public StringSelection(String data)\n+  {\n+    this.data = data;\n+  }\n \n /**\n   * Returns a list of supported data flavors."}, {"sha": "826992b7c7cc03efb7769f6af778495862487339", "filename": "libjava/java/awt/datatransfer/SystemFlavorMap.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FSystemFlavorMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdatatransfer%2FSystemFlavorMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FSystemFlavorMap.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* SystemFlavorMap.java -- Maps between native flavor names and MIME types.\n-   Copyright (C) 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,8 +39,8 @@\n package java.awt.datatransfer;\n \n import java.util.HashMap;\n-import java.util.Map;\n import java.util.List;\n+import java.util.Map;\n \n /**\n   * This class maps between native platform type names and DataFlavors."}, {"sha": "ae868c077b313efc8273c9c46bfd09ad1bfee829", "filename": "libjava/java/awt/dnd/Autoscroll.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2FAutoscroll.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2FAutoscroll.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FAutoscroll.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* Autoscroll.java --\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,10 +35,11 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt.dnd;\n \n-import java.awt.Point;\n import java.awt.Insets;\n+import java.awt.Point;\n \n /**\n  * During DnD operations it is possible that a user may wish to drop the"}, {"sha": "7379ca71c0d022f5b32149a2e3504099853d5e87", "filename": "libjava/java/awt/dnd/DropTarget.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* DropTarget.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,12 +35,13 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt.dnd;\n \n-import java.awt.Point;\n import java.awt.Component;\n import java.awt.GraphicsEnvironment;\n import java.awt.HeadlessException;\n+import java.awt.Point;\n import java.awt.datatransfer.FlavorMap;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;"}, {"sha": "d61785545c9cba7794fc1751c684e6833a4d21bf", "filename": "libjava/java/awt/dnd/DropTargetContext.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* DropTargetContext.java --\n-   Copyright (C) 2002, 2003 Free Software Foundation\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,13 +37,12 @@\n \n package java.awt.dnd;\n \n-import java.awt.dnd.peer.DropTargetContextPeer;\n-import java.io.Serializable;\n-import java.io.IOException;\n import java.awt.Component;\n import java.awt.datatransfer.DataFlavor;\n import java.awt.datatransfer.Transferable;\n import java.awt.datatransfer.UnsupportedFlavorException;\n+import java.io.IOException;\n+import java.io.Serializable;\n import java.util.Arrays;\n import java.util.List;\n "}, {"sha": "d4a13ea464158603999d5cf140231d5a1dd3904d", "filename": "libjava/java/awt/dnd/DropTargetDragEvent.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetDragEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetDragEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetDragEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* DropTargetDragEvent.java --\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,11 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt.dnd;\n \n-import java.util.List;\n import java.awt.Point;\n import java.awt.datatransfer.DataFlavor;\n+import java.util.List;\n \n /**\n  * @since 1.2"}, {"sha": "a2e3ba2189fcbf6132b9962c3cac5674ba82e81b", "filename": "libjava/java/awt/dnd/peer/DropTargetContextPeer.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2Fpeer%2FDropTargetContextPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fdnd%2Fpeer%2FDropTargetContextPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2Fpeer%2FDropTargetContextPeer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* DropTargetContextPeer.java -- interface for drag-and-drop peers\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,11 +35,12 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt.dnd.peer;\n \n-import java.awt.dnd.DropTarget;\n import java.awt.datatransfer.DataFlavor;\n import java.awt.datatransfer.Transferable;\n+import java.awt.dnd.DropTarget;\n import java.awt.dnd.InvalidDnDOperationException;\n \n "}, {"sha": "71fdd2fd9e4021f0e56585b3c542c6a459cdecf4", "filename": "libjava/java/awt/event/ActionListener.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FActionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FActionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FActionListener.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -43,7 +43,7 @@\n /**\n  * This interface is for classes that listen for action events.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ActionEvent\n  * @since 1.1\n  * @status updated to 1.4\n@@ -55,5 +55,5 @@ public interface ActionListener extends EventListener\n    *\n    * @param event the <code>ActionEvent</code> that occurred\n    */\n-  void actionPerformed(ActionEvent e);\n-} // interface ActionListener\n+  void actionPerformed(ActionEvent event);\n+}"}, {"sha": "623dab5eaed72223f652581cec4114873a906a28", "filename": "libjava/java/awt/event/AdjustmentEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* AdjustmentEvent.java -- an adjustable value was changed\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,8 +38,8 @@\n \n package java.awt.event;\n \n-import java.awt.Adjustable;\n import java.awt.AWTEvent;\n+import java.awt.Adjustable;\n \n /**\n  * This class represents an event that is generated when an adjustable"}, {"sha": "2f479fc23d24cec7e60b2818fd8ac8a1aabcff43", "filename": "libjava/java/awt/event/HierarchyBoundsAdapter.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsAdapter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -63,7 +63,7 @@ public HierarchyBoundsAdapter()\n    *\n    * @param event the event, ignored in this implementation\n    */\n-  public void ancestorMoved(HierarchyEvent e)\n+  public void ancestorMoved(HierarchyEvent event)\n   {\n   }\n \n@@ -72,7 +72,7 @@ public void ancestorMoved(HierarchyEvent e)\n    *\n    * @param event the event, ignored in this implementation\n    */\n-  public void ancestorResized(HierarchyEvent e)\n+  public void ancestorResized(HierarchyEvent event)\n   {\n   }\n-} // class HierarchyBoundsAdapter\n+}"}, {"sha": "b2a1e3114ec498da913c69907daf8b14eb9d6050", "filename": "libjava/java/awt/event/InputEvent.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* InputEvent.java -- common superclass of component input events\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,9 +38,10 @@\n \n package java.awt.event;\n \n-import java.awt.Component;\n import gnu.java.awt.EventModifier;\n \n+import java.awt.Component;\n+\n /**\n  * This is the common superclass for all component input classes. These are\n  * passed to listeners before the component, so that listeners can consume\n@@ -349,6 +350,7 @@ public boolean isConsumed()\n    * XXX Sun claims this can be localized via the awt.properties file - how\n    * do we implement that?\n    *\n+   * @param modifiers the modifiers\n    * @return a string representation of the modifiers in this bitmask\n    * @since 1.4\n    */"}, {"sha": "fb58595c793c34a11b65a3de6b749c1504a9c536", "filename": "libjava/java/awt/event/InvocationEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* InvocationEvent.java -- call a runnable when dispatched\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,8 +38,8 @@\n \n package java.awt.event;\n \n-import java.awt.ActiveEvent;\n import java.awt.AWTEvent;\n+import java.awt.ActiveEvent;\n import java.awt.EventQueue;\n \n /**"}, {"sha": "7212c0c979117593c3d5f99af0659567dd433bf6", "filename": "libjava/java/awt/event/KeyEvent.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* KeyEvent.java -- event for key presses\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,10 +38,11 @@\n \n package java.awt.event;\n \n+import gnu.java.awt.EventModifier;\n+\n import java.awt.Component;\n import java.io.IOException;\n import java.io.ObjectInputStream;\n-import gnu.java.awt.EventModifier;\n \n /**\n  * This event is generated when a key is pressed or released. There are two"}, {"sha": "7f3e014a2eaa61baf01d43d71b4e9baae4bb57e7", "filename": "libjava/java/awt/event/MouseEvent.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n /* MouseEvent.java -- a mouse event\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,11 +38,12 @@\n \n package java.awt.event;\n \n+import gnu.java.awt.EventModifier;\n+\n import java.awt.Component;\n import java.awt.Point;\n import java.io.IOException;\n import java.io.ObjectInputStream;\n-import gnu.java.awt.EventModifier;\n \n /**\n  * This event is generated for a mouse event. There are three main categories"}, {"sha": "7d5444677a9b965eb5dfd8cbc042877d0da3b654", "filename": "libjava/java/awt/font/TextAttribute.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Ffont%2FTextAttribute.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Ffont%2FTextAttribute.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTextAttribute.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb", "patch": "@@ -1,5 +1,5 @@\n-/* TextAttribute.java\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+/* TextAttribute.java --\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -70,19 +70,19 @@ public final class TextAttribute extends AttributedCharacterIterator.Attribute\n   public static final Float POSTURE_REGULAR = new Float (0.0);\n   public static final TextAttribute RUN_DIRECTION =\n     new TextAttribute (\"RUN_DIRECTION\");\n-  public static final Boolean RUN_DIRECTION_LTR = new Boolean (true);\n-  public static final Boolean RUN_DIRECTION_RTL = new Boolean (false);\n+  public static final Boolean RUN_DIRECTION_LTR = Boolean.TRUE;\n+  public static final Boolean RUN_DIRECTION_RTL = Boolean.FALSE;\n   public static final TextAttribute SIZE = new TextAttribute (\"SIZE\");\n   public static final TextAttribute STRIKETHROUGH =\n     new TextAttribute (\"STRIKETHROUGH\");\n-  public static final Boolean STRIKETHROUGH_ON = new Boolean (true);\n+  public static final Boolean STRIKETHROUGH_ON = Boolean.TRUE;\n   public static final TextAttribute SUPERSCRIPT =\n     new TextAttribute (\"SUPERSCRIPT\");\n   public static final Integer SUPERSCRIPT_SUB = new Integer (-1);\n   public static final Integer SUPERSCRIPT_SUPER = new Integer (1);\n   public static final TextAttribute SWAP_COLORS =\n     new TextAttribute (\"SWAP_COLORS\");\n-  public static final Boolean SWAP_COLORS_ON = new Boolean (true);\n+  public static final Boolean SWAP_COLORS_ON = Boolean.TRUE;\n   public static final TextAttribute TRANSFORM = new TextAttribute (\"TRANSFORM\");\n   public static final TextAttribute UNDERLINE = new TextAttribute (\"UNDERLINE\");\n   public static final Integer UNDERLINE_LOW_DASHED = new Integer (0);"}, {"sha": "7d6c4d8c63598f91bae9f8bf49bcce34a9e877eb", "filename": "libjava/java/awt/font/TextLayout.java", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Ffont%2FTextLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Ffont%2FTextLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTextLayout.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "21eacae7409df32176c5f197a6e49e02df3e2195", "filename": "libjava/java/awt/geom/AffineTransform.java", "status": "modified", "additions": 26, "deletions": 47, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "5ce3b08e82f4b73c30f17a9ceeecb948f2c1180b", "filename": "libjava/java/awt/geom/Arc2D.java", "status": "modified", "additions": 305, "deletions": 110, "changes": 415, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FArc2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FArc2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FArc2D.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9b1b9d3b109f9ee9748e412a78c5e60d5029747b", "filename": "libjava/java/awt/geom/Area.java", "status": "modified", "additions": 3169, "deletions": 43, "changes": 3212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FArea.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "20373061d181c0b60ec3e707d1a7af60fb02c7e6", "filename": "libjava/java/awt/geom/CubicCurve2D.java", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "bd64adf1e3ab733034c9cb6cbfb25e368dfc398f", "filename": "libjava/java/awt/geom/Ellipse2D.java", "status": "modified", "additions": 217, "deletions": 8, "changes": 225, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0dc9ede294271c42f2b0f2e916b15481af8e12ff", "filename": "libjava/java/awt/geom/GeneralPath.java", "status": "modified", "additions": 56, "deletions": 49, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FGeneralPath.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FGeneralPath.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FGeneralPath.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "05eedcde4b2045d46d27cbad1ca11d46012bd033", "filename": "libjava/java/awt/geom/Line2D.java", "status": "modified", "additions": 106, "deletions": 11, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "8076b5c83534b80396f549e7c3bdc66acba686c0", "filename": "libjava/java/awt/geom/PathIterator.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "d27505fa41db2c8c1097b668eb2449a6ca8581b4", "filename": "libjava/java/awt/geom/Point2D.java", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0376d5a01af9aaae3a0fc0aee0d7bbc599e24afb", "filename": "libjava/java/awt/geom/QuadCurve2D.java", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "bd1a37c6e0971a29b1a053977d1441038dbef08d", "filename": "libjava/java/awt/geom/Rectangle2D.java", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "78e393eafcb1fdb3a7c00f537937cf5fc57a66f0", "filename": "libjava/java/awt/geom/RectangularShape.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "04e70e313f58ee7e8a343345cca5f691a62d3dea", "filename": "libjava/java/awt/im/InputContext.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0e981efb87f3e5d95285ad711441abedf6fa3486", "filename": "libjava/java/awt/im/spi/InputMethod.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethod.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethod.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethod.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "a2ea4759c72a6b27d667993682e4096b6ffa7e9e", "filename": "libjava/java/awt/im/spi/InputMethodContext.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethodContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethodContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethodContext.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "1326a61c043d3c6c32d41958a1913d87f9392308", "filename": "libjava/java/awt/image/AffineTransformOp.java", "status": "modified", "additions": 135, "deletions": 24, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FAffineTransformOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FAffineTransformOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FAffineTransformOp.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "48c61c5702664c04bfa1424cd80b2fd25bf5fd7d", "filename": "libjava/java/awt/image/BandCombineOp.java", "status": "added", "additions": 168, "deletions": 0, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FBandCombineOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FBandCombineOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FBandCombineOp.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "93252d9cce613f55219f7f6980e9e372818763b3", "filename": "libjava/java/awt/image/BandedSampleModel.java", "status": "added", "additions": 537, "deletions": 0, "changes": 537, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FBandedSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FBandedSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FBandedSampleModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "723eeeb77d88014c2b1091c73c0cb2dd55474af1", "filename": "libjava/java/awt/image/BufferedImage.java", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImage.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "8fa7d473f12cb48603b6c297126a4366a93c39d8", "filename": "libjava/java/awt/image/BufferedImageFilter.java", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImageFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImageFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImageFilter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "f0221915a712a2e4489fff412c1e4daa886e783d", "filename": "libjava/java/awt/image/ByteLookupTable.java", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FByteLookupTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FByteLookupTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FByteLookupTable.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "5fcb37cc7f0da179fe00e203c7caa008e9c4cb9a", "filename": "libjava/java/awt/image/ColorConvertOp.java", "status": "added", "additions": 319, "deletions": 0, "changes": 319, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FColorConvertOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FColorConvertOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FColorConvertOp.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "11615fdadfbdd62f22c6fa1fe6de95e830d307c5", "filename": "libjava/java/awt/image/ColorModel.java", "status": "modified", "additions": 99, "deletions": 21, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FColorModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "2b065328ee0b433a821bd71c77db7688c90b5915", "filename": "libjava/java/awt/image/ComponentColorModel.java", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FComponentColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FComponentColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FComponentColorModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0665f406793c638f36398e660e355d572c8c1050", "filename": "libjava/java/awt/image/ComponentSampleModel.java", "status": "modified", "additions": 83, "deletions": 2, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FComponentSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FComponentSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FComponentSampleModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "c793eee143438945ea5aa7d2c3a23f30c72de3b3", "filename": "libjava/java/awt/image/ConvolveOp.java", "status": "added", "additions": 341, "deletions": 0, "changes": 341, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FConvolveOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FConvolveOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FConvolveOp.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "a006d26d8145d1965c04ec9ea733afafcd3ea2d3", "filename": "libjava/java/awt/image/CropImageFilter.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FCropImageFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FCropImageFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FCropImageFilter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "b921953ec28e0dc78f7b8fd965f0b7cd97b53d44", "filename": "libjava/java/awt/image/DataBuffer.java", "status": "modified", "additions": 231, "deletions": 0, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBuffer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "c56be6b31dd74329e8bb42de9455ef0741054ad7", "filename": "libjava/java/awt/image/DataBufferByte.java", "status": "modified", "additions": 113, "deletions": 2, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferByte.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferByte.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferByte.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "305cb00b2ff8f734eea31307a50a4fd4eaba54c0", "filename": "libjava/java/awt/image/DataBufferDouble.java", "status": "modified", "additions": 113, "deletions": 2, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferDouble.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferDouble.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferDouble.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9673eddb4589e31c2f8cf4c0a0830527b6af21b4", "filename": "libjava/java/awt/image/DataBufferFloat.java", "status": "modified", "additions": 113, "deletions": 2, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferFloat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferFloat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferFloat.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "c5f08530d2b61603c9bbaa2fea1ac81ae898b7b7", "filename": "libjava/java/awt/image/DataBufferInt.java", "status": "modified", "additions": 114, "deletions": 4, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferInt.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferInt.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferInt.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "7a095c4e38e425cd7c5f0f7a9b8a41abf5f115ac", "filename": "libjava/java/awt/image/DataBufferShort.java", "status": "modified", "additions": 115, "deletions": 3, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferShort.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferShort.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferShort.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "6efe73d83ab918639c39915c9b78dd7607995cec", "filename": "libjava/java/awt/image/DataBufferUShort.java", "status": "modified", "additions": 115, "deletions": 3, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferUShort.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferUShort.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferUShort.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "b1aa6c0d33576b7f1c0a734cc897bb4c319aba03", "filename": "libjava/java/awt/image/DirectColorModel.java", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "6791589032e8cfddd8cc6b74f7554f8656aaa170", "filename": "libjava/java/awt/image/IndexColorModel.java", "status": "modified", "additions": 232, "deletions": 7, "changes": 239, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "523aba451443aedb89f9d0228d9832b967c80621", "filename": "libjava/java/awt/image/LookupOp.java", "status": "added", "additions": 252, "deletions": 0, "changes": 252, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FLookupOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FLookupOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FLookupOp.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "07e42cf077d0bf1e96cffbecb576f63601b1448c", "filename": "libjava/java/awt/image/MemoryImageSource.java", "status": "modified", "additions": 38, "deletions": 22, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FMemoryImageSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FMemoryImageSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FMemoryImageSource.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0525d37bd4291157b6fc02d4dadd49ece000be33", "filename": "libjava/java/awt/image/MultiPixelPackedSampleModel.java", "status": "added", "additions": 387, "deletions": 0, "changes": 387, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FMultiPixelPackedSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FMultiPixelPackedSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FMultiPixelPackedSampleModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "1f18cf68eb14df4ace756b6febb332a72ec2acb8", "filename": "libjava/java/awt/image/PackedColorModel.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FPackedColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FPackedColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FPackedColorModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "bcfa050f3df70be7801b7e70e6aba3ee4dd99aec", "filename": "libjava/java/awt/image/PixelGrabber.java", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0fd977eab6715a09ec8a9dd40e1ced304dff4c2a", "filename": "libjava/java/awt/image/RGBImageFilter.java", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0fad4ba0acb6fa3005b871438e81120dd782975f", "filename": "libjava/java/awt/image/Raster.java", "status": "modified", "additions": 78, "deletions": 8, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FRaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FRaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRaster.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "84d47c11941d19f51a1946bf1828e12353ca53fc", "filename": "libjava/java/awt/image/RasterOp.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FRasterOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FRasterOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRasterOp.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "cc892b6770789c1583865ceb0d0d72b1f631284d", "filename": "libjava/java/awt/image/RescaleOp.java", "status": "added", "additions": 218, "deletions": 0, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FRescaleOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FRescaleOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRescaleOp.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "4e3b38b9922d60a7e3a6751ea42982fd114d6571", "filename": "libjava/java/awt/image/SampleModel.java", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "36beb1df540f28580714ff6ded0e32daf23e0bb4", "filename": "libjava/java/awt/image/ShortLookupTable.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FShortLookupTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FShortLookupTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FShortLookupTable.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "94a9537318e0451014b28b0c5d9b09ad02a2a5c0", "filename": "libjava/java/awt/image/SinglePixelPackedSampleModel.java", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FSinglePixelPackedSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fimage%2FSinglePixelPackedSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FSinglePixelPackedSampleModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9bdd7d6fd34438cc77093f3c5b5f1ff73f053edb", "filename": "libjava/java/awt/print/Book.java", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fprint%2FBook.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fprint%2FBook.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FBook.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "3e63211ef153c4bbf70ff6da747daf2af9a35740", "filename": "libjava/java/awt/print/Printable.java", "status": "modified", "additions": 37, "deletions": 47, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fprint%2FPrintable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fprint%2FPrintable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrintable.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "8998aa0ff893c2e310c90661dd28f0550f2a9023", "filename": "libjava/java/awt/print/PrinterJob.java", "status": "modified", "additions": 239, "deletions": 212, "changes": 451, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "4f0af1c9dd494605d008cdb74d2ca4020a5238a2", "filename": "libjava/javax/swing/AbstractAction.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractAction.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "adb3af40823922da39ddd078812c21e2b8bdb75c", "filename": "libjava/javax/swing/AbstractButton.java", "status": "modified", "additions": 121, "deletions": 134, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractButton.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "196e2e2696c73b3467868edf49231216bc76e4fc", "filename": "libjava/javax/swing/AbstractCellEditor.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9fe1bcbee2f5eed31a70dea4e3a6fae1d9d2922c", "filename": "libjava/javax/swing/AbstractListModel.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractListModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "1d3a621e429a88fee0d6b7366037fe6fc9a88c76", "filename": "libjava/javax/swing/AbstractSpinnerModel.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractSpinnerModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FAbstractSpinnerModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractSpinnerModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "645252f5b26f185dec1226983bd3e99930e1fc43", "filename": "libjava/javax/swing/ActionMap.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FActionMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FActionMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FActionMap.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "4f0a1ee4e2eb2764e5ac18dfab33252313de4e12", "filename": "libjava/javax/swing/BorderFactory.java", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FBorderFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FBorderFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBorderFactory.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "7532d3087124f55134cb43467c0b322440f4fd26", "filename": "libjava/javax/swing/Box.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBox.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0c704bed261af46a8e3ea2f83c84a00472b8a262", "filename": "libjava/javax/swing/ButtonModel.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FButtonModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FButtonModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FButtonModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "5c298dbca1bec060fd450c57decaa015d651805d", "filename": "libjava/javax/swing/CellEditor.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FCellEditor.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "6e6c2cad07470fe414a6254a839c2224c9900155", "filename": "libjava/javax/swing/CellRendererPane.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FCellRendererPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FCellRendererPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FCellRendererPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "6aa80adf5afa83b0ef44d3f9760b3776a758cae4", "filename": "libjava/javax/swing/DebugGraphics.java", "status": "modified", "additions": 732, "deletions": 670, "changes": 1402, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDebugGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDebugGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDebugGraphics.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9a2d974cbaaf8d6ccbf52093dbb5a83094b42b1a", "filename": "libjava/javax/swing/DefaultBoundedRangeModel.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "543428a931dbb58c74a05e22f428ca8aa6a14572", "filename": "libjava/javax/swing/DefaultButtonModel.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "1dd17b43555d4bb18178f13d82cf1fc4dfa21d15", "filename": "libjava/javax/swing/DefaultCellEditor.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultCellEditor.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "4928c5dc9f4b14730dbe85bad7a7252aa32852ff", "filename": "libjava/javax/swing/DefaultDesktopManager.java", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultDesktopManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultDesktopManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultDesktopManager.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "4c4cee3c2bb0fb6f41d4c7ae8443ff4996cdce30", "filename": "libjava/javax/swing/DefaultListCellRenderer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "d5801c7dde0df1656e4c4bd25ecf8838db6b5bf5", "filename": "libjava/javax/swing/DefaultListSelectionModel.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0b1371ed9e10ab33eefbbc38bfd338204f098092", "filename": "libjava/javax/swing/DefaultSingleSelectionModel.java", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "8e404e948ab51195a48f1abc31f3c9928780650b", "filename": "libjava/javax/swing/FocusManager.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FFocusManager.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "73302ad19dc7e5b7dbe0bb66f06ed8aa3cb8a03c", "filename": "libjava/javax/swing/GrayFilter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FGrayFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FGrayFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FGrayFilter.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "3f0bc3f47e6d00794fcbf29d85637a91667016f8", "filename": "libjava/javax/swing/InputMap.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FInputMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FInputMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FInputMap.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "ccd13d285cc098c8d0f9fd8d3d52d5175c80c5fc", "filename": "libjava/javax/swing/InputVerifier.java", "status": "modified", "additions": 34, "deletions": 38, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FInputVerifier.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FInputVerifier.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FInputVerifier.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "42d7426abcf937a6e567ecd41e814b3ceb4735a7", "filename": "libjava/javax/swing/JApplet.java", "status": "modified", "additions": 172, "deletions": 141, "changes": 313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJApplet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJApplet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJApplet.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "36cd0715c705c62426a8a5586238e630e4d9d771", "filename": "libjava/javax/swing/JCheckBox.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBox.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "76377b618fcb6c618947864345429668c7d417b4", "filename": "libjava/javax/swing/JCheckBoxMenuItem.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "27809cee09e96c9400389b3facefd61ba2b84529", "filename": "libjava/javax/swing/JColorChooser.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJColorChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJColorChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJColorChooser.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "86f20b099eb6507729f8926d57ac31e26c579a9b", "filename": "libjava/javax/swing/JComboBox.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJComboBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJComboBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComboBox.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "c22c2b2e7025a68ff04e25d998c8ce3719dadc35", "filename": "libjava/javax/swing/JComponent.java", "status": "modified", "additions": 127, "deletions": 21, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComponent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "996aaf191bdaa33980291ea52b845599e2934eda", "filename": "libjava/javax/swing/JDesktopPane.java", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJDesktopPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJDesktopPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJDesktopPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "ace284bd5da9dda1ec8a9d21319ed57a98f1fa27", "filename": "libjava/javax/swing/JDialog.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJDialog.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "3b66c2bcb4e9f0504b0dd50ba216f5605ace8790", "filename": "libjava/javax/swing/JEditorPane.java", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJEditorPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "f653c708bd900b3367c435a47089a4a13d75cb1e", "filename": "libjava/javax/swing/JFileChooser.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFileChooser.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "eaf53555ba1b51aff0d0376219fe3d8de328d10b", "filename": "libjava/javax/swing/JFormattedTextField.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "aa641caa3c40ca3caffaa40b2538b0bfac856311", "filename": "libjava/javax/swing/JFrame.java", "status": "modified", "additions": 171, "deletions": 170, "changes": 341, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFrame.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "ead61f218fada2d305098b38b7ae635459ea3e98", "filename": "libjava/javax/swing/JInternalFrame.java", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJInternalFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJInternalFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJInternalFrame.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "b3d7225b1e47d9a426bf115d0446b5f5a607d7dc", "filename": "libjava/javax/swing/JLabel.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLabel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "a200f28925803d8ca6dbc0185548019d10764790", "filename": "libjava/javax/swing/JLayeredPane.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLayeredPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "d88a4db599c3eedf49f5e98511a50209051e69fe", "filename": "libjava/javax/swing/JList.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJList.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "812c26bed01ae87a673f6f9b632b7b2eb6d86078", "filename": "libjava/javax/swing/JMenu.java", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenu.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "904ba3b69a30d2928a5bd5bf1e32842c66ad627a", "filename": "libjava/javax/swing/JMenuBar.java", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenuBar.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0aaf0c790e2ef0566a5f20d18cc319684d7f69a0", "filename": "libjava/javax/swing/JMenuItem.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenuItem.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "26236822cecbe04ae5f9967a1c26fcb4800a719c", "filename": "libjava/javax/swing/JOptionPane.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJOptionPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "34a7c9fdcdd0be3b1efaa49849e0076f7c6b33a9", "filename": "libjava/javax/swing/JPanel.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPanel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "133c99ac310909d7741a4196630c1dcd5fe07193", "filename": "libjava/javax/swing/JPasswordField.java", "status": "modified", "additions": 179, "deletions": 155, "changes": 334, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJPasswordField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJPasswordField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPasswordField.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "76f63621d7e0b0e1483c18f05f61882c9593c823", "filename": "libjava/javax/swing/JPopupMenu.java", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPopupMenu.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "fc06d15a114707e2f1a884147b0aea2efbec4afe", "filename": "libjava/javax/swing/JRadioButton.java", "status": "modified", "additions": 170, "deletions": 21, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRadioButton.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "2aefb3395466714e54ee29576e53487f9aa2d70a", "filename": "libjava/javax/swing/JRadioButtonMenuItem.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJRadioButtonMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJRadioButtonMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRadioButtonMenuItem.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "4f067c9aab9a42cec57f1cf5b6462e279e203816", "filename": "libjava/javax/swing/JRootPane.java", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJRootPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJRootPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRootPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "b755c6f2a999d11782f6bede4f2a4acbc1402d6a", "filename": "libjava/javax/swing/JScrollBar.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJScrollBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJScrollBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJScrollBar.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "01131b7268edcee76e3c515d199a9bb4cba7ed10", "filename": "libjava/javax/swing/JScrollPane.java", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJScrollPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "271c5119f22d9fcfdab0360f1faf569215558f25", "filename": "libjava/javax/swing/JSpinner.java", "status": "modified", "additions": 78, "deletions": 11, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJSpinner.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJSpinner.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJSpinner.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9cdad16a7cff59697e8a8b18d1f2715352cb0145", "filename": "libjava/javax/swing/JSplitPane.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJSplitPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJSplitPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJSplitPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "25733df4a791a2606d98830b5e13c69b3113849c", "filename": "libjava/javax/swing/JTabbedPane.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTabbedPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "ae2c4af5fb5a3d7027d9df07a699755fdf5c7753", "filename": "libjava/javax/swing/JTable.java", "status": "modified", "additions": 44, "deletions": 9, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTable.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "2561775286b90a714377355ae0f0f47b4a4ada79", "filename": "libjava/javax/swing/JTextArea.java", "status": "modified", "additions": 242, "deletions": 14, "changes": 256, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTextArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTextArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTextArea.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "5fe104b50932d2b57b275052e9443b1fa46fb8df", "filename": "libjava/javax/swing/JTextField.java", "status": "modified", "additions": 147, "deletions": 1, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTextField.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "95d2d50015ae27dd09b98c18eb44ee42b2e8a48b", "filename": "libjava/javax/swing/JTextPane.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTextPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTextPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTextPane.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "8a38d48d3aa58849dfbd11dd4c18c390edd0e1d5", "filename": "libjava/javax/swing/JToggleButton.java", "status": "modified", "additions": 168, "deletions": 9, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJToggleButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJToggleButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToggleButton.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "db8bb569e9f50b6bcc27a96aca58227e776b061f", "filename": "libjava/javax/swing/JToolBar.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJToolBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJToolBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToolBar.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "8099ef9387b94fe52ea2973a0c5a46f7de63e38b", "filename": "libjava/javax/swing/JToolTip.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJToolTip.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJToolTip.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToolTip.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "8d52257c53662b805ece20aa9b076e30cf6a29d3", "filename": "libjava/javax/swing/JTree.java", "status": "modified", "additions": 206, "deletions": 8, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTree.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJTree.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTree.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9b26c8b21af546f13251d8c9919e427c17cd472b", "filename": "libjava/javax/swing/JViewport.java", "status": "modified", "additions": 39, "deletions": 14, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJViewport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJViewport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJViewport.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "3601b69410532dfb01ec9b977931cdce71a36056", "filename": "libjava/javax/swing/JWindow.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FJWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJWindow.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "405df0e65a7efb176551da8ac092b2f8bac5cdcf", "filename": "libjava/javax/swing/ListModel.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FListModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "3a56a114943436df9e818a5a1a93805c5426048d", "filename": "libjava/javax/swing/LookAndFeel.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FLookAndFeel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "2e93c01e9345b870806a5059db45827972106250", "filename": "libjava/javax/swing/MenuSelectionManager.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "56ae3bcf772e3d5fec8b9dbe433dd0ae0bf50d08", "filename": "libjava/javax/swing/ProgressMonitorInputStream.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FProgressMonitorInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FProgressMonitorInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FProgressMonitorInputStream.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "1c9208e7a3bf25f7fd3ace7739a4aa26c6322dfd", "filename": "libjava/javax/swing/RepaintManager.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRepaintManager.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "d2eff356cba8ee1d3662f2bfffa2978a8d080713", "filename": "libjava/javax/swing/RootPaneContainer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FRootPaneContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FRootPaneContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRootPaneContainer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "0da8f18e54913abfd28effdd392d9d8b0efaeb9f", "filename": "libjava/javax/swing/ScrollPaneLayout.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "4da26146906630b37a4310812f08a6a02cfe189f", "filename": "libjava/javax/swing/SpinnerListModel.java", "status": "added", "additions": 296, "deletions": 0, "changes": 296, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSpinnerListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSpinnerListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSpinnerListModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "ea5f431d46206df066732f7c97ec81ef590a90e6", "filename": "libjava/javax/swing/SpinnerModel.java", "status": "modified", "additions": 62, "deletions": 7, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSpinnerModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSpinnerModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSpinnerModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "370007cb895b7626b0d772bdd569788c24614222", "filename": "libjava/javax/swing/SpinnerNumberModel.java", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSpinnerNumberModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSpinnerNumberModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSpinnerNumberModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "07357dcc8621d38ccb212566d02599a6fdf9b362", "filename": "libjava/javax/swing/SpringLayout.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSpringLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSpringLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSpringLayout.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "feacf4fca228a2690ab76f2424ea782ecb035cc7", "filename": "libjava/javax/swing/SwingUtilities.java", "status": "modified", "additions": 173, "deletions": 1, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSwingUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FSwingUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSwingUtilities.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "afdf4f32d586b89b9cb0500a6240178879c35a69", "filename": "libjava/javax/swing/Timer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FTimer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FTimer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FTimer.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "6245786afa3c7f26b0896899b48daca3f16a2f68", "filename": "libjava/javax/swing/ToolTipManager.java", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FToolTipManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FToolTipManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FToolTipManager.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "16b5016b3afe9fc045237bc77146d67dc0cd136c", "filename": "libjava/javax/swing/TransferHandler.java", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FTransferHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FTransferHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FTransferHandler.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "c32cebd5a810e76a562b3d552c78cb08f61c4d78", "filename": "libjava/javax/swing/UIDefaults.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIDefaults.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9722129ab7cda77218ca93387d92ab70a286ed51", "filename": "libjava/javax/swing/UIManager.java", "status": "modified", "additions": 108, "deletions": 2, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FUIManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2FUIManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIManager.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "b95814b45c0cec6501effc60c9b177c273a31ce6", "filename": "libjava/javax/swing/border/MatteBorder.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fborder%2FMatteBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fborder%2FMatteBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FMatteBorder.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "4ecfab4a3f31bf129a1ff7ef8ad4eb3693826be7", "filename": "libjava/javax/swing/colorchooser/AbstractColorChooserPanel.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "2dc0e87c53c780cc1358707506f8361e76106bf0", "filename": "libjava/javax/swing/colorchooser/ColorSelectionModel.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorSelectionModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "8852935e563230ee03ca0c15cc227ff1b4650fe9", "filename": "libjava/javax/swing/colorchooser/DefaultColorSelectionModel.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultColorSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultColorSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultColorSelectionModel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "c2494039b8dfcca1ecab2486bfac9aa43b9f81cf", "filename": "libjava/javax/swing/colorchooser/DefaultHSBChooserPanel.java", "status": "modified", "additions": 30, "deletions": 18, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultHSBChooserPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultHSBChooserPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultHSBChooserPanel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "e1e7aa91f7fde696cdc98231e4b6906d671e9da2", "filename": "libjava/javax/swing/colorchooser/DefaultPreviewPanel.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultPreviewPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultPreviewPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultPreviewPanel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "6002854c01dd3169e920e2e41adcf109c141b3fe", "filename": "libjava/javax/swing/colorchooser/DefaultRGBChooserPanel.java", "status": "modified", "additions": 41, "deletions": 25, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultRGBChooserPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultRGBChooserPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultRGBChooserPanel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "7e5a4eff0c5729d0103ae5d055e02a1e8515adce", "filename": "libjava/javax/swing/colorchooser/DefaultSwatchChooserPanel.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultSwatchChooserPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultSwatchChooserPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultSwatchChooserPanel.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "63f00a4e55bc35b6976b9478c8e9758567d65780", "filename": "libjava/javax/swing/event/AncestorEvent.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FAncestorEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FAncestorEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FAncestorEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "a3a155a31740025deb644d8e34e65fecb95db374", "filename": "libjava/javax/swing/event/HyperlinkEvent.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FHyperlinkEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FHyperlinkEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FHyperlinkEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9f03116773b339824b717fd21c4fe7b690fb54e3", "filename": "libjava/javax/swing/event/InternalFrameEvent.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "8d3a0a5420fdb0fd1343dfe995dc93472da6d299", "filename": "libjava/javax/swing/event/MenuDragMouseEvent.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FMenuDragMouseEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FMenuDragMouseEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FMenuDragMouseEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "aecc992688b3270dd60c5e565858ff28259c2bf0", "filename": "libjava/javax/swing/event/MenuKeyEvent.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FMenuKeyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FMenuKeyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FMenuKeyEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "17a71e409b257c486998997cadfe8501bdd5de18", "filename": "libjava/javax/swing/event/TableColumnModelEvent.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTableColumnModelEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTableColumnModelEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTableColumnModelEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "ba8a36d3b8ff77c4c256f9c47501203c3dd4771d", "filename": "libjava/javax/swing/event/TableModelEvent.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTableModelEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTableModelEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTableModelEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "40d08f0276883e67af0895381dd230ef2cf4d664", "filename": "libjava/javax/swing/event/TreeExpansionEvent.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTreeExpansionEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTreeExpansionEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTreeExpansionEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "7dbbc7953ec691002bee46ab5a671293e358551f", "filename": "libjava/javax/swing/event/TreeModelEvent.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTreeModelEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTreeModelEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTreeModelEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "6d2f461e9c3d440bbee9158646ae5ff739eed988", "filename": "libjava/javax/swing/event/TreeSelectionEvent.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTreeSelectionEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTreeSelectionEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTreeSelectionEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "35364b9fb6d6172277ba8a987a08611569883916", "filename": "libjava/javax/swing/event/TreeWillExpandListener.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTreeWillExpandListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FTreeWillExpandListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTreeWillExpandListener.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "9e989d1a4dad321af2784c4f86cec774d357e9ee", "filename": "libjava/javax/swing/event/UndoableEditEvent.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FUndoableEditEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fevent%2FUndoableEditEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FUndoableEditEvent.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "f680e8fec70f1020f6fa8ae7e0bc2ba0f2b01c84", "filename": "libjava/javax/swing/filechooser/FileView.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileView.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileView.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ffilechooser%2FFileView.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "6b61f48a090b4418f9c25fd8b43b9b4115e11019", "filename": "libjava/javax/swing/plaf/BorderUIResource.java", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FBorderUIResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FBorderUIResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FBorderUIResource.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "80e60c8f1a79d9be9b73cfd6b37711a98d5bcb32", "filename": "libjava/javax/swing/plaf/ComponentUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FComponentUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FComponentUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FComponentUI.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "90371815419d4a254dd57aeb99fce6d0c8dbb9f6", "filename": "libjava/javax/swing/plaf/FileChooserUI.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FFileChooserUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FFileChooserUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FFileChooserUI.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "3af16b757fef46aa713f9463c6fc0edcecd05cf7", "filename": "libjava/javax/swing/plaf/IconUIResource.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FIconUIResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FIconUIResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FIconUIResource.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "1639c41d3a968e959fc64ae4913ef03ffd85c52e", "filename": "libjava/javax/swing/plaf/ListUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FListUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FListUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FListUI.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "7e71a4b2ecba1bc938ad01e67b0201f7fa9dd481", "filename": "libjava/javax/swing/plaf/PopupMenuUI.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FPopupMenuUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FPopupMenuUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FPopupMenuUI.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "146db76644d15d59618e9c4a148a32ab51b20185", "filename": "libjava/javax/swing/plaf/SplitPaneUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FSplitPaneUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FSplitPaneUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FSplitPaneUI.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "f0cf69919f22a07ce50b7179a0f9bc6a7ef05643", "filename": "libjava/javax/swing/plaf/TabbedPaneUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FTabbedPaneUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FTabbedPaneUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FTabbedPaneUI.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "b28dd372eef20164249a4f07d6c1a22afdd25d7f", "filename": "libjava/javax/swing/plaf/TextUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FTextUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FTextUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FTextUI.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "d4bee57cfe49e42072e71dd0d8ef517fa471fa4e", "filename": "libjava/javax/swing/plaf/TreeUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FTreeUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2FTreeUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FTreeUI.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "f876a783fe23dbceb4451c279def3b0a9a60b6a8", "filename": "libjava/javax/swing/plaf/basic/BasicArrowButton.java", "status": "modified", "additions": 156, "deletions": 195, "changes": 351, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicArrowButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicArrowButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicArrowButton.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "dd668e3533105cd4c7f721e5a534c7112a73dcea", "filename": "libjava/javax/swing/plaf/basic/BasicBorders.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicBorders.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicBorders.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicBorders.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}, {"sha": "ed04d281254e2f4d6f6820b819fbc3014665f990", "filename": "libjava/javax/swing/plaf/basic/BasicButtonUI.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea28b8f60fb4113053238a22a4d2c508f39710bb/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonUI.java?ref=ea28b8f60fb4113053238a22a4d2c508f39710bb"}]}