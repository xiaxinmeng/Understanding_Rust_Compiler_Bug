{"sha": "783dab6bd56bc7540d376af70fc392b040125519", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgzZGFiNmJkNTZiYzc1NDBkMzc2YWY3MGZjMzkyYjA0MDEyNTUxOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-15T12:56:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-15T12:56:16Z"}, "message": "common.opt (lto_partition_model): New enum.\n\n2014-04-15  Richard Biener  <rguenther@suse.de>\n\n\t* common.opt (lto_partition_model): New enum.\n\t(flto-partition=): Merge separate options with a single with argument,\n\tadd -flto-partition=one support.\n\t* flag-types.h (enum lto_partition_model): Declare.\n\t* opts.c (finish_options): Remove duplicate -flto-partition=\n\toption check.\n\t* lto-wrapper.c (run_gcc): Adjust.\n\n\tlto/\n\t* lto.c: Include params.h.\n\t(do_whole_program_analysis): Switch on flag_lto_partition value,\n\tadd support for LTO_PARTITION_ONE.\n\t* lto-partition.h (lto_balanced_map): Adjust.\n\t* lto-partition.c (lto_balanced_map): Get number of desired\n\tpartitions as argument to support -flto-partition=one.\n\nFrom-SVN: r209416", "tree": {"sha": "860d0c78d022bf79771f4149527a63c6720be8d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/860d0c78d022bf79771f4149527a63c6720be8d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/783dab6bd56bc7540d376af70fc392b040125519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783dab6bd56bc7540d376af70fc392b040125519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/783dab6bd56bc7540d376af70fc392b040125519", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783dab6bd56bc7540d376af70fc392b040125519/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f51b85728a2695997da7d4f521de41a957b3b21c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51b85728a2695997da7d4f521de41a957b3b21c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f51b85728a2695997da7d4f521de41a957b3b21c"}], "stats": {"total": 98, "additions": 64, "deletions": 34}, "files": [{"sha": "b23c5d7b6889d685c7c782bb02fc89a7edd2c97b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dab6bd56bc7540d376af70fc392b040125519/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dab6bd56bc7540d376af70fc392b040125519/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=783dab6bd56bc7540d376af70fc392b040125519", "patch": "@@ -1,3 +1,13 @@\n+2014-04-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* common.opt (lto_partition_model): New enum.\n+\t(flto-partition=): Merge separate options with a single with argument,\n+\tadd -flto-partition=one support.\n+\t* flag-types.h (enum lto_partition_model): Declare.\n+\t* opts.c (finish_options): Remove duplicate -flto-partition=\n+\toption check.\n+\t* lto-wrapper.c (run_gcc): Adjust.\n+\n 2014-04-15  Richard Biener  <rguenther@suse.de>\n \n \t* alias.c (ncr_compar): New function."}, {"sha": "da275e5cb45053ab9b62475926111fd0ec1ceeb6", "filename": "gcc/common.opt", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=783dab6bd56bc7540d376af70fc392b040125519", "patch": "@@ -1495,21 +1495,27 @@ flto=\n Common RejectNegative Joined Var(flag_lto)\n Link-time optimization with number of parallel jobs or jobserver.\n \n-flto-partition=1to1\n-Common Var(flag_lto_partition_1to1)\n-Partition symbols and vars at linktime based on object files they originate from\n+Enum\n+Name(lto_partition_model) Type(enum lto_partition_model) UnknownError(unknown LTO partitioning model %qs)\n \n-flto-partition=balanced\n-Common Var(flag_lto_partition_balanced)\n-Partition functions and vars at linktime into approximately same sized buckets\n+EnumValue\n+Enum(lto_partition_model) String(none) Value(LTO_PARTITION_NONE)\n \n-flto-partition=max\n-Common Var(flag_lto_partition_max)\n-Put every symbol into separate partition\n+EnumValue\n+Enum(lto_partition_model) String(one) Value(LTO_PARTITION_ONE)\n+\n+EnumValue\n+Enum(lto_partition_model) String(balanced) Value(LTO_PARTITION_BALANCED)\n+\n+EnumValue\n+Enum(lto_partition_model) String(1to1) Value(LTO_PARTITION_1TO1)\n+\n+EnumValue\n+Enum(lto_partition_model) String(max) Value(LTO_PARTITION_MAX)\n \n-flto-partition=none\n-Common Var(flag_lto_partition_none)\n-Disable partioning and streaming\n+flto-partition=\n+Common Joined RejectNegative Enum(lto_partition_model) Var(flag_lto_partition) Init(LTO_PARTITION_BALANCED)\n+Specify the algorithm to partition symbols and vars at linktime\n \n ; The initial value of -1 comes from Z_DEFAULT_COMPRESSION in zlib.h.\n flto-compression-level="}, {"sha": "97382719ff777cac0161540b8efac2f4609be285", "filename": "gcc/flag-types.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Fflag-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Fflag-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflag-types.h?ref=783dab6bd56bc7540d376af70fc392b040125519", "patch": "@@ -229,4 +229,14 @@ enum vtv_priority {\n   VTV_STANDARD_PRIORITY = 1,\n   VTV_PREINIT_PRIORITY  = 2\n };\n+\n+/* flag_lto_partition initialization values.  */\n+enum lto_partition_model {\n+  LTO_PARTITION_NONE = 0,\n+  LTO_PARTITION_ONE = 1,\n+  LTO_PARTITION_BALANCED = 2,\n+  LTO_PARTITION_1TO1 = 3,\n+  LTO_PARTITION_MAX = 4\n+};\n+\n #endif /* ! GCC_FLAG_TYPES_H */"}, {"sha": "fd604b0bdb1bac694cbcd4aad3125640ad13e3ee", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=783dab6bd56bc7540d376af70fc392b040125519", "patch": "@@ -657,9 +657,7 @@ run_gcc (unsigned argc, char *argv[])\n \t  /* Drop arguments that we want to take from the link line.  */\n \t  case OPT_flto_:\n \t  case OPT_flto:\n-\t  case OPT_flto_partition_none:\n-\t  case OPT_flto_partition_1to1:\n-\t  case OPT_flto_partition_balanced:\n+\t  case OPT_flto_partition_:\n \t      continue;\n \n \t  default:\n@@ -727,8 +725,9 @@ run_gcc (unsigned argc, char *argv[])\n \t  verbose = 1;\n \t  break;\n \n-\tcase OPT_flto_partition_none:\n-\t  no_partition = true;\n+\tcase OPT_flto_partition_:\n+\t  if (strcmp (option->arg, \"none\") == 0)\n+\t    no_partition = true;\n \t  break;\n \n \tcase OPT_flto_:"}, {"sha": "d0e14c1b2f3a55ffdbaba79e7ad82a59bf445d53", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=783dab6bd56bc7540d376af70fc392b040125519", "patch": "@@ -1,3 +1,12 @@\n+2014-04-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* lto.c: Include params.h.\n+\t(do_whole_program_analysis): Switch on flag_lto_partition value,\n+\tadd support for LTO_PARTITION_ONE.\n+\t* lto-partition.h (lto_balanced_map): Adjust.\n+\t* lto-partition.c (lto_balanced_map): Get number of desired\n+\tpartitions as argument to support -flto-partition=one.\n+\n 2014-04-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto/lto-symtab.c (lto_cgraph_replace_node): Don't re-merge"}, {"sha": "bb594344c2957216698fb876ed7a1f9f5c43ce93", "filename": "gcc/lto/lto-partition.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto%2Flto-partition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto%2Flto-partition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.c?ref=783dab6bd56bc7540d376af70fc392b040125519", "patch": "@@ -415,7 +415,7 @@ varpool_node_cmp (const void *pa, const void *pb)\n    and in-partition calls was reached.  */\n \n void\n-lto_balanced_map (void)\n+lto_balanced_map (int n_lto_partitions)\n {\n   int n_nodes = 0;\n   int n_varpool_nodes = 0, varpool_pos = 0, best_varpool_pos = 0;\n@@ -472,7 +472,7 @@ lto_balanced_map (void)\n     }\n \n   /* Compute partition size and create the first partition.  */\n-  partition_size = total_size / PARAM_VALUE (PARAM_LTO_PARTITIONS);\n+  partition_size = total_size / n_lto_partitions;\n   if (partition_size < PARAM_VALUE (MIN_PARTITION_SIZE))\n     partition_size = PARAM_VALUE (MIN_PARTITION_SIZE);\n   npartitions = 1;\n@@ -699,9 +699,8 @@ lto_balanced_map (void)\n \n \t  /* Since the size of partitions is just approximate, update the size after\n \t     we finished current one.  */\n-\t  if (npartitions < PARAM_VALUE (PARAM_LTO_PARTITIONS))\n-\t    partition_size = total_size\n-\t      / (PARAM_VALUE (PARAM_LTO_PARTITIONS) - npartitions);\n+\t  if (npartitions < n_lto_partitions)\n+\t    partition_size = total_size / (n_lto_partitions - npartitions);\n \t  else\n \t    partition_size = INT_MAX;\n "}, {"sha": "8db61b30176f59a52d566a1255c7680cf27577b6", "filename": "gcc/lto/lto-partition.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto%2Flto-partition.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto%2Flto-partition.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.h?ref=783dab6bd56bc7540d376af70fc392b040125519", "patch": "@@ -34,7 +34,7 @@ extern vec<ltrans_partition> ltrans_partitions;\n \n void lto_1_to_1_map (void);\n void lto_max_map (void);\n-void lto_balanced_map (void);\n+void lto_balanced_map (int);\n void lto_promote_cross_file_statics (void);\n void free_ltrans_partitions (void);\n void lto_promote_statics_nonwpa (void);"}, {"sha": "ec711ceb91935a397295f02e523e334bd9b0f48b", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=783dab6bd56bc7540d376af70fc392b040125519", "patch": "@@ -50,6 +50,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"context.h\"\n #include \"pass_manager.h\"\n #include \"ipa-inline.h\"\n+#include \"params.h\"\n \n \n /* Number of parallel tasks to run, -1 if we want to use GNU Make jobserver.  */\n@@ -3267,12 +3268,16 @@ do_whole_program_analysis (void)\n   timevar_pop (TV_WHOPR_WPA);\n \n   timevar_push (TV_WHOPR_PARTITIONING);\n-  if (flag_lto_partition_1to1)\n+  if (flag_lto_partition == LTO_PARTITION_1TO1)\n     lto_1_to_1_map ();\n-  else if (flag_lto_partition_max)\n+  else if (flag_lto_partition == LTO_PARTITION_MAX)\n     lto_max_map ();\n+  else if (flag_lto_partition == LTO_PARTITION_ONE)\n+    lto_balanced_map (1);\n+  else if (flag_lto_partition == LTO_PARTITION_BALANCED)\n+    lto_balanced_map (PARAM_VALUE (PARAM_LTO_PARTITIONS));\n   else\n-    lto_balanced_map ();\n+    gcc_unreachable ();\n \n   /* Inline summaries are needed for balanced partitioning.  Free them now so\n      the memory can be used for streamer caches.  */"}, {"sha": "e85e73acf79444d7f54cac34a19553c6501aca9a", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dab6bd56bc7540d376af70fc392b040125519/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=783dab6bd56bc7540d376af70fc392b040125519", "patch": "@@ -824,14 +824,6 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n \t  opts->x_flag_fat_lto_objects = 1;\n \t}\n     }\n-  if ((opts->x_flag_lto_partition_balanced != 0) + (opts->x_flag_lto_partition_1to1 != 0)\n-       + (opts->x_flag_lto_partition_none != 0) >= 1)\n-    {\n-      if ((opts->x_flag_lto_partition_balanced != 0)\n-\t   + (opts->x_flag_lto_partition_1to1 != 0)\n-\t   + (opts->x_flag_lto_partition_none != 0) > 1)\n-\terror_at (loc, \"only one -flto-partition value can be specified\");\n-    }\n \n   /* We initialize opts->x_flag_split_stack to -1 so that targets can set a\n      default value if they choose based on other options.  */"}]}