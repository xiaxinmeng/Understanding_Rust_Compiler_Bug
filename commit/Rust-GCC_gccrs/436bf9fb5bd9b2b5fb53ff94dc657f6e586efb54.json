{"sha": "436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM2YmY5ZmI1YmQ5YjJiNWZiNTNmZjk0ZGM2NTdmNmU1ODZlZmI1NA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.informatik.uni-dortmund.de", "date": "1998-05-07T01:59:07Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "1998-05-07T01:59:07Z"}, "message": "m68k.md (adddi3, subdi3): Properly negate the DImode constant.\n\n\t* config/m68k/m68k.md (adddi3, subdi3): Properly negate the DImode\n\tconstant.\n\nFrom-SVN: r19607", "tree": {"sha": "e007be64757d1113301dffe37530cf95b92682ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e007be64757d1113301dffe37530cf95b92682ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54/comments", "author": null, "committer": null, "parents": [{"sha": "a59bfd78eb56b1828ef7def1d1fa96bde8f4006c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59bfd78eb56b1828ef7def1d1fa96bde8f4006c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a59bfd78eb56b1828ef7def1d1fa96bde8f4006c"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "d49b70ed32a2486a1060c30ec93eeb43d3c14e81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54", "patch": "@@ -1,3 +1,8 @@\n+Thu May  7 10:55:59 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* config/m68k/m68k.md (adddi3, subdi3): Properly negate the DImode\n+\tconstant. \n+\n Wed May  6 22:32:37 CDT 1998 Robert Lipe  <robertl@dgii.com>\n \n \t* Makefile.in (dwarfout.o) Add toplev.h dependency."}, {"sha": "cb31fa5f09290e6556f150368cf0dd4f03f9987a", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=436bf9fb5bd9b2b5fb53ff94dc657f6e586efb54", "patch": "@@ -2166,7 +2166,11 @@\n \t  else\n \t    operands[1] = adj_offsettable_operand (operands[2], 4);\n \t  xoperands[0] = operands[3];\n-\t  xoperands[1] = operands[2];\n+\t  if (GET_CODE (operands[1]) == CONST_INT\n+\t      && INTVAL (operands[1]) >= -8 && INTVAL (operands[1]) < 0)\n+\t    xoperands[1] = GEN_INT (-INTVAL (operands[2]) - 1);\n+\t  else\n+\t    xoperands[1] = operands[2];\n \t  output_asm_insn (output_move_simode (xoperands), xoperands);\n \t  if (GET_CODE (operands[1]) == CONST_INT)\n \t    {\n@@ -2182,9 +2186,9 @@\n \t\t{\n \t\t  operands[1] = GEN_INT (-INTVAL (operands[1]));\n #ifdef NO_ADDSUB_Q\n-\t\t  return \\\"sub%.l %1,%R0\\;addx%.l %3,%0\\\";\n+\t\t  return \\\"sub%.l %1,%R0\\;subx%.l %3,%0\\\";\n #else\n-\t\t  return \\\"subq%.l %1,%R0\\;addx%.l %3,%0\\\";\n+\t\t  return \\\"subq%.l %1,%R0\\;subx%.l %3,%0\\\";\n #endif\n \t\t}\n \t    }\n@@ -2719,7 +2723,11 @@\n \t  else\n \t    operands[1] = adj_offsettable_operand (operands[2], 4);\n \t  xoperands[0] = operands[3];\n-\t  xoperands[1] = operands[2];\n+\t  if (GET_CODE (operands[1]) == CONST_INT\n+\t      && INTVAL (operands[1]) >= -8 && INTVAL (operands[1]) < 0)\n+\t    xoperands[1] = GEN_INT (-INTVAL (operands[2]) - 1);\n+\t  else\n+\t    xoperands[1] = operands[2];\n \t  output_asm_insn (output_move_simode (xoperands), xoperands);\n \t  if (GET_CODE (operands[1]) == CONST_INT)\n \t    {\n@@ -2735,9 +2743,9 @@\n \t\t{\n \t\t  operands[1] = GEN_INT (-INTVAL (operands[1]));\n #ifdef NO_ADDSUB_Q\n-\t\t  return \\\"add%.l %1,%R0\\;subx%.l %3,%0\\\";\n+\t\t  return \\\"add%.l %1,%R0\\;addx%.l %3,%0\\\";\n #else\n-\t\t  return \\\"addq%.l %1,%R0\\;subx%.l %3,%0\\\";\n+\t\t  return \\\"addq%.l %1,%R0\\;addx%.l %3,%0\\\";\n #endif\n \t\t}\n \t    }"}]}