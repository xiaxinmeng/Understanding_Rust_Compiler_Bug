{"sha": "f8125f0c9ce43aac6d7a96753e4617af68ee0009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgxMjVmMGM5Y2U0M2FhYzZkN2E5Njc1M2U0NjE3YWY2OGVlMDAwOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-11-30T11:34:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-11-30T11:34:31Z"}, "message": "* gcc-interface/utils2.c (gnat_invariant_expr): Add type conversions.\n\nFrom-SVN: r231063", "tree": {"sha": "c9fd197ea12537544785bc54773f93d385651a75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9fd197ea12537544785bc54773f93d385651a75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8125f0c9ce43aac6d7a96753e4617af68ee0009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8125f0c9ce43aac6d7a96753e4617af68ee0009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8125f0c9ce43aac6d7a96753e4617af68ee0009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8125f0c9ce43aac6d7a96753e4617af68ee0009/comments", "author": null, "committer": null, "parents": [{"sha": "14ecca2eea820447afe3214ed635883fbc4244a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14ecca2eea820447afe3214ed635883fbc4244a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14ecca2eea820447afe3214ed635883fbc4244a4"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "cc0add237d1e23cd8b563d604d0842ce89ee6f7c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f8125f0c9ce43aac6d7a96753e4617af68ee0009", "patch": "@@ -1,3 +1,7 @@\n+2015-11-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils2.c (gnat_invariant_expr): Add type conversions.\n+\n 2015-11-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (TYPE_MAX_ALIGN): New macro."}, {"sha": "a74b8a81018d3755e27cfd808591c87ba5632d1d", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=f8125f0c9ce43aac6d7a96753e4617af68ee0009", "patch": "@@ -2860,7 +2860,9 @@ gnat_invariant_expr (tree expr)\n       tree op0 = gnat_invariant_expr (TREE_OPERAND (expr, 0));\n       tree op1 = TREE_OPERAND (expr, 1);\n       if (op0 && TREE_CONSTANT (op1))\n-\treturn fold_build2 (TREE_CODE (expr), type, op0, op1);\n+\treturn\n+\t  fold_build2 (TREE_CODE (expr), type,\n+\t\t       fold_convert (type, op0), fold_convert (type, op1));\n       else\n \treturn NULL_TREE;\n     }"}, {"sha": "e31b7f0c6c6c13c15e42d86362e94b80a4eb9af8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8125f0c9ce43aac6d7a96753e4617af68ee0009", "patch": "@@ -1,3 +1,7 @@\n+2015-11-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/loop_optimization22.ad[sb]: New test.\n+\n 2015-11-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/rep_clause5.ads: New test."}, {"sha": "7fb307b8fbcab4e57b0d89584928fe0f0792c622", "filename": "gcc/testsuite/gnat.dg/loop_optimization22.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization22.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization22.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization22.adb?ref=f8125f0c9ce43aac6d7a96753e4617af68ee0009", "patch": "@@ -0,0 +1,16 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+pragma Overflow_Mode (Minimized);\n+\n+package body Loop_Optimization22 is\n+\n+  procedure Foo (X : Discrim_Type) is\n+      H : array (1 .. Integer (X.Count) + 1) of Float;\n+   begin\n+      for I in 1 .. X.Count loop\n+         H (Integer(I) + 1):= 0.0;\n+      end loop;\n+   end;\n+\n+end Loop_Optimization22;"}, {"sha": "ec3ac0d08337c593a0448bb1c35ad56661940300", "filename": "gcc/testsuite/gnat.dg/loop_optimization22.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization22.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8125f0c9ce43aac6d7a96753e4617af68ee0009/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization22.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization22.ads?ref=f8125f0c9ce43aac6d7a96753e4617af68ee0009", "patch": "@@ -0,0 +1,7 @@\n+package Loop_Optimization22 is\n+\n+  type Discrim_Type (Count : Positive) is null record;\n+\n+  procedure Foo (X : Discrim_Type);\n+\n+end Loop_Optimization22;"}]}