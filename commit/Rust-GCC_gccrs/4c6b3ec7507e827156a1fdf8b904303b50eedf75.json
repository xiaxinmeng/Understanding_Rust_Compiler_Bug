{"sha": "4c6b3ec7507e827156a1fdf8b904303b50eedf75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2YjNlYzc1MDdlODI3MTU2YTFmZGY4YjkwNDMwM2I1MGVlZGY3NQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-04-07T20:23:40Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-04-07T20:23:40Z"}, "message": "re PR fortran/30872 (Bogus \"size of variable is too large\")\n\n2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/30872\n\t* expr.c (find_array_element): Correct arithmetic for rank > 1.\n\n2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/30872\n\t* gfortran.dg/parameter_array_element_1.f90: New test.\n\nFrom-SVN: r123644", "tree": {"sha": "ae62a20e38034b3643e8815eefe741a20a64bc9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae62a20e38034b3643e8815eefe741a20a64bc9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c6b3ec7507e827156a1fdf8b904303b50eedf75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6b3ec7507e827156a1fdf8b904303b50eedf75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c6b3ec7507e827156a1fdf8b904303b50eedf75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6b3ec7507e827156a1fdf8b904303b50eedf75/comments", "author": null, "committer": null, "parents": [{"sha": "909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "6fba5b30aed20b009cb6b38f08b8a1a190ce5068", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6b3ec7507e827156a1fdf8b904303b50eedf75/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6b3ec7507e827156a1fdf8b904303b50eedf75/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4c6b3ec7507e827156a1fdf8b904303b50eedf75", "patch": "@@ -1,3 +1,8 @@\n+2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/30872\n+\t* expr.c (find_array_element): Correct arithmetic for rank > 1.\n+\n 2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31222"}, {"sha": "d3f57172d45427a5bdd1ccc358a9036ddf9ac4b4", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6b3ec7507e827156a1fdf8b904303b50eedf75/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6b3ec7507e827156a1fdf8b904303b50eedf75/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=4c6b3ec7507e827156a1fdf8b904303b50eedf75", "patch": "@@ -899,6 +899,8 @@ find_array_element (gfc_constructor *cons, gfc_array_ref *ar,\n   int i;\n   mpz_t delta;\n   mpz_t offset;\n+  mpz_t span;\n+  mpz_t tmp;\n   gfc_expr *e;\n   try t;\n \n@@ -907,6 +909,8 @@ find_array_element (gfc_constructor *cons, gfc_array_ref *ar,\n \n   mpz_init_set_ui (offset, 0);\n   mpz_init (delta);\n+  mpz_init (tmp);\n+  mpz_init_set_ui (span, 1);\n   for (i = 0; i < ar->dimen; i++)\n     {\n       e = gfc_copy_expr (ar->start[i]);\n@@ -930,7 +934,13 @@ find_array_element (gfc_constructor *cons, gfc_array_ref *ar,\n \t}\n \n       mpz_sub (delta, e->value.integer, ar->as->lower[i]->value.integer);\n+      mpz_mul (delta, delta, span);\n       mpz_add (offset, offset, delta);\n+\n+      mpz_set_ui (tmp, 1);\n+      mpz_add (tmp, tmp, ar->as->upper[i]->value.integer);\n+      mpz_sub (tmp, tmp, ar->as->lower[i]->value.integer);\n+      mpz_mul (span, span, tmp);\n     }\n \n   if (cons)\n@@ -949,6 +959,8 @@ find_array_element (gfc_constructor *cons, gfc_array_ref *ar,\n depart:\n   mpz_clear (delta);\n   mpz_clear (offset);\n+  mpz_clear (span);\n+  mpz_clear (tmp);\n   if (e)\n     gfc_free_expr (e);\n   *rval = cons;"}, {"sha": "fb1bbbe7692705d558c153c7003c324942eb0437", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6b3ec7507e827156a1fdf8b904303b50eedf75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6b3ec7507e827156a1fdf8b904303b50eedf75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c6b3ec7507e827156a1fdf8b904303b50eedf75", "patch": "@@ -1,3 +1,8 @@\n+2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/30872\n+\t* gfortran.dg/parameter_array_element_1.f90: New test.\n+\n 2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31222"}, {"sha": "8dfe544e762c942aaf242a5ef7af454f1e2a4599", "filename": "gcc/testsuite/gfortran.dg/parameter_array_element_1.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6b3ec7507e827156a1fdf8b904303b50eedf75/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_element_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6b3ec7507e827156a1fdf8b904303b50eedf75/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_element_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_element_1.f90?ref=4c6b3ec7507e827156a1fdf8b904303b50eedf75", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile}\n+! { dg-options \"-fdump-tree-original\" }\n+! Tests the fix for PR 30872, in which the array element references bo(1,1) etc.\n+! would be wrong for rank > 1.\n+!\n+! Contributed by Joost VandeVondele <jv244@cam.ac.uk>\n+!\n+ INTEGER, PARAMETER, DIMENSION(2,3) :: bo= &\n+                    RESHAPE((/-1,1,-2,2,-3,3/),(/2,3/))\n+ REAL(kind=8), DIMENSION(  &\n+          bo(1,1):bo(2,1), &\n+          bo(1,2):bo(2,2), &\n+          bo(1,3):bo(2,3)) :: out_val\n+ out_val=0.0\n+END\n+! Scan for the 105 in the declaration real8 out_val[105];\n+! { dg-final { scan-tree-dump-times \"105\" 1 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }\n+"}]}