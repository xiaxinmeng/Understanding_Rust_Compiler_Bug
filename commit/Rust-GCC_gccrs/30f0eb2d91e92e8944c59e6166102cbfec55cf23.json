{"sha": "30f0eb2d91e92e8944c59e6166102cbfec55cf23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmMGViMmQ5MWU5MmU4OTQ0YzU5ZTYxNjYxMDJjYmZlYzU1Y2YyMw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2012-02-06T22:09:13Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2012-02-06T22:09:13Z"}, "message": "re PR target/52107 (IBM 128bit long double constant loaded inefficiently)\n\n\tPR target/52107\n\t* config/rs6000/rs6000.c (rs6000_emit_move): Don't create DImode\n\tsubregs of TFmode.\n\nFrom-SVN: r183945", "tree": {"sha": "654b7ed9e49d71cedd6a406013724e75af7da290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/654b7ed9e49d71cedd6a406013724e75af7da290"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30f0eb2d91e92e8944c59e6166102cbfec55cf23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f0eb2d91e92e8944c59e6166102cbfec55cf23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f0eb2d91e92e8944c59e6166102cbfec55cf23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f0eb2d91e92e8944c59e6166102cbfec55cf23/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5f14d626e38bf94e2cf8d3bda0409c2c4de1fe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5f14d626e38bf94e2cf8d3bda0409c2c4de1fe6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5f14d626e38bf94e2cf8d3bda0409c2c4de1fe6"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "3307d716977aa7f90be1897835445e2ca5bae522", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f0eb2d91e92e8944c59e6166102cbfec55cf23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f0eb2d91e92e8944c59e6166102cbfec55cf23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30f0eb2d91e92e8944c59e6166102cbfec55cf23", "patch": "@@ -1,3 +1,9 @@\n+2012-02-07  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/52107\n+\t* config/rs6000/rs6000.c (rs6000_emit_move): Don't create DImode\n+\tsubregs of TFmode.\n+\n 2012-02-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/50969"}, {"sha": "39c07141ccdb2ac107e484e54432d9f423b9e935", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f0eb2d91e92e8944c59e6166102cbfec55cf23/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f0eb2d91e92e8944c59e6166102cbfec55cf23/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=30f0eb2d91e92e8944c59e6166102cbfec55cf23", "patch": "@@ -7010,17 +7010,14 @@ rs6000_emit_move (rtx dest, rtx source, enum machine_mode mode)\n   if (!TARGET_IEEEQUAD && TARGET_LONG_DOUBLE_128\n       && mode == TFmode && GET_CODE (operands[1]) == CONST_DOUBLE)\n     {\n-      /* DImode is used, not DFmode, because simplify_gen_subreg doesn't\n-\t know how to get a DFmode SUBREG of a TFmode.  */\n-      enum machine_mode imode = (TARGET_E500_DOUBLE ? DFmode : DImode);\n-      rs6000_emit_move (simplify_gen_subreg (imode, operands[0], mode, 0),\n-\t\t\tsimplify_gen_subreg (imode, operands[1], mode, 0),\n-\t\t\timode);\n-      rs6000_emit_move (simplify_gen_subreg (imode, operands[0], mode,\n-\t\t\t\t\t     GET_MODE_SIZE (imode)),\n-\t\t\tsimplify_gen_subreg (imode, operands[1], mode,\n-\t\t\t\t\t     GET_MODE_SIZE (imode)),\n-\t\t\timode);\n+      rs6000_emit_move (simplify_gen_subreg (DFmode, operands[0], mode, 0),\n+\t\t\tsimplify_gen_subreg (DFmode, operands[1], mode, 0),\n+\t\t\tDFmode);\n+      rs6000_emit_move (simplify_gen_subreg (DFmode, operands[0], mode,\n+\t\t\t\t\t     GET_MODE_SIZE (DFmode)),\n+\t\t\tsimplify_gen_subreg (DFmode, operands[1], mode,\n+\t\t\t\t\t     GET_MODE_SIZE (DFmode)),\n+\t\t\tDFmode);\n       return;\n     }\n "}]}