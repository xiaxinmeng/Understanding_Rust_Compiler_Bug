{"sha": "66f90a1761f1e819d1dbffff2056836b5d39d545", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZmOTBhMTc2MWYxZTgxOWQxZGJmZmZmMjA1NjgzNmI1ZDM5ZDU0NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-05-24T21:06:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-05-24T21:06:53Z"}, "message": "PR c++/70584 - don't force indirection to an rvalue\n\n\t* cp-gimplify.c (cp_fold_maybe_rvalue): Loop in case cp_fold\n\treturns a decl.\n\t(cp_fold) [INDIRECT_REF]: Don't fold to an rvalue.\n\nFrom-SVN: r236670", "tree": {"sha": "95fca72cd903c1c0c3ca197d74d3ecc22425ab16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95fca72cd903c1c0c3ca197d74d3ecc22425ab16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66f90a1761f1e819d1dbffff2056836b5d39d545", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f90a1761f1e819d1dbffff2056836b5d39d545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f90a1761f1e819d1dbffff2056836b5d39d545", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f90a1761f1e819d1dbffff2056836b5d39d545/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "732eb07625bc086833506374f1ce452096716874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/732eb07625bc086833506374f1ce452096716874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/732eb07625bc086833506374f1ce452096716874"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "8010cb70b94fcf23d2c347a306cf23262c4371c5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f90a1761f1e819d1dbffff2056836b5d39d545/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f90a1761f1e819d1dbffff2056836b5d39d545/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=66f90a1761f1e819d1dbffff2056836b5d39d545", "patch": "@@ -1,3 +1,10 @@\n+2016-05-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/70584\n+\t* cp-gimplify.c (cp_fold_maybe_rvalue): Loop in case cp_fold\n+\treturns a decl.\n+\t(cp_fold) [INDIRECT_REF]: Don't fold to an rvalue.\n+\n 2016-05-24  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/71147"}, {"sha": "0ba5aa956ee1f95f8bc38211449a4cf0d9e555f9", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f90a1761f1e819d1dbffff2056836b5d39d545/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f90a1761f1e819d1dbffff2056836b5d39d545/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=66f90a1761f1e819d1dbffff2056836b5d39d545", "patch": "@@ -1878,13 +1878,21 @@ cp_fully_fold (tree x)\n static tree\n cp_fold_maybe_rvalue (tree x, bool rval)\n {\n-  if (rval && DECL_P (x))\n+  while (true)\n     {\n-      tree v = decl_constant_value (x);\n-      if (v != error_mark_node)\n-\tx = v;\n+      x = cp_fold (x);\n+      if (rval && DECL_P (x))\n+\t{\n+\t  tree v = decl_constant_value (x);\n+\t  if (v != x && v != error_mark_node)\n+\t    {\n+\t      x = v;\n+\t      continue;\n+\t    }\n+\t}\n+      break;\n     }\n-  return cp_fold (x);\n+  return x;\n }\n \n /* Fold expression X which is used as an rvalue.  */\n@@ -2001,7 +2009,7 @@ cp_fold (tree x)\n       if (REF_PARENTHESIZED_P (x))\n \t{\n \t  tree p = maybe_undo_parenthesized_ref (x);\n-\t  return cp_fold_maybe_rvalue (p, rval_ops);\n+\t  return cp_fold (p);\n \t}\n       goto unary;\n "}]}