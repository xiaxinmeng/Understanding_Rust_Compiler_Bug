{"sha": "70a72ca423ac2ca9d5541ef1b940e4dd319b9d07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhNzJjYTQyM2FjMmNhOWQ1NTQxZWYxYjk0MGU0ZGQzMTliOWQwNw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-12-11T18:42:11Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-12-11T18:42:11Z"}, "message": "sh.h (REG_CLASS_HAS_GENERAL_REG): New.\n\n\t* sh.h (REG_CLASS_HAS_GENERAL_REG): New.\n\t(REGISTER_MOVE_COST): Use it.\n\nFrom-SVN: r60041", "tree": {"sha": "a0d4a766d82add151bb600234137ad22395e51ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0d4a766d82add151bb600234137ad22395e51ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07/comments", "author": null, "committer": null, "parents": [{"sha": "5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "09e25490edd99e2c56c784e5d9b34f3d343b2e3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70a72ca423ac2ca9d5541ef1b940e4dd319b9d07", "patch": "@@ -1,3 +1,8 @@\n+Wed Dec 11 18:39:52 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.h (REG_CLASS_HAS_GENERAL_REG): New.\n+\t(REGISTER_MOVE_COST): Use it.\n+\n 2002-12-11  Richard Henderson  <rth@redhat.com>\n \n \t* tree.h (MODULE_LOCAL_P): Kill."}, {"sha": "52f72a1d70162f00387201f568157d35a344bc67", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=70a72ca423ac2ca9d5541ef1b940e4dd319b9d07", "patch": "@@ -2811,32 +2811,41 @@ while (0)\n    If SECONDARY*_RELOAD_CLASS says something about the src/dst pair,\n    it uses this information.  Hence, the general register <-> floating point\n    register information here is not used for SFmode.  */\n+\n+#define REGCLASS_HAS_GENERAL_REG(rclass) \\\n+((rclass)==GENERAL_REGS||(rclass)==R0_REGS||(rclass)==SIBCALL_REGS)\n+/* NB SIBCALL_REGS are not strictly general, as they include TR0-TR4 */\n+\n #define REGISTER_MOVE_COST(MODE, SRCCLASS, DSTCLASS) \\\n  (((((DSTCLASS) == T_REGS) || ((DSTCLASS) == PR_REGS)) ? 10\t\t\\\n    : ((((DSTCLASS) == FP0_REGS || (DSTCLASS) == FP_REGS\t\t\t\\\n \t|| (DSTCLASS) == DF_REGS || (DSTCLASS) == DF_HI_REGS)\t\t\\\n-       && ((SRCCLASS) == GENERAL_REGS || (SRCCLASS) == R0_REGS))\t\\\n-      || (((DSTCLASS) == GENERAL_REGS || (DSTCLASS) == R0_REGS)\t\t\\\n+       && REGCLASS_HAS_GENERAL_REG (SRCCLASS))\t\t\t\t\\\n+      || (REGCLASS_HAS_GENERAL_REG (DSTCLASS)\t\t\t\t\\\n \t  && ((SRCCLASS) == FP0_REGS || (SRCCLASS) == FP_REGS\t\t\\\n \t      || (SRCCLASS) == DF_REGS || (SRCCLASS) == DF_HI_REGS)))\t\\\n    ? (TARGET_SHMEDIA ? 4\t\t\t\t\t\t\\\n       : TARGET_FMOVD ? 8 : 12)\t\t\t\t\t\t\\\n    : (((DSTCLASS) == FPUL_REGS\t\t\t\t\t\t\\\n-       && ((SRCCLASS) == GENERAL_REGS || (SRCCLASS) == R0_REGS))\t\\\n-      || (SRCCLASS == FPUL_REGS\t\t\t\t\t\t\\\n-\t  && ((DSTCLASS) == GENERAL_REGS || (DSTCLASS) == R0_REGS)))\t\\\n+       && REGCLASS_HAS_GENERAL_REG (SRCCLASS))\t\t\t\t\\\n+      || ((SRCCLASS) == FPUL_REGS\t\t\t\t\t\\\n+\t  && REGCLASS_HAS_GENERAL_REG (DSTCLASS)))\t\t\t\\\n    ? 5\t\t\t\t\t\t\t\t\t\\\n    : (((DSTCLASS) == FPUL_REGS\t\t\t\t\t\t\\\n        && ((SRCCLASS) == PR_REGS || (SRCCLASS) == MAC_REGS\t\t\\\n \t    || (SRCCLASS) == T_REGS))\t\t\t\t\t\\\n       || ((SRCCLASS) == FPUL_REGS\t\t\t\t\t\\\n \t  && ((DSTCLASS) == PR_REGS || (DSTCLASS) == MAC_REGS)))\t\\\n    ? 7\t\t\t\t\t\t\t\t\t\\\n-   : (((SRCCLASS) == TARGET_REGS && (DSTCLASS) != GENERAL_REGS)\t\t\\\n-      || ((DSTCLASS) == TARGET_REGS && (SRCCLASS) != GENERAL_REGS))\t\\\n+   : (((SRCCLASS) == TARGET_REGS\t\t\t\t\t\\\n+       && ! REGCLASS_HAS_GENERAL_REG (DSTCLASS))\t\t\t\\\n+      || ((DSTCLASS) == TARGET_REGS\t\t\t\t\t\\\n+\t  && ! REGCLASS_HAS_GENERAL_REG (SRCCLASS)))\t\t\t\\\n    ? 20\t\t\t\t\t\t\t\t\t\\\n-   : (((SRCCLASS) == FPSCR_REGS && (DSTCLASS) != GENERAL_REGS)\t\t\\\n-      || ((DSTCLASS) == FPSCR_REGS && (SRCCLASS) != GENERAL_REGS))\t\\\n+   : (((SRCCLASS) == FPSCR_REGS\t\t\t\t\t\t\\\n+       && ! REGCLASS_HAS_GENERAL_REG (DSTCLASS))\t\t\t\\\n+      || ((DSTCLASS) == FPSCR_REGS\t\t\t\t\t\\\n+\t   && ! REGCLASS_HAS_GENERAL_REG (SRCCLASS)))\t\t\t\\\n    ? 4\t\t\t\t\t\t\t\t\t\\\n    : 2) * ((MODE) == V16SFmode ? 8 : (MODE) == V4SFmode ? 2 : 1))\n "}]}