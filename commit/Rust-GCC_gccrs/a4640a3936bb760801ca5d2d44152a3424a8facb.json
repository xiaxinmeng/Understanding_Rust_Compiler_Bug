{"sha": "a4640a3936bb760801ca5d2d44152a3424a8facb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ2NDBhMzkzNmJiNzYwODAxY2E1ZDJkNDQxNTJhMzQyNGE4ZmFjYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:50:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:50:25Z"}, "message": "[multiple changes]\n\n2011-08-04  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* bindgen.adb: Add comments.\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* einfo.adb, einfo.ads: Free Flag254 and make Formal_Proof_On a\n\tsynthesized flag.\n\t* sem_prag.adb (Analyze_Pragma): record the pragma Annotate\n\t(Formal_Proof, On/Off) in the Rep_Item list of the current subprogram.\n\n2011-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch7.adb, exp_ch6.adb, sem_ch3.adb, layout.adb, sem_ch5.adb,\n\tosint-c.ads, sem_util.ads, gnat1drv.adb, targparm.ads, sem_ch6.adb,\n\tsem_ch13.adb, s-pooloc.adb: Minor reformatting.\n\nFrom-SVN: r177334", "tree": {"sha": "d6b414dd132c799d806e53f7814358013c4f0e2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6b414dd132c799d806e53f7814358013c4f0e2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4640a3936bb760801ca5d2d44152a3424a8facb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4640a3936bb760801ca5d2d44152a3424a8facb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4640a3936bb760801ca5d2d44152a3424a8facb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4640a3936bb760801ca5d2d44152a3424a8facb/comments", "author": null, "committer": null, "parents": [{"sha": "39ade2f90880866196d78b8f523613c60828fd78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ade2f90880866196d78b8f523613c60828fd78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ade2f90880866196d78b8f523613c60828fd78"}], "stats": {"total": 311, "additions": 186, "deletions": 125}, "files": [{"sha": "179b12e61c4642c66c5119b6b11383327681a368", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -1,3 +1,20 @@\n+2011-08-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* bindgen.adb: Add comments.\n+\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* einfo.adb, einfo.ads: Free Flag254 and make Formal_Proof_On a\n+\tsynthesized flag.\n+\t* sem_prag.adb (Analyze_Pragma): record the pragma Annotate\n+\t(Formal_Proof, On/Off) in the Rep_Item list of the current subprogram.\n+\n+2011-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch7.adb, exp_ch6.adb, sem_ch3.adb, layout.adb, sem_ch5.adb,\n+\tosint-c.ads, sem_util.ads, gnat1drv.adb, targparm.ads, sem_ch6.adb,\n+\tsem_ch13.adb, s-pooloc.adb: Minor reformatting.\n+\n 2011-08-04  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-pooloc.ads, s-pooglo.ads: Minor reformatting"}, {"sha": "a4e7ccae87e8f0ee68c04ab33bacb4050295d50e", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -3097,6 +3097,9 @@ package body Bindgen is\n          WBI (\"\");\n       end if;\n \n+      --  The B.1 (39) implementation advice says that the adainit/adafinal\n+      --  routines should be idempotent. Generate a flag to ensure that.\n+\n       WBI (\"   Is_Elaborated : Boolean := False;\");\n       WBI (\"\");\n \n@@ -3323,6 +3326,9 @@ package body Bindgen is\n          WBI (\"\");\n       end if;\n \n+      --  The B.1 (39) implementation advice says that the adainit/adafinal\n+      --  routines should be idempotent. Generate a flag to ensure that.\n+\n       WBI (\"static char is_elaborated = 0;\");\n       WBI (\"\");\n "}, {"sha": "84163c67c8dd3134735e40d5fbce6c148c9d5902", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 36, "deletions": 14, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -522,7 +522,7 @@ package body Einfo is\n    --    Body_Is_In_ALFA                 Flag251\n    --    Is_Processed_Transient          Flag252\n    --    Is_Postcondition_Proc           Flag253\n-   --    Formal_Proof_On                 Flag254\n+   --    (unused)                        Flag254\n \n    -----------------------\n    -- Local subprograms --\n@@ -1126,12 +1126,6 @@ package body Einfo is\n       return Node6 (Id);\n    end First_Rep_Item;\n \n-   function Formal_Proof_On (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Subprogram (Id) or else Is_Generic_Subprogram (Id));\n-      return Flag254 (Id);\n-   end Formal_Proof_On;\n-\n    function Freeze_Node (Id : E) return N is\n    begin\n       return Node7 (Id);\n@@ -3612,12 +3606,6 @@ package body Einfo is\n       Set_Uint10 (Id, UI_From_Int (F'Pos (V)));\n    end Set_Float_Rep;\n \n-   procedure Set_Formal_Proof_On (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Is_Subprogram (Id) or else Is_Generic_Subprogram (Id));\n-      Set_Flag254 (Id, V);\n-   end Set_Formal_Proof_On;\n-\n    procedure Set_Freeze_Node (Id : E; V : N) is\n    begin\n       Set_Node7 (Id, V);\n@@ -5911,6 +5899,41 @@ package body Einfo is\n       end if;\n    end First_Formal_With_Extras;\n \n+   ---------------------\n+   -- Formal_Proof_On --\n+   ---------------------\n+\n+   function Formal_Proof_On (Id : E) return B is\n+      N    : Node_Id;\n+      Arg1 : Node_Id;\n+      Arg2 : Node_Id;\n+\n+   begin\n+      pragma Assert (Is_Subprogram (Id) or else Is_Generic_Subprogram (Id));\n+\n+      N := First_Rep_Item (Id);\n+      while Present (N) loop\n+         if Nkind (N) = N_Pragma\n+           and then Get_Pragma_Id (Pragma_Name (N)) = Pragma_Annotate\n+           and then Present (Pragma_Argument_Associations (N))\n+           and then List_Length (Pragma_Argument_Associations (N)) = 2\n+         then\n+            Arg1 := First (Pragma_Argument_Associations (N));\n+            Arg2 := Next (Arg1);\n+\n+            if Chars (Get_Pragma_Arg (Arg1)) = Name_Formal_Proof\n+              and then Chars (Get_Pragma_Arg (Arg2)) = Name_On\n+            then\n+               return True;\n+            end if;\n+         end if;\n+\n+         Next_Rep_Item (N);\n+      end loop;\n+\n+      return False;\n+   end Formal_Proof_On;\n+\n    -------------------------------------\n    -- Get_Attribute_Definition_Clause --\n    -------------------------------------\n@@ -7442,7 +7465,6 @@ package body Einfo is\n       W (\"Entry_Accepted\",                  Flag152 (Id));\n       W (\"Can_Use_Internal_Rep\",            Flag229 (Id));\n       W (\"Finalize_Storage_Only\",           Flag158 (Id));\n-      W (\"Formal_Proof_On\",                 Flag254 (Id));\n       W (\"From_With_Type\",                  Flag159 (Id));\n       W (\"Has_Aliased_Components\",          Flag135 (Id));\n       W (\"Has_Alignment_Clause\",            Flag46  (Id));"}, {"sha": "49e22fb01f990e7362b8310d96869a540b13a27a", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -1272,10 +1272,10 @@ package Einfo is\n --       Float_Rep_Kind. Together with the Digits_Value uniquely defines\n --       the floating-point representation to be used.\n \n---    Formal_Proof_On (Flag254)\n---       Present in subprogram and generic subprogram entities. Set on for\n---       subprograms whose body contains an Annotate pragma which forces formal\n---       proof on this body.\n+--    Formal_Proof_On (synthesized)\n+--       Applies to subprogram and generic subprogram entities. Returns True if\n+--       the Rep_Item chain for the subprogram has a pragma Annotate which\n+--       forces formal proof on the subprogram's body.\n \n --    Freeze_Node (Node7)\n --       Present in all entities. If there is an associated freeze node for\n@@ -5250,7 +5250,6 @@ package Einfo is\n    --    Delay_Cleanups                      (Flag114)\n    --    Delay_Subprogram_Descriptors        (Flag50)\n    --    Discard_Names                       (Flag88)\n-   --    Formal_Proof_On                     (Flag254)\n    --    Has_Completion                      (Flag26)\n    --    Has_Controlling_Result              (Flag98)\n    --    Has_Invariants                      (Flag232)\n@@ -5397,7 +5396,6 @@ package Einfo is\n    --    Is_Primitive                        (Flag218)\n    --    Is_Thunk                            (Flag225)\n    --    Default_Expressions_Processed       (Flag108)\n-   --    Formal_Proof_On                     (Flag254)\n    --    Aren't there more flags and fields? seems like this list should be\n    --    more similar to the E_Function list, which is much longer ???\n \n@@ -5518,7 +5516,6 @@ package Einfo is\n    --    Delay_Cleanups                      (Flag114)\n    --    Delay_Subprogram_Descriptors        (Flag50)\n    --    Discard_Names                       (Flag88)\n-   --    Formal_Proof_On                     (Flag254)\n    --    Has_Completion                      (Flag26)\n    --    Has_Invariants                      (Flag232)\n    --    Has_Master_Entity                   (Flag21)\n@@ -6076,7 +6073,6 @@ package Einfo is\n    function First_Private_Entity                (Id : E) return E;\n    function First_Rep_Item                      (Id : E) return N;\n    function Float_Rep                           (Id : E) return F;\n-   function Formal_Proof_On                     (Id : E) return B;\n    function Freeze_Node                         (Id : E) return N;\n    function From_With_Type                      (Id : E) return B;\n    function Full_View                           (Id : E) return E;\n@@ -6453,6 +6449,7 @@ package Einfo is\n    function First_Component_Or_Discriminant     (Id : E) return E;\n    function First_Formal                        (Id : E) return E;\n    function First_Formal_With_Extras            (Id : E) return E;\n+   function Formal_Proof_On                     (Id : E) return B;\n    function Has_Attach_Handler                  (Id : E) return B;\n    function Has_Entries                         (Id : E) return B;\n    function Has_Foreign_Convention              (Id : E) return B;\n@@ -6666,7 +6663,6 @@ package Einfo is\n    procedure Set_First_Private_Entity            (Id : E; V : E);\n    procedure Set_First_Rep_Item                  (Id : E; V : N);\n    procedure Set_Float_Rep                       (Id : E; V : F);\n-   procedure Set_Formal_Proof_On                 (Id : E; V : B := True);\n    procedure Set_Freeze_Node                     (Id : E; V : N);\n    procedure Set_From_With_Type                  (Id : E; V : B := True);\n    procedure Set_Full_View                       (Id : E; V : E);\n@@ -7364,7 +7360,6 @@ package Einfo is\n    pragma Inline (First_Optional_Parameter);\n    pragma Inline (First_Private_Entity);\n    pragma Inline (First_Rep_Item);\n-   pragma Inline (Formal_Proof_On);\n    pragma Inline (Freeze_Node);\n    pragma Inline (From_With_Type);\n    pragma Inline (Full_View);\n@@ -7809,7 +7804,6 @@ package Einfo is\n    pragma Inline (Set_First_Optional_Parameter);\n    pragma Inline (Set_First_Private_Entity);\n    pragma Inline (Set_First_Rep_Item);\n-   pragma Inline (Set_Formal_Proof_On);\n    pragma Inline (Set_Freeze_Node);\n    pragma Inline (Set_From_With_Type);\n    pragma Inline (Set_Full_View);"}, {"sha": "ca449fae78bba57b2069cb3810da665bc1600666", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -7188,7 +7188,7 @@ package body Exp_Ch6 is\n             null;\n \n          --  Do not generate the call to Make_Set_Finalize_Address_Ptr for\n-         --  CodePeer compilations becase Finalize_Address is never built.\n+         --  CodePeer compilations because Finalize_Address is never built.\n \n          elsif not CodePeer_Mode then\n             Insert_Action (Allocator,"}, {"sha": "abe960b3a065f925f37a070fcc3677d2f031085b", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -2817,6 +2817,10 @@ package body Exp_Ch7 is\n       --  order to detect this scenario, save the state of entry into the\n       --  finalization code.\n \n+      --  No need to do this for VM case, since VM version of Ada.Exceptions\n+      --  does not include routine Raise_From_Controlled_Operation which is the\n+      --  the sole user of flag Abort.\n+\n       if Abort_Allowed\n         and then VM_Target = No_VM\n       then\n@@ -2871,9 +2875,7 @@ package body Exp_Ch7 is\n                         Attribute_Name => Name_Identity)));\n          end;\n \n-      --  No abort or .NET/JVM. The VM version of Ada.Exceptions does not\n-      --  include routine Raise_From_Controlled_Operation which is the sole\n-      --  user of flag Abort.\n+      --  No abort or .NET/JVM\n \n       else\n          A_Expr := New_Reference_To (Standard_False, Loc);\n@@ -7131,8 +7133,9 @@ package body Exp_Ch7 is\n          Utyp := Underlying_Type (Root_Type (Base_Type (Typ)));\n          Ref  := Unchecked_Convert_To (Utyp, Ref);\n \n+         --  The following is to prevent problems with UC see 1.156 RH ???\n+\n          Set_Assignment_OK (Ref);\n-         --  To prevent problems with UC see 1.156 RH ???\n       end if;\n \n       --  If the underlying_type is a subtype, then we are dealing with the"}, {"sha": "eabf1123d4a74f1583bcaf770922727572cf8a27", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -1048,15 +1048,17 @@ begin\n       Write_ALI (Object => (Back_End_Mode = Generate_Object));\n \n       if not Compilation_Errors then\n+\n          --  In case of ada backends, we need to make sure that the generated\n-         --  object file has a timestamp greater than the ALI file.\n-         --  We do this to make gnatmake happy when checking the ALI and obj\n-         --  timestamps, where it expects the object file being written after\n-         --  the ali file.\n+         --  object file has a timestamp greater than the ALI file. We do this\n+         --  to make gnatmake happy when checking the ALI and obj timestamps,\n+         --  where it expects the object file being written after the ali file.\n+\n          --  Gnatmake's assumption is true for gcc platforms where the gcc\n          --  wrapper needs to call the assembler after calling gnat1, but is\n          --  not true for ada backends, where the object files are created\n          --  directly by gnat1 (so are created before the ali file).\n+\n          Back_End.Gen_Or_Update_Object_File;\n       end if;\n "}, {"sha": "09d3ce1ac8d5e7d4d9a61e762e7934ba3c338a7d", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -1280,8 +1280,8 @@ package body Layout is\n             end;\n          end if;\n \n-         --  Now set the dynamic size (the Value_Size is always the same\n-         --  as the Object_Size for arrays whose length is dynamic).\n+         --  Now set the dynamic size (the Value_Size is always the same as the\n+         --  Object_Size for arrays whose length is dynamic).\n \n          --  ??? If Size.Status = Dynamic, Vtyp will not have been set.\n          --  The added initialization sets it to Empty now, but is this\n@@ -1305,6 +1305,7 @@ package body Layout is\n       Lo   : Node_Id;\n       Hi   : Node_Id;\n       Res  : Boolean := False;\n+\n    begin\n       --  Loop to process array indexes\n \n@@ -1323,9 +1324,10 @@ package body Layout is\n          Hi := Type_High_Bound (Ityp);\n \n          if (Nkind (Lo) = N_Identifier\n-               and then Ekind (Entity (Lo)) = E_Discriminant)\n-           or else (Nkind (Hi) = N_Identifier\n-                      and then Ekind (Entity (Hi)) = E_Discriminant)\n+              and then Ekind (Entity (Lo)) = E_Discriminant)\n+           or else\n+            (Nkind (Hi) = N_Identifier\n+              and then Ekind (Entity (Hi)) = E_Discriminant)\n          then\n             Res := True;\n          end if;"}, {"sha": "2faef5ed787820b9bc7d7f2abfaad15ade029c0a", "filename": "gcc/ada/osint-c.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fosint-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fosint-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.ads?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -117,10 +117,10 @@ package Osint.C is\n    --  above for a discussion of how library information files are stored.\n \n    procedure Set_Library_Info_Name;\n-   --  Sets a default ALI file name from the main compiler source name.\n-   --  This is used by Create_Output_Library_Info, and by the version of\n-   --  Read_Library_Info that takes a default file name. The name is in\n-   --  Name_Buffer (with length in Name_Len) on return from the call.\n+   --  Sets a default ALI file name from the main compiler source name. Used by\n+   --  Create_Output_Library_Info, and by the version of Read_Library_Info that\n+   --  takes a default file name. The name is in Name_Buffer (with length in\n+   --  Name_Len) on return from the call.\n \n    procedure Create_Output_Library_Info;\n    --  Creates the output library information file for the source file which"}, {"sha": "ebada306114e1599d84a2b8d10337a0c1f226424", "filename": "gcc/ada/s-pooloc.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fs-pooloc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fs-pooloc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pooloc.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -112,6 +112,8 @@ package body System.Pool_Local is\n       if Prev (Allocated).all = Null_Address then\n          Pool.First := Next (Allocated).all;\n \n+         --  Comment needed\n+\n          if Pool.First /= Null_Address then\n             Prev (Pool.First).all := Null_Address;\n          end if;"}, {"sha": "c9f78fae5254c4bd3751fc9b08d5636601501f0e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -440,14 +440,14 @@ package body Sem_Ch13 is\n                               Error_Msg_Uint_1 := SSU;\n                               Error_Msg_F\n                                 (\"\\and is not a multiple of Storage_Unit (^) \"\n-                                 & \"('R'M 13.4.1(10))\",\n+                                 & \"(RM 13.4.1(10))\",\n                                  First_Bit (CC));\n \n                            else\n                               Error_Msg_Uint_1 := Fbit;\n                               Error_Msg_F\n                                 (\"\\and first bit (^) is non-zero \"\n-                                 & \"('R'M 13.4.1(10))\",\n+                                 & \"(RM 13.4.1(10))\",\n                                  First_Bit (CC));\n                            end if;\n                         end if;"}, {"sha": "4cf4c0b6b105734a111687522a6be7b5411423ca", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -15302,7 +15302,7 @@ package body Sem_Ch3 is\n             elsif No (Real_Range_Specification (Def)) then\n                Error_Msg_Uint_1 := Max_Digs_Val;\n                Error_Msg_N (\"types with more than ^ digits need range spec \"\n-                 & \"('R'M 3.5.7(6))\", Digs);\n+                 & \"(RM 3.5.7(6))\", Digs);\n             end if;\n          end;\n       end if;"}, {"sha": "8936daa531fe982d0688be4dc91dd62f623be572", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -2098,8 +2098,9 @@ package body Sem_Ch5 is\n                --  elements of a container using the OF syntax.\n \n                if Is_In_ALFA (Etype (Id))\n-                 and then (No (Iterator_Specification (N))\n-                           or else not Of_Present (Iterator_Specification (N)))\n+                 and then\n+                   (No (Iterator_Specification (N))\n+                     or else not Of_Present (Iterator_Specification (N)))\n                then\n                   Set_Is_In_ALFA (Id);\n                end if;"}, {"sha": "64a7eac5e6e1833c5f24705303221133fa3637ec", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -6273,7 +6273,7 @@ package body Sem_Ch6 is\n                         Obj_Decl, Typ);\n                      Error_Msg_N\n                        (\"\\an equality operator cannot be declared after this \"\n-                         & \"point ('R'M 4.5.2 (9.8)) (Ada 2012))?\", Obj_Decl);\n+                         & \"point (RM 4.5.2 (9.8)) (Ada 2012))?\", Obj_Decl);\n                      exit;\n                   end if;\n "}, {"sha": "dac7df8146156a78b8e4f8fd59646094a4ab9b9a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 87, "deletions": 72, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -6091,103 +6091,118 @@ package body Sem_Prag is\n          --  external tool and a tool-specific function. These arguments are\n          --  not analyzed.\n \n-         when Pragma_Annotate => Annotate : begin\n+         --  The following is a special form used in conjunction with the\n+         --  ALFA subset of Ada:\n+\n+         --    pragma Annotate (Formal_Proof, MODE);\n+         --    MODE ::= On | Off\n+\n+         --    This pragma either forces (mode On) or disables (mode Off)\n+         --    formal verification of the subprogram in which it is added. When\n+         --    formal verification is forced, all violations of the the ALFA\n+         --    subset of Ada present in the subprogram are reported as errors\n+         --    to the user.\n+\n+         when Pragma_Annotate => Annotate : declare\n+            Arg : Node_Id;\n+            Exp : Node_Id;\n+\n+         begin\n             GNAT_Pragma;\n             Check_At_Least_N_Arguments (1);\n             Check_Arg_Is_Identifier (Arg1);\n             Check_No_Identifiers;\n             Store_Note (N);\n \n-            declare\n-               Arg : Node_Id;\n-               Exp : Node_Id;\n+            --  Special processing for Formal_Proof case\n \n-            begin\n-               if Chars (Get_Pragma_Arg (Arg1)) = Name_Formal_Proof then\n-                  if No (Arg2) then\n-                     Error_Pragma_Arg\n-                       (\"missing second argument for pragma%\", Arg1);\n-                  end if;\n+            if Chars (Get_Pragma_Arg (Arg1)) = Name_Formal_Proof then\n+               if No (Arg2) then\n+                  Error_Pragma_Arg\n+                    (\"missing second argument for pragma%\", Arg1);\n+               end if;\n \n-                  Check_Arg_Is_Identifier (Arg2);\n-                  Check_Arg_Count (2);\n+               Check_Arg_Count (2);\n+               Check_Arg_Is_One_Of (Arg2, Name_On, Name_Off);\n \n-                  if Chars (Get_Pragma_Arg (Arg2)) /= Name_On\n-                    and then Chars (Get_Pragma_Arg (Arg2)) /= Name_Off\n+               declare\n+                  Cur_Subp : constant Entity_Id := Current_Subprogram;\n+\n+               begin\n+                  if Present (Cur_Subp)\n+                    and then (Is_Subprogram (Cur_Subp)\n+                               or else Is_Generic_Subprogram (Cur_Subp))\n                   then\n-                     Error_Pragma_Arg\n-                       (\"wrong second argument for pragma%\", Arg2);\n-                  end if;\n+                     --  Notify user if some ALFA violation occurred before\n+                     --  this point in Cur_Subp. These violations are not\n+                     --  precisly located, but this is better than ignoring\n+                     --  these violations.\n+\n+                     if Chars (Get_Pragma_Arg (Arg2)) = Name_On\n+                       and then (not Is_In_ALFA (Cur_Subp)\n+                                  or else not Body_Is_In_ALFA (Cur_Subp))\n+                     then\n+                        Error_Pragma\n+                          (\"pragma% is placed after violation\"\n+                           & \" of 'A'L'F'A\");\n+                     end if;\n \n-                  if Chars (Get_Pragma_Arg (Arg2)) = Name_On then\n-                     declare\n-                        Cur_Subp : constant Entity_Id := Current_Subprogram;\n+                     --  We treat this as a Rep_Item to record it on the rep\n+                     --  item chain for easy location later on.\n \n-                     begin\n-                        if Present (Cur_Subp)\n-                          and then (Is_Subprogram (Cur_Subp)\n-                                     or else Is_Generic_Subprogram (Cur_Subp))\n-                        then\n-                           --  Notify user if some ALFA violation occurred\n-                           --  before this point in Cur_Subp. These violations\n-                           --  are not precisly located, but this is better\n-                           --  than ignoring them.\n+                     Record_Rep_Item (Cur_Subp, N);\n \n-                           if not Is_In_ALFA (Cur_Subp)\n-                             or else not Body_Is_In_ALFA (Cur_Subp)\n-                           then\n-                              Error_Pragma\n-                                (\"pragma% is placed after violation\"\n-                                 & \" of 'A'L'F'A\");\n-                           end if;\n+                  else\n+                     Error_Pragma (\"wrong placement for pragma%\");\n+                  end if;\n+               end;\n \n-                           Set_Formal_Proof_On (Cur_Subp);\n+            --  Second parameter is optional, it is never analyzed\n \n-                        else\n-                           Error_Pragma (\"wrong placement for pragma%\");\n-                        end if;\n-                     end;\n-                  end if;\n-               end if;\n+            elsif No (Arg2) then\n+               null;\n \n-               --  Second unanalyzed parameter is optional\n+            --  Here if we have a second parameter\n \n-               if No (Arg2) then\n-                  null;\n-               else\n-                  Arg := Next (Arg2);\n-                  while Present (Arg) loop\n-                     Exp := Get_Pragma_Arg (Arg);\n-                     Analyze (Exp);\n+            else\n+               --  Second parameter must be identifier\n \n-                     if Is_Entity_Name (Exp) then\n-                        null;\n+               Check_Arg_Is_Identifier (Arg2);\n \n-                     --  For string literals, we assume Standard_String as the\n-                     --  type, unless the string contains wide or wide_wide\n-                     --  characters.\n+               --  Process remaining parameters if any\n \n-                     elsif Nkind (Exp) = N_String_Literal then\n-                        if Has_Wide_Wide_Character (Exp) then\n-                           Resolve (Exp, Standard_Wide_Wide_String);\n-                        elsif Has_Wide_Character (Exp) then\n-                           Resolve (Exp, Standard_Wide_String);\n-                        else\n-                           Resolve (Exp, Standard_String);\n-                        end if;\n+               Arg := Next (Arg2);\n+               while Present (Arg) loop\n+                  Exp := Get_Pragma_Arg (Arg);\n+                  Analyze (Exp);\n \n-                     elsif Is_Overloaded (Exp) then\n-                           Error_Pragma_Arg\n-                             (\"ambiguous argument for pragma%\", Exp);\n+                  if Is_Entity_Name (Exp) then\n+                     null;\n+\n+                  --  For string literals, we assume Standard_String as the\n+                  --  type, unless the string contains wide or wide_wide\n+                  --  characters.\n \n+                  elsif Nkind (Exp) = N_String_Literal then\n+                     if Has_Wide_Wide_Character (Exp) then\n+                        Resolve (Exp, Standard_Wide_Wide_String);\n+                     elsif Has_Wide_Character (Exp) then\n+                        Resolve (Exp, Standard_Wide_String);\n                      else\n-                        Resolve (Exp);\n+                        Resolve (Exp, Standard_String);\n                      end if;\n \n-                     Next (Arg);\n-                  end loop;\n-               end if;\n-            end;\n+                  elsif Is_Overloaded (Exp) then\n+                        Error_Pragma_Arg\n+                          (\"ambiguous argument for pragma%\", Exp);\n+\n+                  else\n+                     Resolve (Exp);\n+                  end if;\n+\n+                  Next (Arg);\n+               end loop;\n+            end if;\n          end Annotate;\n \n          ------------"}, {"sha": "62b7567065415ca1ca5fba40c9fd10d51335e04b", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -291,8 +291,7 @@ package Sem_Util is\n    --  specification, and calls to the subprogram, from being in ALFA.\n \n    --  If the subprogram being marked as not in ALFA is annotated with\n-   --  Formal_Proof being On, then an error is issued with message Msg on node\n-   --  N.\n+   --  Formal_Proof On, then an error is issued with message Msg on node N.\n \n    function Defining_Entity (N : Node_Id) return Entity_Id;\n    --  Given a declaration N, returns the associated defining entity. If the"}, {"sha": "fa6e25ede9f95dbc8e1f51f4b32202eeb8d4177d", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4640a3936bb760801ca5d2d44152a3424a8facb/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=a4640a3936bb760801ca5d2d44152a3424a8facb", "patch": "@@ -26,8 +26,6 @@\n --  This package obtains parameters from the target runtime version of System,\n --  to indicate parameters relevant to the target environment.\n \n---  Is it right for this to be modified GPL???\n-\n --  Conceptually, these parameters could be obtained using rtsfind, but\n --  we do not do this for four reasons:\n "}]}