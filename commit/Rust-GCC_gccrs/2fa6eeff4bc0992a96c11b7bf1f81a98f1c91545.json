{"sha": "2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZhNmVlZmY0YmMwOTkyYTk2YzExYjdiZjFmODFhOThmMWM5MTU0NQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2011-01-03T13:25:25Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2011-01-03T13:25:25Z"}, "message": "tree-vect-generic.c (expand_vector_operations_1): When using vector/ vector optab to expand vector/scalar shift...\n\n\t* tree-vect-generic.c (expand_vector_operations_1): When using vector/\n\tvector optab to expand vector/scalar shift, update gimple to vector.\n\nFrom-SVN: r168423", "tree": {"sha": "53939f008421c14a6c8f29d18f19fdf2ea509836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53939f008421c14a6c8f29d18f19fdf2ea509836"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545/comments", "author": null, "committer": null, "parents": [{"sha": "76df0ae6df0c70f20b19c9e407892fb17b2643cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76df0ae6df0c70f20b19c9e407892fb17b2643cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76df0ae6df0c70f20b19c9e407892fb17b2643cc"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "477380f12b0c46dd7c26499dedfbaf2e35332ce5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545", "patch": "@@ -1,3 +1,8 @@\n+2010-01-03  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* tree-vect-generic.c (expand_vector_operations_1): When using vector/\n+\tvector optab to expand vector/scalar shift, update gimple to vector.\n+\n 2011-01-03  Martin Jambor  <mjambor@suse.cz>\n \n \t* cgraphunit.c (verify_cgraph_node): Verify there is no direct call to"}, {"sha": "82fc61518fb72f6e334891d1a1458f6c2e279816", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=2fa6eeff4bc0992a96c11b7bf1f81a98f1c91545", "patch": "@@ -520,7 +520,24 @@ expand_vector_operations_1 (gimple_stmt_iterator *gsi)\n       /* Try for a vector/scalar shift, and if we don't have one, see if we\n          have a vector/vector shift */\n       else if (!vector_scalar_shift)\n-        op = optab_for_tree_code (code, type, optab_vector);\n+\t{\n+\t  op = optab_for_tree_code (code, type, optab_vector);\n+\n+\t  if (op && (optab_handler (op, TYPE_MODE (type)) \n+\t\t     != CODE_FOR_nothing))\n+\t    {\n+\t      /* Transform vector <op> scalar => vector <op> {x,x,x,x}.  */\n+\t      int n_parts = TYPE_VECTOR_SUBPARTS (type);\n+\t      int part_size = tree_low_cst (TYPE_SIZE (TREE_TYPE (type)), 1);\n+\t      tree part_type = lang_hooks.types.type_for_size (part_size, 1);\n+\t      tree vect_type = build_vector_type (part_type, n_parts);\n+\n+\t      rhs2 = fold_convert (part_type, rhs2);\n+\t      rhs2 = build_vector_from_val (vect_type, rhs2);\n+\t      gimple_assign_set_rhs2 (stmt, rhs2);\n+\t      update_stmt (stmt);\n+\t    }\n+\t}\n     }\n   else\n     op = optab_for_tree_code (code, type, optab_default);"}]}