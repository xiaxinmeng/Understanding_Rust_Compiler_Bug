{"sha": "ec735bc7646500570d9d6e45ef335e6d547b1433", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM3MzViYzc2NDY1MDA1NzBkOWQ2ZTQ1ZWYzMzVlNmQ1NDdiMTQzMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-09T12:55:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-09T13:57:10Z"}, "message": "tree-optimization/97746 - fix order of mask precision computes\n\nThis fixes the order of walking PHIs and stmts for BB mask\nprecision compute.\n\n2020-11-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97746\n\t* tree-vect-patterns.c (vect_determine_precisions): First walk PHIs.\n\n\t* gcc.dg/vect/bb-slp-pr97746.c: New testcase.", "tree": {"sha": "bc3b8001a49c69b2d5197331b4892f7315ac0008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc3b8001a49c69b2d5197331b4892f7315ac0008"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec735bc7646500570d9d6e45ef335e6d547b1433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec735bc7646500570d9d6e45ef335e6d547b1433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec735bc7646500570d9d6e45ef335e6d547b1433", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec735bc7646500570d9d6e45ef335e6d547b1433/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e38cd64ac6cb4da740d643589c857d2f910b6bba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e38cd64ac6cb4da740d643589c857d2f910b6bba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e38cd64ac6cb4da740d643589c857d2f910b6bba"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "c5a615d1253f9f1ad8d42dd005a1d7b3aa271cb0", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr97746.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec735bc7646500570d9d6e45ef335e6d547b1433/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr97746.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec735bc7646500570d9d6e45ef335e6d547b1433/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr97746.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr97746.c?ref=ec735bc7646500570d9d6e45ef335e6d547b1433", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+\n+int a, b;\n+short c;\n+\n+extern void f (short*);\n+\n+void d()\n+{\n+  short e[2] = {0, 0};\n+  while (a)\n+    {\n+      f(e);\n+      int g = 0 || a, h = 8 && c;\n+      short i = c;\n+      c = h & g;\n+      if (b)\n+\tb = g || i;\n+    }\n+}"}, {"sha": "f68a87e05ed54145a25ccff598eeef9e57f9a759", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec735bc7646500570d9d6e45ef335e6d547b1433/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec735bc7646500570d9d6e45ef335e6d547b1433/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=ec735bc7646500570d9d6e45ef335e6d547b1433", "patch": "@@ -5182,15 +5182,15 @@ vect_determine_precisions (vec_info *vinfo)\n       for (unsigned i = 0; i < bb_vinfo->bbs.length (); ++i)\n \t{\n \t  basic_block bb = bb_vinfo->bbs[i];\n-\t  for (auto gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\t  for (auto gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n \t    {\n-\t      stmt_vec_info stmt_info = vinfo->lookup_stmt (gsi_stmt (gsi));\n+\t      stmt_vec_info stmt_info = vinfo->lookup_stmt (gsi.phi ());\n \t      if (stmt_info && STMT_VINFO_VECTORIZABLE (stmt_info))\n \t\tvect_determine_mask_precision (vinfo, stmt_info);\n \t    }\n-\t  for (auto gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\t  for (auto gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n \t    {\n-\t      stmt_vec_info stmt_info = vinfo->lookup_stmt (gsi.phi ());\n+\t      stmt_vec_info stmt_info = vinfo->lookup_stmt (gsi_stmt (gsi));\n \t      if (stmt_info && STMT_VINFO_VECTORIZABLE (stmt_info))\n \t\tvect_determine_mask_precision (vinfo, stmt_info);\n \t    }"}]}