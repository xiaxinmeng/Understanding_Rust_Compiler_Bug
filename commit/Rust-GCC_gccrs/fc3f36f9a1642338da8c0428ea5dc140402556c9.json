{"sha": "fc3f36f9a1642338da8c0428ea5dc140402556c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMzZjM2ZjlhMTY0MjMzOGRhOGMwNDI4ZWE1ZGMxNDA0MDI1NTZjOQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2016-12-07T23:52:05Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2016-12-07T23:52:05Z"}, "message": "re PR target/72717 (ICE: in emit_move_insn, at expr.c:3693 with vector shift @ powerpc64le)\n\n[gcc]\n2016-12-07  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/72717\n\t* config/rs6000/rs6000.c (rs6000_expand_vector_init): If the\n\tV2DImode elements are SUBREG's convert the result into DImode\n\trather than failing in emit_move_insn.\n\n[gcc/testsuite]\n2016-12-07  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/72717\n\t* gcc.target/powerpc/pr72717.c: New test.\n\nFrom-SVN: r243418", "tree": {"sha": "5df0a140dbb666b91c6d6bb15e3c306fe514afab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5df0a140dbb666b91c6d6bb15e3c306fe514afab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc3f36f9a1642338da8c0428ea5dc140402556c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc3f36f9a1642338da8c0428ea5dc140402556c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc3f36f9a1642338da8c0428ea5dc140402556c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc3f36f9a1642338da8c0428ea5dc140402556c9/comments", "author": null, "committer": null, "parents": [{"sha": "18697a1de7710088982537008b244a80361cc4e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18697a1de7710088982537008b244a80361cc4e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18697a1de7710088982537008b244a80361cc4e0"}], "stats": {"total": 70, "additions": 60, "deletions": 10}, "files": [{"sha": "79d5d6de19b0475e4a653cc5675f439454e99e83", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc3f36f9a1642338da8c0428ea5dc140402556c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc3f36f9a1642338da8c0428ea5dc140402556c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc3f36f9a1642338da8c0428ea5dc140402556c9", "patch": "@@ -1,3 +1,10 @@\n+2016-12-07  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/72717\n+\t* config/rs6000/rs6000.c (rs6000_expand_vector_init): If the\n+\tV2DImode elements are SUBREG's convert the result into DImode\n+\trather than failing in emit_move_insn.\n+\n 2016-12-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* builtins.c (fold_builtin_strstr): Removed."}, {"sha": "f0c1354696b44ca5d9171c85cb86ea31c9231c35", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc3f36f9a1642338da8c0428ea5dc140402556c9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc3f36f9a1642338da8c0428ea5dc140402556c9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=fc3f36f9a1642338da8c0428ea5dc140402556c9", "patch": "@@ -6891,25 +6891,43 @@ rs6000_expand_vector_init (rtx target, rtx vals)\n   /* Double word values on VSX can use xxpermdi or lxvdsx.  */\n   if (VECTOR_MEM_VSX_P (mode) && (mode == V2DFmode || mode == V2DImode))\n     {\n-      rtx op0 = XVECEXP (vals, 0, 0);\n-      rtx op1 = XVECEXP (vals, 0, 1);\n+      rtx op[2];\n+      size_t i;\n+      size_t num_elements = all_same ? 1 : 2;\n+      for (i = 0; i < num_elements; i++)\n+\t{\n+\t  op[i] = XVECEXP (vals, 0, i);\n+\t  /* Just in case there is a SUBREG with a smaller mode, do a\n+\t     conversion.  */\n+\t  if (GET_MODE (op[i]) != inner_mode)\n+\t    {\n+\t      rtx tmp = gen_reg_rtx (inner_mode);\n+\t      convert_move (tmp, op[i], 0);\n+\t      op[i] = tmp;\n+\t    }\n+\t  /* Allow load with splat double word.  */\n+\t  else if (MEM_P (op[i]))\n+\t    {\n+\t      if (!all_same)\n+\t\top[i] = force_reg (inner_mode, op[i]);\n+\t    }\n+\t  else if (!REG_P (op[i]))\n+\t    op[i] = force_reg (inner_mode, op[i]);\n+\t}\n+\n       if (all_same)\n \t{\n-\t  if (!MEM_P (op0) && !REG_P (op0))\n-\t    op0 = force_reg (inner_mode, op0);\n \t  if (mode == V2DFmode)\n-\t    emit_insn (gen_vsx_splat_v2df (target, op0));\n+\t    emit_insn (gen_vsx_splat_v2df (target, op[0]));\n \t  else\n-\t    emit_insn (gen_vsx_splat_v2di (target, op0));\n+\t    emit_insn (gen_vsx_splat_v2di (target, op[0]));\n \t}\n       else\n \t{\n-\t  op0 = force_reg (inner_mode, op0);\n-\t  op1 = force_reg (inner_mode, op1);\n \t  if (mode == V2DFmode)\n-\t    emit_insn (gen_vsx_concat_v2df (target, op0, op1));\n+\t    emit_insn (gen_vsx_concat_v2df (target, op[0], op[1]));\n \t  else\n-\t    emit_insn (gen_vsx_concat_v2di (target, op0, op1));\n+\t    emit_insn (gen_vsx_concat_v2di (target, op[0], op[1]));\n \t}\n       return;\n     }"}, {"sha": "33f1f86a05550f07de0e1e57b47b702d79a8868b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc3f36f9a1642338da8c0428ea5dc140402556c9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc3f36f9a1642338da8c0428ea5dc140402556c9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc3f36f9a1642338da8c0428ea5dc140402556c9", "patch": "@@ -1,3 +1,8 @@\n+2016-12-07  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/72717\n+\t* gcc.target/powerpc/pr72717.c: New test.\n+\n 2016-12-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/builtin-strstr-1.c: New test."}, {"sha": "1446098ba20bbbf2ba7baa4edf93e035af7d4fc8", "filename": "gcc/testsuite/gcc.target/powerpc/pr72717.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc3f36f9a1642338da8c0428ea5dc140402556c9/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr72717.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc3f36f9a1642338da8c0428ea5dc140402556c9/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr72717.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr72717.c?ref=fc3f36f9a1642338da8c0428ea5dc140402556c9", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n+/* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-mcpu=power8 -O2\" } */\n+\n+typedef long V __attribute__((__vector_size__(32)));\n+\n+extern void foo (V *, V*);\n+\n+/* This test generated an failure in emit_move_insn.  */\n+\n+void\n+foo(V *p, V *q)\n+{\n+  V v = *q;\n+  *p = v << v[0];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vsld\" 2 } } */"}]}