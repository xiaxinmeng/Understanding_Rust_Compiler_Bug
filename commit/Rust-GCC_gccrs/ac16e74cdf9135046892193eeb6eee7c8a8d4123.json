{"sha": "ac16e74cdf9135046892193eeb6eee7c8a8d4123", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMxNmU3NGNkZjkxMzUwNDY4OTIxOTNlZWI2ZWVlN2M4YThkNDEyMw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-01-06T09:14:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T09:14:09Z"}, "message": "ali-util.adb, [...]: Minor change of name Name_Table_Info => Name_Table_Int.\n\n2015-01-06  Robert Dewar  <dewar@adacore.com>\n\n\t* ali-util.adb, sem_prag.adb, rtsfind.adb, sem_util.adb, sem_res.adb,\n\tali.adb, binde.adb, namet.adb, namet.ads, gnatls.adb, bcheck.adb:\n\tMinor change of name Name_Table_Info => Name_Table_Int.\n\nFrom-SVN: r219230", "tree": {"sha": "a6c9ae2d13ce15da801b75989ca200a9d7fc88a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6c9ae2d13ce15da801b75989ca200a9d7fc88a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac16e74cdf9135046892193eeb6eee7c8a8d4123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac16e74cdf9135046892193eeb6eee7c8a8d4123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac16e74cdf9135046892193eeb6eee7c8a8d4123", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac16e74cdf9135046892193eeb6eee7c8a8d4123/comments", "author": null, "committer": null, "parents": [{"sha": "4b6f99f50583af11b3e6798ef4c5bf91b8c28fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6f99f50583af11b3e6798ef4c5bf91b8c28fcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6f99f50583af11b3e6798ef4c5bf91b8c28fcd"}], "stats": {"total": 98, "additions": 52, "deletions": 46}, "files": [{"sha": "c67edc5d4fb7e67fd12ebe89be2ccf11d83273fd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -1,3 +1,9 @@\n+2015-01-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* ali-util.adb, sem_prag.adb, rtsfind.adb, sem_util.adb, sem_res.adb,\n+\tali.adb, binde.adb, namet.adb, namet.ads, gnatls.adb, bcheck.adb:\n+\tMinor change of name Name_Table_Info => Name_Table_Int.\n+\n 2015-01-06  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_strm.adb (Build_Elementary_Input_Call): Clarify comments"}, {"sha": "40e2276fb65dfbfdc7fd6ca9932723126f42a81e", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -194,7 +194,7 @@ package body ALI.Util is\n       --  This loop is empty and harmless the first time in.\n \n       for J in Source.First .. Source.Last loop\n-         Set_Name_Table_Info (Source.Table (J).Sfile, 0);\n+         Set_Name_Table_Int (Source.Table (J).Sfile, 0);\n          Source.Table (J).Source_Found := False;\n       end loop;\n \n@@ -236,7 +236,7 @@ package body ALI.Util is\n             --  file has not been processed already.\n \n             if Afile /= No_File\n-              and then Get_Name_Table_Info (Afile) = 0\n+              and then Get_Name_Table_Int (Afile) = 0\n             then\n                Text := Read_Library_Info (Afile);\n \n@@ -251,7 +251,7 @@ package body ALI.Util is\n                      Error_Msg_File_1 := Afile;\n                      Error_Msg_File_2 := Withs.Table (W).Sfile;\n                      Error_Msg (\"{ not found, { must be compiled\");\n-                     Set_Name_Table_Info (Afile, Int (No_Unit_Id));\n+                     Set_Name_Table_Int (Afile, Int (No_Unit_Id));\n                      return;\n                   end if;\n \n@@ -272,7 +272,7 @@ package body ALI.Util is\n                   then\n                      Error_Msg_File_1 := Withs.Table (W).Sfile;\n                      Error_Msg (\"{ had errors, must be fixed, and recompiled\");\n-                     Set_Name_Table_Info (Afile, Int (No_Unit_Id));\n+                     Set_Name_Table_Int (Afile, Int (No_Unit_Id));\n \n                   --  In GNATprove mode, object files are never generated, so\n                   --  No_Object=True is not considered an error.\n@@ -283,7 +283,7 @@ package body ALI.Util is\n                   then\n                      Error_Msg_File_1 := Withs.Table (W).Sfile;\n                      Error_Msg (\"{ must be recompiled\");\n-                     Set_Name_Table_Info (Afile, Int (No_Unit_Id));\n+                     Set_Name_Table_Int (Afile, Int (No_Unit_Id));\n                   end if;\n \n                   --  If the Unit is an Interface to a Stand-Alone Library,\n@@ -337,10 +337,10 @@ package body ALI.Util is\n             --  If this is the first time we are seeing this source file,\n             --  then make a new entry in the source table.\n \n-            if Get_Name_Table_Info (F) = 0 then\n+            if Get_Name_Table_Int (F) = 0 then\n                Source.Increment_Last;\n                S := Source.Last;\n-               Set_Name_Table_Info (F, Int (S));\n+               Set_Name_Table_Int (F, Int (S));\n                Source.Table (S).Sfile := F;\n                Source.Table (S).All_Timestamps_Match := True;\n \n@@ -393,7 +393,7 @@ package body ALI.Util is\n             --  so that the source table entry is already constructed.\n \n             else\n-               S := Source_Id (Get_Name_Table_Info (F));\n+               S := Source_Id (Get_Name_Table_Int (F));\n \n                --  Update checksum flag\n \n@@ -451,7 +451,7 @@ package body ALI.Util is\n \n             --  Set the checksum value in the source table\n \n-            S := Source_Id (Get_Name_Table_Info (F));\n+            S := Source_Id (Get_Name_Table_Int (F));\n             Source.Table (S).Checksum := Sdep.Table (D).Checksum;\n          end if;\n \n@@ -482,7 +482,7 @@ package body ALI.Util is\n \n    begin\n       for D in ALIs.Table (A).First_Sdep .. ALIs.Table (A).Last_Sdep loop\n-         Src := Source_Id (Get_Name_Table_Info (Sdep.Table (D).Sfile));\n+         Src := Source_Id (Get_Name_Table_Int (Sdep.Table (D).Sfile));\n \n          if Opt.Minimal_Recompilation\n            and then Sdep.Table (D).Stamp /= Source.Table (Src).Stamp"}, {"sha": "d46e3f97292b5db745b96997df1210d5d96ef583", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -72,11 +72,11 @@ package body ALI is\n       --  These two loops are empty and harmless the first time in.\n \n       for J in ALIs.First .. ALIs.Last loop\n-         Set_Name_Table_Info (ALIs.Table (J).Afile, 0);\n+         Set_Name_Table_Int (ALIs.Table (J).Afile, 0);\n       end loop;\n \n       for J in Units.First .. Units.Last loop\n-         Set_Name_Table_Info (Units.Table (J).Uname, 0);\n+         Set_Name_Table_Int (Units.Table (J).Uname, 0);\n       end loop;\n \n       --  Free argument table strings\n@@ -867,7 +867,7 @@ package body ALI is\n \n       ALIs.Increment_Last;\n       Id := ALIs.Last;\n-      Set_Name_Table_Info (F, Int (Id));\n+      Set_Name_Table_Int (F, Int (Id));\n \n       ALIs.Table (Id) := (\n         Afile                        => F,\n@@ -1737,7 +1737,7 @@ package body ALI is\n          --  Check for duplicated unit in different files\n \n          declare\n-            Info : constant Int := Get_Name_Table_Info\n+            Info : constant Int := Get_Name_Table_Int\n                                      (Units.Table (Units.Last).Uname);\n          begin\n             if Info /= 0\n@@ -1785,7 +1785,7 @@ package body ALI is\n             end if;\n          end;\n \n-         Set_Name_Table_Info\n+         Set_Name_Table_Int\n            (Units.Table (Units.Last).Uname, Int (Units.Last));\n \n          --  Scan out possible version and other parameters"}, {"sha": "172e1300377de669485c702c4bea8143e115cfd6", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -170,7 +170,7 @@ package body Bcheck is\n                goto Continue;\n             end if;\n \n-            Src := Source_Id (Get_Name_Table_Info (Sdep.Table (D).Sfile));\n+            Src := Source_Id (Get_Name_Table_Int (Sdep.Table (D).Sfile));\n \n             --  If the time stamps match, or all checksums match, then we\n             --  are OK, otherwise we have a definite error.\n@@ -468,12 +468,12 @@ package body Bcheck is\n                         WR : With_Record renames Withs.Table (W);\n \n                      begin\n-                        if Get_Name_Table_Info (WR.Uname) /= 0 then\n+                        if Get_Name_Table_Int (WR.Uname) /= 0 then\n                            declare\n                               WU : Unit_Record renames\n                                      Units.Table\n                                        (Unit_Id\n-                                         (Get_Name_Table_Info (WR.Uname)));\n+                                         (Get_Name_Table_Int (WR.Uname)));\n \n                            begin\n                               --  Case 1. Elaborate_All for with'ed unit\n@@ -1048,7 +1048,7 @@ package body Bcheck is\n                      if AFN /= No_File then\n                         declare\n                            WAI : constant ALI_Id :=\n-                             ALI_Id (Get_Name_Table_Info (AFN));\n+                             ALI_Id (Get_Name_Table_Int (AFN));\n                            WTE : ALIs_Record renames ALIs.Table (WAI);\n \n                         begin\n@@ -1199,7 +1199,7 @@ package body Bcheck is\n \n                declare\n                   Unit : constant Unit_Name_Type := Name_Find;\n-                  Info : constant Int := Get_Name_Table_Info (Unit);\n+                  Info : constant Int := Get_Name_Table_Int (Unit);\n \n                begin\n                   if Info /= 0 then"}, {"sha": "785afa56f2435da2e56cbc716972f600c303a3e9", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -901,7 +901,7 @@ package body Binde is\n          then\n             declare\n                Info : constant Int :=\n-                 Get_Name_Table_Info (Withs.Table (W).Uname);\n+                 Get_Name_Table_Int (Withs.Table (W).Uname);\n \n             begin\n                --  If the unit is unknown, for some unknown reason, fail\n@@ -1225,7 +1225,7 @@ package body Binde is\n                   --  when we have a subprogram body with no spec, and some\n                   --  obsolete unit with's a previous (now disappeared) spec.\n \n-                  if Get_Name_Table_Info (Withs.Table (W).Uname) = 0 then\n+                  if Get_Name_Table_Int (Withs.Table (W).Uname) = 0 then\n                      Error_Msg_File_1 := Units.Table (U).Sfile;\n                      Error_Msg_Unit_1 := Withs.Table (W).Uname;\n                      Error_Msg (\"{ depends on $ which no longer exists\");\n@@ -1602,7 +1602,7 @@ package body Binde is\n    ----------------\n \n    function Unit_Id_Of (Uname : Unit_Name_Type) return Unit_Id is\n-      Info : constant Int := Get_Name_Table_Info (Uname);\n+      Info : constant Int := Get_Name_Table_Int (Uname);\n    begin\n       pragma Assert (Info /= 0 and then Unit_Id (Info) /= No_Unit_Id);\n       return Unit_Id (Info);"}, {"sha": "6e2e382424cea926af68c8dc87862e6cedd64c40", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -1816,7 +1816,7 @@ begin\n       else\n          Ali_File := Strip_Directory (Ali_File);\n \n-         if Get_Name_Table_Info (Ali_File) = 0 then\n+         if Get_Name_Table_Int (Ali_File) = 0 then\n             Text := Read_Library_Info (Ali_File, True);\n \n             declare"}, {"sha": "d0dfee27f430034bfc7315ae5883ac8ef786245a", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -726,14 +726,14 @@ package body Namet is\n    end Get_Name_Table_Byte;\n \n    -------------------------\n-   -- Get_Name_Table_Info --\n+   -- Get_Name_Table_Int --\n    -------------------------\n \n-   function Get_Name_Table_Info (Id : Name_Id) return Int is\n+   function Get_Name_Table_Int (Id : Name_Id) return Int is\n    begin\n       pragma Assert (Id in Name_Entries.First .. Name_Entries.Last);\n       return Name_Entries.Table (Id).Int_Info;\n-   end Get_Name_Table_Info;\n+   end Get_Name_Table_Int;\n \n    -----------------------------------------\n    -- Get_Unqualified_Decoded_Name_String --\n@@ -1321,14 +1321,14 @@ package body Namet is\n    end Set_Name_Table_Byte;\n \n    -------------------------\n-   -- Set_Name_Table_Info --\n+   -- Set_Name_Table_Int --\n    -------------------------\n \n-   procedure Set_Name_Table_Info (Id : Name_Id; Val : Int) is\n+   procedure Set_Name_Table_Int (Id : Name_Id; Val : Int) is\n    begin\n       pragma Assert (Id in Name_Entries.First .. Name_Entries.Last);\n       Name_Entries.Table (Id).Int_Info := Val;\n-   end Set_Name_Table_Info;\n+   end Set_Name_Table_Int;\n \n    -----------------------------\n    -- Store_Encoded_Character --"}, {"sha": "4e025c7b0cbbe7a2c26ca564495c663591dc690c", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -363,8 +363,8 @@ package Namet is\n    pragma Inline (Get_Name_Table_Byte);\n    --  Fetches the Byte value associated with the given name\n \n-   function Get_Name_Table_Info (Id : Name_Id) return Int;\n-   pragma Inline (Get_Name_Table_Info);\n+   function Get_Name_Table_Int (Id : Name_Id) return Int;\n+   pragma Inline (Get_Name_Table_Int);\n    --  Fetches the Int value associated with the given name\n \n    function Get_Name_Table_Boolean (Id : Name_Id) return Boolean;\n@@ -409,7 +409,7 @@ package Namet is\n    --  in Name_Len (i.e. the characters of the name are in subscript positions\n    --  1 to Name_Len in Name_Buffer). It searches the names table to see if the\n    --  string has already been stored. If so the Id of the existing entry is\n-   --  returned. Otherwise a new entry is created with its Name_Table_Info\n+   --  returned. Otherwise a new entry is created with its Name_Table_Int\n    --  fields set to zero/false. The contents of Name_Buffer and Name_Len are\n    --  not modified by this call. Note that it is permissible for Name_Len to\n    --  be set to zero to lookup the null name string.\n@@ -496,8 +496,8 @@ package Namet is\n    --  for the given character code. On return Name_Buffer and Name_Len are\n    --  set to reflect the stored name.\n \n-   procedure Set_Name_Table_Info (Id : Name_Id; Val : Int);\n-   pragma Inline (Set_Name_Table_Info);\n+   procedure Set_Name_Table_Int (Id : Name_Id; Val : Int);\n+   pragma Inline (Set_Name_Table_Int);\n    --  Sets the Int value associated with the given name\n \n    procedure Set_Name_Table_Byte (Id : Name_Id; Val : Byte);"}, {"sha": "babf5641e9847567a3d5458ab0c843a68381e460", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -1309,7 +1309,7 @@ package body Rtsfind is\n            RE_Str (RE_Str'First + 3 .. RE_Str'Last);\n \n          Nam := Name_Find;\n-         Ent := Entity_Id (Get_Name_Table_Info (Nam));\n+         Ent := Entity_Id (Get_Name_Table_Int (Nam));\n \n          Name_Len := Save_Nam'Length;\n          Name_Buffer (1 .. Name_Len) := Save_Nam;"}, {"sha": "91dd6848a8179d98ad4c1df8f84e7f7d9da5e1e8", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -8563,7 +8563,7 @@ package body Sem_Prag is\n                if Prag_Id = Pragma_Import then\n                   String_To_Name_Buffer (Strval (Expr_Value_S (Ext_Nam)));\n                   Nam := Name_Find;\n-                  E   := Entity_Id (Get_Name_Table_Info (Nam));\n+                  E   := Entity_Id (Get_Name_Table_Int (Nam));\n \n                   if Nam /= Chars (Subprogram_Def)\n                     and then Present (E)"}, {"sha": "336b186fffeea54b7a4e60239f3402eaf7dd7431", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -86,10 +86,10 @@ package body Sem_Res is\n    -----------------------\n \n    --  Second pass (top-down) type checking and overload resolution procedures\n-   --  Typ is the type required by context. These procedures propagate the type\n-   --  information recursively to the descendants of N. If the node is not\n+   --  Typ is the type required by context. These procedures propagate the\n+   --  type information recursively to the descendants of N. If the node is not\n    --  overloaded, its Etype is established in the first pass. If overloaded,\n-   --  the Resolve routines set the correct type. For arith. operators, the\n+   --  the Resolve routines set the correct type. For arithmetic operators, the\n    --  Etype is the base type of the context.\n \n    --  Note that Resolve_Attribute is separated off in Sem_Attr\n@@ -245,9 +245,9 @@ package body Sem_Res is\n       Typ   : Entity_Id;\n       Op_Id : Entity_Id);\n    --  Inverse transformation: if an operator is given in functional notation,\n-   --  then after resolving the node, transform into an operator node, so\n-   --  that operands are resolved properly. Recall that predefined operators\n-   --  do not have a full signature and special resolution rules apply.\n+   --  then after resolving the node, transform into an operator node, so that\n+   --  operands are resolved properly. Recall that predefined operators do not\n+   --  have a full signature and special resolution rules apply.\n \n    procedure Rewrite_Renamed_Operator\n      (N   : Node_Id;"}, {"sha": "65f33430e4e6b9eb93bb15159560e0399fd74e59", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac16e74cdf9135046892193eeb6eee7c8a8d4123/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ac16e74cdf9135046892193eeb6eee7c8a8d4123", "patch": "@@ -7247,7 +7247,7 @@ package body Sem_Util is\n \n    function Get_Name_Entity_Id (Id : Name_Id) return Entity_Id is\n    begin\n-      return Entity_Id (Get_Name_Table_Info (Id));\n+      return Entity_Id (Get_Name_Table_Int (Id));\n    end Get_Name_Entity_Id;\n \n    ------------------------------\n@@ -17271,7 +17271,7 @@ package body Sem_Util is\n \n    procedure Set_Name_Entity_Id (Id : Name_Id; Val : Entity_Id) is\n    begin\n-      Set_Name_Table_Info (Id, Int (Val));\n+      Set_Name_Table_Int (Id, Int (Val));\n    end Set_Name_Entity_Id;\n \n    ---------------------"}]}