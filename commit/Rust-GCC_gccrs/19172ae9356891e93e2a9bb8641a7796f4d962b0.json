{"sha": "19172ae9356891e93e2a9bb8641a7796f4d962b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkxNzJhZTkzNTY4OTFlOTNlMmE5YmI4NjQxYTc3OTZmNGQ5NjJiMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2011-08-04T15:41:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T15:41:09Z"}, "message": "Makefile.in: Clean up targets.\n\n\t* gcc-interface/Makefile.in: Clean up targets.\n\tEnable new package for atomic counters and copy-on-write implementation\n\tof unbounded strings on x86 platforms.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\nFrom-SVN: r177405", "tree": {"sha": "296f051b59071f8d0b0d4cd0ca483e3b858497d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/296f051b59071f8d0b0d4cd0ca483e3b858497d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19172ae9356891e93e2a9bb8641a7796f4d962b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19172ae9356891e93e2a9bb8641a7796f4d962b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19172ae9356891e93e2a9bb8641a7796f4d962b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19172ae9356891e93e2a9bb8641a7796f4d962b0/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "faf7a23d6d3bc281c386865971f7bffd8cb7057c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf7a23d6d3bc281c386865971f7bffd8cb7057c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf7a23d6d3bc281c386865971f7bffd8cb7057c"}], "stats": {"total": 115, "additions": 50, "deletions": 65}, "files": [{"sha": "c6b8cd82a233e2476b92fcf16d5aafefd7d49026", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19172ae9356891e93e2a9bb8641a7796f4d962b0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19172ae9356891e93e2a9bb8641a7796f4d962b0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=19172ae9356891e93e2a9bb8641a7796f4d962b0", "patch": "@@ -1,3 +1,10 @@\n+2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gcc-interface/Makefile.in: Clean up targets.\n+\tEnable new package for atomic counters and copy-on-write implementation\n+\tof unbounded strings on x86 platforms.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n 2011-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch7.adb: Minor reformatting."}, {"sha": "18a22bc0b695d04dbca02ce690bfefb381e51bb0", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19172ae9356891e93e2a9bb8641a7796f4d962b0/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19172ae9356891e93e2a9bb8641a7796f4d962b0/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=19172ae9356891e93e2a9bb8641a7796f4d962b0", "patch": "@@ -2486,24 +2486,26 @@ ada/exp_smem.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n \n ada/exp_strm.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n-   ada/atree.adb ada/casing.ads ada/debug.ads ada/einfo.ads ada/einfo.adb \\\n-   ada/elists.ads ada/err_vars.ads ada/errout.ads ada/erroutc.ads \\\n-   ada/exp_strm.ads ada/exp_strm.adb ada/exp_tss.ads ada/exp_util.ads \\\n-   ada/fname.ads ada/fname-uf.ads ada/get_targ.ads ada/gnat.ads \\\n-   ada/g-htable.ads ada/hostparm.ads ada/interfac.ads ada/lib.ads \\\n+   ada/atree.adb ada/casing.ads ada/csets.ads ada/debug.ads ada/einfo.ads \\\n+   ada/einfo.adb ada/elists.ads ada/err_vars.ads ada/errout.ads \\\n+   ada/errout.adb ada/erroutc.ads ada/erroutc.adb ada/exp_strm.ads \\\n+   ada/exp_strm.adb ada/exp_tss.ads ada/exp_util.ads ada/fname.ads \\\n+   ada/fname-uf.ads ada/get_targ.ads ada/gnat.ads ada/g-htable.ads \\\n+   ada/gnatvsn.ads ada/hostparm.ads ada/interfac.ads ada/lib.ads \\\n    ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n    ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n-   ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/sem_aux.ads \\\n-   ada/sem_aux.adb ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n-   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/scans.ads \\\n+   ada/sem_aux.ads ada/sem_aux.adb ada/sem_util.ads ada/sinfo.ads \\\n+   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n+   ada/stringt.ads ada/stylesw.ads ada/system.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/exp_tss.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "1642cc8622bbd53f28c01f63036abd8147c0f655", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 25, "deletions": 49, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19172ae9356891e93e2a9bb8641a7796f4d962b0/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19172ae9356891e93e2a9bb8641a7796f4d962b0/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=19172ae9356891e93e2a9bb8641a7796f4d962b0", "patch": "@@ -411,7 +411,8 @@ ATOMICS_TARGET_PAIRS += \\\n   a-stzunb.adb<a-stzunb-shared.adb \\\n   a-stzunb.ads<a-stzunb-shared.ads \\\n   a-szunau.adb<a-szunau-shared.adb \\\n-  a-szuzti.adb<a-szuzti-shared.adb\n+  a-szuzti.adb<a-szuzti-shared.adb \\\n+  s-atocou.adb<s-atocou-builtin.adb\n \n LIB_VERSION = $(strip $(shell grep ' Library_Version :' $(fsrcpfx)ada/gnatvsn.ads | sed -e 's/.*\"\\(.*\\)\".*/\\1/'))\n \n@@ -623,6 +624,7 @@ endif\n ifeq ($(strip $(filter-out powerpc% wrs vxworksmils,$(targ))),)\n   # target pairs for vthreads runtime\n   LIBGNAT_TARGET_PAIRS = \\\n+  a-elchha.adb<a-elchha-vx6-raven-cert.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n   g-io.adb<g-io-vxworks-ppc-cert.adb \\\n@@ -701,7 +703,9 @@ ifeq ($(strip $(filter-out %86 wrs vxworksae vxworksmils,$(targ))),)\n   s-vxwork.ads<s-vxwork-x86.ads \\\n   g-trasym.ads<g-trasym-unimplemented.ads \\\n   g-trasym.adb<g-trasym-unimplemented.adb \\\n-  system.ads<system-vxworks-x86.ads\n+  system.ads<system-vxworks-x86.ads \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  s-atocou.adb<s-atocou-x86.adb\n \n   TOOLS_TARGET_PAIRS=\\\n   mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb \\\n@@ -798,7 +802,9 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-trasym.ads<g-trasym-unimplemented.ads \\\n-  g-trasym.adb<g-trasym-unimplemented.adb\n+  g-trasym.adb<g-trasym-unimplemented.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  s-atocou.adb<s-atocou-x86.adb\n \n   TOOLS_TARGET_PAIRS=\\\n   mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb \\\n@@ -1028,10 +1034,12 @@ ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(arch) $(osys))),)\n   s-tasinf.ads<s-tasinf-solaris.ads \\\n   s-taspri.ads<s-taspri-solaris.ads \\\n   s-tpopsp.adb<s-tpopsp-solaris.adb \\\n-  g-soliop.ads<g-soliop-solaris.ads\n+  g-soliop.ads<g-soliop-solaris.ads \\\n+  $(ATOMICS_TARGET_PAIRS)\n \n   LIBGNAT_TARGET_PAIRS_32 = \\\n   g-bytswa.adb<g-bytswa-x86.adb \\\n+  s-atocou.adb<s-atocou-x86.adb \\\n   system.ads<system-solaris-x86.ads\n \n   LIBGNAT_TARGET_PAIRS_64 = \\\n@@ -1075,7 +1083,9 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n   s-tpopsp.adb<s-tpopsp-tls.adb \\\n-  g-sercom.adb<g-sercom-linux.adb\n+  g-sercom.adb<g-sercom-linux.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  s-atocou.adb<s-atocou-x86.adb\n \n   ifeq ($(strip $(filter-out marte,$(THREAD_KIND))),)\n     LIBGNAT_TARGET_PAIRS += \\\n@@ -1153,7 +1163,9 @@ ifeq ($(strip $(filter-out %86 kfreebsd%,$(arch) $(osys))),)\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  system.ads<system-freebsd-x86.ads\n+  system.ads<system-freebsd-x86.ads \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  s-atocou.adb<s-atocou-x86.adb\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n@@ -1208,7 +1220,9 @@ ifeq ($(strip $(filter-out %86 freebsd%,$(arch) $(osys))),)\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix.adb \\\n-  system.ads<system-freebsd-x86.ads\n+  system.ads<system-freebsd-x86.ads \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  s-atocou.adb<s-atocou-x86.adb\n \n   TOOLS_TARGET_PAIRS = \\\n   mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb\n@@ -1392,47 +1406,6 @@ ifeq ($(strip $(filter-out ibm aix%,$(manu) $(osys))),)\n   GMEM_LIB = gmemlib\n endif\n \n-ifeq ($(strip $(filter-out lynxos,$(osys))),)\n-  TOOLS_TARGET_PAIRS = \\\n-  mlib-tgt-specific.adb<mlib-tgt-specific-lynxos.adb \\\n-  indepsw.adb<indepsw-gnu.adb\n-\n-  ifeq ($(strip $(filter-out %86 lynxos,$(arch) $(osys))),)\n-    LIBGNAT_TARGET_PAIRS = \\\n-    a-numaux.adb<a-numaux-x86.adb \\\n-    a-numaux.ads<a-numaux-x86.ads \\\n-    a-intnam.ads<a-intnam-lynxos.ads \\\n-    g-bytswa.adb<g-bytswa-x86.adb \\\n-    s-inmaop.adb<s-inmaop-posix.adb \\\n-    s-intman.adb<s-intman-posix.adb \\\n-    s-osinte.adb<s-osinte-lynxos.adb \\\n-    s-osinte.ads<s-osinte-lynxos.ads \\\n-    s-osprim.adb<s-osprim-posix.adb \\\n-    s-taprop.adb<s-taprop-lynxos.adb \\\n-    s-taspri.ads<s-taspri-lynxos.ads \\\n-    s-tpopsp.adb<s-tpopsp-lynxos.adb \\\n-    g-trasym.ads<g-trasym-unimplemented.ads \\\n-    g-trasym.adb<g-trasym-unimplemented.adb \\\n-    system.ads<system-lynxos-x86.ads\n-\n-\n-  else\n-    LIBGNAT_TARGET_PAIRS = \\\n-    a-intnam.ads<a-intnam-lynxos.ads \\\n-    s-inmaop.adb<s-inmaop-posix.adb \\\n-    s-intman.adb<s-intman-posix.adb \\\n-    s-osinte.adb<s-osinte-lynxos.adb \\\n-    s-osinte.ads<s-osinte-lynxos.ads \\\n-    s-osprim.adb<s-osprim-posix.adb \\\n-    s-taprop.adb<s-taprop-lynxos.adb \\\n-    s-taspri.ads<s-taspri-lynxos.ads \\\n-    s-tpopsp.adb<s-tpopsp-lynxos.adb \\\n-    g-trasym.ads<g-trasym-unimplemented.ads \\\n-    g-trasym.adb<g-trasym-unimplemented.adb \\\n-    system.ads<system-lynxos-ppc.ads\n-  endif\n-endif\n-\n ifeq ($(strip $(filter-out rtems%,$(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   system.ads<system-rtems.ads \\\n@@ -1556,6 +1529,7 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ)))\n \ts-parame.ads<s-parame-vms-alpha.ads \\\n         $(ATOMICS_TARGET_PAIRS)\n \n+    EXTRA_GNATRTL_NONTASKING_OBJS = s-atocou.o\n     TOOLS_TARGET_PAIRS= \\\n       mlib-tgt-specific.adb<mlib-tgt-specific-vms-alpha.adb \\\n       symbols.adb<symbols-vms.adb \\\n@@ -1605,7 +1579,9 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n   g-socthi.ads<g-socthi-mingw.ads \\\n   g-socthi.adb<g-socthi-mingw.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n-  g-soliop.ads<g-soliop-mingw.ads\n+  g-soliop.ads<g-soliop-mingw.ads \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  s-atocou.adb<s-atocou-x86.adb\n \n   ifeq ($(strip $(filter-out rtx_w32 rtx_rtss,$(THREAD_KIND))),)\n     LIBGNAT_TARGET_PAIRS += \\"}]}