{"sha": "2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM0YjE0OGM4NGE4YTMxMGQ4ZGMzNmMyZGNlMTk1MGZhMDFhYjI0MA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-05-16T16:47:47Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-05-16T16:47:47Z"}, "message": "acinclude.m4 (GLIBCXX_CHECK_COMPILER_FEATURES): Add a function to the test code compiled with -ffunction-sections -fdata-sections.\n\n2007-05-11  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4 (GLIBCXX_CHECK_COMPILER_FEATURES): Add a function\n\tto the test code compiled with -ffunction-sections -fdata-sections.\n\t* configure: Regenerate.\n\n\t* testsuite/22_locale/ctype/scan/wchar_t/1.cc: Remove\n\t_GLIBCXX_USE_WCHAR_T guards as surpufulous.\n\t\n\t* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Add\n\t_GLIBCXX_USE_WCHAR_T guards.\t\n\t* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Same.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: Same.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc: Same.\n\n\t* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc: \n\tAdd.\n\t* testsuite/21_strings/char_traits/typedefs/char/1.cc: Move...\n\t* testsuite/21_strings/char_traits/requirements/char/typedefs.cc: \n\t...here.\n\t* testsuite/21_strings/char_traits/typedefs: Remove.\n\t* testsuite/21_strings/char_traits/typedefs/char: Remove.\n\nFrom-SVN: r124772", "tree": {"sha": "c6883d3c3349acc7442dcd7e6e9bddbcfa12ee30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6883d3c3349acc7442dcd7e6e9bddbcfa12ee30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/comments", "author": null, "committer": null, "parents": [{"sha": "c74a03d23e9b1159e871f41552c1d2f73eb9812c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74a03d23e9b1159e871f41552c1d2f73eb9812c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c74a03d23e9b1159e871f41552c1d2f73eb9812c"}], "stats": {"total": 103, "additions": 91, "deletions": 12}, "files": [{"sha": "161ea69becd5931cc5f359358fe034303c6b8166", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -1,5 +1,28 @@\n 2007-05-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n+\t* acinclude.m4 (GLIBCXX_CHECK_COMPILER_FEATURES): Add a function\n+\tto the test code compiled with -ffunction-sections -fdata-sections.\n+\t* configure: Regenerate.\n+\n+\t* testsuite/22_locale/ctype/scan/wchar_t/1.cc: Remove\n+\t_GLIBCXX_USE_WCHAR_T guards as surpufulous.\n+\t\n+\t* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Add\n+\t_GLIBCXX_USE_WCHAR_T guards.\t\n+\t* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Same.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: Same.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc: Same.\n+\n+\t* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc: \n+\tAdd.\n+\t* testsuite/21_strings/char_traits/typedefs/char/1.cc: Move...\n+\t* testsuite/21_strings/char_traits/requirements/char/typedefs.cc: \n+\t...here.\n+\t* testsuite/21_strings/char_traits/typedefs: Remove.\n+\t* testsuite/21_strings/char_traits/typedefs/char: Remove.\n+\t\n+2007-05-11  Benjamin Kosnik  <bkoz@redhat.com>\t\n+\n \t* docs/html/abi.html: Update for gcc-4.1.2 and gcc-4.2.0.\n \t\n 2007-05-14  Kaz Kojima  <kkojima@gcc.gnu.org>"}, {"sha": "646c91078a30c09e501d05738ad7a4858fb52fff", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -171,7 +171,7 @@ AC_DEFUN([GLIBCXX_CHECK_COMPILER_FEATURES], [\n   # Check for -ffunction-sections -fdata-sections\n   AC_MSG_CHECKING([for g++ that supports -ffunction-sections -fdata-sections])\n   CXXFLAGS='-Werror -ffunction-sections -fdata-sections'\n-  AC_TRY_COMPILE(, [int foo;], [ac_fdsections=yes], [ac_fdsections=no])\n+  AC_TRY_COMPILE(, [int foo; void bar() { };], [ac_fdsections=yes], [ac_fdsections=no])\n   if test \"$ac_test_CXXFLAGS\" = set; then\n     CXXFLAGS=\"$ac_save_CXXFLAGS\"\n   else"}, {"sha": "1dc4cc3cfc52c405637a2965d6e27d6ddc9a313c", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -8283,7 +8283,7 @@ cat >>conftest.$ac_ext <<_ACEOF\n int\n main ()\n {\n-int foo;\n+int foo; void bar() { };\n   ;\n   return 0;\n }\n@@ -56578,7 +56578,7 @@ cat >>conftest.$ac_ext <<_ACEOF\n int\n main ()\n {\n-int foo;\n+int foo; void bar() { };\n   ;\n   return 0;\n }"}, {"sha": "0dea4ca073bf7cd3286a1ccd67f89b95fffe18ee", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs-1.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-1.cc?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -47,8 +47,10 @@ void test01()\n   typedef make_signed<const char>::type  \ttest22_type;\n   VERIFY( (is_same<test22_type, const signed char>::value) );\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   typedef make_signed<volatile wchar_t>::type  \ttest23_type;\n   VERIFY( (is_same<test23_type, volatile signed wchar_t>::value) );\n+#endif\n \n   typedef make_signed<test_enum>::type  \ttest25_type;\n   VERIFY( (is_same<test25_type, int>::value) );"}, {"sha": "377d1d177589d4f597cbc9db461bd40a7a499e41", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs-2.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-2.cc?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -47,8 +47,10 @@ void test01()\n   typedef make_signed<const char>::type  \ttest22_type;\n   VERIFY( (is_same<test22_type, const signed char>::value) );\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   typedef make_signed<volatile wchar_t>::type  \ttest23_type;\n   VERIFY( (is_same<test23_type, volatile signed wchar_t>::value) );\n+#endif\n \n   typedef make_signed<test_enum>::type  \ttest25_type;\n   VERIFY( (is_same<test25_type, short>::value) );"}, {"sha": "1270729bedf541f6afca70fa39489f68986c9d31", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs-1.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-1.cc?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -47,8 +47,10 @@ void test01()\n   typedef make_unsigned<const char>::type  \ttest22_type;\n   VERIFY( (is_same<test22_type, const unsigned char>::value) );\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   typedef make_unsigned<volatile wchar_t>::type  \ttest23_type;\n   VERIFY( (is_same<test23_type, volatile unsigned wchar_t>::value) );\n+#endif\n \n   typedef make_unsigned<test_enum>::type  \ttest25_type;\n   VERIFY( (is_same<test25_type, unsigned int>::value) );"}, {"sha": "1715d36c44af676e351bbe1ace65ecea5ba88d1e", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs-2.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-2.cc?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -47,8 +47,10 @@ void test01()\n   typedef make_unsigned<const char>::type  \ttest22_type;\n   VERIFY( (is_same<test22_type, const unsigned char>::value) );\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   typedef make_unsigned<volatile wchar_t>::type  \ttest23_type;\n   VERIFY( (is_same<test23_type, volatile unsigned wchar_t>::value) );\n+#endif\n \n   typedef make_unsigned<test_enum>::type  \ttest25_type;\n   VERIFY( (is_same<test25_type, unsigned short>::value) );"}, {"sha": "94b719e9017a5d1e7cc8c441d63f73d33d682933", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/char/typedefs.cc", "status": "renamed", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar%2Ftypedefs.cc?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -1,7 +1,9 @@\n+// dg-do compile\n+// dg-options -ansi -pedantic-err\n // 2001-02-11 gdr\n // Origin: Craig Rodrigues <rodrigc@mediaone.net>\n \n-// Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -25,10 +27,17 @@\n \n int main()\n {\n+  // Check for required typedefs.\n+  typedef std::char_traits<char> test_type;\n+  typedef test_type::char_type char_type;\n+  typedef test_type::int_type int_type;\n+  typedef test_type::off_type off_type;\n+  typedef test_type::pos_type pos_type;\n+  typedef test_type::state_type state_type;\n+\n   // 21.1.3: char_traits<char>::int_type == int\n-  // dg-options -ansi -pedantic-err\n-  std::char_traits<char>::int_type* p = 0;\n-  int* q __attribute__((unused)) = p;                   // dg-do compile\n+  test_type::int_type* p = 0;\n+  int* q __attribute__((unused)) = p;                   \n \n   return 0;\n }", "previous_filename": "libstdc++-v3/testsuite/21_strings/char_traits/typedefs/char/1.cc"}, {"sha": "e788daf8ce4245f1d2fdae00166ffc1f70186090", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fwchar_t%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fwchar_t%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fwchar_t%2Ftypedefs.cc?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -0,0 +1,43 @@\n+// dg-do compile\n+// dg-options -ansi -pedantic-err\n+// 2001-02-11 gdr\n+// Origin: Craig Rodrigues <rodrigc@mediaone.net>\n+\n+// Copyright (C) 2001, 2003, 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 21.1.2: char_traits typedefs\n+\n+#include <string>\n+\n+int main()\n+{\n+  // Check for required typedefs.\n+  typedef std::char_traits<wchar_t> test_type;\n+  typedef test_type::char_type char_type;\n+  typedef test_type::int_type int_type;\n+  typedef test_type::off_type off_type;\n+  typedef test_type::pos_type pos_type;\n+  typedef test_type::state_type state_type;\n+\n+  // 21.1.3: char_traits<wchar_t>::int_type == wint_t\n+  test_type::int_type* p = 0;\n+  wint_t* q __attribute__((unused)) = p;                   \n+\n+  return 0;\n+}"}, {"sha": "dce0d951c4d644a39fe955c7f5e669f1fa36a562", "filename": "libstdc++-v3/testsuite/22_locale/ctype/scan/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fscan%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b148c84a8a310d8dc36c2dce1950fa01ab240/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fscan%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fscan%2Fwchar_t%2F1.cc?ref=2c4b148c84a8a310d8dc36c2dce1950fa01ab240", "patch": "@@ -1,6 +1,6 @@\n // 2002-05-10 ghazi\n \n-// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -47,7 +47,6 @@ class gnu_ctype: public std::ctype<char_type> { };\n   VERIFY(gctype.scan_not((MASK), (STRING), \\\n \t\t\t (STRING) + traits_type::length(STRING)) == (EXPECTED))\n \n-#ifdef _GLIBCXX_USE_WCHAR_T\n // Sanity check scan_is() and scan_not().\n void test01()\n {\n@@ -341,12 +340,9 @@ void test01()\n   VERIFY_SCAN_NOT (std::ctype_base::upper, p2, p2);\n   VERIFY_SCAN_NOT (std::ctype_base::xdigit, p2, p2);\n }\n-#endif\n \n int main() \n {\n-#ifdef _GLIBCXX_USE_WCHAR_T\n   test01();\n-#endif\n   return 0;\n }"}]}