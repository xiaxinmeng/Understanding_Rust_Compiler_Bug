{"sha": "d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZhMjRjZGJiZjY0MTJjOGI3MTZhOWRmZGRlZmIwYjY3OTYyMjJiNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-23T09:49:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-23T09:49:38Z"}, "message": "[multiple changes]\n\n2009-06-23  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch4.adb (Displace_Allocator_Pointer, Expand_N_Allocator): Handle\n\tdesignated types referencing entities from the limited view.\n\n2009-06-23  Matthew Gingell  <gingell@adacore.com>\n\n\t* a-stzhas.ads, a-szfzha.ads: Fix typo.\n\n\t* Makefile.rtl: Ada.Strings.Wide_Wide_Fixed.Wide_Wide_Hash depends on\n\tAda.Strings.Wide_Wide_Hash. So we need to include a-stzhas in\n\tthe list of RTS files.\n\n2009-06-23  Thomas Quinot  <quinot@adacore.com>\n\n\t* ali.adb: Minor reformatting\n\n2009-06-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb: Improve error message.\n\n2009-06-23  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-nmsc.adb: Minor reformating\n\n\t* prj-conf.adb, prj-conf.ads: Remove use of Osint.Fail everywhere\n\t(Do_Autoconf): accepts an empty Normalized_Hostname\n\t(Process_Project_And_Apply_Config): New subprogram\n\t(Parse_Project_And_Apply_Config): On_Load_Config now applies to the\n\tproject tree rather than the project view.\n\n\t* prj-part.adb, prj.ads (Project_Qualifier): New possible value\n\tConfiguration.\n\nFrom-SVN: r148838", "tree": {"sha": "8c7c8114c8cd4bd5b787f13806517937d979cc1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c7c8114c8cd4bd5b787f13806517937d979cc1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/comments", "author": null, "committer": null, "parents": [{"sha": "f91c36dc88741e66ea0210ac26b8bea004b1d776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91c36dc88741e66ea0210ac26b8bea004b1d776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f91c36dc88741e66ea0210ac26b8bea004b1d776"}], "stats": {"total": 311, "additions": 225, "deletions": 86}, "files": [{"sha": "2e143ceb4180d5da7e1889795b35086adfe20b8d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -1,3 +1,8 @@\n+2009-06-23  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch4.adb (Displace_Allocator_Pointer, Expand_N_Allocator): Handle\n+\tdesignated types referencing entities from the limited view.\n+\n 2009-06-23  Robert Dewar  <dewar@adacore.com>\n \n \t* s-strhas.adb, s-strhas.ads: Restrict to 32-bit modular types"}, {"sha": "5f06d1cf2e8ad50c216c5e3c80234940184a94d7", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -220,6 +220,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-stwiun$(objext) \\\n   a-stzbou$(objext) \\\n   a-stzfix$(objext) \\\n+  a-stzhas$(objext) \\\n   a-stzmap$(objext) \\\n   a-stzsea$(objext) \\\n   a-stzsup$(objext) \\"}, {"sha": "0c87672b520c24eea1c6ae8679a5c69266f88653", "filename": "gcc/ada/a-stzhas.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fa-stzhas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fa-stzhas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzhas.ads?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -16,8 +16,10 @@\n --  Is this really an RM unit? Doc needed???\n \n with Ada.Containers;\n+with System.String_Hash;\n \n function Ada.Strings.Wide_Wide_Hash\n-  (Key : Wide_Wide_String) return Containers.Hash_Type;\n+is new System.String_Hash.Hash\n+  (Wide_Wide_Character, Wide_Wide_String, Containers.Hash_Type);\n \n pragma Pure (Ada.Strings.Wide_Wide_Hash);"}, {"sha": "5deb5d7c32b61ee4afd037e1507600bacde01cbf", "filename": "gcc/ada/a-szfzha.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fa-szfzha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fa-szfzha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-szfzha.ads?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -14,10 +14,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Containers, Ada.Strings.Wide_Wide_Hash;\n+with Ada.Containers;\n+with Ada.Strings.Wide_Wide_Hash;\n \n function Ada.Strings.Wide_Wide_Fixed.Wide_Wide_Hash\n-  (Key : Wide_Wide_String) return Containers.Hash_Type\n-  renames Ada.Strings.Wide_Wide_Hash;\n+ (Key : Wide_Wide_String) return Containers.Hash_Type\n+ renames Ada.Strings.Wide_Wide_Hash;\n \n pragma Pure (Ada.Strings.Wide_Wide_Fixed.Wide_Wide_Hash);"}, {"sha": "dd23a80399db3f8448ac1a64e6424d40df12769d", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -532,7 +532,7 @@ package body ALI is\n       begin\n          Skip_Space;\n \n-         --  Check if we are on a number. In the case of bas ALI files, this\n+         --  Check if we are on a number. In the case of bad ALI files, this\n          --  may not be true.\n \n          if not (Nextc in '0' .. '9') then"}, {"sha": "507ccad5005bc9eadbc7244ce31fe1181150cfb4", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -386,7 +386,7 @@ package body Exp_Ch4 is\n         and then Nkind (Orig_Node) = N_Allocator);\n \n       PtrT := Etype (Orig_Node);\n-      Dtyp := Designated_Type (PtrT);\n+      Dtyp := Available_View (Designated_Type (PtrT));\n       Etyp := Etype (Expression (Orig_Node));\n \n       if Is_Class_Wide_Type (Dtyp)\n@@ -2999,7 +2999,7 @@ package body Exp_Ch4 is\n \n    procedure Expand_N_Allocator (N : Node_Id) is\n       PtrT  : constant Entity_Id  := Etype (N);\n-      Dtyp  : constant Entity_Id  := Designated_Type (PtrT);\n+      Dtyp  : constant Entity_Id  := Available_View (Designated_Type (PtrT));\n       Etyp  : constant Entity_Id  := Etype (Expression (N));\n       Loc   : constant Source_Ptr := Sloc (N);\n       Desig : Entity_Id;"}, {"sha": "2591e6d0853910db990393b8e3055b101172d880", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 118, "deletions": 65, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -28,9 +28,7 @@ with Ada.Directories;  use Ada.Directories;\n with GNAT.HTable;      use GNAT.HTable;\n with Makeutl;          use Makeutl;\n with Opt;              use Opt;\n-with Osint;            use Osint;\n with Output;           use Output;\n-with Prj.Err;          use Prj.Err;\n with Prj.Part;\n with Prj.Proc;         use Prj.Proc;\n with Prj.Tree;         use Prj.Tree;\n@@ -83,12 +81,11 @@ package body Prj.Conf is\n       Autoconf_Specified : Boolean;\n       Project_Tree       : Prj.Project_Tree_Ref;\n       Target             : String := \"\") return Boolean;\n-   --  Check that the config file's target matches Target. Target should be\n-   --  set to the empty string when the user did not specify a target. If the\n-   --  target in the configuration file is invalid, this function will call\n-   --  Osint.Fail to report a fatal error message and stop the program.\n-   --  Autoconf_Specified should be set to True if the user has used\n-   --  autoconf.\n+   --  Check that the config file's target matches Target.\n+   --  Target should be set to the empty string when the user did not specify\n+   --  a target. If the target in the configuration file is invalid, this\n+   --  function will raise Invalid_Config with an appropriate message.\n+   --  Autoconf_Specified should be set to True if the user has used --autoconf\n \n    --------------------\n    -- Add_Attributes --\n@@ -369,12 +366,13 @@ package body Prj.Conf is\n \n          else\n             if Tgt_Name /= No_Name then\n-               Osint.Fail (\"invalid target name \"\"\" &\n-                           Get_Name_String (Tgt_Name) &\n-                           \"\"\" in configuration\");\n+               raise Invalid_Config\n+                 with \"invalid target name \"\"\"\n+                   & Get_Name_String (Tgt_Name) & \"\"\" in configuration\";\n \n             else\n-               Osint.Fail (\"no target specified in configuration file\");\n+               raise Invalid_Config\n+                 with \"no target specified in configuration file\";\n             end if;\n          end if;\n       end if;\n@@ -398,13 +396,16 @@ package body Prj.Conf is\n       Packages_To_Check          : String_List_Access := null;\n       Config                     : out Prj.Project_Id;\n       Config_File_Path           : out String_Access;\n-      Automatically_Generated    : out Boolean)\n+      Automatically_Generated    : out Boolean;\n+      On_Load_Config             : Config_File_Hook := null)\n    is\n       function Default_File_Name return String;\n       --  Return the name of the default config file that should be tested\n \n       procedure Do_Autoconf;\n-      --  Generate a new config file through gprconfig\n+      --  Generate a new config file through gprconfig.\n+      --  In case of error, this raises the Invalid_Config exception with an\n+      --  appropriate message\n \n       function Get_Config_Switches return Argument_List_Access;\n       --  Return the --config switches to use for gprconfig\n@@ -656,7 +657,8 @@ package body Prj.Conf is\n          Gprconfig_Path := Locate_Exec_On_Path (Gprconfig_Name);\n \n          if Gprconfig_Path = null then\n-            Fail (\"could not locate gprconfig for auto-configuration\");\n+            raise Invalid_Config\n+              with \"could not locate gprconfig for auto-configuration\";\n          end if;\n \n          --  First, find the object directory of the user's project\n@@ -714,12 +716,14 @@ package body Prj.Conf is\n \n                exception\n                   when others =>\n-                     Fail (\"could not create object directory \" & Obj_Dir);\n+                     raise Invalid_Config\n+                       with \"could not create object directory \" & Obj_Dir;\n                end;\n             end if;\n \n             if not Is_Directory (Obj_Dir) then\n-               Fail (\"object directory \" & Obj_Dir & \" does not exist\");\n+               raise Invalid_Config\n+                 with \"object directory \" & Obj_Dir & \" does not exist\";\n             end if;\n \n             --  Invoke gprconfig\n@@ -736,13 +740,17 @@ package body Prj.Conf is\n                Args (3) := new String'(Config_File_Name);\n             end if;\n \n-            if Target_Name = \"\" then\n-               Args (4) := new String'(\"--target=\" & Normalized_Hostname);\n+            if Normalized_Hostname = \"\" then\n+               Arg_Last := 3;\n             else\n-               Args (4) := new String'(\"--target=\" & Target_Name);\n-            end if;\n+               if Target_Name = \"\" then\n+                  Args (4) := new String'(\"--target=\" & Normalized_Hostname);\n+               else\n+                  Args (4) := new String'(\"--target=\" & Target_Name);\n+               end if;\n \n-            Arg_Last := 4;\n+               Arg_Last := 4;\n+            end if;\n \n             if not Verbose_Mode then\n                Arg_Last := Arg_Last + 1;\n@@ -778,7 +786,8 @@ package body Prj.Conf is\n             Config_File_Path := Locate_Config_File (Args (3).all);\n \n             if Config_File_Path = null then\n-               Fail (\"could not create \" & Args (3).all);\n+               raise Invalid_Config\n+                 with \"could not create \" & Args (3).all;\n             end if;\n \n             for F in Args'Range loop\n@@ -803,9 +812,9 @@ package body Prj.Conf is\n          if (not Allow_Automatic_Generation) and then\n             Config_File_Name /= \"\"\n          then\n-            Osint.Fail\n-              (\"could not locate main configuration project \" &\n-               Config_File_Name);\n+            raise Invalid_Config\n+              with \"could not locate main configuration project \"\n+                & Config_File_Name;\n          end if;\n       end if;\n \n@@ -815,6 +824,7 @@ package body Prj.Conf is\n       <<Process_Config_File>>\n \n       if Automatically_Generated then\n+         --  This might raise an Invalid_Config exception\n          Do_Autoconf;\n       end if;\n \n@@ -835,6 +845,13 @@ package body Prj.Conf is\n          Is_Config_File         => True);\n \n       if Config_Project_Node /= Empty_Node then\n+\n+         if On_Load_Config /= null then\n+            On_Load_Config\n+              (Config_File       => Config_Project_Node,\n+               Project_Node_Tree => Project_Node_Tree);\n+         end if;\n+\n          Prj.Proc.Process_Project_Tree_Phase_1\n            (In_Tree                => Project_Tree,\n             Project                => Config,\n@@ -848,9 +865,9 @@ package body Prj.Conf is\n       if Config_Project_Node = Empty_Node\n         or else Config = No_Project\n       then\n-         Osint.Fail\n-           (\"processing of configuration project \"\"\" &\n-            Config_File_Path.all & \"\"\" failed\");\n+         raise Invalid_Config\n+           with \"processing of configuration project \"\"\"\n+             & Config_File_Path.all & \"\"\" failed\";\n       end if;\n \n       --  Check that the target of the configuration file is the one the user\n@@ -866,16 +883,15 @@ package body Prj.Conf is\n       end if;\n    end Get_Or_Create_Configuration_File;\n \n-   ------------------------------------\n-   -- Parse_Project_And_Apply_Config --\n-   ------------------------------------\n+   --------------------------------------\n+   -- Process_Project_And_Apply_Config --\n+   --------------------------------------\n \n-   procedure Parse_Project_And_Apply_Config\n+   procedure Process_Project_And_Apply_Config\n      (Main_Project               : out Prj.Project_Id;\n-      User_Project_Node          : out Prj.Tree.Project_Node_Id;\n+      User_Project_Node          : Prj.Tree.Project_Node_Id;\n       Config_File_Name           : String := \"\";\n       Autoconf_Specified         : Boolean;\n-      Project_File_Name          : String;\n       Project_Tree               : Prj.Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n       Packages_To_Check          : String_List_Access;\n@@ -884,41 +900,23 @@ package body Prj.Conf is\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n+      Report_Error               : Put_Line_Access := null;\n       On_Load_Config             : Config_File_Hook := null)\n    is\n       Main_Config_Project : Project_Id;\n       Success : Boolean;\n \n    begin\n-      --  Parse the user project tree\n-\n-      Prj.Initialize (Project_Tree);\n-      Prj.Tree.Initialize (Project_Node_Tree);\n-\n       Main_Project := No_Project;\n       Automatically_Generated := False;\n \n-      Prj.Part.Parse\n-        (In_Tree                => Project_Node_Tree,\n-         Project                => User_Project_Node,\n-         Project_File_Name      => Project_File_Name,\n-         Always_Errout_Finalize => False,\n-         Packages_To_Check      => Packages_To_Check,\n-         Current_Directory      => Current_Directory,\n-         Is_Config_File         => False);\n-\n-      if User_Project_Node = Empty_Node then\n-         User_Project_Node := Empty_Node;\n-         return;\n-      end if;\n-\n       Process_Project_Tree_Phase_1\n         (In_Tree                => Project_Tree,\n          Project                => Main_Project,\n          Success                => Success,\n          From_Project_Node      => User_Project_Node,\n          From_Project_Node_Tree => Project_Node_Tree,\n-         Report_Error           => null);\n+         Report_Error           => Report_Error);\n \n       if not Success then\n          Main_Project := No_Project;\n@@ -939,13 +937,8 @@ package body Prj.Conf is\n          Normalized_Hostname        => Normalized_Hostname,\n          Packages_To_Check          => Packages_To_Check,\n          Config_File_Path           => Config_File_Path,\n-         Automatically_Generated    => Automatically_Generated);\n-\n-      if On_Load_Config /= null then\n-         On_Load_Config\n-           (Config_File  => Main_Config_Project,\n-            Project_Tree => Project_Tree);\n-      end if;\n+         Automatically_Generated    => Automatically_Generated,\n+         On_Load_Config             => On_Load_Config);\n \n       Apply_Config_File (Main_Config_Project, Project_Tree);\n \n@@ -959,15 +952,75 @@ package body Prj.Conf is\n          Success                => Success,\n          From_Project_Node      => User_Project_Node,\n          From_Project_Node_Tree => Project_Node_Tree,\n-         Report_Error           => null,\n+         Report_Error           => Report_Error,\n          Current_Dir            => Current_Directory,\n          When_No_Sources        => Warning,\n          Is_Config_File         => False);\n \n       if not Success then\n-         Prj.Err.Finalize;\n-         Osint.Fail (\"\"\"\" & Project_File_Name & \"\"\" processing failed\");\n+         Main_Project := No_Project;\n       end if;\n+   end Process_Project_And_Apply_Config;\n+\n+   ------------------------------------\n+   -- Parse_Project_And_Apply_Config --\n+   ------------------------------------\n+\n+   procedure Parse_Project_And_Apply_Config\n+     (Main_Project               : out Prj.Project_Id;\n+      User_Project_Node          : out Prj.Tree.Project_Node_Id;\n+      Config_File_Name           : String := \"\";\n+      Autoconf_Specified         : Boolean;\n+      Project_File_Name          : String;\n+      Project_Tree               : Prj.Project_Tree_Ref;\n+      Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      Packages_To_Check          : String_List_Access;\n+      Allow_Automatic_Generation : Boolean := True;\n+      Automatically_Generated    : out Boolean;\n+      Config_File_Path           : out String_Access;\n+      Target_Name                : String := \"\";\n+      Normalized_Hostname        : String;\n+      Report_Error               : Put_Line_Access := null;\n+      On_Load_Config             : Config_File_Hook := null)\n+   is\n+   begin\n+      --  Parse the user project tree\n+\n+      Prj.Tree.Initialize (Project_Node_Tree);\n+      Prj.Initialize (Project_Tree);\n+\n+      Main_Project      := No_Project;\n+      Automatically_Generated := False;\n+\n+      Prj.Part.Parse\n+        (In_Tree                => Project_Node_Tree,\n+         Project                => User_Project_Node,\n+         Project_File_Name      => Project_File_Name,\n+         Always_Errout_Finalize => False,\n+         Packages_To_Check      => Packages_To_Check,\n+         Current_Directory      => Current_Directory,\n+         Is_Config_File         => False);\n+\n+      if User_Project_Node = Empty_Node then\n+         User_Project_Node := Empty_Node;\n+         return;\n+      end if;\n+\n+      Process_Project_And_Apply_Config\n+        (Main_Project               => Main_Project,\n+         User_Project_Node          => User_Project_Node,\n+         Config_File_Name           => Config_File_Name,\n+         Autoconf_Specified         => Autoconf_Specified,\n+         Project_Tree               => Project_Tree,\n+         Project_Node_Tree          => Project_Node_Tree,\n+         Packages_To_Check          => Packages_To_Check,\n+         Allow_Automatic_Generation => Allow_Automatic_Generation,\n+         Automatically_Generated    => Automatically_Generated,\n+         Config_File_Path           => Config_File_Path,\n+         Target_Name                => Target_Name,\n+         Normalized_Hostname        => Normalized_Hostname,\n+         Report_Error               => Report_Error,\n+         On_Load_Config             => On_Load_Config);\n    end Parse_Project_And_Apply_Config;\n \n    -----------------------"}, {"sha": "51cb8b3734026bce97d063e2a804044135c1cdf4", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 37, "deletions": 8, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -31,12 +31,12 @@ with Prj.Tree;\n package Prj.Conf is\n \n    type Config_File_Hook is access procedure\n-     (Config_File  : Prj.Project_Id;\n-      Project_Tree : Prj.Project_Tree_Ref);\n+     (Config_File       : Prj.Tree.Project_Node_Id;\n+      Project_Node_Tree : Prj.Tree.Project_Node_Tree_Ref);\n    --  Hook called after the config file has been parsed. This lets the\n    --  application do last minute changes to it (GPS uses this to add the\n-   --  default naming schemes for instance). At that point, the config file\n-   --  has not been applied to the project yet.\n+   --  default naming schemes for instance).\n+   --  At that point, the config file has not been applied to the project yet.\n \n    procedure Parse_Project_And_Apply_Config\n      (Main_Project               : out Prj.Project_Id;\n@@ -52,13 +52,14 @@ package Prj.Conf is\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n+      Report_Error               : Put_Line_Access := null;\n       On_Load_Config             : Config_File_Hook := null);\n    --  Find the main configuration project and parse the project tree rooted at\n    --  this configuration project.\n    --\n    --  If the processing fails, Main_Project is set to No_Project. If the error\n    --  happend while parsing the project itself (ie creating the tree),\n-   --  User_Project_Node is also set to Empty_Node\n+   --  User_Project_Node is also set to Empty_Node.\n    --\n    --  Autoconf_Specified indicates whether the user has specified --autoconf.\n    --  If this is the case, the config file might be (re)generated, as\n@@ -74,6 +75,31 @@ package Prj.Conf is\n    --  If specified, On_Load_Config is called just after the config file has\n    --  been created/loaded. You can then modify it before it is later applied\n    --  to the project itself.\n+   --\n+   --  Any error in generating or parsing the config file is reported via the\n+   --  Invalid_Config exception, with an appropriate message. Any error while\n+   --  parsing the project file results in No_Project.\n+\n+   procedure Process_Project_And_Apply_Config\n+     (Main_Project               : out Prj.Project_Id;\n+      User_Project_Node          : Prj.Tree.Project_Node_Id;\n+      Config_File_Name           : String := \"\";\n+      Autoconf_Specified         : Boolean;\n+      Project_Tree               : Prj.Project_Tree_Ref;\n+      Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      Packages_To_Check          : String_List_Access;\n+      Allow_Automatic_Generation : Boolean := True;\n+      Automatically_Generated    : out Boolean;\n+      Config_File_Path           : out String_Access;\n+      Target_Name                : String := \"\";\n+      Normalized_Hostname        : String;\n+      Report_Error               : Put_Line_Access := null;\n+      On_Load_Config             : Config_File_Hook := null);\n+   --  Same as above, except the project must already have been parsed through\n+   --  Prj.Part.Parse, and only the processing of the project and the\n+   --  configuration is done at this level.\n+\n+   Invalid_Config : exception;\n \n    procedure Get_Or_Create_Configuration_File\n      (Project                    : Prj.Project_Id;\n@@ -87,11 +113,14 @@ package Prj.Conf is\n       Packages_To_Check          : String_List_Access := null;\n       Config                     : out Prj.Project_Id;\n       Config_File_Path           : out String_Access;\n-      Automatically_Generated    : out Boolean);\n+      Automatically_Generated    : out Boolean;\n+      On_Load_Config             : Config_File_Hook := null);\n    --  Compute the name of the configuration file that should be used. If no\n    --  default configuration file is found, a new one will be automatically\n-   --  generated if Allow_Automatic_Generation is true (otherwise an error\n-   --  reported to the user via Osint.Fail).\n+   --  generated if Allow_Automatic_Generation is true.\n+   --\n+   --  Any error in generating or parsing the config file is reported via the\n+   --  Invalid_Config exception, with an appropriate message.\n    --\n    --  On exit, Configuration_Project_Path is never null (if none could be\n    --  found, Os.Fail was called and the program exited anyway)."}, {"sha": "04f8ec5b476ff6e1c67f2416a79e96e54db57df4", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -5861,8 +5861,7 @@ package body Prj.Nmsc is\n          --  No Source_Dirs specified: the single source directory is the one\n          --  containing the project file\n \n-         String_Element_Table.Increment_Last\n-           (In_Tree.String_Elements);\n+         String_Element_Table.Increment_Last (In_Tree.String_Elements);\n          Project.Source_Dirs := String_Element_Table.Last\n            (In_Tree.String_Elements);\n          In_Tree.String_Elements.Table (Project.Source_Dirs) :=\n@@ -5875,7 +5874,7 @@ package body Prj.Nmsc is\n \n          if Current_Verbosity = High then\n             Write_Attr\n-              (\"Single source directory\",\n+              (\"Default source directory\",\n                Get_Name_String (Project.Directory.Display_Name));\n          end if;\n "}, {"sha": "3c203f05268d24ec937c0569db6f9dd291c53608", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -1218,15 +1218,26 @@ package body Prj.Part is\n                              Token_Ptr);\n                end if;\n \n+               Proj_Qualifier := Configuration;\n                Scan (In_Tree);\n \n             when others =>\n                null;\n          end case;\n       end if;\n \n+      if Is_Config_File and then Proj_Qualifier = Unspecified then\n+         --  Set the qualifier to Configuration, even if the token doesn't\n+         --  exist in the source file itself, so that we can differentiate\n+         --  project files and configuration files later on.\n+\n+         Proj_Qualifier := Configuration;\n+      end if;\n+\n       if Proj_Qualifier /= Unspecified then\n-         if Is_Config_File then\n+         if Is_Config_File\n+           and then Proj_Qualifier /= Configuration\n+         then\n             Error_Msg (\"a configuration project cannot be qualified except \" &\n                        \"as configuration project\",\n                        Qualifier_Location);"}, {"sha": "fb69b0ce6327743487bc4c160c6555b1a7c278ab", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -67,6 +67,7 @@ package Prj is\n      (Unspecified,\n       Standard,\n       Library,\n+      Configuration,\n       Dry,\n       Aggregate,\n       Aggregate_Library);\n@@ -77,6 +78,7 @@ package Prj is\n    --    Dry:                  abstract project is\n    --    Aggregate:            aggregate project is\n    --    Aggregate_Library:    aggregate library project is ...\n+   --    Configuration:        configuration project is ...\n \n    function Get_Mode return Mode;\n    pragma Inline (Get_Mode);"}, {"sha": "29363f87129561cf88133e74e5fe90ef8903d142", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "patch": "@@ -4759,7 +4759,43 @@ package body Sem_Ch8 is\n                --  Here we have the case of an undefined component\n \n                else\n-                  Error_Msg_NE (\"& not declared in&\", N, Selector);\n+\n+                  --  The prefix may hide a homonym in the context that\n+                  --  declares the desired entity. This error can use a\n+                  --  specialized message.\n+\n+                  if In_Open_Scopes (P_Name)\n+                    and then Present (Homonym (P_Name))\n+                    and then Is_Compilation_Unit (Homonym (P_Name))\n+                    and then\n+                     (Is_Immediately_Visible (Homonym (P_Name))\n+                        or else Is_Visible_Child_Unit (Homonym (P_Name)))\n+                  then\n+                     declare\n+                        H : constant Entity_Id := Homonym (P_Name);\n+                     begin\n+                        Id := First_Entity (H);\n+                        while Present (Id) loop\n+\n+                           if Chars (Id) = Chars (Selector) then\n+                              Error_Msg_Qual_Level := 99;\n+                              Error_Msg_Name_1 := Chars (Selector);\n+                              Error_Msg_NE\n+                                (\"% not declared in&\", N, P_Name);\n+                              Error_Msg_NE\n+                                (\"\\use fully qualified name starting with\"\n+                                  & \" Standard to make& visible\", N, H);\n+                              Error_Msg_Qual_Level := 0;\n+                              exit;\n+                           end if;\n+\n+                           Next_Entity (Id);\n+                        end loop;\n+                     end;\n+\n+                  else\n+                     Error_Msg_NE (\"& not declared in&\", N, Selector);\n+                  end if;\n \n                   --  Check for misspelling of some entity in prefix\n "}]}