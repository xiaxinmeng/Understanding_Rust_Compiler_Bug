{"sha": "96758521f7b9f3fb94ae966e1511c8af4137d347", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY3NTg1MjFmN2I5ZjNmYjk0YWU5NjZlMTUxMWM4YWY0MTM3ZDM0Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-12-22T12:28:24Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-12-22T12:28:24Z"}, "message": "func-2a.c (dg-do): Remove target selector.\n\n\t* gcc.target/x86_64/abi/callabi/func-2a.c (dg-do): Remove\n\ttarget selector.\n\t* gcc.target/x86_64/abi/callabi/func-indirect-2a.c (dg-do): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-4a.c (dg-do): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-5a.c (dg-do): Ditto.\n\nFrom-SVN: r206166", "tree": {"sha": "7738aed88c66d8265a8f1100d020fcc5097527c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7738aed88c66d8265a8f1100d020fcc5097527c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96758521f7b9f3fb94ae966e1511c8af4137d347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96758521f7b9f3fb94ae966e1511c8af4137d347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96758521f7b9f3fb94ae966e1511c8af4137d347", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96758521f7b9f3fb94ae966e1511c8af4137d347/comments", "author": null, "committer": null, "parents": [{"sha": "005cdd8aaa2a82fddbf00b7842f69ae91d48aa90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005cdd8aaa2a82fddbf00b7842f69ae91d48aa90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/005cdd8aaa2a82fddbf00b7842f69ae91d48aa90"}], "stats": {"total": 266, "additions": 137, "deletions": 129}, "files": [{"sha": "d0efe2ac25546c90934149158efc4d0adb4dc0e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 133, "deletions": 125, "changes": 258, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96758521f7b9f3fb94ae966e1511c8af4137d347", "patch": "@@ -1,3 +1,11 @@\n+2013-12-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/x86_64/abi/callabi/func-2a.c (dg-do): Remove\n+\ttarget selector.\n+\t* gcc.target/x86_64/abi/callabi/func-indirect-2a.c (dg-do): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-4a.c (dg-do): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-5a.c (dg-do): Ditto.\n+\n 2013-12-20  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* gcc.target/arm/nested-apcs.c: New test.\n@@ -26,130 +34,130 @@\n \n 2013-12-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n-\t * lib/target-supports.exp (check_effective_target_arm_crypto_ok):\n-\t New procedure.\n-\t (add_options_for_arm_crypto): Likewise.\n-\t * gcc.target/arm/crypto-vaesdq_u8.c: New test.\n-\t * gcc.target/arm/crypto-vaeseq_u8.c: Likewise.\n-\t * gcc.target/arm/crypto-vaesimcq_u8.c: Likewise.\n-\t * gcc.target/arm/crypto-vaesmcq_u8.c: Likewise.\n-\t * gcc.target/arm/crypto-vldrq_p128.c: Likewise.\n-\t * gcc.target/arm/crypto-vmull_high_p64.c: Likewise.\n-\t * gcc.target/arm/crypto-vmullp64.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha1cq_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha1h_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha1mq_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha1pq_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha1su0q_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha1su1q_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha256h2q_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha256hq_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha256su0q_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vsha256su1q_u32.c: Likewise.\n-\t * gcc.target/arm/crypto-vstrq_p128.c: Likewise.\n-\t * gcc.target/arm/neon/vbslQp64: Generate.\n-\t * gcc.target/arm/neon/vbslp64: Likewise.\n-\t * gcc.target/arm/neon/vcombinep64: Likewise.\n-\t * gcc.target/arm/neon/vcreatep64: Likewise.\n-\t * gcc.target/arm/neon/vdupQ_lanep64: Likewise.\n-\t * gcc.target/arm/neon/vdupQ_np64: Likewise.\n-\t * gcc.target/arm/neon/vdup_lanep64: Likewise.\n-\t * gcc.target/arm/neon/vdup_np64: Likewise.\n-\t * gcc.target/arm/neon/vextQp64: Likewise.\n-\t * gcc.target/arm/neon/vextp64: Likewise.\n-\t * gcc.target/arm/neon/vget_highp64: Likewise.\n-\t * gcc.target/arm/neon/vget_lowp64: Likewise.\n-\t * gcc.target/arm/neon/vld1Q_dupp64: Likewise.\n-\t * gcc.target/arm/neon/vld1Q_lanep64: Likewise.\n-\t * gcc.target/arm/neon/vld1Qp64: Likewise.\n-\t * gcc.target/arm/neon/vld1_dupp64: Likewise.\n-\t * gcc.target/arm/neon/vld1_lanep64: Likewise.\n-\t * gcc.target/arm/neon/vld1p64: Likewise.\n-\t * gcc.target/arm/neon/vld2_dupp64: Likewise.\n-\t * gcc.target/arm/neon/vld2p64: Likewise.\n-\t * gcc.target/arm/neon/vld3_dupp64: Likewise.\n-\t * gcc.target/arm/neon/vld3p64: Likewise.\n-\t * gcc.target/arm/neon/vld4_dupp64: Likewise.\n-\t * gcc.target/arm/neon/vld4p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQf32_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQf32_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_f32: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_p16: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_p8: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_s16: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_s32: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_s64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_s8: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_u16: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_u32: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_u64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp128_u8: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp16_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp16_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_f32: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_p16: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_p8: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_s16: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_s32: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_s64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_s8: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_u16: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_u32: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_u64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp64_u8: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp8_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQp8_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQs16_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQs16_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQs32_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQs32_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQs64_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQs64_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQs8_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQs8_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQu16_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQu16_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQu32_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQu32_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQu64_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQu64_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQu8_p128: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretQu8_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretf32_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp16_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_f32: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_p16: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_p8: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_s16: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_s32: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_s64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_s8: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_u16: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_u32: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_u64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp64_u8: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretp8_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterprets16_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterprets32_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterprets64_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterprets8_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretu16_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretu32_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretu64_p64: Likewise.\n-\t * gcc.target/arm/neon/vreinterpretu8_p64: Likewise.\n-\t * gcc.target/arm/neon/vsliQ_np64: Likewise.\n-\t * gcc.target/arm/neon/vsli_np64: Likewise.\n-\t * gcc.target/arm/neon/vsriQ_np64: Likewise.\n-\t * gcc.target/arm/neon/vsri_np64: Likewise.\n-\t * gcc.target/arm/neon/vst1Q_lanep64: Likewise.\n-\t * gcc.target/arm/neon/vst1Qp64: Likewise.\n-\t * gcc.target/arm/neon/vst1_lanep64: Likewise.\n-\t * gcc.target/arm/neon/vst1p64: Likewise.\n-\t * gcc.target/arm/neon/vst2p64: Likewise.\n-\t * gcc.target/arm/neon/vst3p64: Likewise.\n-\t * gcc.target/arm/neon/vst4p64: Likewise.\n+\t* lib/target-supports.exp (check_effective_target_arm_crypto_ok):\n+\tNew procedure.\n+\t(add_options_for_arm_crypto): Likewise.\n+\t* gcc.target/arm/crypto-vaesdq_u8.c: New test.\n+\t* gcc.target/arm/crypto-vaeseq_u8.c: Likewise.\n+\t* gcc.target/arm/crypto-vaesimcq_u8.c: Likewise.\n+\t* gcc.target/arm/crypto-vaesmcq_u8.c: Likewise.\n+\t* gcc.target/arm/crypto-vldrq_p128.c: Likewise.\n+\t* gcc.target/arm/crypto-vmull_high_p64.c: Likewise.\n+\t* gcc.target/arm/crypto-vmullp64.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha1cq_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha1h_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha1mq_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha1pq_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha1su0q_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha1su1q_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha256h2q_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha256hq_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha256su0q_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vsha256su1q_u32.c: Likewise.\n+\t* gcc.target/arm/crypto-vstrq_p128.c: Likewise.\n+\t* gcc.target/arm/neon/vbslQp64: Generate.\n+\t* gcc.target/arm/neon/vbslp64: Likewise.\n+\t* gcc.target/arm/neon/vcombinep64: Likewise.\n+\t* gcc.target/arm/neon/vcreatep64: Likewise.\n+\t* gcc.target/arm/neon/vdupQ_lanep64: Likewise.\n+\t* gcc.target/arm/neon/vdupQ_np64: Likewise.\n+\t* gcc.target/arm/neon/vdup_lanep64: Likewise.\n+\t* gcc.target/arm/neon/vdup_np64: Likewise.\n+\t* gcc.target/arm/neon/vextQp64: Likewise.\n+\t* gcc.target/arm/neon/vextp64: Likewise.\n+\t* gcc.target/arm/neon/vget_highp64: Likewise.\n+\t* gcc.target/arm/neon/vget_lowp64: Likewise.\n+\t* gcc.target/arm/neon/vld1Q_dupp64: Likewise.\n+\t* gcc.target/arm/neon/vld1Q_lanep64: Likewise.\n+\t* gcc.target/arm/neon/vld1Qp64: Likewise.\n+\t* gcc.target/arm/neon/vld1_dupp64: Likewise.\n+\t* gcc.target/arm/neon/vld1_lanep64: Likewise.\n+\t* gcc.target/arm/neon/vld1p64: Likewise.\n+\t* gcc.target/arm/neon/vld2_dupp64: Likewise.\n+\t* gcc.target/arm/neon/vld2p64: Likewise.\n+\t* gcc.target/arm/neon/vld3_dupp64: Likewise.\n+\t* gcc.target/arm/neon/vld3p64: Likewise.\n+\t* gcc.target/arm/neon/vld4_dupp64: Likewise.\n+\t* gcc.target/arm/neon/vld4p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQf32_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQf32_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_f32: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_p16: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_p8: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_s16: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_s32: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_s64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_s8: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_u16: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_u32: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_u64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp128_u8: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp16_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp16_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_f32: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_p16: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_p8: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_s16: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_s32: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_s64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_s8: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_u16: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_u32: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_u64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp64_u8: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp8_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQp8_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQs16_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQs16_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQs32_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQs32_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQs64_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQs64_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQs8_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQs8_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQu16_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQu16_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQu32_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQu32_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQu64_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQu64_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQu8_p128: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretQu8_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretf32_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp16_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_f32: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_p16: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_p8: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_s16: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_s32: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_s64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_s8: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_u16: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_u32: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_u64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp64_u8: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretp8_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterprets16_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterprets32_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterprets64_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterprets8_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretu16_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretu32_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretu64_p64: Likewise.\n+\t* gcc.target/arm/neon/vreinterpretu8_p64: Likewise.\n+\t* gcc.target/arm/neon/vsliQ_np64: Likewise.\n+\t* gcc.target/arm/neon/vsli_np64: Likewise.\n+\t* gcc.target/arm/neon/vsriQ_np64: Likewise.\n+\t* gcc.target/arm/neon/vsri_np64: Likewise.\n+\t* gcc.target/arm/neon/vst1Q_lanep64: Likewise.\n+\t* gcc.target/arm/neon/vst1Qp64: Likewise.\n+\t* gcc.target/arm/neon/vst1_lanep64: Likewise.\n+\t* gcc.target/arm/neon/vst1p64: Likewise.\n+\t* gcc.target/arm/neon/vst2p64: Likewise.\n+\t* gcc.target/arm/neon/vst3p64: Likewise.\n+\t* gcc.target/arm/neon/vst4p64: Likewise.\n \n 2013-12-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n@@ -233,7 +241,7 @@\n \t* c-c++-common/cilk-plus/SE/ef_error2.c: Likewise.\n \t* c-c++-common/cilk-plus/SE/ef_error3.c: Likewise.\n \t* gcc.dg/cilk-plus/cilk-plus.exp: Added calls for the above tests.\n-\t\n+\n 2013-12-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/59539"}, {"sha": "c41354942830a3211d9cfd60dd09c5c9be568f37", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-2a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2a.c?ref=96758521f7b9f3fb94ae966e1511c8af4137d347", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi standard calls.  */\n-/* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n+/* { dg-do run } */\n /* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n /* { dg-additional-sources \"func-2b.c\" } */\n "}, {"sha": "f8a4d78b619f7484f1c3b6171bd3eccb894d004e", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-indirect-2a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2a.c?ref=96758521f7b9f3fb94ae966e1511c8af4137d347", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi standard calls via variable.  */\n-/* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n+/* { dg-do run } */\n /* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n /* { dg-additional-sources \"func-indirect-2b.c\" } */\n "}, {"sha": "94f287d964b3a3ed72b3b4bd5eea689343be2ea1", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-4a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4a.c?ref=96758521f7b9f3fb94ae966e1511c8af4137d347", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n-/* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n+/* { dg-do run } */\n /* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n /* { dg-additional-sources \"vaarg-4b.c\" } */\n "}, {"sha": "fc79877d174e7354807054af95a1849a63e3ea69", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-5a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96758521f7b9f3fb94ae966e1511c8af4137d347/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5a.c?ref=96758521f7b9f3fb94ae966e1511c8af4137d347", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n-/* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n+/* { dg-do run } */\n /* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n /* { dg-additional-sources \"vaarg-5b.c\" } */\n "}]}