{"sha": "5cd76fcd7f0db9c993fcbd14c1b4b3f4204fc497", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNkNzZmY2Q3ZjBkYjljOTkzZmNiZDE0YzFiNGIzZjQyMDRmYzQ5Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-29T20:23:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-29T20:23:11Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1126", "tree": {"sha": "704071c48eebf73028e8ad4982ef08b89e5622c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/704071c48eebf73028e8ad4982ef08b89e5622c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cd76fcd7f0db9c993fcbd14c1b4b3f4204fc497", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd76fcd7f0db9c993fcbd14c1b4b3f4204fc497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd76fcd7f0db9c993fcbd14c1b4b3f4204fc497", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd76fcd7f0db9c993fcbd14c1b4b3f4204fc497/comments", "author": null, "committer": null, "parents": [{"sha": "d072107f2332b70700b7fbd9b27c802ff3cef1a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d072107f2332b70700b7fbd9b27c802ff3cef1a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d072107f2332b70700b7fbd9b27c802ff3cef1a2"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "243f56d5aa73823cb3fdd56830fc83f62d44bed5", "filename": "gcc/integrate.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd76fcd7f0db9c993fcbd14c1b4b3f4204fc497/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd76fcd7f0db9c993fcbd14c1b4b3f4204fc497/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=5cd76fcd7f0db9c993fcbd14c1b4b3f4204fc497", "patch": "@@ -1464,9 +1464,20 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t      && GET_CODE (pattern) == SET\n \t      && GET_CODE (SET_DEST (pattern)) == REG\n \t      && REG_FUNCTION_VALUE_P (SET_DEST (pattern)))\n-\t    break;\n-\n-\t  copy = emit_insn (copy_rtx_and_substitute (pattern, map));\n+\t    {\n+\t      if (volatile_refs_p (SET_SRC (pattern)))\n+\t\t{\n+\t\t  /* If we must not delete the source,\n+\t\t     load it into a new temporary.  */\n+\t\t  copy = emit_insn (copy_rtx_and_substitute (pattern, map));\n+\t\t  SET_DEST (pattern)\n+\t\t    = gen_reg_rtx (GET_MODE (SET_DEST (pattern)));\n+\t\t}\n+\t      else\n+\t\tbreak;\n+\t    }\n+\t  else\n+\t    copy = emit_insn (copy_rtx_and_substitute (pattern, map));\n \t  /* REG_NOTES will be copied later.  */\n \n #ifdef HAVE_cc0"}]}