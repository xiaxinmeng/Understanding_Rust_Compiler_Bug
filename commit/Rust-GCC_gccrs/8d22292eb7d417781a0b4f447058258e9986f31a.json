{"sha": "8d22292eb7d417781a0b4f447058258e9986f31a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQyMjI5MmViN2Q0MTc3ODFhMGI0ZjQ0NzA1ODI1OGU5OTg2ZjMxYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-12-08T08:50:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-12-08T08:50:47Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r231396", "tree": {"sha": "cd1a461b42440c9ba7a6458bc8b8c520d835a1df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd1a461b42440c9ba7a6458bc8b8c520d835a1df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d22292eb7d417781a0b4f447058258e9986f31a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d22292eb7d417781a0b4f447058258e9986f31a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d22292eb7d417781a0b4f447058258e9986f31a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d22292eb7d417781a0b4f447058258e9986f31a/comments", "author": null, "committer": null, "parents": [{"sha": "dc9604d432eb8fd23e9371cfe4016237b4ec1449", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc9604d432eb8fd23e9371cfe4016237b4ec1449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc9604d432eb8fd23e9371cfe4016237b4ec1449"}], "stats": {"total": 135, "additions": 63, "deletions": 72}, "files": [{"sha": "918cd12fba457a6457904609b128b27e982b86f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 54, "deletions": 63, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d22292eb7d417781a0b4f447058258e9986f31a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d22292eb7d417781a0b4f447058258e9986f31a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d22292eb7d417781a0b4f447058258e9986f31a", "patch": "@@ -194,7 +194,7 @@\n \t* config/rs6000/rs6000.md (rsqrt<mode>2): Call new function name.\n \t(sqrt<mode>2): Replace define_insn with define_expand that may call\n \trs6000_emit_swsqrt.\n-\t\n+\n 2015-12-04  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n \n@@ -234,8 +234,7 @@\n \n 2015-12-04  Nathan Sidwell  <nathan@acm.org>\n \n-\t* config/nvptx/nvptx.c (nvptx_assemble_decl_begin): New,\n-\treplacing ...\n+\t* config/nvptx/nvptx.c (nvptx_assemble_decl_begin): New, replacing ...\n \t(init_output_initializer): ... this.\n \t(nvptx_output_aligned_decl, nvptx_asm_declare_constant_name,\n \tnvptx_declare_object_name, nvptx_assemble_undefined_decl): Use\n@@ -297,8 +296,8 @@\n \n 2015-12-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n-\t* (cstore<mode>4_unsigned): Use gpc_reg_operand instead of\n-\tregister_operand.  Remove empty constraints.  Use std::swap.\n+\t* config/rs6000/rs6000.md (cstore<mode>4_unsigned): Use gpc_reg_operand\n+\tinstead of register_operand.  Remove empty constraints.  Use std::swap.\n \t(cstore_si_as_di, cstore<mode>4_signed_imm,\n \tcstore<mode>4_unsigned_imm, cstore<mode>4 for GPR): Use\n \tgpc_reg_operand instead of register_operand.\n@@ -308,13 +307,12 @@\n 2015-12-04  Nick Clifton  <nickc@redhat.com>\n \n \t* config.gcc (extra_gcc_objs): Define for MSP430.\n-        * common/config/msp430/msp430-common.c (msp430_handle_option):\n-\tPass both -mmcu and -mcpu on to the back end if they are both\n-\tdefined.\n+\t* common/config/msp430/msp430-common.c (msp430_handle_option):\n+\tPass both -mmcu and -mcpu on to the back end if they are both defined.\n \t* config/msp430/msp430.c (hwmult_name): New function.\n-        (msp430_option_override): If an unrecognised MCU name is\n+\t(msp430_option_override): If an unrecognised MCU name is\n \tdetected only warn if the user has not provided suitable\n-        -mhwmult and -mcpu options.  Use msp430_warn_mcu to control\n+\t-mhwmult and -mcpu options.  Use msp430_warn_mcu to control\n \twarning messages.  Generate warnings about conflicts between\n \t-mmcu and -mcpu and -mhwmult options.\n \tIf neither -mcpu nor -mmcu have been specified but -mhwmult=\n@@ -328,11 +326,11 @@\n \t* config/msp430/driver-msp430.c: New file.\n \t* config/msp430/msp430.opt (warn-mcu): New option.\n \t* doc/invoke.texi: Update description of -mhwmult=auto.\n-        Document -mwarn-mcu option.\n+\tDocument -mwarn-mcu option.\n \n 2015-12-04  Segher Boessenkool  <segher&kernel.crashing.org>\n \n-\t* (cstore<mode>4_signed): New expander.\n+\t* config/rs6000/rs6000.md (cstore<mode>4_signed): New expander.\n \t(cstore<mode>4): Call it.\n \n 2015-12-04  Jakub Jelinek  <jakub@redhat.com>\n@@ -513,7 +511,7 @@\n \t* doc/generic.texi (Blocks): Document new handling of VLAs.\n \n 2015-12-04  Eric Botcazou  <ebotcazou@adacore.com>\n-            Tristan Gingold  <gingold@adacore.com>\n+\t    Tristan Gingold  <gingold@adacore.com>\n \n \tPR middle-end/65958\n \t* config/aarch64/aarch64-protos.h (aarch64_output_probe_stack-range):\n@@ -710,8 +708,7 @@\n \t(nvptx_addr_space_from_sym): Delete.\n \t(nvptx_encode_section_info): New.\n \t(section_for_sym, section_for_decl): New.\n-\t(nvptx_maybe_convert_symbolic_operand): Get data area from symbol\n-\tflags,\n+\t(nvptx_maybe_convert_symbolic_operand): Get data area from symbol flags.\n \t(nvptx_section_from_addr_space): Delete.\n \t(nvptx_section_for_decl): Delete.\n \t(nvptx_output_aligned, nvptx_declare_object_name,\n@@ -804,8 +801,9 @@\n 2015-12-02  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n \n-\t* graphite-isl-ast-to-gimple.c (binary_op_to_tree): Handle isl_ast_op_zdiv_r.\n-        (gcc_expression_from_isl_expr_op): Same.\n+\t* graphite-isl-ast-to-gimple.c (binary_op_to_tree): Handle\n+\tisl_ast_op_zdiv_r.\n+\t(gcc_expression_from_isl_expr_op): Same.\n \n 2015-12-02  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n@@ -902,17 +900,16 @@\n \t* omp-low.c (install_var_field, scan_sharing_clauses): Add and handle\n \tparameter base_pointers_restrict.\n \t(omp_target_base_pointers_restrict_p): New function.\n-\t(scan_omp_target): Call scan_sharing_clauses with base_pointers_restrict\n-\targ.\n+\t(scan_omp_target): Call scan_sharing_clauses with\n+\tbase_pointers_restrict arg.\n \n 2015-12-02  Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/nvptx-protos.h (nvptx_output_mov_insn): Declare.\n \t(nvptx_underlying_object_mode): Delete.\n \t* config/nvptx/nvptx.c (nvptx_underlying_object_mode): Delete.\n \t(output_reg): New.\n-\t(nvptx_declare_function_name): Use output_reg.  Remove punning\n-\tbuffer.\n+\t(nvptx_declare_function_name): Use output_reg.  Remove punning buffer.\n \t(nvptx_output_mov_insn): New.\n \t(nvptx_print_operand): Separate SUBREG handling, remove 'f' case,\n \tUse output_reg. Merge 't' and 'u' handling.\n@@ -923,10 +920,10 @@\n \tUNSPEC_CPLX_HIGHPART): Delete.\n \t(*mov<mode>_insn [QHSDIM): Remove unnecessary constraints, use\n \tnvptx_output_mov_insn.\n-\t(*mov<mode>_insn [SDFM): Reorder constraints to match integer\n-\tmoc.  Use nvptx_output_mov_insn.\n-\t(highpartscsf2,  set_highpartscsf2, lowpartscsf2,\n-\tset_lowpartscsf2): Delete.\n+\t(*mov<mode>_insn [SDFM): Reorder constraints to match integer moc.\n+\tUse nvptx_output_mov_insn.\n+\t(highpartscsf2,  set_highpartscsf2, lowpartscsf2, set_lowpartscsf2):\n+\tDelete.\n \t(mov<mode> [SDCM]): Delete.\n \n 2015-12-02  Richard Biener  <rguenther@suse.de>\n@@ -1028,7 +1025,8 @@\n 2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/predicates.md (const_mask_operand): New predicate.\n-\t* config/s390/s390-builtins.def: Set a smaller bitmask for a few builtins.\n+\t* config/s390/s390-builtins.def: Set a smaller bitmask\n+\tfor a few builtins.\n \t* config/s390/vector.md: Change predicate from immediate_operand\n \tto either const_int_operand or const_mask_operand.  Add special\n \tinsn conditions on patterns which have to exclude certain values.\n@@ -1071,19 +1069,18 @@\n 2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/vector.md (\"*vec_splats<mode>\"): Fix constraint\n-\tlatter I->K.\n+\tletter I->K.\n \n 2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n-\t* config/s390/s390.md (\"bswap<mode>2\"): Add support for strv and\n-\tstrvg.\n+\t* config/s390/s390.md (\"bswap<mode>2\"): Add support for strv and strvg.\n \t(\"bswaphi2\"): New pattern.\n \tNew splitter for HI reg-reg bswap.\n \n 2015-11-27  Jiri Engelthaler  <engycz@gmail.com>\n \n \tPR driver/68029\n-\t* opts-common.c (prune_options): Don't ignore -fdiagnostics-color \n+\t* opts-common.c (prune_options): Don't ignore -fdiagnostics-color\n \tif it is the first parameter.\n \n 2015-12-01  Richard Sandiford  <richard.sandiford@arm.com>\n@@ -1140,8 +1137,7 @@\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \t    James Norris  <James_Norris@mentor.com>\n \n-\t* gimple-pretty-print.c (dump_gimple_omp_target): Add host_data\n-\tsupport.\n+\t* gimple-pretty-print.c (dump_gimple_omp_target): Add host_data support.\n \t* gimple.h (gf_mask): Add GF_OMP_TARGET_KIND_OACC_HOST_DATA.\n \t(is_gimple_omp_oacc): Add support for above.\n \t* gimplify.c (omp_region_type): Add ORT_ACC_HOST_DATA.\n@@ -1162,14 +1158,13 @@\n \t(lower_omp_target): Skip over outer host_data regions when looking\n \tup decls. Support use_device.\n \t(make_gimple_omp_edges): Support host_data.\n-\t* tree-nested.c (convert_nonlocal_omp_clauses): Add use_device\n-\tclause.\n+\t* tree-nested.c (convert_nonlocal_omp_clauses): Add use_device clause.\n \n 2015-12-01  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/68582\n-\t* cgraphunit.c (check_global_declaration): Only depend on TREE_THIS_VOLATILE\n-\tfor VAR_DECLs.\n+\t* cgraphunit.c (check_global_declaration): Only depend\n+\ton TREE_THIS_VOLATILE for VAR_DECLs.\n \n 2015-12-01  Richard Sandiford  <richard.sandiford@arm.com>\n \n@@ -1182,7 +1177,7 @@\n \tPR target/68617\n \t* config/arm/arm.opt (unaligned_access): Save.\n \t* config/arm/arm-c.c (__ARM_FEATURE_UNALIGNED): Conditionally define.\n-\t* config/arm/arm.c (arm_option_override): Move unaligned_access setting\n+\t* config/arm/arm.c (arm_option_override): Move unaligned_access setting.\n \t(arm_option_override_internal): ... here.\n \t* config/arm/arm.h (TARGET_32BIT_P): New macro.\n \n@@ -1352,13 +1347,11 @@\n 2015-11-30  Richard Biener  <rguenther@suse.de>\n \n \tPR c/68162\n-\t* dwarf2out.c (gen_type_die_with_usage): Keep variant types\n-\tof arrays.\n+\t* dwarf2out.c (gen_type_die_with_usage): Keep variant types of arrays.\n \n 2015-11-30  Venkataramanan Kumar  <Venkataramanan.Kumar@amd.com>\n \n-\t* tree-if-conv.c (struct ifc_dr): Add new tree\n-\tbase_predicate field.\n+\t* tree-if-conv.c (struct ifc_dr): Add new tree base_predicate field.\n \t(hash_memrefs_baserefs_and_store_DRs_read_written_info): Hash\n \tbase ref, DR pairs and store base_predicate for write type DRs.\n \t(ifcvt_memrefs_wont_trap): Guard checks with\n@@ -1388,8 +1381,8 @@\n \n 2015-11-29  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* ipa-devirt.c (add_type_duplicate): Remove redundant ODR violation\n-\tdump\n+\t* ipa-devirt.c (add_type_duplicate): Remove redundant\n+\tODR violation dump.\n \n 2015-11-29  David Edelsohn  <dje.gcc@gmail.com>\n \n@@ -1445,15 +1438,13 @@\n \tPR tree-optimization/68559\n \t* tree-vect-data-refs.c (vect_analyze_group_access_1): Move\n \tpeeling for gap checks ...\n-\t* tree-vect-stmts.c (vectorizable_load): ... here and relax\n-\tfor SLP.\n+\t* tree-vect-stmts.c (vectorizable_load): ... here and relax for SLP.\n \t* tree-vect-loop.c (vect_analyze_loop_2): Re-set\n \tLOOP_VINFO_PEELING_FOR_GAPS before re-trying without SLP.\n \n 2015-11-27  Nathan Sidwell  <nathan@acm.org>\n \n-\t* config/nvptx/nvptx-protos.h (nvptx_record_needed_decl): Don't\n-\tdeclare.\n+\t* config/nvptx/nvptx-protos.h (nvptx_record_needed_decl): Don't declare.\n \t* config/nvptx/nvptx.c (write_func_decl_from_insn): Move earlier.\n \t(nvptx_record_fndecl): Don't return value, remove force\n \targument. Require fndecl.\n@@ -1531,8 +1522,7 @@\n \n \t* ipa-devirt.c (ipa_devirt): Use auto_vec instead\n \tof a local-scope vec.\n-\t(struct final_warning_record): Use auto_vec instead\n-\tof vec.\n+\t(struct final_warning_record): Use auto_vec instead of vec.\n \n 2015-11-27  Richard Biener  <rguenther@suse.de>\n \n@@ -1712,7 +1702,7 @@\n \tbroken.\n \n 2015-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n-            Bernd Schmidt  <bschmidt@redhat.com>\n+\t    Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR rtl-optimization/67226\n \t* calls.c (store_one_arg): Take into account\n@@ -1816,7 +1806,7 @@\n \tTV_IPA_LTO_OUTPUT): New.\n \t* lto-compress.c: Include timevar.h\n \t(lto_end_compression, lto_end_uncompression): Add timers.\n-\t* langhooks.c: Include timevar.h\n+\t* langhooks.c: Include timevar.h.\n \t(lhd_append_data): Add timer.\n \n 2015-11-25  Jan Hubicka  <hubicka@ucw.cz>\n@@ -1834,8 +1824,7 @@\n \n \t* config/nvptx/nvptx.md (load_arg_reg<mode>): Arg number\n \tconstraint is 'n'.\n-\t* config/nvptx/nvptx.c (write_one_arg): Use 'i' directly as arg\n-\tnumber.\n+\t* config/nvptx/nvptx.c (write_one_arg): Use 'i' directly as arg number.\n \t(nvptx_write_function_decl): Number args from 0.\n \t(nvptx_declare_function_name): Likewise.\n \t(nvptx_function_incoming_arg): Likewise.\n@@ -2137,7 +2126,7 @@\n \t* tree-ssa-uncprop.c (val_ssa_equiv_hash_traits): Likewise.\n \n 2015-11-24  Richard Biener  <rguenther@suse.de>\n-            Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR middle-end/68375\n \t* cfgloop.c (get_loop_body_in_bfs_order): Restructure loop to avoid\n@@ -2161,7 +2150,7 @@\n \tare going to instrument it and it may copy pointers.\n \n 2015-11-24  Bernd Schmidt <bschmidt@redhat.com>\n-            Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR rtl-optimization/68194\n \tPR rtl-optimization/68328\n@@ -2193,11 +2182,13 @@\n \t    Sebastian Pop  <s.pop@samsung.com>\n \n \tPR tree-optimization/68314\n-\t* graphite-optimize-isl.c (optimize_isl): Do not call isl_union_map_is_equal.\n+\t* graphite-optimize-isl.c (optimize_isl): Do not call\n+\tisl_union_map_is_equal.\n \t* graphite-poly.c (new_scop): Remove original_schedule.\n \t(free_scop): Same.\n \t* graphite-poly.h (struct scop): Same.\n-\t* graphite-sese-to-poly.c (build_pbb_minimal_scattering_polyhedrons): Remove.\n+\t* graphite-sese-to-poly.c (build_pbb_minimal_scattering_polyhedrons):\n+\tRemove.\n \t(build_pbb_scattering_polyhedrons): Add back.\n \t(build_scop_minimal_scattering): Remove.\n \t(build_scop_scattering): Add back.\n@@ -2336,12 +2327,12 @@\n \n 2015-11-23  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n-        * config/s390/s390.h: Add new symref flags, _NOTALIGN2 etc.\n-        * config/s390/s390.c (s390_check_symref_alignment): Use new\n-        symref flags, early abort on wrong alignment\n-        (s390_secondary_reload): Use new symref flags.\n-        (s390_encode_section_info): Likewise.\n-        * config/s390/predicates.md: Likewise.\n+\t* config/s390/s390.h: Add new symref flags, _NOTALIGN2 etc.\n+\t* config/s390/s390.c (s390_check_symref_alignment): Use new\n+\tsymref flags, early abort on wrong alignment\n+\t(s390_secondary_reload): Use new symref flags.\n+\t(s390_encode_section_info): Likewise.\n+\t* config/s390/predicates.md: Likewise.\n \n 2015-11-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n "}, {"sha": "5e95e2aef35906afe269ee4d707d2c4ed8b9155e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d22292eb7d417781a0b4f447058258e9986f31a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d22292eb7d417781a0b4f447058258e9986f31a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d22292eb7d417781a0b4f447058258e9986f31a", "patch": "@@ -131,8 +131,7 @@\n \t* g++.dg/template/ref3.C: Add XFAIL (PR c++/68699).\n \t* g++.dg/ubsan/pr63956.C: Update dg directives to reflect\n \timproved location information.\n-\t* g++.dg/warn/pr35635.C (func3): Update location of a\n-\tdg-warning.\n+\t* g++.dg/warn/pr35635.C (func3): Update location of a dg-warning.\n \t* g++.dg/warn/Wconversion-real-integer2.C: Update location of\n \tdg-warning; add a dg-message.\n \t* obj-c++.dg/plugin/diagnostic-test-expressions-1.mm: New file,\n@@ -439,13 +438,12 @@\n \n 2015-12-02  David Sherwood  <david.sherwood@arm.com>\n \n-        * gcc.target/aarch64/fmaxmin.c: New test.\n+\t* gcc.target/aarch64/fmaxmin.c: New test.\n \n 2015-12-02  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* gfortran.dg/goacc/coarray.f95: XFAIL.\n-\t* gfortran.dg/goacc/coarray_2.f90: Adjust dg-excess-errors\n-\tdirective.\n+\t* gfortran.dg/goacc/coarray_2.f90: Adjust dg-excess-errors directive.\n \t* gfortran.dg/goacc/host_data-tree.f95: Remove dg-prune-output\n \tdirective.\n \n@@ -591,9 +589,11 @@\n \t* gcc.dg/vect/pr46032.c: here.  Add dg-require-effective-target\n \tvect_int.\n \t* gcc.dg/pr46032-2.c: Move to ...\n-\t* gcc.dg/gomp/pr46032-2.c: ... here.  Drop dg-require-effective-target fopenmp.\n+\t* gcc.dg/gomp/pr46032-2.c: ... here.\n+\tDrop dg-require-effective-target fopenmp.\n \t* gcc.dg/pr46032-3.c: Move to ...\n-\t* gcc.dg/gomp/pr46032-3.c: ... here.  Drop dg-require-effective-target fopenmp.\n+\t* gcc.dg/gomp/pr46032-3.c: ... here.\n+\tDrop dg-require-effective-target fopenmp.\n \n 2015-12-01  Cesar Philippidis  <cesar@codesourcery.com>\n \n@@ -1366,8 +1366,8 @@\n \n 2015-11-23  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n-        * gcc.target/s390/load-relative-check.c: New test to check\n-        generation of load relative instructions.\n+\t* gcc.target/s390/load-relative-check.c: New test to check\n+\tgeneration of load relative instructions.\n \n 2015-11-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n "}]}