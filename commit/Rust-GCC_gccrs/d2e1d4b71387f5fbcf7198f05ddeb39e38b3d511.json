{"sha": "d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJlMWQ0YjcxMzg3ZjVmYmNmNzE5OGYwNWRkZWIzOWUzOGIzZDUxMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-01-10T17:30:20Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-01-10T17:30:20Z"}, "message": "PR77528 add default constructors for container adaptors\n\n\tPR libstdc++/77528\n\t* include/bits/stl_queue.h (queue::c): Add default member initializer.\n\t(queue::queue()): Add constructor and define as defaulted.\n\t(queue::queue(_Sequence&&)): Remove default argument.\n\t(priority_queue::c, priority_queue::comp): Add default member\n\tinitializers.\n\t(priority_queue::priority_queue()): Add constructor and define as\n\tdefaulted.\n\t(priority_queue::priority_queue(const _Compare&, _Sequence&&)):\n\tRemove default argument for first parameter.\n\t* include/bits/stl_stack.h (stack::c): Add default member initializer.\n\t(stack::stack()): Add constructor and define as defaulted.\n\t(stack::stack(const _Sequence&)): Remove default argument.\n\t* testsuite/23_containers/priority_queue/requirements/\n\texplicit_instantiation/1.cc: Test explicit instantiation with\n\tnon-DefaultConstructible sequence.\n\t* testsuite/23_containers/priority_queue/77528.cc: New test.\n\t* testsuite/23_containers/priority_queue/requirements/\n\texplicit_instantiation/1_c++0x.cc: Replace with 1_c++98.cc.\n\t* testsuite/23_containers/queue/77528.cc: New test.\n\t* testsuite/23_containers/queue/requirements/explicit_instantiation/\n\t1.cc: Test explicit instantiation with non-DefaultConstructible\n\tsequence.\n\t* testsuite/23_containers/queue/requirements/explicit_instantiation/\n\t1_c++0x.cc: Replace with 1_c++98.cc.\n\t* testsuite/23_containers/stack/77528.cc: New test.\n\t* testsuite/23_containers/stack/requirements/explicit_instantiation/\n\t1.cc: Test explicit instantiation with non-DefaultConstructible\n\tsequence.\n\t* testsuite/23_containers/stack/requirements/explicit_instantiation/\n\t1_c++0x.cc: Replace with 1_c++98.cc.\n\nFrom-SVN: r244278", "tree": {"sha": "eec6350cf193eac941b657624a89f5b22b96b405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eec6350cf193eac941b657624a89f5b22b96b405"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "034afd02315485c0b548f6d5da2709057fb494cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/034afd02315485c0b548f6d5da2709057fb494cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/034afd02315485c0b548f6d5da2709057fb494cb"}], "stats": {"total": 233, "additions": 221, "deletions": 12}, "files": [{"sha": "da1bfe65db9172b63d41ca50897233d918f23fc9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -1,3 +1,37 @@\n+2017-01-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/77528\n+\t* include/bits/stl_queue.h (queue::c): Add default member initializer.\n+\t(queue::queue()): Add constructor and define as defaulted.\n+\t(queue::queue(_Sequence&&)): Remove default argument.\n+\t(priority_queue::c, priority_queue::comp): Add default member\n+\tinitializers.\n+\t(priority_queue::priority_queue()): Add constructor and define as\n+\tdefaulted.\n+\t(priority_queue::priority_queue(const _Compare&, _Sequence&&)):\n+\tRemove default argument for first parameter.\n+\t* include/bits/stl_stack.h (stack::c): Add default member initializer.\n+\t(stack::stack()): Add constructor and define as defaulted.\n+\t(stack::stack(const _Sequence&)): Remove default argument.\n+\t* testsuite/23_containers/priority_queue/requirements/\n+\texplicit_instantiation/1.cc: Test explicit instantiation with\n+\tnon-DefaultConstructible sequence.\n+\t* testsuite/23_containers/priority_queue/77528.cc: New test.\n+\t* testsuite/23_containers/priority_queue/requirements/\n+\texplicit_instantiation/1_c++0x.cc: Replace with 1_c++98.cc.\n+\t* testsuite/23_containers/queue/77528.cc: New test.\n+\t* testsuite/23_containers/queue/requirements/explicit_instantiation/\n+\t1.cc: Test explicit instantiation with non-DefaultConstructible\n+\tsequence.\n+\t* testsuite/23_containers/queue/requirements/explicit_instantiation/\n+\t1_c++0x.cc: Replace with 1_c++98.cc.\n+\t* testsuite/23_containers/stack/77528.cc: New test.\n+\t* testsuite/23_containers/stack/requirements/explicit_instantiation/\n+\t1.cc: Test explicit instantiation with non-DefaultConstructible\n+\tsequence.\n+\t* testsuite/23_containers/stack/requirements/explicit_instantiation/\n+\t1_c++0x.cc: Replace with 1_c++98.cc.\n+\n 2017-01-10  Felipe Magno de Almeida <felipe@expertisesolutions.com.br>\n \n \t* include/bits/locale_facets_nonio.tcc"}, {"sha": "6417b3067f6ca5c4ee79dcce19301d00443c1be0", "filename": "libstdc++-v3/include/bits/stl_queue.h", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -124,15 +124,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef          _Sequence                            container_type;\n \n     protected:\n-      /**\n-       *  'c' is the underlying container.  Maintainers wondering why\n-       *  this isn't uglified as per style guidelines should note that\n-       *  this name is specified in the standard, [23.2.3.1].  (Why?\n-       *  Presumably for the same reason that it's protected instead\n+      /*  Maintainers wondering why this isn't uglified as per style\n+       *  guidelines should note that this name is specified in the standard,\n+       *  C++98 [23.2.3.1].\n+       *  (Why? Presumably for the same reason that it's protected instead\n        *  of private: to allow derivation.  But none of the other\n        *  containers allow for derivation.  Odd.)\n        */\n+      /// @c c is the underlying container.\n+#if __cplusplus >= 201103L\n+      _Sequence c{};\n+#else\n       _Sequence c;\n+#endif\n \n     public:\n       /**\n@@ -143,12 +147,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       queue(const _Sequence& __c = _Sequence())\n       : c(__c) { }\n #else\n+      queue() = default;\n+\n       explicit\n       queue(const _Sequence& __c)\n       : c(__c) { }\n \n       explicit\n-      queue(_Sequence&& __c = _Sequence())\n+      queue(_Sequence&& __c)\n       : c(std::move(__c)) { }\n \n       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>\n@@ -440,8 +446,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     protected:\n       //  See queue::c for notes on these names.\n-      _Sequence  c;\n+#if __cplusplus >= 201103L\n+      _Sequence c{};\n+      _Compare   comp{};\n+#else\n+      _Sequence c;\n       _Compare   comp;\n+#endif\n \n     public:\n       /**\n@@ -454,14 +465,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       : c(__s), comp(__x)\n       { std::make_heap(c.begin(), c.end(), comp); }\n #else\n+      priority_queue() = default;\n+\n       explicit\n       priority_queue(const _Compare& __x,\n \t\t     const _Sequence& __s)\n       : c(__s), comp(__x)\n       { std::make_heap(c.begin(), c.end(), comp); }\n \n       explicit\n-      priority_queue(const _Compare& __x = _Compare(),\n+      priority_queue(const _Compare& __x,\n \t\t     _Sequence&& __s = _Sequence())\n       : c(std::move(__s)), comp(__x)\n       { std::make_heap(c.begin(), c.end(), comp); }"}, {"sha": "a0f9ee520dccfc0c8fd36e0643515a891f307ad1", "filename": "libstdc++-v3/include/bits/stl_stack.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -129,7 +129,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     protected:\n       //  See queue::c for notes on this name.\n+#if __cplusplus >= 201103L\n+      _Sequence c{};\n+#else\n       _Sequence c;\n+#endif\n \n     public:\n       // XXX removed old def ctor, added def arg to this one to match 14882\n@@ -141,12 +145,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       stack(const _Sequence& __c = _Sequence())\n       : c(__c) { }\n #else\n+      stack() = default;\n+\n       explicit\n       stack(const _Sequence& __c)\n       : c(__c) { }\n \n       explicit\n-      stack(_Sequence&& __c = _Sequence())\n+      stack(_Sequence&& __c)\n       : c(std::move(__c)) { }\n \n       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>"}, {"sha": "0f953bcc976c203c7547981d091f209bf535b988", "filename": "libstdc++-v3/testsuite/23_containers/priority_queue/77528.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2F77528.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2F77528.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2F77528.cc?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 } }\n+\n+#include <queue>\n+\n+struct NoCopying : std::vector<int>\n+{\n+  NoCopying() = default;\n+  NoCopying(const NoCopying& x) : std::vector<int>(x)\n+  { throw std::bad_alloc(); }\n+};\n+\n+void\n+test01()\n+{\n+  std::priority_queue<int, NoCopying> q;\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "77cade0c0f65e1fb3549279a780c1be866b4df14", "filename": "libstdc++-v3/testsuite/23_containers/priority_queue/requirements/explicit_instantiation/1.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Frequirements%2Fexplicit_instantiation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Frequirements%2Fexplicit_instantiation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Frequirements%2Fexplicit_instantiation%2F1.cc?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -23,3 +23,11 @@\n #include <queue>\n \n template class std::priority_queue<int>;\n+\n+struct NonDefaultConstructible : std::vector<int> {\n+  NonDefaultConstructible(int) { }\n+};\n+struct Cmp : std::less<int> {\n+  Cmp(int) { }\n+};\n+template class std::priority_queue<int, NonDefaultConstructible>;"}, {"sha": "0b5b28763d9ca0f08f210661fef261c366d61ba0", "filename": "libstdc++-v3/testsuite/23_containers/priority_queue/requirements/explicit_instantiation/1_c++98.cc", "status": "renamed", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Frequirements%2Fexplicit_instantiation%2F1_c%2B%2B98.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Frequirements%2Fexplicit_instantiation%2F1_c%2B%2B98.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Frequirements%2Fexplicit_instantiation%2F1_c%2B%2B98.cc?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do compile { target c++11 } }\n+// { dg-options \"-std=gnu++98\" }\n+// { dg-do compile }\n \n // Copyright (C) 2009-2017 Free Software Foundation, Inc.\n //\n@@ -22,3 +23,11 @@\n #include <queue>\n \n template class std::priority_queue<int>;\n+\n+struct NonDefaultConstructible : std::vector<int> {\n+  NonDefaultConstructible(int) { }\n+};\n+struct Cmp : std::less<int> {\n+  Cmp(int) { }\n+};\n+template class std::priority_queue<int, NonDefaultConstructible, Cmp>;", "previous_filename": "libstdc++-v3/testsuite/23_containers/priority_queue/requirements/explicit_instantiation/1_c++0x.cc"}, {"sha": "dff6d6dbaef7a521899c5ce8939d01f3d27f1903", "filename": "libstdc++-v3/testsuite/23_containers/queue/77528.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2F77528.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2F77528.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2F77528.cc?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 } }\n+\n+#include <queue>\n+\n+struct NoCopying : std::deque<int>\n+{\n+  NoCopying() = default;\n+  NoCopying(const NoCopying& x) : std::deque<int>(x)\n+  { throw std::bad_alloc(); }\n+};\n+\n+void\n+test01()\n+{\n+  std::queue<int, NoCopying> q;\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "503736557e54357c26d092354226f7a4664ddbb9", "filename": "libstdc++-v3/testsuite/23_containers/queue/requirements/explicit_instantiation/1.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Frequirements%2Fexplicit_instantiation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Frequirements%2Fexplicit_instantiation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Frequirements%2Fexplicit_instantiation%2F1.cc?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -23,3 +23,8 @@\n #include <queue>\n \n template class std::queue<int>;\n+\n+struct NonDefaultConstructible : std::deque<int> {\n+  NonDefaultConstructible(int) { }\n+};\n+template class std::queue<int, NonDefaultConstructible>;"}, {"sha": "4590220af2be4b5264f1c6f4363917a9790b7c8f", "filename": "libstdc++-v3/testsuite/23_containers/queue/requirements/explicit_instantiation/1_c++98.cc", "status": "renamed", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Frequirements%2Fexplicit_instantiation%2F1_c%2B%2B98.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Frequirements%2Fexplicit_instantiation%2F1_c%2B%2B98.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Frequirements%2Fexplicit_instantiation%2F1_c%2B%2B98.cc?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do compile { target c++11 } }\n+// { dg-options \"-std=gnu++98\" }\n+// { dg-do compile }\n \n // Copyright (C) 2009-2017 Free Software Foundation, Inc.\n //\n@@ -22,3 +23,8 @@\n #include <queue>\n \n template class std::queue<int>;\n+\n+struct NonDefaultConstructible : std::deque<int> {\n+  NonDefaultConstructible(int) { }\n+};\n+template class std::queue<int, NonDefaultConstructible>;", "previous_filename": "libstdc++-v3/testsuite/23_containers/queue/requirements/explicit_instantiation/1_c++0x.cc"}, {"sha": "dfc3a2adf2ad470da55e9023d41110571e87e6b2", "filename": "libstdc++-v3/testsuite/23_containers/stack/77528.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2F77528.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2F77528.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2F77528.cc?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 } }\n+\n+#include <stack>\n+\n+struct NoCopying : std::deque<int>\n+{\n+  NoCopying() = default;\n+  NoCopying(const NoCopying& x) : std::deque<int>(x)\n+  { throw std::bad_alloc(); }\n+};\n+\n+void\n+test01()\n+{\n+  std::stack<int, NoCopying> s;\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "b93286df1526edf5713462190b68adb57f868f93", "filename": "libstdc++-v3/testsuite/23_containers/stack/requirements/explicit_instantiation/1.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Frequirements%2Fexplicit_instantiation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Frequirements%2Fexplicit_instantiation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Frequirements%2Fexplicit_instantiation%2F1.cc?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -23,3 +23,8 @@\n #include <stack>\n \n template class std::stack<int>;\n+\n+struct NonDefaultConstructible : std::deque<int> {\n+  NonDefaultConstructible(int) { }\n+};\n+template class std::stack<int, NonDefaultConstructible>;"}, {"sha": "394d223f1810a682fc0bd2569bd1eb1743ba3947", "filename": "libstdc++-v3/testsuite/23_containers/stack/requirements/explicit_instantiation/1_c++98.cc", "status": "renamed", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Frequirements%2Fexplicit_instantiation%2F1_c%2B%2B98.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Frequirements%2Fexplicit_instantiation%2F1_c%2B%2B98.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Frequirements%2Fexplicit_instantiation%2F1_c%2B%2B98.cc?ref=d2e1d4b71387f5fbcf7198f05ddeb39e38b3d511", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do compile { target c++11 } }\n+// { dg-options \"-std=gnu++98\" }\n+// { dg-do compile }\n \n // Copyright (C) 2009-2017 Free Software Foundation, Inc.\n //\n@@ -22,3 +23,8 @@\n #include <stack>\n \n template class std::stack<int>;\n+\n+struct NonDefaultConstructible : std::deque<int> {\n+  NonDefaultConstructible(int) { }\n+};\n+template class std::stack<int, NonDefaultConstructible>;", "previous_filename": "libstdc++-v3/testsuite/23_containers/stack/requirements/explicit_instantiation/1_c++0x.cc"}]}