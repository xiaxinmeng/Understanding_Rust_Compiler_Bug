{"sha": "77fec971c15551081d6eccb41275dd1c4e10e73c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdmZWM5NzFjMTU1NTEwODFkNmVjY2I0MTI3NWRkMWM0ZTEwZTczYw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-12-12T14:31:18Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-12-12T14:31:18Z"}, "message": "re PR rtl-optimization/13037 ([gcse-lm] g77 generates incorrect code)\n\n\n\tPR optimization/13037\n\t* loop.c (update_giv_derive): Ignore redundant sets of a biv when\n\tcalculating how to derive a giv from a biv.\n\n\t* g77.f-torture/execute/13037.f: New test case.\n\nFrom-SVN: r74572", "tree": {"sha": "a1a513e215c058b87308a64dad0cf5d62797e70d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1a513e215c058b87308a64dad0cf5d62797e70d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77fec971c15551081d6eccb41275dd1c4e10e73c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77fec971c15551081d6eccb41275dd1c4e10e73c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77fec971c15551081d6eccb41275dd1c4e10e73c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77fec971c15551081d6eccb41275dd1c4e10e73c/comments", "author": null, "committer": null, "parents": [{"sha": "90d46c28f20ebc52d770c179d39bb429a0a6f55a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d46c28f20ebc52d770c179d39bb429a0a6f55a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d46c28f20ebc52d770c179d39bb429a0a6f55a"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "56fb00f4ad6ed0ddd6968213c045c1003c1c773d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77fec971c15551081d6eccb41275dd1c4e10e73c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77fec971c15551081d6eccb41275dd1c4e10e73c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77fec971c15551081d6eccb41275dd1c4e10e73c", "patch": "@@ -1,3 +1,9 @@\n+2003-12-12  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR optimization/13037\n+\t* loop.c (update_giv_derive): Ignore redundant sets of a biv when\n+\tcalculating how to derive a giv from a biv.\n+\n 2003-12-12  Neil Booth  <neil@daikokuya.co.uk>\n \n \tPR preprocessor/12935 preprocessor/12952 preprocessor/13046"}, {"sha": "8deb398b912400dcd426867d8778a9be78b8bdd0", "filename": "gcc/loop.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77fec971c15551081d6eccb41275dd1c4e10e73c/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77fec971c15551081d6eccb41275dd1c4e10e73c/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=77fec971c15551081d6eccb41275dd1c4e10e73c", "patch": "@@ -6095,6 +6095,10 @@ update_giv_derive (const struct loop *loop, rtx p)\n       if (GET_CODE (p) == CODE_LABEL || GET_CODE (p) == JUMP_INSN\n \t  || biv->insn == p)\n \t{\n+\t  /* Skip if location is the same as a previous one.  */\n+\t  if (biv->same)\n+\t    continue;\n+\n \t  for (giv = bl->giv; giv; giv = giv->next_iv)\n \t    {\n \t      /* If cant_derive is already true, there is no point in"}, {"sha": "f206b5048bbfec86686a88968337e21e2c42d4bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77fec971c15551081d6eccb41275dd1c4e10e73c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77fec971c15551081d6eccb41275dd1c4e10e73c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=77fec971c15551081d6eccb41275dd1c4e10e73c", "patch": "@@ -1,3 +1,8 @@\n+2003-12-12  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR optimization/13037\n+\t* g77.f-torture/execute/13037.f: New test case.\n+\n 2003-12-12  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/12881"}, {"sha": "daafc52875428089c94f1eb1065edec2ed9b5c99", "filename": "gcc/testsuite/g77.f-torture/execute/13037.f", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77fec971c15551081d6eccb41275dd1c4e10e73c/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F13037.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77fec971c15551081d6eccb41275dd1c4e10e73c/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F13037.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F13037.f?ref=77fec971c15551081d6eccb41275dd1c4e10e73c", "patch": "@@ -0,0 +1,58 @@\n+c      PR optimization/13037\n+c      Contributed by Kirill Smelkov\n+c      bug symptom: zeta(kkzc) seems to reference to zeta(kkzc-1) instead\n+c      with gcc-3.2.2 it is OK, so it is a regression.\n+c\n+      subroutine bug1(expnt)\n+      implicit none\n+\n+      double precision zeta\n+      common /bug1_area/zeta(3)\n+\n+      double precision expnt(3)\n+\n+\n+      integer k, kkzc\n+\n+      kkzc=0\n+      do k=1,3\n+         kkzc = kkzc + 1\n+         zeta(kkzc) = expnt(k)\n+      enddo\n+\n+c     the following line activates the bug\n+      call bug1_activator(kkzc)\n+      end\n+\n+\n+c     dummy subroutine\n+      subroutine bug1_activator(inum)\n+      implicit none\n+      integer inum\n+      end\n+\n+\n+c     test driver\n+      program test_bug1\n+      implicit none\n+\n+      double precision zeta\n+      common /bug1_area/zeta(3)\n+\n+      double precision expnt(3)\n+\n+      zeta(1) = 0.0d0\n+      zeta(2) = 0.0d0\n+      zeta(3) = 0.0d0\n+\n+      expnt(1) = 1.0d0\n+      expnt(2) = 2.0d0\n+      expnt(3) = 3.0d0\n+\n+      call bug1(expnt)\n+      if ((zeta(1).ne.1) .or. (zeta(2).ne.2) .or. (zeta(3).ne.3)) then\n+        call abort\n+      endif\n+\n+      end\n+"}]}