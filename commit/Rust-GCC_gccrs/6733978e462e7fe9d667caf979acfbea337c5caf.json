{"sha": "6733978e462e7fe9d667caf979acfbea337c5caf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjczMzk3OGU0NjJlN2ZlOWQ2NjdjYWY5NzlhY2ZiZWEzMzdjNWNhZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-11-02T20:00:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-11-02T20:00:05Z"}, "message": "arc.c: Include rtl-iter.h.\n\ngcc/\n\t* config/arc/arc.c: Include rtl-iter.h.\n\t(arc_rewrite_small_data_1): Delete.\n\t(arc_rewrite_small_data): Use FOR_EACH_SUBRTX_PTR.\n\nFrom-SVN: r217016", "tree": {"sha": "90618cd332c7d2a8ec62652f931089c1bf396829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90618cd332c7d2a8ec62652f931089c1bf396829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6733978e462e7fe9d667caf979acfbea337c5caf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6733978e462e7fe9d667caf979acfbea337c5caf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6733978e462e7fe9d667caf979acfbea337c5caf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6733978e462e7fe9d667caf979acfbea337c5caf/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "100a518033c276092119c9a68baf63911402873c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100a518033c276092119c9a68baf63911402873c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/100a518033c276092119c9a68baf63911402873c"}], "stats": {"total": 65, "additions": 32, "deletions": 33}, "files": [{"sha": "18b1e107039dbc1400ae6cf6cb1934b8036e39f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6733978e462e7fe9d667caf979acfbea337c5caf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6733978e462e7fe9d667caf979acfbea337c5caf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6733978e462e7fe9d667caf979acfbea337c5caf", "patch": "@@ -1,3 +1,9 @@\n+2014-11-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/arc/arc.c: Include rtl-iter.h.\n+\t(arc_rewrite_small_data_1): Delete.\n+\t(arc_rewrite_small_data): Use FOR_EACH_SUBRTX_PTR.\n+\n 2014-11-02  Michael Collison  <michael.collison@linaro.org>\n \n \t* config/arm/arm.h (CLZ_DEFINED_VALUE_AT_ZERO) : Update"}, {"sha": "1bc903b3a2ab6967620452000bba2b11d5b04921", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 26, "deletions": 33, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6733978e462e7fe9d667caf979acfbea337c5caf/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6733978e462e7fe9d667caf979acfbea337c5caf/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=6733978e462e7fe9d667caf979acfbea337c5caf", "patch": "@@ -81,6 +81,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"pass_manager.h\"\n #include \"wide-int.h\"\n #include \"builtins.h\"\n+#include \"rtl-iter.h\"\n \n /* Which cpu we're compiling for (A5, ARC600, ARC601, ARC700).  */\n static const char *arc_cpu_string = \"\";\n@@ -6369,46 +6370,38 @@ arc_rewrite_small_data_p (rtx x)\n \t  && SYMBOL_REF_SMALL_P(x));\n }\n \n-/* A for_each_rtx callback, used by arc_rewrite_small_data.  */\n-\n-static int\n-arc_rewrite_small_data_1 (rtx *loc, void *data)\n-{\n-  if (arc_rewrite_small_data_p (*loc))\n-    {\n-      rtx top;\n-\n-      gcc_assert (SDATA_BASE_REGNUM == PIC_OFFSET_TABLE_REGNUM);\n-      *loc = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, *loc);\n-      if (loc == data)\n-\treturn -1;\n-      top = *(rtx*) data;\n-      if (GET_CODE (top) == MEM && &XEXP (top, 0) == loc)\n-\t; /* OK.  */\n-      else if (GET_CODE (top) == MEM\n-\t  && GET_CODE (XEXP (top, 0)) == PLUS\n-\t  && GET_CODE (XEXP (XEXP (top, 0), 0)) == MULT)\n-\t*loc = force_reg (Pmode, *loc);\n-      else\n-\tgcc_unreachable ();\n-      return -1;\n-    }\n-\n-  if (GET_CODE (*loc) == PLUS\n-      && rtx_equal_p (XEXP (*loc, 0), pic_offset_table_rtx))\n-    return -1;\n-\n-  return 0;\n-}\n-\n /* If possible, rewrite OP so that it refers to small data using\n    explicit relocations.  */\n \n rtx\n arc_rewrite_small_data (rtx op)\n {\n   op = copy_insn (op);\n-  for_each_rtx (&op, arc_rewrite_small_data_1, &op);\n+  subrtx_ptr_iterator::array_type array;\n+  FOR_EACH_SUBRTX_PTR (iter, array, &op, ALL)\n+    {\n+      rtx *loc = *iter;\n+      if (arc_rewrite_small_data_p (*loc))\n+\t{\n+\t  gcc_assert (SDATA_BASE_REGNUM == PIC_OFFSET_TABLE_REGNUM);\n+\t  *loc = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, *loc);\n+\t  if (loc != &op)\n+\t    {\n+\t      if (GET_CODE (op) == MEM && &XEXP (op, 0) == loc)\n+\t\t; /* OK.  */\n+\t      else if (GET_CODE (op) == MEM\n+\t\t       && GET_CODE (XEXP (op, 0)) == PLUS\n+\t\t       && GET_CODE (XEXP (XEXP (op, 0), 0)) == MULT)\n+\t\t*loc = force_reg (Pmode, *loc);\n+\t      else\n+\t\tgcc_unreachable ();\n+\t    }\n+\t  iter.skip_subrtxes ();\n+\t}\n+      else if (GET_CODE (*loc) == PLUS\n+\t       && rtx_equal_p (XEXP (*loc, 0), pic_offset_table_rtx))\n+\titer.skip_subrtxes ();\n+    }\n   return op;\n }\n "}]}