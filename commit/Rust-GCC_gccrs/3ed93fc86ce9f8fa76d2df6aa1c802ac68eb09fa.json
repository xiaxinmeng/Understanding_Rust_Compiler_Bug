{"sha": "3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VkOTNmYzg2Y2U5ZjhmYTc2ZDJkZjZhYTFjODAyYWM2OGViMDlmYQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2017-07-06T15:04:30Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2017-07-06T15:04:30Z"}, "message": "gcc.c (spec_undefvar_allowed): New global.\n\n2017-07-06  Olivier Hainque  <hainque@adacore.com>\n\n        * gcc.c (spec_undefvar_allowed): New global.\n        (process_command): Set to true when running for --version or --help\n        alone, or together.\n        (getenv_spec_function): When the variable is not defined, use the\n        variable name as the variable value if we're allowed not to issue\n        a fatal error.\n\nFrom-SVN: r250027", "tree": {"sha": "6dca68ce74e72cdcddf89229b41b3db16edeecf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dca68ce74e72cdcddf89229b41b3db16edeecf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c69f704cb42cadfb7055703d021af3b4f446bf59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c69f704cb42cadfb7055703d021af3b4f446bf59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c69f704cb42cadfb7055703d021af3b4f446bf59"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "9d4b01ff98106ec75179844e05e52e8c54972719", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa", "patch": "@@ -1,3 +1,12 @@\n+2017-07-06  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gcc.c (spec_undefvar_allowed): New global.\n+\t(process_command): Set to true when running for --version or --help\n+\talone, or together.\n+\t(getenv_spec_function): When the variable is not defined, use the\n+\tvariable name as the variable value if we're allowed not to issue\n+\ta fatal error.\n+\n 2017-07-06  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* auto-profile.c (afdo_set_bb_count, afdo_propagate_edge,"}, {"sha": "e8e3d6687c352f522350d63032df585e679059bd", "filename": "gcc/gcc.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=3ed93fc86ce9f8fa76d2df6aa1c802ac68eb09fa", "patch": "@@ -4615,23 +4615,23 @@ process_command (unsigned int decoded_options_count,\n \n   /* Decide if undefined variable references are allowed in specs.  */\n \n-  /* --version and --help alone or together are safe.  Note that -v would\n-     make them unsafe, as they'd then be run for subprocesses as well, the\n-     location of which might depend on variables possibly coming from\n-     self-specs.\n+  /* -v alone is safe. --version and --help alone or together are safe.  Note\n+     that -v would make them unsafe, as they'd then be run for subprocesses as\n+     well, the location of which might depend on variables possibly coming\n+     from self-specs.  Note also that the command name is counted in\n+     decoded_options_count.  */\n \n-     Count the number of options we have for which undefined variables\n-     are harmless for sure, and check that nothing else is set.  */\n-\n-  unsigned n_varsafe_options = 0;\n+  unsigned help_version_count = 0;\n \n   if (print_version)\n-    n_varsafe_options++;\n-  \n+    help_version_count++;\n+\n   if (print_help_list)\n-    n_varsafe_options++;\n-  \n-  spec_undefvar_allowed = (n_varsafe_options == decoded_options_count - 1);\n+    help_version_count++;\n+\n+  spec_undefvar_allowed =\n+    ((verbose_flag && decoded_options_count == 2)\n+     || help_version_count == decoded_options_count - 1);\n \n   alloc_switch ();\n   switches[n_switches].part1 = 0;"}]}