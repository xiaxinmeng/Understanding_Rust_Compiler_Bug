{"sha": "fa9784263f4e37528e0acb57019488a735221b7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5Nzg0MjYzZjRlMzc1MjhlMGFjYjU3MDE5NDg4YTczNTIyMWI3Zg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2004-07-03T16:59:38Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2004-07-03T16:59:38Z"}, "message": "ia64.md: Define new attribute \"empty\".\n\n\t* config/ia64/ia64.md: Define new attribute \"empty\".\n\t(prologue_use, nop_x, insn_group_barrier): Set it.\n\n\t* config/ia64/ia64.c (ia64_reorg): When looking for trailing call\n\tskip over \"empty\" insns.\n\nFrom-SVN: r84059", "tree": {"sha": "a33813b972267f6ebca6c44e595184df05f283f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a33813b972267f6ebca6c44e595184df05f283f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa9784263f4e37528e0acb57019488a735221b7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9784263f4e37528e0acb57019488a735221b7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9784263f4e37528e0acb57019488a735221b7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9784263f4e37528e0acb57019488a735221b7f/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83e113ae503cf6b7caad741c80ba1eabef8aa2f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e113ae503cf6b7caad741c80ba1eabef8aa2f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83e113ae503cf6b7caad741c80ba1eabef8aa2f8"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "5ecb9a485871f3ecf85e0d40af4a552c6695048e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9784263f4e37528e0acb57019488a735221b7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9784263f4e37528e0acb57019488a735221b7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa9784263f4e37528e0acb57019488a735221b7f", "patch": "@@ -1,3 +1,11 @@\n+2004-07-03  Andreas Schwab  <schwab@suse.de>\n+\n+\t* config/ia64/ia64.md: Define new attribute \"empty\".\n+\t(prologue_use, nop_x, insn_group_barrier): Set it.\n+\n+\t* config/ia64/ia64.c (ia64_reorg): When looking for trailing call\n+\tskip over \"empty\" insns.\n+\n 2004-07-03  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* tree-inline.c (initialize_inlined_parameters): Pass proper function"}, {"sha": "e631e87cdda00b4b8eed5f38349b12163935577e", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9784263f4e37528e0acb57019488a735221b7f/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9784263f4e37528e0acb57019488a735221b7f/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=fa9784263f4e37528e0acb57019488a735221b7f", "patch": "@@ -7666,11 +7666,12 @@ ia64_reorg (void)\n       insn = get_last_insn ();\n       if (! INSN_P (insn))\n         insn = prev_active_insn (insn);\n-      if (GET_CODE (insn) == INSN\n-\t  && GET_CODE (PATTERN (insn)) == UNSPEC_VOLATILE\n-\t  && XINT (PATTERN (insn), 1) == UNSPECV_INSN_GROUP_BARRIER)\n-\t{\n-\t  saw_stop = 1;\n+      /* Skip over insns that expand to nothing.  */\n+      while (GET_CODE (insn) == INSN && get_attr_empty (insn) == EMPTY_YES)\n+        {\n+\t  if (GET_CODE (PATTERN (insn)) == UNSPEC_VOLATILE\n+\t      && XINT (PATTERN (insn), 1) == UNSPECV_INSN_GROUP_BARRIER)\n+\t    saw_stop = 1;\n \t  insn = prev_active_insn (insn);\n \t}\n       if (GET_CODE (insn) == CALL_INSN)"}, {"sha": "b185bc820590b0ab192e06189e0292c6bee92915", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9784263f4e37528e0acb57019488a735221b7f/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9784263f4e37528e0acb57019488a735221b7f/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=fa9784263f4e37528e0acb57019488a735221b7f", "patch": "@@ -154,6 +154,10 @@\n \n (define_attr \"predicable\" \"no,yes\" (const_string \"yes\"))\n \n+;; Empty.  True iff this insn does not generate any code.\n+\n+(define_attr \"empty\" \"no,yes\" (const_string \"no\"))\n+\n \f\n \n ;; DFA descriptions of ia64 processors used for insn scheduling and\n@@ -5425,7 +5429,8 @@\n   \"\"\n   \"\"\n   [(set_attr \"itanium_class\" \"ignore\")\n-   (set_attr \"predicable\" \"no\")])\n+   (set_attr \"predicable\" \"no\")\n+   (set_attr \"empty\" \"yes\")])\n \n ;; Allocate a new register frame.\n \n@@ -5592,7 +5597,8 @@\n   [(const_int 5)]\n   \"\"\n   \"\"\n-  [(set_attr \"itanium_class\" \"nop_x\")])\n+  [(set_attr \"itanium_class\" \"nop_x\")\n+   (set_attr \"empty\" \"yes\")])\n \n ;; The following insn will be never generated.  It is used only by\n ;; insn scheduler to change state before advancing cycle.\n@@ -5624,7 +5630,8 @@\n   \"\"\n   \";;\"\n   [(set_attr \"itanium_class\" \"stop_bit\")\n-   (set_attr \"predicable\" \"no\")])\n+   (set_attr \"predicable\" \"no\")\n+   (set_attr \"empty\" \"yes\")])\n \n (define_expand \"trap\"\n   [(trap_if (const_int 1) (const_int 0))]"}]}