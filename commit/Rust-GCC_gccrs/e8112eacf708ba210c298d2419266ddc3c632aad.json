{"sha": "e8112eacf708ba210c298d2419266ddc3c632aad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgxMTJlYWNmNzA4YmEyMTBjMjk4ZDI0MTkyNjZkZGMzYzYzMmFhZA==", "commit": {"author": {"name": "Zak Kipling", "email": "zak@transversal.com", "date": "2004-11-13T23:09:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-11-13T23:09:08Z"}, "message": "re PR target/18300 (Infinite loop when passing object with 3+ base classes by value)\n\n        PR target/18300\n        * config/i386/i386.c (classify_argument): Fix infinite loop when\n        passing object with 3 or more base classes by value.\n\nFrom-SVN: r90600", "tree": {"sha": "d9b60808275c4fd178560f0cf55bf07c7f2c3795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9b60808275c4fd178560f0cf55bf07c7f2c3795"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8112eacf708ba210c298d2419266ddc3c632aad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8112eacf708ba210c298d2419266ddc3c632aad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8112eacf708ba210c298d2419266ddc3c632aad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8112eacf708ba210c298d2419266ddc3c632aad/comments", "author": null, "committer": null, "parents": [{"sha": "595163db430ae9e2d23ee5214dda68fb06e8b5bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595163db430ae9e2d23ee5214dda68fb06e8b5bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/595163db430ae9e2d23ee5214dda68fb06e8b5bb"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "ba8cdf2bff0ad97a6c375a3f56be3907f0c40aae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8112eacf708ba210c298d2419266ddc3c632aad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8112eacf708ba210c298d2419266ddc3c632aad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8112eacf708ba210c298d2419266ddc3c632aad", "patch": "@@ -1,3 +1,9 @@\n+2004-11-13  Zak Kipling  <zak@transversal.com>\n+\n+\tPR target/18300\n+\t* config/i386/i386.c (classify_argument): Fix infinite loop when\n+\tpassing object with 3 or more base classes by value.\n+\n 2004-11-13  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* doc/md.texi (constraints) <% modifier>: Mention that it is\n@@ -79,7 +85,7 @@\n \t* doc/rtl.texi (INSN_DEAD_CODE_P, REG_LOOP_TEST_P): Remove.\n \n 2004-11-13  James A. Morrison  <phython@gcc.gnu.org>\n-            Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\t    Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR target/18230\n \t* config/sparc/sparc.c (sparc_rtx_costs): Handle the NAND vector"}, {"sha": "089957e830b921f109e7947ffdf1772a5984de55", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8112eacf708ba210c298d2419266ddc3c632aad/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8112eacf708ba210c298d2419266ddc3c632aad/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e8112eacf708ba210c298d2419266ddc3c632aad", "patch": "@@ -2117,10 +2117,10 @@ classify_argument (enum machine_mode mode, tree type,\n \t  if (TYPE_BINFO (type))\n \t    {\n \t      tree binfo, base_binfo;\n-\t      int i;\n+\t      int basenum;\n \n-\t      for (binfo = TYPE_BINFO (type), i = 0;\n-\t\t   BINFO_BASE_ITERATE (binfo, i, base_binfo); i++)\n+\t      for (binfo = TYPE_BINFO (type), basenum = 0;\n+\t\t   BINFO_BASE_ITERATE (binfo, basenum, base_binfo); basenum++)\n \t\t{\n \t\t   int num;\n \t\t   int offset = tree_low_cst (BINFO_OFFSET (base_binfo), 0) * 8;\n@@ -2204,10 +2204,10 @@ classify_argument (enum machine_mode mode, tree type,\n \t  if (TYPE_BINFO (type))\n \t    {\n \t      tree binfo, base_binfo;\n-\t      int i;\n+\t      int basenum;\n \n-\t      for (binfo = TYPE_BINFO (type), i = 0;\n-\t\t   BINFO_BASE_ITERATE (binfo, i, base_binfo); i++)\n+\t      for (binfo = TYPE_BINFO (type), basenum = 0;\n+\t\t   BINFO_BASE_ITERATE (binfo, basenum, base_binfo); basenum++)\n \t\t{\n \t\t   int num;\n \t\t   int offset = tree_low_cst (BINFO_OFFSET (base_binfo), 0) * 8;"}, {"sha": "6c851c7e5e9be02f3bb3ab6ddcd0609813518eaa", "filename": "gcc/testsuite/g++.dg/other/infloop-1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8112eacf708ba210c298d2419266ddc3c632aad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Finfloop-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8112eacf708ba210c298d2419266ddc3c632aad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Finfloop-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Finfloop-1.C?ref=e8112eacf708ba210c298d2419266ddc3c632aad", "patch": "@@ -0,0 +1,16 @@\n+// PR 18300: This sends old compilers into an infinite loop on x86_64\n+// Testcase and patch contributed by Zak Kipling <zak@transversal.com>\n+\n+struct base1 { };\n+struct base2 { };\n+struct base3 { };\n+\n+struct derived : base1, base2, base3 { };\n+\n+void foo(derived);\n+\n+int main()\n+{\n+  foo(derived());\n+}\n+"}]}