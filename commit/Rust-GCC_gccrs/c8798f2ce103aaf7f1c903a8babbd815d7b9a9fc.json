{"sha": "c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg3OThmMmNlMTAzYWFmN2YxYzkwM2E4YmFiYmQ4MTVkN2I5YTlmYw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-09-13T13:30:13Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-09-13T13:30:13Z"}, "message": "Add new effective target: profile_update_atomic\n\n\t* g++.dg/gcov/gcov-threads-1.C: Use profile_update_atomic\n\teffective target.\n\t* gcc.dg/tree-prof/val-profiler-threads-1.c: Likewise.\n\t* lib/target-supports.exp: Define the new target.\n\nFrom-SVN: r240111", "tree": {"sha": "e5688eff6c3835b586e477282cbb879106f6b99d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5688eff6c3835b586e477282cbb879106f6b99d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9453eee910731ae8d0deded6952b6d085652bbfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9453eee910731ae8d0deded6952b6d085652bbfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9453eee910731ae8d0deded6952b6d085652bbfe"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "d9d682577bcfeb6f775366de89dba009124f65a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc", "patch": "@@ -1,3 +1,10 @@\n+2016-09-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/gcov/gcov-threads-1.C: Use profile_update_atomic\n+\teffective target.\n+\t* gcc.dg/tree-prof/val-profiler-threads-1.c: Likewise.\n+\t* lib/target-supports.exp: Define the new target.\n+\n 2016-09-12  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.target/aarch64/thunderxloadpair.c: New testcase."}, {"sha": "cc9266ab8ea47b191f524188e945954d7af5f7b9", "filename": "gcc/testsuite/g++.dg/gcov/gcov-threads-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-threads-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-threads-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-threads-1.C?ref=c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc", "patch": "@@ -1,5 +1,6 @@\n /* { dg-options \"-fprofile-arcs -ftest-coverage -pthread -fprofile-update=atomic\" } */\n /* { dg-do run { target native } } */\n+/* { dg-require-effective-target profile_update_atomic } */\n \n #include <stdint.h>\n #include <pthread.h>"}, {"sha": "95d6ee3b4a3184be9ae489561fecd49285cb443b", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-profiler-threads-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-profiler-threads-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-profiler-threads-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-profiler-threads-1.c?ref=c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc", "patch": "@@ -1,4 +1,6 @@\n /* { dg-options \"-O0 -pthread -fprofile-update=atomic\" } */\n+/* { dg-require-effective-target profile_update_atomic } */\n+\n #include <pthread.h>\n \n #define NUM_THREADS\t8"}, {"sha": "6724a7fd214e91299f7b47563cff2d6e6611c3da", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=c8798f2ce103aaf7f1c903a8babbd815d7b9a9fc", "patch": "@@ -7699,3 +7699,10 @@ proc check_effective_target_offload_hsa { } {\n \tint main () {return 0;}\n     } \"-foffload=hsa\" ]\n }\n+\n+# Return 1 if the target support -fprofile-update=atomic\n+proc check_effective_target_profile_update_atomic {} {\n+    return [check_no_compiler_messages profile_update_atomic assembly {\n+\tint main (void) { return 0; }\n+    } \"-fprofile-update=atomic -fprofile-generate\"]\n+}"}]}