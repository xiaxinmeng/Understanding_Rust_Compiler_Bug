{"sha": "8353cd27a414d07e1ee6806c0742081f1b3ee899", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1M2NkMjdhNDE0ZDA3ZTFlZTY4MDZjMDc0MjA4MWYxYjNlZTg5OQ==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2009-05-22T16:22:53Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2009-05-22T16:22:53Z"}, "message": "configure.ac: Also check if assembler supports pc-relative relocs on X86_WIN32 targets.\n\n\t* configure.ac:  Also check if assembler supports pc-relative\n\trelocs on X86_WIN32 targets.\n\t* configure:  Regenerate.\n\t* src/x86/win32.S (ffi_prep_args):  Declare extern, not global.\n\t(_ffi_call_SYSV):  Add missing function type symbol .def and\n\tadd EH markup labels.\n\t(_ffi_call_STDCALL):  Likewise.\n\t(_ffi_closure_SYSV):  Likewise.\n\t(_ffi_closure_raw_SYSV):  Likewise.\n\t(.eh_frame):  Add hand-crafted EH data.\n\nFrom-SVN: r147800", "tree": {"sha": "f8970032a5fabd58011412456344d32254bece0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8970032a5fabd58011412456344d32254bece0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8353cd27a414d07e1ee6806c0742081f1b3ee899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8353cd27a414d07e1ee6806c0742081f1b3ee899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8353cd27a414d07e1ee6806c0742081f1b3ee899", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8353cd27a414d07e1ee6806c0742081f1b3ee899/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe2978fba2ed2c3be0d1cd6ca3e1de30bd07bf93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe2978fba2ed2c3be0d1cd6ca3e1de30bd07bf93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe2978fba2ed2c3be0d1cd6ca3e1de30bd07bf93"}], "stats": {"total": 229, "additions": 213, "deletions": 16}, "files": [{"sha": "9045900105a822c4e4235bcf0335b55be6f9bfb4", "filename": "libffi/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8353cd27a414d07e1ee6806c0742081f1b3ee899/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8353cd27a414d07e1ee6806c0742081f1b3ee899/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=8353cd27a414d07e1ee6806c0742081f1b3ee899", "patch": "@@ -1,3 +1,16 @@\n+2009-05-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* configure.ac:  Also check if assembler supports pc-relative\n+\trelocs on X86_WIN32 targets.\n+\t* configure:  Regenerate.\n+\t* src/x86/win32.S (ffi_prep_args):  Declare extern, not global.\n+\t(_ffi_call_SYSV):  Add missing function type symbol .def and\n+\tadd EH markup labels.\n+\t(_ffi_call_STDCALL):  Likewise.\n+\t(_ffi_closure_SYSV):  Likewise.\n+\t(_ffi_closure_raw_SYSV):  Likewise.\n+\t(.eh_frame):  Add hand-crafted EH data.\n+\n 2009-04-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/lib/libffi-dg.exp: Change copyright header to refer to"}, {"sha": "4141f3a6f46b8b19a4e777c0ac8f1feb078ddd4a", "filename": "libffi/configure", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8353cd27a414d07e1ee6806c0742081f1b3ee899/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8353cd27a414d07e1ee6806c0742081f1b3ee899/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=8353cd27a414d07e1ee6806c0742081f1b3ee899", "patch": "@@ -13263,7 +13263,7 @@ _ACEOF\n     fi\n fi\n \n-if test x$TARGET = xX86 || test x$TARGET = xX86_64; then\n+if test x$TARGET = xX86 || test x$TARGET = xX86_WIN32 || test x$TARGET = xX86_64; then\n     echo \"$as_me:$LINENO: checking assembler supports pc related relocs\" >&5\n echo $ECHO_N \"checking assembler supports pc related relocs... $ECHO_C\" >&6\n if test \"${libffi_cv_as_x86_pcrel+set}\" = set; then\n@@ -14175,6 +14175,9 @@ ac_configure_args=\"${multilib_arg} ${ac_configure_args}\"\n multi_basedir=\"$multi_basedir\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n CC=\"$CC\"\n+CXX=\"$CXX\"\n+GFORTRAN=\"$GFORTRAN\"\n+GCJ=\"$GCJ\"\n AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"\n \n "}, {"sha": "a9f8e519fed97670e52b1eec66b366935f6f3897", "filename": "libffi/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8353cd27a414d07e1ee6806c0742081f1b3ee899/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8353cd27a414d07e1ee6806c0742081f1b3ee899/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=8353cd27a414d07e1ee6806c0742081f1b3ee899", "patch": "@@ -240,7 +240,7 @@ if test x$TARGET = xSPARC; then\n     fi\n fi\n \n-if test x$TARGET = xX86 || test x$TARGET = xX86_64; then\n+if test x$TARGET = xX86 || test x$TARGET = xX86_WIN32 || test x$TARGET = xX86_64; then\n     AC_CACHE_CHECK([assembler supports pc related relocs],\n \tlibffi_cv_as_x86_pcrel, [\n \tlibffi_cv_as_x86_pcrel=yes"}, {"sha": "a54c23538bfa2e985cab3ea6d05ed9a5dbea14e1", "filename": "libffi/src/x86/win32.S", "status": "modified", "additions": 195, "deletions": 14, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8353cd27a414d07e1ee6806c0742081f1b3ee899/libffi%2Fsrc%2Fx86%2Fwin32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8353cd27a414d07e1ee6806c0742081f1b3ee899/libffi%2Fsrc%2Fx86%2Fwin32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fwin32.S?ref=8353cd27a414d07e1ee6806c0742081f1b3ee899", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   win32.S - Copyright (c) 1996, 1998, 2001, 2002  Red Hat, Inc.\n+   win32.S - Copyright (c) 1996, 1998, 2001, 2002, 2009  Red Hat, Inc.\n \t     Copyright (c) 2001  John Beniton\n \t     Copyright (c) 2002  Ranjit Mathew\n \t\t\t\n@@ -30,18 +30,20 @@\n #include <fficonfig.h>\n #include <ffi.h>\n  \n-.text\n+\t.text\n  \n-.globl ffi_prep_args\n+\t.extern\tffi_prep_args\n  \n         # This assumes we are using gas.\n         .balign 16\n-.globl _ffi_call_SYSV\n- \n+\t.globl\t_ffi_call_SYSV\n+\t.def\t_ffi_call_SYSV;\t.scl\t2;\t.type\t32;\t.endef\n _ffi_call_SYSV:\n+.LFB1:\n         pushl %ebp\n+.LCFI0:\n         movl  %esp,%ebp\n- \n+.LCFI1:\n         # Make room for all of the new args.\n         movl  16(%ebp),%ecx                                                     \n         subl  %ecx,%esp\n@@ -144,17 +146,19 @@ epilogue:\n         movl %ebp,%esp\n         popl %ebp\n         ret\n- \n .ffi_call_SYSV_end:\n+.LFE1:\n \n         # This assumes we are using gas.\n         .balign 16\n-.globl _ffi_call_STDCALL\n-\n+\t.globl\t_ffi_call_STDCALL\n+\t.def\t_ffi_call_STDCALL;\t.scl\t2;\t.type\t32;\t.endef\n _ffi_call_STDCALL:\n+.LFB2:\n         pushl %ebp\n+.LCFI2:\n         movl  %esp,%ebp\n-\n+.LCFI3:\n         # Make room for all of the new args.\n         movl  16(%ebp),%ecx \n         subl  %ecx,%esp\n@@ -255,13 +259,19 @@ sc_epilogue:\n         movl %ebp,%esp\n         popl %ebp\n         ret\n-\n .ffi_call_STDCALL_end:\n+.LFE2:\n \n-\t.globl _ffi_closure_SYSV\n+        # This assumes we are using gas.\n+        .balign 16\n+\t.globl\t_ffi_closure_SYSV\n+\t.def\t_ffi_closure_SYSV;\t.scl\t2;\t.type\t32;\t.endef\n _ffi_closure_SYSV:\n+.LFB3:\n \tpushl\t%ebp\n+.LCFI4:\n \tmovl\t%esp, %ebp\n+.LCFI5:\n \tsubl\t$40, %esp\n \tleal\t-24(%ebp), %edx\n \tmovl\t%edx, -12(%ebp)\t/* resp */\n@@ -312,6 +322,7 @@ _ffi_closure_SYSV:\n \tmovswl\t(%ecx), %eax\n \tjmp\t.Lcls_epilogue\n .ffi_closure_SYSV_end:\n+.LFE3:\n \n #if !FFI_NO_RAW_API\n \n@@ -320,12 +331,18 @@ _ffi_closure_SYSV:\n #define RAW_CLOSURE_USER_DATA_OFFSET (RAW_CLOSURE_FUN_OFFSET + 4)\n #define CIF_FLAGS_OFFSET 20\n \n-\t.balign\t16\n-\t.globl _ffi_closure_raw_SYSV\n+        # This assumes we are using gas.\n+        .balign 16\n+\t.globl\t_ffi_closure_raw_SYSV\n+\t.def\t_ffi_closure_raw_SYSV;\t.scl\t2;\t.type\t32;\t.endef\n _ffi_closure_raw_SYSV:\n+.LFB4:\n \tpushl\t%ebp\n+.LCFI6:\n \tmovl\t%esp, %ebp\n+.LCFI7:\n \tpushl\t%esi\n+.LCFI8:\n \tsubl\t$36, %esp\n \tmovl\tRAW_CLOSURE_CIF_OFFSET(%eax), %esi\t /* closure->cif */\n \tmovl\tRAW_CLOSURE_USER_DATA_OFFSET(%eax), %edx /* closure->user_data */\n@@ -369,5 +386,169 @@ _ffi_closure_raw_SYSV:\n \tmovl\t-20(%ebp), %edx\n \tjmp\t.Lrcls_epilogue\n .ffi_closure_raw_SYSV_end:\n+.LFE4:\n+\n+#endif /* !FFI_NO_RAW_API */\n+\n+\n+\t.section\t.eh_frame,\"w\"\n+.Lframe1:\n+.LSCIE1:\n+\t.long\t.LECIE1-.LASCIE1  /* Length of Common Information Entry */\n+.LASCIE1:\n+\t.long\t0x0\t/* CIE Identifier Tag */\n+\t.byte\t0x1\t/* CIE Version */\n+#ifdef __PIC__\n+\t.ascii \"zR\\0\"\t/* CIE Augmentation */\n+#else\n+\t.ascii \"\\0\"\t/* CIE Augmentation */\n+#endif\n+\t.byte\t0x1\t/* .uleb128 0x1; CIE Code Alignment Factor */\n+\t.byte\t0x7c\t/* .sleb128 -4; CIE Data Alignment Factor */\n+\t.byte\t0x8\t/* CIE RA Column */\n+#ifdef __PIC__\n+\t.byte\t0x1\t/* .uleb128 0x1; Augmentation size */\n+\t.byte\t0x1b\t/* FDE Encoding (pcrel sdata4) */\n+#endif\n+\t.byte\t0xc\t/* DW_CFA_def_cfa CFA = r4 + 4 = 4(%esp) */\n+\t.byte\t0x4\t/* .uleb128 0x4 */\n+\t.byte\t0x4\t/* .uleb128 0x4 */\n+\t.byte\t0x88\t/* DW_CFA_offset, column 0x8 %eip at CFA + 1 * -4 */\n+\t.byte\t0x1\t/* .uleb128 0x1 */\n+\t.align 4\n+.LECIE1:\n+\n+.LSFDE1:\n+\t.long\t.LEFDE1-.LASFDE1\t/* FDE Length */\n+.LASFDE1:\n+\t.long\t.LASFDE1-.Lframe1\t/* FDE CIE offset */\n+#if defined __PIC__ && defined HAVE_AS_X86_PCREL\n+\t.long\t.LFB1-.\t/* FDE initial location */\n+#else\n+\t.long\t.LFB1\n+#endif\n+\t.long\t.LFE1-.LFB1\t/* FDE address range */\n+#ifdef __PIC__\n+\t.byte\t0x0\t/* .uleb128 0x0; Augmentation size */\n+#endif\n+\t/* DW_CFA_xxx CFI instructions go here.  */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI0-.LFB1\n+\t.byte\t0xe\t/* DW_CFA_def_cfa_offset CFA = r4 + 8 = 8(%esp) */\n+\t.byte\t0x8\t/* .uleb128 0x8 */\n+\t.byte\t0x85\t/* DW_CFA_offset, column 0x5 %ebp at CFA + 2 * -4 */\n+\t.byte\t0x2\t/* .uleb128 0x2 */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI1-.LCFI0\n+\t.byte\t0xd\t/* DW_CFA_def_cfa_register CFA = r5 = %ebp */\n+\t.byte\t0x5\t/* .uleb128 0x5 */\n+\n+\t/* End of DW_CFA_xxx CFI instructions.  */\n+\t.align 4\n+.LEFDE1:\n+\n \n+.LSFDE2:\n+\t.long\t.LEFDE2-.LASFDE2\t/* FDE Length */\n+.LASFDE2:\n+\t.long\t.LASFDE2-.Lframe1\t/* FDE CIE offset */\n+#if defined __PIC__ && defined HAVE_AS_X86_PCREL\n+\t.long\t.LFB2-.\t/* FDE initial location */\n+#else\n+\t.long\t.LFB2\n #endif\n+\t.long\t.LFE2-.LFB2\t/* FDE address range */\n+#ifdef __PIC__\n+\t.byte\t0x0\t/* .uleb128 0x0; Augmentation size */\n+#endif\n+\t/* DW_CFA_xxx CFI instructions go here.  */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI2-.LFB2\n+\t.byte\t0xe\t/* DW_CFA_def_cfa_offset CFA = r4 + 8 = 8(%esp) */\n+\t.byte\t0x8\t/* .uleb128 0x8 */\n+\t.byte\t0x85\t/* DW_CFA_offset, column 0x5 %ebp at CFA + 2 * -4 */\n+\t.byte\t0x2\t/* .uleb128 0x2 */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI3-.LCFI2\n+\t.byte\t0xd\t/* DW_CFA_def_cfa_register CFA = r5 = %ebp */\n+\t.byte\t0x5\t/* .uleb128 0x5 */\n+\n+\t/* End of DW_CFA_xxx CFI instructions.  */\n+\t.align 4\n+.LEFDE2:\n+\n+\n+.LSFDE3:\n+\t.long\t.LEFDE3-.LASFDE3\t/* FDE Length */\n+.LASFDE3:\n+\t.long\t.LASFDE3-.Lframe1\t/* FDE CIE offset */\n+#if defined __PIC__ && defined HAVE_AS_X86_PCREL\n+\t.long\t.LFB3-.\t/* FDE initial location */\n+#else\n+\t.long\t.LFB3\n+#endif\n+\t.long\t.LFE3-.LFB3\t/* FDE address range */\n+#ifdef __PIC__\n+\t.byte\t0x0\t/* .uleb128 0x0; Augmentation size */\n+#endif\n+\t/* DW_CFA_xxx CFI instructions go here.  */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI4-.LFB3\n+\t.byte\t0xe\t/* DW_CFA_def_cfa_offset CFA = r4 + 8 = 8(%esp) */\n+\t.byte\t0x8\t/* .uleb128 0x8 */\n+\t.byte\t0x85\t/* DW_CFA_offset, column 0x5 %ebp at CFA + 2 * -4 */\n+\t.byte\t0x2\t/* .uleb128 0x2 */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI5-.LCFI4\n+\t.byte\t0xd\t/* DW_CFA_def_cfa_register CFA = r5 = %ebp */\n+\t.byte\t0x5\t/* .uleb128 0x5 */\n+\n+\t/* End of DW_CFA_xxx CFI instructions.  */\n+\t.align 4\n+.LEFDE3:\n+\n+#if !FFI_NO_RAW_API\n+\n+.LSFDE4:\n+\t.long\t.LEFDE4-.LASFDE4\t/* FDE Length */\n+.LASFDE4:\n+\t.long\t.LASFDE4-.Lframe1\t/* FDE CIE offset */\n+#if defined __PIC__ && defined HAVE_AS_X86_PCREL\n+\t.long\t.LFB4-.\t/* FDE initial location */\n+#else\n+\t.long\t.LFB4\n+#endif\n+\t.long\t.LFE4-.LFB4\t/* FDE address range */\n+#ifdef __PIC__\n+\t.byte\t0x0\t/* .uleb128 0x0; Augmentation size */\n+#endif\n+\t/* DW_CFA_xxx CFI instructions go here.  */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI6-.LFB4\n+\t.byte\t0xe\t/* DW_CFA_def_cfa_offset CFA = r4 + 8 = 8(%esp) */\n+\t.byte\t0x8\t/* .uleb128 0x8 */\n+\t.byte\t0x85\t/* DW_CFA_offset, column 0x5 %ebp at CFA + 2 * -4 */\n+\t.byte\t0x2\t/* .uleb128 0x2 */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI7-.LCFI6\n+\t.byte\t0xd\t/* DW_CFA_def_cfa_register CFA = r5 = %ebp */\n+\t.byte\t0x5\t/* .uleb128 0x5 */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI8-.LCFI7\n+\t.byte\t0x86\t/* DW_CFA_offset, column 0x6 %esi at CFA + 3 * -4 */\n+\t.byte\t0x3\t/* .uleb128 0x3 */\n+\n+\t/* End of DW_CFA_xxx CFI instructions.  */\n+\t.align 4\n+.LEFDE4:\n+\n+#endif /* !FFI_NO_RAW_API */"}]}