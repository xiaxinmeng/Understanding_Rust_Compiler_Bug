{"sha": "8b522befbf2eed8d9ce2f51098bc152787e16ead", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI1MjJiZWZiZjJlZWQ4ZDljZTJmNTEwOThiYzE1Mjc4N2UxNmVhZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-07-29T19:47:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-07-29T19:47:02Z"}, "message": "re PR debug/45110 (GCC does not emit DW_AT_object_pointer)\n\n\tPR debug/45110\n\t* dwarf2out.c (dwarf_attr_name): Handle DW_AT_object_pointer.\n\t(gen_formal_types_die): Add DW_AT_object_pointer in methods.\n\t(gen_subprogram_die): Likewise.  Remove it when removing declaration's\n\tformal parameters.\n\t(gen_decl_die): Change return type to dw_die_ref, return what\n\tgen_formal_parameter_die returned.\n\nFrom-SVN: r162691", "tree": {"sha": "916105c97bed98ad92b6f4c3616be8a5a0f7842a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/916105c97bed98ad92b6f4c3616be8a5a0f7842a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b522befbf2eed8d9ce2f51098bc152787e16ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b522befbf2eed8d9ce2f51098bc152787e16ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b522befbf2eed8d9ce2f51098bc152787e16ead", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b522befbf2eed8d9ce2f51098bc152787e16ead/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2a5eb7501657692da7d9d294758753e122b3691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a5eb7501657692da7d9d294758753e122b3691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a5eb7501657692da7d9d294758753e122b3691"}], "stats": {"total": 52, "additions": 40, "deletions": 12}, "files": [{"sha": "a72b83039cece75a49e1a4cedba11618066f3328", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b522befbf2eed8d9ce2f51098bc152787e16ead/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b522befbf2eed8d9ce2f51098bc152787e16ead/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b522befbf2eed8d9ce2f51098bc152787e16ead", "patch": "@@ -1,3 +1,13 @@\n+2010-07-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/45110\n+\t* dwarf2out.c (dwarf_attr_name): Handle DW_AT_object_pointer.\n+\t(gen_formal_types_die): Add DW_AT_object_pointer in methods.\n+\t(gen_subprogram_die): Likewise.  Remove it when removing declaration's\n+\tformal parameters.\n+\t(gen_decl_die): Change return type to dw_die_ref, return what\n+\tgen_formal_parameter_die returned.\n+\n 2010-07-29  Martin Jambor  <mjambor@suse.cz>\n \n \t* dbgcnt.def (eipa_sra): New counter."}, {"sha": "95de4687f5054790e98992206fce1750ede42843", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b522befbf2eed8d9ce2f51098bc152787e16ead/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b522befbf2eed8d9ce2f51098bc152787e16ead/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=8b522befbf2eed8d9ce2f51098bc152787e16ead", "patch": "@@ -6300,7 +6300,7 @@ static int is_redundant_typedef (const_tree);\n static bool is_naming_typedef_decl (const_tree);\n static inline dw_die_ref get_context_die (tree);\n static void gen_namespace_die (tree, dw_die_ref);\n-static void gen_decl_die (tree, tree, dw_die_ref);\n+static dw_die_ref gen_decl_die (tree, tree, dw_die_ref);\n static dw_die_ref force_decl_die (tree);\n static dw_die_ref force_type_die (tree);\n static dw_die_ref setup_namespace_context (tree, dw_die_ref);\n@@ -6809,6 +6809,8 @@ dwarf_attr_name (unsigned int attr)\n       return \"DW_AT_call_file\";\n     case DW_AT_call_line:\n       return \"DW_AT_call_line\";\n+    case DW_AT_object_pointer:\n+      return \"DW_AT_object_pointer\";\n \n     case DW_AT_signature:\n       return \"DW_AT_signature\";\n@@ -18371,9 +18373,14 @@ gen_formal_types_die (tree function_or_method_type, dw_die_ref context_die)\n       parm_die = gen_formal_parameter_die (formal_type, NULL,\n \t\t\t\t\t   true /* Emit name attribute.  */,\n \t\t\t\t\t   context_die);\n-      if ((TREE_CODE (function_or_method_type) == METHOD_TYPE\n-\t   && link == first_parm_type)\n-\t  || (arg && DECL_ARTIFICIAL (arg)))\n+      if (TREE_CODE (function_or_method_type) == METHOD_TYPE\n+\t  && link == first_parm_type)\n+\t{\n+\t  add_AT_flag (parm_die, DW_AT_artificial, 1);\n+\t  if (dwarf_version >= 3 || !dwarf_strict)\n+\t    add_AT_die_ref (context_die, DW_AT_object_pointer, parm_die);\n+\t}\n+      else if (arg && DECL_ARTIFICIAL (arg))\n \tadd_AT_flag (parm_die, DW_AT_artificial, 1);\n \n       link = TREE_CHAIN (link);\n@@ -18648,6 +18655,7 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t     cases die that forced declaration die (e.g. TAG_imported_module)\n \t     is one of the children that we do not want to remove.  */\n \t  remove_AT (subr_die, DW_AT_declaration);\n+\t  remove_AT (subr_die, DW_AT_object_pointer);\n \t  remove_child_TAG (subr_die, DW_TAG_formal_parameter);\n \t}\n       else\n@@ -18886,7 +18894,14 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t\t\t\t\t   &parm);\n \t  else if (parm)\n \t    {\n-\t      gen_decl_die (parm, NULL, subr_die);\n+\t      dw_die_ref parm_die = gen_decl_die (parm, NULL, subr_die);\n+\n+\t      if (parm == DECL_ARGUMENTS (decl)\n+\t\t  && TREE_CODE (TREE_TYPE (decl)) == METHOD_TYPE\n+\t\t  && parm_die\n+\t\t  && (dwarf_version >= 3 || !dwarf_strict))\n+\t\tadd_AT_die_ref (subr_die, DW_AT_object_pointer, parm_die);\n+\n \t      parm = DECL_CHAIN (parm);\n \t    }\n \n@@ -20433,16 +20448,18 @@ gen_namespace_die (tree decl, dw_die_ref context_die)\n     }\n }\n \n-/* Generate Dwarf debug information for a decl described by DECL.  */\n+/* Generate Dwarf debug information for a decl described by DECL.\n+   The return value is currently only meaningful for PARM_DECLs,\n+   for all other decls it returns NULL.  */\n \n-static void\n+static dw_die_ref\n gen_decl_die (tree decl, tree origin, dw_die_ref context_die)\n {\n   tree decl_or_origin = decl ? decl : origin;\n   tree class_origin = NULL, ultimate_origin;\n \n   if (DECL_P (decl_or_origin) && DECL_IGNORED_P (decl_or_origin))\n-    return;\n+    return NULL;\n \n   switch (TREE_CODE (decl_or_origin))\n     {\n@@ -20613,10 +20630,9 @@ gen_decl_die (tree decl, tree origin, dw_die_ref context_die)\n \tgen_type_die (TREE_TYPE (TREE_TYPE (decl_or_origin)), context_die);\n       else\n \tgen_type_die (TREE_TYPE (decl_or_origin), context_die);\n-      gen_formal_parameter_die (decl, origin,\n-\t\t\t\ttrue /* Emit name attribute.  */,\n-\t\t\t\tcontext_die);\n-      break;\n+      return gen_formal_parameter_die (decl, origin,\n+\t\t\t\t       true /* Emit name attribute.  */,\n+\t\t\t\t       context_die);\n \n     case NAMESPACE_DECL:\n     case IMPORTED_DECL:\n@@ -20629,6 +20645,8 @@ gen_decl_die (tree decl, tree origin, dw_die_ref context_die)\n       gcc_assert ((int)TREE_CODE (decl) > NUM_TREE_CODES);\n       break;\n     }\n+\n+  return NULL;\n }\n \f\n /* Output debug information for global decl DECL.  Called from toplev.c after"}]}