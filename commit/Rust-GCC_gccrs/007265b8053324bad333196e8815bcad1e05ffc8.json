{"sha": "007265b8053324bad333196e8815bcad1e05ffc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA3MjY1YjgwNTMzMjRiYWQzMzMxOTZlODgxNWJjYWQxZTA1ZmZjOA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2004-05-03T20:23:28Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-05-03T20:23:28Z"}, "message": "DERReader.java: Call static methods staticly.\n\n2004-05-03  Mark Wielaard  <mark@klomp.org>\n\n\t* gnu/java/security/der/DERReader.java: Call static methods staticly.\n\t* java/awt/TextComponent.java (select): Use selectionEnd parameter.\n\t* java/net/URL.java\n\t(set(String, String, int, String, String, String, String, String)):\n\tAssign this.file to path or path + \"?\" + query.\n\t* java/util/Arrays.java: Call static methods staticly.\n\t* java/util/zip/ZipEntry.java: Likewise.\n\t* javax/swing/plaf/basic/BasicArrowButton.java (setDirection): Assign\n\tdir to this.direction.\n\t* javax/swing/table/DefaultTableCellRenderer.java (noFocusBorder):\n\tAssign static field only once.\n\t(DefaultTableCellRenderer): Don't reassign noFocusBorder each time.\n\nFrom-SVN: r81453", "tree": {"sha": "7c1ecb4129cfeaf7c93bf2bb9347e0cb39665802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c1ecb4129cfeaf7c93bf2bb9347e0cb39665802"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/007265b8053324bad333196e8815bcad1e05ffc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/007265b8053324bad333196e8815bcad1e05ffc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/007265b8053324bad333196e8815bcad1e05ffc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/007265b8053324bad333196e8815bcad1e05ffc8/comments", "author": null, "committer": null, "parents": [{"sha": "a00d3b3c65bb9a365cd3056eeb0ebbf29a9caf4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00d3b3c65bb9a365cd3056eeb0ebbf29a9caf4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a00d3b3c65bb9a365cd3056eeb0ebbf29a9caf4d"}], "stats": {"total": 55, "additions": 34, "deletions": 21}, "files": [{"sha": "a93836263a856ab99d3364635962c543c5dc74a9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=007265b8053324bad333196e8815bcad1e05ffc8", "patch": "@@ -1,3 +1,18 @@\n+2004-05-03  Mark Wielaard  <mark@klomp.org>\n+\n+\t* gnu/java/security/der/DERReader.java: Call static methods staticly.\n+\t* java/awt/TextComponent.java (select): Use selectionEnd parameter.\n+\t* java/net/URL.java\n+\t(set(String, String, int, String, String, String, String, String)):\n+\tAssign this.file to path or path + \"?\" + query.\n+\t* java/util/Arrays.java: Call static methods staticly.\n+\t* java/util/zip/ZipEntry.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicArrowButton.java (setDirection): Assign\n+\tdir to this.direction.\n+\t* javax/swing/table/DefaultTableCellRenderer.java (noFocusBorder):\n+\tAssign static field only once.\n+\t(DefaultTableCellRenderer): Don't reassign noFocusBorder each time.\n+\n 2004-05-03  Mark Wielaard  <mark@klomp.org>\n \n \t* gnu/java/awt/peer/gtk/GtkTextAreaPeer.java (minimumSize): Removed"}, {"sha": "3915b071165b4dcbadf7a368760307d70e5832b3", "filename": "libjava/gnu/java/security/der/DERReader.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERReader.java?ref=007265b8053324bad333196e8815bcad1e05ffc8", "patch": "@@ -335,7 +335,7 @@ else if (str.endsWith(\"Z\"))\n               Integer.parseInt(str.substring( 6,  8)),    // hour\n               Integer.parseInt(str.substring( 8, 10)));   // minute\n             if (date.length() == 12);\n-              calendar.set(calendar.SECOND,\n+              calendar.set(Calendar.SECOND,\n                 Integer.parseInt(str.substring(10, 12)));\n           }\n         catch (NumberFormatException nfe)\n@@ -362,13 +362,13 @@ else if (str.endsWith(\"Z\"))\n                 case 18:\n                 case 17:\n                 case 16:\n-                  calendar.set(calendar.MILLISECOND,\n+                  calendar.set(Calendar.MILLISECOND,\n                     Integer.parseInt(date.substring(15)));\n                 case 14:\n-                  calendar.set(calendar.SECOND,\n+                  calendar.set(Calendar.SECOND,\n                     Integer.parseInt(date.substring(12, 14)));\n                 case 12:\n-                  calendar.set(calendar.MINUTE,\n+                  calendar.set(Calendar.MINUTE,\n                     Integer.parseInt(date.substring(10, 12)));\n               }\n           }"}, {"sha": "0a410a44b9f99a99f9e6e92d5c7c1ce761eb8745", "filename": "libjava/java/awt/TextComponent.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjava%2Fawt%2FTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjava%2Fawt%2FTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextComponent.java?ref=007265b8053324bad333196e8815bcad1e05ffc8", "patch": "@@ -233,11 +233,11 @@ public class TextComponent extends Component\n   * specified start and end positions.  Illegal values for these\n   * positions are silently fixed.\n   *\n-  * @param startSelection The new start position for the selected text.\n-  * @param endSelection The new end position for the selected text.\n+  * @param selectionStart The new start position for the selected text.\n+  * @param selectionEnd The new end position for the selected text.\n   */\n public synchronized void\n-select(int selectionStart, int endSelection)\n+select(int selectionStart, int selectionEnd)\n {\n   if (selectionStart < 0)\n     selectionStart = 0;"}, {"sha": "623f6601770b2ca95258a87a3004fb4da4b69b62", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=007265b8053324bad333196e8815bcad1e05ffc8", "patch": "@@ -743,12 +743,11 @@ protected void set(String protocol, String host, int port, String authority,\n     this.host = host;\n     this.userInfo = userInfo;\n     this.port = port;\n-    this.file = path;\n     this.authority = authority;\n     if (query == null)\n-      this.file = file;\n+      this.file = path;\n     else\n-      this.file = file + \"?\" + query;\n+      this.file = path + \"?\" + query;\n     this.ref = ref;\n     hashCode = hashCode(); // Used for serialization.\n   }"}, {"sha": "cc32d153900fd23e514c16571e1e9962a6d6e2a9", "filename": "libjava/java/util/Arrays.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjava%2Futil%2FArrays.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjava%2Futil%2FArrays.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FArrays.java?ref=007265b8053324bad333196e8815bcad1e05ffc8", "patch": "@@ -2400,7 +2400,7 @@ public int indexOf(Object o)\n     {\n       int size = a.length;\n       for (int i = 0; i < size; i++)\n-        if (this.equals(o, a[i]))\n+        if (ArrayList.equals(o, a[i]))\n           return i;\n       return -1;\n     }\n@@ -2409,7 +2409,7 @@ public int lastIndexOf(Object o)\n     {\n       int i = a.length;\n       while (--i >= 0)\n-        if (this.equals(o, a[i]))\n+        if (ArrayList.equals(o, a[i]))\n           return i;\n       return -1;\n     }"}, {"sha": "3f7f643552944ff3a3696755ca002146be4eab1f", "filename": "libjava/java/util/zip/ZipEntry.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java?ref=007265b8053324bad333196e8815bcad1e05ffc8", "patch": "@@ -169,12 +169,12 @@ public void setTime(long time)\n     synchronized (cal)\n       {\n \tcal.setTime(new Date(time*1000L));\n-\tdostime = (cal.get(cal.YEAR) - 1980 & 0x7f) << 25\n-\t  | (cal.get(cal.MONTH) + 1) << 21\n-\t  | (cal.get(cal.DAY_OF_MONTH)) << 16\n-\t  | (cal.get(cal.HOUR_OF_DAY)) << 11\n-\t  | (cal.get(cal.MINUTE)) << 5\n-\t  | (cal.get(cal.SECOND)) >> 1;\n+\tdostime = (cal.get(Calendar.YEAR) - 1980 & 0x7f) << 25\n+\t  | (cal.get(Calendar.MONTH) + 1) << 21\n+\t  | (cal.get(Calendar.DAY_OF_MONTH)) << 16\n+\t  | (cal.get(Calendar.HOUR_OF_DAY)) << 11\n+\t  | (cal.get(Calendar.MINUTE)) << 5\n+\t  | (cal.get(Calendar.SECOND)) >> 1;\n       }\n     dostime = (int) (dostime / 1000L);\n     this.known |= KNOWN_TIME;"}, {"sha": "cb2c99baf58c30d47f483db4be1f9a9eb6475cb1", "filename": "libjava/javax/swing/plaf/basic/BasicArrowButton.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicArrowButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicArrowButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicArrowButton.java?ref=007265b8053324bad333196e8815bcad1e05ffc8", "patch": "@@ -223,7 +223,7 @@ public void setDirection(int dir)\n       setIcon(new arrowIcon(arrow));\n     else\n       ((arrowIcon) getIcon()).setArrow(arrow);\n-    this.direction = direction;\n+    this.direction = dir;\n   }\n \n   /**"}, {"sha": "563d9e60af2229bea34174ddc973a721acb290f6", "filename": "libjava/javax/swing/table/DefaultTableCellRenderer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007265b8053324bad333196e8815bcad1e05ffc8/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java?ref=007265b8053324bad333196e8815bcad1e05ffc8", "patch": "@@ -54,7 +54,7 @@ public class DefaultTableCellRenderer extends JLabel\n {\n   static final long serialVersionUID = 7878911414715528324L;\n \n-  protected static Border noFocusBorder;\n+  protected static Border noFocusBorder = new EmptyBorder(0, 0, 0, 0);\n \n   public static class UIResource extends DefaultTableCellRenderer\n     implements javax.swing.plaf.UIResource\n@@ -70,7 +70,6 @@ public UIResource()\n   public DefaultTableCellRenderer()\n   {\n     super();\n-    this.noFocusBorder = new EmptyBorder(0, 0, 0, 0);\n   }\n \n   /**"}]}