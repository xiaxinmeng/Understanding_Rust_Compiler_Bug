{"sha": "b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhMzFlMmMzNDFkOTY1MjBjNWZiN2MxZTFmMWM1OTBlYjE4MmQ3Zg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-02T12:07:17Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-02T12:07:17Z"}, "message": "Fortran: OpenMP - fixes for omp atomic [PR97655]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/97655\n\t* openmp.c (gfc_match_omp_atomic): Fix mem-order handling;\n\treject specifying update + capture together.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/97655\n\t* gfortran.dg/gomp/atomic.f90: Update tree-dump counts; move\n\tinvalid OMP 5.0 code to ...\n\t* gfortran.dg/gomp/atomic-2.f90: ... here; update dg-error.\n\t* gfortran.dg/gomp/requires-9.f90: Update tree dump scan.", "tree": {"sha": "c327731b11ce29bf629946aa13ad248e22a3f1b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c327731b11ce29bf629946aa13ad248e22a3f1b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c198ddff83744f8b7bf24306ed1e6b889c44044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c198ddff83744f8b7bf24306ed1e6b889c44044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c198ddff83744f8b7bf24306ed1e6b889c44044"}], "stats": {"total": 101, "additions": 58, "deletions": 43}, "files": [{"sha": "6cb4f2862abd8826064ae69d559c9920c24d23ad", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f", "patch": "@@ -4107,12 +4107,13 @@ gfc_match_omp_atomic (void)\n \n   if (gfc_match_omp_clauses (&c, OMP_ATOMIC_CLAUSES, true, true) != MATCH_YES)\n     return MATCH_ERROR;\n+\n+  if (c->capture && c->atomic_op != GFC_OMP_ATOMIC_UNSET)\n+    gfc_error (\"OMP ATOMIC at %L with multiple atomic clauses\", &loc);\n+\n   if (c->atomic_op == GFC_OMP_ATOMIC_UNSET)\n     c->atomic_op = GFC_OMP_ATOMIC_UPDATE;\n \n-  if (c->capture && c->atomic_op != GFC_OMP_ATOMIC_UPDATE)\n-    gfc_error (\"OMP ATOMIC at %L with CAPTURE clause must be UPDATE\", &loc);\n-\n   if (c->memorder == OMP_MEMORDER_UNSET)\n     {\n       gfc_namespace *prog_unit = gfc_current_ns;\n@@ -4128,12 +4129,12 @@ gfc_match_omp_atomic (void)\n \t  c->memorder = OMP_MEMORDER_SEQ_CST;\n \t  break;\n \tcase OMP_REQ_ATOMIC_MEM_ORDER_ACQ_REL:\n-\t  if (c->atomic_op == GFC_OMP_ATOMIC_READ)\n-\t    c->memorder = OMP_MEMORDER_ACQUIRE;\n+\t  if (c->capture)\n+\t    c->memorder = OMP_MEMORDER_ACQ_REL;\n \t  else if (c->atomic_op == GFC_OMP_ATOMIC_READ)\n-\t    c->memorder = OMP_MEMORDER_RELEASE;\n+\t    c->memorder = OMP_MEMORDER_ACQUIRE;\n \t  else\n-\t    c->memorder = OMP_MEMORDER_ACQ_REL;\n+\t    c->memorder = OMP_MEMORDER_RELEASE;\n \t  break;\n \tdefault:\n \t  gcc_unreachable ();\n@@ -4161,8 +4162,9 @@ gfc_match_omp_atomic (void)\n \t  }\n \tbreak;\n       case GFC_OMP_ATOMIC_UPDATE:\n-\tif (c->memorder == OMP_MEMORDER_ACQ_REL\n-\t    || c->memorder == OMP_MEMORDER_ACQUIRE)\n+\tif ((c->memorder == OMP_MEMORDER_ACQ_REL\n+\t     || c->memorder == OMP_MEMORDER_ACQUIRE)\n+\t    && !c->capture)\n \t  {\n \t    gfc_error (\"!$OMP ATOMIC UPDATE at %L incompatible with \"\n \t\t       \"ACQ_REL or ACQUIRE clauses\", &loc);"}, {"sha": "1de418dcc950e17322f50df99010663446d9f5d1", "filename": "gcc/testsuite/gfortran.dg/gomp/atomic-2.f90", "status": "modified", "additions": 42, "deletions": 5, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fatomic-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fatomic-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fatomic-2.f90?ref=b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f", "patch": "@@ -9,25 +9,62 @@ subroutine bar\n     i = i + 1\n   !$omp end atomic\n \n-  !$omp atomic acq_rel capture ! { dg-error \"OMP ATOMIC UPDATE at .1. incompatible with ACQ_REL or ACQUIRE clauses\" }\n+  !$omp atomic acq_rel ! { dg-error \"OMP ATOMIC UPDATE at .1. incompatible with ACQ_REL or ACQUIRE clauses\" }\n   i = i + 1\n-  v = i\n   !$omp end atomic\n \n-  !$omp atomic capture,acq_rel , hint (1), update ! { dg-error \"OMP ATOMIC UPDATE at .1. incompatible with ACQ_REL or ACQUIRE clauses\" }\n+  !$omp atomic capture,acq_rel , hint (1)\n   i = i + 1\n   v = i\n   !$omp end atomic\n \n-  !$omp atomic hint(0),acquire capture ! { dg-error \"OMP ATOMIC UPDATE at .1. incompatible with ACQ_REL or ACQUIRE clauses\" }\n+  !$omp atomic acq_rel , hint (1), update ! { dg-error \"OMP ATOMIC UPDATE at .1. incompatible with ACQ_REL or ACQUIRE clauses\" }\n+  i = i + 1\n+  !$omp end atomic\n+\n+  !$omp atomic hint(0),acquire capture\n   i = i + 1\n   v = i\n   !$omp end atomic\n \n-  !$omp atomic write capture ! { dg-error \"OMP ATOMIC at .1. with CAPTURE clause must be UPDATE\" }\n+  !$omp atomic write capture ! { dg-error \"multiple atomic clauses\" }\n   i = 2\n   v = i\n   !$omp end atomic\n \n   !$omp atomic foobar ! { dg-error \"Failed to match clause\" }\n end\n+\n+! moved here from atomic.f90\n+subroutine openmp51_foo\n+  integer :: x, v\n+  !$omp atomic update seq_cst capture  ! { dg-error \"multiple atomic clauses\" }\n+  x = x + 2\n+  v = x\n+  !$omp end atomic\n+  !$omp atomic seq_cst, capture, update  ! { dg-error \"multiple atomic clauses\" }\n+  x = x + 2\n+  v = x\n+  !$omp end atomic\n+  !$omp atomic capture, seq_cst ,update  ! { dg-error \"multiple atomic clauses\" }\n+  x = x + 2\n+  v = x\n+  !$omp end atomic\n+end\n+\n+subroutine openmp51_bar\n+  integer :: i, v\n+  real :: f\n+  !$omp atomic relaxed capture update  ! { dg-error \"multiple atomic clauses\" }\n+  i = i + 1\n+  v = i\n+  !$omp end atomic\n+  !$omp atomic update capture,release , hint (1)  ! { dg-error \"multiple atomic clauses\" }\n+  i = i + 1\n+  v = i\n+  !$omp end atomic\n+  !$omp atomic hint(0),update relaxed capture  ! { dg-error \"multiple atomic clauses\" }\n+  i = i + 1\n+  v = i\n+  !$omp end atomic\n+end"}, {"sha": "b4caf03952d59be26a5a5621c2c683208489b58b", "filename": "gcc/testsuite/gfortran.dg/gomp/atomic.f90", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fatomic.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fatomic.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fatomic.f90?ref=b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f", "patch": "@@ -3,13 +3,13 @@\n \n ! { dg-final { scan-tree-dump-times \"#pragma omp atomic relaxed\" 4 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"#pragma omp atomic release\" 4 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic capture relaxed\" 4 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic capture release\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic capture relaxed\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic capture release\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic read acquire\" 1 \"original\" } }\n \n ! { dg-final { scan-tree-dump-times \"#pragma omp atomic seq_cst\" 7 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic read seq_cst\" 3 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic capture seq_cst\" 6 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic capture seq_cst\" 3 \"original\" } }\n \n \n subroutine foo ()\n@@ -36,18 +36,10 @@ subroutine foo ()\n   x = x + 2\n   v = x\n   !$omp end atomic\n-  !$omp atomic update seq_cst capture\n-  x = x + 2\n-  v = x\n-  !$omp end atomic\n   !$omp atomic seq_cst, capture\n   x = x + 2\n   v = x\n   !$omp end atomic\n-  !$omp atomic seq_cst, capture, update\n-  x = x + 2\n-  v = x\n-  !$omp end atomic\n   !$omp atomic read , seq_cst\n   v = x\n   !$omp atomic write ,seq_cst\n@@ -58,10 +50,6 @@ subroutine foo ()\n   x = x + 2\n   v = x\n   !$omp end atomic\n-  !$omp atomic capture, seq_cst ,update\n-  x = x + 2\n-  v = x\n-  !$omp end atomic\n end\n \n subroutine bar\n@@ -78,10 +66,6 @@ subroutine bar\n   i = i + 1\n   !$omp atomic relaxed\n   i = i + 1\n-  !$omp atomic relaxed capture update\n-  i = i + 1\n-  v = i\n-  !$omp end atomic\n   !$omp atomic relaxed capture\n   i = i + 1\n   v = i\n@@ -90,18 +74,10 @@ subroutine bar\n   i = i + 1\n   v = i\n   !$omp end atomic\n-  !$omp atomic update capture,release , hint (1)\n-  i = i + 1\n-  v = i\n-  !$omp end atomic\n   !$omp atomic hint(0),relaxed capture\n   i = i + 1\n   v = i\n   !$omp end atomic\n-  !$omp atomic hint(0),update relaxed capture\n-  i = i + 1\n-  v = i\n-  !$omp end atomic\n   !$omp atomic read acquire\n   v = i\n   !$omp atomic release,write"}, {"sha": "d90940d95dc7bc0f4efab953c748fe9dbb153572", "filename": "gcc/testsuite/gfortran.dg/gomp/requires-9.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Frequires-9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Frequires-9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Frequires-9.f90?ref=b2a31e2c341d96520c5fb7c1e1f1c590eb182d7f", "patch": "@@ -80,6 +80,6 @@ subroutine sub8\n ! { dg-final { scan-tree-dump-times \"#pragma omp atomic seq_cst\\[\\n\\r]\\[^\\n\\r]*&i5 =\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"#pragma omp atomic seq_cst\\[\\n\\r]\\[^\\n\\r]*&i5b =\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"#pragma omp atomic seq_cst\\[\\n\\r]\\[^\\n\\r]*&i6 =\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"#pragma omp atomic acq_rel\\[\\n\\r]\\[^\\n\\r]*&i7 =\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"#pragma omp atomic acq_rel\\[\\n\\r]\\[^\\n\\r]*&i7b =\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp atomic release\\[\\n\\r]\\[^\\n\\r]*&i7 =\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp atomic release\\[\\n\\r]\\[^\\n\\r]*&i7b =\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"#pragma omp atomic seq_cst\\[\\n\\r]\\[^\\n\\r]*&i8 =\" 1 \"original\" } }"}]}