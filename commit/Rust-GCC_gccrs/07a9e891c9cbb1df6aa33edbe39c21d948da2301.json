{"sha": "07a9e891c9cbb1df6aa33edbe39c21d948da2301", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdhOWU4OTFjOWNiYjFkZjZhYTMzZWRiZTM5YzIxZDk0OGRhMjMwMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-26T14:00:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-26T14:00:33Z"}, "message": "re PR c++/49528 (g++ fails to destroy temporary object when subobject is used to initialize a reference)\n\n\tPR c++/49528\n\t* semantics.c (potential_constant_expression_1): A TARGET_EXPR\n\twith a cleanup isn't constant.\n\t(cxx_eval_constant_expression): Likewise.\n\t* init.c (expand_default_init): Use maybe_constant_init.\n\nFrom-SVN: r175409", "tree": {"sha": "b9daf9f1abc1a91a7cacbb85a1df30a46c2c7cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9daf9f1abc1a91a7cacbb85a1df30a46c2c7cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07a9e891c9cbb1df6aa33edbe39c21d948da2301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07a9e891c9cbb1df6aa33edbe39c21d948da2301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07a9e891c9cbb1df6aa33edbe39c21d948da2301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07a9e891c9cbb1df6aa33edbe39c21d948da2301/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ff10c0ec2db831023cc9c2a3242e8580beb3ec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff10c0ec2db831023cc9c2a3242e8580beb3ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ff10c0ec2db831023cc9c2a3242e8580beb3ec8"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "117c13e98673f2a789ddb3d55add5a2ff5a67cae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=07a9e891c9cbb1df6aa33edbe39c21d948da2301", "patch": "@@ -1,3 +1,11 @@\n+2011-06-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49528\n+\t* semantics.c (potential_constant_expression_1): A TARGET_EXPR\n+\twith a cleanup isn't constant.\n+\t(cxx_eval_constant_expression): Likewise.\n+\t* init.c (expand_default_init): Use maybe_constant_init.\n+\n 2011-06-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/46400"}, {"sha": "3ceed90f3b5c49b177bb9c81d43a8c52fff9cad5", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=07a9e891c9cbb1df6aa33edbe39c21d948da2301", "patch": "@@ -1514,7 +1514,7 @@ expand_default_init (tree binfo, tree true_exp, tree exp, tree init, int flags,\n       tree fn = get_callee_fndecl (rval);\n       if (fn && DECL_DECLARED_CONSTEXPR_P (fn))\n \t{\n-\t  tree e = maybe_constant_value (rval);\n+\t  tree e = maybe_constant_init (rval);\n \t  if (TREE_CONSTANT (e))\n \t    rval = build2 (INIT_EXPR, type, exp, e);\n \t}"}, {"sha": "5404c9f2a56995210e1c4b9544b48493bff5c6c4", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=07a9e891c9cbb1df6aa33edbe39c21d948da2301", "patch": "@@ -7020,6 +7020,16 @@ cxx_eval_constant_expression (const constexpr_call *call, tree t,\n       break;\n \n     case TARGET_EXPR:\n+      /* A cleanup isn't constant.  */\n+      if (TARGET_EXPR_CLEANUP (t))\n+\t{\n+\t  if (!allow_non_constant)\n+\t    error (\"temporary of type %qT needing destruction in a \"\n+\t\t   \"constant expression\", TREE_TYPE (t));\n+\t  *non_constant_p = true;\n+\t  break;\n+\t}\n+      /* else fall through.  */\n     case INIT_EXPR:\n       /* Pass false for 'addr' because these codes indicate\n \t initialization of a temporary.  */\n@@ -7840,8 +7850,16 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n       return potential_constant_expression_1 (TREE_OPERAND (t, 1),\n \t\t\t\t\t      want_rval, flags);\n \n-    case INIT_EXPR:\n     case TARGET_EXPR:\n+      /* A cleanup isn't constant.  */\n+      if (TARGET_EXPR_CLEANUP (t))\n+\t{\n+\t  if (flags & tf_error)\n+\t    error (\"temporary of type %qT needing destruction in a \"\n+\t\t   \"constant expression\", TREE_TYPE (t));\n+\t  return false;\n+\t}\n+    case INIT_EXPR:\n       return potential_constant_expression_1 (TREE_OPERAND (t, 1),\n \t\t\t\t\t      rval, flags);\n "}, {"sha": "01b111cef6b2a7340509b0c0c4902dadf75bfd5c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07a9e891c9cbb1df6aa33edbe39c21d948da2301", "patch": "@@ -1,3 +1,9 @@\n+2011-06-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49528\n+\t* g++.dg/init/ref19.C: New.\n+\t* g++.dg/cpp0x/constexpr-cleanup.C: New.\n+\n 2011-06-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/48377"}, {"sha": "b3fb9a8deca9d763cb2603def09944c19815a2fc", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-cleanup.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cleanup.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cleanup.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cleanup.C?ref=07a9e891c9cbb1df6aa33edbe39c21d948da2301", "patch": "@@ -0,0 +1,9 @@\n+// { dg-options -std=c++0x }\n+\n+struct A\n+{\n+  int i;\n+  ~A();\n+};\n+\n+constexpr int i = A().i;\t// { dg-error \"destruction\" }"}, {"sha": "ed78c939ba63424ebdc137089cbe099cff300dc0", "filename": "gcc/testsuite/g++.dg/init/ref19.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07a9e891c9cbb1df6aa33edbe39c21d948da2301/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref19.C?ref=07a9e891c9cbb1df6aa33edbe39c21d948da2301", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/49528\n+// { dg-do run }\n+\n+int d;\n+\n+struct A\n+{\n+  int i;\n+  ~A() { ++d; };\n+};\n+\n+int main()\n+{\n+  const int &r = A().i;\n+  if (d != 1)\n+    return 1;\n+}"}]}