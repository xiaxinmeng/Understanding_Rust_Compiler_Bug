{"sha": "2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU4OGM5ZTk3MGViZWE4Y2Q5MWQzYmE5YjM4Y2NkOTA5ZTA2M2MzMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-03-05T14:10:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-03-05T14:10:07Z"}, "message": "re PR c++/38908 (Unexplained \"'<anonymous>' is used uninitialized in this function\" warning in cc1plus -m64)\n\n        PR c++/38908\n        * class.c (is_really_empty_class): New fn.\n        * cp-tree.h: Declare it.\n        * cp-objcp-common.c (cp_expr_size): Use it.\n\nFrom-SVN: r144643", "tree": {"sha": "471c77be303fe10eedd997165d69dae2bf932fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/471c77be303fe10eedd997165d69dae2bf932fad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee0ee7e2c1fd52af141b14c0230dcf6cd50c2b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0ee7e2c1fd52af141b14c0230dcf6cd50c2b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee0ee7e2c1fd52af141b14c0230dcf6cd50c2b35"}], "stats": {"total": 63, "additions": 61, "deletions": 2}, "files": [{"sha": "31a626bc1ade710344b879261415e2f3675e348a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "patch": "@@ -1,5 +1,10 @@\n 2009-03-04  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/38908\n+\t* class.c (is_really_empty_class): New fn.\n+\t* cp-tree.h: Declare it.\n+\t* cp-objcp-common.c (cp_expr_size): Use it.\n+\n \tPR c++/13549\n \t* semantics.c (perform_koenig_lookup): Handle TEMPLATE_ID_EXPR.\n \t* parser.c (cp_parser_postfix_expression): Call it for "}, {"sha": "b8553effc03a4900a8c8d8c2e97089ecafd79f17", "filename": "gcc/cp/class.c", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "patch": "@@ -6461,7 +6461,7 @@ is_empty_class (tree type)\n   if (type == error_mark_node)\n     return 0;\n \n-  if (! MAYBE_CLASS_TYPE_P (type))\n+  if (! CLASS_TYPE_P (type))\n     return 0;\n \n   /* In G++ 3.2, whether or not a class was empty was determined by\n@@ -6501,6 +6501,37 @@ contains_empty_class_p (tree type)\n   return false;\n }\n \n+/* Returns true if TYPE contains no actual data, just various\n+   possible combinations of empty classes.  */\n+\n+bool\n+is_really_empty_class (tree type)\n+{\n+  if (is_empty_class (type))\n+    return true;\n+  if (CLASS_TYPE_P (type))\n+    {\n+      tree field;\n+      tree binfo;\n+      tree base_binfo;\n+      int i;\n+\n+      for (binfo = TYPE_BINFO (type), i = 0;\n+\t   BINFO_BASE_ITERATE (binfo, i, base_binfo); ++i)\n+\tif (!is_really_empty_class (BINFO_TYPE (base_binfo)))\n+\t  return false;\n+      for (field = TYPE_FIELDS (type); field; field = TREE_CHAIN (field))\n+\tif (TREE_CODE (field) == FIELD_DECL\n+\t    && !DECL_ARTIFICIAL (field)\n+\t    && !is_really_empty_class (TREE_TYPE (field)))\n+\t  return false;\n+      return true;\n+    }\n+  else if (TREE_CODE (type) == ARRAY_TYPE)\n+    return is_really_empty_class (TREE_TYPE (type));\n+  return false;\n+}\n+\n /* Note that NAME was looked up while the current class was being\n    defined and that the result of that lookup was DECL.  */\n "}, {"sha": "fefafb1ac7ea9390a6092edd0e63ef0d38526e75", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "patch": "@@ -101,7 +101,7 @@ cp_expr_size (const_tree exp)\n \t     constructed, this is a valid transformation.  */\n \t  || CP_AGGREGATE_TYPE_P (type))\n \t/* This would be wrong for a type with virtual bases.  */\n-\treturn (is_empty_class (type)\n+\treturn (is_really_empty_class (type)\n \t\t? size_zero_node\n \t\t: CLASSTYPE_SIZE_UNIT (type));\n       else"}, {"sha": "aedf5b96749b44388b3dec2728a09f7c6c2e96c2", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "patch": "@@ -4240,6 +4240,7 @@ extern void finish_struct_1\t\t\t(tree);\n extern int resolves_to_fixed_type_p\t\t(tree, int *);\n extern void init_class_processing\t\t(void);\n extern int is_empty_class\t\t\t(tree);\n+extern bool is_really_empty_class\t\t(tree);\n extern void pushclass\t\t\t\t(tree);\n extern void popclass\t\t\t\t(void);\n extern void push_nested_class\t\t\t(tree);"}, {"sha": "37c4074dc87374238cbb4cb57cd284135e3da852", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "patch": "@@ -1,3 +1,8 @@\n+2009-03-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/38908\n+\t* g++.dg/warn/Wuninitialized-3.C: New test.\n+\n 2009-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/39379"}, {"sha": "dc3be3f67fab8c2679c785fbaad0ef5d76969b5f", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2588c9e970ebea8cd91d3ba9b38ccd909e063c30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-3.C?ref=2588c9e970ebea8cd91d3ba9b38ccd909e063c30", "patch": "@@ -0,0 +1,17 @@\n+// PR C++/38908\n+// { dg-options \"-Wuninitialized -O\" }\n+\n+struct empty {};\n+\n+struct dfs_visitor {\n+    dfs_visitor() { }\n+    empty m_vis;\n+};\n+\n+void bar(const dfs_visitor&);\n+void foo(void)\n+{\n+  dfs_visitor vis;\n+  dfs_visitor vis2 = vis;\n+  bar (vis2);\n+}"}]}