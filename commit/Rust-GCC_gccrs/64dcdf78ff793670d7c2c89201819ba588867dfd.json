{"sha": "64dcdf78ff793670d7c2c89201819ba588867dfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRkY2RmNzhmZjc5MzY3MGQ3YzJjODkyMDE4MTliYTU4ODg2N2RmZA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-01-15T18:22:31Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-01-15T18:22:31Z"}, "message": "* gcc.dg/c90-float-1.c, gcc.dg/c99-float-1.c: New tests.\n\nFrom-SVN: r39047", "tree": {"sha": "6965a947cc7b991122b6b410b3babcb8c7814776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6965a947cc7b991122b6b410b3babcb8c7814776"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64dcdf78ff793670d7c2c89201819ba588867dfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64dcdf78ff793670d7c2c89201819ba588867dfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64dcdf78ff793670d7c2c89201819ba588867dfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64dcdf78ff793670d7c2c89201819ba588867dfd/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b598fa08bb33d56b25fadc35545b498f26a44be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b598fa08bb33d56b25fadc35545b498f26a44be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b598fa08bb33d56b25fadc35545b498f26a44be"}], "stats": {"total": 270, "additions": 270, "deletions": 0}, "files": [{"sha": "2c6ff5a8ee457bc07d2c92c95c00f877659dc39d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64dcdf78ff793670d7c2c89201819ba588867dfd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64dcdf78ff793670d7c2c89201819ba588867dfd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64dcdf78ff793670d7c2c89201819ba588867dfd", "patch": "@@ -1,3 +1,7 @@\n+2001-01-15  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.dg/c90-float-1.c, gcc.dg/c99-float-1.c: New tests.\n+\n 2001-01-15  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* g77.f-torture/compile/20010115.f: New test."}, {"sha": "39a585bcd09bc4c6bc36c3c56136552ef075fbaa", "filename": "gcc/testsuite/gcc.dg/c90-float-1.c", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64dcdf78ff793670d7c2c89201819ba588867dfd/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-float-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64dcdf78ff793670d7c2c89201819ba588867dfd/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-float-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-float-1.c?ref=64dcdf78ff793670d7c2c89201819ba588867dfd", "patch": "@@ -0,0 +1,133 @@\n+/* Test for <float.h> C90 macros.  */\n+/* Origin: Joseph Myers <jsm28@cam.ac.uk> */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=iso9899:1990 -pedantic-errors\" } */\n+\n+/* This test checks that the C90 macros (but not the C99 ones) are defined;\n+   it does not check the correctness of their values.  */\n+\n+#include <float.h>\n+\n+#ifndef FLT_ROUNDS\n+#error \"FLT_ROUNDS undefined\"\n+#endif\n+\n+#ifndef FLT_RADIX\n+#error \"FLT_RADIX undefined\"\n+#endif\n+\n+#ifndef FLT_MANT_DIG\n+#error \"FLT_MANT_DIG undefined\"\n+#endif\n+\n+#ifndef FLT_DIG\n+#error \"FLT_DIG undefined\"\n+#endif\n+\n+#ifndef FLT_MIN_EXP\n+#error \"FLT_MIN_EXP undefined\"\n+#endif\n+\n+#ifndef FLT_MIN_10_EXP\n+#error \"FLT_MIN_10_EXP undefined\"\n+#endif\n+\n+#ifndef FLT_MAX_EXP\n+#error \"FLT_MAX_EXP undefined\"\n+#endif\n+\n+#ifndef FLT_MAX_10_EXP\n+#error \"FLT_MAX_10_EXP undefined\"\n+#endif\n+\n+#ifndef FLT_MAX\n+#error \"FLT_MAX undefined\"\n+#endif\n+\n+#ifndef FLT_EPSILON\n+#error \"FLT_EPSILON undefined\"\n+#endif\n+\n+#ifndef FLT_MIN\n+#error \"FLT_MIN undefined\"\n+#endif\n+\n+#ifndef DBL_MANT_DIG\n+#error \"DBL_MANT_DIG undefined\"\n+#endif\n+\n+#ifndef DBL_DIG\n+#error \"DBL_DIG undefined\"\n+#endif\n+\n+#ifndef DBL_MIN_EXP\n+#error \"DBL_MIN_EXP undefined\"\n+#endif\n+\n+#ifndef DBL_MIN_10_EXP\n+#error \"DBL_MIN_10_EXP undefined\"\n+#endif\n+\n+#ifndef DBL_MAX_EXP\n+#error \"DBL_MAX_EXP undefined\"\n+#endif\n+\n+#ifndef DBL_MAX_10_EXP\n+#error \"DBL_MAX_10_EXP undefined\"\n+#endif\n+\n+#ifndef DBL_MAX\n+#error \"DBL_MAX undefined\"\n+#endif\n+\n+#ifndef DBL_EPSILON\n+#error \"DBL_EPSILON undefined\"\n+#endif\n+\n+#ifndef DBL_MIN\n+#error \"DBL_MIN undefined\"\n+#endif\n+\n+#ifndef LDBL_MANT_DIG\n+#error \"LDBL_MANT_DIG undefined\"\n+#endif\n+\n+#ifndef LDBL_DIG\n+#error \"LDBL_DIG undefined\"\n+#endif\n+\n+#ifndef LDBL_MIN_EXP\n+#error \"LDBL_MIN_EXP undefined\"\n+#endif\n+\n+#ifndef LDBL_MIN_10_EXP\n+#error \"LDBL_MIN_10_EXP undefined\"\n+#endif\n+\n+#ifndef LDBL_MAX_EXP\n+#error \"LDBL_MAX_EXP undefined\"\n+#endif\n+\n+#ifndef LDBL_MAX_10_EXP\n+#error \"LDBL_MAX_10_EXP undefined\"\n+#endif\n+\n+#ifndef LDBL_MAX\n+#error \"LDBL_MAX undefined\"\n+#endif\n+\n+#ifndef LDBL_EPSILON\n+#error \"LDBL_EPSILON undefined\"\n+#endif\n+\n+#ifndef LDBL_MIN\n+#error \"LDBL_MIN undefined\"\n+#endif\n+\n+#ifdef FLT_EVAL_METHOD\n+#error \"FLT_EVAL_METHOD defined\"\n+#endif\n+\n+#ifdef DECIMAL_DIG\n+#error \"DECIMAL_DIG defined\"\n+#endif"}, {"sha": "07fb9ee8bfb010e2cb0f2fa9aca0e3af0b57e090", "filename": "gcc/testsuite/gcc.dg/c99-float-1.c", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64dcdf78ff793670d7c2c89201819ba588867dfd/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-float-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64dcdf78ff793670d7c2c89201819ba588867dfd/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-float-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-float-1.c?ref=64dcdf78ff793670d7c2c89201819ba588867dfd", "patch": "@@ -0,0 +1,133 @@\n+/* Test for <float.h> C99 macros.  */\n+/* Origin: Joseph Myers <jsm28@cam.ac.uk> */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+\n+/* This test checks that the C99 macros are defined;\n+   it does not check the correctness of their values.  */\n+\n+#include <float.h>\n+\n+#ifndef FLT_ROUNDS\n+#error \"FLT_ROUNDS undefined\"\n+#endif\n+\n+#ifndef FLT_RADIX\n+#error \"FLT_RADIX undefined\"\n+#endif\n+\n+#ifndef FLT_MANT_DIG\n+#error \"FLT_MANT_DIG undefined\"\n+#endif\n+\n+#ifndef FLT_DIG\n+#error \"FLT_DIG undefined\"\n+#endif\n+\n+#ifndef FLT_MIN_EXP\n+#error \"FLT_MIN_EXP undefined\"\n+#endif\n+\n+#ifndef FLT_MIN_10_EXP\n+#error \"FLT_MIN_10_EXP undefined\"\n+#endif\n+\n+#ifndef FLT_MAX_EXP\n+#error \"FLT_MAX_EXP undefined\"\n+#endif\n+\n+#ifndef FLT_MAX_10_EXP\n+#error \"FLT_MAX_10_EXP undefined\"\n+#endif\n+\n+#ifndef FLT_MAX\n+#error \"FLT_MAX undefined\"\n+#endif\n+\n+#ifndef FLT_EPSILON\n+#error \"FLT_EPSILON undefined\"\n+#endif\n+\n+#ifndef FLT_MIN\n+#error \"FLT_MIN undefined\"\n+#endif\n+\n+#ifndef DBL_MANT_DIG\n+#error \"DBL_MANT_DIG undefined\"\n+#endif\n+\n+#ifndef DBL_DIG\n+#error \"DBL_DIG undefined\"\n+#endif\n+\n+#ifndef DBL_MIN_EXP\n+#error \"DBL_MIN_EXP undefined\"\n+#endif\n+\n+#ifndef DBL_MIN_10_EXP\n+#error \"DBL_MIN_10_EXP undefined\"\n+#endif\n+\n+#ifndef DBL_MAX_EXP\n+#error \"DBL_MAX_EXP undefined\"\n+#endif\n+\n+#ifndef DBL_MAX_10_EXP\n+#error \"DBL_MAX_10_EXP undefined\"\n+#endif\n+\n+#ifndef DBL_MAX\n+#error \"DBL_MAX undefined\"\n+#endif\n+\n+#ifndef DBL_EPSILON\n+#error \"DBL_EPSILON undefined\"\n+#endif\n+\n+#ifndef DBL_MIN\n+#error \"DBL_MIN undefined\"\n+#endif\n+\n+#ifndef LDBL_MANT_DIG\n+#error \"LDBL_MANT_DIG undefined\"\n+#endif\n+\n+#ifndef LDBL_DIG\n+#error \"LDBL_DIG undefined\"\n+#endif\n+\n+#ifndef LDBL_MIN_EXP\n+#error \"LDBL_MIN_EXP undefined\"\n+#endif\n+\n+#ifndef LDBL_MIN_10_EXP\n+#error \"LDBL_MIN_10_EXP undefined\"\n+#endif\n+\n+#ifndef LDBL_MAX_EXP\n+#error \"LDBL_MAX_EXP undefined\"\n+#endif\n+\n+#ifndef LDBL_MAX_10_EXP\n+#error \"LDBL_MAX_10_EXP undefined\"\n+#endif\n+\n+#ifndef LDBL_MAX\n+#error \"LDBL_MAX undefined\"\n+#endif\n+\n+#ifndef LDBL_EPSILON\n+#error \"LDBL_EPSILON undefined\"\n+#endif\n+\n+#ifndef LDBL_MIN\n+#error \"LDBL_MIN undefined\"\n+#endif\n+\n+#ifndef FLT_EVAL_METHOD\n+#error \"FLT_EVAL_METHOD undefined\"\n+#endif\n+\n+#ifndef DECIMAL_DIG\n+#error \"DECIMAL_DIG undefined\"\n+#endif"}]}