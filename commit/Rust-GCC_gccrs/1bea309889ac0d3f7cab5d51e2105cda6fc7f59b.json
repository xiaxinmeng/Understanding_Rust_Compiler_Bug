{"sha": "1bea309889ac0d3f7cab5d51e2105cda6fc7f59b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJlYTMwOTg4OWFjMGQzZjdjYWI1ZDUxZTIxMDVjZGE2ZmM3ZjU5Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-12-13T17:36:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-12-13T17:36:20Z"}, "message": "re PR tree-optimization/42357 (another ice in create_tmp_var)\n\n2009-12-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42357\n\t* tree-sra.c (sra_modify_assign): Do not tear apart struct copies.\n\n\t* g++.dg/torture/pr42357.C: New testcase.\n\nFrom-SVN: r155193", "tree": {"sha": "23844ce3a0dff07fc11d48bb663df234c6fea161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23844ce3a0dff07fc11d48bb663df234c6fea161"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70c5cc5d72b5ce7bc8b5601f7e1817b9a021678f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70c5cc5d72b5ce7bc8b5601f7e1817b9a021678f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70c5cc5d72b5ce7bc8b5601f7e1817b9a021678f"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "c0e4634def9a411e50acab0f7fbcad5014f3ea8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bea309889ac0d3f7cab5d51e2105cda6fc7f59b", "patch": "@@ -1,3 +1,8 @@\n+2009-12-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42357\n+\t* tree-sra.c (sra_modify_assign): Do not tear apart struct copies.\n+\n 2009-12-12  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.c (need_assembler_name_p): Abstract decls do not need"}, {"sha": "da700243eacbbd7ab7660a1008d205b89969d863", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1bea309889ac0d3f7cab5d51e2105cda6fc7f59b", "patch": "@@ -1,3 +1,8 @@\n+2009-12-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42357\n+\t* g++.dg/torture/pr42357.C: New testcase.\n+\n 2009-12-11  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/42257"}, {"sha": "1a1d64e4f8e9fb4cffd158de1a9428a2f237ead3", "filename": "gcc/testsuite/g++.dg/torture/pr42357.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42357.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42357.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42357.C?ref=1bea309889ac0d3f7cab5d51e2105cda6fc7f59b", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+typedef unsigned char uint8;\n+typedef unsigned int uint32;\n+class PixelARGB {\n+public:\n+    ~PixelARGB() throw() { }\n+    PixelARGB (const uint32 argb_) throw() : argb (argb_)     { }\n+    inline __attribute__((always_inline)) uint8 getRed() const throw() {\n+\treturn components.r;\n+    }\n+    union     {\n+\tuint32 argb;\n+\tstruct         {\n+\t    uint8 b, g, r, a;\n+\t} components;\n+    };\n+};\n+class Colour {\n+public:\n+    Colour() throw() : argb (0) {};\n+    uint8 getRed() const throw() {\n+\treturn argb.getRed();\n+    }\n+    PixelARGB argb;\n+};\n+uint8 writeImage (void) {\n+    Colour pixel;\n+    pixel = Colour ();\n+    return pixel.getRed();\n+}"}, {"sha": "8fdbb727607342ea6f871dfe2ead140bef3299af", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bea309889ac0d3f7cab5d51e2105cda6fc7f59b/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=1bea309889ac0d3f7cab5d51e2105cda6fc7f59b", "patch": "@@ -2441,7 +2441,8 @@ sra_modify_assign (gimple *stmt, gimple_stmt_iterator *gsi,\n \t  if (!useless_type_conversion_p (TREE_TYPE (lhs), TREE_TYPE (rhs)))\n \t    {\n \t      rhs = fold_build1_loc (loc, VIEW_CONVERT_EXPR, TREE_TYPE (lhs), rhs);\n-\t      if (!is_gimple_reg (lhs))\n+\t      if (is_gimple_reg_type (TREE_TYPE (lhs))\n+\t\t  && TREE_CODE (lhs) != SSA_NAME)\n \t\tforce_gimple_rhs = true;\n \t    }\n \t}"}]}