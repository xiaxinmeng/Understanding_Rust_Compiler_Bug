{"sha": "7cffd12d38191aa05ef9049d80d4714d6e52711a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NmZmQxMmQzODE5MWFhMDVlZjkwNDlkODBkNDcxNGQ2ZTUyNzExYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-11-22T15:51:14Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-11-22T15:51:14Z"}, "message": "cleanup2.C: New test.\n\n\t* g++.old-deja/g++.eh/cleanup2.C: New test.\n\t* g++.old-deja/g++.ext/pretty2.C: New test.\n\t* g++.old-deja/g++.ext/pretty3.C: New test.\n\t* g++.old-deja/g++.other/debug6.C: New test.\n\nFrom-SVN: r30615", "tree": {"sha": "32e2495613efcb98e773c331de5fd5c222853079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32e2495613efcb98e773c331de5fd5c222853079"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cffd12d38191aa05ef9049d80d4714d6e52711a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cffd12d38191aa05ef9049d80d4714d6e52711a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cffd12d38191aa05ef9049d80d4714d6e52711a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cffd12d38191aa05ef9049d80d4714d6e52711a/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3201a2ce627aea75f731983118b724f40c8b024", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3201a2ce627aea75f731983118b724f40c8b024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3201a2ce627aea75f731983118b724f40c8b024"}], "stats": {"total": 223, "additions": 223, "deletions": 0}, "files": [{"sha": "8cb182da8b41d2ab481cba24b9837b53de5c045f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7cffd12d38191aa05ef9049d80d4714d6e52711a", "patch": "@@ -1,3 +1,10 @@\n+1999-11-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.old-deja/g++.eh/cleanup2.C: New test.\n+\t* g++.old-deja/g++.ext/pretty2.C: New test.\n+\t* g++.old-deja/g++.ext/pretty3.C: New test.\n+\t* g++.old-deja/g++.other/debug6.C: New test.\n+\n 1999-11-19  Geoffrey Keating  <geoffk@cygnus.com>\n \n \t* gcc.c-torture/execute/991118-1.c: Also test case"}, {"sha": "08b3c5dc9c24ffd76181e0b854cee0182d086376", "filename": "gcc/testsuite/g++.old-deja/g++.eh/cleanup2.C", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcleanup2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcleanup2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcleanup2.C?ref=7cffd12d38191aa05ef9049d80d4714d6e52711a", "patch": "@@ -0,0 +1,54 @@\n+//  Copyright (C) 1999 Free Software Foundation, Inc.\n+//  Contributed by Nathan Sidwell 21 Nov 1999 <nathan@acm.org>\n+\n+// make sure we don't call base dtors, if we failed to call the\n+// base ctor due to exception throwing\n+\n+// execution test - XFAIL *-*-*\n+\n+#include <stdio.h>\n+\n+static bool bad = false;\n+\n+static int thrower ()\n+{\n+  printf (\"in %s\\n\", __PRETTY_FUNCTION__);\n+  throw 0;\n+  return 0;\n+}\n+\n+struct X\n+{\n+  X (int) throw (int);\n+  ~X () throw ();\n+};\n+\n+X::X (int) throw (int)\n+  {printf (\"in ctor X %s\\n\", __PRETTY_FUNCTION__); bad = true;}\n+X::~X () throw ()\n+  {printf (\"in dtor X %s\\n\", __PRETTY_FUNCTION__); bad = true;}\n+\n+struct X1 {};\n+struct Y : X\n+{\n+  Y() throw (int);\n+  ~Y() throw ();\n+};\n+Y::Y() throw (int)\n+  : X(thrower ())   // throws, so X::X is never called\n+  {printf (\"in ctor Y%s\\n\", __PRETTY_FUNCTION__); bad = true;}\n+Y::~Y() throw ()\n+  {printf (\"in dtor Y%s\\n\", __PRETTY_FUNCTION__); bad = true;}\n+\n+int main ()\n+{\n+  try\n+    {\n+      Y y;\n+    }\n+  catch (...)\n+    {\n+      printf (\"caught\\n\");\n+    }\n+  return bad;\n+}"}, {"sha": "14eb5276ef56a0dbfa5213406deebbde884deaca", "filename": "gcc/testsuite/g++.old-deja/g++.ext/pretty2.C", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty2.C?ref=7cffd12d38191aa05ef9049d80d4714d6e52711a", "patch": "@@ -0,0 +1,88 @@\n+// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 21 Nov 1999 <nathan@acm.org>\n+\n+// make sure __FUNCTION__ and __PRETTY_FUNCTION__ work in member functions\n+\n+// execution test - XFAIL *-*-*\n+\n+#include <stdio.h>\n+#include <string.h>\n+\n+static bool bad = false;\n+\n+struct X\n+{\n+  X ();\n+  ~X ();\n+  void fn ();\n+  operator int ();\n+};\n+\n+X::X ()\n+{\n+  char const *function = __FUNCTION__;\n+  char const *pretty = __PRETTY_FUNCTION__;\n+  \n+  printf (\"ctor\\n\");\n+  printf (\"__FUNCTION__ %s\\n\", function);\n+  printf (\"__PRETTY_FUNCTION__ %s\\n\", pretty);\n+  \n+  if (strcmp (function, \"X\"))\n+    bad = true;\n+  if (strcmp (pretty, \"X::X ()\"))\n+    bad = true;\n+}\n+X::~X ()\n+{\n+  char const *function = __FUNCTION__;\n+  char const *pretty = __PRETTY_FUNCTION__;\n+  \n+  printf (\"dtor\\n\");\n+  printf (\"__FUNCTION__ %s\\n\", function);\n+  printf (\"__PRETTY_FUNCTION__ %s\\n\", pretty);\n+  \n+  if (strcmp (function, \"X\"))\n+    bad = true;\n+  if (strcmp (pretty, \"X::~X ()\"))\n+    bad = true;\n+}\n+void X::fn ()\n+{\n+  char const *function = __FUNCTION__;\n+  char const *pretty = __PRETTY_FUNCTION__;\n+  \n+  printf (\"member fn\\n\");\n+  printf (\"__FUNCTION__ %s\\n\", function);\n+  printf (\"__PRETTY_FUNCTION__ %s\\n\", pretty);\n+  \n+  if (strcmp (function, \"fn\"))\n+    bad = true;\n+  if (strcmp (pretty, \"void X::fn ()\"))\n+    bad = true;\n+}\n+X::operator int ()\n+{\n+  char const *function = __FUNCTION__;\n+  char const *pretty = __PRETTY_FUNCTION__;\n+  \n+  printf (\"conversion\\n\");\n+  printf (\"__FUNCTION__ %s\\n\", function);\n+  printf (\"__PRETTY_FUNCTION__ %s\\n\", pretty);\n+  \n+  if (strcmp (function, \"__opi\"))\n+    bad = true;\n+  if (strcmp (pretty, \"X::operator int ()\"))\n+    bad = true;\n+  return 0;\n+}\n+\n+int main ()\n+{\n+  {\n+    X x;\n+    \n+    x.fn ();\n+    (void)int (x);\n+  }\n+  return bad;\n+}"}, {"sha": "148b3badd6f9891fc40324da0911cd38f72a7f52", "filename": "gcc/testsuite/g++.old-deja/g++.ext/pretty3.C", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty3.C?ref=7cffd12d38191aa05ef9049d80d4714d6e52711a", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 21 Nov 1999 <nathan@acm.org>\n+\n+// make sure __FUNCTION__ and __PRETTY_FUNCTION__ work in templates\n+\n+// execution test - XFAIL *-*-*\n+\n+#include <stdio.h>\n+#include <string.h>\n+\n+static bool bad = false;\n+\n+template<class T> void f1 (T)\n+{\n+  char const *function = __FUNCTION__;\n+  char const *pretty = __PRETTY_FUNCTION__;\n+  \n+  printf (\"generic\\n\");\n+  printf (\"__FUNCTION__ %s\\n\", function);\n+  printf (\"__PRETTY_FUNCTION__ %s\\n\", pretty);\n+  \n+  if (strcmp (function, \"f1\"))\n+    bad = true;\n+  if (strcmp (pretty, \"void f1<float> (float)\")) // only for float instantiation\n+    bad = true;\n+}\n+\n+template<> void f1<int> (int)\n+{\n+  char const *function = __FUNCTION__;\n+  char const *pretty = __PRETTY_FUNCTION__;\n+  \n+  printf (\"specialized\\n\");\n+  printf (\"__FUNCTION__ %s\\n\", function);\n+  printf (\"__PRETTY_FUNCTION__ %s\\n\", pretty);\n+  \n+  if (strcmp (function, \"f1\"))\n+    bad = true;\n+  if (strcmp (pretty, \"void f1<int> (int)\"))\n+    bad = true;\n+}\n+\n+int main ()\n+{\n+  f1(0);    // f1<int>\n+  f1(0.0f); // f1<float>\n+  return bad;\n+}"}, {"sha": "8fd5f9f0ecfa8caeadce82548bc2c0aefb6b038c", "filename": "gcc/testsuite/g++.old-deja/g++.other/debug6.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cffd12d38191aa05ef9049d80d4714d6e52711a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug6.C?ref=7cffd12d38191aa05ef9049d80d4714d6e52711a", "patch": "@@ -0,0 +1,26 @@\n+// Build don't link:\n+// Special g++ Options: -g -O2\n+\n+//  Copyright (C) 1999 Free Software Foundation, Inc.\n+//  Contributed by Nathan Sidwell 21 Nov 1999 <nathan@acm.org>\n+\n+// This causes assember relocation errors\n+\n+// excess errors test - XFAIL *-*-*\n+\n+struct X\n+{\n+  virtual ~X () {}\n+};\n+\n+struct Y\n+{\n+  Y (){};\n+};\n+\n+void foo ()\n+{\n+  X *x = new X;\n+  x->~X ();\n+  Y ys[2];\n+}"}]}