{"sha": "b65b81f93559efccba6253afefbe639526fe9d8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY1YjgxZjkzNTU5ZWZjY2JhNjI1M2FmZWZiZTYzOTUyNmZlOWQ4Yw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-09-11T13:34:57Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-09-11T13:34:57Z"}, "message": "re PR libfortran/20179 (cannot mix C and Fortran I/O)\n\n\tPR libfortran/20179\n\t* io/unix.c (is_preconnected): Add function to test if a stream\n\tcorresponds to a preconnected unit.\n\t* io/io.h: Add prototype for is_preconnected.\n\t* io/transfer.c (data_transfer_init): Do not truncate\n\tpreconnected units.\n\nFrom-SVN: r104141", "tree": {"sha": "35236cb14e10c63da0654a19ffe321f96fc4ba9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35236cb14e10c63da0654a19ffe321f96fc4ba9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b65b81f93559efccba6253afefbe639526fe9d8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65b81f93559efccba6253afefbe639526fe9d8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b65b81f93559efccba6253afefbe639526fe9d8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65b81f93559efccba6253afefbe639526fe9d8c/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e182017e46105b6dc5d9a1f399a03eaf26d30016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e182017e46105b6dc5d9a1f399a03eaf26d30016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e182017e46105b6dc5d9a1f399a03eaf26d30016"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "d36e500ddca48a3c424a03a44428b7487785fa86", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65b81f93559efccba6253afefbe639526fe9d8c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65b81f93559efccba6253afefbe639526fe9d8c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=b65b81f93559efccba6253afefbe639526fe9d8c", "patch": "@@ -1,3 +1,12 @@\n+2005-09-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20179\n+\t* io/unix.c (is_preconnected): Add function to test if a stream\n+\tcorresponds to a preconnected unit.\n+\t* io/io.h: Add prototype for is_preconnected.\n+\t* io/transfer.c (data_transfer_init): Do not truncate\n+\tpreconnected units.\n+\n 2005-09-10  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n \n \t* io/unix.c: Remove mmap code."}, {"sha": "fc8b8873d8a11071c2692ad2785d86ed82f06387", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65b81f93559efccba6253afefbe639526fe9d8c/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65b81f93559efccba6253afefbe639526fe9d8c/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=b65b81f93559efccba6253afefbe639526fe9d8c", "patch": "@@ -493,6 +493,9 @@ internal_proto(file_position);\n extern int is_seekable (stream *);\n internal_proto(is_seekable);\n \n+extern int is_preconnected (stream *);\n+internal_proto(is_preconnected);\n+\n extern void empty_internal_buffer(stream *);\n internal_proto(empty_internal_buffer);\n "}, {"sha": "cb06a79fba51bf495d8f20ef54091853ff6abee0", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65b81f93559efccba6253afefbe639526fe9d8c/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65b81f93559efccba6253afefbe639526fe9d8c/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=b65b81f93559efccba6253afefbe639526fe9d8c", "patch": "@@ -1183,7 +1183,7 @@ data_transfer_init (int read_flag)\n      it is always safe to truncate the file on the first write */\n   if (g.mode == WRITING\n       && current_unit->flags.access == ACCESS_SEQUENTIAL\n-      && current_unit->last_record == 0)\n+      && current_unit->last_record == 0 && !is_preconnected(current_unit->s))\n \tstruncate(current_unit->s);\n \n   current_unit->mode = g.mode;"}, {"sha": "ca96c229b48c8ffb683aebcb0fa1b6b41fd574bb", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65b81f93559efccba6253afefbe639526fe9d8c/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65b81f93559efccba6253afefbe639526fe9d8c/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=b65b81f93559efccba6253afefbe639526fe9d8c", "patch": "@@ -218,6 +218,17 @@ fix_fd (int fd)\n   return fd;\n }\n \n+int\n+is_preconnected (stream * s)\n+{\n+  int fd;\n+\n+  fd = ((unix_stream *) s)->fd;\n+  if (fd == STDIN_FILENO || fd == STDOUT_FILENO || fd == STDERR_FILENO)\n+    return 1;\n+  else\n+    return 0;\n+}\n \n /* write()-- Write a buffer to a descriptor, allowing for short writes */\n "}]}