{"sha": "7f47359462f00e740c20153e4ecfb4bfb66341d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y0NzM1OTQ2MmYwMGU3NDBjMjAxNTNlNGVjZmI0YmZiNjYzNDFkNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-02-28T18:13:06Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-02-28T18:13:06Z"}, "message": "h8300.c: Fix formatting.\n\n\t* config/h8300/h8300.c: Fix formatting.\n\t* config/h8300/h8300.h: Likewise.\n\nFrom-SVN: r50150", "tree": {"sha": "0912a4bc6aa0c79cd5c88feac8abbe959462f682", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0912a4bc6aa0c79cd5c88feac8abbe959462f682"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f47359462f00e740c20153e4ecfb4bfb66341d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f47359462f00e740c20153e4ecfb4bfb66341d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f47359462f00e740c20153e4ecfb4bfb66341d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f47359462f00e740c20153e4ecfb4bfb66341d7/comments", "author": null, "committer": null, "parents": [{"sha": "28dc79bca60a48843819e35da335b832bf80d452", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28dc79bca60a48843819e35da335b832bf80d452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28dc79bca60a48843819e35da335b832bf80d452"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "62cc8e0c4019a879c9c7190a7228702fde7becb9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f47359462f00e740c20153e4ecfb4bfb66341d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f47359462f00e740c20153e4ecfb4bfb66341d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f47359462f00e740c20153e4ecfb4bfb66341d7", "patch": "@@ -1,3 +1,8 @@\n+2002-02-28  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c: Fix formatting.\n+\t* config/h8300/h8300.h: Likewise.\n+\n 2002-02-28  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n \n \t* config/avr/avr.c (avr_hard_regno_mode_ok): Do not allow r29"}, {"sha": "7d984544efbdb7c081909d1a7256780b5af4aab7", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f47359462f00e740c20153e4ecfb4bfb66341d7/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f47359462f00e740c20153e4ecfb4bfb66341d7/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=7f47359462f00e740c20153e4ecfb4bfb66341d7", "patch": "@@ -2583,9 +2583,9 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.b\\t%z0,%w0\\n\\tbld\\t#7,%w0\\n\\tsubx\\t%x0,%x0\\n\\tsubx\\t%x0,%x0\\n\\tsubx\\t%x0,%x0\";\n \t      info->shift1  = \"shar.b\\t%w0\";\n- \t      goto end;\n- \t    }\n- \t}\n+\t      goto end;\n+\t    }\n+\t}\n       else if ((TARGET_H8300H && count == 24)\n \t       || (TARGET_H8300S && 24 <= count && count <= 25))\n \t{"}, {"sha": "cec359cbc7dc9aed2b87d405dace15a41129673a", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f47359462f00e740c20153e4ecfb4bfb66341d7/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f47359462f00e740c20153e4ecfb4bfb66341d7/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=7f47359462f00e740c20153e4ecfb4bfb66341d7", "patch": "@@ -899,14 +899,14 @@ struct cum_arg\n \n /* Accept either REG or SUBREG where a register is valid.  */\n \n-#define RTX_OK_FOR_BASE_P(X)\t\t\t\t\t\\\n-  ((REG_P (X) && REG_OK_FOR_BASE_P (X))\t\t\t\t\\\n-   || (GET_CODE (X) == SUBREG && REG_P (SUBREG_REG (X))\t\t\\\n+#define RTX_OK_FOR_BASE_P(X)\t\t\t\t\\\n+  ((REG_P (X) && REG_OK_FOR_BASE_P (X))\t\t\t\\\n+   || (GET_CODE (X) == SUBREG && REG_P (SUBREG_REG (X))\t\\\n        && REG_OK_FOR_BASE_P (SUBREG_REG (X))))\n \n-#define GO_IF_LEGITIMATE_ADDRESS(MODE, X, ADDR) \t\\\n+#define GO_IF_LEGITIMATE_ADDRESS(MODE, X, ADDR)\t\t\\\n   if (RTX_OK_FOR_BASE_P (X)) goto ADDR;\t\t\t\\\n-  if (CONSTANT_ADDRESS_P (X)) goto ADDR; \t\t\\\n+  if (CONSTANT_ADDRESS_P (X)) goto ADDR;\t\t\\\n   if (GET_CODE (X) == PLUS\t\t\t\t\\\n       && CONSTANT_ADDRESS_P (XEXP (X, 1))\t\t\\\n       && RTX_OK_FOR_BASE_P (XEXP (X, 0))) goto ADDR;"}]}