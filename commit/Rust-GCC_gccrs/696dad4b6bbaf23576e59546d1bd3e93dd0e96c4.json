{"sha": "696dad4b6bbaf23576e59546d1bd3e93dd0e96c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk2ZGFkNGI2YmJhZjIzNTc2ZTU5NTQ2ZDFiZDNlOTNkZDBlOTZjNA==", "commit": {"author": {"name": "David Daney", "email": "ddaney@avtrex.com", "date": "2006-06-06T17:00:16Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2006-06-06T17:00:16Z"}, "message": "gcj.texi (libgcj Runtime Properties): Document gnu.gcj.runtime.NameFinder.show_raw and...\n\n2006-06-05  David Daney  <ddaney@avtrex.com>\n\n\t* gcj.texi (libgcj Runtime Properties): Document\n\tgnu.gcj.runtime.NameFinder.show_raw and\n\tgnu.gcj.runtime.NameFinder.remove_unknown.\n\n2006-06-05  David Daney  <ddaney@avtrex.com>\n\n\t* gnu/gcj/runtime/NameFinder.java (show_raw): New field.\n\t(showRaw): New method.\n\t* stacktrace.cc : Include gnu/gcj/runtime/StringBuffer.h.\n\t(getLineNumberForFrame): Show IP offset in trace if line number\n\tnot available and show_raw true.\n\nFrom-SVN: r114437", "tree": {"sha": "e86d94df433101038a6e23099459185aff9d2089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e86d94df433101038a6e23099459185aff9d2089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/comments", "author": null, "committer": null, "parents": [{"sha": "c02174abd15428eaa2a47df5a1ca6dbbcc1703de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c02174abd15428eaa2a47df5a1ca6dbbcc1703de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c02174abd15428eaa2a47df5a1ca6dbbcc1703de"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "90f275ce32c85fa34c7a461580c63d8e09074376", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=696dad4b6bbaf23576e59546d1bd3e93dd0e96c4", "patch": "@@ -1,3 +1,9 @@\n+2006-06-06  David Daney  <ddaney@avtrex.com>\n+\n+\t* gcj.texi (libgcj Runtime Properties): Document\n+\tgnu.gcj.runtime.NameFinder.show_raw and\n+\tgnu.gcj.runtime.NameFinder.remove_unknown.\n+\n 2006-06-06  Tom Tromey  <tromey@redhat.com>\n \n \t* jcf-dump.c (print_access_flags): Handle varargs, bridge,"}, {"sha": "38ae1abeaace6c805d1e470f2450d72ee0fc4690", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=696dad4b6bbaf23576e59546d1bd3e93dd0e96c4", "patch": "@@ -2793,6 +2793,21 @@ the java.util.logging infrastructure. However, performance may improve\n significantly for applications that print stack traces or make logging calls\n frequently.\n \n+@item gnu.gcj.runtime.NameFinder.show_raw\n+Whether the address of a stack frame should be printed when the line\n+number is unavailable. Setting this to @code{true} will cause the name\n+of the object and the offset within that object to be printed when no\n+line number is available.  This allows for off-line decoding of\n+stack traces if necessary debug information is available.  The default\n+is @code{false}, no raw addresses are printed.\n+\n+@item gnu.gcj.runtime.NameFinder.remove_unknown\n+Whether stack frames for non-java code should be included in a stack\n+trace.  The default value is @code{true}, stack frames for non-java\n+code are suppressed.  Setting this to @code{false} will cause any\n+non-java stack frames to be printed in addition to frames for the java\n+code.\n+\n @item gnu.gcj.runtime.VMClassLoader.library_control\n This controls how shared libraries are automatically loaded by the\n built-in class loader.  If this property is set to @samp{full}, a full"}, {"sha": "8117d0871eff5cca74cf04c9dda51a4a883cb56d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=696dad4b6bbaf23576e59546d1bd3e93dd0e96c4", "patch": "@@ -1,3 +1,11 @@\n+2006-06-06  David Daney  <ddaney@avtrex.com>\n+\n+\t* gnu/gcj/runtime/NameFinder.java (show_raw): New field.\n+\t(showRaw): New method.\n+\t* stacktrace.cc : Include gnu/gcj/runtime/StringBuffer.h.\n+\t(getLineNumberForFrame): Show IP offset in trace if line number\n+\tnot available and show_raw true.\n+\n 2006-06-06  Gary Benson  <gbenson@redhat.com>\n \n \t* java/io/natFilePosix.cc (getCanonicalPath): Rewritten."}, {"sha": "0742af193bc4389708c72a9b5b0c9ca245b49e6f", "filename": "libjava/gnu/gcj/runtime/NameFinder.java", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/libjava%2Fgnu%2Fgcj%2Fruntime%2FNameFinder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/libjava%2Fgnu%2Fgcj%2Fruntime%2FNameFinder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FNameFinder.java?ref=696dad4b6bbaf23576e59546d1bd3e93dd0e96c4", "patch": "@@ -67,13 +67,29 @@\n                 (\"gnu.gcj.runtime.NameFinder.use_addr2line\", \"true\")\n             ).booleanValue();\n \n+  private static boolean show_raw\n+          = Boolean.valueOf(System.getProperty\n+                (\"gnu.gcj.runtime.NameFinder.show_raw\", \"false\")\n+            ).booleanValue();\n+\n+  /**\n+   * Return true if raw addresses should be printed in stacktraces\n+   * when no line number information is available.\n+   */\n+  static final boolean showRaw()\n+  {\n+    return show_raw;\n+  }\n+\n   private static final boolean remove_unknown\n \t  = Boolean.valueOf(System.getProperty\n \t\t(\"gnu.gcj.runtime.NameFinder.remove_unknown\", \"true\")\n \t    ).booleanValue();\n \n-  // Return true if non-Java frames should be removed from stack\n-  // traces.\n+  /**\n+   * Return true if non-Java frames should be removed from stack\n+   * traces.\n+   */\n   static final boolean removeUnknown()\n   {\n     return remove_unknown;"}, {"sha": "5d429e67d145c6e2ab79b08c46ab8041dd6420fe", "filename": "libjava/stacktrace.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/libjava%2Fstacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/696dad4b6bbaf23576e59546d1bd3e93dd0e96c4/libjava%2Fstacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fstacktrace.cc?ref=696dad4b6bbaf23576e59546d1bd3e93dd0e96c4", "patch": "@@ -27,6 +27,7 @@ details.  */\n #include <java/util/IdentityHashMap.h>\n #include <gnu/java/lang/MainThread.h>\n #include <gnu/gcj/runtime/NameFinder.h>\n+#include <gnu/gcj/runtime/StringBuffer.h>\n \n #include <sysdep/backtrace.h>\n #include <sysdep/descriptor.h>\n@@ -221,6 +222,17 @@ _Jv_StackTrace::getLineNumberForFrame(_Jv_StackFrame *frame, NameFinder *finder,\n       finder->lookup (binaryName, (jlong) offset);\n       *sourceFileName = finder->getSourceFile();\n       *lineNum = finder->getLineNum();\n+      if (*lineNum == -1 && NameFinder::showRaw())\n+        {\n+          gnu::gcj::runtime::StringBuffer *t =\n+            new gnu::gcj::runtime::StringBuffer(binaryName);\n+          t->append ((jchar)' ');\n+          t->append ((jchar)'[');\n+          // + 1 to compensate for the - 1 adjustment above;\n+          t->append (Long::toHexString (offset + 1));\n+          t->append ((jchar)']');\n+          *sourceFileName = t->toString();\n+        }\n     }\n #endif\n }"}]}