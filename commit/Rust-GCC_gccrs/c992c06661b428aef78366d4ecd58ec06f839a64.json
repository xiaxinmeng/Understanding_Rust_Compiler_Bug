{"sha": "c992c06661b428aef78366d4ecd58ec06f839a64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk5MmMwNjY2MWI0MjhhZWY3ODM2NmQ0ZWNkNThlYzA2ZjgzOWE2NA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:22:29Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:22:29Z"}, "message": "cse.c (check_dependence_data): Delete.\n\ngcc/\n\t* cse.c (check_dependence_data): Delete.\n\t(check_dependence): Change from being a for_each_rtx callback to being\n\ta function that examines all subrtxes itself.  Don't handle null rtxes.\n\t(invalidate): Update call accordingly.\n\nFrom-SVN: r214628", "tree": {"sha": "a5eda02eb7a1e186849c90dac61e2f309d417107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5eda02eb7a1e186849c90dac61e2f309d417107"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c992c06661b428aef78366d4ecd58ec06f839a64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c992c06661b428aef78366d4ecd58ec06f839a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c992c06661b428aef78366d4ecd58ec06f839a64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c992c06661b428aef78366d4ecd58ec06f839a64/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e89b312ed39af831f4e88534326ca723e8eed271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e89b312ed39af831f4e88534326ca723e8eed271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e89b312ed39af831f4e88534326ca723e8eed271"}], "stats": {"total": 41, "additions": 20, "deletions": 21}, "files": [{"sha": "3fe52d50be8e5bfc1a7ff50fab344652de66c655", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c992c06661b428aef78366d4ecd58ec06f839a64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c992c06661b428aef78366d4ecd58ec06f839a64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c992c06661b428aef78366d4ecd58ec06f839a64", "patch": "@@ -1,3 +1,10 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* cse.c (check_dependence_data): Delete.\n+\t(check_dependence): Change from being a for_each_rtx callback to being\n+\ta function that examines all subrtxes itself.  Don't handle null rtxes.\n+\t(invalidate): Update call accordingly.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* cse.c: Include rtl-iter.h."}, {"sha": "3557894dde94a2784220fc374d2eb005601ebf00", "filename": "gcc/cse.c", "status": "modified", "additions": 13, "deletions": 21, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c992c06661b428aef78366d4ecd58ec06f839a64/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c992c06661b428aef78366d4ecd58ec06f839a64/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=c992c06661b428aef78366d4ecd58ec06f839a64", "patch": "@@ -600,7 +600,6 @@ static int check_for_label_ref (rtx *, void *);\n extern void dump_class (struct table_elt*);\n static void get_cse_reg_info_1 (unsigned int regno);\n static struct cse_reg_info * get_cse_reg_info (unsigned int regno);\n-static int check_dependence (rtx *, void *);\n \n static void flush_hash_table (void);\n static bool insn_live_p (rtx_insn *, int *);\n@@ -1816,22 +1815,20 @@ flush_hash_table (void)\n       }\n }\n \f\n-/* Function called for each rtx to check whether an anti dependence exist.  */\n-struct check_dependence_data\n-{\n-  enum machine_mode mode;\n-  rtx exp;\n-  rtx addr;\n-};\n+/* Check whether an anti dependence exists between X and EXP.  MODE and\n+   ADDR are as for canon_anti_dependence.  */\n \n-static int\n-check_dependence (rtx *x, void *data)\n+static bool\n+check_dependence (const_rtx x, rtx exp, enum machine_mode mode, rtx addr)\n {\n-  struct check_dependence_data *d = (struct check_dependence_data *) data;\n-  if (*x && MEM_P (*x))\n-    return canon_anti_dependence (*x, true, d->exp, d->mode, d->addr);\n-  else\n-    return 0;\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, x, NONCONST)\n+    {\n+      const_rtx x = *iter;\n+      if (MEM_P (x) && canon_anti_dependence (x, true, exp, mode, addr))\n+\treturn true;\n+    }\n+  return false;\n }\n \f\n /* Remove from the hash table, or mark as invalid, all expressions whose\n@@ -1952,18 +1949,13 @@ invalidate (rtx x, enum machine_mode full_mode)\n \t      next = p->next_same_hash;\n \t      if (p->in_memory)\n \t\t{\n-\t\t  struct check_dependence_data d;\n-\n \t\t  /* Just canonicalize the expression once;\n \t\t     otherwise each time we call invalidate\n \t\t     true_dependence will canonicalize the\n \t\t     expression again.  */\n \t\t  if (!p->canon_exp)\n \t\t    p->canon_exp = canon_rtx (p->exp);\n-\t\t  d.exp = x;\n-\t\t  d.addr = addr;\n-\t\t  d.mode = full_mode;\n-\t\t  if (for_each_rtx (&p->canon_exp, check_dependence, &d))\n+\t\t  if (check_dependence (p->canon_exp, x, full_mode, addr))\n \t\t    remove_from_table (p, i);\n \t\t}\n \t    }"}]}