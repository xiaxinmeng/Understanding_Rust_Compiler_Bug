{"sha": "e3ccdd508a2befa298813b1975141572b462c84f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNjY2RkNTA4YTJiZWZhMjk4ODEzYjE5NzUxNDE1NzJiNDYyYzg0Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-10-21T21:47:44Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-10-21T21:47:44Z"}, "message": "class.c (include_empty_classes): Use normalize_rli.\n\n\t* class.c (include_empty_classes): Use normalize_rli.\n\t(layout_class_type): Likewise.\n\nFrom-SVN: r58388", "tree": {"sha": "09026cdbd3a0f95e9efc3ed1fb5b6c8dc5089714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09026cdbd3a0f95e9efc3ed1fb5b6c8dc5089714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3ccdd508a2befa298813b1975141572b462c84f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ccdd508a2befa298813b1975141572b462c84f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3ccdd508a2befa298813b1975141572b462c84f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ccdd508a2befa298813b1975141572b462c84f/comments", "author": null, "committer": null, "parents": [{"sha": "75d383798962aa309d4474fdb2d8ce17db50a031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d383798962aa309d4474fdb2d8ce17db50a031", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75d383798962aa309d4474fdb2d8ce17db50a031"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "6fa961f6ad5f229d4b6ff5cf00b85390a09f281a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ccdd508a2befa298813b1975141572b462c84f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ccdd508a2befa298813b1975141572b462c84f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e3ccdd508a2befa298813b1975141572b462c84f", "patch": "@@ -1,5 +1,8 @@\n 2002-10-21  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* class.c (include_empty_classes): Use normalize_rli.\n+\t(layout_class_type): Likewise.\n+\n \t* decl.c (reshape_init): Tweak handling of character arrays.\n \n \tPR c++/8218"}, {"sha": "4923b00fb8a163b28a97f860ba65dbe71810d614", "filename": "gcc/cp/class.c", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ccdd508a2befa298813b1975141572b462c84f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ccdd508a2befa298813b1975141572b462c84f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=e3ccdd508a2befa298813b1975141572b462c84f", "patch": "@@ -4761,6 +4761,7 @@ static void\n include_empty_classes (record_layout_info rli)\n {\n   tree eoc;\n+  tree rli_size;\n \n   /* It might be the case that we grew the class to allocate a\n      zero-sized base class.  That won't be reflected in RLI, yet,\n@@ -4769,11 +4770,20 @@ include_empty_classes (record_layout_info rli)\n      to reflect the entire class.  */\n   eoc = end_of_class (rli->t, \n \t\t      CLASSTYPE_AS_BASE (rli->t) != NULL_TREE);\n-  if (TREE_CODE (rli_size_unit_so_far (rli)) == INTEGER_CST\n-      && INT_CST_LT_UNSIGNED (rli_size_unit_so_far (rli), eoc))\n+  rli_size = rli_size_unit_so_far (rli);\n+  if (TREE_CODE (rli_size) == INTEGER_CST\n+      && INT_CST_LT_UNSIGNED (rli_size, eoc))\n     {\n-      rli->offset = size_binop (MAX_EXPR, rli->offset, eoc);\n-      rli->bitpos = bitsize_zero_node;\n+      rli->bitpos = round_up (rli->bitpos, BITS_PER_UNIT);\n+      rli->bitpos \n+\t= size_binop (PLUS_EXPR, \n+\t\t      rli->bitpos,\n+\t\t      size_binop (MULT_EXPR,\n+\t\t\t\t  convert (bitsizetype,\n+\t\t\t\t\t   size_binop (MINUS_EXPR,\n+\t\t\t\t\t\t       eoc, rli_size)),\n+\t\t\t\t  bitsize_int (BITS_PER_UNIT)));\n+      normalize_rli (rli);\n     }\n }\n \n@@ -4947,10 +4957,13 @@ layout_class_type (tree t, int *vfuns_p, tree *virtuals_p)\n     }\n \n   if (abi_version_at_least (2) && !integer_zerop (rli->bitpos))\n-    /* Make sure that we are on a byte boundary so that the size of\n-       the class without virtual bases will always be a round number\n-       of bytes.  */\n-    rli->bitpos = round_up (rli->bitpos, BITS_PER_UNIT);\n+    {\n+      /* Make sure that we are on a byte boundary so that the size of\n+\t the class without virtual bases will always be a round number\n+\t of bytes.  */\n+      rli->bitpos = round_up (rli->bitpos, BITS_PER_UNIT);\n+      normalize_rli (rli);\n+    }\n \n   /* Make sure that empty classes are reflected in RLI at this \n      point.  */"}]}