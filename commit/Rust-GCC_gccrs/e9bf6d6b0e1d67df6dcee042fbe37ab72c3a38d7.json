{"sha": "e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7", "node_id": "C_kwDOANBUbNoAKGU5YmY2ZDZiMGUxZDY3ZGY2ZGNlZTA0MmZiZTM3YWI3MmMzYTM4ZDc", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-01T15:02:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-01T15:02:54Z"}, "message": "veclower: Fix up -fcompare-debug issue in expand_vector_comparison [PR104307]\n\nThe following testcase fails -fcompare-debug, because expand_vector_comparison\nsince r11-1786-g1ac9258cca8030745d3c0b8f63186f0adf0ebc27 sets\nvec_cond_expr_only when it sees some use other than VEC_COND_EXPR that uses\nthe lhs in its condition.\nObviously we should ignore debug stmts when doing so, e.g. by not pushing\nthem to uses.\nThat would be a 2 liner change, but while looking at it, I'm also worried\nabout VEC_COND_EXPRs that would use the lhs in more than one operand,\nlike VEC_COND_EXPR <lhs, lhs, something> or VEC_COND_EXPR <lhs, something, lhs>\n(sure, they ought to be folded, but what if they weren't).  Because if\nsomething like that happens, then FOR_EACH_IMM_USE_FAST would push the same\nstmt multiple times and expand_vector_condition can return true even when\nit modifies it (for vector bool masking).\nAnd lastly, it seems quite wasteful to safe_push statements that will just\ncause vec_cond_expr_only = false; and break; in the second loop, both for\ncases like 1000 immediate non-VEC_COND_EXPR uses and for cases like\n999 VEC_COND_EXPRs with lhs in cond followed by a single non-VEC_COND_EXPR\nuse.  So this patch only pushes VEC_COND_EXPRs there.\n\n2022-02-01  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/104307\n\t* tree-vect-generic.cc (expand_vector_comparison): Don't push debug\n\tstmts to uses vector, just set vec_cond_expr_only to false for\n\tnon-VEC_COND_EXPRs instead of pushing them into uses.  Treat\n\tVEC_COND_EXPRs that use lhs not just in rhs1, but rhs2 or rhs3 too\n\tlike non-VEC_COND_EXPRs.\n\n\t* gcc.target/i386/pr104307.c: New test.", "tree": {"sha": "9829c751eb4eadd48b3842f2d5a458fe09c4ab7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9829c751eb4eadd48b3842f2d5a458fe09c4ab7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e83607907151d5fbb3d2a7bceb7dcc6125c6c15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e83607907151d5fbb3d2a7bceb7dcc6125c6c15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e83607907151d5fbb3d2a7bceb7dcc6125c6c15"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "1301539851ce34de27927c65d8984f3c5d5db60d", "filename": "gcc/testsuite/gcc.target/i386/pr104307.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104307.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104307.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104307.c?ref=e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7", "patch": "@@ -0,0 +1,6 @@\n+/* PR middle-end/104307 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-options \"-O2 -mavx512f -fcompare-debug \" } */\n+\n+#include \"pr78669.c\""}, {"sha": "12a553ec8be13a79910a6e3998c18483fccff662", "filename": "gcc/tree-vect-generic.cc", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7/gcc%2Ftree-vect-generic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7/gcc%2Ftree-vect-generic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.cc?ref=e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7", "patch": "@@ -436,29 +436,31 @@ expand_vector_comparison (gimple_stmt_iterator *gsi, tree type, tree op0,\n      feeding a VEC_COND_EXPR statement.  */\n   auto_vec<gimple *> uses;\n   FOR_EACH_IMM_USE_FAST (use_p, iterator, lhs)\n-    uses.safe_push (USE_STMT (use_p));\n-\n-  for (unsigned i = 0; i < uses.length (); i ++)\n     {\n-      gassign *use = dyn_cast<gassign *> (uses[i]);\n-      if (use != NULL\n+      gimple *use = USE_STMT (use_p);\n+      if (is_gimple_debug (use))\n+\tcontinue;\n+      if (is_gimple_assign (use)\n \t  && gimple_assign_rhs_code (use) == VEC_COND_EXPR\n-\t  && gimple_assign_rhs1 (use) == lhs)\n-\t{\n-\t  gimple_stmt_iterator it = gsi_for_stmt (use);\n-\t  if (!expand_vector_condition (&it, dce_ssa_names))\n-\t    {\n-\t      vec_cond_expr_only = false;\n-\t      break;\n-\t    }\n-\t}\n+\t  && gimple_assign_rhs1 (use) == lhs\n+\t  && gimple_assign_rhs2 (use) != lhs\n+\t  && gimple_assign_rhs3 (use) != lhs)\n+\tuses.safe_push (use);\n       else\n-\t{\n-\t  vec_cond_expr_only = false;\n-\t  break;\n-\t}\n+\tvec_cond_expr_only = false;\n     }\n \n+  if (vec_cond_expr_only)\n+    for (gimple *use : uses)\n+      {\n+\tgimple_stmt_iterator it = gsi_for_stmt (use);\n+\tif (!expand_vector_condition (&it, dce_ssa_names))\n+\t  {\n+\t    vec_cond_expr_only = false;\n+\t    break;\n+\t  }\n+      }\n+\n   if (!uses.is_empty () && vec_cond_expr_only)\n     return NULL_TREE;\n "}]}