{"sha": "3ef093a8252e0048e18d40e5748d04486217500e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VmMDkzYTgyNTJlMDA0OGUxOGQ0MGU1NzQ4ZDA0NDg2MjE3NTAwZQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2003-08-01T15:41:59Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-08-01T15:41:59Z"}, "message": "s390.c (s390_select_ccmode): Do not attempt to use CCL, CCL1, or CCL2 modes with floating point operations.\n\n2003-08-01  Andreas Krebbel <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.c (s390_select_ccmode): Do not attempt to use CCL,\n\tCCL1, or CCL2 modes with floating point operations.\n\n\t* config/s390/s390.md (\"*addsf3_cc\", \"*addsf3_cconly\", \"*adddf3_cc\",\n\t\"*adddf3_cconly\", \"*subsf3_cc\", \"*subsf3_cconly\", \"*subdf3_cc\",\n\t\"*subdf3_cconly\"): New insns.\n\t(\"*negabssi2\", \"*negabsdi2\", \"*negabsdf2\", \"*negabssf2\"): Likewise.\n\nFrom-SVN: r70052", "tree": {"sha": "91d5f824e9c07a09dda8494e65ff1c8e6c12fe07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91d5f824e9c07a09dda8494e65ff1c8e6c12fe07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ef093a8252e0048e18d40e5748d04486217500e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef093a8252e0048e18d40e5748d04486217500e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ef093a8252e0048e18d40e5748d04486217500e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef093a8252e0048e18d40e5748d04486217500e/comments", "author": null, "committer": null, "parents": [{"sha": "d6f7c70410f505a1198d25217f35525bb58e38bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6f7c70410f505a1198d25217f35525bb58e38bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6f7c70410f505a1198d25217f35525bb58e38bc"}], "stats": {"total": 175, "additions": 171, "deletions": 4}, "files": [{"sha": "cdac9b2f37d6060560ad702b4a5f29d8d85b0158", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef093a8252e0048e18d40e5748d04486217500e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef093a8252e0048e18d40e5748d04486217500e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ef093a8252e0048e18d40e5748d04486217500e", "patch": "@@ -1,3 +1,13 @@\n+2003-08-01  Andreas Krebbel <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_select_ccmode): Do not attempt to use CCL,\n+\tCCL1, or CCL2 modes with floating point operations.\n+\n+\t* config/s390/s390.md (\"*addsf3_cc\", \"*addsf3_cconly\", \"*adddf3_cc\",\n+\t\"*adddf3_cconly\", \"*subsf3_cc\", \"*subsf3_cconly\", \"*subdf3_cc\",\n+\t\"*subdf3_cconly\"): New insns.\n+\t(\"*negabssi2\", \"*negabsdi2\", \"*negabsdf2\", \"*negabssf2\"): Likewise.\n+\n 2003-08-01  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* Makefile.in: Refine dependencies."}, {"sha": "5684a6ac9d96fe94a54a6563c5eda1bdf99ec1e6", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef093a8252e0048e18d40e5748d04486217500e/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef093a8252e0048e18d40e5748d04486217500e/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=3ef093a8252e0048e18d40e5748d04486217500e", "patch": "@@ -377,8 +377,9 @@ s390_select_ccmode (code, op0, op1)\n \tif (GET_CODE (op0) == PLUS && GET_CODE (XEXP (op0, 1)) == CONST_INT\n \t    && CONST_OK_FOR_LETTER_P (INTVAL (XEXP (op0, 1)), 'K'))\n \t  return CCAPmode;\n-\tif (GET_CODE (op0) == PLUS || GET_CODE (op0) == MINUS\n-\t    || GET_CODE (op1) == NEG)\n+\tif ((GET_CODE (op0) == PLUS || GET_CODE (op0) == MINUS\n+\t     || GET_CODE (op1) == NEG)\n+\t    && GET_MODE_CLASS (GET_MODE (op0)) == MODE_INT)\n \t  return CCLmode;\n \n \tif (GET_CODE (op0) == AND)\n@@ -432,7 +433,8 @@ s390_select_ccmode (code, op0, op1)\n \n       case LTU:\n       case GEU:\n-\tif (GET_CODE (op0) == PLUS)\n+\tif (GET_CODE (op0) == PLUS\n+\t    && GET_MODE_CLASS (GET_MODE (op0)) == MODE_INT)\n \t  return CCL1mode;\n \n \tif ((GET_CODE (op0) == SIGN_EXTEND || GET_CODE (op0) == ZERO_EXTEND)\n@@ -442,7 +444,8 @@ s390_select_ccmode (code, op0, op1)\n \n       case LEU:\n       case GTU:\n-\tif (GET_CODE (op0) == MINUS)\n+\tif (GET_CODE (op0) == MINUS\n+\t    && GET_MODE_CLASS (GET_MODE (op0)) == MODE_INT)\n \t  return CCL2mode;\n \n \tif ((GET_CODE (op0) == SIGN_EXTEND || GET_CODE (op0) == ZERO_EXTEND)"}, {"sha": "c7f1312b2d2ae7015d15a6545d2da588032feb97", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef093a8252e0048e18d40e5748d04486217500e/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef093a8252e0048e18d40e5748d04486217500e/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=3ef093a8252e0048e18d40e5748d04486217500e", "patch": "@@ -3451,6 +3451,33 @@\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"type\"     \"fsimpd,fsimpd\")])\n \n+(define_insn \"*adddf3_cc\"\n+  [(set (reg 33)\n+\t(compare (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t  (match_operand:DF 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:DF 3 \"const0_operand\" \"\")))\n+   (set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+\t(plus:DF (match_dup 1) (match_dup 2)))]\n+  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"@\n+   adbr\\\\t%0,%2\n+   adb\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n+   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+\n+(define_insn \"*adddf3_cconly\"\n+  [(set (reg 33)\n+\t(compare (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t  (match_operand:DF 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:DF 3 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:DF 0 \"=f,f\"))]\n+  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"@\n+  adbr\\\\t%0,%2\n+  adb\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n+   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+\n (define_insn \"*adddf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n@@ -3488,6 +3515,33 @@\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"type\"     \"fsimps,fsimps\")])\n \n+(define_insn \"*addsf3_cc\"\n+  [(set (reg 33)\n+\t(compare (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t  (match_operand:SF 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:SF 3 \"const0_operand\" \"\")))\n+   (set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n+\t(plus:SF (match_dup 1) (match_dup 2)))]\n+  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"@\n+   aebr\\\\t%0,%2\n+   aeb\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n+   (set_attr \"type\"     \"fsimps,fsimps\")])\n+\n+(define_insn \"*addsf3_cconly\"\n+  [(set (reg 33)\n+\t(compare (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t  (match_operand:SF 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:SF 3 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:SF 0 \"=f,f\"))]\n+  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"@\n+   aebr\\\\t%0,%2\n+   aeb\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n+   (set_attr \"type\"     \"fsimps,fsimps\")])\n+\n (define_insn \"*addsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n@@ -3752,6 +3806,33 @@\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"type\"     \"fsimpd,fsimpd\")])\n \n+(define_insn \"*subdf3_cc\"\n+  [(set (reg 33)\n+\t(compare (minus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t   (match_operand:DF 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:DF 3 \"const0_operand\" \"\")))\n+   (set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+\t(plus:DF (match_dup 1) (match_dup 2)))]\n+  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"@\n+   sdbr\\\\t%0,%2\n+   sdb\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n+   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+\n+(define_insn \"*subdf3_cconly\"\n+  [(set (reg 33)\n+\t(compare (minus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t   (match_operand:DF 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:DF 3 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:DF 0 \"=f,f\"))]\n+  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"@\n+   sdbr\\\\t%0,%2\n+   sdb\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n+   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+\n (define_insn \"*subdf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (minus:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n@@ -3789,6 +3870,33 @@\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"type\"     \"fsimps,fsimps\")])\n \n+(define_insn \"*subsf3_cc\"\n+  [(set (reg 33)\n+\t(compare (minus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t   (match_operand:SF 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:SF 3 \"const0_operand\" \"\")))\n+   (set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n+\t(minus:SF (match_dup 1) (match_dup 2)))]\n+  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"@\n+   sebr\\\\t%0,%2\n+   seb\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n+   (set_attr \"type\"     \"fsimps,fsimps\")])\n+\n+(define_insn \"*subsf3_cconly\"\n+  [(set (reg 33)\n+\t(compare (minus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t   (match_operand:SF 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:SF 3 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:SF 0 \"=f,f\"))]\n+  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"@\n+   sebr\\\\t%0,%2\n+   seb\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n+   (set_attr \"type\"     \"fsimps,fsimps\")])\n+\n (define_insn \"*subsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (minus:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n@@ -5332,6 +5440,52 @@\n   [(set_attr \"op_type\"  \"RR\")\n    (set_attr \"type\"     \"fsimps\")])\n \n+;;\n+;;- Negated absolute value instructions\n+;;\n+\n+;\n+; Integer\n+;\n+\n+(define_insn \"*negabssi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(neg:SI (abs:SI (match_operand:SI 1 \"register_operand\" \"d\"))))\n+   (clobber (reg:CC 33))]\n+  \"\"\n+  \"lnr\\\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RR\")])\n+\n+(define_insn \"*negabsdi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+\t(neg:DI (abs:DI (match_operand:DI 1 \"register_operand\" \"d\"))))\n+   (clobber (reg:CC 33))]\n+  \"TARGET_64BIT\"\n+  \"lngr\\\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RRE\")])\n+\n+;\n+; Floating point\n+;\n+\n+(define_insn \"*negabssf2\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+        (neg:SF (abs:SF (match_operand:SF 1 \"register_operand\" \"f\"))))\n+   (clobber (reg:CC 33))]\n+  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"lnebr\\\\t%0,%1\"\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"type\"     \"fsimps\")])\n+\n+(define_insn \"*negabsdf2\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+        (neg:DF (abs:DF (match_operand:DF 1 \"register_operand\" \"f\"))))\n+   (clobber (reg:CC 33))]\n+  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"lndbr\\\\t%0,%1\"\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"type\"     \"fsimpd\")])\n+\n ;;\n ;;- Square root instructions.\n ;;"}]}