{"sha": "4a061351281bf2258de4d9e84b3bade51567983e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEwNjEzNTEyODFiZjIyNThkZTRkOWU4NGIzYmFkZTUxNTY3OTgzZQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-08T09:45:39Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-08T09:45:39Z"}, "message": "Makefile.in (gengtype-lex.o, [...]): Add -DGENERATOR_FILE manually for host gengtype objects.\n\n\t* Makefile.in (gengtype-lex.o, gengtype-parse.o, gengtype-state.o,\n\tgengtype.o): Add -DGENERATOR_FILE manually for host gengtype objects.\n\nFrom-SVN: r189356", "tree": {"sha": "290377fbe2844e4978de62fa00c172b54a8a18d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/290377fbe2844e4978de62fa00c172b54a8a18d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a061351281bf2258de4d9e84b3bade51567983e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a061351281bf2258de4d9e84b3bade51567983e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a061351281bf2258de4d9e84b3bade51567983e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a061351281bf2258de4d9e84b3bade51567983e/comments", "author": null, "committer": null, "parents": [{"sha": "4cbab2332e0870421732dd3bfa656178c56bde61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cbab2332e0870421732dd3bfa656178c56bde61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cbab2332e0870421732dd3bfa656178c56bde61"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "7341375c32d8c8cecacc4e8faf4bd3485946db38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a061351281bf2258de4d9e84b3bade51567983e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a061351281bf2258de4d9e84b3bade51567983e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a061351281bf2258de4d9e84b3bade51567983e", "patch": "@@ -1,3 +1,8 @@\n+2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Makefile.in (gengtype-lex.o, gengtype-parse.o, gengtype-state.o,\n+\tgengtype.o): Add -DGENERATOR_FILE manually for host gengtype objects.\n+\n 2012-07-07  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.h (TARGET_CPU_CPP_BUILTINS): Remove Maverick support."}, {"sha": "237f88d5e3de6639e7ec2ad17e71443fbaf2b152", "filename": "gcc/Makefile.in", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a061351281bf2258de4d9e84b3bade51567983e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a061351281bf2258de4d9e84b3bade51567983e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4a061351281bf2258de4d9e84b3bade51567983e", "patch": "@@ -3818,23 +3818,40 @@ build/genextract.o : genextract.c $(RTL_BASE_H) $(BCONFIG_H)\t\t\\\n build/genflags.o : genflags.c $(RTL_BASE_H) $(OBSTACK_H) $(BCONFIG_H)\t\\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h $(READ_MD_H) gensupport.h\n build/gengenrtl.o : gengenrtl.c $(BCONFIG_H) $(SYSTEM_H) rtl.def\n+\n+# The gengtype generator program is special: Two versions are built.\n+# One is for the build machine, and one is for the host to allow\n+# plugins to define their types and generate the supporting GGC\n+# datastructures and routines with GTY markers.\n+# The host object files depend on CONFIG_H, and the build objects\n+# on BCONFIG_H.  For the build objects, add -DGENERATOR_FILE manually,\n+# the build-%: rule doesn't apply to them.\n+\n gengtype-lex.o build/gengtype-lex.o : gengtype-lex.c gengtype.h $(SYSTEM_H)\n gengtype-lex.o: $(CONFIG_H)\n+CFLAGS-gengtype-lex.o += -DGENERATOR_FILE\n build/gengtype-lex.o: $(BCONFIG_H)\n+\n gengtype-parse.o build/gengtype-parse.o : gengtype-parse.c gengtype.h \\\n   $(SYSTEM_H)\n gengtype-parse.o: $(CONFIG_H)\n+CFLAGS-gengtype-parse.o += -DGENERATOR_FILE\n build/gengtype-parse.o: $(BCONFIG_H)\n+\n gengtype-state.o build/gengtype-state.o: gengtype-state.c $(SYSTEM_H) \\\n   gengtype.h errors.h double-int.h version.h $(HASHTAB_H) $(OBSTACK_H) \\\n   $(XREGEX_H)\n gengtype-state.o: $(CONFIG_H)\n+CFLAGS-gengtype-state.o += -DGENERATOR_FILE\n build/gengtype-state.o: $(BCONFIG_H)\n+\n gengtype.o build/gengtype.o : gengtype.c $(SYSTEM_H) gengtype.h \t\\\n   rtl.def insn-notes.def errors.h double-int.h version.h $(HASHTAB_H) \\\n   $(OBSTACK_H) $(XREGEX_H)\n gengtype.o: $(CONFIG_H)\n+CFLAGS-gengtype.o += -DGENERATOR_FILE\n build/gengtype.o: $(BCONFIG_H)\n+\n build/genmddeps.o: genmddeps.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   errors.h $(READ_MD_H)\n build/genmodes.o : genmodes.c $(BCONFIG_H) $(SYSTEM_H) errors.h\t\t\\"}]}