{"sha": "a48718a2f61f10c0531daa0ef73531174144a14b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ4NzE4YTJmNjFmMTBjMDUzMWRhYTBlZjczNTMxMTc0MTQ0YTE0Yg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-03-26T06:29:01Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-03-26T06:29:01Z"}, "message": "re PR fortran/66709 (ICE on formatted io with parameter array specifier fmt)\n\n2018-03-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/66709\n\t* io.c: Include constructor.h.\n\t(resolve_tag_format): For a constant character array, concatenate\n\tinto a single character expression.\n\n2018-03-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/66709\n\t* gfortran.dg/parameter_array_format.f90: New test.\n\nFrom-SVN: r258850", "tree": {"sha": "80bf0ab5272073582eb4ffe9567974e306878acf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80bf0ab5272073582eb4ffe9567974e306878acf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a48718a2f61f10c0531daa0ef73531174144a14b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a48718a2f61f10c0531daa0ef73531174144a14b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a48718a2f61f10c0531daa0ef73531174144a14b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a48718a2f61f10c0531daa0ef73531174144a14b/comments", "author": null, "committer": null, "parents": [{"sha": "497f7b3e293ef5311a440e950a976cb3d1ebd9d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/497f7b3e293ef5311a440e950a976cb3d1ebd9d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/497f7b3e293ef5311a440e950a976cb3d1ebd9d9"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "0f07e0a30d921e146268f5aecf3be53f502ef75f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a48718a2f61f10c0531daa0ef73531174144a14b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a48718a2f61f10c0531daa0ef73531174144a14b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a48718a2f61f10c0531daa0ef73531174144a14b", "patch": "@@ -1,3 +1,10 @@\n+2018-03-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/66709\n+\t* io.c: Include constructor.h.\n+\t(resolve_tag_format): For a constant character array, concatenate\n+\tinto a single character expression.\n+\n 2018-03-25  Seth Johnson <johnsonsr@ornl.gov>\n \tDominique d'Humieres  <dominiq@gcc.gnu.org>\n "}, {"sha": "10b7e827dab05967522c9e14a37ee5d6d3ae2e79", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a48718a2f61f10c0531daa0ef73531174144a14b/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a48718a2f61f10c0531daa0ef73531174144a14b/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=a48718a2f61f10c0531daa0ef73531174144a14b", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gfortran.h\"\n #include \"match.h\"\n #include \"parse.h\"\n+#include \"constructor.h\"\n \n gfc_st_label\n format_asterisk = {0, NULL, NULL, -1, ST_LABEL_FORMAT, ST_LABEL_FORMAT, NULL,\n@@ -1606,7 +1607,7 @@ match_dec_ftag (const io_tag *tag, gfc_open *o)\n /* Resolution of the FORMAT tag, to be called from resolve_tag.  */\n \n static bool\n-resolve_tag_format (const gfc_expr *e)\n+resolve_tag_format (gfc_expr *e)\n {\n   if (e->expr_type == EXPR_CONSTANT\n       && (e->ts.type != BT_CHARACTER\n@@ -1617,6 +1618,47 @@ resolve_tag_format (const gfc_expr *e)\n       return false;\n     }\n \n+  /* Concatenate a constant character array into a single character\n+     expression.  */\n+\n+  if ((e->expr_type == EXPR_ARRAY || e->rank > 0)\n+      && e->ts.type == BT_CHARACTER\n+      && gfc_is_constant_expr (e))\n+    {\n+      if (e->expr_type == EXPR_VARIABLE\n+\t  && e->symtree->n.sym->attr.flavor == FL_PARAMETER)\n+\tgfc_simplify_expr (e, 1);\n+\n+      if (e->expr_type == EXPR_ARRAY)\n+\t{\n+\t  gfc_constructor *c;\n+\t  gfc_charlen_t n, len;\n+\t  gfc_expr *r;\n+\t  gfc_char_t *dest, *src;\n+\n+\t  n = 0;\n+\t  c = gfc_constructor_first (e->value.constructor);\n+\t  len = c->expr->value.character.length;\n+\t  \n+\t  for ( ; c; c = gfc_constructor_next (c))\n+\t    n += len;\n+\n+\t  r = gfc_get_character_expr (e->ts.kind, &e->where, NULL, n);\n+\t  dest = r->value.character.string;\n+\n+\t  for (c = gfc_constructor_first (e->value.constructor);\n+\t     c; c = gfc_constructor_next (c))\n+\t    {\n+\t      src = c->expr->value.character.string;\n+\t      for (gfc_charlen_t i = 0 ; i < len; i++)\n+\t\t*dest++ = *src++;\n+\t    }\n+\n+\t  gfc_replace_expr (e, r);\n+\t  return true;\n+\t}\n+    }\n+\n   /* If e's rank is zero and e is not an element of an array, it should be\n      of integer or character type.  The integer variable should be\n      ASSIGNED.  */"}, {"sha": "4b7fc36ba2c7d9e555a2586e60e62fcb118915c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a48718a2f61f10c0531daa0ef73531174144a14b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a48718a2f61f10c0531daa0ef73531174144a14b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a48718a2f61f10c0531daa0ef73531174144a14b", "patch": "@@ -1,3 +1,8 @@\n+2018-03-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/66709\n+\t* gfortran.dg/parameter_array_format.f90: New test.\n+\n 2018-03-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \tNeil Carlson <neil.n.carlson@gmail.com>\n "}, {"sha": "d4ae9dac8c94ffefc42c492059bac98fe37dd6dd", "filename": "gcc/testsuite/gfortran.dg/parameter_array_format.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a48718a2f61f10c0531daa0ef73531174144a14b/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_format.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a48718a2f61f10c0531daa0ef73531174144a14b/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_format.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_format.f90?ref=a48718a2f61f10c0531daa0ef73531174144a14b", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do  run }\n+! PR fortran/66709\n+! Check that parameter formats are handled correctly.\n+! Original test case by Gerhard Steinmetz.\n+program main\n+  character(len=2), dimension(9), parameter :: f = ['(\"','He','ll','lo',', ','wo','rl','d!','\")']\n+  character(len=2), dimension(9) :: g = ['(\"','He','ll','lo',', ','wo','rl','d!','\")']\n+  character (len=20) :: line\n+  write (unit=line,fmt=f)\n+  if (line /= \"Helllo, world!\") STOP 1\n+  line = \" \"\n+  write (unit=line,fmt=g)\n+  if (line /= \"Helllo, world!\") STOP 2\n+end program main"}]}