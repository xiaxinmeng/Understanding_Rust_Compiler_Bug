{"sha": "ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMxMzg0YjdjNWQ5YWM3NjJjNDFmMGIxZTM1MGFhZjFmNWZlMzE3MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-01-19T10:46:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-01-19T10:46:31Z"}, "message": "re PR libstdc++/51845 (23_containers/unordered_multimap/erase/24061-multimap.cc segfault)\n\n\tPR libstdc++/51845\n\t* include/bits/hashtable.h\n\t(_Hashtable<>::erase(const_iterator, const_iterator)): Also update\n\t_M_buckets[__n_bkt] if __is_bucket_begin.\n\n\t* testsuite/23_containers/unordered_multimap/erase/51845-multimap.cc:\n\tNew test.\n\nFrom-SVN: r183300", "tree": {"sha": "1338823bdcd2c9cae56ffc7b00f9e2e3dd581dad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1338823bdcd2c9cae56ffc7b00f9e2e3dd581dad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9c9f128d7192b21c4be77422d76494aa7ddb474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c9f128d7192b21c4be77422d76494aa7ddb474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c9f128d7192b21c4be77422d76494aa7ddb474"}], "stats": {"total": 83, "additions": 82, "deletions": 1}, "files": [{"sha": "fa3523b539212a3dac192b8d89cb00ff4ca41f62", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170", "patch": "@@ -1,3 +1,12 @@\n+2012-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/51845\n+\t* include/bits/hashtable.h\n+\t(_Hashtable<>::erase(const_iterator, const_iterator)): Also update\n+\t_M_buckets[__n_bkt] if __is_bucket_begin.\n+\t* testsuite/23_containers/unordered_multimap/erase/51845-multimap.cc:\n+\tNew test.\n+\n 2012-01-18  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude (GLIBCXX_CONFIGURE_DOCBOOK): Fix quoting."}, {"sha": "d4f2aedfccd71e2ad06ceec22900b2ed192e8cd7", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170", "patch": "@@ -1544,7 +1544,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  __bkt = __n_bkt;\n \t}\n \n-      if (__n && __n_bkt != __bkt)\n+      if (__n && (__n_bkt != __bkt || __is_bucket_begin))\n \t_M_buckets[__n_bkt] = __prev_n;\n       __prev_n->_M_nxt = __n;\n       return iterator(__n);"}, {"sha": "450fb6faadf1114c88cd6146e7ae714d84ea9416", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/erase/51845-multimap.cc", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Ferase%2F51845-multimap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Ferase%2F51845-multimap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Ferase%2F51845-multimap.cc?ref=ac1384b7c5d9ac762c41f0b1e350aaf1f5fe3170", "patch": "@@ -0,0 +1,72 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2012-01-19  Jakub Jelinek  <jakub@redhat.com>\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/51845\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::unordered_multimap<int, int> Mmap;\n+  typedef Mmap::iterator       iterator;\n+  typedef Mmap::const_iterator const_iterator;\n+  typedef Mmap::value_type     value_type;\n+\n+  Mmap mm1;\n+\n+  mm1.insert(value_type(11135, 1));\n+  mm1.insert(value_type(11135, 17082));\n+  mm1.insert(value_type(9644, 24135));\n+  mm1.insert(value_type(9644, 9644));\n+  mm1.insert(value_type(13984, 19841));\n+  mm1.insert(value_type(9644, 1982));\n+  mm1.insert(value_type(13984, 1945));\n+  mm1.insert(value_type(7, 1982));\n+  mm1.insert(value_type(7, 1945));\n+  VERIFY( mm1.size() == 9 );\n+\n+  iterator it1 = mm1.begin();\n+  ++it1;\n+  iterator it2 = it1;\n+  ++it2;\n+  ++it2;\n+  iterator it3 = mm1.erase(it1, it2);\n+  VERIFY( mm1.size() == 7 );\n+  VERIFY( it3 == it2 );\n+  VERIFY( *it3 == *it2 );\n+\n+  const_iterator it4 = mm1.begin();\n+  ++it4;\n+  const_iterator it5 = it4;\n+  ++it5;\n+  const_iterator it6 = mm1.erase(it4);\n+  VERIFY( mm1.size() == 6 );\n+  VERIFY( it6 == it5 );\n+  VERIFY( *it6 == *it5 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}