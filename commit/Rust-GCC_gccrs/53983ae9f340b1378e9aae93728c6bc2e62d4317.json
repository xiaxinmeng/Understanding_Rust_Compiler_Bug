{"sha": "53983ae9f340b1378e9aae93728c6bc2e62d4317", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM5ODNhZTlmMzQwYjEzNzhlOWFhZTkzNzI4YzZiYzJlNjJkNDMxNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-06-23T11:51:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-06-23T11:51:34Z"}, "message": "re PR tree-optimization/36508 (ICE in compute_antic)\n\n\tPR tree-optimization/36508\n\t* tree-ssa-pre.c (compute_antic): Allow num_iterations up to\n\t499, don't check it at all in release compilers.\n\n\t* gcc.dg/pr36508.c: New test.\n\nFrom-SVN: r137036", "tree": {"sha": "dd142a166873f8566f124516b14bfcaaa82144dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd142a166873f8566f124516b14bfcaaa82144dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53983ae9f340b1378e9aae93728c6bc2e62d4317", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53983ae9f340b1378e9aae93728c6bc2e62d4317", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53983ae9f340b1378e9aae93728c6bc2e62d4317", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53983ae9f340b1378e9aae93728c6bc2e62d4317/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "836cd1da107038296d679483b78132775cca751c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/836cd1da107038296d679483b78132775cca751c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/836cd1da107038296d679483b78132775cca751c"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "409f5040a24ebfca323ef4839095b086fa325e91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53983ae9f340b1378e9aae93728c6bc2e62d4317/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53983ae9f340b1378e9aae93728c6bc2e62d4317/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53983ae9f340b1378e9aae93728c6bc2e62d4317", "patch": "@@ -1,3 +1,9 @@\n+2008-06-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/36508\n+\t* tree-ssa-pre.c (compute_antic): Allow num_iterations up to\n+\t499, don't check it at all in release compilers.\n+\n 2008-06-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*fop_<mode>_1_i387): Use SSE_FLOAT_MODE_P"}, {"sha": "1eaff577cc78c7072e9eb2590803029b5c233efc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53983ae9f340b1378e9aae93728c6bc2e62d4317/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53983ae9f340b1378e9aae93728c6bc2e62d4317/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=53983ae9f340b1378e9aae93728c6bc2e62d4317", "patch": "@@ -1,3 +1,8 @@\n+2008-06-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/36508\n+\t* gcc.dg/pr36508.c: New test.\n+\n 2008-06-20  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/inline-31.c: New test."}, {"sha": "30489923642aef5fdd124b991de3596d65aa5225", "filename": "gcc/testsuite/gcc.dg/pr36508.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53983ae9f340b1378e9aae93728c6bc2e62d4317/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36508.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53983ae9f340b1378e9aae93728c6bc2e62d4317/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36508.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36508.c?ref=53983ae9f340b1378e9aae93728c6bc2e62d4317", "patch": "@@ -0,0 +1,29 @@\n+/* PR tree-optimization/36508 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftree-pre\" } */\n+\n+void\n+foo (short *sp)\n+{\n+  int k;\n+  k = 1;\n+#define SP0 *sp++ = 1;\n+  while (1)\n+    {\n+      if (k > 6)\n+\tbreak;\n+      SP0\n+      k++;\n+    }\n+  k = 1;\n+  while (1)\n+    {\n+      if (k > 6)\n+\tbreak;\n+      SP0\n+      k++;\n+    }\n+#define SP1 SP0 SP0 SP0 SP0 SP0 SP0 SP0 SP0 SP0 SP0 SP0\n+#define SP2 SP1 SP1 SP1 SP1 SP1 SP1 SP1 SP1 SP1 SP1 SP1\n+  SP2\n+}"}, {"sha": "423afe04785f64da14cbac7bd642cf0c2983372f", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53983ae9f340b1378e9aae93728c6bc2e62d4317/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53983ae9f340b1378e9aae93728c6bc2e62d4317/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=53983ae9f340b1378e9aae93728c6bc2e62d4317", "patch": "@@ -2094,8 +2094,10 @@ compute_antic (void)\n \t\t\t\t\t\t      block->index));\n \t    }\n \t}\n+#ifdef ENABLE_CHECKING\n       /* Theoretically possible, but *highly* unlikely.  */\n-      gcc_assert (num_iterations < 50);\n+      gcc_assert (num_iterations < 500);\n+#endif\n     }\n \n   statistics_histogram_event (cfun, \"compute_antic iterations\",\n@@ -2124,8 +2126,10 @@ compute_antic (void)\n \t\t\t\t\t\t\t    block->index));\n \t\t}\n \t    }\n+#ifdef ENABLE_CHECKING\n \t  /* Theoretically possible, but *highly* unlikely.  */\n-\t  gcc_assert (num_iterations < 50);\n+\t  gcc_assert (num_iterations < 500);\n+#endif\n \t}\n       statistics_histogram_event (cfun, \"compute_partial_antic iterations\",\n \t\t\t\t  num_iterations);"}]}