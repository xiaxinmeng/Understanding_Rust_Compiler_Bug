{"sha": "10d4899cd0c373ac023fed5b63df374d6036c7ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkNDg5OWNkMGMzNzNhYzAyM2ZlZDViNjNkZjM3NGQ2MDM2YzdjZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-10-21T21:51:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-10-21T21:51:50Z"}, "message": "re PR c++/46117 (ICE: SIGSEGV in add_function_candidate (call.c:1630) on invalid typename usage)\n\n/cp\n2010-10-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/46117\n\t* call.c (add_function_candidate): Don't use TREE_VALUE on null\n\tparmnode.\n\n/testsuite\n2010-10-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/46117\n\t* g++.dg/parse/crash57.C: New.\n\nFrom-SVN: r165794", "tree": {"sha": "8b7cc9328e04a15d709e3fd149128085cb58ba16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b7cc9328e04a15d709e3fd149128085cb58ba16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10d4899cd0c373ac023fed5b63df374d6036c7ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d4899cd0c373ac023fed5b63df374d6036c7ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d4899cd0c373ac023fed5b63df374d6036c7ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d4899cd0c373ac023fed5b63df374d6036c7ce/comments", "author": null, "committer": null, "parents": [{"sha": "498f5fc9b7ed26e9246aafcb0a2bf2debff59107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/498f5fc9b7ed26e9246aafcb0a2bf2debff59107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/498f5fc9b7ed26e9246aafcb0a2bf2debff59107"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "ea83f252f07c04ca3bcdc91e8e4025ed0424cca5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d4899cd0c373ac023fed5b63df374d6036c7ce/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d4899cd0c373ac023fed5b63df374d6036c7ce/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=10d4899cd0c373ac023fed5b63df374d6036c7ce", "patch": "@@ -1,3 +1,9 @@\n+2010-10-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/46117\n+\t* call.c (add_function_candidate): Don't use TREE_VALUE on null\n+\tparmnode.\n+\n 2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* parser.c (cp_parser_objc_method_type): Mark inline.  Return a\n@@ -6,9 +12,9 @@\n \tcp_parser_objc_method_type and to objc_build_method_signature.\n \t(cp_parser_objc_method_prototype_list): Updated calls to\n \tobjc_add_method_declaration.  Use token->type to determine if it\n-\tis a class method or not.\t\n+\tis a class method or not.\n \t(cp_parser_objc_method_definition_list): Same change.\n-\t\n+\n 2010-10-20  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n \n \tPR c++/46056\n@@ -20,7 +26,7 @@\n \t* cp-lang.c (finish_file): Removed.\n \t* decl2.c (cp_write_global_declarations): Call\n \tobjc_write_global_declarations when compiling Objective-C++.\n-\t\n+\n 2010-10-19  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/46046"}, {"sha": "bdf97a2c2394c5037b054b050672902718dee93e", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d4899cd0c373ac023fed5b63df374d6036c7ce/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d4899cd0c373ac023fed5b63df374d6036c7ce/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=10d4899cd0c373ac023fed5b63df374d6036c7ce", "patch": "@@ -1613,9 +1613,10 @@ add_function_candidate (struct z_candidate **candidates,\n   /* Kludge: When looking for a function from a subobject while generating\n      an implicit copy/move constructor/operator=, don't consider anything\n      that takes (a reference to) an unrelated type.  See c++/44909.  */\n-  else if ((flags & LOOKUP_SPECULATIVE)\n-\t   || (current_function_decl\n-\t       && DECL_DEFAULTED_FN (current_function_decl)))\n+  else if (parmlist\n+\t   && ((flags & LOOKUP_SPECULATIVE)\n+\t       || (current_function_decl\n+\t\t   && DECL_DEFAULTED_FN (current_function_decl))))\n     {\n       if (DECL_CONSTRUCTOR_P (fn))\n \ti = 1;"}, {"sha": "5e9b6a10989a41e55cf59cc3ecdc9b8635222aea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d4899cd0c373ac023fed5b63df374d6036c7ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d4899cd0c373ac023fed5b63df374d6036c7ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=10d4899cd0c373ac023fed5b63df374d6036c7ce", "patch": "@@ -1,3 +1,8 @@\n+2010-10-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/46117\n+\t* g++.dg/parse/crash57.C: New.\n+\n 2010-10-21  Uros Bizjak  <ubizjak@gmail.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "c6daf777eb9b5bce4252eff0b102320a5b501c02", "filename": "gcc/testsuite/g++.dg/parse/crash57.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d4899cd0c373ac023fed5b63df374d6036c7ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d4899cd0c373ac023fed5b63df374d6036c7ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash57.C?ref=10d4899cd0c373ac023fed5b63df374d6036c7ce", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/46117\n+\n+struct A\n+{\n+  A (typename int); // { dg-error \"before|declaration\" }\n+};\n+\n+struct B : A {};\n+\n+B b;"}]}