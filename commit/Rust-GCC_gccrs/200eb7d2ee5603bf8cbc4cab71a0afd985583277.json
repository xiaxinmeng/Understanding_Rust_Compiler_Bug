{"sha": "200eb7d2ee5603bf8cbc4cab71a0afd985583277", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAwZWI3ZDJlZTU2MDNiZjhjYmM0Y2FiNzFhMGFmZDk4NTU4MzI3Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-04-27T14:18:25Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-04-27T14:18:25Z"}, "message": "predicates.md (avx_vpermilp_*_operand): Remove.\n\n\t* config/i386/predicates.md (avx_vpermilp_*_operand): Remove.\n\t(avx_vperm2f128_*_operand): Ditto.\n\t* config/i386/sse.md (*avx_vpermilp<mode>): Remove operand2 predicate.\n\tUse avx_vpermilp_parallel in insn condition.\n\t(*avx_vperm2f128<mode>_nozero): Remove operand3 predicate.\n\tUse avx_vperm2f128_parallel in insn condition.\n\nFrom-SVN: r173031", "tree": {"sha": "e24949252601db9e0564814ce0b2cea99bb8754c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e24949252601db9e0564814ce0b2cea99bb8754c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/200eb7d2ee5603bf8cbc4cab71a0afd985583277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200eb7d2ee5603bf8cbc4cab71a0afd985583277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200eb7d2ee5603bf8cbc4cab71a0afd985583277", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200eb7d2ee5603bf8cbc4cab71a0afd985583277/comments", "author": null, "committer": null, "parents": [{"sha": "7d6e252187acf272b527bb1e2203836e2cc73a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6e252187acf272b527bb1e2203836e2cc73a30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d6e252187acf272b527bb1e2203836e2cc73a30"}], "stats": {"total": 75, "additions": 23, "deletions": 52}, "files": [{"sha": "f2e0546954d07d34265aaf0666ba374264d797e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200eb7d2ee5603bf8cbc4cab71a0afd985583277/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200eb7d2ee5603bf8cbc4cab71a0afd985583277/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=200eb7d2ee5603bf8cbc4cab71a0afd985583277", "patch": "@@ -1,3 +1,12 @@\n+2011-04-27  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/predicates.md (avx_vpermilp_*_operand): Remove.\n+\t(avx_vperm2f128_*_operand): Ditto.\n+\t* config/i386/sse.md (*avx_vpermilp<mode>): Remove operand2 predicate.\n+\tUse avx_vpermilp_parallel in insn condition.\n+\t(*avx_vperm2f128<mode>_nozero): Remove operand3 predicate.\n+\tUse avx_vperm2f128_parallel in insn condition.\n+\n 2011-04-27  Richard Guenther  <rguenther@suse.de>\n \n \t* Makefile.in (tree-ssa-structalias.o): Remove\n@@ -10,8 +19,7 @@\n \t* tree-ssa-alias.h (delete_alias_heapvars): Remove.\n \t* tree-ssa.c (delete_tree_ssa): Do not call delete_alias_heapvars.\n \t* tree-flow.h (struct var_ann_d): Remove is_heapvar flag.\n-\t* tree-ssa-live.c (remove_unused_locals): Do not check is_heapvar\n-\tflag.\n+\t* tree-ssa-live.c (remove_unused_locals): Do not check is_heapvar flag.\n \t* tree-ssa-structalias.c (heapvar_for_stmt): Remove.\n \t(struct heapvar_map): Likewise.\n \t(heapvar_map_eq, heapvar_map_hash, heapvar_lookup,\n@@ -47,14 +55,13 @@\n \n \t* ipa-prop.c (function_insertion_hook_holder): New holder.\n \t(ipa_add_new_function): New function.\n-\t(ipa_register_cgraph_hooks, ipa_unregister_cgraph_hooks): Register/deregister\n-\tholder.\n+\t(ipa_register_cgraph_hooks, ipa_unregister_cgraph_hooks):\n+\tRegister/deregister holder.\n \n 2011-04-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/48772\n-\t* tree-ssa-pre.c (eliminate): Update call stmts after elimination\n-\tonly.\n+\t* tree-ssa-pre.c (eliminate): Update call stmts after elimination only.\n \n 2011-04-27  Richard Guenther  <rguenther@suse.de>\n \n@@ -120,7 +127,7 @@\n \t* ipa-inline.c (edge_badness): Update.\n \t(ipa_inline): dump summaries after inlining.\n \t* ipa-inline.h (struct inline_edge_summary, inline_edge_summary_t):\n-\tnew.\n+\tNew.\n \t(inline_edge_summary): New function.\n \t* ipa-inline-analysis.c (edge_duplication_hook_holder): New holder.\n \t(inline_edge_removal_hook): Handle edge summaries.\n@@ -185,8 +192,7 @@\n \n 2011-04-26  Xinliang David Li  <davidxl@google.com>\n \n-\t* tree-ssa-uninit.c (warn_uninitialized_phi): Pass\n-\t warning code.\n+\t* tree-ssa-uninit.c (warn_uninitialized_phi): Pass warning code.\n \t* c-family/c-opts.c (c_common_handle_option): Set\n \twarn_maybe_uninitialized.\n \t* opts.c (common_handle_option): Ditto.\n@@ -198,8 +204,7 @@\n \n 2011-04-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n-\t* config/mips/iris6.h (LOCAL_LABEL_PREFIX): Don't test\n-\tTARGET_NEWABI.\n+\t* config/mips/iris6.h (LOCAL_LABEL_PREFIX): Don't test TARGET_NEWABI.\n \t(WINT_TYPE_SIZE): Use INT_TYPE_SIZE.\n \t(TARGET_OS_CPP_BUILTINS): Remove TARGET_IRIX6 guards.\n \n@@ -210,8 +215,7 @@\n \n \t* doc/install.texi (Specific, mips-*-*): Move mips-tfile,\n \tmips-tdump reference to ...\n-\t(Specific, alpha*-dec-osf5.1): ... here.\n-\tAdapt for Tru64 UNIX.\n+\t(Specific, alpha*-dec-osf5.1): ... here.  Adapt for Tru64 UNIX.\n \t* doc/trouble.texi (Cross-Compiler Problems): Replace MIPS\n \treference by Tru64 UNIX.\n "}, {"sha": "fae3a053a4b5dbe5b6f7e3bc1aa99468b5f48d08", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200eb7d2ee5603bf8cbc4cab71a0afd985583277/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200eb7d2ee5603bf8cbc4cab71a0afd985583277/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=200eb7d2ee5603bf8cbc4cab71a0afd985583277", "patch": "@@ -1179,41 +1179,6 @@\n   return true;\n })\n \n-;; Return true if OP is a parallel for a vpermilp[ds] permute.\n-;; ??? It would be much easier if the PARALLEL for a VEC_SELECT\n-;; had a mode, but it doesn't.  So we have 4 copies and install\n-;; the mode by hand.\n-\n-(define_predicate \"avx_vpermilp_v8sf_operand\"\n-  (and (match_code \"parallel\")\n-       (match_test \"avx_vpermilp_parallel (op, V8SFmode)\")))\n-\n-(define_predicate \"avx_vpermilp_v4df_operand\"\n-  (and (match_code \"parallel\")\n-       (match_test \"avx_vpermilp_parallel (op, V4DFmode)\")))\n-\n-(define_predicate \"avx_vpermilp_v4sf_operand\"\n-  (and (match_code \"parallel\")\n-       (match_test \"avx_vpermilp_parallel (op, V4SFmode)\")))\n-\n-(define_predicate \"avx_vpermilp_v2df_operand\"\n-  (and (match_code \"parallel\")\n-       (match_test \"avx_vpermilp_parallel (op, V2DFmode)\")))\n-\n-;; Return true if OP is a parallel for a vperm2f128 permute.\n-\n-(define_predicate \"avx_vperm2f128_v8sf_operand\"\n-  (and (match_code \"parallel\")\n-       (match_test \"avx_vperm2f128_parallel (op, V8SFmode)\")))\n-\n-(define_predicate \"avx_vperm2f128_v8si_operand\"\n-  (and (match_code \"parallel\")\n-       (match_test \"avx_vperm2f128_parallel (op, V8SImode)\")))\n-\n-(define_predicate \"avx_vperm2f128_v4df_operand\"\n-  (and (match_code \"parallel\")\n-       (match_test \"avx_vperm2f128_parallel (op, V4DFmode)\")))\n-\n ;; Return true if OP is a parallel for a vbroadcast permute.\n \n (define_predicate \"avx_vbroadcast_operand\""}, {"sha": "5963a7fe6010f5d8c911aea5e5772302bcacab6c", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200eb7d2ee5603bf8cbc4cab71a0afd985583277/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200eb7d2ee5603bf8cbc4cab71a0afd985583277/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=200eb7d2ee5603bf8cbc4cab71a0afd985583277", "patch": "@@ -10055,9 +10055,10 @@\n   [(set (match_operand:AVXMODEF2P 0 \"register_operand\" \"=x\")\n \t(vec_select:AVXMODEF2P\n \t  (match_operand:AVXMODEF2P 1 \"nonimmediate_operand\" \"xm\")\n-\t  (match_parallel 2 \"avx_vpermilp_<mode>_operand\"\n+\t  (match_parallel 2 \"\"\n \t    [(match_operand 3 \"const_int_operand\" \"\")])))]\n-  \"TARGET_AVX\"\n+  \"TARGET_AVX\n+   && avx_vpermilp_parallel (operands[2], <MODE>mode)\"\n {\n   int mask = avx_vpermilp_parallel (operands[2], <MODE>mode) - 1;\n   operands[2] = GEN_INT (mask);\n@@ -10140,9 +10141,10 @@\n \t  (vec_concat:<ssedoublesizemode>\n \t    (match_operand:AVX256MODE2P 1 \"register_operand\" \"x\")\n \t    (match_operand:AVX256MODE2P 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (match_parallel 3 \"avx_vperm2f128_<mode>_operand\"\n+\t  (match_parallel 3 \"\"\n \t    [(match_operand 4 \"const_int_operand\" \"\")])))]\n-  \"TARGET_AVX\"\n+  \"TARGET_AVX\n+   && avx_vperm2f128_parallel (operands[3], <MODE>mode)\"\n {\n   int mask = avx_vperm2f128_parallel (operands[3], <MODE>mode) - 1;\n   operands[3] = GEN_INT (mask);"}]}