{"sha": "47986760dd977164fb821e3d6a722899e0ea783f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc5ODY3NjBkZDk3NzE2NGZiODIxZTNkNmE3MjI4OTllMGVhNzgzZg==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-12-27T15:40:02Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-12-27T15:40:02Z"}, "message": "accommodate ancient bourne shells\n\nFrom-SVN: r38498", "tree": {"sha": "20574a252c2f6b4b768ab9b058955765a4016c02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20574a252c2f6b4b768ab9b058955765a4016c02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47986760dd977164fb821e3d6a722899e0ea783f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47986760dd977164fb821e3d6a722899e0ea783f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47986760dd977164fb821e3d6a722899e0ea783f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47986760dd977164fb821e3d6a722899e0ea783f/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce94d12f67d02e9772add99f21c1d1abebd82085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce94d12f67d02e9772add99f21c1d1abebd82085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce94d12f67d02e9772add99f21c1d1abebd82085"}], "stats": {"total": 244, "additions": 7, "deletions": 237}, "files": [{"sha": "4f1c1e10163d6320ff93f7d3d0a5292a8dbe637e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47986760dd977164fb821e3d6a722899e0ea783f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47986760dd977164fb821e3d6a722899e0ea783f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47986760dd977164fb821e3d6a722899e0ea783f", "patch": "@@ -1,3 +1,9 @@\n+2000-12-27  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/Makefile.in: fix for ancient Bourne shell\n+\t* fixinc/Makefile.BEOS: obsolete\n+\t* fixinc/Makefile.DOS: obsolete\n+\n 2000-12-27  Bernd Schmidt  <bernds@redhat.com>\n \n \t* sched-deps.c (get_condition, conditions_mutex_p): New functions."}, {"sha": "3994ebda4318cc7f41fcf6841741a7cf914cde64", "filename": "gcc/fixinc/Makefile.BEOS", "status": "removed", "additions": 0, "deletions": 118, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ffixinc%2FMakefile.BEOS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ffixinc%2FMakefile.BEOS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.BEOS?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -1,118 +0,0 @@\n-# Makefile for GNU compilers on a Be box.\n-#\n-#   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n-\n-#This file is part of GNU CC.\n-\n-#GNU CC is free software; you can redistribute it and/or modify\n-#it under the terms of the GNU General Public License as published by\n-#the Free Software Foundation; either version 2, or (at your option)\n-#any later version.\n-\n-#GNU CC is distributed in the hope that it will be useful,\n-#but WITHOUT ANY WARRANTY; without even the implied warranty of\n-#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-#GNU General Public License for more details.\n-\n-#You should have received a copy of the GNU General Public License\n-#along with GNU CC; see the file COPYING.  If not, write to\n-#the Free Software Foundation, 59 Temple Place - Suite 330,\n-#Boston, MA 02111-1307, USA.\n-\n-# This Makefile.BEOS file lives in the fixinc subdirectory.\n-# Its purpose is to build the fixincl and applyfix programs for\n-# the Be port of GCC.\n-\n-FL_LIST = $(CFLAGS) $(CPPFLAGS) $(WARN_CFLAGS)\n-FIXINC_DEFS = -DIN_GCC $(FL_LIST) $(INCLUDES) -DSEPARATE_FIX_PROC\n-\n-# Directory where sources are, from where we are.\n-VPATH = $(srcdir)\n-subdir = fixinc\n-\n-# End of variables for you to override.\n-\n-default : all\n-\n-# Now figure out from those variables how to compile and link.\n-\n-# Specify the directories to be searched for header files.\n-# Both . and srcdir are used, in that order.\n-#\n-INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. \\\n--I$(srcdir)/../config -I$(srcdir)/../../include\n-\n-# Always use -I$(srcdir)/config when compiling.\n-.c.o:\n-\t$(CC) -c $(FIXINC_DEFS) $<\n-\n-# The only suffixes we want for implicit rules are .c and .o.\n-.SUFFIXES:\n-.SUFFIXES: .c .o\n-\n-#\f\n-\n-## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n-##\n-##  Makefile for constructing the \"best\" include fixer we can\n-##\n-## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n-\n-LIBERTY = ../../libiberty/libiberty.a\n-OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n-      gnu-regex.o fixlib.o\n-\n-HDR = server.h gnu-regex.h fixlib.h machname.h\n-\n-TARGETS = fixincl@build_exeext@ applyfix@build_exeext@\n-\n-all : $(TARGETS)\n-gen : $(srcdir)/fixincl.x\n-\n-FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o\n-\n-fixincl@build_exeext@: $(FIXINCL_OBJ) $(LIBERTY)\n-\t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n-\n-APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o\n-\n-applyfix@build_exeext@: $(APPLY_OBJ) $(LIBERTY)\n-\t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n-\n-$(OBJ)      : $(HDR)\n-fixincl.o   : $(srcdir)/fixincl.x fixincl.c\n-fixtests.o  : fixtests.c\n-fixfixes.o  : fixfixes.c $(srcdir)/fixincl.x\n-server.o    : server.c\n-procopen.o  : procopen.c\n-gnu-regex.o : gnu-regex.c\n-fixlib.o    : fixlib.c\n-\n-#  'machname.h' is built in the build directory.\n-#  'fixincl.x' in the source dir.\n-#\n-machname.h: ../specs\n-\t$(SHELL) $(srcdir)/genfixes $@\n-\n-$(srcdir)/fixincl.x: fixincl.tpl inclhack.def\n-\tcd $(srcdir) ; $(SHELL) ./genfixes $@\n-\n-clean:\n-\trm -f *.o $(TARGETS) machname.h *~\n-\n-maintainer-clean : clean\n-\trm -f $(srcdir)/fixincl.x\n-\n-#  Build the executable and copy up into gcc dir.\n-#  We still copy the script because we still have alternative scripts.\n-#\n-install-bin : $(TARGETS)\n-\t./fixincl -v\n-\t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n-\t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n-\t@if [ -f ./fixincl.sh ] ; \\\n-\tthen echo cp ./fixincl.sh ../fixinc.sh ; \\\n-\t\tcp ./fixincl.sh ../fixinc.sh ; \\\n-\telse echo cp $(srcdir)/fixincl.sh ../fixinc.sh ; \\\n-\t\tcp $(srcdir)/fixincl.sh ../fixinc.sh ; fi\n-\tchmod 755 ../fixinc.sh"}, {"sha": "a606a7a24c6397a12fc121fff579fa5c35e9d665", "filename": "gcc/fixinc/Makefile.DOS", "status": "removed", "additions": 0, "deletions": 118, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ffixinc%2FMakefile.DOS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ffixinc%2FMakefile.DOS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.DOS?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -1,118 +0,0 @@\n-# Makefile for GNU compilers on a DOS box.\n-#\n-#   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n-\n-#This file is part of GNU CC.\n-\n-#GNU CC is free software; you can redistribute it and/or modify\n-#it under the terms of the GNU General Public License as published by\n-#the Free Software Foundation; either version 2, or (at your option)\n-#any later version.\n-\n-#GNU CC is distributed in the hope that it will be useful,\n-#but WITHOUT ANY WARRANTY; without even the implied warranty of\n-#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-#GNU General Public License for more details.\n-\n-#You should have received a copy of the GNU General Public License\n-#along with GNU CC; see the file COPYING.  If not, write to\n-#the Free Software Foundation, 59 Temple Place - Suite 330,\n-#Boston, MA 02111-1307, USA.\n-\n-# This Makefile.DOS file lives in the fixinc subdirectory.\n-# Its purpose is to build the fixincl and applyfix programs for\n-# the DJGPP (aka MS-DOS) port of GCC.\n-\n-FL_LIST = $(CFLAGS) $(CPPFLAGS) $(WARN_CFLAGS)\n-FIXINC_DEFS = -DIN_GCC $(FL_LIST) $(INCLUDES) -DSEPARATE_FIX_PROC\n-\n-# Directory where sources are, from where we are.\n-VPATH = $(srcdir)\n-subdir = fixinc\n-\n-# End of variables for you to override.\n-\n-default : all\n-\n-# Now figure out from those variables how to compile and link.\n-\n-# Specify the directories to be searched for header files.\n-# Both . and srcdir are used, in that order.\n-#\n-INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. \\\n--I$(srcdir)/../config -I$(srcdir)/../../include\n-\n-# Always use -I$(srcdir)/config when compiling.\n-.c.o:\n-\t$(CC) -c $(FIXINC_DEFS) $<\n-\n-# The only suffixes we want for implicit rules are .c and .o.\n-.SUFFIXES:\n-.SUFFIXES: .c .o\n-\n-#\f\n-\n-## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n-##\n-##  Makefile for constructing the \"best\" include fixer we can\n-##\n-## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n-\n-LIBERTY = ../../libiberty/libiberty.a\n-OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n-      gnu-regex.o fixlib.o\n-\n-HDR = server.h gnu-regex.h fixlib.h machname.h\n-\n-TARGETS = fixincl@build_exeext@ applyfix@build_exeext@\n-\n-all : $(TARGETS)\n-gen : $(srcdir)/fixincl.x\n-\n-FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o\n-\n-fixincl@build_exeext@: $(FIXINCL_OBJ) $(LIBERTY)\n-\t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n-\n-APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o\n-\n-applyfix@build_exeext@: $(APPLY_OBJ) $(LIBERTY)\n-\t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n-\n-$(OBJ)      : $(HDR)\n-fixincl.o   : $(srcdir)/fixincl.x fixincl.c\n-fixtests.o  : fixtests.c\n-fixfixes.o  : fixfixes.c $(srcdir)/fixincl.x\n-server.o    : server.c\n-procopen.o  : procopen.c\n-gnu-regex.o : gnu-regex.c\n-fixlib.o    : fixlib.c\n-\n-#  'machname.h' is built in the build directory.\n-#  'fixincl.x' in the source dir.\n-#\n-machname.h: ../specs\n-\t$(SHELL) $(srcdir)/genfixes $@\n-\n-$(srcdir)/fixincl.x: fixincl.tpl inclhack.def\n-\tcd $(srcdir) ; $(SHELL) ./genfixes $@\n-\n-clean:\n-\trm -f *.o $(TARGETS) machname.h *~\n-\n-maintainer-clean : clean\n-\trm -f $(srcdir)/fixincl.x\n-\n-#  Build the executable and copy up into gcc dir.\n-#  We still copy the script because we still have alternative scripts.\n-#\n-install-bin : $(TARGETS)\n-\t./fixincl -v\n-\t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n-\t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n-\t@if [ -f ./fixincl.sh ] ; \\\n-\tthen echo cp ./fixincl.sh ../fixinc.sh ; \\\n-\t\tcp ./fixincl.sh ../fixinc.sh ; \\\n-\telse echo cp $(srcdir)/fixincl.sh ../fixinc.sh ; \\\n-\t\tcp $(srcdir)/fixincl.sh ../fixinc.sh ; fi\n-\tchmod 755 ../fixinc.sh"}, {"sha": "88f615da36e0ec6b0ec54a2e4ee359dc38c73867", "filename": "gcc/fixinc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47986760dd977164fb821e3d6a722899e0ea783f/gcc%2Ffixinc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47986760dd977164fb821e3d6a722899e0ea783f/gcc%2Ffixinc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.in?ref=47986760dd977164fb821e3d6a722899e0ea783f", "patch": "@@ -117,7 +117,7 @@ maintainer-clean : clean\n install-bin : $(TARGETS)\n \t./fixincl -v\n \t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n-\t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n+\t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; else : ; fi\n \t@cp $(srcdir)/fixincl.sh ../fixinc.sh\n \tchmod 755 ../fixinc.sh\n "}]}