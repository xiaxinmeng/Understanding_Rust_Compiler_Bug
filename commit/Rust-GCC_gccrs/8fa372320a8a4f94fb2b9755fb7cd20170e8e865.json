{"sha": "8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZhMzcyMzIwYThhNGY5NGZiMmI5NzU1ZmI3Y2QyMDE3MGU4ZTg2NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-08-30T10:10:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-08-30T10:10:26Z"}, "message": "postreload-gcse.c (bb_has_well_behaved_predecessors): Tweak criterion used for abnormal egdes.\n\n\t* postreload-gcse.c (bb_has_well_behaved_predecessors): Tweak criterion\n\tused for abnormal egdes.\n\nFrom-SVN: r239858", "tree": {"sha": "db7824d3a5922688416323168c11922fda5806be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db7824d3a5922688416323168c11922fda5806be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/comments", "author": null, "committer": null, "parents": [{"sha": "6f651baeb7092ada83febdaebb0f5e22eef184c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f651baeb7092ada83febdaebb0f5e22eef184c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f651baeb7092ada83febdaebb0f5e22eef184c8"}], "stats": {"total": 166, "additions": 165, "deletions": 1}, "files": [{"sha": "6d1cabe0ea471b3cf73b9f40a387ced8232030bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "patch": "@@ -1,3 +1,8 @@\n+2016-08-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* postreload-gcse.c (bb_has_well_behaved_predecessors): Tweak criterion\n+\tused for abnormal egdes.\n+\n 2016-08-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/72866"}, {"sha": "da04fb74706538f616604a6423c17d7066a0bc05", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "patch": "@@ -962,7 +962,9 @@ bb_has_well_behaved_predecessors (basic_block bb)\n \n   FOR_EACH_EDGE (pred, ei, bb->preds)\n     {\n-      if ((pred->flags & EDGE_ABNORMAL) && EDGE_CRITICAL_P (pred))\n+      /* commit_one_edge_insertion refuses to insert on abnormal edges even if\n+\t the source has only one successor so EDGE_CRITICAL_P is too weak.  */\n+      if ((pred->flags & EDGE_ABNORMAL) && !single_pred_p (pred->dest))\n \treturn false;\n \n       if ((pred->flags & EDGE_ABNORMAL_CALL) && cfun->has_nonlocal_label)"}, {"sha": "ffd44916917aca0ffdd84bf0935d0511cc3e7c8f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "patch": "@@ -1,3 +1,8 @@\n+2016-08-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt57.ad[sb]: New test.\n+\t* gnat.dg/opt57_pkg.ads: New helper.\n+\n 2016-08-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69047"}, {"sha": "f532f09df2eb0ef3bc98b54798867facbdcf991e", "filename": "gcc/testsuite/gnat.dg/opt57.adb", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Ftestsuite%2Fgnat.dg%2Fopt57.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Ftestsuite%2Fgnat.dg%2Fopt57.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt57.adb?ref=8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "patch": "@@ -0,0 +1,89 @@\n+package body Opt57 is\n+\n+   type Phase_Enum is (None_Phase, FE_Init_Phase, FE_Phase);\n+\n+   type Message_State is (No_Messages, Some_Messages);\n+\n+   type Module_List_Array is array (Phase_Enum, Message_State) of List;\n+\n+   type Private_Module_Factory is limited record\n+      Module_Lists : Module_List_Array;\n+   end record;\n+\n+   type Element_Array is array (Positive range <>) of Module_Factory_Ptr;\n+\n+   type Hash_Table is array (Positive range <>) of aliased Module_Factory_Ptr;\n+\n+   type Heap_Data_Rec (Table_Last : Positive) is limited record\n+      Number_Of_Elements : Positive;\n+      Table              : Hash_Table (1 .. Table_Last);\n+   end record;\n+\n+   type Heap_Data_Ptr is access Heap_Data_Rec;\n+\n+   type Table is limited record\n+      Data : Heap_Data_Ptr;\n+   end record;\n+\n+   function All_Elements (M : Table) return Element_Array is\n+      Result : Element_Array (1 .. Natural (M.Data.Number_Of_Elements));\n+      Last   : Natural := 0;\n+   begin\n+      for H in M.Data.Table'Range loop\n+         Last := Last + 1;\n+         Result (Last) := M.Data.Table(H);\n+      end loop;\n+      return Result;\n+   end;\n+\n+   The_Factories : Table;\n+\n+   subtype Language_Array is Element_Array;\n+   type Language_Array_Ptr is access Language_Array;\n+   All_Languages : Language_Array_Ptr := null;\n+\n+   procedure Init is\n+   begin\n+      if All_Languages = null then\n+         All_Languages := new Language_Array'(All_Elements (The_Factories));\n+      end if;\n+   end;\n+\n+   function Is_Empty (L : List) return Boolean is\n+   begin\n+      return Link_Constant (L.Next) = L'Unchecked_Access;\n+   end;\n+\n+   function First (L : List) return Linkable_Ptr is\n+   begin\n+      return Links_Type (L.Next.all).Container.all'Access;\n+   end;\n+\n+   procedure Update is\n+      Check_New_Dependences : Boolean := False;\n+   begin\n+      loop\n+         for Lang_Index in All_Languages'Range loop\n+            for Has_Messages in Message_State loop\n+               declare\n+                  L : List renames\n+                    All_Languages (Lang_Index).Priv.Module_Lists\n+                      (FE_Init_Phase, Has_Messages);\n+               begin\n+                  while not Is_Empty (L) loop\n+                     declare\n+                        Module_In_Init_State : constant Module_Ptr :=\n+                          Module_Ptr (First (L));\n+                        Pin_Dependence : Pinned (Module_In_Init_State);\n+                     begin\n+                        Check_New_Dependences := True;\n+                     end;\n+                  end loop;\n+               end;\n+            end loop;\n+         end loop;\n+         exit when not Check_New_Dependences;\n+      end loop;\n+   end;\n+\n+end Opt57;"}, {"sha": "1bee7992b1508b7b90e11310fc70e83e442e79d6", "filename": "gcc/testsuite/gnat.dg/opt57.ads", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Ftestsuite%2Fgnat.dg%2Fopt57.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Ftestsuite%2Fgnat.dg%2Fopt57.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt57.ads?ref=8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "patch": "@@ -0,0 +1,50 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O3\" }\n+\n+with Ada.Finalization; use Ada.Finalization;\n+with Opt57_Pkg; use Opt57_Pkg;\n+\n+package Opt57 is\n+\n+   procedure Update;\n+\n+   procedure Init;\n+\n+   type Module_Factory is abstract new Limited_Controlled with private;\n+\n+   type Root_Module_Rec (Language : access Module_Factory'Class)\n+   is abstract new GC_Pool with null record;\n+\n+   type List is tagged limited private;\n+   type Linkable is abstract new Root_Module_Rec with private;\n+   type Linkable_Ptr is access all Linkable'Class;\n+\n+private\n+\n+   type Link is access all List'Class;\n+   type Link_Constant is access constant List'Class;\n+   type List is tagged limited record\n+      Next : Link;\n+   end record;\n+\n+   type Links_Type (Container : access Linkable) is new List with null record;\n+\n+   type Linkable is abstract new Root_Module_Rec with record\n+      On_List : Link_Constant;\n+      Links   : aliased Links_Type (Linkable'Access);\n+   end record;\n+\n+   type Module_Rec (Language : access Module_Factory'Class)\n+   is abstract new Linkable (Language) with null record;\n+   type Module_Ptr is access all Module_Rec'Class;\n+\n+   type Private_Module_Factory;\n+   type Private_Module_Factory_Ptr is access Private_Module_Factory;\n+\n+   type Module_Factory is abstract new Limited_Controlled with record\n+      Priv : Private_Module_Factory_Ptr;\n+   end record;\n+\n+   type Module_Factory_Ptr is access all Module_Factory'Class;\n+\n+end Opt57;"}, {"sha": "9d2a9b6c07abc36d4857e4a4e0055823b7f3bc47", "filename": "gcc/testsuite/gnat.dg/opt57_pkg.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Ftestsuite%2Fgnat.dg%2Fopt57_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa372320a8a4f94fb2b9755fb7cd20170e8e865/gcc%2Ftestsuite%2Fgnat.dg%2Fopt57_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt57_pkg.ads?ref=8fa372320a8a4f94fb2b9755fb7cd20170e8e865", "patch": "@@ -0,0 +1,13 @@\n+with System.Storage_Pools; use System.Storage_Pools;\n+\n+with Ada.Finalization; use Ada.Finalization;\n+\n+package Opt57_Pkg is\n+\n+   type GC_Pool is abstract new Root_Storage_Pool with null record;\n+\n+   type Pinned (Pool : access GC_Pool'Class) is new Controlled with null record;\n+\n+   procedure Finalize (X : in out Pinned);\n+\n+end Opt57_Pkg;"}]}