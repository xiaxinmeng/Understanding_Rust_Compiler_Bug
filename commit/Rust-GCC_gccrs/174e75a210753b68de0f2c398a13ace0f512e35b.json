{"sha": "174e75a210753b68de0f2c398a13ace0f512e35b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc0ZTc1YTIxMDc1M2I2OGRlMGYyYzM5OGExM2FjZTBmNTEyZTM1Yg==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2021-06-09T09:12:57Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2021-06-09T09:17:01Z"}, "message": "arc: Update doloop_end patterns\n\nARC processor can use LP instruction to implement zero overlay loops.\nThe current inplementation doesn't handle the unlikely situation when\nthe loop iterator is located in memory.  Refurbish the loop_end insn\npattern into a define_insn_and_split pattern.\n\ngcc/\n2021-07-09  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.md (loop_end): Change it to\n\tdefine_insn_and_split.\n\nSigned-off-by: Claudiu Zissulescu <claziss@synopsys.com>", "tree": {"sha": "5352af06de53e859836418519573e0612ca82cb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5352af06de53e859836418519573e0612ca82cb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/174e75a210753b68de0f2c398a13ace0f512e35b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174e75a210753b68de0f2c398a13ace0f512e35b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/174e75a210753b68de0f2c398a13ace0f512e35b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174e75a210753b68de0f2c398a13ace0f512e35b/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd4778a59b4693777c732075021375e19eee6a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4778a59b4693777c732075021375e19eee6a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd4778a59b4693777c732075021375e19eee6a76"}], "stats": {"total": 46, "additions": 20, "deletions": 26}, "files": [{"sha": "90ba85e274e8276e872a97a72c9b5891773cf546", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 20, "deletions": 26, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174e75a210753b68de0f2c398a13ace0f512e35b/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174e75a210753b68de0f2c398a13ace0f512e35b/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=174e75a210753b68de0f2c398a13ace0f512e35b", "patch": "@@ -4962,7 +4962,7 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n (define_expand \"doloop_end\"\n   [(parallel [(set (pc)\n \t\t   (if_then_else\n-\t\t    (ne (match_operand 0 \"\" \"\")\n+\t\t    (ne (match_operand 0 \"nonimmediate_operand\")\n \t\t\t(const_int 1))\n \t\t    (label_ref (match_operand 1 \"\" \"\"))\n \t\t    (pc)))\n@@ -4988,44 +4988,38 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n \n ;; if by any chance the lp_count is not used, then use an 'r'\n ;; register, instead of going to memory.\n-(define_insn \"loop_end\"\n-  [(set (pc)\n-\t(if_then_else (ne (match_operand:SI 2 \"nonimmediate_operand\" \"0,m\")\n-\t\t\t  (const_int 1))\n-\t\t      (label_ref (match_operand 1 \"\" \"\"))\n-\t\t      (pc)))\n-   (set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,m\")\n-\t(plus (match_dup 2) (const_int -1)))\n-   (unspec [(const_int 0)] UNSPEC_ARC_LP)\n-   (clobber (match_scratch:SI 3 \"=X,&r\"))]\n-  \"\"\n-  \"; ZOL_END, begins @%l1\"\n-  [(set_attr \"length\" \"0\")\n-   (set_attr \"predicable\" \"no\")\n-   (set_attr \"type\" \"loop_end\")])\n-\n ;; split pattern for the very slim chance when the loop register is\n ;; memory.\n-(define_split\n+(define_insn_and_split \"loop_end\"\n   [(set (pc)\n-\t(if_then_else (ne (match_operand:SI 0 \"memory_operand\")\n+\t(if_then_else (ne (match_operand:SI 0 \"nonimmediate_operand\" \"+r,!m\")\n \t\t\t  (const_int 1))\n-\t\t      (label_ref (match_operand 1 \"\"))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))\n    (set (match_dup 0) (plus (match_dup 0) (const_int -1)))\n    (unspec [(const_int 0)] UNSPEC_ARC_LP)\n-   (clobber (match_scratch:SI 2))]\n-  \"memory_operand (operands[0], SImode)\"\n+   (clobber (match_scratch:SI 2 \"=X,&r\"))]\n+  \"\"\n+  \"@\n+   ; ZOL_END, begins @%l1\n+   #\"\n+  \"reload_completed && memory_operand (operands[0], Pmode)\"\n   [(set (match_dup 2) (match_dup 0))\n-   (set (match_dup 2) (plus:SI (match_dup 2) (const_int -1)))\n+   (parallel\n+    [(set (reg:CC_ZN CC_REG)\n+\t  (compare:CC_ZN (plus:SI (match_dup 2) (const_int -1))\n+\t\t\t (const_int 0)))\n+     (set (match_dup 2) (plus:SI (match_dup 2) (const_int -1)))])\n    (set (match_dup 0) (match_dup 2))\n-   (set (reg:CC CC_REG) (compare:CC (match_dup 2) (const_int 0)))\n    (set (pc)\n-\t(if_then_else (ne (reg:CC CC_REG)\n+\t(if_then_else (ne (reg:CC_ZN CC_REG)\n \t\t\t  (const_int 0))\n \t\t      (label_ref (match_dup 1))\n \t\t      (pc)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"length\" \"0,24\")\n+   (set_attr \"predicable\" \"no\")\n+   (set_attr \"type\" \"loop_end\")])\n \n (define_insn \"loop_fail\"\n   [(set (reg:SI LP_COUNT)"}]}