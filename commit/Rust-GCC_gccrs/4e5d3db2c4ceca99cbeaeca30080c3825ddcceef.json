{"sha": "4e5d3db2c4ceca99cbeaeca30080c3825ddcceef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU1ZDNkYjJjNGNlY2E5OWNiZWFlY2EzMDA4MGMzODI1ZGRjY2VlZg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-10-09T11:34:21Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-10-09T11:34:21Z"}, "message": "re PR fortran/50659 ([F03] ICE with PROCEDURE statement)\n\n2011-10-09  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50659\n\t* expr.c (replace_symbol): Only do replacement if the symbol is a dummy.\n\n2011-10-09  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50659\n\t* gfortran.dg/proc_decl_27.f90: New.\n\nFrom-SVN: r179723", "tree": {"sha": "a4cb2cad23bc8f683ad7e55d3f8a62e700215779", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4cb2cad23bc8f683ad7e55d3f8a62e700215779"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bb4db675ad3ca37d41664938f93db86ec577e7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb4db675ad3ca37d41664938f93db86ec577e7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb4db675ad3ca37d41664938f93db86ec577e7b"}], "stats": {"total": 53, "additions": 44, "deletions": 9}, "files": [{"sha": "8326a9ffd88ac9065acadb337fe2c6d491710ba8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4e5d3db2c4ceca99cbeaeca30080c3825ddcceef", "patch": "@@ -1,3 +1,8 @@\n+2011-10-09  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50659\n+\t* expr.c (replace_symbol): Only do replacement if the symbol is a dummy.\n+\n 2011-10-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/47844"}, {"sha": "8a09a28b2898dbc3f92963bb9433b3e41431a3c3", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=4e5d3db2c4ceca99cbeaeca30080c3825ddcceef", "patch": "@@ -4134,8 +4134,9 @@ gfc_expr_check_typed (gfc_expr* e, gfc_namespace* ns, bool strict)\n   return error_found ? FAILURE : SUCCESS;\n }\n \n-/* Walk an expression tree and replace all symbols with a corresponding symbol\n-   in the formal_ns of \"sym\". Needed for copying interfaces in PROCEDURE\n+\n+/* Walk an expression tree and replace all dummy symbols by the corresponding\n+   symbol in the formal_ns of \"sym\". Needed for copying interfaces in PROCEDURE\n    statements. The boolean return value is required by gfc_traverse_expr.  */\n \n static bool\n@@ -4144,14 +4145,12 @@ replace_symbol (gfc_expr *expr, gfc_symbol *sym, int *i ATTRIBUTE_UNUSED)\n   if ((expr->expr_type == EXPR_VARIABLE \n        || (expr->expr_type == EXPR_FUNCTION\n \t   && !gfc_is_intrinsic (expr->symtree->n.sym, 0, expr->where)))\n-      && expr->symtree->n.sym->ns == sym->ts.interface->formal_ns)\n+      && expr->symtree->n.sym->ns == sym->ts.interface->formal_ns\n+      && expr->symtree->n.sym->attr.dummy)\n     {\n-      gfc_symtree *stree;\n-      gfc_namespace *ns = sym->formal_ns;\n-      /* Don't use gfc_get_symtree as we prefer to fail badly if we don't find\n-\t the symtree rather than create a new one (and probably fail later).  */\n-      stree = gfc_find_symtree (ns ? ns->sym_root : gfc_current_ns->sym_root,\n-\t\t      \t\texpr->symtree->n.sym->name);\n+      gfc_symtree *root = sym->formal_ns ? sym->formal_ns->sym_root\n+\t\t\t\t\t : gfc_current_ns->sym_root;\n+      gfc_symtree *stree = gfc_find_symtree (root, expr->symtree->n.sym->name);\n       gcc_assert (stree);\n       stree->n.sym->attr = expr->symtree->n.sym->attr;\n       expr->symtree = stree;\n@@ -4165,6 +4164,7 @@ gfc_expr_replace_symbols (gfc_expr *expr, gfc_symbol *dest)\n   gfc_traverse_expr (expr, dest, &replace_symbol, 0);\n }\n \n+\n /* The following is analogous to 'replace_symbol', and needed for copying\n    interfaces for procedure pointer components. The argument 'sym' must formally\n    be a gfc_symbol, so that the function can be passed to gfc_traverse_expr."}, {"sha": "c310ab26c61f3d2db814e4b44e5ae0a468350099", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e5d3db2c4ceca99cbeaeca30080c3825ddcceef", "patch": "@@ -1,3 +1,8 @@\n+2011-10-09  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50659\n+\t* gfortran.dg/proc_decl_27.f90: New.\n+\n 2011-10-08  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR libobjc/50428\t"}, {"sha": "30ff4def30dad6fdb92f68dab62cf8e2b1883ec7", "filename": "gcc/testsuite/gfortran.dg/proc_decl_27.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_27.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e5d3db2c4ceca99cbeaeca30080c3825ddcceef/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_27.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_27.f90?ref=4e5d3db2c4ceca99cbeaeca30080c3825ddcceef", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+!\n+! PR 50659: [4.5/4.6/4.7 Regression] [F03] ICE on invalid with procedure interface\n+!\n+! Contributed by Andrew Benson <abenson@caltech.edu>\n+\n+module m1\n+  integer :: arrSize\n+end module\n+\n+module m2\n+contains\n+  function Proc (arg)\n+    use m1\n+    double precision, dimension(arrSize) :: proc\n+    double precision :: arg\n+  end function\n+end\n+\n+  use m2\n+  implicit none\n+  procedure(Proc) :: Proc_Get\n+end\n+\n+! { dg-final { cleanup-modules \"m1 m2\" } }"}]}