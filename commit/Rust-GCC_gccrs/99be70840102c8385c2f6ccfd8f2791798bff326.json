{"sha": "99be70840102c8385c2f6ccfd8f2791798bff326", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTliZTcwODQwMTAyYzgzODVjMmY2Y2NmZDhmMjc5MTc5OGJmZjMyNg==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "basile@starynkevitch.net", "date": "2009-09-27T16:15:25Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-09-27T16:15:25Z"}, "message": "gengtype.c (write_root, [...]): Add a emit_pch argument.\n\n2009-09-27  Basile Starynkevitch  <basile@starynkevitch.net>\n\t    Rafael Avila de Espindola  <espindola@google.com>\n\n\t* gengtype.c (write_root, write_roots): Add a emit_pch argument.\n\tDon't print pch related info if it is false.\n\t(main): Don't print pch info in plugin mode.\n\n\nCo-Authored-By: Rafael Avila de Espindola <espindola@google.com>\n\nFrom-SVN: r152223", "tree": {"sha": "9c0f835c6a2e046dd2aeb1154973bbb2bac47480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c0f835c6a2e046dd2aeb1154973bbb2bac47480"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99be70840102c8385c2f6ccfd8f2791798bff326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99be70840102c8385c2f6ccfd8f2791798bff326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99be70840102c8385c2f6ccfd8f2791798bff326", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99be70840102c8385c2f6ccfd8f2791798bff326/comments", "author": {"login": "bstarynk", "id": 90412, "node_id": "MDQ6VXNlcjkwNDEy", "avatar_url": "https://avatars.githubusercontent.com/u/90412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstarynk", "html_url": "https://github.com/bstarynk", "followers_url": "https://api.github.com/users/bstarynk/followers", "following_url": "https://api.github.com/users/bstarynk/following{/other_user}", "gists_url": "https://api.github.com/users/bstarynk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstarynk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstarynk/subscriptions", "organizations_url": "https://api.github.com/users/bstarynk/orgs", "repos_url": "https://api.github.com/users/bstarynk/repos", "events_url": "https://api.github.com/users/bstarynk/events{/privacy}", "received_events_url": "https://api.github.com/users/bstarynk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c0ce3c92a54a37f44e462698caf99fb856c980f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c0ce3c92a54a37f44e462698caf99fb856c980f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c0ce3c92a54a37f44e462698caf99fb856c980f"}], "stats": {"total": 60, "additions": 43, "deletions": 17}, "files": [{"sha": "5760447c23dfde968f0c19aa365ad71357013f38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99be70840102c8385c2f6ccfd8f2791798bff326/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99be70840102c8385c2f6ccfd8f2791798bff326/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99be70840102c8385c2f6ccfd8f2791798bff326", "patch": "@@ -1,3 +1,10 @@\n+2009-09-27  Basile Starynkevitch  <basile@starynkevitch.net>\n+\t    Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* gengtype.c (write_root, write_roots): Add a emit_pch argument.\n+\tDon't print pch related info if it is false.\n+\t(main): Don't print pch info in plugin mode.\n+\n 2009-09-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* dwarf2out.c (enum dw_val_class): Replace dw_val_class_long_long"}, {"sha": "75b899b9b0faa9df8aa5e9848aedc5a0e6562194", "filename": "gcc/gengtype.c", "status": "modified", "additions": 36, "deletions": 17, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99be70840102c8385c2f6ccfd8f2791798bff326/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99be70840102c8385c2f6ccfd8f2791798bff326/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=99be70840102c8385c2f6ccfd8f2791798bff326", "patch": "@@ -1906,10 +1906,10 @@ static void finish_root_table (struct flist *flp, const char *pfx,\n \t\t\t       const char *tname, const char *lastname,\n \t\t\t       const char *name);\n static void write_root (outf_p , pair_p, type_p, const char *, int,\n-\t\t\tstruct fileloc *, const char *);\n+\t\t\tstruct fileloc *, const char *, bool);\n static void write_array (outf_p f, pair_p v,\n \t\t\t const struct write_types_data *wtd);\n-static void write_roots (pair_p);\n+static void write_roots (pair_p, bool);\n \n /* Parameters for walk_type.  */\n \n@@ -3130,7 +3130,7 @@ finish_root_table (struct flist *flp, const char *pfx, const char *lastname,\n \n static void\n write_root (outf_p f, pair_p v, type_p type, const char *name, int has_length,\n-\t    struct fileloc *line, const char *if_marked)\n+\t    struct fileloc *line, const char *if_marked, bool emit_pch)\n {\n   switch (type->kind)\n     {\n@@ -3186,7 +3186,7 @@ write_root (outf_p f, pair_p v, type_p type, const char *name, int has_length,\n \t\t    newname = xasprintf (\"%s.%s.%s\",\n \t\t\t\t\t name, fld->name, validf->name);\n \t\t    write_root (f, v, validf->type, newname, 0, line,\n-\t\t\t\tif_marked);\n+\t\t\t\tif_marked, emit_pch);\n \t\t    free (newname);\n \t\t  }\n \t      }\n@@ -3198,7 +3198,8 @@ write_root (outf_p f, pair_p v, type_p type, const char *name, int has_length,\n \t      {\n \t\tchar *newname;\n \t\tnewname = xasprintf (\"%s.%s\", name, fld->name);\n-\t\twrite_root (f, v, fld->type, newname, 0, line, if_marked);\n+\t\twrite_root (f, v, fld->type, newname, 0, line, if_marked,\n+\t\t\t    emit_pch);\n \t\tfree (newname);\n \t      }\n \t  }\n@@ -3209,7 +3210,8 @@ write_root (outf_p f, pair_p v, type_p type, const char *name, int has_length,\n       {\n \tchar *newname;\n \tnewname = xasprintf (\"%s[0]\", name);\n-\twrite_root (f, v, type->u.a.p, newname, has_length, line, if_marked);\n+\twrite_root (f, v, type->u.a.p, newname, has_length, line, if_marked,\n+\t\t    emit_pch);\n \tfree (newname);\n       }\n       break;\n@@ -3238,20 +3240,31 @@ write_root (outf_p f, pair_p v, type_p type, const char *name, int has_length,\n \tif (! has_length && UNION_OR_STRUCT_P (tp))\n \t  {\n \t    oprintf (f, \"    &gt_ggc_mx_%s,\\n\", tp->u.s.tag);\n-\t    oprintf (f, \"    &gt_pch_nx_%s\", tp->u.s.tag);\n+\t    if (emit_pch)\n+\t      oprintf (f, \"    &gt_pch_nx_%s\", tp->u.s.tag);\n+\t    else\n+\t      oprintf (f, \"    NULL\");\n \t  }\n \telse if (! has_length && tp->kind == TYPE_PARAM_STRUCT)\n \t  {\n \t    oprintf (f, \"    &gt_ggc_m_\");\n \t    output_mangled_typename (f, tp);\n-\t    oprintf (f, \",\\n    &gt_pch_n_\");\n-\t    output_mangled_typename (f, tp);\n+\t    if (emit_pch)\n+\t      {\n+\t\toprintf (f, \",\\n    &gt_pch_n_\");\n+\t\toutput_mangled_typename (f, tp);\n+\t      }\n+\t    else\n+\t      oprintf (f, \",\\n    NULL\");\n \t  }\n \telse if (has_length\n \t\t && (tp->kind == TYPE_POINTER || UNION_OR_STRUCT_P (tp)))\n \t  {\n \t    oprintf (f, \"    &gt_ggc_ma_%s,\\n\", name);\n-\t    oprintf (f, \"    &gt_pch_na_%s\", name);\n+\t    if (emit_pch)\n+\t      oprintf (f, \"    &gt_pch_na_%s\", name);\n+\t    else\n+\t      oprintf (f, \"    NULL\");\n \t  }\n \telse\n \t  {\n@@ -3340,7 +3353,7 @@ write_array (outf_p f, pair_p v, const struct write_types_data *wtd)\n /* Output a table describing the locations and types of VARIABLES.  */\n \n static void\n-write_roots (pair_p variables)\n+write_roots (pair_p variables, bool emit_pch)\n {\n   pair_p v;\n   struct flist *flp = NULL;\n@@ -3428,7 +3441,7 @@ write_roots (pair_p variables)\n \t  oprintf (f, \"[] = {\\n\");\n \t}\n \n-      write_root (f, v, v->type, v->name, length_p, &v->line, NULL);\n+      write_root (f, v, v->type, v->name, length_p, &v->line, NULL, emit_pch);\n     }\n \n   finish_root_table (flp, \"ggc_r\", \"LAST_GGC_ROOT_TAB\", \"ggc_root_tab\",\n@@ -3507,12 +3520,15 @@ write_roots (pair_p variables)\n \t}\n \n       write_root (f, v, v->type->u.p->u.param_struct.param[0],\n-\t\t     v->name, length_p, &v->line, if_marked);\n+\t\t  v->name, length_p, &v->line, if_marked, emit_pch);\n     }\n \n   finish_root_table (flp, \"ggc_rc\", \"LAST_GGC_CACHE_TAB\", \"ggc_cache_tab\",\n \t\t     \"gt_ggc_cache_rtab\");\n \n+  if (!emit_pch)\n+    return;\n+\n   for (v = variables; v; v = v->next)\n     {\n       outf_p f = get_output_file_with_visibility (v->line.file);\n@@ -3542,7 +3558,7 @@ write_roots (pair_p variables)\n \t  oprintf (f, \"[] = {\\n\");\n \t}\n \n-      write_root (f, v, v->type, v->name, length_p, &v->line, NULL);\n+      write_root (f, v, v->type, v->name, length_p, &v->line, NULL, emit_pch);\n     }\n \n   finish_root_table (flp, \"pch_rc\", \"LAST_GGC_ROOT_TAB\", \"ggc_root_tab\",\n@@ -3713,9 +3729,12 @@ main (int argc, char **argv)\n   open_base_files ();\n   write_enum_defn (structures, param_structs);\n   write_types (header_file, structures, param_structs, &ggc_wtd);\n-  write_types (header_file, structures, param_structs, &pch_wtd);\n-  write_local (header_file, structures, param_structs);\n-  write_roots (variables);\n+  if (plugin_output == NULL)\n+    {\n+      write_types (header_file, structures, param_structs, &pch_wtd);\n+      write_local (header_file, structures, param_structs);\n+    }\n+  write_roots (variables, plugin_output == NULL);\n   write_rtx_next ();\n   close_output_files ();\n "}]}