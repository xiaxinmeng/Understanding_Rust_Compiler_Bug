{"sha": "48fe6bbb7137146df5d99707aae21f3aaa7d9ae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmZTZiYmI3MTM3MTQ2ZGY1ZDk5NzA3YWFlMjFmM2FhYTdkOWFlMg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-02-05T22:45:04Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-02-05T22:45:04Z"}, "message": "PR tree-optimization/83369 - Missing diagnostics during inlining\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/83369\n\t* tree-ssa-ccp.c (pass_post_ipa_warn::execute): Use %G to print\n\tinlining context.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/83369\n\tgcc.dg/Wnonnull.c: New test.\n\nFrom-SVN: r257400", "tree": {"sha": "b9c392a9674f726368573b4c876aaf83d2050154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9c392a9674f726368573b4c876aaf83d2050154"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d66f032937c92a8fdc740187cf722715c342d6ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66f032937c92a8fdc740187cf722715c342d6ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d66f032937c92a8fdc740187cf722715c342d6ad"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "12d238ebc3e1e7387654a6efd6f5151d0497bd56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48fe6bbb7137146df5d99707aae21f3aaa7d9ae2", "patch": "@@ -1,3 +1,9 @@\n+2018-02-05  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/83369\n+\t* tree-ssa-ccp.c (pass_post_ipa_warn::execute): Use %G to print\n+\tinlining context.\n+\n 2018-02-05  Martin Liska  <mliska@suse.cz>\n \n \t* doc/invoke.texi: Cherry-pick upstream r323995."}, {"sha": "41dae445f1fbd6b6dd79c54efa08c149cde6327e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48fe6bbb7137146df5d99707aae21f3aaa7d9ae2", "patch": "@@ -1,3 +1,8 @@\n+2018-02-05  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/83369\n+\tgcc.dg/Wnonnull.c: New test.\n+\n 2018-02-05  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* lib/lto.exp (lto_handle_diagnostics): Remove messages_by_file"}, {"sha": "be89a5a755cf524628f87120089cc5134a759edf", "filename": "gcc/testsuite/gcc.dg/Wnonnull.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2/gcc%2Ftestsuite%2Fgcc.dg%2FWnonnull.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2/gcc%2Ftestsuite%2Fgcc.dg%2FWnonnull.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWnonnull.c?ref=48fe6bbb7137146df5d99707aae21f3aaa7d9ae2", "patch": "@@ -0,0 +1,41 @@\n+/* PR tree-optimization/83369 - Missing diagnostics during inlining\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+#include <string.h>\n+\n+char buf[100];\n+\n+struct Test\n+{\n+  const char* s1;\n+  const char* s2;\n+};\n+\n+__attribute ((nonnull (1, 2)))\n+inline char*\n+my_strcpy (char *restrict dst, const char *restrict src, size_t size)\n+{\n+  size_t len = strlen (src);        /* { dg-warning \"argument 1 null where non-null expected\" } */\n+  if (len < size)\n+    memcpy (dst, src, len + 1);     /* { dg-warning \"argument 2 null where non-null expected\" } */\n+  else\n+    {\n+      memcpy (dst, src, size - 1);  /* { dg-warning \"argument 2 null where non-null expected\" } */\n+      dst[size - 1] = '\\0';\n+    }\n+  return dst;\n+}\n+\n+void test (struct Test* test)\n+{\n+  if (test->s1)\n+    my_strcpy (buf, test->s1, sizeof buf);\n+  else if (test->s2)\n+    my_strcpy (buf, test->s2, sizeof buf);\n+  else\n+    my_strcpy (buf, test->s2, sizeof buf);\n+}\n+\n+/* Verify that the inlining context is printed for -Wnonnull:\n+   { dg-message \"function .my_strcpy..*inlined from .test.\" \"\" { target *-*-* } 0 }  */"}, {"sha": "5591097d0183270879b7856c81a37a23781449f1", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fe6bbb7137146df5d99707aae21f3aaa7d9ae2/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=48fe6bbb7137146df5d99707aae21f3aaa7d9ae2", "patch": "@@ -3458,8 +3458,8 @@ pass_post_ipa_warn::execute (function *fun)\n \n \t\t      location_t loc = gimple_location (stmt);\n \t\t      if (warning_at (loc, OPT_Wnonnull,\n-\t\t\t\t      \"argument %u null where non-null \"\n-\t\t\t\t      \"expected\", i + 1))\n+\t\t\t\t      \"%Gargument %u null where non-null \"\n+\t\t\t\t      \"expected\", as_a <gcall *>(stmt), i + 1))\n \t\t\t{\n \t\t\t  tree fndecl = gimple_call_fndecl (stmt);\n \t\t\t  if (fndecl && DECL_IS_BUILTIN (fndecl))"}]}