{"sha": "89908c8f2b5107f92dcd9a33098797cdf848a151", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk5MDhjOGYyYjUxMDdmOTJkY2Q5YTMzMDk4Nzk3Y2RmODQ4YTE1MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-02-10T15:34:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-02-10T15:34:59Z"}, "message": "re PR c++/69657 (abs() not inlined after including math.h)\n\n\tPR c++/69657\n\n\t* name-lookup.c (ambiguous_decl): Call remove_hidden_names.\n\t(lookup_name_real_1): Likewise.\n\t(remove_hidden_names): Handle non-functions too.\n\nFrom-SVN: r233278", "tree": {"sha": "3663c16f5b1eac203bbfd48d713506551dc0295c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3663c16f5b1eac203bbfd48d713506551dc0295c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89908c8f2b5107f92dcd9a33098797cdf848a151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89908c8f2b5107f92dcd9a33098797cdf848a151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89908c8f2b5107f92dcd9a33098797cdf848a151", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89908c8f2b5107f92dcd9a33098797cdf848a151/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff2faafcf689b6c2a277dce15a3d60d80c92e493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2faafcf689b6c2a277dce15a3d60d80c92e493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff2faafcf689b6c2a277dce15a3d60d80c92e493"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "628f4d1ecf968ff49c21e8efa664f39a5cb55f08", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89908c8f2b5107f92dcd9a33098797cdf848a151/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89908c8f2b5107f92dcd9a33098797cdf848a151/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=89908c8f2b5107f92dcd9a33098797cdf848a151", "patch": "@@ -1,5 +1,10 @@\n 2016-02-10  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/69657\n+\t* name-lookup.c (ambiguous_decl): Call remove_hidden_names.\n+\t(lookup_name_real_1): Likewise.\n+\t(remove_hidden_names): Handle non-functions too.\n+\n \tPR c++/10200\n \t* parser.c (cp_parser_lookup_name): When looking for a template\n \tafter . or ->, only consider class templates."}, {"sha": "8d6e75a134745f1f03f12f6bc5438d9f9366a79b", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89908c8f2b5107f92dcd9a33098797cdf848a151/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89908c8f2b5107f92dcd9a33098797cdf848a151/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=89908c8f2b5107f92dcd9a33098797cdf848a151", "patch": "@@ -4221,9 +4221,9 @@ ambiguous_decl (struct scope_binding *old, cxx_binding *new_binding, int flags)\n   val = new_binding->value;\n   if (val)\n     {\n-      if (hidden_name_p (val) && !(flags & LOOKUP_HIDDEN))\n-\tval = NULL_TREE;\n-      else\n+      if (!(flags & LOOKUP_HIDDEN))\n+\tval = remove_hidden_names (val);\n+      if (val)\n \tswitch (TREE_CODE (val))\n \t  {\n \t  case TEMPLATE_DECL:\n@@ -4353,7 +4353,7 @@ hidden_name_p (tree val)\n   return false;\n }\n \n-/* Remove any hidden friend functions from a possibly overloaded set\n+/* Remove any hidden declarations from a possibly overloaded set\n    of functions.  */\n \n tree\n@@ -4362,7 +4362,7 @@ remove_hidden_names (tree fns)\n   if (!fns)\n     return fns;\n \n-  if (TREE_CODE (fns) == FUNCTION_DECL && hidden_name_p (fns))\n+  if (DECL_P (fns) && hidden_name_p (fns))\n     fns = NULL_TREE;\n   else if (TREE_CODE (fns) == OVERLOAD)\n     {\n@@ -4931,6 +4931,10 @@ lookup_name_real_1 (tree name, int prefer_type, int nonclass, bool block_p,\n   if (!val)\n     val = unqualified_namespace_lookup (name, flags);\n \n+  /* Anticipated built-ins and friends aren't found by normal lookup.  */\n+  if (val && !(flags & LOOKUP_HIDDEN))\n+    val = remove_hidden_names (val);\n+\n   /* If we have a single function from a using decl, pull it out.  */\n   if (val && TREE_CODE (val) == OVERLOAD && !really_overloaded_fn (val))\n     val = OVL_FUNCTION (val);"}, {"sha": "c612d8cf6d13150ab2064870437411b1bc8911ae", "filename": "gcc/testsuite/g++.dg/lookup/builtin7.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89908c8f2b5107f92dcd9a33098797cdf848a151/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fbuiltin7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89908c8f2b5107f92dcd9a33098797cdf848a151/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fbuiltin7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fbuiltin7.C?ref=89908c8f2b5107f92dcd9a33098797cdf848a151", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/69657\n+\n+typedef unsigned int size_t;\n+namespace std {\n+extern void *calloc(size_t, size_t);\n+}\n+using std::calloc;\n+int\n+main ()\n+{\n+  char *(*pfn) = (char *(*)) calloc ;\n+  (bool)&calloc;\n+  (bool)&::calloc;\n+}"}]}