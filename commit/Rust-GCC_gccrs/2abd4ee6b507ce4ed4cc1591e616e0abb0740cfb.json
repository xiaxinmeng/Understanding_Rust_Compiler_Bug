{"sha": "2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFiZDRlZTZiNTA3Y2U0ZWQ0Y2MxNTkxZTYxNmUwYWJiMDc0MGNmYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-11-10T22:44:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-11-10T22:44:07Z"}, "message": "Fix std::deque move construction with non-equal allocators.\n\n\t* include/bits/stl_deque.h (_Deque_base::_Deque_base(_Deque_base&&)):\n\tDispatch according to whether allocators are always equal.\n\t(_Deque_base::_M_move_impl()): Implement move-from state.\n\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc: Fix\n\tdg-error line number.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\nFrom-SVN: r217322", "tree": {"sha": "82b7ad8a37e5fb0f27c2cddc50136d114462233b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82b7ad8a37e5fb0f27c2cddc50136d114462233b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b12db70880b724e80346016579fd6bbddb2b1c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12db70880b724e80346016579fd6bbddb2b1c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b12db70880b724e80346016579fd6bbddb2b1c2c"}], "stats": {"total": 72, "additions": 60, "deletions": 12}, "files": [{"sha": "0f33b7aa5ad5e05dba33bca471324e3ae7328ff3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "patch": "@@ -1,3 +1,17 @@\n+2014-11-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_deque.h (_Deque_base::_Deque_base(_Deque_base&&)):\n+\tDispatch according to whether allocators are always equal.\n+\t(_Deque_base::_M_move_impl()): Implement move-from state.\n+\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc: Fix\n+\tdg-error line number.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\n 2014-11-10  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \tMajor maintenance patch of the profile mode."}, {"sha": "c0052b39b04d83d4810a185c351a0d3325263df5", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 42, "deletions": 8, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "patch": "@@ -502,14 +502,23 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       { /* Caller must initialize map. */ }\n \n #if __cplusplus >= 201103L\n-      _Deque_base(_Deque_base&& __x)\n-      : _M_impl(__x._M_get_Tp_allocator())\n+      _Deque_base(_Deque_base&& __x, false_type)\n+      : _M_impl(__x._M_move_impl())\n+      { }\n+\n+      _Deque_base(_Deque_base&& __x, true_type)\n+      : _M_impl(std::move(__x._M_get_Tp_allocator()))\n       {\n \t_M_initialize_map(0);\n \tif (__x._M_impl._M_map)\n \t  this->_M_impl._M_swap_data(__x._M_impl);\n       }\n \n+      _Deque_base(_Deque_base&& __x)\n+      : _Deque_base(std::move(__x),\n+\t\t    __gnu_cxx::__allocator_always_compares_equal<_Alloc>{})\n+      { }\n+\n       _Deque_base(_Deque_base&& __x, const allocator_type& __a, size_type __n)\n       : _M_impl(__a)\n       {\n@@ -555,18 +564,21 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t{ }\n \n #if __cplusplus >= 201103L\n-\t_Deque_impl(_Tp_alloc_type&& __a) _GLIBCXX_NOEXCEPT\n+\t_Deque_impl(_Deque_impl&&) = default;\n+\n+\t_Deque_impl(_Tp_alloc_type&& __a) noexcept\n \t: _Tp_alloc_type(std::move(__a)), _M_map(), _M_map_size(0),\n \t  _M_start(), _M_finish()\n \t{ }\n #endif\n \n-\tvoid _M_swap_data(_Deque_impl& __x)\n+\tvoid _M_swap_data(_Deque_impl& __x) _GLIBCXX_NOEXCEPT\n \t{\n-\t  std::swap(this->_M_start, __x._M_start);\n-\t  std::swap(this->_M_finish, __x._M_finish);\n-\t  std::swap(this->_M_map, __x._M_map);\n-\t  std::swap(this->_M_map_size, __x._M_map_size);\n+\t  using std::swap;\n+\t  swap(this->_M_start, __x._M_start);\n+\t  swap(this->_M_finish, __x._M_finish);\n+\t  swap(this->_M_map, __x._M_map);\n+\t  swap(this->_M_map_size, __x._M_map_size);\n \t}\n       };\n \n@@ -618,6 +630,28 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       enum { _S_initial_map_size = 8 };\n \n       _Deque_impl _M_impl;\n+\n+#if __cplusplus >= 201103L\n+    private:\n+      _Deque_impl\n+      _M_move_impl()\n+      {\n+\tif (!_M_impl._M_map)\n+\t  return std::move(_M_impl);\n+\n+\t// Create a copy of the current allocator.\n+\t_Tp_alloc_type __alloc{_M_get_Tp_allocator()};\n+\t// Put that copy in a moved-from state.\n+\t_Tp_alloc_type __unused __attribute((__unused__)) {std::move(__alloc)};\n+\t// Create an empty map that allocates using the moved-from allocator.\n+\t_Deque_base __empty{__alloc};\n+\t// Now safe to modify current allocator and perform non-throwing swaps.\n+\t_Deque_impl __ret{std::move(_M_get_Tp_allocator())};\n+\t_M_impl._M_swap_data(__ret);\n+\t_M_impl._M_swap_data(__empty._M_impl);\n+\treturn __ret;\n+      }\n+#endif\n     };\n \n   template<typename _Tp, typename _Alloc>"}, {"sha": "b38f3ae45c33941590f7946a48f5bed467612521", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1859 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1881 }\n \n #include <deque>\n "}, {"sha": "a30029a0395a78500941a3d0b6db610fad1921f7", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1792 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1814 }\n \n #include <deque>\n "}, {"sha": "02eba79b9cf4da89c657af17afd2b19aa3fbc485", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1792 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1814 }\n \n #include <deque>\n #include <utility>"}, {"sha": "8c1dd2e949f65dbb81fc954a5cc2f1cc189f730d", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1943 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1965 }\n \n #include <deque>\n "}]}