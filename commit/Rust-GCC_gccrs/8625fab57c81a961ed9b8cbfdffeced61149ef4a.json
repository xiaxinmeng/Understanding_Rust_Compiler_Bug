{"sha": "8625fab57c81a961ed9b8cbfdffeced61149ef4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYyNWZhYjU3YzgxYTk2MWVkOWI4Y2JmZGZmZWNlZDYxMTQ5ZWY0YQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-03-12T12:32:24Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-03-12T12:32:24Z"}, "message": "Warning fixes, resulting in the addition of a new target macro:\n\n        * tm.texi (DEFAULT_RTX_COSTS): Document new macro.\n        * arm.h (DEFAULT_RTX_COSTS): Define instead of RTX_COSTS.\n        * cse.c (rtx_cost): Provide a default case in an enumeration\n        switch, and call DEFAULT_RTX_COSTS if it's defined.\n\nCo-Authored-By: Nick Clifton <nickc@cygnus.com>\nCo-Authored-By: Richard Earnshaw <rearnsha@arm.com>\n\nFrom-SVN: r18513", "tree": {"sha": "438650a4cc809d9297f14c90877716871289189e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/438650a4cc809d9297f14c90877716871289189e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8625fab57c81a961ed9b8cbfdffeced61149ef4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8625fab57c81a961ed9b8cbfdffeced61149ef4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8625fab57c81a961ed9b8cbfdffeced61149ef4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8625fab57c81a961ed9b8cbfdffeced61149ef4a/comments", "author": null, "committer": null, "parents": [{"sha": "27d7e05d4a13e44c45aae7a71078de30a613bc4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d7e05d4a13e44c45aae7a71078de30a613bc4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d7e05d4a13e44c45aae7a71078de30a613bc4f"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "9b08cfcc6262b5736c05622c6babfc8e2196e1c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8625fab57c81a961ed9b8cbfdffeced61149ef4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8625fab57c81a961ed9b8cbfdffeced61149ef4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8625fab57c81a961ed9b8cbfdffeced61149ef4a", "patch": "@@ -1,3 +1,14 @@\n+Thu Mar 12 15:13:16 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+                          Richard Earnshaw <rearnsha@arm.com>\n+                          Nick Clifton  <nickc@cygnus.com>\n+\t\n+        * tm.texi (DEFAULT_RTX_COSTS): Document new macro.\n+\t\n+        * arm.h (DEFAULT_RTX_COSTS): Define instead of RTX_COSTS.\n+\t\n+        * cse.c (rtx_cost): Provide a default case in an enumeration\n+        switch, and call DEFAULT_RTX_COSTS if it's defined.\n+\t\n Thu Mar 12 10:02:38 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n \n \t* basic-block.h (compute_preds_succs): Change return type in"}, {"sha": "7c28c646ce115c48b5b5f5db206242e67a1f1ceb", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8625fab57c81a961ed9b8cbfdffeced61149ef4a/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8625fab57c81a961ed9b8cbfdffeced61149ef4a/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=8625fab57c81a961ed9b8cbfdffeced61149ef4a", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for Acorn RISC Machine.\n-   Copyright (C) 1991, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 93, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n    and Martin Simmons (@harleqn.co.uk).\n    More major hacks by Richard Earnshaw (rwe11@cl.cam.ac.uk)\n@@ -1620,8 +1620,7 @@ extern struct rtx_def *legitimize_pic_address ();\n   ((X) == frame_pointer_rtx || (X) == stack_pointer_rtx\t\\\n    || (X) == arg_pointer_rtx)\n \n-#define RTX_COSTS(X,CODE,OUTER_CODE)\t\t\\\n-  default:\t\t\t\t\t\\\n+#define DEFAULT_RTX_COSTS(X,CODE,OUTER_CODE)\t\t\\\n    return arm_rtx_costs (X, CODE, OUTER_CODE);\n \n /* Moves to and from memory are quite expensive */"}, {"sha": "b525dccdfec5d4ebdf4c54a4ac723852c5d634ea", "filename": "gcc/cse.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8625fab57c81a961ed9b8cbfdffeced61149ef4a/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8625fab57c81a961ed9b8cbfdffeced61149ef4a/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=8625fab57c81a961ed9b8cbfdffeced61149ef4a", "patch": "@@ -751,6 +751,12 @@ rtx_cost (x, outer_code)\n       RTX_COSTS (x, code, outer_code);\n #endif \n       CONST_COSTS (x, code, outer_code);\n+\n+    default:\n+#ifdef DEFAULT_RTX_COSTS\n+      DEFAULT_RTX_COSTS(x, code, outer_code);\n+#endif\n+      break;\n     }\n \n   /* Sum the costs of the sub-rtx's, plus cost of this operation,"}, {"sha": "00311bf792b9942cdbbf1783131e299d6b842b03", "filename": "gcc/tm.texi", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8625fab57c81a961ed9b8cbfdffeced61149ef4a/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8625fab57c81a961ed9b8cbfdffeced61149ef4a/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=8625fab57c81a961ed9b8cbfdffeced61149ef4a", "patch": "@@ -4436,6 +4436,21 @@ instructions.  @var{outer_code} is the code of the expression in which\n This macro is optional; do not define it if the default cost assumptions\n are adequate for the target machine.\n \n+@findex DEFAULT_RTX_COSTS\n+@item DEFAULT_RTX_COSTS (@var{x}, @var{code}, @var{outer_code})\n+This macro, if defined, is called for any case not handled by the\n+@code{RTX_COSTS} or @code{CONST_COSTS} macros.  This eliminates the need\n+to put case labels into the macro, but the code, or any functions it\n+calls, must assume that the RTL in @var{x} could be of any type that has\n+not already been handled.  The arguments are the same as for\n+@code{RTX_COSTS}, and the macro should execute a return statement giving\n+the cost of any RTL expressions that it can handle.  The default cost\n+calculation is used for any RTL for which this macro does not return a\n+value.\n+\n+This macro is optional; do not define it if the default cost assumptions\n+are adequate for the target machine.  \n+\n @findex ADDRESS_COST\n @item ADDRESS_COST (@var{address})\n An expression giving the cost of an addressing mode that contains"}]}