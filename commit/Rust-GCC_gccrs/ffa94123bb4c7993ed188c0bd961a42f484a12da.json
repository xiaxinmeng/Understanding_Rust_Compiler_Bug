{"sha": "ffa94123bb4c7993ed188c0bd961a42f484a12da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhOTQxMjNiYjRjNzk5M2VkMTg4YzBiZDk2MWE0MmY0ODRhMTJkYQ==", "commit": {"author": {"name": "Yufeng Zhang", "email": "yufeng.zhang@arm.com", "date": "2011-04-05T08:35:31Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2011-04-05T08:35:31Z"}, "message": "For Yufeng Zhang.\n\n2011-04-05  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n        * config/arm/arm.md (define_constants for unspec): Replace with\n        define_c_enum.\n        (define_constants for unspecv): Replace with define_c_enum.\n        * config/arm/neon.md (define_constants for unspec): Replace with\n        define_c_enum.\n\nFrom-SVN: r171973", "tree": {"sha": "a73c10a214398f4a8b462f0df6332f6e74c84798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a73c10a214398f4a8b462f0df6332f6e74c84798"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffa94123bb4c7993ed188c0bd961a42f484a12da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa94123bb4c7993ed188c0bd961a42f484a12da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa94123bb4c7993ed188c0bd961a42f484a12da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa94123bb4c7993ed188c0bd961a42f484a12da/comments", "author": null, "committer": null, "parents": [{"sha": "db7f455bc356573805e4f3858a3a2697a03cf09a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db7f455bc356573805e4f3858a3a2697a03cf09a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db7f455bc356573805e4f3858a3a2697a03cf09a"}], "stats": {"total": 441, "additions": 224, "deletions": 217}, "files": [{"sha": "e0f63531dbc85838128f7b8adaaa2f0616cef32b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa94123bb4c7993ed188c0bd961a42f484a12da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa94123bb4c7993ed188c0bd961a42f484a12da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffa94123bb4c7993ed188c0bd961a42f484a12da", "patch": "@@ -1,3 +1,11 @@\n+2011-04-05  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+        * config/arm/arm.md (define_constants for unspec): Replace with\n+        define_c_enum.\n+        (define_constants for unspecv): Replace with define_c_enum.\n+        * config/arm/neon.md (define_constants for unspec): Replace with\n+        define_c_enum.\n+\n 2011-04-04  Richard Henderson  <rth@redhat.com>\n \n \tPR 48400"}, {"sha": "b2e2fc8c3755b286f72b1584a3f6803533a0bc3a", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 89, "deletions": 91, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa94123bb4c7993ed188c0bd961a42f484a12da/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa94123bb4c7993ed188c0bd961a42f484a12da/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ffa94123bb4c7993ed188c0bd961a42f484a12da", "patch": "@@ -51,100 +51,98 @@\n \n ;; UNSPEC Usage:\n ;; Note: sin and cos are no-longer used.\n-;; Unspec constants for Neon are defined in neon.md.\n-\n-(define_constants\n-  [(UNSPEC_SIN       0)\t; `sin' operation (MODE_FLOAT):\n-\t\t\t;   operand 0 is the result,\n-\t\t\t;   operand 1 the parameter.\n-   (UNPSEC_COS\t     1)\t; `cos' operation (MODE_FLOAT):\n-\t\t\t;   operand 0 is the result,\n-\t\t\t;   operand 1 the parameter.\n-   (UNSPEC_PUSH_MULT 2)\t; `push multiple' operation:\n-\t\t\t;   operand 0 is the first register,\n-\t\t\t;   subsequent registers are in parallel (use ...)\n-\t\t\t;   expressions.\n-   (UNSPEC_PIC_SYM   3) ; A symbol that has been treated properly for pic\n-\t\t\t;   usage, that is, we will add the pic_register\n-\t\t\t;   value to it before trying to dereference it.\n-   (UNSPEC_PIC_BASE  4)\t; Add PC and all but the last operand together,\n-\t\t\t;   The last operand is the number of a PIC_LABEL\n-\t\t\t;   that points at the containing instruction.\n-   (UNSPEC_PRLG_STK  5) ; A special barrier that prevents frame accesses \n-\t\t\t;   being scheduled before the stack adjustment insn.\n-   (UNSPEC_PROLOGUE_USE 6) ; As USE insns are not meaningful after reload,\n-   \t\t\t; this unspec is used to prevent the deletion of\n-   \t\t\t; instructions setting registers for EH handling\n-   \t\t\t; and stack frame generation.  Operand 0 is the\n-   \t\t\t; register to \"use\".\n-   (UNSPEC_CHECK_ARCH 7); Set CCs to indicate 26-bit or 32-bit mode.\n-   (UNSPEC_WSHUFH    8) ; Used by the intrinsic form of the iWMMXt WSHUFH instruction.\n-   (UNSPEC_WACC      9) ; Used by the intrinsic form of the iWMMXt WACC instruction.\n-   (UNSPEC_TMOVMSK  10) ; Used by the intrinsic form of the iWMMXt TMOVMSK instruction.\n-   (UNSPEC_WSAD     11) ; Used by the intrinsic form of the iWMMXt WSAD instruction.\n-   (UNSPEC_WSADZ    12) ; Used by the intrinsic form of the iWMMXt WSADZ instruction.\n-   (UNSPEC_WMACS    13) ; Used by the intrinsic form of the iWMMXt WMACS instruction.\n-   (UNSPEC_WMACU    14) ; Used by the intrinsic form of the iWMMXt WMACU instruction.\n-   (UNSPEC_WMACSZ   15) ; Used by the intrinsic form of the iWMMXt WMACSZ instruction.\n-   (UNSPEC_WMACUZ   16) ; Used by the intrinsic form of the iWMMXt WMACUZ instruction.\n-   (UNSPEC_CLRDI    17) ; Used by the intrinsic form of the iWMMXt CLRDI instruction.\n-   (UNSPEC_WMADDS   18) ; Used by the intrinsic form of the iWMMXt WMADDS instruction.\n-   (UNSPEC_WMADDU   19) ; Used by the intrinsic form of the iWMMXt WMADDU instruction.\n-   (UNSPEC_TLS      20) ; A symbol that has been treated properly for TLS usage.\n-   (UNSPEC_PIC_LABEL 21) ; A label used for PIC access that does not appear in the\n-                         ; instruction stream.\n-   (UNSPEC_STACK_ALIGN 22) ; Doubleword aligned stack pointer.  Used to\n-\t\t\t   ; generate correct unwind information.\n-   (UNSPEC_PIC_OFFSET 23) ; A symbolic 12-bit OFFSET that has been treated\n-\t\t\t  ; correctly for PIC usage.\n-   (UNSPEC_GOTSYM_OFF 24) ; The offset of the start of the the GOT from a\n-\t\t\t  ; a given symbolic address.\n-   (UNSPEC_THUMB1_CASESI 25) ; A Thumb1 compressed dispatch-table call.\n-   (UNSPEC_RBIT 26)       ; rbit operation.\n-   (UNSPEC_SYMBOL_OFFSET 27) ; The offset of the start of the symbol from\n-                             ; another symbolic address.\n-   (UNSPEC_MEMORY_BARRIER 28) ; Represent a memory barrier.\n-  ]\n-)\n+;; Unspec enumerators for Neon are defined in neon.md.\n+\n+(define_c_enum \"unspec\" [\n+  UNSPEC_SIN            ; `sin' operation (MODE_FLOAT):\n+                        ;   operand 0 is the result,\n+                        ;   operand 1 the parameter.\n+  UNPSEC_COS            ; `cos' operation (MODE_FLOAT):\n+                        ;   operand 0 is the result,\n+                        ;   operand 1 the parameter.\n+  UNSPEC_PUSH_MULT      ; `push multiple' operation:\n+                        ;   operand 0 is the first register,\n+                        ;   subsequent registers are in parallel (use ...)\n+                        ;   expressions.\n+  UNSPEC_PIC_SYM        ; A symbol that has been treated properly for pic\n+                        ; usage, that is, we will add the pic_register\n+                        ; value to it before trying to dereference it.\n+  UNSPEC_PIC_BASE       ; Add PC and all but the last operand together,\n+                        ; The last operand is the number of a PIC_LABEL\n+                        ; that points at the containing instruction.\n+  UNSPEC_PRLG_STK       ; A special barrier that prevents frame accesses\n+                        ; being scheduled before the stack adjustment insn.\n+  UNSPEC_PROLOGUE_USE   ; As USE insns are not meaningful after reload,\n+                        ; this unspec is used to prevent the deletion of\n+                        ; instructions setting registers for EH handling\n+                        ; and stack frame generation.  Operand 0 is the\n+                        ; register to \"use\".\n+  UNSPEC_CHECK_ARCH     ; Set CCs to indicate 26-bit or 32-bit mode.\n+  UNSPEC_WSHUFH         ; Used by the intrinsic form of the iWMMXt WSHUFH instruction.\n+  UNSPEC_WACC           ; Used by the intrinsic form of the iWMMXt WACC instruction.\n+  UNSPEC_TMOVMSK        ; Used by the intrinsic form of the iWMMXt TMOVMSK instruction.\n+  UNSPEC_WSAD           ; Used by the intrinsic form of the iWMMXt WSAD instruction.\n+  UNSPEC_WSADZ          ; Used by the intrinsic form of the iWMMXt WSADZ instruction.\n+  UNSPEC_WMACS          ; Used by the intrinsic form of the iWMMXt WMACS instruction.\n+  UNSPEC_WMACU          ; Used by the intrinsic form of the iWMMXt WMACU instruction.\n+  UNSPEC_WMACSZ         ; Used by the intrinsic form of the iWMMXt WMACSZ instruction.\n+  UNSPEC_WMACUZ         ; Used by the intrinsic form of the iWMMXt WMACUZ instruction.\n+  UNSPEC_CLRDI          ; Used by the intrinsic form of the iWMMXt CLRDI instruction.\n+  UNSPEC_WMADDS         ; Used by the intrinsic form of the iWMMXt WMADDS instruction.\n+  UNSPEC_WMADDU         ; Used by the intrinsic form of the iWMMXt WMADDU instruction.\n+  UNSPEC_TLS            ; A symbol that has been treated properly for TLS usage.\n+  UNSPEC_PIC_LABEL      ; A label used for PIC access that does not appear in the\n+                        ; instruction stream.\n+  UNSPEC_STACK_ALIGN    ; Doubleword aligned stack pointer.  Used to\n+                        ; generate correct unwind information.\n+  UNSPEC_PIC_OFFSET     ; A symbolic 12-bit OFFSET that has been treated\n+                        ; correctly for PIC usage.\n+  UNSPEC_GOTSYM_OFF     ; The offset of the start of the the GOT from a\n+                        ; a given symbolic address.\n+  UNSPEC_THUMB1_CASESI  ; A Thumb1 compressed dispatch-table call.\n+  UNSPEC_RBIT           ; rbit operation.\n+  UNSPEC_SYMBOL_OFFSET  ; The offset of the start of the symbol from\n+                        ; another symbolic address.\n+  UNSPEC_MEMORY_BARRIER ; Represent a memory barrier.\n+])\n \n ;; UNSPEC_VOLATILE Usage:\n \n-(define_constants\n-  [(VUNSPEC_BLOCKAGE 0) ; `blockage' insn to prevent scheduling across an\n-\t\t\t;   insn in the code.\n-   (VUNSPEC_EPILOGUE 1) ; `epilogue' insn, used to represent any part of the\n-\t\t\t;   instruction epilogue sequence that isn't expanded\n-\t\t\t;   into normal RTL.  Used for both normal and sibcall\n-\t\t\t;   epilogues.\n-   (VUNSPEC_ALIGN    2) ; `align' insn.  Used at the head of a minipool table \n-\t\t\t;   for inlined constants.\n-   (VUNSPEC_POOL_END 3) ; `end-of-table'.  Used to mark the end of a minipool\n-\t\t\t;   table.\n-   (VUNSPEC_POOL_1   4) ; `pool-entry(1)'.  An entry in the constant pool for\n-\t\t\t;   an 8-bit object.\n-   (VUNSPEC_POOL_2   5) ; `pool-entry(2)'.  An entry in the constant pool for\n-\t\t\t;   a 16-bit object.\n-   (VUNSPEC_POOL_4   6) ; `pool-entry(4)'.  An entry in the constant pool for\n-\t\t\t;   a 32-bit object.\n-   (VUNSPEC_POOL_8   7) ; `pool-entry(8)'.  An entry in the constant pool for\n-\t\t\t;   a 64-bit object.\n-   (VUNSPEC_POOL_16  8) ; `pool-entry(16)'.  An entry in the constant pool for\n-\t\t\t;   a 128-bit object.\n-   (VUNSPEC_TMRC     9) ; Used by the iWMMXt TMRC instruction.\n-   (VUNSPEC_TMCR     10) ; Used by the iWMMXt TMCR instruction.\n-   (VUNSPEC_ALIGN8   11) ; 8-byte alignment version of VUNSPEC_ALIGN\n-   (VUNSPEC_WCMP_EQ  12) ; Used by the iWMMXt WCMPEQ instructions\n-   (VUNSPEC_WCMP_GTU 13) ; Used by the iWMMXt WCMPGTU instructions\n-   (VUNSPEC_WCMP_GT  14) ; Used by the iwMMXT WCMPGT instructions\n-   (VUNSPEC_EH_RETURN 20); Use to override the return address for exception\n-\t\t\t ; handling.\n-   (VUNSPEC_SYNC_COMPARE_AND_SWAP 21)\t; Represent an atomic compare swap.\n-   (VUNSPEC_SYNC_LOCK             22)\t; Represent a sync_lock_test_and_set.\n-   (VUNSPEC_SYNC_OP               23)\t; Represent a sync_<op>\n-   (VUNSPEC_SYNC_NEW_OP           24)\t; Represent a sync_new_<op>\n-   (VUNSPEC_SYNC_OLD_OP           25)\t; Represent a sync_old_<op>\n-  ]\n-)\n+(define_c_enum \"unspecv\" [\n+  VUNSPEC_BLOCKAGE      ; `blockage' insn to prevent scheduling across an\n+                        ;   insn in the code.\n+  VUNSPEC_EPILOGUE      ; `epilogue' insn, used to represent any part of the\n+                        ;   instruction epilogue sequence that isn't expanded\n+                        ;   into normal RTL.  Used for both normal and sibcall\n+                        ;   epilogues.\n+  VUNSPEC_ALIGN         ; `align' insn.  Used at the head of a minipool table\n+                        ;   for inlined constants.\n+  VUNSPEC_POOL_END      ; `end-of-table'.  Used to mark the end of a minipool\n+                        ;   table.\n+  VUNSPEC_POOL_1        ; `pool-entry(1)'.  An entry in the constant pool for\n+                        ;   an 8-bit object.\n+  VUNSPEC_POOL_2        ; `pool-entry(2)'.  An entry in the constant pool for\n+                        ;   a 16-bit object.\n+  VUNSPEC_POOL_4        ; `pool-entry(4)'.  An entry in the constant pool for\n+                        ;   a 32-bit object.\n+  VUNSPEC_POOL_8        ; `pool-entry(8)'.  An entry in the constant pool for\n+                        ;   a 64-bit object.\n+  VUNSPEC_POOL_16       ; `pool-entry(16)'.  An entry in the constant pool for\n+                        ;   a 128-bit object.\n+  VUNSPEC_TMRC          ; Used by the iWMMXt TMRC instruction.\n+  VUNSPEC_TMCR          ; Used by the iWMMXt TMCR instruction.\n+  VUNSPEC_ALIGN8        ; 8-byte alignment version of VUNSPEC_ALIGN\n+  VUNSPEC_WCMP_EQ       ; Used by the iWMMXt WCMPEQ instructions\n+  VUNSPEC_WCMP_GTU      ; Used by the iWMMXt WCMPGTU instructions\n+  VUNSPEC_WCMP_GT       ; Used by the iwMMXT WCMPGT instructions\n+  VUNSPEC_EH_RETURN     ; Use to override the return address for exception\n+                        ; handling.\n+  VUNSPEC_SYNC_COMPARE_AND_SWAP    ; Represent an atomic compare swap.\n+  VUNSPEC_SYNC_LOCK                ; Represent a sync_lock_test_and_set.\n+  VUNSPEC_SYNC_OP                  ; Represent a sync_<op>\n+  VUNSPEC_SYNC_NEW_OP              ; Represent a sync_new_<op>\n+  VUNSPEC_SYNC_OLD_OP              ; Represent a sync_old_<op>\n+])\n \f\n ;;---------------------------------------------------------------------------\n ;; Attributes"}, {"sha": "723e589c0cc452cc03b721028271c58e890aaf24", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 127, "deletions": 126, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa94123bb4c7993ed188c0bd961a42f484a12da/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa94123bb4c7993ed188c0bd961a42f484a12da/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=ffa94123bb4c7993ed188c0bd961a42f484a12da", "patch": "@@ -18,132 +18,133 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n-;; Constants for unspecs.\n-(define_constants\n-  [(UNSPEC_ASHIFT_SIGNED\t65)\n-   (UNSPEC_ASHIFT_UNSIGNED\t66)\n-   (UNSPEC_VABD\t\t\t69)\n-   (UNSPEC_VABDL\t\t70)\n-   (UNSPEC_VADD\t\t\t72)\n-   (UNSPEC_VADDHN\t\t73)\n-   (UNSPEC_VADDL\t\t74)\n-   (UNSPEC_VADDW\t\t75)\n-   (UNSPEC_VBSL\t\t\t78)\n-   (UNSPEC_VCAGE\t\t79)\n-   (UNSPEC_VCAGT\t\t80)\n-   (UNSPEC_VCEQ\t\t\t81)\n-   (UNSPEC_VCGE\t\t\t82)\n-   (UNSPEC_VCGT\t\t\t83)\n-   (UNSPEC_VCLS\t\t\t84)\n-   (UNSPEC_VCVT\t\t\t88)\n-   (UNSPEC_VCVT_N\t\t89)\n-   (UNSPEC_VEXT\t\t\t93)\n-   (UNSPEC_VHADD\t\t97)\n-   (UNSPEC_VHSUB\t\t98)\n-   (UNSPEC_VLD1\t\t\t99)\n-   (UNSPEC_VLD1_DUP\t\t100)\n-   (UNSPEC_VLD1_LANE\t\t101)\n-   (UNSPEC_VLD2\t\t\t102)\n-   (UNSPEC_VLD2_DUP\t\t103)\n-   (UNSPEC_VLD2_LANE\t\t104)\n-   (UNSPEC_VLD3\t\t\t105)\n-   (UNSPEC_VLD3A\t\t106)\n-   (UNSPEC_VLD3B\t\t107)\n-   (UNSPEC_VLD3_DUP\t\t108)\n-   (UNSPEC_VLD3_LANE\t\t109)\n-   (UNSPEC_VLD4\t\t\t110)\n-   (UNSPEC_VLD4A\t\t111)\n-   (UNSPEC_VLD4B\t\t112)\n-   (UNSPEC_VLD4_DUP\t\t113)\n-   (UNSPEC_VLD4_LANE\t\t114)\n-   (UNSPEC_VMAX\t\t\t115)\n-   (UNSPEC_VMIN\t\t\t116)\n-   (UNSPEC_VMLA\t\t\t117)\n-   (UNSPEC_VMLAL\t\t118)\n-   (UNSPEC_VMLA_LANE\t\t119)\n-   (UNSPEC_VMLAL_LANE\t\t120)\n-   (UNSPEC_VMLS\t\t\t121)\n-   (UNSPEC_VMLSL\t\t122)\n-   (UNSPEC_VMLS_LANE\t\t123)\n-   (UNSPEC_VMLSL_LANE\t\t124)\n-   (UNSPEC_VMOVL\t\t125)\n-   (UNSPEC_VMOVN\t\t126)\n-   (UNSPEC_VMUL\t\t\t127)\n-   (UNSPEC_VMULL\t\t128)\n-   (UNSPEC_VMUL_LANE\t\t129)\n-   (UNSPEC_VMULL_LANE\t\t130)\n-   (UNSPEC_VPADAL\t\t135)\n-   (UNSPEC_VPADD\t\t136)\n-   (UNSPEC_VPADDL\t\t137)\n-   (UNSPEC_VPMAX\t\t138)\n-   (UNSPEC_VPMIN\t\t139)\n-   (UNSPEC_VPSMAX\t\t140)\n-   (UNSPEC_VPSMIN\t\t141)\n-   (UNSPEC_VPUMAX\t\t142)\n-   (UNSPEC_VPUMIN\t\t143)\n-   (UNSPEC_VQABS\t\t144)\n-   (UNSPEC_VQADD\t\t145)\n-   (UNSPEC_VQDMLAL\t\t146)\n-   (UNSPEC_VQDMLAL_LANE\t\t147)\n-   (UNSPEC_VQDMLSL\t\t148)\n-   (UNSPEC_VQDMLSL_LANE\t\t149)\n-   (UNSPEC_VQDMULH\t\t150)\n-   (UNSPEC_VQDMULH_LANE\t\t151)\n-   (UNSPEC_VQDMULL\t\t152)\n-   (UNSPEC_VQDMULL_LANE\t\t153)\n-   (UNSPEC_VQMOVN\t\t154)\n-   (UNSPEC_VQMOVUN\t\t155)\n-   (UNSPEC_VQNEG\t\t156)\n-   (UNSPEC_VQSHL\t\t157)\n-   (UNSPEC_VQSHL_N\t\t158)\n-   (UNSPEC_VQSHLU_N\t\t159)\n-   (UNSPEC_VQSHRN_N\t\t160)\n-   (UNSPEC_VQSHRUN_N\t\t161)\n-   (UNSPEC_VQSUB\t\t162)\n-   (UNSPEC_VRECPE\t\t163)\n-   (UNSPEC_VRECPS\t\t164)\n-   (UNSPEC_VREV16\t\t165)\n-   (UNSPEC_VREV32\t\t166)\n-   (UNSPEC_VREV64\t\t167)\n-   (UNSPEC_VRSQRTE\t\t168)\n-   (UNSPEC_VRSQRTS\t\t169)\n-   (UNSPEC_VSHL\t\t\t171)\n-   (UNSPEC_VSHLL_N\t\t172)\n-   (UNSPEC_VSHL_N\t\t173)\n-   (UNSPEC_VSHR_N\t\t174)\n-   (UNSPEC_VSHRN_N\t\t175)\n-   (UNSPEC_VSLI\t\t\t176)\n-   (UNSPEC_VSRA_N\t\t177)\n-   (UNSPEC_VSRI\t\t\t178)\n-   (UNSPEC_VST1\t\t\t179)\n-   (UNSPEC_VST1_LANE\t\t180)\n-   (UNSPEC_VST2\t\t\t181)\n-   (UNSPEC_VST2_LANE\t\t182)\n-   (UNSPEC_VST3\t\t\t183)\n-   (UNSPEC_VST3A\t\t184)\n-   (UNSPEC_VST3B\t\t185)\n-   (UNSPEC_VST3_LANE\t\t186)\n-   (UNSPEC_VST4\t\t\t187)\n-   (UNSPEC_VST4A\t\t188)\n-   (UNSPEC_VST4B\t\t189)\n-   (UNSPEC_VST4_LANE\t\t190)\n-   (UNSPEC_VSTRUCTDUMMY\t\t191)\n-   (UNSPEC_VSUB\t\t\t192)\n-   (UNSPEC_VSUBHN\t\t193)\n-   (UNSPEC_VSUBL\t\t194)\n-   (UNSPEC_VSUBW\t\t195)\n-   (UNSPEC_VTBL\t\t\t196)\n-   (UNSPEC_VTBX\t\t\t197)\n-   (UNSPEC_VTRN1\t\t198)\n-   (UNSPEC_VTRN2\t\t199)\n-   (UNSPEC_VTST\t\t\t200)\n-   (UNSPEC_VUZP1\t\t201)\n-   (UNSPEC_VUZP2\t\t202)\n-   (UNSPEC_VZIP1\t\t203)\n-   (UNSPEC_VZIP2\t\t204)\n-   (UNSPEC_MISALIGNED_ACCESS\t205)\n-   (UNSPEC_VCLE\t\t\t206)\n-   (UNSPEC_VCLT\t\t\t207)])\n+;; Enumerators for unspecs.\n+(define_c_enum \"unspec\" [\n+  UNSPEC_ASHIFT_SIGNED\n+  UNSPEC_ASHIFT_UNSIGNED\n+  UNSPEC_VABD\n+  UNSPEC_VABDL\n+  UNSPEC_VADD\n+  UNSPEC_VADDHN\n+  UNSPEC_VADDL\n+  UNSPEC_VADDW\n+  UNSPEC_VBSL\n+  UNSPEC_VCAGE\n+  UNSPEC_VCAGT\n+  UNSPEC_VCEQ\n+  UNSPEC_VCGE\n+  UNSPEC_VCGT\n+  UNSPEC_VCLS\n+  UNSPEC_VCVT\n+  UNSPEC_VCVT_N\n+  UNSPEC_VEXT\n+  UNSPEC_VHADD\n+  UNSPEC_VHSUB\n+  UNSPEC_VLD1\n+  UNSPEC_VLD1_DUP\n+  UNSPEC_VLD1_LANE\n+  UNSPEC_VLD2\n+  UNSPEC_VLD2_DUP\n+  UNSPEC_VLD2_LANE\n+  UNSPEC_VLD3\n+  UNSPEC_VLD3A\n+  UNSPEC_VLD3B\n+  UNSPEC_VLD3_DUP\n+  UNSPEC_VLD3_LANE\n+  UNSPEC_VLD4\n+  UNSPEC_VLD4A\n+  UNSPEC_VLD4B\n+  UNSPEC_VLD4_DUP\n+  UNSPEC_VLD4_LANE\n+  UNSPEC_VMAX\n+  UNSPEC_VMIN\n+  UNSPEC_VMLA\n+  UNSPEC_VMLAL\n+  UNSPEC_VMLA_LANE\n+  UNSPEC_VMLAL_LANE\n+  UNSPEC_VMLS\n+  UNSPEC_VMLSL\n+  UNSPEC_VMLS_LANE\n+  UNSPEC_VMLSL_LANE\n+  UNSPEC_VMOVL\n+  UNSPEC_VMOVN\n+  UNSPEC_VMUL\n+  UNSPEC_VMULL\n+  UNSPEC_VMUL_LANE\n+  UNSPEC_VMULL_LANE\n+  UNSPEC_VPADAL\n+  UNSPEC_VPADD\n+  UNSPEC_VPADDL\n+  UNSPEC_VPMAX\n+  UNSPEC_VPMIN\n+  UNSPEC_VPSMAX\n+  UNSPEC_VPSMIN\n+  UNSPEC_VPUMAX\n+  UNSPEC_VPUMIN\n+  UNSPEC_VQABS\n+  UNSPEC_VQADD\n+  UNSPEC_VQDMLAL\n+  UNSPEC_VQDMLAL_LANE\n+  UNSPEC_VQDMLSL\n+  UNSPEC_VQDMLSL_LANE\n+  UNSPEC_VQDMULH\n+  UNSPEC_VQDMULH_LANE\n+  UNSPEC_VQDMULL\n+  UNSPEC_VQDMULL_LANE\n+  UNSPEC_VQMOVN\n+  UNSPEC_VQMOVUN\n+  UNSPEC_VQNEG\n+  UNSPEC_VQSHL\n+  UNSPEC_VQSHL_N\n+  UNSPEC_VQSHLU_N\n+  UNSPEC_VQSHRN_N\n+  UNSPEC_VQSHRUN_N\n+  UNSPEC_VQSUB\n+  UNSPEC_VRECPE\n+  UNSPEC_VRECPS\n+  UNSPEC_VREV16\n+  UNSPEC_VREV32\n+  UNSPEC_VREV64\n+  UNSPEC_VRSQRTE\n+  UNSPEC_VRSQRTS\n+  UNSPEC_VSHL\n+  UNSPEC_VSHLL_N\n+  UNSPEC_VSHL_N\n+  UNSPEC_VSHR_N\n+  UNSPEC_VSHRN_N\n+  UNSPEC_VSLI\n+  UNSPEC_VSRA_N\n+  UNSPEC_VSRI\n+  UNSPEC_VST1\n+  UNSPEC_VST1_LANE\n+  UNSPEC_VST2\n+  UNSPEC_VST2_LANE\n+  UNSPEC_VST3\n+  UNSPEC_VST3A\n+  UNSPEC_VST3B\n+  UNSPEC_VST3_LANE\n+  UNSPEC_VST4\n+  UNSPEC_VST4A\n+  UNSPEC_VST4B\n+  UNSPEC_VST4_LANE\n+  UNSPEC_VSTRUCTDUMMY\n+  UNSPEC_VSUB\n+  UNSPEC_VSUBHN\n+  UNSPEC_VSUBL\n+  UNSPEC_VSUBW\n+  UNSPEC_VTBL\n+  UNSPEC_VTBX\n+  UNSPEC_VTRN1\n+  UNSPEC_VTRN2\n+  UNSPEC_VTST\n+  UNSPEC_VUZP1\n+  UNSPEC_VUZP2\n+  UNSPEC_VZIP1\n+  UNSPEC_VZIP2\n+  UNSPEC_MISALIGNED_ACCESS\n+  UNSPEC_VCLE\n+  UNSPEC_VCLT\n+])\n \n \n ;; Attribute used to permit string comparisons against <VQH_mnem> in"}]}