{"sha": "b92289909d9367090a298d8af54c6f1de4c1a394", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkyMjg5OTA5ZDkzNjcwOTBhMjk4ZDhhZjU0YzZmMWRlNGMxYTM5NA==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-07-08T14:09:29Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:18Z"}, "message": "Added HPPA target hook (or provisional one at least)", "tree": {"sha": "b62a389bc0b0a80910345d1f9a6721746512a9c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b62a389bc0b0a80910345d1f9a6721746512a9c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b92289909d9367090a298d8af54c6f1de4c1a394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92289909d9367090a298d8af54c6f1de4c1a394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b92289909d9367090a298d8af54c6f1de4c1a394", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92289909d9367090a298d8af54c6f1de4c1a394/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "143490432941699e07a38d49a04179dd696b524c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143490432941699e07a38d49a04179dd696b524c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/143490432941699e07a38d49a04179dd696b524c"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "571ce1ae2c6e0f897376ce21dd0e8e66fc8359de", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=b92289909d9367090a298d8af54c6f1de4c1a394", "patch": "@@ -478,6 +478,7 @@ ia64-*-*)\n \t;;\n hppa*-*-*)\n \tcpu_type=pa\n+\trust_target_objs=\"pa-rust.o\"\n \t;;\n lm32*)\n \textra_options=\"${extra_options} g.opt\""}, {"sha": "eab4651b51876bc0db0a167d281ca36f66799b54", "filename": "gcc/config/pa/pa-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-protos.h?ref=b92289909d9367090a298d8af54c6f1de4c1a394", "patch": "@@ -115,3 +115,6 @@ extern const int pa_magic_milli[];\n \n /* Routines implemented in pa-d.c  */\n extern void pa_d_target_versions (void);\n+\n+/* Routines implemented in pa-rust.c  */\n+extern void pa_rust_target_cpu_info (void);"}, {"sha": "a121737401aca72f9e453c38dbd0ab6f5dfbdc1c", "filename": "gcc/config/pa/pa-rust.c", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig%2Fpa%2Fpa-rust.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig%2Fpa%2Fpa-rust.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-rust.c?ref=b92289909d9367090a298d8af54c6f1de4c1a394", "patch": "@@ -0,0 +1,88 @@\n+/* Subroutines for the Rust front end for the HPPA architecture.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_p.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_CPU_INFO for HPPA targets.  */\n+\n+void pa_rust_target_cpu_info(void) {\n+    rust_add_target_info(\"target_arch\", \"hppa\");\n+\n+    // names made up by me (as no apparent current nor historical llvm support), based on gcc options\n+    /* TODO: figure out how to get data for linker-opt, nosnake - not defined in variable, apparently */\n+    if (TARGET_CALLER_COPIES) \n+        rust_add_target_info(\"target_feature\", \"caller-copies\");\n+    if (TARGET_COHERENT_LDCW)\n+        rust_add_target_info(\"target_feature\", \"coherent-ldcw\");\n+    if (TARGET_DISABLE_FPREGS) \n+        rust_add_target_info(\"target_feature\", \"disable-fpregs\");\n+    if (TARGET_DISABLE_INDEXING)\n+        rust_add_target_info(\"target_feature\", \"disable-indexing\");\n+    if (TARGET_FAST_INDIRECT_CALLS)\n+        rust_add_target_info(\"target_feature\", \"fast-indirect-calls\");\n+    // TODO: figure out how to represent fixed-range (ranges of registers to make fixed) as define\n+    if (TARGET_GAS)\n+        rust_add_target_info(\"target_feature\", \"gas\");\n+    if (TARGET_LONG_CALLS)\n+        rust_add_target_info(\"target_feature\", \"long-calls\");\n+    if (TARGET_LONG_LOAD_STORE)\n+        rust_add_target_info(\"target_feature\", \"long-load-store\");\n+    if (TARGET_NO_SPACE_REGS) \n+        rust_add_target_info(\"target_feature\", \"no-space-regs\");\n+    if (TARGET_ORDERED)\n+        rust_add_target_info(\"target_feature\", \"ordered\");\n+    if (TARGET_PORTABLE_RUNTIME)\n+        rust_add_target_info(\"target_feature\", \"portable-runtime\");\n+    if (TARGET_SOFT_FLOAT)\n+        rust_add_target_info(\"target_feature\", \"soft-float\");\n+\n+    // defines for generating PA 1.1 or PA 2.0 code - TODO should PA 2.0 imply PA 1.1 as well?\n+    if (TARGET_PA_11) \n+        rust_add_target_info(\"target_feature\", \"pa-risc-1-1\");\n+    if (TARGET_PA_20) \n+        rust_add_target_info(\"target_feature\", \"pa-risc-2-0\");\n+\n+    // TODO: ensure switch and variable work\n+    switch (pa_cpu) {\n+        case PROCESSOR_8000:\n+            rust_add_target_info(\"target_feature\", \"schedule-8000\");\n+            break;\n+        case PROCESSOR_7100:\n+            rust_add_target_info(\"target_feature\", \"schedule-7100\");\n+            break;\n+        case PROCESSOR_700:\n+            rust_add_target_info(\"target_feature\", \"schedule-700\");\n+            break;\n+        case PROCESSOR_7100LC:\n+            rust_add_target_info(\"target_feature\", \"schedule-7100lc\");\n+            break;\n+        case PROCESSOR_7200:\n+            rust_add_target_info(\"target_feature\", \"schedule-7200\");\n+            break;\n+        case PROCESSOR_7300:\n+            rust_add_target_info(\"target_feature\", \"schedule-7300\");\n+            break;\n+        default: // should this be an error?\n+            break;\n+    }\n+}"}, {"sha": "bb3c285b3e68f50379e6d3ed452c71f7f23a8d2d", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=b92289909d9367090a298d8af54c6f1de4c1a394", "patch": "@@ -182,6 +182,8 @@ do {\t\t\t\t\t\t\t\t\\\n        builtin_define(\"__SIZEOF_FLOAT128__=16\");\t\t\\\n } while (0)\n \n+#define TARGET_RUST_CPU_INFO pa_rust_target_cpu_info\n+\n /* An old set of OS defines for various BSD-like systems.  */\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\"}, {"sha": "52deee61294ae088066d37fe0713577711172009", "filename": "gcc/config/pa/t-pa", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig%2Fpa%2Ft-pa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92289909d9367090a298d8af54c6f1de4c1a394/gcc%2Fconfig%2Fpa%2Ft-pa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa?ref=b92289909d9367090a298d8af54c6f1de4c1a394", "patch": "@@ -2,3 +2,6 @@ pa-d.o: $(srcdir)/config/pa/pa-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n+pa-rust.o: $(srcdir)/config/pa/pa-rust.c \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}]}