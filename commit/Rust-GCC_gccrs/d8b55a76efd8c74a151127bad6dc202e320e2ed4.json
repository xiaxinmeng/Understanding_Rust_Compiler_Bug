{"sha": "d8b55a76efd8c74a151127bad6dc202e320e2ed4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhiNTVhNzZlZmQ4Yzc0YTE1MTEyN2JhZDZkYzIwMmUzMjBlMmVkNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-02-13T00:30:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-13T00:30:37Z"}, "message": "cp-tree.h: Add access_protected_virtual_node.\n\n\t* cp-tree.h: Add access_protected_virtual_node.\n\t* class.c (init_class_processing): Initialize it.\n\t* decl.c (xref_basetypes): Use it.\n\t* parse.y (base_class_access_list): Likewise.\n\t* Make-lang.in (DEMANGLER_PROG): Add $(exeext).\n\t(c++.install-common): Install c++filt.\n\nFrom-SVN: r17894", "tree": {"sha": "515ad8c45aae922258c4df2e7472dc8a83ed3203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/515ad8c45aae922258c4df2e7472dc8a83ed3203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8b55a76efd8c74a151127bad6dc202e320e2ed4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b55a76efd8c74a151127bad6dc202e320e2ed4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8b55a76efd8c74a151127bad6dc202e320e2ed4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b55a76efd8c74a151127bad6dc202e320e2ed4/comments", "author": null, "committer": null, "parents": [{"sha": "03453a9f5ab3547b0c60891af51369bf28b010aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03453a9f5ab3547b0c60891af51369bf28b010aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03453a9f5ab3547b0c60891af51369bf28b010aa"}], "stats": {"total": 782, "additions": 388, "deletions": 394}, "files": [{"sha": "70186da7408d314795b63e598e53733312f6c6f6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d8b55a76efd8c74a151127bad6dc202e320e2ed4", "patch": "@@ -1,3 +1,13 @@\n+Fri Feb 13 00:21:59 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cp-tree.h: Add access_protected_virtual_node.\n+\t* class.c (init_class_processing): Initialize it.\n+\t* decl.c (xref_basetypes): Use it.\n+\t* parse.y (base_class_access_list): Likewise.\n+\n+\t* Make-lang.in (DEMANGLER_PROG): Add $(exeext).\n+\t(c++.install-common): Install c++filt.\n+\n Thu Feb 12 12:46:51 1998  Benjamin Kosnik  <bkoz@rhino.cygnus.com>\n \n \t* decl.c (shadow_tag): Give error for typedef-ing built-in types.\n@@ -688,10 +698,6 @@ Wed Jan  7 23:47:13 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \t* typeck.c (build_modify_expr): Remove code that ignores trivial \n \tmethods.\n \n-Mon Dec 22 17:46:17 1997  Mark Mitchell  <mmitchell@usa.net>\n-\n-\t* method.c (build_overload_name): Fix mangling for __null.\n-\n Mon Dec 22 11:36:27 1997  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n  \n \t* call.c (add_builtin_candidate): Add default case in enumeration"}, {"sha": "2c202ce18009b0aa59bf4de2883cbbb4f1f70a14", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=d8b55a76efd8c74a151127bad6dc202e320e2ed4", "patch": "@@ -51,7 +51,7 @@ CXX_CROSS_NAME = `t='$(program_transform_cross_name)'; echo c++ | sed $$t`\n GXX_CROSS_NAME = `t='$(program_transform_cross_name)'; echo g++ | sed $$t`\n \n # The name to use for the demangler program.\n-DEMANGLER_PROG = c++filt\n+DEMANGLER_PROG = c++filt$(exeext)\n \n # Extra headers to install.\n CXX_EXTRA_HEADERS = $(srcdir)/cp/inc/typeinfo $(srcdir)/cp/inc/exception \\\n@@ -225,6 +225,8 @@ c++.install-common:\n \t    rm -f $(bindir)/$(CXX_INSTALL_NAME)$(exeext); \\\n \t    $(LN) $(bindir)/$(GXX_INSTALL_NAME)$(exeext) $(bindir)/$(CXX_INSTALL_NAME)$(exeext); \\\n \t  fi ; \\\n+\t  rm -f $(bindir)/$(DEMANGLER_PROG) ; \\\n+\t  $(INSTALL_PROGRAM) $(DEMANGLER_PROG) $(bindir)/$(DEMANGLER_PROG) ; \\\n \tfi\n \n c++.install-info:"}, {"sha": "9868928b70631c9915f25ebf844a8e12dac115ec", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d8b55a76efd8c74a151127bad6dc202e320e2ed4", "patch": "@@ -146,7 +146,8 @@ tree access_protected_node; /* 2 */\n tree access_private_node; /* 3 */\n tree access_default_virtual_node; /* 4 */\n tree access_public_virtual_node; /* 5 */\n-tree access_private_virtual_node; /* 6 */\n+tree access_protected_virtual_node; /* 6 */\n+tree access_private_virtual_node; /* 7 */\n \n /* Variables shared between class.c and call.c.  */\n \n@@ -4683,7 +4684,8 @@ init_class_processing ()\n   access_private_node = build_int_2 (3, 0);\n   access_default_virtual_node = build_int_2 (4, 0);\n   access_public_virtual_node = build_int_2 (5, 0);\n-  access_private_virtual_node = build_int_2 (6, 0);\n+  access_protected_virtual_node = build_int_2 (6, 0);\n+  access_private_virtual_node = build_int_2 (7, 0);\n \n   /* Keep these values lying around.  */\n   base_layout_decl = build_lang_field_decl (FIELD_DECL, NULL_TREE, error_mark_node);"}, {"sha": "d3a7f5d81391701d57674d5abaaff5ae854c65b4", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d8b55a76efd8c74a151127bad6dc202e320e2ed4", "patch": "@@ -1779,7 +1779,8 @@ extern tree access_protected_node; /* 2 */\n extern tree access_private_node; /* 3 */\n extern tree access_default_virtual_node; /* 4 */\n extern tree access_public_virtual_node; /* 5 */\n-extern tree access_private_virtual_node; /* 6 */\n+extern tree access_protected_virtual_node; /* 6 */\n+extern tree access_private_virtual_node; /* 7 */\n \n /* Things for handling inline functions.  */\n "}, {"sha": "e378f4a3d651934640373078caf54cca73081cb3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d8b55a76efd8c74a151127bad6dc202e320e2ed4", "patch": "@@ -11031,9 +11031,12 @@ xref_basetypes (code_type_node, name, ref, binfo)\n \t   || (tag_code != class_type\n \t       && (TREE_PURPOSE (binfo) == access_default_node\n \t\t   || TREE_PURPOSE (binfo) == access_default_virtual_node)));\n-      int via_protected = TREE_PURPOSE (binfo) == access_protected_node;\n+      int via_protected\n+\t= (TREE_PURPOSE (binfo) == access_protected_node\n+\t   || TREE_PURPOSE (binfo) == access_protected_virtual_node);\n       int via_virtual\n \t= (TREE_PURPOSE (binfo) == access_private_virtual_node\n+\t   || TREE_PURPOSE (binfo) == access_protected_virtual_node\n \t   || TREE_PURPOSE (binfo) == access_public_virtual_node\n \t   || TREE_PURPOSE (binfo) == access_default_virtual_node);\n       tree basetype = TREE_VALUE (binfo);"}, {"sha": "ac800df9138895a1690f267f7bf230fee176c3fe", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 348, "deletions": 358, "changes": 706, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=d8b55a76efd8c74a151127bad6dc202e320e2ed4", "patch": "@@ -653,42 +653,42 @@ static const short yyrline[] = { 0,\n   2353,  2373,  2375,  2378,  2380,  2385,  2387,  2389,  2391,  2393,\n   2397,  2402,  2407,  2413,  2418,  2423,  2425,  2429,  2434,  2437,\n   2444,  2472,  2478,  2480,  2483,  2486,  2488,  2492,  2494,  2498,\n-  2524,  2553,  2556,  2557,  2578,  2601,  2603,  2607,  2633,  2642,\n-  2731,  2738,  2741,  2749,  2760,  2769,  2773,  2788,  2791,  2796,\n-  2798,  2800,  2802,  2804,  2806,  2811,  2817,  2819,  2822,  2825,\n-  2827,  2838,  2843,  2846,  2848,  2853,  2856,  2857,  2868,  2871,\n-  2872,  2883,  2885,  2888,  2890,  2893,  2900,  2908,  2915,  2921,\n-  2927,  2935,  2939,  2944,  2948,  2951,  2960,  2962,  2966,  2969,\n-  2974,  2978,  2983,  2993,  2996,  3000,  3004,  3012,  3017,  3023,\n-  3026,  3028,  3030,  3036,  3039,  3041,  3043,  3045,  3049,  3052,\n-  3070,  3080,  3082,  3083,  3087,  3092,  3095,  3097,  3099,  3101,\n-  3105,  3111,  3114,  3116,  3118,  3120,  3124,  3127,  3130,  3132,\n-  3134,  3136,  3140,  3143,  3146,  3148,  3150,  3152,  3159,  3170,\n-  3174,  3179,  3183,  3188,  3190,  3194,  3197,  3199,  3203,  3205,\n-  3206,  3209,  3211,  3217,  3232,  3238,  3244,  3258,  3260,  3264,\n-  3280,  3286,  3301,  3312,  3318,  3320,  3321,  3322,  3330,  3339,\n-  3340,  3344,  3347,  3353,  3359,  3362,  3364,  3366,  3368,  3372,\n-  3376,  3380,  3383,  3388,  3391,  3393,  3395,  3397,  3399,  3401,\n-  3403,  3405,  3409,  3413,  3417,  3421,  3422,  3424,  3426,  3428,\n-  3430,  3432,  3434,  3436,  3438,  3446,  3448,  3449,  3450,  3453,\n-  3461,  3466,  3473,  3475,  3480,  3482,  3485,  3499,  3502,  3505,\n-  3514,  3526,  3537,  3557,  3567,  3570,  3578,  3590,  3593,  3596,\n-  3599,  3615,  3618,  3629,  3630,  3634,  3649,  3668,  3680,  3694,\n-  3708,  3721,  3740,  3758,  3777,  3785,  3806,  3824,  3837,  3838,\n-  3841,  3841,  3844,  3844,  3847,  3847,  3853,  3859,  3862,  3867,\n-  3874,  3883,  3892,  3901,  3909,  3922,  3924,  3928,  3930,  3933,\n-  3940,  3943,  3951,  3967,  3978,  3990,  3992,  3995,  4005,  4015,\n-  4026,  4028,  4030,  4033,  4050,  4056,  4064,  4066,  4068,  4072,\n-  4075,  4076,  4084,  4088,  4092,  4095,  4096,  4102,  4105,  4108,\n-  4110,  4114,  4119,  4122,  4132,  4137,  4138,  4146,  4152,  4157,\n-  4161,  4166,  4170,  4174,  4178,  4183,  4194,  4208,  4212,  4215,\n-  4217,  4221,  4225,  4228,  4231,  4233,  4237,  4239,  4246,  4253,\n-  4256,  4259,  4263,  4267,  4273,  4277,  4282,  4284,  4287,  4292,\n-  4298,  4309,  4312,  4314,  4318,  4323,  4325,  4332,  4335,  4337,\n-  4339,  4345,  4350,  4353,  4355,  4357,  4359,  4361,  4363,  4365,\n-  4367,  4369,  4371,  4373,  4375,  4377,  4379,  4381,  4383,  4385,\n-  4387,  4389,  4391,  4393,  4395,  4397,  4399,  4401,  4403,  4405,\n-  4407,  4409,  4411,  4413,  4415,  4418,  4420\n+  2524,  2553,  2556,  2557,  2578,  2601,  2603,  2607,  2618,  2632,\n+  2721,  2728,  2731,  2739,  2750,  2759,  2763,  2778,  2781,  2786,\n+  2788,  2790,  2792,  2794,  2796,  2801,  2807,  2809,  2812,  2815,\n+  2817,  2828,  2833,  2836,  2838,  2843,  2846,  2847,  2858,  2861,\n+  2862,  2873,  2875,  2878,  2880,  2883,  2890,  2898,  2905,  2911,\n+  2917,  2925,  2929,  2934,  2938,  2941,  2950,  2952,  2956,  2959,\n+  2964,  2968,  2973,  2983,  2986,  2990,  2994,  3002,  3007,  3013,\n+  3016,  3018,  3020,  3026,  3029,  3031,  3033,  3035,  3039,  3042,\n+  3060,  3070,  3072,  3073,  3077,  3082,  3085,  3087,  3089,  3091,\n+  3095,  3101,  3104,  3106,  3108,  3110,  3114,  3117,  3120,  3122,\n+  3124,  3126,  3130,  3133,  3136,  3138,  3140,  3142,  3149,  3160,\n+  3164,  3169,  3173,  3178,  3180,  3184,  3187,  3189,  3193,  3195,\n+  3196,  3199,  3201,  3207,  3222,  3228,  3234,  3248,  3250,  3254,\n+  3270,  3276,  3291,  3302,  3308,  3310,  3311,  3312,  3320,  3329,\n+  3330,  3334,  3337,  3343,  3349,  3352,  3354,  3356,  3358,  3362,\n+  3366,  3370,  3373,  3378,  3381,  3383,  3385,  3387,  3389,  3391,\n+  3393,  3395,  3399,  3403,  3407,  3411,  3412,  3414,  3416,  3418,\n+  3420,  3422,  3424,  3426,  3428,  3436,  3438,  3439,  3440,  3443,\n+  3451,  3456,  3463,  3465,  3470,  3472,  3475,  3489,  3492,  3495,\n+  3504,  3516,  3527,  3547,  3557,  3560,  3568,  3580,  3583,  3586,\n+  3589,  3605,  3608,  3619,  3620,  3624,  3639,  3658,  3670,  3684,\n+  3698,  3711,  3730,  3748,  3767,  3775,  3796,  3814,  3827,  3828,\n+  3831,  3831,  3834,  3834,  3837,  3837,  3843,  3849,  3852,  3857,\n+  3864,  3873,  3882,  3891,  3899,  3912,  3914,  3918,  3920,  3923,\n+  3930,  3933,  3941,  3957,  3968,  3980,  3982,  3985,  3995,  4005,\n+  4016,  4018,  4020,  4023,  4040,  4046,  4054,  4056,  4058,  4062,\n+  4065,  4066,  4074,  4078,  4082,  4085,  4086,  4092,  4095,  4098,\n+  4100,  4104,  4109,  4112,  4122,  4127,  4128,  4136,  4142,  4147,\n+  4151,  4156,  4160,  4164,  4168,  4173,  4184,  4198,  4202,  4205,\n+  4207,  4211,  4215,  4218,  4221,  4223,  4227,  4229,  4236,  4243,\n+  4246,  4249,  4253,  4257,  4263,  4267,  4272,  4274,  4277,  4282,\n+  4288,  4299,  4302,  4304,  4308,  4313,  4315,  4322,  4325,  4327,\n+  4329,  4335,  4340,  4343,  4345,  4347,  4349,  4351,  4353,  4355,\n+  4357,  4359,  4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,\n+  4377,  4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,\n+  4397,  4399,  4401,  4403,  4405,  4408,  4410\n };\n #endif\n \n@@ -6378,49 +6378,39 @@ case 485:\n     break;}\n case 487:\n #line 2604 \"parse.y\"\n-{ if (yyval.ttype != ridpointers[(int)RID_VIRTUAL])\n-\t\t    sorry (\"non-virtual access\");\n+{ if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n+\t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  yyval.ttype = access_default_virtual_node; ;\n     break;}\n case 488:\n #line 2608 \"parse.y\"\n-{ int err = 0;\n-\t\t  if (yyvsp[-1].ttype == access_protected_node)\n-\t\t    {\n-\t\t      warning (\"`protected' access not implemented\");\n-\t\t      yyvsp[-1].ttype = access_public_node;\n-\t\t      err++;\n-\t\t    }\n+{\n+\t\t  if (yyvsp[-2].ttype != access_default_virtual_node)\n+\t\t    error (\"multiple access specifiers\");\n \t\t  else if (yyvsp[-1].ttype == access_public_node)\n-\t\t    {\n-\t\t      if (yyvsp[-2].ttype == access_private_node)\n-\t\t\t{\n-\t\t\tmixed:\n-\t\t\t  error (\"base class cannot be public and private\");\n-\t\t\t}\n-\t\t      else if (yyvsp[-2].ttype == access_default_virtual_node)\n-\t\t\tyyval.ttype = access_public_virtual_node;\n-\t\t    }\n+\t\t    yyval.ttype = access_public_virtual_node;\n+\t\t  else if (yyvsp[-1].ttype == access_protected_node)\n+\t\t    yyval.ttype = access_protected_virtual_node;\n \t\t  else /* $2 == access_private_node */\n-\t\t    {\n-\t\t      if (yyvsp[-2].ttype == access_public_node)\n-\t\t\tgoto mixed;\n-\t\t      else if (yyvsp[-2].ttype == access_default_virtual_node)\n-\t\t\tyyval.ttype = access_private_virtual_node;\n-\t\t    }\n+\t\t    yyval.ttype = access_private_virtual_node;\n \t\t;\n     break;}\n case 489:\n-#line 2634 \"parse.y\"\n+#line 2619 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n-\t\t    sorry (\"non-virtual access\");\n-\t\t  if (yyval.ttype == access_public_node)\n+\t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n+\t\t  else if (yyval.ttype == access_public_node)\n \t\t    yyval.ttype = access_public_virtual_node;\n+\t\t  else if (yyval.ttype == access_protected_node)\n+\t\t    yyval.ttype = access_protected_virtual_node;\n \t\t  else if (yyval.ttype == access_private_node)\n-\t\t    yyval.ttype = access_private_virtual_node; ;\n+\t\t    yyval.ttype = access_private_virtual_node;\n+\t\t  else\n+\t\t    error (\"multiple `virtual' specifiers\");\n+\t\t;\n     break;}\n case 490:\n-#line 2644 \"parse.y\"\n+#line 2634 \"parse.y\"\n { tree t = yyvsp[-1].ttype;\n \t\t  push_obstacks_nochange ();\n \t\t  end_temporary_allocation ();\n@@ -6508,17 +6498,17 @@ case 490:\n \t\t;\n     break;}\n case 491:\n-#line 2733 \"parse.y\"\n+#line 2723 \"parse.y\"\n {\n \t\t    yyval.ttype = build_self_reference ();\n \t\t;\n     break;}\n case 492:\n-#line 2740 \"parse.y\"\n+#line 2730 \"parse.y\"\n { if (yyval.ttype) yyval.ttype = build_tree_list (access_public_node, yyval.ttype); ;\n     break;}\n case 493:\n-#line 2742 \"parse.y\"\n+#line 2732 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    yyval.ttype = build_tree_list (access_public_node, yyvsp[0].ttype);\n@@ -6528,7 +6518,7 @@ case 493:\n \t\t;\n     break;}\n case 494:\n-#line 2750 \"parse.y\"\n+#line 2740 \"parse.y\"\n {\n \t\t  tree visspec = yyvsp[-2].ttype;\n \n@@ -6541,19 +6531,19 @@ case 494:\n \t\t;\n     break;}\n case 495:\n-#line 2761 \"parse.y\"\n+#line 2751 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    error (\"access specifier not allowed in signature\");\n \t\t;\n     break;}\n case 496:\n-#line 2771 \"parse.y\"\n+#line 2761 \"parse.y\"\n { if (yyval.ttype == void_type_node) yyval.ttype = NULL_TREE; \n \t\t;\n     break;}\n case 497:\n-#line 2774 \"parse.y\"\n+#line 2764 \"parse.y\"\n { /* In pushdecl, we created a reverse list of names\n \t\t     in this binding level.  Make sure that the chain\n \t\t     of what we're trying to add isn't the item itself\n@@ -6568,91 +6558,91 @@ case 497:\n \t\t;\n     break;}\n case 498:\n-#line 2790 \"parse.y\"\n+#line 2780 \"parse.y\"\n { ;\n     break;}\n case 499:\n-#line 2792 \"parse.y\"\n+#line 2782 \"parse.y\"\n { error (\"missing ';' before right brace\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 500:\n-#line 2797 \"parse.y\"\n+#line 2787 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 501:\n-#line 2799 \"parse.y\"\n+#line 2789 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 502:\n-#line 2801 \"parse.y\"\n+#line 2791 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 503:\n-#line 2803 \"parse.y\"\n+#line 2793 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 504:\n-#line 2805 \"parse.y\"\n+#line 2795 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 505:\n-#line 2807 \"parse.y\"\n+#line 2797 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 506:\n-#line 2816 \"parse.y\"\n+#line 2806 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 507:\n-#line 2818 \"parse.y\"\n+#line 2808 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 508:\n-#line 2820 \"parse.y\"\n+#line 2810 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 509:\n-#line 2823 \"parse.y\"\n+#line 2813 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 510:\n-#line 2826 \"parse.y\"\n+#line 2816 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 511:\n-#line 2828 \"parse.y\"\n+#line 2818 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 512:\n-#line 2839 \"parse.y\"\n+#line 2829 \"parse.y\"\n { tree specs, attrs;\n \t\t  split_specs_attrs (yyvsp[-4].ttype, &specs, &attrs);\n \t\t  yyval.ttype = grokfield (yyvsp[-3].ttype, specs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, attrs)); ;\n     break;}\n case 513:\n-#line 2844 \"parse.y\"\n+#line 2834 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 514:\n-#line 2847 \"parse.y\"\n+#line 2837 \"parse.y\"\n { yyval.ttype = do_class_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 515:\n-#line 2849 \"parse.y\"\n+#line 2839 \"parse.y\"\n { yyval.ttype = finish_member_template_decl (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 516:\n-#line 2855 \"parse.y\"\n+#line 2845 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 518:\n-#line 2858 \"parse.y\"\n+#line 2848 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6663,11 +6653,11 @@ case 518:\n \t\t;\n     break;}\n case 519:\n-#line 2870 \"parse.y\"\n+#line 2860 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 521:\n-#line 2873 \"parse.y\"\n+#line 2863 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6678,102 +6668,102 @@ case 521:\n \t\t;\n     break;}\n case 526:\n-#line 2895 \"parse.y\"\n+#line 2885 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 527:\n-#line 2901 \"parse.y\"\n+#line 2891 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 528:\n-#line 2910 \"parse.y\"\n+#line 2900 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 529:\n-#line 2916 \"parse.y\"\n+#line 2906 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 530:\n-#line 2922 \"parse.y\"\n+#line 2912 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 531:\n-#line 2928 \"parse.y\"\n+#line 2918 \"parse.y\"\n { split_specs_attrs (yyvsp[-3].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-3].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 532:\n-#line 2937 \"parse.y\"\n+#line 2927 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 533:\n-#line 2940 \"parse.y\"\n+#line 2930 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 534:\n-#line 2946 \"parse.y\"\n+#line 2936 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 535:\n-#line 2949 \"parse.y\"\n+#line 2939 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 536:\n-#line 2952 \"parse.y\"\n+#line 2942 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 538:\n-#line 2963 \"parse.y\"\n+#line 2953 \"parse.y\"\n { TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 539:\n-#line 2968 \"parse.y\"\n+#line 2958 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, NULL_TREE); ;\n     break;}\n case 540:\n-#line 2970 \"parse.y\"\n+#line 2960 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 541:\n-#line 2976 \"parse.y\"\n+#line 2966 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 542:\n-#line 2979 \"parse.y\"\n+#line 2969 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[0].ftype.t, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 543:\n-#line 2984 \"parse.y\"\n+#line 2974 \"parse.y\"\n {\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids array dimensions with parenthesized type in new\");\n@@ -6783,71 +6773,71 @@ case 543:\n \t\t;\n     break;}\n case 544:\n-#line 2995 \"parse.y\"\n+#line 2985 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 545:\n-#line 2997 \"parse.y\"\n+#line 2987 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 546:\n-#line 3002 \"parse.y\"\n+#line 2992 \"parse.y\"\n { yyval.ftype.t = IDENTIFIER_AS_LIST (yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 547:\n-#line 3005 \"parse.y\"\n+#line 2995 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 548:\n-#line 3014 \"parse.y\"\n+#line 3004 \"parse.y\"\n { yyval.itype = suspend_momentary (); ;\n     break;}\n case 549:\n-#line 3019 \"parse.y\"\n+#line 3009 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 550:\n-#line 3025 \"parse.y\"\n+#line 3015 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 551:\n-#line 3027 \"parse.y\"\n+#line 3017 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 552:\n-#line 3029 \"parse.y\"\n+#line 3019 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = empty_parms (); ;\n     break;}\n case 553:\n-#line 3031 \"parse.y\"\n+#line 3021 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = NULL_TREE; ;\n     break;}\n case 554:\n-#line 3038 \"parse.y\"\n+#line 3028 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 555:\n-#line 3040 \"parse.y\"\n+#line 3030 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 556:\n-#line 3042 \"parse.y\"\n+#line 3032 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 557:\n-#line 3044 \"parse.y\"\n+#line 3034 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 558:\n-#line 3046 \"parse.y\"\n+#line 3036 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 560:\n-#line 3054 \"parse.y\"\n+#line 3044 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6866,7 +6856,7 @@ case 560:\n \t\t;\n     break;}\n case 561:\n-#line 3071 \"parse.y\"\n+#line 3061 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -6876,97 +6866,97 @@ case 561:\n \t\t;\n     break;}\n case 564:\n-#line 3084 \"parse.y\"\n+#line 3074 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 565:\n-#line 3089 \"parse.y\"\n+#line 3079 \"parse.y\"\n { yyval.ttype = get_type_decl (yyvsp[0].ttype); ;\n     break;}\n case 566:\n-#line 3094 \"parse.y\"\n+#line 3084 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 567:\n-#line 3096 \"parse.y\"\n+#line 3086 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 568:\n-#line 3098 \"parse.y\"\n+#line 3088 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 569:\n-#line 3100 \"parse.y\"\n+#line 3090 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 570:\n-#line 3102 \"parse.y\"\n+#line 3092 \"parse.y\"\n { push_nested_class (yyvsp[-1].ttype, 3);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype);\n \t\t  TREE_COMPLEXITY (yyval.ttype) = current_class_depth; ;\n     break;}\n case 572:\n-#line 3113 \"parse.y\"\n+#line 3103 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 573:\n-#line 3115 \"parse.y\"\n+#line 3105 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 574:\n-#line 3117 \"parse.y\"\n+#line 3107 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 575:\n-#line 3119 \"parse.y\"\n+#line 3109 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 576:\n-#line 3121 \"parse.y\"\n+#line 3111 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 578:\n-#line 3129 \"parse.y\"\n+#line 3119 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 579:\n-#line 3131 \"parse.y\"\n+#line 3121 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 580:\n-#line 3133 \"parse.y\"\n+#line 3123 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 581:\n-#line 3135 \"parse.y\"\n+#line 3125 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 582:\n-#line 3137 \"parse.y\"\n+#line 3127 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 584:\n-#line 3145 \"parse.y\"\n+#line 3135 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 585:\n-#line 3147 \"parse.y\"\n+#line 3137 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 586:\n-#line 3149 \"parse.y\"\n+#line 3139 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 587:\n-#line 3151 \"parse.y\"\n+#line 3141 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 588:\n-#line 3153 \"parse.y\"\n+#line 3143 \"parse.y\"\n { if (OP0 (yyval.ttype) != current_class_type)\n \t\t    {\n \t\t      push_nested_class (OP0 (yyval.ttype), 3);\n@@ -6975,7 +6965,7 @@ case 588:\n \t\t;\n     break;}\n case 589:\n-#line 3160 \"parse.y\"\n+#line 3150 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  if (yyvsp[-1].ttype != current_class_type)\n@@ -6986,47 +6976,47 @@ case 589:\n \t\t;\n     break;}\n case 590:\n-#line 3172 \"parse.y\"\n+#line 3162 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 591:\n-#line 3175 \"parse.y\"\n+#line 3165 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 592:\n-#line 3181 \"parse.y\"\n+#line 3171 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 593:\n-#line 3184 \"parse.y\"\n+#line 3174 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 595:\n-#line 3191 \"parse.y\"\n+#line 3181 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 596:\n-#line 3196 \"parse.y\"\n+#line 3186 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 597:\n-#line 3198 \"parse.y\"\n+#line 3188 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 598:\n-#line 3200 \"parse.y\"\n+#line 3190 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 603:\n-#line 3212 \"parse.y\"\n+#line 3202 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 604:\n-#line 3219 \"parse.y\"\n+#line 3209 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -7042,31 +7032,31 @@ case 604:\n \t\t;\n     break;}\n case 605:\n-#line 3233 \"parse.y\"\n+#line 3223 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 606:\n-#line 3239 \"parse.y\"\n+#line 3229 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 607:\n-#line 3245 \"parse.y\"\n+#line 3235 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 609:\n-#line 3261 \"parse.y\"\n+#line 3251 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 610:\n-#line 3266 \"parse.y\"\n+#line 3256 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7081,14 +7071,14 @@ case 610:\n \t\t;\n     break;}\n case 611:\n-#line 3282 \"parse.y\"\n+#line 3272 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 612:\n-#line 3287 \"parse.y\"\n+#line 3277 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7103,7 +7093,7 @@ case 612:\n \t\t;\n     break;}\n case 613:\n-#line 3303 \"parse.y\"\n+#line 3293 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -7115,27 +7105,27 @@ case 613:\n \t\t;\n     break;}\n case 614:\n-#line 3313 \"parse.y\"\n+#line 3303 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 615:\n-#line 3319 \"parse.y\"\n+#line 3309 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 618:\n-#line 3323 \"parse.y\"\n+#line 3313 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 619:\n-#line 3332 \"parse.y\"\n+#line 3322 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7145,156 +7135,156 @@ case 619:\n \t\t;\n     break;}\n case 621:\n-#line 3341 \"parse.y\"\n+#line 3331 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 622:\n-#line 3346 \"parse.y\"\n+#line 3336 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 623:\n-#line 3348 \"parse.y\"\n+#line 3338 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 624:\n-#line 3355 \"parse.y\"\n+#line 3345 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 625:\n-#line 3361 \"parse.y\"\n+#line 3351 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 626:\n-#line 3363 \"parse.y\"\n+#line 3353 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 627:\n-#line 3365 \"parse.y\"\n+#line 3355 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 628:\n-#line 3367 \"parse.y\"\n+#line 3357 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 629:\n-#line 3369 \"parse.y\"\n+#line 3359 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 630:\n-#line 3373 \"parse.y\"\n+#line 3363 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 632:\n-#line 3382 \"parse.y\"\n+#line 3372 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 633:\n-#line 3384 \"parse.y\"\n+#line 3374 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 634:\n-#line 3390 \"parse.y\"\n+#line 3380 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 635:\n-#line 3392 \"parse.y\"\n+#line 3382 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 636:\n-#line 3394 \"parse.y\"\n+#line 3384 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 637:\n-#line 3396 \"parse.y\"\n+#line 3386 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 638:\n-#line 3398 \"parse.y\"\n+#line 3388 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 639:\n-#line 3400 \"parse.y\"\n+#line 3390 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 640:\n-#line 3402 \"parse.y\"\n+#line 3392 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 641:\n-#line 3404 \"parse.y\"\n+#line 3394 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 642:\n-#line 3406 \"parse.y\"\n+#line 3396 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 643:\n-#line 3410 \"parse.y\"\n+#line 3400 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 645:\n-#line 3419 \"parse.y\"\n+#line 3409 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 647:\n-#line 3423 \"parse.y\"\n+#line 3413 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 648:\n-#line 3425 \"parse.y\"\n+#line 3415 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 649:\n-#line 3427 \"parse.y\"\n+#line 3417 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 650:\n-#line 3429 \"parse.y\"\n+#line 3419 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 651:\n-#line 3431 \"parse.y\"\n+#line 3421 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 652:\n-#line 3433 \"parse.y\"\n+#line 3423 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 653:\n-#line 3435 \"parse.y\"\n+#line 3425 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 654:\n-#line 3437 \"parse.y\"\n+#line 3427 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 655:\n-#line 3439 \"parse.y\"\n+#line 3429 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 661:\n-#line 3463 \"parse.y\"\n+#line 3453 \"parse.y\"\n { do_pushlevel (); ;\n     break;}\n case 662:\n-#line 3468 \"parse.y\"\n+#line 3458 \"parse.y\"\n { yyval.ttype = do_poplevel (); ;\n     break;}\n case 664:\n-#line 3476 \"parse.y\"\n+#line 3466 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 667:\n-#line 3487 \"parse.y\"\n+#line 3477 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7305,11 +7295,11 @@ case 667:\n \t\t;\n     break;}\n case 668:\n-#line 3501 \"parse.y\"\n+#line 3491 \"parse.y\"\n {;\n     break;}\n case 670:\n-#line 3507 \"parse.y\"\n+#line 3497 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7319,7 +7309,7 @@ case 670:\n \t\t;\n     break;}\n case 671:\n-#line 3515 \"parse.y\"\n+#line 3505 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7331,7 +7321,7 @@ case 671:\n \t\t;\n     break;}\n case 672:\n-#line 3528 \"parse.y\"\n+#line 3518 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7343,7 +7333,7 @@ case 672:\n \t\t;\n     break;}\n case 673:\n-#line 3538 \"parse.y\"\n+#line 3528 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7364,7 +7354,7 @@ case 673:\n \t\t;\n     break;}\n case 674:\n-#line 3557 \"parse.y\"\n+#line 3547 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7375,11 +7365,11 @@ case 674:\n \t\t;\n     break;}\n case 675:\n-#line 3569 \"parse.y\"\n+#line 3559 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 676:\n-#line 3571 \"parse.y\"\n+#line 3561 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7389,7 +7379,7 @@ case 676:\n \t\t;\n     break;}\n case 677:\n-#line 3579 \"parse.y\"\n+#line 3569 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7401,15 +7391,15 @@ case 677:\n \t\t;\n     break;}\n case 678:\n-#line 3592 \"parse.y\"\n+#line 3582 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 680:\n-#line 3598 \"parse.y\"\n+#line 3588 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 681:\n-#line 3600 \"parse.y\"\n+#line 3590 \"parse.y\"\n {\n \t\t  tree expr = yyvsp[-1].ttype;\n \t\t  if (! processing_template_decl)\n@@ -7427,11 +7417,11 @@ case 681:\n \t\t  finish_stmt (); ;\n     break;}\n case 682:\n-#line 3616 \"parse.y\"\n+#line 3606 \"parse.y\"\n { if (! processing_template_decl) expand_start_else (); ;\n     break;}\n case 683:\n-#line 3618 \"parse.y\"\n+#line 3608 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7444,17 +7434,17 @@ case 683:\n \t\t;\n     break;}\n case 684:\n-#line 3629 \"parse.y\"\n+#line 3619 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 685:\n-#line 3631 \"parse.y\"\n+#line 3621 \"parse.y\"\n { if (! processing_template_decl) expand_end_cond ();\n \t\t  do_poplevel ();\n \t\t  finish_stmt (); ;\n     break;}\n case 686:\n-#line 3635 \"parse.y\"\n+#line 3625 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7471,7 +7461,7 @@ case 686:\n \t\t;\n     break;}\n case 687:\n-#line 3650 \"parse.y\"\n+#line 3640 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7492,7 +7482,7 @@ case 687:\n \t\t;\n     break;}\n case 688:\n-#line 3669 \"parse.y\"\n+#line 3659 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7506,7 +7496,7 @@ case 688:\n \t\t;\n     break;}\n case 689:\n-#line 3681 \"parse.y\"\n+#line 3671 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7522,7 +7512,7 @@ case 689:\n \t\t;\n     break;}\n case 690:\n-#line 3695 \"parse.y\"\n+#line 3685 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7538,7 +7528,7 @@ case 690:\n \t\t;\n     break;}\n case 691:\n-#line 3709 \"parse.y\"\n+#line 3699 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    TREE_OPERAND (yyvsp[-5].ttype, 1) = yyvsp[-1].ttype;\n@@ -7553,7 +7543,7 @@ case 691:\n \t\t;\n     break;}\n case 692:\n-#line 3722 \"parse.y\"\n+#line 3712 \"parse.y\"\n { if (processing_template_decl)\n \t\t    {\n \t\t      yyval.ttype = build_min_nt (FOR_STMT, NULL_TREE, NULL_TREE, \n@@ -7574,7 +7564,7 @@ case 692:\n \t\t;\n     break;}\n case 693:\n-#line 3741 \"parse.y\"\n+#line 3731 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7594,7 +7584,7 @@ case 693:\n \t\t;\n     break;}\n case 694:\n-#line 3759 \"parse.y\"\n+#line 3749 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7615,15 +7605,15 @@ case 694:\n \t\t;\n     break;}\n case 695:\n-#line 3780 \"parse.y\"\n+#line 3770 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    TREE_OPERAND (yyvsp[-9].ttype, 2) = yyvsp[-1].ttype;\n \t\t  push_momentary ();\n \t\t;\n     break;}\n case 696:\n-#line 3786 \"parse.y\"\n+#line 3776 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7646,7 +7636,7 @@ case 696:\n \t\t  finish_stmt (); ;\n     break;}\n case 697:\n-#line 3807 \"parse.y\"\n+#line 3797 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7665,7 +7655,7 @@ case 697:\n \t\t;\n     break;}\n case 698:\n-#line 3824 \"parse.y\"\n+#line 3814 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7680,59 +7670,59 @@ case 698:\n \t\t;\n     break;}\n case 699:\n-#line 3837 \"parse.y\"\n+#line 3827 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 700:\n-#line 3839 \"parse.y\"\n+#line 3829 \"parse.y\"\n { do_case (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 702:\n-#line 3842 \"parse.y\"\n+#line 3832 \"parse.y\"\n { do_case (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 704:\n-#line 3845 \"parse.y\"\n+#line 3835 \"parse.y\"\n { do_case (NULL_TREE, NULL_TREE); ;\n     break;}\n case 706:\n-#line 3848 \"parse.y\"\n+#line 3838 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (BREAK_STMT));\n \t\t  else if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 707:\n-#line 3854 \"parse.y\"\n+#line 3844 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (CONTINUE_STMT));\n \t\t  else if (! expand_continue_loop (0))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 708:\n-#line 3860 \"parse.y\"\n+#line 3850 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 709:\n-#line 3863 \"parse.y\"\n+#line 3853 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype);\n \t\t  finish_stmt ();\n \t\t;\n     break;}\n case 710:\n-#line 3868 \"parse.y\"\n+#line 3858 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-2].ttype)) yyvsp[-2].ttype = combine_strings (yyvsp[-2].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  expand_asm (yyvsp[-2].ttype);\n \t\t  finish_stmt ();\n \t\t;\n     break;}\n case 711:\n-#line 3875 \"parse.y\"\n+#line 3865 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-4].ttype)) yyvsp[-4].ttype = combine_strings (yyvsp[-4].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n@@ -7742,7 +7732,7 @@ case 711:\n \t\t;\n     break;}\n case 712:\n-#line 3884 \"parse.y\"\n+#line 3874 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-6].ttype)) yyvsp[-6].ttype = combine_strings (yyvsp[-6].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n@@ -7752,7 +7742,7 @@ case 712:\n \t\t;\n     break;}\n case 713:\n-#line 3894 \"parse.y\"\n+#line 3884 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-8].ttype)) yyvsp[-8].ttype = combine_strings (yyvsp[-8].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n@@ -7762,7 +7752,7 @@ case 713:\n \t\t;\n     break;}\n case 714:\n-#line 3902 \"parse.y\"\n+#line 3892 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (GOTO_STMT, yyvsp[-1].ttype));\n@@ -7772,7 +7762,7 @@ case 714:\n \t\t;\n     break;}\n case 715:\n-#line 3910 \"parse.y\"\n+#line 3900 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (GOTO_STMT, yyvsp[-1].ttype));\n@@ -7787,33 +7777,33 @@ case 715:\n \t\t;\n     break;}\n case 716:\n-#line 3923 \"parse.y\"\n+#line 3913 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 717:\n-#line 3925 \"parse.y\"\n+#line 3915 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 718:\n-#line 3929 \"parse.y\"\n+#line 3919 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 720:\n-#line 3935 \"parse.y\"\n+#line 3925 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 721:\n-#line 3941 \"parse.y\"\n+#line 3931 \"parse.y\"\n { expand_start_all_catch (); ;\n     break;}\n case 722:\n-#line 3943 \"parse.y\"\n+#line 3933 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -7822,7 +7812,7 @@ case 722:\n \t\t;\n     break;}\n case 723:\n-#line 3953 \"parse.y\"\n+#line 3943 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7838,7 +7828,7 @@ case 723:\n \t\t;\n     break;}\n case 724:\n-#line 3967 \"parse.y\"\n+#line 3957 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7851,7 +7841,7 @@ case 724:\n \t\t;\n     break;}\n case 725:\n-#line 3978 \"parse.y\"\n+#line 3968 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7864,7 +7854,7 @@ case 725:\n \t\t;\n     break;}\n case 728:\n-#line 3997 \"parse.y\"\n+#line 3987 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7875,7 +7865,7 @@ case 728:\n \t\t;\n     break;}\n case 729:\n-#line 4006 \"parse.y\"\n+#line 3996 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7886,7 +7876,7 @@ case 729:\n \t\t;\n     break;}\n case 730:\n-#line 4015 \"parse.y\"\n+#line 4005 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7899,17 +7889,17 @@ case 730:\n \t\t;\n     break;}\n case 734:\n-#line 4035 \"parse.y\"\n+#line 4025 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 735:\n-#line 4051 \"parse.y\"\n+#line 4041 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 736:\n-#line 4058 \"parse.y\"\n+#line 4048 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7918,129 +7908,129 @@ case 736:\n \t\t;\n     break;}\n case 737:\n-#line 4065 \"parse.y\"\n+#line 4055 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 738:\n-#line 4067 \"parse.y\"\n+#line 4057 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 739:\n-#line 4069 \"parse.y\"\n+#line 4059 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 740:\n-#line 4074 \"parse.y\"\n+#line 4064 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 742:\n-#line 4077 \"parse.y\"\n+#line 4067 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 743:\n-#line 4086 \"parse.y\"\n+#line 4076 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 744:\n-#line 4089 \"parse.y\"\n+#line 4079 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 745:\n-#line 4094 \"parse.y\"\n+#line 4084 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 747:\n-#line 4097 \"parse.y\"\n+#line 4087 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 748:\n-#line 4104 \"parse.y\"\n+#line 4094 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 751:\n-#line 4111 \"parse.y\"\n+#line 4101 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 752:\n-#line 4116 \"parse.y\"\n+#line 4106 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 753:\n-#line 4121 \"parse.y\"\n+#line 4111 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 754:\n-#line 4123 \"parse.y\"\n+#line 4113 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 755:\n-#line 4134 \"parse.y\"\n+#line 4124 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 757:\n-#line 4139 \"parse.y\"\n+#line 4129 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ftype.t, void_list_node);\n \t\t  TREE_PARMLIST (yyval.ttype) = 1; \n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 758:\n-#line 4148 \"parse.y\"\n+#line 4138 \"parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyval.ttype, void_list_node);\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 759:\n-#line 4153 \"parse.y\"\n+#line 4143 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 760:\n-#line 4158 \"parse.y\"\n+#line 4148 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 761:\n-#line 4162 \"parse.y\"\n+#line 4152 \"parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); \n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 762:\n-#line 4167 \"parse.y\"\n+#line 4157 \"parse.y\"\n {\n \t\t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 763:\n-#line 4171 \"parse.y\"\n+#line 4161 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 764:\n-#line 4175 \"parse.y\"\n+#line 4165 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 765:\n-#line 4179 \"parse.y\"\n+#line 4169 \"parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t);\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 766:\n-#line 4184 \"parse.y\"\n+#line 4174 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -8053,7 +8043,7 @@ case 766:\n \t\t;\n     break;}\n case 767:\n-#line 4195 \"parse.y\"\n+#line 4185 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -8066,98 +8056,98 @@ case 767:\n \t\t;\n     break;}\n case 768:\n-#line 4210 \"parse.y\"\n+#line 4200 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 769:\n-#line 4212 \"parse.y\"\n+#line 4202 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 772:\n-#line 4223 \"parse.y\"\n+#line 4213 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 773:\n-#line 4226 \"parse.y\"\n+#line 4216 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 774:\n-#line 4229 \"parse.y\"\n+#line 4219 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 775:\n-#line 4232 \"parse.y\"\n+#line 4222 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 776:\n-#line 4234 \"parse.y\"\n+#line 4224 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 778:\n-#line 4240 \"parse.y\"\n+#line 4230 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 779:\n-#line 4250 \"parse.y\"\n+#line 4240 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 780:\n-#line 4254 \"parse.y\"\n+#line 4244 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 781:\n-#line 4257 \"parse.y\"\n+#line 4247 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 782:\n-#line 4260 \"parse.y\"\n+#line 4250 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 783:\n-#line 4264 \"parse.y\"\n+#line 4254 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 784:\n-#line 4268 \"parse.y\"\n+#line 4258 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 785:\n-#line 4275 \"parse.y\"\n+#line 4265 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 786:\n-#line 4278 \"parse.y\"\n+#line 4268 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 789:\n-#line 4289 \"parse.y\"\n+#line 4279 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 790:\n-#line 4294 \"parse.y\"\n+#line 4284 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 791:\n-#line 4299 \"parse.y\"\n+#line 4289 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -8168,188 +8158,188 @@ case 791:\n \t\t;\n     break;}\n case 792:\n-#line 4311 \"parse.y\"\n+#line 4301 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 793:\n-#line 4313 \"parse.y\"\n+#line 4303 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 794:\n-#line 4315 \"parse.y\"\n+#line 4305 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 795:\n-#line 4320 \"parse.y\"\n+#line 4310 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 797:\n-#line 4326 \"parse.y\"\n+#line 4316 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 798:\n-#line 4334 \"parse.y\"\n+#line 4324 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 799:\n-#line 4336 \"parse.y\"\n+#line 4326 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 800:\n-#line 4338 \"parse.y\"\n+#line 4328 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 801:\n-#line 4340 \"parse.y\"\n+#line 4330 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 802:\n-#line 4347 \"parse.y\"\n+#line 4337 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 803:\n-#line 4352 \"parse.y\"\n+#line 4342 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 804:\n-#line 4354 \"parse.y\"\n+#line 4344 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 805:\n-#line 4356 \"parse.y\"\n+#line 4346 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 806:\n-#line 4358 \"parse.y\"\n+#line 4348 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 807:\n-#line 4360 \"parse.y\"\n+#line 4350 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 808:\n-#line 4362 \"parse.y\"\n+#line 4352 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 809:\n-#line 4364 \"parse.y\"\n+#line 4354 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 810:\n-#line 4366 \"parse.y\"\n+#line 4356 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 811:\n-#line 4368 \"parse.y\"\n+#line 4358 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 812:\n-#line 4370 \"parse.y\"\n+#line 4360 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 813:\n-#line 4372 \"parse.y\"\n+#line 4362 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 814:\n-#line 4374 \"parse.y\"\n+#line 4364 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 815:\n-#line 4376 \"parse.y\"\n+#line 4366 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 816:\n-#line 4378 \"parse.y\"\n+#line 4368 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 817:\n-#line 4380 \"parse.y\"\n+#line 4370 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 818:\n-#line 4382 \"parse.y\"\n+#line 4372 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 819:\n-#line 4384 \"parse.y\"\n+#line 4374 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 820:\n-#line 4386 \"parse.y\"\n+#line 4376 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 821:\n-#line 4388 \"parse.y\"\n+#line 4378 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 822:\n-#line 4390 \"parse.y\"\n+#line 4380 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 823:\n-#line 4392 \"parse.y\"\n+#line 4382 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 824:\n-#line 4394 \"parse.y\"\n+#line 4384 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 825:\n-#line 4396 \"parse.y\"\n+#line 4386 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 826:\n-#line 4398 \"parse.y\"\n+#line 4388 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 827:\n-#line 4400 \"parse.y\"\n+#line 4390 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 828:\n-#line 4402 \"parse.y\"\n+#line 4392 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 829:\n-#line 4404 \"parse.y\"\n+#line 4394 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 830:\n-#line 4406 \"parse.y\"\n+#line 4396 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 831:\n-#line 4408 \"parse.y\"\n+#line 4398 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 832:\n-#line 4410 \"parse.y\"\n+#line 4400 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 833:\n-#line 4412 \"parse.y\"\n+#line 4402 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 834:\n-#line 4414 \"parse.y\"\n+#line 4404 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 835:\n-#line 4416 \"parse.y\"\n+#line 4406 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 836:\n-#line 4419 \"parse.y\"\n+#line 4409 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 837:\n-#line 4421 \"parse.y\"\n+#line 4411 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8550,7 +8540,7 @@ case 837:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 4424 \"parse.y\"\n+#line 4414 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "7ef287c00f25829bbe44032be3b54215cb644247", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 17, "deletions": 27, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b55a76efd8c74a151127bad6dc202e320e2ed4/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=d8b55a76efd8c74a151127bad6dc202e320e2ed4", "patch": "@@ -2601,42 +2601,32 @@ base_class.1:\n base_class_access_list:\n \t  VISSPEC see_typename\n \t| SCSPEC see_typename\n-\t\t{ if ($<ttype>$ != ridpointers[(int)RID_VIRTUAL])\n-\t\t    sorry (\"non-virtual access\");\n+\t\t{ if ($1 != ridpointers[(int)RID_VIRTUAL])\n+\t\t    cp_error (\"`%D' access\", $1);\n \t\t  $$ = access_default_virtual_node; }\n \t| base_class_access_list VISSPEC see_typename\n-\t\t{ int err = 0;\n-\t\t  if ($2 == access_protected_node)\n-\t\t    {\n-\t\t      warning (\"`protected' access not implemented\");\n-\t\t      $2 = access_public_node;\n-\t\t      err++;\n-\t\t    }\n+\t\t{\n+\t\t  if ($1 != access_default_virtual_node)\n+\t\t    error (\"multiple access specifiers\");\n \t\t  else if ($2 == access_public_node)\n-\t\t    {\n-\t\t      if ($1 == access_private_node)\n-\t\t\t{\n-\t\t\tmixed:\n-\t\t\t  error (\"base class cannot be public and private\");\n-\t\t\t}\n-\t\t      else if ($1 == access_default_virtual_node)\n-\t\t\t$$ = access_public_virtual_node;\n-\t\t    }\n+\t\t    $$ = access_public_virtual_node;\n+\t\t  else if ($2 == access_protected_node)\n+\t\t    $$ = access_protected_virtual_node;\n \t\t  else /* $2 == access_private_node */\n-\t\t    {\n-\t\t      if ($1 == access_public_node)\n-\t\t\tgoto mixed;\n-\t\t      else if ($1 == access_default_virtual_node)\n-\t\t\t$$ = access_private_virtual_node;\n-\t\t    }\n+\t\t    $$ = access_private_virtual_node;\n \t\t}\n \t| base_class_access_list SCSPEC see_typename\n \t\t{ if ($2 != ridpointers[(int)RID_VIRTUAL])\n-\t\t    sorry (\"non-virtual access\");\n-\t\t  if ($$ == access_public_node)\n+\t\t    cp_error (\"`%D' access\", $2);\n+\t\t  else if ($$ == access_public_node)\n \t\t    $$ = access_public_virtual_node;\n+\t\t  else if ($$ == access_protected_node)\n+\t\t    $$ = access_protected_virtual_node;\n \t\t  else if ($$ == access_private_node)\n-\t\t    $$ = access_private_virtual_node; }\n+\t\t    $$ = access_private_virtual_node;\n+\t\t  else\n+\t\t    error (\"multiple `virtual' specifiers\");\n+\t\t}\n \t;\n \n left_curly:"}]}