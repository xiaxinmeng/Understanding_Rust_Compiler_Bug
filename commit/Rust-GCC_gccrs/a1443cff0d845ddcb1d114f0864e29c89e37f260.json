{"sha": "a1443cff0d845ddcb1d114f0864e29c89e37f260", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0NDNjZmYwZDg0NWRkY2IxZDExNGYwODY0ZTI5Yzg5ZTM3ZjI2MA==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-05-31T15:27:54Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-05-31T15:27:54Z"}, "message": "Simplify SH DImode add, sub, neg patterns.\n\n\t* config/sh/sh.md (adddi3, subdi3, negdi2, abs<mode>2): Remove\n\tdefine_expand patterns.\n\t(adddi3_compact): Rename to adddi3.\n\t(subdi3_compact): Rename to subdi3.\n\t(*negdi2): Rename to negdi2.\n\t(*abs<mode>2): Rename to abs<mode>2.\n\nFrom-SVN: r236927", "tree": {"sha": "6f889d7dcf2d5505df0a775f9c40dbdb090abda8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f889d7dcf2d5505df0a775f9c40dbdb090abda8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1443cff0d845ddcb1d114f0864e29c89e37f260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1443cff0d845ddcb1d114f0864e29c89e37f260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1443cff0d845ddcb1d114f0864e29c89e37f260", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1443cff0d845ddcb1d114f0864e29c89e37f260/comments", "author": null, "committer": null, "parents": [{"sha": "0e07cb7f7d43282f601820a149eec66ea99a541f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e07cb7f7d43282f601820a149eec66ea99a541f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e07cb7f7d43282f601820a149eec66ea99a541f"}], "stats": {"total": 53, "additions": 14, "deletions": 39}, "files": [{"sha": "dca3e9cfbc2b99147f6fc6bff9d80be3ef344c92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1443cff0d845ddcb1d114f0864e29c89e37f260/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1443cff0d845ddcb1d114f0864e29c89e37f260/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1443cff0d845ddcb1d114f0864e29c89e37f260", "patch": "@@ -1,3 +1,12 @@\n+2016-05-31  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh.md (adddi3, subdi3, negdi2, abs<mode>2): Remove\n+\tdefine_expand patterns.\n+\t(adddi3_compact): Rename to adddi3.\n+\t(subdi3_compact): Rename to subdi3.\n+\t(*negdi2): Rename to negdi2.\n+\t(*abs<mode>2): Rename to abs<mode>2.\n+\n 2016-05-31  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/rx/rx.md (FETCHOP_NO_MINUS): New code iterator."}, {"sha": "30948ca7c8aff641cc9aa85ba016ab07121c5c74", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 5, "deletions": 39, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1443cff0d845ddcb1d114f0864e29c89e37f260/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1443cff0d845ddcb1d114f0864e29c89e37f260/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=a1443cff0d845ddcb1d114f0864e29c89e37f260", "patch": "@@ -1535,18 +1535,7 @@\n ;; Addition instructions\n ;; -------------------------------------------------------------------------\n \n-(define_expand \"adddi3\"\n-  [(set (match_operand:DI 0 \"arith_reg_operand\")\n-\t(plus:DI (match_operand:DI 1 \"arith_reg_operand\")\n-\t\t (match_operand:DI 2 \"arith_operand\")))]\n-  \"\"\n-{\n-  operands[2] = force_reg (DImode, operands[2]);\n-  emit_insn (gen_adddi3_compact (operands[0], operands[1], operands[2]));\n-  DONE;\n-})\n-\n-(define_insn_and_split \"adddi3_compact\"\n+(define_insn_and_split \"adddi3\"\n   [(set (match_operand:DI 0 \"arith_reg_dest\")\n \t(plus:DI (match_operand:DI 1 \"arith_reg_operand\")\n \t\t (match_operand:DI 2 \"arith_reg_operand\")))\n@@ -1938,21 +1927,10 @@\n ;; Subtraction instructions\n ;; -------------------------------------------------------------------------\n \n-(define_expand \"subdi3\"\n-  [(set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n-\t(minus:DI (match_operand:DI 1 \"arith_reg_or_0_operand\" \"\")\n-\t\t  (match_operand:DI 2 \"arith_reg_operand\" \"\")))]\n-  \"\"\n-{\n-  operands[1] = force_reg (DImode, operands[1]);\n-  emit_insn (gen_subdi3_compact (operands[0], operands[1], operands[2]));\n-  DONE;\n-})\n-\n-(define_insn_and_split \"subdi3_compact\"\n+(define_insn_and_split \"subdi3\"\n   [(set (match_operand:DI 0 \"arith_reg_dest\")\n \t(minus:DI (match_operand:DI 1 \"arith_reg_operand\")\n-\t\t (match_operand:DI 2 \"arith_reg_operand\")))\n+\t\t  (match_operand:DI 2 \"arith_reg_operand\")))\n    (clobber (reg:SI T_REG))]\n   \"TARGET_SH1\"\n   \"#\"\n@@ -4393,13 +4371,7 @@\n \n ;; Don't split into individual negc insns immediately so that neg:DI (abs:DI)\n ;; can be combined.\n-(define_expand \"negdi2\"\n-  [(parallel [(set (match_operand:DI 0 \"arith_reg_dest\")\n-\t\t   (neg:DI (match_operand:DI 1 \"arith_reg_operand\")))\n-\t      (clobber (reg:SI T_REG))])]\n-  \"TARGET_SH1\")\n-\n-(define_insn_and_split \"*negdi2\"\n+(define_insn_and_split \"negdi2\"\n   [(set (match_operand:DI 0 \"arith_reg_dest\")\n \t(neg:DI (match_operand:DI 1 \"arith_reg_operand\")))\n    (clobber (reg:SI T_REG))]\n@@ -4480,13 +4452,7 @@\n }\n   [(set_attr \"type\" \"arith\")])\n \n-(define_expand \"abs<mode>2\"\n-  [(parallel [(set (match_operand:SIDI 0 \"arith_reg_dest\")\n-\t\t   (abs:SIDI (match_operand:SIDI 1 \"arith_reg_operand\")))\n-\t      (clobber (reg:SI T_REG))])]\n-  \"TARGET_SH1\")\n-\n-(define_insn_and_split \"*abs<mode>2\"\n+(define_insn_and_split \"abs<mode>2\"\n   [(set (match_operand:SIDI 0 \"arith_reg_dest\")\n   \t(abs:SIDI (match_operand:SIDI 1 \"arith_reg_operand\")))\n    (clobber (reg:SI T_REG))]"}]}