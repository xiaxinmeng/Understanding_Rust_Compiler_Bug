{"sha": "7dcf01c29cbcc7056e41c27b912309dc60b44071", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RjZjAxYzI5Y2JjYzcwNTZlNDFjMjdiOTEyMzA5ZGM2MGI0NDA3MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-17T23:45:04Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-17T23:45:04Z"}, "message": "(pushdecl): Call lookup_name for external references.\n\nDelete code to check external references against global\ndeclarations.\n(redeclaration_error_message): If newdecl has block scope, then\nreturn string only if olddecl has the same scope.\n\nFrom-SVN: r6807", "tree": {"sha": "eefbb2aff394ecf7c678981c0a98e45f192a31a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eefbb2aff394ecf7c678981c0a98e45f192a31a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dcf01c29cbcc7056e41c27b912309dc60b44071", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcf01c29cbcc7056e41c27b912309dc60b44071", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dcf01c29cbcc7056e41c27b912309dc60b44071", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcf01c29cbcc7056e41c27b912309dc60b44071/comments", "author": null, "committer": null, "parents": [{"sha": "597681f6d1f4905bb5ca063334a5fd824525f670", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597681f6d1f4905bb5ca063334a5fd824525f670", "html_url": "https://github.com/Rust-GCC/gccrs/commit/597681f6d1f4905bb5ca063334a5fd824525f670"}], "stats": {"total": 39, "additions": 19, "deletions": 20}, "files": [{"sha": "7e079323bd5fa1d5476611c6ab7db975424cc4a0", "filename": "gcc/c-decl.c", "status": "modified", "additions": 19, "deletions": 20, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dcf01c29cbcc7056e41c27b912309dc60b44071/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dcf01c29cbcc7056e41c27b912309dc60b44071/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=7dcf01c29cbcc7056e41c27b912309dc60b44071", "patch": "@@ -1798,7 +1798,10 @@ pushdecl (x)\n       char *file;\n       int line;\n \n-      t = lookup_name_current_level (name);\n+      if (DECL_EXTERNAL (x) && TREE_PUBLIC (x))\n+\tt = lookup_name (name);\n+      else\n+\tt = lookup_name_current_level (name);\n       if (t != 0 && t == error_mark_node)\n \t/* error_mark_node is 0 for a while during initialization!  */\n \t{\n@@ -1901,26 +1904,20 @@ pushdecl (x)\n         }\n \n       /* Multiple external decls of the same identifier ought to match.\n-\t Check against both global declarations and out of scope (limbo) block\n-\t level declarations.\n+\t Check against out of scope (limbo) block level declarations.\n+\n+\t If this is a block level declaration, then DECL_EXTERNAL must also\n+\t be set, so we have already checked against global declarations above\n+\t via the lookup_name call.\n \n \t We get warnings about inline functions where they are defined.\n \t Avoid duplicate warnings where they are used.  */\n-      if (TREE_PUBLIC (x) && ! DECL_INLINE (x))\n+      if (TREE_PUBLIC (x) && ! DECL_INLINE (x)\n+\t  && IDENTIFIER_LIMBO_VALUE (name))\n \t{\n-\t  tree decl;\n-\n-\t  if (IDENTIFIER_GLOBAL_VALUE (name) != 0\n-\t      && (DECL_EXTERNAL (IDENTIFIER_GLOBAL_VALUE (name))\n-\t\t  || TREE_PUBLIC (IDENTIFIER_GLOBAL_VALUE (name))))\n-\t    decl = IDENTIFIER_GLOBAL_VALUE (name);\n-\t  else if (IDENTIFIER_LIMBO_VALUE (name) != 0)\n-\t    /* Decls in limbo are always extern, so no need to check that.  */\n-\t    decl = IDENTIFIER_LIMBO_VALUE (name);\n-\t  else\n-\t    decl = 0;\n+\t  tree decl = IDENTIFIER_LIMBO_VALUE (name);\n \n-\t  if (decl && ! comptypes (TREE_TYPE (x), TREE_TYPE (decl))\n+\t  if (! comptypes (TREE_TYPE (x), TREE_TYPE (decl))\n \t      /* If old decl is built-in, we already warned if we should.  */\n \t      && !DECL_BUILT_IN (decl))\n \t    {\n@@ -2308,10 +2305,12 @@ redeclaration_error_message (newdecl, olddecl)\n     return 0;\n   else\n     {\n-      /* Objects declared with block scope:  */\n-      /* Reject two definitions, and reject a definition\n-\t together with an external reference.  */\n-      if (!(DECL_EXTERNAL (newdecl) && DECL_EXTERNAL (olddecl)))\n+      /* Newdecl has block scope.  If olddecl has block scope also, then\n+\t reject two definitions, and reject a definition together with an\n+\t external reference.  Otherwise, it is OK, because newdecl must\n+\t be an extern reference to olddecl.  */\n+      if (!(DECL_EXTERNAL (newdecl) && DECL_EXTERNAL (olddecl))\n+\t  && DECL_CONTEXT (newdecl) == DECL_CONTEXT (olddecl))\n \treturn \"redeclaration of `%s'\";\n       return 0;\n     }"}]}