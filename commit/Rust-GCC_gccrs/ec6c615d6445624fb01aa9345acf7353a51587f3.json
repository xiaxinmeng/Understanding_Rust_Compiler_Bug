{"sha": "ec6c615d6445624fb01aa9345acf7353a51587f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM2YzYxNWQ2NDQ1NjI0ZmIwMWFhOTM0NWFjZjczNTNhNTE1ODdmMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-24T22:41:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-24T22:41:11Z"}, "message": "(main): Add -ax option.\n\nFrom-SVN: r10848", "tree": {"sha": "5cb8f44869e3e0db45ba771b6b8b536158672a28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cb8f44869e3e0db45ba771b6b8b536158672a28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec6c615d6445624fb01aa9345acf7353a51587f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec6c615d6445624fb01aa9345acf7353a51587f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec6c615d6445624fb01aa9345acf7353a51587f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec6c615d6445624fb01aa9345acf7353a51587f3/comments", "author": null, "committer": null, "parents": [{"sha": "47288231ca14a839b20c0140bd5349207e506f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47288231ca14a839b20c0140bd5349207e506f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47288231ca14a839b20c0140bd5349207e506f6c"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "6da56cd17fc60ed86c640ca38ed96b5abb947608", "filename": "gcc/toplev.c", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec6c615d6445624fb01aa9345acf7353a51587f3/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec6c615d6445624fb01aa9345acf7353a51587f3/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=ec6c615d6445624fb01aa9345acf7353a51587f3", "patch": "@@ -2714,13 +2714,16 @@ rest_of_compilation (decl)\n \t compile it by itself, defer decision till end of compilation.\n \t finish_compilation will call rest_of_compilation again\n \t for those functions that need to be output.  Also defer those\n-\t functions that we are supposed to defer.  */\n-\n-      if (DECL_DEFER_OUTPUT (decl)\n-\t  || ((specd || DECL_INLINE (decl))\n-\t      && ((! TREE_PUBLIC (decl) && ! TREE_ADDRESSABLE (decl)\n-\t\t   && ! flag_keep_inline_functions)\n-\t\t  || DECL_EXTERNAL (decl))))\n+\t functions that we are supposed to defer.  We cannot defer\n+\t functions containing nested functions since the nested function\n+\t data is in our non-saved obstack.  */\n+\n+      if (! current_function_contains_functions\n+\t  && (DECL_DEFER_OUTPUT (decl)\n+\t      || ((specd || DECL_INLINE (decl))\n+\t\t  && ((! TREE_PUBLIC (decl) && ! TREE_ADDRESSABLE (decl)\n+\t\t       && ! flag_keep_inline_functions)\n+\t\t      || DECL_EXTERNAL (decl)))))\n \t{\n \t  DECL_DEFER_OUTPUT (decl) = 1;\n \n@@ -3667,7 +3670,16 @@ main (argc, argv, envp)\n #if !defined (BLOCK_PROFILER) || !defined (FUNCTION_BLOCK_PROFILER)\n \t      warning (\"`-a' option (basic block profile) not supported\");\n #else\n-\t      profile_block_flag = 1;\n+              profile_block_flag = (profile_block_flag < 2) ? 1 : 3;\n+#endif\n+\t    }\n+\t  else if (!strcmp (str, \"ax\"))\n+\t    {\n+#if !defined (FUNCTION_BLOCK_PROFILER_EXIT) || !defined (BLOCK_PROFILER) || !defined (FUNCTION_BLOCK_PROFILER)\n+\t      warning (\"`-ax' option (jump profiling) not supported\");\n+#else\n+\t      profile_block_flag = (!profile_block_flag \n+\t                               || profile_block_flag == 2) ? 2 : 3;\n #endif\n \t    }\n \t  else if (str[0] == 'g')\n@@ -3861,6 +3873,12 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n   OVERRIDE_OPTIONS;\n #endif\n \n+  if (profile_block_flag == 3)\n+    {\n+      warning (\"`-ax' and `-a' are conflicting options. `-a' ignored.\");\n+      profile_block_flag = 2;\n+    }\n+\n   /* Unrolling all loops implies that standard loop unrolling must also\n      be done.  */\n   if (flag_unroll_all_loops)"}]}