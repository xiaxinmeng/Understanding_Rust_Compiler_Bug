{"sha": "7d54cccad332074d5fb81123796239f0f61b11a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q1NGNjY2FkMzMyMDc0ZDVmYjgxMTIzNzk2MjM5ZjBmNjFiMTFhNw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2021-01-25T19:27:15Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2021-01-25T19:27:15Z"}, "message": "Commit test case for PR 96386.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/associate_57.f90: New test.", "tree": {"sha": "40daf5ef2896041e19ca9a27ce3821ec78d92214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40daf5ef2896041e19ca9a27ce3821ec78d92214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d54cccad332074d5fb81123796239f0f61b11a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d54cccad332074d5fb81123796239f0f61b11a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d54cccad332074d5fb81123796239f0f61b11a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d54cccad332074d5fb81123796239f0f61b11a7/comments", "author": null, "committer": null, "parents": [{"sha": "a43e0dfb63ffb63e400b69acac6dd614b203d4fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a43e0dfb63ffb63e400b69acac6dd614b203d4fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a43e0dfb63ffb63e400b69acac6dd614b203d4fe"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "80c7668417476cbe06cee2336f5e60b0fb25e2f7", "filename": "gcc/testsuite/gfortran.dg/associate_57.f90", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54cccad332074d5fb81123796239f0f61b11a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_57.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54cccad332074d5fb81123796239f0f61b11a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_57.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_57.f90?ref=7d54cccad332074d5fb81123796239f0f61b11a7", "patch": "@@ -0,0 +1,47 @@\n+! { dg-do compile }\n+! PR 96386 - this used to cause an ICE.\n+! Test case by Menno Deij - van Rijswijk.\n+\n+MODULE assoc\n+\n+TYPE Level3\n+  INTEGER                      :: someNumber\n+END TYPE Level3\n+\n+TYPE Level2\n+  INTEGER                      :: nLevel3\n+  TYPE (Level3), ALLOCATABLE   :: levels3(:)\n+  \n+END TYPE Level2\n+\n+TYPE Level1\n+  INTEGER                      :: nLevel2\n+  TYPE (Level2), ALLOCATABLE   :: levels2(:)\n+END TYPE Level1\n+\n+TYPE outer_type\n+  INTEGER                      :: nLevel1\n+  TYPE (Level1), ALLOCATABLE   :: levels1(:)\n+END TYPE outer_type\n+\n+TYPE(outer_type), TARGET       :: outer\n+\n+CONTAINS\n+\n+SUBROUTINE internal_compiler_error_repro()\n+\n+INTEGER F,B,Z\n+\n+ASSOCIATE(l1 => outer%levels1 ) ! <-- this gives an ICE\n+!ASSOCIATE(l1 => outer%levels1(:) )  ! <-- No ICE if array spec is added\n+  DO F=1,outer%nLevel1\n+     ASSOCIATE(l2 => l1(F)%levels2 )\n+       DO B=1,l2(F)%nLevel3 ! <-- condition for ICE to be triggered\n+\n+      END DO\n+     END ASSOCIATE\n+  END DO\n+END ASSOCIATE \n+\n+END SUBROUTINE internal_compiler_error_repro\n+end module"}]}