{"sha": "2ca4e2c2296e9b0690501d80ab8cdca25c30de08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhNGUyYzIyOTZlOWIwNjkwNTAxZDgwYWI4Y2RjYTI1YzMwZGUwOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-10-24T16:30:22Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-10-24T16:30:22Z"}, "message": "re PR fortran/44646 ([F08] Implement DO CONCURRENT)\n\n2013-10-24  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/44646\n        * trans-stmt.c (struct forall_info): Add do_concurrent field.\n        (gfc_trans_forall_1): Set it for do concurrent.\n        (gfc_trans_forall_loop): Mark those as annot_expr_ivdep_kind.\n\n2013-10-24  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/44646\n        * gfortran.dg/vect/vect-do-concurrent-1.f90: New.\n\nFrom-SVN: r204023", "tree": {"sha": "6fb9115ad55e849df56321432ba9bb1c07ec3ecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fb9115ad55e849df56321432ba9bb1c07ec3ecf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ca4e2c2296e9b0690501d80ab8cdca25c30de08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca4e2c2296e9b0690501d80ab8cdca25c30de08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca4e2c2296e9b0690501d80ab8cdca25c30de08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca4e2c2296e9b0690501d80ab8cdca25c30de08/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2ad7995d0b9b2666ce77a310e39a29630df0747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ad7995d0b9b2666ce77a310e39a29630df0747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ad7995d0b9b2666ce77a310e39a29630df0747"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "80697ff98d0a775fae879c8f680e7aac5fb51d76", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca4e2c2296e9b0690501d80ab8cdca25c30de08/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca4e2c2296e9b0690501d80ab8cdca25c30de08/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2ca4e2c2296e9b0690501d80ab8cdca25c30de08", "patch": "@@ -1,3 +1,10 @@\n+2013-10-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/44646\n+\t* trans-stmt.c (struct forall_info): Add do_concurrent field.\n+\t(gfc_trans_forall_1): Set it for do concurrent.\n+\t(gfc_trans_forall_loop): Mark those as annot_expr_ivdep_kind.\n+\n 2013-10-23  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/58793"}, {"sha": "62e690d407c7a1ac2fe33dcb3830567df0430730", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca4e2c2296e9b0690501d80ab8cdca25c30de08/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca4e2c2296e9b0690501d80ab8cdca25c30de08/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=2ca4e2c2296e9b0690501d80ab8cdca25c30de08", "patch": "@@ -53,6 +53,7 @@ typedef struct forall_info\n   int nvar;\n   tree size;\n   struct forall_info  *prev_nest;\n+  bool do_concurrent;\n }\n forall_info;\n \n@@ -2759,6 +2760,11 @@ gfc_trans_forall_loop (forall_info *forall_tmp, tree body,\n       /* The exit condition.  */\n       cond = fold_build2_loc (input_location, LE_EXPR, boolean_type_node,\n \t\t\t      count, build_int_cst (TREE_TYPE (count), 0));\n+      if (forall_tmp->do_concurrent)\n+\tcond = build2 (ANNOTATE_EXPR, TREE_TYPE (cond), cond,\n+\t\t       build_int_cst (integer_type_node,\n+\t\t\t\t      annot_expr_ivdep_kind));\n+\n       tmp = build1_v (GOTO_EXPR, exit_label);\n       tmp = fold_build3_loc (input_location, COND_EXPR, void_type_node,\n \t\t\t     cond, tmp, build_empty_stmt (input_location));\n@@ -3842,6 +3848,7 @@ gfc_trans_forall_1 (gfc_code * code, forall_info * nested_forall_info)\n \t}\n \n       tmp = gfc_finish_block (&body);\n+      nested_forall_info->do_concurrent = true;\n       tmp = gfc_trans_nested_forall_loop (nested_forall_info, tmp, 1);\n       gfc_add_expr_to_block (&block, tmp);\n       goto done;"}, {"sha": "d2c2cd645240d8626c8f4d08958f9da17b16d7cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca4e2c2296e9b0690501d80ab8cdca25c30de08/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca4e2c2296e9b0690501d80ab8cdca25c30de08/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ca4e2c2296e9b0690501d80ab8cdca25c30de08", "patch": "@@ -1,3 +1,8 @@\n+2013-08-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/44646\n+\t* gfortran.dg/vect/vect-do-concurrent-1.f90: New.\n+\n 2013-10-24  Dehao Chen  <dehao@google.com>\n \n \t* g++.dg/opt/devirt3.C: New test."}, {"sha": "7d5624175ee64462785618402b375461321cb164", "filename": "gcc/testsuite/gfortran.dg/vect/vect-do-concurrent-1.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca4e2c2296e9b0690501d80ab8cdca25c30de08/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-do-concurrent-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca4e2c2296e9b0690501d80ab8cdca25c30de08/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-do-concurrent-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-do-concurrent-1.f90?ref=2ca4e2c2296e9b0690501d80ab8cdca25c30de08", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+! { dg-require-effective-target vect_float }\n+! { dg-options \"-O3 -fopt-info-vec-optimized\" }\n+\n+subroutine test(n, a, b, c)\n+  integer, value :: n\n+  real, contiguous,  pointer :: a(:), b(:), c(:)\n+  integer :: i\n+  do concurrent (i = 1:n)\n+    a(i) = b(i) + c(i)\n+  end do\n+end subroutine test\n+\n+! { dg-message \"loop vectorized\" \"\" { target *-*-* } 0 }\n+! { dg-bogus \"version\" \"\" { target *-*-* } 0 }\n+! { dg-bogus \"alias\" \"\" { target *-*-* } 0 }\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}]}