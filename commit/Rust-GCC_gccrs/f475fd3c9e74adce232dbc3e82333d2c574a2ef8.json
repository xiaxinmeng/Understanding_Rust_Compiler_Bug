{"sha": "f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ3NWZkM2M5ZTc0YWRjZTIzMmRiYzNlODIzMzNkMmM1NzRhMmVmOA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2006-10-16T19:53:29Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-10-16T19:53:29Z"}, "message": "darwin.h (SUBTARGET_OVERRIDE_OPTIONS): Add -mkernel support.\n\n\t* config/rs6000/darwin.h (SUBTARGET_OVERRIDE_OPTIONS): Add\n\t-mkernel support.\n\t(C_COMMON_OVERRIDE_OPTIONS): Add -mkernel support.  Add\n\tSUBTARGET_C_COMMON_OVERRIDE_OPTIONS callout.\n\t(CC1_SPEC): Don't turn on -fPIC when -mkernel is given.\n\t(OS_MISSING_ALTIVEC): Add.\n\t* config/i386/i386.c (override_options): Add\n\tSUBSUBTARGET_OVERRIDE_OPTIONS callout.\n\t* config/i386/darwin.h (CC1_SPEC): Don't turn on -fPIC when\n\t-mkernel, -static or -mdynamic-no-pic is given.\n\t(C_COMMON_OVERRIDE_OPTIONS): Add.\n\t* config/darwin.opt (fapple-kext): Add.\n\t(mkernel): Add.\n\t* config/darwin.h (TARGET_OPTION_TRANSLATE_TABLE): Add\n\t-fapple-kext, -findirect-virtual-calls, -fterminated-vtables and\n\t-mkernel support.\n\t(SUBSUBTARGET_OVERRIDE_OPTIONS): Add.\n\t(SUBTARGET_C_COMMON_OVERRIDE_OPTIONS): Add.\n\t(CPP_SPEC): Move defines for __DYNAMIC__ and __STATIC__ from here...\n\t(SUBTARGET_ATTRIBUTE_TABLE): Add apple_kext_compatibility.\n\t(TARGET_CXX_CDTOR_RETURNS_THIS): Add.\n\t(flag_mkernel): Add.\n\t(flag_apple_kext): Add.\n\t(TARGET_KEXTABI): Add.\n\t* config/darwin.c (darwin_handle_kext_attribute): Add.\n\t(DARWIN_VTABLE_P): Add.\n\t(darwin_binds_local_p): Add partial support for rebinding vtables\n\tin kexts.\n\t(darwin_kextabi_p): Add.\n\t(darwin_override_options): Add.\n\t* config/darwin-protos.h (darwin_handle_kext_attribute): Add.\n\t(darwin_kextabi_p): Add.\n\t(darwin_override_options): Add.\n\t* config/darwin-c.c (darwin_cpp_builtins): ... move defines for\n\t__DYNAMIC__ and __STATIC__ here.\n\nFrom-SVN: r117793", "tree": {"sha": "da708a8ea1a1ba16e416d1932eea2803f1bfd735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da708a8ea1a1ba16e416d1932eea2803f1bfd735"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/comments", "author": null, "committer": null, "parents": [{"sha": "cc5c274102f86b028c67b4e2adbd95fbb214a87b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc5c274102f86b028c67b4e2adbd95fbb214a87b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc5c274102f86b028c67b4e2adbd95fbb214a87b"}], "stats": {"total": 192, "additions": 184, "deletions": 8}, "files": [{"sha": "877d893d798bad2482d6061f893e6461c80bcfac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "patch": "@@ -1,3 +1,41 @@\n+2006-10-16  Mike Stump  <mrs@apple.com>\n+\n+\t* config/rs6000/darwin.h (SUBTARGET_OVERRIDE_OPTIONS): Add\n+\t-mkernel support.\n+\t(C_COMMON_OVERRIDE_OPTIONS): Add -mkernel support.  Add\n+\tSUBTARGET_C_COMMON_OVERRIDE_OPTIONS callout.\n+\t(CC1_SPEC): Don't turn on -fPIC when -mkernel is given.\n+\t(OS_MISSING_ALTIVEC): Add.\n+\t* config/i386/i386.c (override_options): Add\n+\tSUBSUBTARGET_OVERRIDE_OPTIONS callout.\n+\t* config/i386/darwin.h (CC1_SPEC): Don't turn on -fPIC when\n+\t-mkernel, -static or -mdynamic-no-pic is given.\n+\t(C_COMMON_OVERRIDE_OPTIONS): Add.\n+\t* config/darwin.opt (fapple-kext): Add.\n+\t(mkernel): Add.\n+\t* config/darwin.h (TARGET_OPTION_TRANSLATE_TABLE): Add\n+\t-fapple-kext, -findirect-virtual-calls, -fterminated-vtables and\n+\t-mkernel support.\n+\t(SUBSUBTARGET_OVERRIDE_OPTIONS): Add.\n+\t(SUBTARGET_C_COMMON_OVERRIDE_OPTIONS): Add.\n+\t(CPP_SPEC): Move defines for __DYNAMIC__ and __STATIC__ from here...\n+\t(SUBTARGET_ATTRIBUTE_TABLE): Add apple_kext_compatibility.\n+\t(TARGET_CXX_CDTOR_RETURNS_THIS): Add.\n+\t(flag_mkernel): Add.\n+\t(flag_apple_kext): Add.\n+\t(TARGET_KEXTABI): Add.\n+\t* config/darwin.c (darwin_handle_kext_attribute): Add.\n+\t(DARWIN_VTABLE_P): Add.\n+\t(darwin_binds_local_p): Add partial support for rebinding vtables\n+\tin kexts.\n+\t(darwin_kextabi_p): Add.\n+\t(darwin_override_options): Add.\n+\t* config/darwin-protos.h (darwin_handle_kext_attribute): Add.\n+\t(darwin_kextabi_p): Add.\n+\t(darwin_override_options): Add.\n+\t* config/darwin-c.c (darwin_cpp_builtins): ... move defines for\n+\t__DYNAMIC__ and __STATIC__ here.\n+\n 2006-10-16  Brooks Moses  <bmoses@stanford.edu>\n \n \t* doc/sourcebuild.texi, doc/makefile.texi, doc/install.texi:"}, {"sha": "51dbf5c956056c3e9bd0bf9b7564478a5d786cfe", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "patch": "@@ -619,4 +619,9 @@ darwin_cpp_builtins (cpp_reader *pfile)\n   if (darwin_macosx_version_min)\n     builtin_define_with_value (\"__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__\",\n \t\t\t       version_as_macro(), false);\n+\n+  if (flag_pic || MACHO_DYNAMIC_NO_PIC_P)\n+    builtin_define (\"__DYNAMIC__\");\n+  else\n+    builtin_define (\"__STATIC__\");\n }"}, {"sha": "b28317b8b77cab607fef94c8d6516b311c41dbba", "filename": "gcc/config/darwin-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-protos.h?ref=f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "patch": "@@ -73,6 +73,7 @@ extern void darwin_file_end (void);\n \n extern void darwin_mark_decl_preserved (const char *);\n \n+extern tree darwin_handle_kext_attribute (tree *, tree, tree, int, bool *);\n extern tree darwin_handle_weak_import_attribute (tree *node, tree name,\n \t\t\t\t\t\t tree args, int flags,\n \t\t\t\t\t\t bool * no_add_attrs);\n@@ -86,3 +87,5 @@ extern void darwin_asm_output_dwarf_offset (FILE *, int, const char *,\n extern bool darwin_binds_local_p (tree);\n extern void darwin_cpp_builtins (struct cpp_reader *);\n extern void darwin_asm_output_anchor (rtx symbol);\n+extern bool darwin_kextabi_p (void);\n+extern void darwin_override_options (void);"}, {"sha": "587a327c87009524a6623a85681af3699134d3b9", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 72, "deletions": 2, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "patch": "@@ -1303,6 +1303,42 @@ darwin_unique_section (tree decl ATTRIBUTE_UNUSED, int reloc ATTRIBUTE_UNUSED)\n   /* Darwin does not use unique sections.  */\n }\n \n+/* Handle __attribute__ ((apple_kext_compatibility)).\n+   This only applies to darwin kexts for 2.95 compatibility -- it shrinks the\n+   vtable for classes with this attribute (and their descendants) by not\n+   outputting the new 3.0 nondeleting destructor.  This means that such\n+   objects CANNOT be allocated on the stack or as globals UNLESS they have\n+   a completely empty `operator delete'.\n+   Luckily, this fits in with the Darwin kext model.\n+\n+   This attribute also disables gcc3's potential overlaying of derived\n+   class data members on the padding at the end of the base class.  */\n+\n+tree\n+darwin_handle_kext_attribute (tree *node, tree name,\n+\t\t\t      tree args ATTRIBUTE_UNUSED,\n+\t\t\t      int flags ATTRIBUTE_UNUSED,\n+\t\t\t      bool *no_add_attrs)\n+{\n+  /* APPLE KEXT stuff -- only applies with pure static C++ code.  */\n+  if (! TARGET_KEXTABI)\n+    {\n+      warning (0, \"%<%s%> 2.95 vtable-compatability attribute applies \"\n+\t       \"only when compiling a kext\", IDENTIFIER_POINTER (name));\n+\n+      *no_add_attrs = true;\n+    }\n+  else if (TREE_CODE (*node) != RECORD_TYPE)\n+    {\n+      warning (0, \"%<%s%> 2.95 vtable-compatability attribute applies \"\n+\t       \"only to C++ classes\", IDENTIFIER_POINTER (name));\n+\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n /* Handle a \"weak_import\" attribute; arguments as in\n    struct attribute_spec.handler.  */\n \n@@ -1529,13 +1565,17 @@ darwin_file_end (void)\n   fprintf (asm_out_file, \"\\t.subsections_via_symbols\\n\");\n }\n \n+/* TODO: Add a language hook for identifying if a decl is a vtable.  */\n+#define DARWIN_VTABLE_P(DECL) 0\n+\n /* Cross-module name binding.  Darwin does not support overriding\n-   functions at dynamic-link time.  */\n+   functions at dynamic-link time, except for vtables in kexts.  */\n \n bool\n darwin_binds_local_p (tree decl)\n {\n-  return default_binds_local_p_1 (decl, 0);\n+  return default_binds_local_p_1 (decl,\n+\t\t\t\t  TARGET_KEXTABI && DARWIN_VTABLE_P (decl));\n }\n \n #if 0\n@@ -1565,4 +1605,34 @@ darwin_set_default_type_attributes (tree type)\n                                         TYPE_ATTRIBUTES (type));\n }\n \n+/* True, iff we're generating code for loadable kernel extentions.  */\n+\n+bool\n+darwin_kextabi_p (void) {\n+  return flag_apple_kext;\n+}\n+\n+void\n+darwin_override_options (void)\n+{\n+  if (flag_apple_kext && strcmp (lang_hooks.name, \"GNU C++\") != 0)\n+    {\n+      warning (0, \"command line option %<-fapple-kext%> is only valid for C++\");\n+      flag_apple_kext = 0;\n+    }\n+  if (flag_mkernel || flag_apple_kext)\n+    {\n+      /* -mkernel implies -fapple-kext for C++ */\n+      if (strcmp (lang_hooks.name, \"GNU C++\") == 0)\n+\tflag_apple_kext = 1;\n+\n+      flag_no_common = 1;\n+\n+      /* No EH in kexts.  */\n+      flag_exceptions = 0;\n+      /* No -fnon-call-exceptions data in kexts.  */\n+      flag_non_call_exceptions = 0;\n+    }\n+}\n+\n #include \"gt-darwin.h\""}, {"sha": "21f909d41079ab917d795528fa9934aa775f172f", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "patch": "@@ -127,14 +127,18 @@ extern GTY(()) int darwin_ms_struct;\n   { \"-segs_read_write_addr\", \"-Zsegs_read_write_addr\" }, \\\n   { \"-seg_addr_table\", \"-Zseg_addr_table\" }, \\\n   { \"-seg_addr_table_filename\", \"-Zfn_seg_addr_table_filename\" }, \\\n+  { \"-fapple-kext\", \"-fapple-kext -static -Wa,-static\" }, \\\n   { \"-filelist\", \"-Xlinker -filelist -Xlinker\" },  \\\n-  { \"-framework\", \"-Xlinker -framework -Xlinker\" },  \\\n+  { \"-findirect-virtual-calls\", \"-fapple-kext\" }, \\\n   { \"-flat_namespace\", \"-Zflat_namespace\" },  \\\n   { \"-force_cpusubtype_ALL\", \"-Zforce_cpusubtype_ALL\" },  \\\n   { \"-force_flat_namespace\", \"-Zforce_flat_namespace\" },  \\\n+  { \"-framework\", \"-Xlinker -framework -Xlinker\" },  \\\n+  { \"-fterminated-vtables\", \"-fapple-kext\" }, \\\n   { \"-image_base\", \"-Zimage_base\" },  \\\n   { \"-init\", \"-Zinit\" },  \\\n   { \"-install_name\", \"-Zinstall_name\" },  \\\n+  { \"-mkernel\", \"-mkernel -static -Wa,-static\" }, \\\n   { \"-multiply_defined_unused\", \"-Zmultiplydefinedunused\" },  \\\n   { \"-multiply_defined\", \"-Zmultiply_defined\" },  \\\n   { \"-multi_module\", \"-Zmulti_module\" },  \\\n@@ -143,6 +147,11 @@ extern GTY(()) int darwin_ms_struct;\n   { \"-unexported_symbols_list\", \"-Zunexported_symbols_list\" }, \\\n   SUBTARGET_OPTION_TRANSLATE_TABLE\n \n+#define SUBSUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    darwin_override_options ();\t\t\t\t\t\t\\\n+  } while (0)\n+\n /* These compiler options take n arguments.  */\n \n #undef  WORD_SWITCH_TAKES_ARG\n@@ -188,11 +197,24 @@ extern GTY(()) int darwin_ms_struct;\n    !strcmp (STR, \"dylinker_install_name\") ? 1 : \\\n    0)\n \n+#define SUBTARGET_C_COMMON_OVERRIDE_OPTIONS do {                        \\\n+    if (flag_mkernel || flag_apple_kext)\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tif (flag_use_cxa_atexit == 2)\t\t\t\t\t\\\n+\t  flag_use_cxa_atexit = 0;\t\t\t\t\t\\\n+\t/* kexts should always be built without the coalesced sections\t\\\n+\t   because the kernel loader doesn't grok such sections.  */\t\\\n+\tflag_weak = 0;\t\t\t\t\t\t\t\\\n+\t/* No RTTI in kexts.  */\t\t\t\t\t\\\n+\tflag_rtti = 0;\t\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  } while (0)\n+\n /* Machine dependent cpp options.  Don't add more options here, add\n    them to darwin_cpp_builtins in darwin-c.c.  */\n \n #undef\tCPP_SPEC\n-#define CPP_SPEC \"%{static:%{!dynamic:-D__STATIC__}}%{!static:-D__DYNAMIC__}\"\n+#define CPP_SPEC \"\"\n \n /* This is mostly a clone of the standard LINK_COMMAND_SPEC, plus\n    precomp, libtool, and fat build additions.  Also we\n@@ -693,6 +715,8 @@ extern GTY(()) section * darwin_sections[NUM_DARWIN_SECTIONS];\n /* Extra attributes for Darwin.  */\n #define SUBTARGET_ATTRIBUTE_TABLE\t\t\t\t\t     \\\n   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler } */ \\\n+  { \"apple_kext_compatibility\", 0, 0, false, true, false,\t\t     \\\n+    darwin_handle_kext_attribute },\t\t\t\t\t     \\\n   { \"weak_import\", 0, 0, true, false, false,\t\t\t\t     \\\n     darwin_handle_weak_import_attribute }\n \n@@ -926,4 +950,11 @@ __enable_execute_stack (void *addr)                                     \\\n    (void) mprotect (page, end - page, 7);                               \\\n }\n \n+/* For Apple KEXTs, we make the constructors return this to match gcc\n+   2.95.  */\n+#define TARGET_CXX_CDTOR_RETURNS_THIS (darwin_kextabi_p)\n+extern int flag_mkernel;\n+extern int flag_apple_kext;\n+#define TARGET_KEXTABI flag_apple_kext\n+\n #endif /* CONFIG_DARWIN_H */"}, {"sha": "9fee719b1cde36a60a39b6f2a7e14336cd6590bb", "filename": "gcc/config/darwin.opt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.opt?ref=f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "patch": "@@ -30,3 +30,11 @@ The earliest MacOS X version on which this program will run\n mone-byte-bool\n Target RejectNegative Report Var(darwin_one_byte_bool)\n Set sizeof(bool) to 1\n+\n+fapple-kext\n+Target Report Var(flag_apple_kext)\n+Generate code for darwin loadable kernel extentions\n+\n+mkernel\n+Target Report Var(flag_mkernel)\n+Generate code for the kernel or loadable kernel extentions"}, {"sha": "55b55ab2860d25878e3b2f99bd1eb95b04cab382", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "patch": "@@ -70,7 +70,7 @@ Boston, MA 02110-1301, USA.  */\n    the kernel or some such.  */\n \n #undef CC1_SPEC\n-#define CC1_SPEC \"%{!static:-fPIC}\\\n+#define CC1_SPEC \"%{!mkernel:%{!static:%{!mdynamic-no-pic:-fPIC}}} \\\n   %{g: %{!fno-eliminate-unused-debug-symbols: -feliminate-unused-debug-symbols }}\"\n \n #undef ASM_SPEC\n@@ -182,6 +182,11 @@ extern void darwin_x86_file_end (void);\n       else fprintf (FILE, \"\\tcall mcount\\n\");\t\t\t\t\\\n     } while (0)\n \n+#define C_COMMON_OVERRIDE_OPTIONS\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    SUBTARGET_C_COMMON_OVERRIDE_OPTIONS;\t\t\t\t\\\n+  } while (0)\n+\n /* Darwin on x86_64 uses dwarf-2 by default.  */\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE (TARGET_64BIT ? DWARF2_DEBUG : DBX_DEBUG)"}, {"sha": "e4f711ea20bbc2630ee84755cd13e72aad08bf05", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "patch": "@@ -1537,6 +1537,10 @@ override_options (void)\n   SUBTARGET_OVERRIDE_OPTIONS;\n #endif\n \n+#ifdef SUBSUBTARGET_OVERRIDE_OPTIONS\n+  SUBSUBTARGET_OVERRIDE_OPTIONS;\n+#endif\n+\n   /* -fPIC is the default for x86_64.  */\n   if (TARGET_MACHO && TARGET_64BIT)\n     flag_pic = 2;"}, {"sha": "374f0014e137ef656de114a7be954d2f2b19a55f", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f475fd3c9e74adce232dbc3e82333d2c574a2ef8/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=f475fd3c9e74adce232dbc3e82333d2c574a2ef8", "patch": "@@ -91,6 +91,11 @@ do {\t\t\t\t\t\t\t\t\t\\\n       target_flags |= MASK_POWERPC64;\t\t\t\t\t\\\n       warning (0, \"-m64 requires PowerPC64 architecture, enabling\");\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n+  if (flag_mkernel)                                                     \\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_default_long_calls = 1;\t\t\t\t\t\\\n+      target_flags |= MASK_SOFT_FLOAT;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n } while(0)\n \n #define C_COMMON_OVERRIDE_OPTIONS do {\t\t\t\t\t\\\n@@ -100,6 +105,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n        || strverscmp (darwin_macosx_version_min, \"10.4.6\") < 0)\t\t\\\n       && flag_use_cxa_get_exception_ptr == 2)\t\t\t\t\\\n     flag_use_cxa_get_exception_ptr = 0;\t\t\t\t\t\\\n+  if (flag_mkernel)\t\t\t\t\t\t\t\\\n+    flag_no_builtin = 1;\t\t\t\t\t\t\\\n+  SUBTARGET_C_COMMON_OVERRIDE_OPTIONS;\t\t\t\t\t\\\n } while (0)\n \n /* Darwin has 128-bit long double support in libc in 10.4 and later.\n@@ -114,9 +122,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n    the kernel or some such.  */\n \n #define CC1_SPEC \"\\\n-%{g: %{!fno-eliminate-unused-debug-symbols: -feliminate-unused-debug-symbols }} \\\n-%{static: %{Zdynamic: %e conflicting code gen style switches are used}}\\\n-%{!static:%{!mdynamic-no-pic:-fPIC}}\"\n+  %{g: %{!fno-eliminate-unused-debug-symbols: -feliminate-unused-debug-symbols }} \\\n+  %{static: %{Zdynamic: %e conflicting code gen style switches are used}}\\\n+  %{!mkernel:%{!static:%{!mdynamic-no-pic:-fPIC}}}\"\n \n #define DARWIN_SUBARCH_SPEC \"\t\t\t\\\n  %{m64: ppc64}\t\t\t\t\t\\\n@@ -440,3 +448,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   (TARGET_64BIT\t\t\t\t\t\t\t\\\n    || (darwin_macosx_version_min\t\t\t\t\\\n        && strverscmp (darwin_macosx_version_min, \"10.3\") >= 0))\n+\n+/* When generating kernel code or kexts, we don't use Altivec by\n+   default, as kernel code doesn't save/restore those registers.  */\n+#define OS_MISSING_ALTIVEC (flag_mkernel || flag_apple_kext)"}]}