{"sha": "c33402e25563e8c80a650e1062527db4c5865bbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMzNDAyZTI1NTYzZThjODBhNjUwZTEwNjI1MjdkYjRjNTg2NWJiYw==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2003-01-29T23:53:54Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2003-01-29T23:53:54Z"}, "message": "ppc_closure.S: Recode to fit shared libs.\n\n\t2003-01-29  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\t* src/powerpc/ppc_closure.S: Recode to fit shared libs.\n\nFrom-SVN: r62112", "tree": {"sha": "6b8e00d47b4f458a0d8324a549e8388b7d6e3c59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b8e00d47b4f458a0d8324a549e8388b7d6e3c59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c33402e25563e8c80a650e1062527db4c5865bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c33402e25563e8c80a650e1062527db4c5865bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c33402e25563e8c80a650e1062527db4c5865bbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c33402e25563e8c80a650e1062527db4c5865bbc/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0889116d34c9afe7c6bb0368f0c246bd1a59c28d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0889116d34c9afe7c6bb0368f0c246bd1a59c28d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0889116d34c9afe7c6bb0368f0c246bd1a59c28d"}], "stats": {"total": 198, "additions": 125, "deletions": 73}, "files": [{"sha": "e93ff05bfda732cd1c6d94928ea92bc584ebbc2b", "filename": "libffi/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c33402e25563e8c80a650e1062527db4c5865bbc/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c33402e25563e8c80a650e1062527db4c5865bbc/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=c33402e25563e8c80a650e1062527db4c5865bbc", "patch": "@@ -1,3 +1,7 @@\n+2003-01-29  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* src/powerpc/ppc_closure.S: Recode to fit shared libs.\n+\n 2003-01-28  Andrew Haley  <aph@redhat.com>\n \n \t* include/ffi.h.in: Enable FFI_CLOSURES for x86_64."}, {"sha": "e402fb5cda3f48e3b332c9c0617b5d50140be9ae", "filename": "libffi/src/powerpc/ppc_closure.S", "status": "modified", "additions": 121, "deletions": 73, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c33402e25563e8c80a650e1062527db4c5865bbc/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c33402e25563e8c80a650e1062527db4c5865bbc/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S?ref=c33402e25563e8c80a650e1062527db4c5865bbc", "patch": "@@ -1,14 +1,13 @@\n #define LIBFFI_ASM\n #include <powerpc/asm.h>\n \n-.globl\tffi_closure_helper_SYSV\n+        .file   \"ppc_closure.S\"\n \n ENTRY(ffi_closure_SYSV)\n .LFB1:\n \tstwu %r1,-144(%r1)\n .LCFI0:\n \tmflr %r0\n-\tstw %r31,140(%r1)\n .LCFI1:\n \tstw %r0,148(%r1)\n \n@@ -63,87 +62,136 @@ ENTRY(ffi_closure_SYSV)\n         # look up the proper starting point in table \n \t# by using return type as offset\n \taddi %r5,%r1,112   # get pointer to results area\n-\taddis %r4,0,.L60@ha  # get address of jump table\n-\taddi %r4,%r4,.L60@l\n-\tslwi %r3,%r3,2         # now multiply return type by 4\n-\tlwzx %r3,%r4,%r3         # get the contents of that table value\n-\tadd %r3,%r3,%r4          # add contents of table to table address\n+\tbl .Lget_ret_type0_addr # get pointer to .Lret_type0 into LR\n+\tmflr %r4           # move to r4\n+\tslwi %r3,%r3,4     # now multiply return type by 16\n+\tadd %r3,%r3,%r4    # add contents of table to table address\n \tmtctr %r3\n \tbctr               # jump to it\n .LFE1:\n-\t.align 2\n-.L60:\n-\t.long .L44-.L60    # FFI_TYPE_VOID\n-\t.long .L50-.L60    # FFI_TYPE_INT\n-\t.long .L47-.L60    # FFI_TYPE_FLOAT\n-\t.long .L46-.L60    # FFI_TYPE_DOUBLE\n-\t.long .L46-.L60    # FFI_TYPE_LONGDOUBLE\n-\t.long .L56-.L60    # FFI_TYPE_UINT8\n-\t.long .L55-.L60    # FFI_TYPE_SINT8\n-\t.long .L58-.L60    # FFI_TYPE_UINT16\n-\t.long .L57-.L60    # FFI_TYPE_SINT16\n-\t.long .L50-.L60    # FFI_TYPE_UINT32\n-\t.long .L50-.L60    # FFI_TYPE_SINT32\n-\t.long .L48-.L60    # FFI_TYPE_UINT64\n-\t.long .L48-.L60    # FFI_TYPE_SINT64\n-\t.long .L44-.L60    # FFI_TYPE_STRUCT\n-\t.long .L50-.L60    # FFI_TYPE_POINTER\n-\n-\n-# case double\n-.L46:   \n-        lfd %f1,0(%r5)\n-\tb .L44\n \n-# case float\n-.L47:\n+# Each of the ret_typeX code fragments has to be exactly 16 bytes long\n+# (4 instructions). For cache effectiveness we align to a 16 byte boundary\n+# first.\n+\t.align 4\n+\n+\tnop\n+\tnop\n+\tnop\n+.Lget_ret_type0_addr:\n+\tblrl\n+\n+# case FFI_TYPE_VOID\n+.Lret_type0:\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_INT\n+.Lret_type1:\n+\tlwz %r3,0(%r5)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_FLOAT\n+.Lret_type2:\n \tlfs %f1,0(%r5)\n-\tb .L44\n-\t\n-# case long long\n-.L48:\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_DOUBLE\n+.Lret_type3:\n+        lfd %f1,0(%r5)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_LONGDOUBLE\n+.Lret_type4:\n+        lfd %f1,0(%r5)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_UINT8\n+.Lret_type5:\n+        lbz %r3,3(%r5)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_SINT8\n+.Lret_type6:\n+\tlbz %r3,3(%r5)\n+\textsb %r3,%r3\n+\tb .Lfinish\n+\tnop\n+\n+# case FFI_TYPE_UINT16\n+.Lret_type7:\n+\tlhz %r3,2(%r5)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_SINT16\n+.Lret_type8:\n+\tlha %r3,2(%r5)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_UINT32\n+.Lret_type9:\n+\tlwz %r3,0(%r5)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_SINT32\n+.Lret_type10:\n+\tlwz %r3,0(%r5)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_UINT64\n+.Lret_type11:\n \tlwz %r3,0(%r5)\n \tlwz %r4,4(%r5)\n-\tb .L44\n-\t\n-# case default / int32 / pointer\n-.L50:\n+\tb .Lfinish\n+\tnop\n+\n+# case FFI_TYPE_SINT64\n+.Lret_type12:\n \tlwz %r3,0(%r5)\n-\tb .L44\n-\t\n-# case signed int8\t\n-.L55:\n-\taddi %r5,%r5,3\n-\tlbz %r3,0(%r5)\n-\textsb %r3,%r3\n-\tb .L44\n-\n-# case unsigned int8\t\n-.L56:\n-\taddi %r5,%r5,3\n-        lbz %r3,0(%r5)\n-\tb .L44\n-\n-# case signed int16\n-.L57:\n-\taddi %r5,%r5,2\n-\tlhz %r3,0(%r5)\n-\textsh %r3,%r3\n-\tb .L44\n-\n-#case unsigned int16\n-.L58:\t\n-\taddi %r5,%r5,2\n-\tlhz %r3,0(%r5)\n-\n-# case void / done\t\n-.L44:\n+\tlwz %r4,4(%r5)\n+\tb .Lfinish\n+\tnop\n+\n+# case FFI_TYPE_STRUCT\n+.Lret_type13:\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\tnop\n+\n+# case FFI_TYPE_POINTER\n+.Lret_type14:\n+\tlwz %r3,0(%r5)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# case done\t\n+.Lfinish:\n \t\n-\tlwz %r11,0(%r1)\n-\tlwz %r0,4(%r11)\n+\tlwz %r0,148(%r1)\n \tmtlr %r0\n-\tlwz %r31,-4(%r11)\n-\tmr %r1,%r11\n+\taddi %r1,%r1,144\n \tblr\n END(ffi_closure_SYSV)\n "}]}