{"sha": "54f5943cdbf9c86991e68830a11ccda49850d6dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRmNTk0M2NkYmY5Yzg2OTkxZTY4ODMwYTExY2NkYTQ5ODUwZDZkYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-04-04T11:41:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-04-04T11:41:16Z"}, "message": "unwind-dw2.h (_Unwind_FrameState): Add REG_UNDEFINED enum value.\n\n\t* unwind-dw2.h (_Unwind_FrameState): Add REG_UNDEFINED enum value.\n\t* unwind-dw2.c (execute_cfa_program): Set how to REG_UNDEFINED\n\tinstead of REG_UNSAVED for DW_CFA_undefined.\n\t(uw_update_context_1): Handle REG_UNDEFINED the same as REG_UNSAVED.\n\t(uw_update_context): If RA column is REG_UNDEFINED, mark it as\n\toutermost frame.\n\nFrom-SVN: r145535", "tree": {"sha": "1ec79fced82ed21a4a99ea0de1bfbb49408cc202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ec79fced82ed21a4a99ea0de1bfbb49408cc202"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54f5943cdbf9c86991e68830a11ccda49850d6dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f5943cdbf9c86991e68830a11ccda49850d6dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f5943cdbf9c86991e68830a11ccda49850d6dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f5943cdbf9c86991e68830a11ccda49850d6dc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aad2bccb9b17ca771009135da32d71ee9e1a83d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad2bccb9b17ca771009135da32d71ee9e1a83d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad2bccb9b17ca771009135da32d71ee9e1a83d1"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "e6eb762f13fdea310be5a820e62bc1dc80ddcf82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f5943cdbf9c86991e68830a11ccda49850d6dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f5943cdbf9c86991e68830a11ccda49850d6dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54f5943cdbf9c86991e68830a11ccda49850d6dc", "patch": "@@ -1,3 +1,12 @@\n+2009-04-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* unwind-dw2.h (_Unwind_FrameState): Add REG_UNDEFINED enum value.\n+\t* unwind-dw2.c (execute_cfa_program): Set how to REG_UNDEFINED\n+\tinstead of REG_UNSAVED for DW_CFA_undefined.\n+\t(uw_update_context_1): Handle REG_UNDEFINED the same as REG_UNSAVED.\n+\t(uw_update_context): If RA column is REG_UNDEFINED, mark it as\n+\toutermost frame.\n+\n 2009-04-04  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/39501"}, {"sha": "6df1ffa55a644a68552dac757da90951ae175c04", "filename": "gcc/unwind-dw2.c", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f5943cdbf9c86991e68830a11ccda49850d6dc/gcc%2Funwind-dw2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f5943cdbf9c86991e68830a11ccda49850d6dc/gcc%2Funwind-dw2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2.c?ref=54f5943cdbf9c86991e68830a11ccda49850d6dc", "patch": "@@ -1,6 +1,6 @@\n /* DWARF2 exception handling and frame unwind runtime interface routines.\n    Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,\n-   2008  Free Software Foundation, Inc.\n+   2008, 2009  Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -943,12 +943,16 @@ execute_cfa_program (const unsigned char *insn_ptr,\n \t  fs->regs.reg[DWARF_REG_TO_UNWIND_COLUMN(reg)].how = REG_UNSAVED;\n \t  break;\n \n-\tcase DW_CFA_undefined:\n \tcase DW_CFA_same_value:\n \t  insn_ptr = read_uleb128 (insn_ptr, &reg);\n \t  fs->regs.reg[DWARF_REG_TO_UNWIND_COLUMN(reg)].how = REG_UNSAVED;\n \t  break;\n \n+\tcase DW_CFA_undefined:\n+\t  insn_ptr = read_uleb128 (insn_ptr, &reg);\n+\t  fs->regs.reg[DWARF_REG_TO_UNWIND_COLUMN(reg)].how = REG_UNDEFINED;\n+\t  break;\n+\n \tcase DW_CFA_nop:\n \t  break;\n \n@@ -1319,6 +1323,7 @@ uw_update_context_1 (struct _Unwind_Context *context, _Unwind_FrameState *fs)\n     switch (fs->regs.reg[i].how)\n       {\n       case REG_UNSAVED:\n+      case REG_UNDEFINED:\n \tbreak;\n \n       case REG_SAVED_OFFSET:\n@@ -1387,10 +1392,22 @@ uw_update_context (struct _Unwind_Context *context, _Unwind_FrameState *fs)\n {\n   uw_update_context_1 (context, fs);\n \n-  /* Compute the return address now, since the return address column\n-     can change from frame to frame.  */\n-  context->ra = __builtin_extract_return_addr\n-    (_Unwind_GetPtr (context, fs->retaddr_column));\n+  /* In general this unwinder doesn't make any distinction between\n+     undefined and same_value rule.  Call-saved registers are assumed\n+     to have same_value rule by default and explicit undefined\n+     rule is handled like same_value.  The only exception is\n+     DW_CFA_undefined on retaddr_column which is supposed to\n+     mark outermost frame in DWARF 3.  */\n+  if (fs->regs.reg[DWARF_REG_TO_UNWIND_COLUMN (fs->retaddr_column)].how\n+      == REG_UNDEFINED)\n+    /* uw_frame_state_for uses context->ra == 0 check to find outermost\n+       stack frame.  */\n+    context->ra = 0;\n+  else\n+    /* Compute the return address now, since the return address column\n+       can change from frame to frame.  */\n+    context->ra = __builtin_extract_return_addr\n+      (_Unwind_GetPtr (context, fs->retaddr_column));\n }\n \n static void"}, {"sha": "7f643c5ec9d1fd156be24ef45b9cc7b84f83bb9d", "filename": "gcc/unwind-dw2.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f5943cdbf9c86991e68830a11ccda49850d6dc/gcc%2Funwind-dw2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f5943cdbf9c86991e68830a11ccda49850d6dc/gcc%2Funwind-dw2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2.h?ref=54f5943cdbf9c86991e68830a11ccda49850d6dc", "patch": "@@ -1,5 +1,5 @@\n /* DWARF2 frame unwind data structure.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2009\n    Free Software Foundation, Inc.\n \n    This file is part of GCC.\n@@ -55,7 +55,8 @@ typedef struct\n \tREG_SAVED_REG,\n \tREG_SAVED_EXP,\n \tREG_SAVED_VAL_OFFSET,\n-\tREG_SAVED_VAL_EXP\n+\tREG_SAVED_VAL_EXP,\n+\tREG_UNDEFINED\n       } how;\n     } reg[DWARF_FRAME_REGISTERS+1];\n "}]}