{"sha": "4763581763de6049c938ea7129d738d497004a06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc2MzU4MTc2M2RlNjA0OWM5MzhlYTcxMjlkNzM4ZDQ5NzAwNGEwNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-02-06T09:16:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-02-06T09:16:19Z"}, "message": "re PR middle-end/89210 (ICE tree check: expected integer_cst, have real_cst in to_wide, at tree.h:5600)\n\n\tPR middle-end/89210\n\t* fold-const-call.c (fold_const_vec_convert): Pass true as last\n\toperand to new_unary_operation only if both element types are integral\n\tand it isn't a widening conversion.  Return NULL_TREE if\n\tnew_unary_operation failed.\n\n\t* c-c++-common/builtin-convertvector-2.c: New test.\n\nFrom-SVN: r268573", "tree": {"sha": "36db92da41720345c8b90ec4dd599bb527a46a17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36db92da41720345c8b90ec4dd599bb527a46a17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4763581763de6049c938ea7129d738d497004a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4763581763de6049c938ea7129d738d497004a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4763581763de6049c938ea7129d738d497004a06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4763581763de6049c938ea7129d738d497004a06/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce4321c918aa0d17ecd7da6c3deb43524b1729cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4321c918aa0d17ecd7da6c3deb43524b1729cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4321c918aa0d17ecd7da6c3deb43524b1729cf"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "5e2d7e75b4dd9f52d920000c6f688a03d41493f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4763581763de6049c938ea7129d738d497004a06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4763581763de6049c938ea7129d738d497004a06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4763581763de6049c938ea7129d738d497004a06", "patch": "@@ -1,3 +1,11 @@\n+2019-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/89210\n+\t* fold-const-call.c (fold_const_vec_convert): Pass true as last\n+\toperand to new_unary_operation only if both element types are integral\n+\tand it isn't a widening conversion.  Return NULL_TREE if\n+\tnew_unary_operation failed.\n+\n 2019-02-05  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \tPR target/88856"}, {"sha": "702c8b4057abb02935082b43cbd8af3eabab2be1", "filename": "gcc/fold-const-call.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4763581763de6049c938ea7129d738d497004a06/gcc%2Ffold-const-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4763581763de6049c938ea7129d738d497004a06/gcc%2Ffold-const-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const-call.c?ref=4763581763de6049c938ea7129d738d497004a06", "patch": "@@ -665,8 +665,17 @@ fold_const_vec_convert (tree ret_type, tree arg)\n \t   && SCALAR_FLOAT_TYPE_P (TREE_TYPE (ret_type)))\n     code = FLOAT_EXPR;\n \n+  /* We can't handle steps directly when extending, since the\n+     values need to wrap at the original precision first.  */\n+  bool step_ok_p\n+    = (INTEGRAL_TYPE_P (TREE_TYPE (ret_type))\n+       && INTEGRAL_TYPE_P (TREE_TYPE (arg_type))\n+       && (TYPE_PRECISION (TREE_TYPE (ret_type))\n+\t   <= TYPE_PRECISION (TREE_TYPE (arg_type))));\n   tree_vector_builder elts;\n-  elts.new_unary_operation (ret_type, arg, true);\n+  if (!elts.new_unary_operation (ret_type, arg, step_ok_p))\n+    return NULL_TREE;\n+\n   unsigned int count = elts.encoded_nelts ();\n   for (unsigned int i = 0; i < count; ++i)\n     {"}, {"sha": "b5c92ffb6b6a3a839181f285410493b048bbcc17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4763581763de6049c938ea7129d738d497004a06/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4763581763de6049c938ea7129d738d497004a06/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4763581763de6049c938ea7129d738d497004a06", "patch": "@@ -1,3 +1,8 @@\n+2019-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/89210\n+\t* c-c++-common/builtin-convertvector-2.c: New test.\n+\n 2019-02-05  Nikhil Benesch  <nikhil.benesch@gmail.com>\n \n         PR go/89019"}, {"sha": "ee77c79fa8e1300a8ab016df7aab79373e9f718f", "filename": "gcc/testsuite/c-c++-common/builtin-convertvector-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4763581763de6049c938ea7129d738d497004a06/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-convertvector-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4763581763de6049c938ea7129d738d497004a06/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-convertvector-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-convertvector-2.c?ref=4763581763de6049c938ea7129d738d497004a06", "patch": "@@ -0,0 +1,12 @@\n+/* PR middle-end/89210 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef int v4si __attribute__((vector_size (4 * sizeof (int))));\n+typedef double v4df __attribute__((vector_size (4 * sizeof (double))));\n+void\n+foo (v4df *x)\n+{\n+  v4si a = { 1, 2, 3, 4 };\n+  *x = __builtin_convertvector (a, v4df);\n+}"}]}