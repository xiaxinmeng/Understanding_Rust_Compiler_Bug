{"sha": "fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5OWI1NmM3ZjNiY2E3MmMyN2Q5YmZjZGRmNjhhYjljYzZhMzVlMw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-10-07T15:19:09Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-10-11T15:11:03Z"}, "message": "testsuite, Objective-c++ : Fix GNU API tests to work with NeXT where possible.\n\nThe version 2 GNU Objective C API is mostly compatible with the NeXT one.\nHowever, there are a few testsuite tweaks needed (and one test fails for NeXT\nwithout considerable increase in complexity).\n\ngcc/testsuite/ChangeLog:\n\n\t* obj-c++.dg/gnu-api-2-class-meta.mm: Add a flag to cause NeXT\n\theaders to expose prototypes for messaging.\n\t* obj-c++.dg/gnu-api-2-class.mm: Likewise.\n\t* obj-c++.dg/gnu-api-2-objc.mm: Skip this because of the extra\n\tprotocols pulled in by system headers.", "tree": {"sha": "e026aaf1e5c2cb92919988f7cd6f48b7b7da234c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e026aaf1e5c2cb92919988f7cd6f48b7b7da234c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5505a9eab9bc3b170fc9f22e8a7292464efe88f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5505a9eab9bc3b170fc9f22e8a7292464efe88f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5505a9eab9bc3b170fc9f22e8a7292464efe88f6"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "bdaef9828ca457e9b728e331784a8ff2fa825bbe", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-class-meta.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class-meta.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class-meta.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class-meta.mm?ref=fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3", "patch": "@@ -20,6 +20,7 @@ this behavior may be defined or documented (for example, if class\n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-DOBJC_OLD_DISPATCH_PROTOTYPES\" { target { *-*-darwin* } } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "ae39026c2d348365cc8ebe255918d300d481e1ef", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-class.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class.mm?ref=fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3", "patch": "@@ -7,6 +7,7 @@\n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-DOBJC_OLD_DISPATCH_PROTOTYPES\" { target { *-*-darwin* } } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "201ab7e7af2f32d79012733546a11f85bfac13a5", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-objc.mm", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-objc.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-objc.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-objc.mm?ref=fa99b56c7f3bca72c27d9bfcddf68ab9cc6a35e3", "patch": "@@ -3,8 +3,12 @@\n   This is test 'objc', covering all functions starting with 'objc'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n-/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* Although this works with the NeXT runtime in a sub-set of cases, some\n+   versions of the runtime header pulls in a number of system protocols,\n+   which causes the objc_copyProtocolList test to fail (in addition to those\n+   systems that don't have the V2 APis).  XFAILing the run is not useful\n+   since it will XPASS on the sub-set that works.  */\n+/* { dg-skip-if \"Incompatible\" { *-*-darwin* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}]}