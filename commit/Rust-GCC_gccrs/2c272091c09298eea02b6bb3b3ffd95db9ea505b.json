{"sha": "2c272091c09298eea02b6bb3b3ffd95db9ea505b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMyNzIwOTFjMDkyOThlZWEwMmI2YmIzYjNmZmQ5NWRiOWVhNTA1Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-08-05T13:49:32Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-08-05T13:49:31Z"}, "message": "aarch64: Add missing %z prefixes to LDP/STP patterns\n\nFor LDP/STP Q, the memory operand might not be valid for \"m\",\nso we need to use %z<N> instead of %<N> in the asm template.\nThis patch does that for all Ump LDP/STP patterns, regardless\nof whether it's strictly needed.\n\nThis is needed to unbreak bootstrap.\n\n2020-08-05  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64.md (load_pair_sw_<SX:mode><SX2:mode>)\n\t(load_pair_dw_<DX:mode><DX2:mode>, load_pair_dw_tftf)\n\t(store_pair_sw_<SX:mode><SX2:mode>)\n\t(store_pair_dw_<DX:mode><DX2:mode>, store_pair_dw_tftf)\n\t(*load_pair_extendsidi2_aarch64)\n\t(*load_pair_zero_extendsidi2_aarch64): Use %z for the memory operand.\n\t* config/aarch64/aarch64-simd.md (load_pair<DREG:mode><DREG2:mode>)\n\t(vec_store_pair<DREG:mode><DREG2:mode>, load_pair<VQ:mode><VQ2:mode>)\n\t(vec_store_pair<VQ:mode><VQ2:mode>): Likewise.", "tree": {"sha": "8cf28e742d8fe0384d2d5d9952cb61f0886327df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cf28e742d8fe0384d2d5d9952cb61f0886327df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c272091c09298eea02b6bb3b3ffd95db9ea505b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c272091c09298eea02b6bb3b3ffd95db9ea505b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c272091c09298eea02b6bb3b3ffd95db9ea505b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c272091c09298eea02b6bb3b3ffd95db9ea505b/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aec53ee4f75a64cc9c35577e8d785ba2b692270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aec53ee4f75a64cc9c35577e8d785ba2b692270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aec53ee4f75a64cc9c35577e8d785ba2b692270"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "381a702eba003520d2e83e91065d2a808b9c6493", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c272091c09298eea02b6bb3b3ffd95db9ea505b/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c272091c09298eea02b6bb3b3ffd95db9ea505b/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=2c272091c09298eea02b6bb3b3ffd95db9ea505b", "patch": "@@ -187,7 +187,7 @@\n \t\t   plus_constant (Pmode,\n \t\t\t\t  XEXP (operands[1], 0),\n \t\t\t\t  GET_MODE_SIZE (<DREG:MODE>mode)))\"\n-  \"ldp\\\\t%d0, %d2, %1\"\n+  \"ldp\\\\t%d0, %d2, %z1\"\n   [(set_attr \"type\" \"neon_ldp\")]\n )\n \n@@ -201,7 +201,7 @@\n \t\t   plus_constant (Pmode,\n \t\t\t\t  XEXP (operands[0], 0),\n \t\t\t\t  GET_MODE_SIZE (<DREG:MODE>mode)))\"\n-  \"stp\\\\t%d1, %d3, %0\"\n+  \"stp\\\\t%d1, %d3, %z0\"\n   [(set_attr \"type\" \"neon_stp\")]\n )\n \n@@ -215,7 +215,7 @@\n \t\t    plus_constant (Pmode,\n \t\t\t       XEXP (operands[1], 0),\n \t\t\t       GET_MODE_SIZE (<VQ:MODE>mode)))\"\n-  \"ldp\\\\t%q0, %q2, %1\"\n+  \"ldp\\\\t%q0, %q2, %z1\"\n   [(set_attr \"type\" \"neon_ldp_q\")]\n )\n \n@@ -228,7 +228,7 @@\n \t\tplus_constant (Pmode,\n \t\t\t       XEXP (operands[0], 0),\n \t\t\t       GET_MODE_SIZE (<VQ:MODE>mode)))\"\n-  \"stp\\\\t%q1, %q3, %0\"\n+  \"stp\\\\t%q1, %q3, %z0\"\n   [(set_attr \"type\" \"neon_stp_q\")]\n )\n "}, {"sha": "25d77256b96b0e477f3efe0aedbaed965d65421f", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c272091c09298eea02b6bb3b3ffd95db9ea505b/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c272091c09298eea02b6bb3b3ffd95db9ea505b/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=2c272091c09298eea02b6bb3b3ffd95db9ea505b", "patch": "@@ -1574,8 +1574,8 @@\n \t\t\t\tXEXP (operands[1], 0),\n \t\t\t\tGET_MODE_SIZE (<SX:MODE>mode)))\"\n   \"@\n-   ldp\\\\t%w0, %w2, %1\n-   ldp\\\\t%s0, %s2, %1\"\n+   ldp\\\\t%w0, %w2, %z1\n+   ldp\\\\t%s0, %s2, %z1\"\n   [(set_attr \"type\" \"load_8,neon_load1_2reg\")\n    (set_attr \"arch\" \"*,fp\")]\n )\n@@ -1591,8 +1591,8 @@\n \t\t\t\tXEXP (operands[1], 0),\n \t\t\t\tGET_MODE_SIZE (<DX:MODE>mode)))\"\n   \"@\n-   ldp\\\\t%x0, %x2, %1\n-   ldp\\\\t%d0, %d2, %1\"\n+   ldp\\\\t%x0, %x2, %z1\n+   ldp\\\\t%d0, %d2, %z1\"\n   [(set_attr \"type\" \"load_16,neon_load1_2reg\")\n    (set_attr \"arch\" \"*,fp\")]\n )\n@@ -1607,7 +1607,7 @@\n \t\t    plus_constant (Pmode,\n \t\t\t\t   XEXP (operands[1], 0),\n \t\t\t\t   GET_MODE_SIZE (TFmode)))\"\n-  \"ldp\\\\t%q0, %q2, %1\"\n+  \"ldp\\\\t%q0, %q2, %z1\"\n   [(set_attr \"type\" \"neon_ldp_q\")\n    (set_attr \"fp\" \"yes\")]\n )\n@@ -1624,8 +1624,8 @@\n \t\t\t\tXEXP (operands[0], 0),\n \t\t\t\tGET_MODE_SIZE (<SX:MODE>mode)))\"\n   \"@\n-   stp\\\\t%w1, %w3, %0\n-   stp\\\\t%s1, %s3, %0\"\n+   stp\\\\t%w1, %w3, %z0\n+   stp\\\\t%s1, %s3, %z0\"\n   [(set_attr \"type\" \"store_8,neon_store1_2reg\")\n    (set_attr \"arch\" \"*,fp\")]\n )\n@@ -1641,8 +1641,8 @@\n \t\t\t\tXEXP (operands[0], 0),\n \t\t\t\tGET_MODE_SIZE (<DX:MODE>mode)))\"\n   \"@\n-   stp\\\\t%x1, %x3, %0\n-   stp\\\\t%d1, %d3, %0\"\n+   stp\\\\t%x1, %x3, %z0\n+   stp\\\\t%d1, %d3, %z0\"\n   [(set_attr \"type\" \"store_16,neon_store1_2reg\")\n    (set_attr \"arch\" \"*,fp\")]\n )\n@@ -1657,7 +1657,7 @@\n \t\t plus_constant (Pmode,\n \t\t\t\tXEXP (operands[0], 0),\n \t\t\t\tGET_MODE_SIZE (TFmode)))\"\n-  \"stp\\\\t%q1, %q3, %0\"\n+  \"stp\\\\t%q1, %q3, %z0\"\n   [(set_attr \"type\" \"neon_stp_q\")\n    (set_attr \"fp\" \"yes\")]\n )\n@@ -1790,7 +1790,7 @@\n \t\tplus_constant (Pmode,\n \t\t\t       XEXP (operands[1], 0),\n \t\t\t       GET_MODE_SIZE (SImode)))\"\n-  \"ldpsw\\\\t%0, %2, %1\"\n+  \"ldpsw\\\\t%0, %2, %z1\"\n   [(set_attr \"type\" \"load_8\")]\n )\n \n@@ -1819,8 +1819,8 @@\n \t\t\t       XEXP (operands[1], 0),\n \t\t\t       GET_MODE_SIZE (SImode)))\"\n   \"@\n-   ldp\\t%w0, %w2, %1\n-   ldp\\t%s0, %s2, %1\"\n+   ldp\\t%w0, %w2, %z1\n+   ldp\\t%s0, %s2, %z1\"\n   [(set_attr \"type\" \"load_8,neon_load1_2reg\")\n    (set_attr \"arch\" \"*,fp\")]\n )"}]}