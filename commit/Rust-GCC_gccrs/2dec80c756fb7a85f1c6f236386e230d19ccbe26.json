{"sha": "2dec80c756fb7a85f1c6f236386e230d19ccbe26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRlYzgwYzc1NmZiN2E4NWYxYzZmMjM2Mzg2ZTIzMGQxOWNjYmUyNg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-05-28T17:28:57Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-05-28T17:28:57Z"}, "message": "re PR driver/15303 (When gcc sees an unrecognized option, the exit status indicates success)\n\n\tPR driver/15303\n\t* gcc.c (inform, warning, inform): New functions.\n\t(fatal_ice): Rename to internal_error; change cmsgid parameter to\n\tgmsgid.  All callers changed.\n\t(notice): Rename to fnotice; add parameter fp.  All callers\n\tchanged.\n\t(fatal_error): Rename to fatal_signal.  All users changed.\n\t(fatal): Rename to fatal_error; change cmsgid parameter to\n\tgmsgid.  All callers changed.\n\t(process_command): Use warning instead of error for warnings.\n\t(end_going_arg): Don't use _() around argument of error.\n\t(do_spec_1): Use inform for message from %n specs.  Use warning\n\tinstead of error for warnings.\n\t(main): Use inform for comparison messages.  Use warning for\n\tmessage about unused linker input.\n\t(error): Increment error_count.  Print \"error: \".\n\t* gcc.h (fatal): Change to fatal_error.\n\t(warning): Declare.\n\t* config/darwin-driver.c (darwin_default_min_version): Use warning\n\tinstead of fprintf for warnings.\n\t* cppspec.c (lang_specific_driver): Use fatal_error instead of\n\tfatal.\n\ncp:\n\t* g++spec.c (lang_specific_driver): Use fatal_error instead of\n\tfatal.\n\nfortran:\n\t* gfortranspec.c (append_arg, lang_specific_driver): Use\n\tfatal_error instead of fatal.  Use warning instead of fprintf for\n\twarnings.\n\njava:\n\t* jvspec.c (lang_specific_driver): Use fatal_error instead of\n\tfatal.  Use warning instead of error for warnings.\n\nFrom-SVN: r159986", "tree": {"sha": "d1333acc1907350475741ab7bf571e884e00c3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1333acc1907350475741ab7bf571e884e00c3e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dec80c756fb7a85f1c6f236386e230d19ccbe26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dec80c756fb7a85f1c6f236386e230d19ccbe26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dec80c756fb7a85f1c6f236386e230d19ccbe26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dec80c756fb7a85f1c6f236386e230d19ccbe26/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7325b1b3abddcaab7ea30a48cd8ceb99ccdabc2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7325b1b3abddcaab7ea30a48cd8ceb99ccdabc2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7325b1b3abddcaab7ea30a48cd8ceb99ccdabc2e"}], "stats": {"total": 381, "additions": 232, "deletions": 149}, "files": [{"sha": "37536c1c94f5a06976d442c49b74da2730706ea7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -1,3 +1,28 @@\n+2010-05-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR driver/15303\n+\t* gcc.c (inform, warning, inform): New functions.\n+\t(fatal_ice): Rename to internal_error; change cmsgid parameter to\n+\tgmsgid.  All callers changed.\n+\t(notice): Rename to fnotice; add parameter fp.  All callers\n+\tchanged.\n+\t(fatal_error): Rename to fatal_signal.  All users changed.\n+\t(fatal): Rename to fatal_error; change cmsgid parameter to\n+\tgmsgid.  All callers changed.\n+\t(process_command): Use warning instead of error for warnings.\n+\t(end_going_arg): Don't use _() around argument of error.\n+\t(do_spec_1): Use inform for message from %n specs.  Use warning\n+\tinstead of error for warnings.\n+\t(main): Use inform for comparison messages.  Use warning for\n+\tmessage about unused linker input.\n+\t(error): Increment error_count.  Print \"error: \".\n+\t* gcc.h (fatal): Change to fatal_error.\n+\t(warning): Declare.\n+\t* config/darwin-driver.c (darwin_default_min_version): Use warning\n+\tinstead of fprintf for warnings.\n+\t* cppspec.c (lang_specific_driver): Use fatal_error instead of\n+\tfatal.\n+\n 2010-05-28  Julian Brown  <julian@codesourcery.com>\n \n \t* config/arm/thumb2.md (*thumb2_addsi3_compare0): New."}, {"sha": "0997e0a9f0369a7745b762fdaa016a2f2624facb", "filename": "gcc/config/darwin-driver.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fconfig%2Fdarwin-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fconfig%2Fdarwin-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.c?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -1,5 +1,5 @@\n /* Additional functions for the GCC driver on Darwin native.\n-   Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2008, 2010 Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n This file is part of GCC.\n@@ -107,7 +107,7 @@ darwin_default_min_version (int * argc_p, char *** argv_p)\n   if (sysctl (osversion_name, ARRAY_SIZE (osversion_name), osversion,\n \t      &osversion_len, NULL, 0) == -1)\n     {\n-      fprintf (stderr, \"sysctl for kern.osversion failed: %s\\n\",\n+      warning (0, \"sysctl for kern.osversion failed: %s\",\n \t       xstrerror (errno));\n       return;\n     }\n@@ -151,7 +151,7 @@ darwin_default_min_version (int * argc_p, char *** argv_p)\n   return;\n   \n  parse_failed:\n-  fprintf (stderr, \"couldn't understand kern.osversion `%.*s'\\n\",\n+  warning (0, \"couldn't understand kern.osversion `%.*s'\",\n \t   (int) osversion_len, osversion);\n   return;\n }"}, {"sha": "7b3445bbf99f749535ebe2b3e707e881e8240506", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -1,3 +1,8 @@\n+2010-05-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* g++spec.c (lang_specific_driver): Use fatal_error instead of\n+\tfatal.\n+\n 2010-05-28  Dodji Seketeli  <dodji@redhat.com>\n \n \tRevert fix of PR c++/44188"}, {"sha": "f33affc5e85d0b32313b4a05bd223bae834a110d", "filename": "gcc/cp/g++spec.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fcp%2Fg%2B%2Bspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fcp%2Fg%2B%2Bspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.c?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -1,6 +1,6 @@\n /* Specific flags and argument handling of the C++ front end.\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-   2007, 2008, 2009 Free Software Foundation, Inc.\n+   2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -258,7 +258,7 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n     }\n \n   if (quote)\n-    fatal (\"argument to '%s' missing\\n\", quote);\n+    fatal_error (\"argument to '%s' missing\\n\", quote);\n \n   /* There's no point adding -shared-libgcc if we don't have a shared\n      libgcc.  */"}, {"sha": "dfae81ead090408611b1293751becfe9b56ba9a6", "filename": "gcc/cppspec.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fcppspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fcppspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppspec.c?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -1,5 +1,5 @@\n /* Specific flags and argument handling of the C preprocessor.\n-   Copyright (C) 1999, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2007, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -103,8 +103,8 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n \t\tneed_E = 0;\n \t      else if (argv[i][1] == 'S' || argv[i][1] == 'c')\n \t\t{\n-\t\t  fatal (\"\\\"%s\\\" is not a valid option to the preprocessor\",\n-\t\t\t argv[i]);\n+\t\t  fatal_error (\"\\\"%s\\\" is not a valid option to the \"\n+\t\t\t       \"preprocessor\", argv[i]);\n \t\t  return;\n \t\t}\n \t      else if (argv[i][1] == 'x')\n@@ -125,7 +125,7 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n \t  seen_input++;\n \t  if (seen_input == 3)\n \t    {\n-\t      fatal (\"too many input files\");\n+\t      fatal_error (\"too many input files\");\n \t      return;\n \t    }\n \t  else if (seen_input == 2)"}, {"sha": "f563c146e30423fe06a7e4f61e8450cd8691067f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -1,3 +1,9 @@\n+2010-05-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gfortranspec.c (append_arg, lang_specific_driver): Use\n+\tfatal_error instead of fatal.  Use warning instead of fprintf for\n+\twarnings.\n+\n 2010-05-28  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cpp.c (gfc_cpp_init_0): Use xstrerror instead of strerror."}, {"sha": "1f67acc15131ab71180feb802dfcaf5480985fa9", "filename": "gcc/fortran/gfortranspec.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Ffortran%2Fgfortranspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Ffortran%2Fgfortranspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortranspec.c?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -244,7 +244,7 @@ append_arg (const char *arg)\n     }\n \n   if (g77_newargc == newargsize)\n-    fatal (\"overflowed output arg list for '%s'\", arg);\n+    fatal_error (\"overflowed output arg list for '%s'\", arg);\n \n   g77_newargv[g77_newargc++] = arg;\n }\n@@ -402,11 +402,11 @@ For more information about these matters, see the file named COPYING\\n\\n\"));\n       if (i + skip < argc)\n \ti += skip;\n       else\n-\tfatal (\"argument to '%s' missing\", argv[i]);\n+\tfatal_error (\"argument to '%s' missing\", argv[i]);\n     }\n \n   if ((n_outfiles != 0) && (n_infiles == 0))\n-    fatal (\"no input files; unwilling to write output files\");\n+    fatal_error (\"no input files; unwilling to write output files\");\n \n   /* If there are no input files, no need for the library.  */\n   if (n_infiles == 0)\n@@ -428,8 +428,7 @@ For more information about these matters, see the file named COPYING\\n\\n\"));\n \t{\n \t  char *p;\n \n-\t  fprintf (stderr, _(\"Warning: Using -M <directory> is deprecated, \"\n-\t           \"use -J instead\\n\"));\n+\t  warning (0, \"using -M <directory> is deprecated, use -J instead\");\n \t  if (argv[i][2] == '\\0')\n \t    {\n \t      if (i+1 < argc)\n@@ -441,7 +440,7 @@ For more information about these matters, see the file named COPYING\\n\\n\"));\n \t\t  i++;\n \t\t}\n \t      else\n-\t\tfatal (\"argument to '%s' missing\", argv[i]);\n+\t\tfatal_error (\"argument to '%s' missing\", argv[i]);\n \t    }\n \t  else\n \t    {"}, {"sha": "d205ff97167d9e94b9d0a67bf0a794aecf6cab9e", "filename": "gcc/gcc.c", "status": "modified", "additions": 164, "deletions": 123, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -377,9 +377,11 @@ static int used_arg (const char *, int);\n static int default_arg (const char *, int);\n static void set_multilib_dir (void);\n static void print_multilib_info (void);\n+static void inform (int, const char *, ...) ATTRIBUTE_PRINTF_2;\n static void perror_with_name (const char *);\n-static void fatal_ice (const char *, ...) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n-static void notice (const char *, ...) ATTRIBUTE_PRINTF_1;\n+static void internal_error (const char *, ...)\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+static void fnotice (FILE *, const char *, ...) ATTRIBUTE_PRINTF_2;\n static void display_help (void);\n static void add_preprocessor_option (const char *, int);\n static void add_assembler_option (const char *, int);\n@@ -388,7 +390,7 @@ static void process_command (int, const char **);\n static int execute (void);\n static void alloc_args (void);\n static void clear_args (void);\n-static void fatal_error (int);\n+static void fatal_signal (int);\n #if defined(ENABLE_SHARED_LIBGCC) && !defined(REAL_LIBGCC_SPEC)\n static void init_gcc_specs (struct obstack *, const char *, const char *,\n \t\t\t    const char *);\n@@ -1795,7 +1797,7 @@ init_spec (void)\n     return;\t\t\t/* Already initialized.  */\n \n   if (verbose_flag)\n-    notice (\"Using built-in specs.\\n\");\n+    fnotice (stderr, \"Using built-in specs.\\n\");\n \n #ifdef EXTRA_SPECS\n   extra_specs = XCNEWVEC (struct spec_list, ARRAY_SIZE (extra_specs_1));\n@@ -1980,7 +1982,7 @@ set_spec (const char *name, const char *spec)\n \n #ifdef DEBUG_SPECS\n   if (verbose_flag)\n-    notice (\"Setting spec %s to '%s'\\n\\n\", name, *(sl->ptr_spec));\n+    fnotice (stderr, \"Setting spec %s to '%s'\\n\\n\", name, *(sl->ptr_spec));\n #endif\n \n   /* Free the old spec.  */\n@@ -2103,7 +2105,7 @@ load_specs (const char *filename)\n   char *specs_p;\n \n   if (verbose_flag)\n-    notice (\"Reading specs from %s\\n\", filename);\n+    fnotice (stderr, \"Reading specs from %s\\n\", filename);\n \n   /* Open and stat the file.  */\n   desc = open (filename, O_RDONLY, 0);\n@@ -2199,8 +2201,9 @@ read_specs (const char *filename, int main_p)\n \t\tp1++;\n \n \t      if (*p1++ != '<' || p[-2] != '>')\n-\t\tfatal (\"specs %%include syntax malformed after %ld characters\",\n-\t\t       (long) (p1 - buffer + 1));\n+\t\tfatal_error (\"specs %%include syntax malformed after \"\n+\t\t\t     \"%ld characters\",\n+\t\t\t     (long) (p1 - buffer + 1));\n \n \t      p[-2] = '\\0';\n \t      new_filename = find_a_file (&startfile_prefixes, p1, R_OK, true);\n@@ -2218,15 +2221,16 @@ read_specs (const char *filename, int main_p)\n \t\tp1++;\n \n \t      if (*p1++ != '<' || p[-2] != '>')\n-\t\tfatal (\"specs %%include syntax malformed after %ld characters\",\n-\t\t       (long) (p1 - buffer + 1));\n+\t\tfatal_error (\"specs %%include syntax malformed after \"\n+\t\t\t     \"%ld characters\",\n+\t\t\t     (long) (p1 - buffer + 1));\n \n \t      p[-2] = '\\0';\n \t      new_filename = find_a_file (&startfile_prefixes, p1, R_OK, true);\n \t      if (new_filename)\n \t\tread_specs (new_filename, FALSE);\n \t      else if (verbose_flag)\n-\t\tnotice (\"could not find specs file %s\\n\", p1);\n+\t\tfnotice (stderr, \"could not find specs file %s\\n\", p1);\n \t      continue;\n \t    }\n \t  else if (!strncmp (p1, \"%rename\", sizeof \"%rename\" - 1)\n@@ -2243,56 +2247,61 @@ read_specs (const char *filename, int main_p)\n \t\tp1++;\n \n \t      if (! ISALPHA ((unsigned char) *p1))\n-\t\tfatal (\"specs %%rename syntax malformed after %ld characters\",\n-\t\t       (long) (p1 - buffer));\n+\t\tfatal_error (\"specs %%rename syntax malformed after \"\n+\t\t\t     \"%ld characters\",\n+\t\t\t     (long) (p1 - buffer));\n \n \t      p2 = p1;\n \t      while (*p2 && !ISSPACE ((unsigned char) *p2))\n \t\tp2++;\n \n \t      if (*p2 != ' ' && *p2 != '\\t')\n-\t\tfatal (\"specs %%rename syntax malformed after %ld characters\",\n-\t\t       (long) (p2 - buffer));\n+\t\tfatal_error (\"specs %%rename syntax malformed after \"\n+\t\t\t     \"%ld characters\",\n+\t\t\t     (long) (p2 - buffer));\n \n \t      name_len = p2 - p1;\n \t      *p2++ = '\\0';\n \t      while (*p2 == ' ' || *p2 == '\\t')\n \t\tp2++;\n \n \t      if (! ISALPHA ((unsigned char) *p2))\n-\t\tfatal (\"specs %%rename syntax malformed after %ld characters\",\n-\t\t       (long) (p2 - buffer));\n+\t\tfatal_error (\"specs %%rename syntax malformed after \"\n+\t\t\t     \"%ld characters\",\n+\t\t\t     (long) (p2 - buffer));\n \n \t      /* Get new spec name.  */\n \t      p3 = p2;\n \t      while (*p3 && !ISSPACE ((unsigned char) *p3))\n \t\tp3++;\n \n \t      if (p3 != p - 1)\n-\t\tfatal (\"specs %%rename syntax malformed after %ld characters\",\n-\t\t       (long) (p3 - buffer));\n+\t\tfatal_error (\"specs %%rename syntax malformed after \"\n+\t\t\t     \"%ld characters\",\n+\t\t\t     (long) (p3 - buffer));\n \t      *p3 = '\\0';\n \n \t      for (sl = specs; sl; sl = sl->next)\n \t\tif (name_len == sl->name_len && !strcmp (sl->name, p1))\n \t\t  break;\n \n \t      if (!sl)\n-\t\tfatal (\"specs %s spec was not found to be renamed\", p1);\n+\t\tfatal_error (\"specs %s spec was not found to be renamed\", p1);\n \n \t      if (strcmp (p1, p2) == 0)\n \t\tcontinue;\n \n \t      for (newsl = specs; newsl; newsl = newsl->next)\n \t\tif (strcmp (newsl->name, p2) == 0)\n-\t\t  fatal (\"%s: attempt to rename spec '%s' to already defined spec '%s'\",\n+\t\t  fatal_error (\"%s: attempt to rename spec '%s' to \"\n+\t\t\t       \"already defined spec '%s'\",\n \t\t    filename, p1, p2);\n \n \t      if (verbose_flag)\n \t\t{\n-\t\t  notice (\"rename spec %s to %s\\n\", p1, p2);\n+\t\t  fnotice (stderr, \"rename spec %s to %s\\n\", p1, p2);\n #ifdef DEBUG_SPECS\n-\t\t  notice (\"spec is '%s'\\n\\n\", *(sl->ptr_spec));\n+\t\t  fnotice (stderr, \"spec is '%s'\\n\\n\", *(sl->ptr_spec));\n #endif\n \t\t}\n \n@@ -2305,8 +2314,8 @@ read_specs (const char *filename, int main_p)\n \t      continue;\n \t    }\n \t  else\n-\t    fatal (\"specs unknown %% command after %ld characters\",\n-\t\t   (long) (p1 - buffer));\n+\t    fatal_error (\"specs unknown %% command after %ld characters\",\n+\t\t\t (long) (p1 - buffer));\n \t}\n \n       /* Find the colon that should end the suffix.  */\n@@ -2316,8 +2325,8 @@ read_specs (const char *filename, int main_p)\n \n       /* The colon shouldn't be missing.  */\n       if (*p1 != ':')\n-\tfatal (\"specs file malformed after %ld characters\",\n-\t       (long) (p1 - buffer));\n+\tfatal_error (\"specs file malformed after %ld characters\",\n+\t\t     (long) (p1 - buffer));\n \n       /* Skip back over trailing whitespace.  */\n       p2 = p1;\n@@ -2329,8 +2338,8 @@ read_specs (const char *filename, int main_p)\n       /* Find the next line.  */\n       p = skip_whitespace (p1 + 1);\n       if (p[1] == 0)\n-\tfatal (\"specs file malformed after %ld characters\",\n-\t       (long) (p - buffer));\n+\tfatal_error (\"specs file malformed after %ld characters\",\n+\t\t     (long) (p - buffer));\n \n       p1 = p;\n       /* Find next blank line or end of string.  */\n@@ -2381,7 +2390,7 @@ read_specs (const char *filename, int main_p)\n     }\n \n   if (link_command_spec == 0)\n-    fatal (\"spec file has no spec for linking\");\n+    fatal_error (\"spec file has no spec for linking\");\n }\n \f\n /* Record the names of temporary files we tell compilers to write,\n@@ -2709,7 +2718,7 @@ static void\n xputenv (const char *string)\n {\n   if (verbose_flag)\n-    notice (\"%s\\n\", string);\n+    fnotice (stderr, \"%s\\n\", string);\n   putenv (CONST_CAST (char *, string));\n }\n \n@@ -2910,7 +2919,7 @@ add_sysrooted_prefix (struct path_prefix *pprefix, const char *prefix,\n \t\t      int require_machine_suffix, int os_multilib)\n {\n   if (!IS_ABSOLUTE_PATH (prefix))\n-    fatal (\"system path '%s' is not absolute\", prefix);\n+    fatal_error (\"system path '%s' is not absolute\", prefix);\n \n   if (target_system_root)\n     {\n@@ -2982,7 +2991,7 @@ execute (void)\n     if (strcmp (argbuf[i], \"|\") == 0)\n       {\t\t\t\t/* each command.  */\n #if defined (__MSDOS__) || defined (OS2) || defined (VMS)\n-\tfatal (\"-pipe not supported\");\n+\tfatal_error (\"-pipe not supported\");\n #endif\n \targbuf[i] = 0;\t/* termination of command args.  */\n \tcommands[n_commands].prog = argbuf[i + 1];\n@@ -3053,7 +3062,7 @@ execute (void)\n \t  return 0;\n         }\n #ifdef DEBUG\n-      notice (\"\\nGo ahead? (y or n) \");\n+      fnotice (stderr, \"\\nGo ahead? (y or n) \");\n       fflush (stderr);\n       i = getchar ();\n       if (i != '\\n')\n@@ -3114,7 +3123,7 @@ execute (void)\n       if (errmsg != NULL)\n \t{\n \t  if (err == 0)\n-\t    fatal (errmsg);\n+\t    fatal_error (errmsg);\n \t  else\n \t    {\n \t      errno = err;\n@@ -3169,7 +3178,7 @@ execute (void)\n \t      }\n \t    else\n #endif\n-\t      fatal_ice (\"\\\n+\t      internal_error (\"\\\n Internal error: %s (program %s)\\n\\\n Please submit a full bug report.\\n\\\n See %s for instructions.\",\n@@ -3197,7 +3206,8 @@ See %s for instructions.\",\n \t    if (ut + st != 0)\n \t      {\n \t\tif (report_times)\n-\t\t  notice (\"# %s %.2f %.2f\\n\", commands[i].prog, ut, st);\n+\t\t  fnotice (stderr, \"# %s %.2f %.2f\\n\",\n+\t\t\t   commands[i].prog, ut, st);\n \n \t\tif (report_times_to_file)\n \t\t  {\n@@ -3912,29 +3922,29 @@ process_command (int argc, const char **argv)\n       else if (strcmp (argv[i], \"-Xlinker\") == 0)\n \t{\n \t  if (i + 1 == argc)\n-\t    fatal (\"argument to '-Xlinker' is missing\");\n+\t    fatal_error (\"argument to '-Xlinker' is missing\");\n \n \t  n_infiles++;\n \t  i++;\n \t}\n       else if (strcmp (argv[i], \"-Xpreprocessor\") == 0)\n \t{\n \t  if (i + 1 == argc)\n-\t    fatal (\"argument to '-Xpreprocessor' is missing\");\n+\t    fatal_error (\"argument to '-Xpreprocessor' is missing\");\n \n \t  add_preprocessor_option (argv[i+1], strlen (argv[i+1]));\n \t}\n       else if (strcmp (argv[i], \"-Xassembler\") == 0)\n \t{\n \t  if (i + 1 == argc)\n-\t    fatal (\"argument to '-Xassembler' is missing\");\n+\t    fatal_error (\"argument to '-Xassembler' is missing\");\n \n \t  add_assembler_option (argv[i+1], strlen (argv[i+1]));\n \t}\n       else if (strcmp (argv[i], \"-l\") == 0)\n \t{\n \t  if (i + 1 == argc)\n-\t    fatal (\"argument to '-l' is missing\");\n+\t    fatal_error (\"argument to '-l' is missing\");\n \n \t  n_infiles++;\n \t  i++;\n@@ -3955,7 +3965,7 @@ process_command (int argc, const char **argv)\n \t\t   || strcmp (argv[i]+12, \"object\") == 0)\n \t    save_temps_flag = SAVE_TEMPS_OBJ;\n \t  else\n-\t    fatal (\"'%s' is an unknown -save-temps option\", argv[i]);\n+\t    fatal_error (\"'%s' is an unknown -save-temps option\", argv[i]);\n \t}\n       else if (strcmp (argv[i], \"-no-canonical-prefixes\") == 0)\n \t/* Already handled as a special case, so ignored here.  */\n@@ -3969,7 +3979,7 @@ process_command (int argc, const char **argv)\n \t{\n \t  struct user_specs *user = XNEW (struct user_specs);\n \t  if (++i >= argc)\n-\t    fatal (\"argument to '-specs' is missing\");\n+\t    fatal_error (\"argument to '-specs' is missing\");\n \n \t  user->next = (struct user_specs *) 0;\n \t  user->filename = argv[i];\n@@ -3983,7 +3993,7 @@ process_command (int argc, const char **argv)\n \t{\n \t  struct user_specs *user = XNEW (struct user_specs);\n \t  if (strlen (argv[i]) == 7)\n-\t    fatal (\"argument to '-specs=' is missing\");\n+\t    fatal_error (\"argument to '-specs=' is missing\");\n \n \t  user->next = (struct user_specs *) 0;\n \t  user->filename = argv[i] + 7;\n@@ -4011,7 +4021,7 @@ process_command (int argc, const char **argv)\n       else if (strcmp (argv[i], \"-wrapper\") == 0)\n         {\n \t  if (++i >= argc)\n-\t    fatal (\"argument to '-wrapper' is missing\");\n+\t    fatal_error (\"argument to '-wrapper' is missing\");\n \n           wrapper_string = argv[i];\n \t  n_switches++;\n@@ -4039,7 +4049,7 @@ process_command (int argc, const char **argv)\n \t\tint len;\n \n \t\tif (p[1] == 0 && i + 1 == argc)\n-\t\t  fatal (\"argument to '-B' is missing\");\n+\t\t  fatal_error (\"argument to '-B' is missing\");\n \t\tif (p[1] == 0)\n \t\t  value = argv[++i];\n \t\telse\n@@ -4216,7 +4226,7 @@ process_command (int argc, const char **argv)\n     {\n       /* -save-temps overrides -pipe, so that temp files are produced */\n       if (save_temps_flag)\n-\terror (\"warning: -pipe ignored because -save-temps specified\");\n+\twarning (0, \"-pipe ignored because -save-temps specified\");\n       use_pipes = 0;\n     }\n \n@@ -4432,7 +4442,7 @@ process_command (int argc, const char **argv)\n \t  if (c == 'x')\n \t    {\n \t      if (p[1] == 0 && i + 1 == argc)\n-\t\tfatal (\"argument to '-x' is missing\");\n+\t\tfatal_error (\"argument to '-x' is missing\");\n \t      if (p[1] == 0)\n \t\tspec_lang = argv[++i];\n \t      else\n@@ -4460,7 +4470,7 @@ process_command (int argc, const char **argv)\n \t\t  n_args = SWITCH_TAKES_ARG (c) - (p[1] != 0);\n \t\t}\n \t      if (i + n_args >= argc)\n-\t\tfatal (\"argument to '-%s' is missing\", p);\n+\t\tfatal_error (\"argument to '-%s' is missing\", p);\n \t      switches[n_switches].args\n \t\t= XNEWVEC (const char *, n_args + 1);\n \t      while (j < n_args)\n@@ -4552,7 +4562,7 @@ process_command (int argc, const char **argv)\n     }\n \n   if (n_infiles == last_language_n_infiles && spec_lang != 0)\n-    error (\"warning: '-x %s' after last input file has no effect\", spec_lang);\n+    warning (0, \"'-x %s' after last input file has no effect\", spec_lang);\n \n   if (compare_debug == 2 || compare_debug == 3)\n     {\n@@ -4715,7 +4725,7 @@ end_going_arg (void)\n \n \t  if (full_script_path == NULL)\n \t    {\n-\t      error (_(\"unable to locate default linker script '%s' in the library search paths\"), string);\n+\t      error (\"unable to locate default linker script '%s' in the library search paths\", string);\n \t      /* Script was not found on search path.  */\n \t      return;\n \t    }\n@@ -4903,7 +4913,7 @@ do_self_spec (const char *spec)\n \n \t  /* Each switch should start with '-'.  */\n \t  if (c != '-')\n-\t    fatal (\"switch '%s' does not start with '-'\", argbuf[i]);\n+\t    fatal_error (\"switch '%s' does not start with '-'\", argbuf[i]);\n \n \t  p++;\n \t  c = *p;\n@@ -4927,7 +4937,7 @@ do_self_spec (const char *spec)\n \t\t  n_args = SWITCH_TAKES_ARG (c) - (p[1] != 0);\n \t\t}\n \t      if (i + n_args >= argbuf_index)\n-\t\tfatal (\"argument to '-%s' is missing\", p);\n+\t\tfatal_error (\"argument to '-%s' is missing\", p);\n \t      sw->args\n \t\t= XNEWVEC (const char *, n_args + 1);\n \t      while (j < n_args)\n@@ -5019,20 +5029,20 @@ create_at_file (char **argv)\n   int status;\n \n   if (f == NULL)\n-    fatal (\"could not open temporary response file %s\",\n-\t   temp_file);\n+    fatal_error (\"could not open temporary response file %s\",\n+\t\t temp_file);\n \n   status = writeargv (argv, f);\n \n   if (status)\n-    fatal (\"could not write to temporary response file %s\",\n-\t   temp_file);\n+    fatal_error (\"could not write to temporary response file %s\",\n+\t\t temp_file);\n \n   status = fclose (f);\n \n   if (EOF == status)\n-    fatal (\"could not close temporary response file %s\",\n-\t   temp_file);\n+    fatal_error (\"could not close temporary response file %s\",\n+\t\t temp_file);\n \n   store_arg (at_argument, 0, 0);\n \n@@ -5133,7 +5143,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \tswitch (c = *p++)\n \t  {\n \t  case 0:\n-\t    fatal (\"spec '%s' invalid\", spec);\n+\t    fatal_error (\"spec '%s' invalid\", spec);\n \n \t  case 'b':\n \t    if (save_temps_length)\n@@ -5209,7 +5219,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t      buf = (char *) alloca (p - q + 1);\n \t      strncpy (buf, q, p - q);\n \t      buf[p - q] = 0;\n-\t      notice (\"%s\\n\", _(buf));\n+\t      inform (0, \"%s\", _(buf));\n \t      if (*p)\n \t\tp++;\n \t    }\n@@ -5282,7 +5292,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t\t    p += 2;\n \t\t    /* We don't support extra suffix characters after %O.  */\n \t\t    if (*p == '.' || ISALNUM ((unsigned char) *p))\n-\t\t      fatal (\"spec '%s' has invalid '%%0%c'\", spec, *p);\n+\t\t      fatal_error (\"spec '%s' has invalid '%%0%c'\", spec, *p);\n \t\t    if (suffix_length == 0)\n \t\t      suffix = TARGET_OBJECT_SUFFIX;\n \t\t    else\n@@ -5591,7 +5601,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t      int cur_index = argbuf_index;\n \t      /* Handle the {...} following the %W.  */\n \t      if (*p != '{')\n-\t\tfatal (\"spec '%s' has invalid '%%W%c\", spec, *p);\n+\t\tfatal_error (\"spec '%s' has invalid '%%W%c\", spec, *p);\n \t      p = handle_braces (p + 1);\n \t      if (p == 0)\n \t\treturn -1;\n@@ -5611,7 +5621,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \n \t      /* Skip past the option value and make a copy.  */\n \t      if (*p != '{')\n-\t\tfatal (\"spec '%s' has invalid '%%x%c'\", spec, *p);\n+\t\tfatal_error (\"spec '%s' has invalid '%%x%c'\", spec, *p);\n \t      while (*p++ != '}')\n \t\t;\n \t      string = save_string (p1 + 1, p - p1 - 2);\n@@ -5815,7 +5825,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t       %[...] modifies -D options the way %P does;\n \t       %(...) uses the spec unmodified.  */\n \t  case '[':\n-\t    error (\"warning: use of obsolete %%[ operator in specs\");\n+\t    warning (0, \"use of obsolete %%[ operator in specs\");\n \t  case '(':\n \t    {\n \t      const char *name = p;\n@@ -5833,7 +5843,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t\t  {\n \t\t    name = *(sl->ptr_spec);\n #ifdef DEBUG_SPECS\n-\t\t    notice (\"Processing spec %c%s%c, which is '%s'\\n\",\n+\t\t    fnotice (stderr, \"Processing spec %c%s%c, which is '%s'\\n\",\n \t\t\t    c, sl->name, (c == '(') ? ')' : ']', name);\n #endif\n \t\t    break;\n@@ -5958,7 +5968,7 @@ eval_spec_function (const char *func, const char *args)\n \n   sf = lookup_spec_function (func);\n   if (sf == NULL)\n-    fatal (\"unknown spec function '%s'\", func);\n+    fatal_error (\"unknown spec function '%s'\", func);\n \n   /* Push the spec processing context.  */\n   save_argbuf_index = argbuf_index;\n@@ -5978,7 +5988,7 @@ eval_spec_function (const char *func, const char *args)\n \n   alloc_args ();\n   if (do_spec_2 (args) < 0)\n-    fatal (\"error in args to spec function '%s'\", func);\n+    fatal_error (\"error in args to spec function '%s'\", func);\n \n   /* argbuf_index is an index for the next argument to be inserted, and\n      so contains the count of the args already inserted.  */\n@@ -6027,10 +6037,10 @@ handle_spec_function (const char *p)\n         break;\n       /* Only allow [A-Za-z0-9], -, and _ in function names.  */\n       if (!ISALNUM (*endp) && !(*endp == '-' || *endp == '_'))\n-\tfatal (\"malformed spec function name\");\n+\tfatal_error (\"malformed spec function name\");\n     }\n   if (*endp != '(')\t\t/* ) */\n-    fatal (\"no arguments for spec function\");\n+    fatal_error (\"no arguments for spec function\");\n   func = save_string (p, endp - p);\n   p = ++endp;\n \n@@ -6049,7 +6059,7 @@ handle_spec_function (const char *p)\n     }\n   /* ( */\n   if (*endp != ')')\n-    fatal (\"malformed spec function arguments\");\n+    fatal_error (\"malformed spec function arguments\");\n   args = save_string (p, endp - p);\n   p = ++endp;\n \n@@ -6295,7 +6305,7 @@ handle_braces (const char *p)\n   return p;\n \n  invalid:\n-  fatal (\"braced spec '%s' is invalid at '%c'\", orig, *p);\n+  fatal_error (\"braced spec '%s' is invalid at '%c'\", orig, *p);\n \n #undef SKIP_WHITE\n }\n@@ -6383,7 +6393,7 @@ process_brace_body (const char *p, const char *atom, const char *end_atom,\n   return p;\n \n  invalid:\n-  fatal (\"braced spec body '%s' is invalid\", body);\n+  fatal_error (\"braced spec body '%s' is invalid\", body);\n }\n \f\n /* Return 0 iff switch number SWITCHNUM is obsoleted by a later switch\n@@ -6600,7 +6610,7 @@ set_input (const char *filename)\n /* On fatal signals, delete all the temporary files.  */\n \n static void\n-fatal_error (int signum)\n+fatal_signal (int signum)\n {\n   signal (signum, SIG_DFL);\n   delete_failure_queue ();\n@@ -6775,16 +6785,16 @@ main (int argc, char **argv)\n   gcc_init_libintl ();\n \n   if (signal (SIGINT, SIG_IGN) != SIG_IGN)\n-    signal (SIGINT, fatal_error);\n+    signal (SIGINT, fatal_signal);\n #ifdef SIGHUP\n   if (signal (SIGHUP, SIG_IGN) != SIG_IGN)\n-    signal (SIGHUP, fatal_error);\n+    signal (SIGHUP, fatal_signal);\n #endif\n   if (signal (SIGTERM, SIG_IGN) != SIG_IGN)\n-    signal (SIGTERM, fatal_error);\n+    signal (SIGTERM, fatal_signal);\n #ifdef SIGPIPE\n   if (signal (SIGPIPE, SIG_IGN) != SIG_IGN)\n-    signal (SIGPIPE, fatal_error);\n+    signal (SIGPIPE, fatal_signal);\n #endif\n #ifdef SIGCHLD\n   /* We *MUST* set SIGCHLD to SIG_DFL so that the wait4() call will\n@@ -7154,7 +7164,7 @@ main (int argc, char **argv)\n       else\n \t/* The error status indicates that only one set of fixed\n \t   headers should be built.  */\n-\tfatal (\"not configured with sysroot headers suffix\");\n+\tfatal_error (\"not configured with sysroot headers suffix\");\n     }\n \n   if (print_help_list)\n@@ -7200,8 +7210,8 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n       int n;\n       const char *thrmod;\n \n-      notice (\"Target: %s\\n\", spec_machine);\n-      notice (\"Configured with: %s\\n\", configuration_arguments);\n+      fnotice (stderr, \"Target: %s\\n\", spec_machine);\n+      fnotice (stderr, \"Configured with: %s\\n\", configuration_arguments);\n \n #ifdef THREAD_MODEL_SPEC\n       /* We could have defined THREAD_MODEL_SPEC to \"%*\" by default,\n@@ -7215,7 +7225,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n       thrmod = thread_model;\n #endif\n \n-      notice (\"Thread model: %s\\n\", thrmod);\n+      fnotice (stderr, \"Thread model: %s\\n\", thrmod);\n \n       /* compiler_version is truncated at the first space when initialized\n \t from version string, so truncate version_string at the first space\n@@ -7226,17 +7236,18 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \n       if (! strncmp (version_string, compiler_version, n)\n \t  && compiler_version[n] == 0)\n-\tnotice (\"gcc version %s %s\\n\", version_string, pkgversion_string);\n+\tfnotice (stderr, \"gcc version %s %s\\n\", version_string,\n+\t\t pkgversion_string);\n       else\n-\tnotice (\"gcc driver version %s %sexecuting gcc version %s\\n\",\n-\t\tversion_string, pkgversion_string, compiler_version);\n+\tfnotice (stderr, \"gcc driver version %s %sexecuting gcc version %s\\n\",\n+\t\t version_string, pkgversion_string, compiler_version);\n \n       if (n_infiles == 0)\n \treturn (0);\n     }\n \n   if (n_infiles == added_libraries)\n-    fatal (\"no input files\");\n+    fatal_error (\"no input files\");\n \n   /* Make a place to record the compiler output file names\n      that correspond to the input files.  */\n@@ -7285,7 +7296,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n     }\n \n   if (!combine_inputs && have_c && have_o && lang_n_infiles > 1)\n-   fatal (\"cannot specify -o with -c, -S or -E with multiple files\");\n+   fatal_error (\"cannot specify -o with -c, -S or -E with multiple files\");\n \n   if (combine_flag && save_temps_flag)\n     {\n@@ -7319,7 +7330,8 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t\t  value = do_spec (input_file_compiler->spec);\n \t\t  infiles[i].preprocessed = true;\n \t\t  if (!have_o_argbuf_index)\n-\t\t    fatal (\"spec '%s' is invalid\", input_file_compiler->spec);\n+\t\t    fatal_error (\"spec '%s' is invalid\",\n+\t\t\t\t input_file_compiler->spec);\n \t\t  infiles[i].name = argbuf[have_o_argbuf_index];\n \t\t  infiles[i].incompiler\n \t\t    = lookup_compiler (infiles[i].name,\n@@ -7397,7 +7409,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t      else if (compare_debug && debug_check_temp_file[0])\n \t\t{\n \t\t  if (verbose_flag)\n-\t\t    error (\"Recompiling with -fcompare-debug\");\n+\t\t    inform (0, \"recompiling with -fcompare-debug\");\n \n \t\t  compare_debug = -compare_debug;\n \t\t  n_switches = n_switches_debug_check[1];\n@@ -7420,7 +7432,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t\t\t\t\t debug_check_temp_file[1]));\n \n \t\t  if (verbose_flag)\n-\t\t    error (\"Comparing final insns dumps\");\n+\t\t    inform (0, \"comparing final insns dumps\");\n \n \t\t  if (compare_files (debug_check_temp_file))\n \t\t    this_file_error = 1;\n@@ -7510,12 +7522,12 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t\t\t\t\t\t \"liblto_plugin.so\", R_OK,\n \t\t\t\t\t\t false);\n \t  if (!linker_plugin_file_spec)\n-\t    fatal (\"-fuse-linker-plugin, but liblto_plugin.so not found\");\n+\t    fatal_error (\"-fuse-linker-plugin, but liblto_plugin.so not found\");\n \n \t  lto_libgcc_spec = find_a_file (&startfile_prefixes, \"libgcc.a\",\n \t\t\t\t\t R_OK, true);\n \t  if (!lto_libgcc_spec)\n-\t    fatal (\"could not find libgcc.a\");\n+\t    fatal_error (\"could not find libgcc.a\");\n \t}\n       lto_gcc_spec = argv[0];\n \n@@ -7544,8 +7556,8 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n     for (i = 0; (int) i < n_infiles; i++)\n       if (explicit_link_files[i]\n \t  && !(infiles[i].language && infiles[i].language[0] == '*'))\n-\terror (\"%s: linker input file unused because linking not done\",\n-\t       outfiles[i]);\n+\twarning (0, \"%s: linker input file unused because linking not done\",\n+\t\t outfiles[i]);\n \n   /* Delete some or all of the temporary files we made.  */\n \n@@ -7663,35 +7675,35 @@ perror_with_name (const char *name)\n void\n fancy_abort (const char *file, int line, const char *func)\n {\n-  fatal_ice (\"internal gcc abort in %s, at %s:%d\", func, file, line);\n+  internal_error (\"internal gcc abort in %s, at %s:%d\", func, file, line);\n }\n \f\n /* Output an error message and exit.  */\n \n void\n-fatal_ice (const char *cmsgid, ...)\n+internal_error (const char *gmsgid, ...)\n {\n   va_list ap;\n \n-  va_start (ap, cmsgid);\n+  va_start (ap, gmsgid);\n \n   fprintf (stderr, \"%s: \", programname);\n-  vfprintf (stderr, _(cmsgid), ap);\n+  vfprintf (stderr, _(gmsgid), ap);\n   va_end (ap);\n   fprintf (stderr, \"\\n\");\n   delete_temp_files ();\n   exit (pass_exit_codes ? ICE_EXIT_CODE : 1);\n }\n \n void\n-fatal (const char *cmsgid, ...)\n+fatal_error (const char *gmsgid, ...)\n {\n   va_list ap;\n \n-  va_start (ap, cmsgid);\n+  va_start (ap, gmsgid);\n \n   fprintf (stderr, \"%s: \", programname);\n-  vfprintf (stderr, _(cmsgid), ap);\n+  vfprintf (stderr, _(gmsgid), ap);\n   va_end (ap);\n   fprintf (stderr, \"\\n\");\n   delete_temp_files ();\n@@ -7710,20 +7722,47 @@ error (const char *gmsgid, ...)\n   va_list ap;\n \n   va_start (ap, gmsgid);\n-  fprintf (stderr, \"%s: \", programname);\n+  error_count++;\n+  fprintf (stderr, \"%s: %s: \", programname, _(\"error: \"));\n+  vfprintf (stderr, _(gmsgid), ap);\n+  va_end (ap);\n+\n+  fprintf (stderr, \"\\n\");\n+}\n+\n+void\n+warning (int dummy ATTRIBUTE_UNUSED, const char *gmsgid, ...)\n+{\n+  va_list ap;\n+\n+  va_start (ap, gmsgid);\n+  fprintf (stderr, \"%s: %s: \", programname, _(\"warning: \"));\n   vfprintf (stderr, _(gmsgid), ap);\n   va_end (ap);\n \n   fprintf (stderr, \"\\n\");\n }\n \n static void\n-notice (const char *cmsgid, ...)\n+inform (int dummy ATTRIBUTE_UNUSED, const char *gmsgid, ...)\n+{\n+  va_list ap;\n+\n+  va_start (ap, gmsgid);\n+  fprintf (stderr, \"%s: %s: \", programname, _(\"note: \"));\n+  vfprintf (stderr, _(gmsgid), ap);\n+  va_end (ap);\n+\n+  fprintf (stderr, \"\\n\");\n+}\n+\n+static void\n+fnotice (FILE *fp, const char *cmsgid, ...)\n {\n   va_list ap;\n \n   va_start (ap, cmsgid);\n-  vfprintf (stderr, _(cmsgid), ap);\n+  vfprintf (fp, _(cmsgid), ap);\n   va_end (ap);\n }\n \f\n@@ -7879,7 +7918,8 @@ used_arg (const char *p, int len)\n \t      if (*q == '\\0')\n \t\t{\n \t\tinvalid_matches:\n-\t\t  fatal (\"multilib spec '%s' is invalid\", multilib_matches);\n+\t\t  fatal_error (\"multilib spec '%s' is invalid\",\n+\t\t\t       multilib_matches);\n \t\t}\n \t      q++;\n \t    }\n@@ -8070,8 +8110,8 @@ set_multilib_dir (void)\n \t  if (*p == '\\0')\n \t    {\n \t    invalid_exclusions:\n-\t      fatal (\"multilib exclusions '%s' is invalid\",\n-\t\t     multilib_exclusions);\n+\t      fatal_error (\"multilib exclusions '%s' is invalid\",\n+\t\t\t   multilib_exclusions);\n \t    }\n \n \t  if (! ok)\n@@ -8128,8 +8168,8 @@ set_multilib_dir (void)\n \t  if (*p == '\\0')\n \t    {\n \t    invalid_select:\n-\t      fatal (\"multilib select '%s' is invalid\",\n-\t\t     multilib_select);\n+\t      fatal_error (\"multilib select '%s' is invalid\",\n+\t\t\t   multilib_select);\n \t    }\n \t  ++p;\n \t}\n@@ -8269,7 +8309,7 @@ print_multilib_info (void)\n \t  if (*p == '\\0')\n \t    {\n \t    invalid_select:\n-\t      fatal (\"multilib select '%s' is invalid\", multilib_select);\n+\t      fatal_error (\"multilib select '%s' is invalid\", multilib_select);\n \t    }\n \n \t  ++p;\n@@ -8307,8 +8347,8 @@ print_multilib_info (void)\n \t\tif (*e == '\\0')\n \t\t  {\n \t\t  invalid_exclusion:\n-\t\t    fatal (\"multilib exclusion '%s' is invalid\",\n-\t\t\t   multilib_exclusions);\n+\t\t    fatal_error (\"multilib exclusion '%s' is invalid\",\n+\t\t\t\t multilib_exclusions);\n \t\t  }\n \n \t\tif (! m)\n@@ -8513,7 +8553,7 @@ getenv_spec_function (int argc, const char **argv)\n \n   value = getenv (argv[0]);\n   if (!value)\n-    fatal (\"environment variable \\\"%s\\\" not defined\", argv[0]);\n+    fatal_error (\"environment variable \\\"%s\\\" not defined\", argv[0]);\n \n   /* We have to escape every character of the environment variable so\n      they are not interpreted as active spec characters.  A\n@@ -8604,12 +8644,12 @@ compare_version_strings (const char *v1, const char *v2)\n     abort ();\n   rresult = regexec (&r, v1, 0, NULL, 0);\n   if (rresult == REG_NOMATCH)\n-    fatal (\"invalid version number `%s'\", v1);\n+    fatal_error (\"invalid version number `%s'\", v1);\n   else if (rresult != 0)\n     abort ();\n   rresult = regexec (&r, v2, 0, NULL, 0);\n   if (rresult == REG_NOMATCH)\n-    fatal (\"invalid version number `%s'\", v2);\n+    fatal_error (\"invalid version number `%s'\", v2);\n   else if (rresult != 0)\n     abort ();\n \n@@ -8652,13 +8692,13 @@ version_compare_spec_function (int argc, const char **argv)\n   bool result;\n \n   if (argc < 3)\n-    fatal (\"too few arguments to %%:version-compare\");\n+    fatal_error (\"too few arguments to %%:version-compare\");\n   if (argv[0][0] == '\\0')\n     abort ();\n   if ((argv[0][1] == '<' || argv[0][1] == '>') && argv[0][0] != '!')\n     nargs = 2;\n   if (argc != nargs + 3)\n-    fatal (\"too many arguments to %%:version-compare\");\n+    fatal_error (\"too many arguments to %%:version-compare\");\n \n   switch_len = strlen (argv[nargs + 1]);\n   for (i = 0; i < n_switches; i++)\n@@ -8699,7 +8739,7 @@ version_compare_spec_function (int argc, const char **argv)\n       break;\n \n     default:\n-      fatal (\"unknown operator '%s' in %%:version-compare\", argv[0]);\n+      fatal_error (\"unknown operator '%s' in %%:version-compare\", argv[0]);\n     }\n   if (! result)\n     return NULL;\n@@ -8796,7 +8836,7 @@ compare_debug_dump_opt_spec_function (int arg,\n   static char random_seed[HOST_BITS_PER_WIDE_INT / 4 + 3];\n \n   if (arg != 0)\n-    fatal (\"too many arguments to %%:compare-debug-dump-opt\");\n+    fatal_error (\"too many arguments to %%:compare-debug-dump-opt\");\n \n   do_spec_2 (\"%{fdump-final-insns=*:%*}\");\n   do_spec_1 (\" \", 0, NULL);\n@@ -8863,7 +8903,7 @@ compare_debug_self_opt_spec_function (int arg,\n \t\t\t\t      const char **argv ATTRIBUTE_UNUSED)\n {\n   if (arg != 0)\n-    fatal (\"too many arguments to %%:compare-debug-self-opt\");\n+    fatal_error (\"too many arguments to %%:compare-debug-self-opt\");\n \n   if (compare_debug >= 0)\n     return NULL;\n@@ -8898,17 +8938,18 @@ compare_debug_auxbase_opt_spec_function (int arg,\n   int len;\n \n   if (arg == 0)\n-    fatal (\"too few arguments to %%:compare-debug-auxbase-opt\");\n+    fatal_error (\"too few arguments to %%:compare-debug-auxbase-opt\");\n \n   if (arg != 1)\n-    fatal (\"too many arguments to %%:compare-debug-auxbase-opt\");\n+    fatal_error (\"too many arguments to %%:compare-debug-auxbase-opt\");\n \n   if (compare_debug >= 0)\n     return NULL;\n \n   len = strlen (argv[0]);\n   if (len < 3 || strcmp (argv[0] + len - 3, \".gk\") != 0)\n-    fatal (\"argument to %%:compare-debug-auxbase-opt does not end in .gk\");\n+    fatal_error (\"argument to %%:compare-debug-auxbase-opt \"\n+\t\t \"does not end in .gk\");\n \n   if (debug_auxbase_opt)\n     return debug_auxbase_opt;"}, {"sha": "a28567454da39f8c7ddc2bed7b3b3d89038e4ed5", "filename": "gcc/gcc.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -59,8 +59,10 @@ struct spec_function\n /* These are exported by gcc.c.  */\n extern int do_spec (const char *);\n extern void record_temp_file (const char *, int, int);\n-extern void fatal (const char *, ...) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+extern void fatal_error (const char *, ...)\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n extern void error (const char *, ...) ATTRIBUTE_PRINTF_1;\n+extern void warning (int, const char *, ...) ATTRIBUTE_PRINTF_2;\n extern void pfatal_with_name (const char *) ATTRIBUTE_NORETURN;\n extern void set_input (const char *);\n "}, {"sha": "7af94276e50bc7e608f2b14a33cbc6df167f7225", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -1,3 +1,8 @@\n+2010-05-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* jvspec.c (lang_specific_driver): Use fatal_error instead of\n+\tfatal.  Use warning instead of error for warnings.\n+\n 2010-05-28  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* expr.c (get_symbol_table_index): Add spaces in expression."}, {"sha": "e197e2854b04913c5093b7c244f616ea43400cb9", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dec80c756fb7a85f1c6f236386e230d19ccbe26/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=2dec80c756fb7a85f1c6f236386e230d19ccbe26", "patch": "@@ -1,7 +1,7 @@\n /* Specific flags and argument handling of the front-end of the \n    GNU compiler for the Java(TM) language.\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-   2005, 2006, 2007 Free Software Foundation, Inc.\n+   2005, 2006, 2007, 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -400,33 +400,33 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n     }\n \n   if (quote)\n-    fatal (\"argument to '%s' missing\\n\", quote);\n+    fatal_error (\"argument to '%s' missing\\n\", quote);\n \n   if (saw_D && ! main_class_name)\n-    fatal (\"can't specify '-D' without '--main'\\n\");\n+    fatal_error (\"can't specify '-D' without '--main'\\n\");\n \n   if (main_class_name && ! verify_class_name (main_class_name))\n-    fatal (\"'%s' is not a valid class name\", main_class_name);\n+    fatal_error (\"'%s' is not a valid class name\", main_class_name);\n \n   num_args = argc + added;\n   if (saw_resource)\n     {\n       if (! saw_o)\n-\tfatal (\"--resource requires -o\");\n+\tfatal_error (\"--resource requires -o\");\n     }\n   if (saw_C)\n     {\n       num_args += 3;\n       if (class_files_count + zip_files_count > 0)\n \t{\n-\t  error (\"warning: already-compiled .class files ignored with -C\"); \n+\t  warning (0, \"already-compiled .class files ignored with -C\"); \n \t  num_args -= class_files_count + zip_files_count;\n \t  class_files_count = 0;\n \t  zip_files_count = 0;\n \t}\n       num_args += 2;  /* For -o NONE. */\n       if (saw_o)\n-\tfatal (\"cannot specify both -C and -o\");\n+\tfatal_error (\"cannot specify both -C and -o\");\n     }\n   if ((saw_o && java_files_count + class_files_count + zip_files_count > 1)\n       || (saw_C && java_files_count > 1)\n@@ -438,7 +438,7 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n     {\n       filelist_filename = make_temp_file (\"jx\");\n       if (filelist_filename == NULL)\n-\tfatal (\"cannot create temporary file\");\n+\tfatal_error (\"cannot create temporary file\");\n       record_temp_file (filelist_filename, ! saw_save_temps, 0);\n       filelist_file = fopen (filelist_filename, \"w\");\n       if (filelist_file == NULL)\n@@ -460,7 +460,7 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   if (combine_inputs || indirect_files_count > 0)\n     num_args += 1; /* for \"-ffilelist-file\" */\n   if (combine_inputs && indirect_files_count > 0)\n-    fatal(\"using both @FILE with multiple files not implemented\");\n+    fatal_error (\"using both @FILE with multiple files not implemented\");\n \n   /* There's no point adding -shared-libgcc if we don't have a shared\n      libgcc.  */\n@@ -582,7 +582,7 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n       if (strncmp (argv[i], \"-fmain=\", 7) == 0)\n \t{\n \t  if (! will_link)\n-\t    fatal (\"cannot specify 'main' class when not linking\");\n+\t    fatal_error (\"cannot specify 'main' class when not linking\");\n \t  --j;\n \t  continue;\n \t}"}]}