{"sha": "167ba5b9dc22350d5fec46299769a4030b5cde4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY3YmE1YjlkYzIyMzUwZDVmZWM0NjI5OTc2OWE0MDMwYjVjZGU0YQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2014-03-11T16:09:59Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2014-03-11T16:09:59Z"}, "message": "Fix post-reload predicate mismatch ICE during qt build:\n\n        * config/arc/predicates.md (extend_operand): During/after reload,\n        allow const_int_operand.\n        * config/arc/arc.md (mulsidi3_700): Use extend_operand predicate.\n        (umulsidi3_700): Likewise.  Change operand 2 constraint back to \"cL\".\n        (mulsi3_highpart): Change operand 2 constraint alternatives 2 and 3\n        to \"i\".\n        (umulsi3_highpart_i): Likewise.\n\nFrom-SVN: r208487", "tree": {"sha": "946c5020bb9110324f70e5b2548286d8b69846fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/946c5020bb9110324f70e5b2548286d8b69846fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/167ba5b9dc22350d5fec46299769a4030b5cde4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167ba5b9dc22350d5fec46299769a4030b5cde4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/167ba5b9dc22350d5fec46299769a4030b5cde4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167ba5b9dc22350d5fec46299769a4030b5cde4a/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a07f6ed2dd05923f69b8983e1fab767feecd393a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a07f6ed2dd05923f69b8983e1fab767feecd393a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a07f6ed2dd05923f69b8983e1fab767feecd393a"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "3c6d9f154be1ff0763d18462ada7007efbfe95dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167ba5b9dc22350d5fec46299769a4030b5cde4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167ba5b9dc22350d5fec46299769a4030b5cde4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=167ba5b9dc22350d5fec46299769a4030b5cde4a", "patch": "@@ -1,3 +1,13 @@\n+2014-03-11  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/arc/predicates.md (extend_operand): During/after reload,\n+\tallow const_int_operand.\n+\t* config/arc/arc.md (mulsidi3_700): Use extend_operand predicate.\n+\t(umulsidi3_700): Likewise.  Change operand 2 constraint back to \"cL\".\n+\t(mulsi3_highpart): Change operand 2 constraint alternatives 2 and 3\n+\tto \"i\".\n+\t(umulsi3_highpart_i): Likewise.\n+\n 2014-03-11  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (get_constraint_for_ptr_offset):"}, {"sha": "80f6e338a1092d84d519996300b6e8ff100bd821", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167ba5b9dc22350d5fec46299769a4030b5cde4a/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167ba5b9dc22350d5fec46299769a4030b5cde4a/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=167ba5b9dc22350d5fec46299769a4030b5cde4a", "patch": "@@ -1888,7 +1888,7 @@\n (define_insn_and_split \"mulsidi3_700\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"%c\"))\n-\t\t (sign_extend:DI (match_operand:SI 2 \"register_operand\" \"cL\"))))]\n+\t\t (sign_extend:DI (match_operand:SI 2 \"extend_operand\" \"cL\"))))]\n   \"TARGET_ARC700 && !TARGET_NOMPY_SET\"\n   \"#\"\n   \"&& reload_completed\"\n@@ -1911,7 +1911,7 @@\n \t (lshiftrt:DI\n \t  (mult:DI\n \t   (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"%0,c,  0,c\"))\n-\t   (sign_extend:DI (match_operand:SI 2 \"extend_operand\"    \"c,c,  s,s\")))\n+\t   (sign_extend:DI (match_operand:SI 2 \"extend_operand\"    \"c,c,  i,i\")))\n \t  (const_int 32))))]\n   \"TARGET_ARC700 && !TARGET_NOMPY_SET\"\n   \"mpyh%? %0,%1,%2\"\n@@ -1928,7 +1928,7 @@\n \t (lshiftrt:DI\n \t  (mult:DI\n \t   (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"%0,c,  0,c\"))\n-\t   (zero_extend:DI (match_operand:SI 2 \"extend_operand\"    \"c,c,  s,s\")))\n+\t   (zero_extend:DI (match_operand:SI 2 \"extend_operand\"    \"c,c,  i,i\")))\n \t  (const_int 32))))]\n   \"TARGET_ARC700 && !TARGET_NOMPY_SET\"\n   \"mpyhu%? %0,%1,%2\"\n@@ -2137,8 +2137,7 @@\n (define_insn_and_split \"umulsidi3_700\"\n   [(set (match_operand:DI 0 \"dest_reg_operand\" \"=&r\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"%c\"))\n-\t\t (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"c\"))))]\n-;;\t\t (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"rL\"))))]\n+\t\t (zero_extend:DI (match_operand:SI 2 \"extend_operand\" \"cL\"))))]\n   \"TARGET_ARC700 && !TARGET_NOMPY_SET\"\n   \"#\"\n   \"reload_completed\""}, {"sha": "81bf6277ee88324995449ed177c8786520b2d34f", "filename": "gcc/config/arc/predicates.md", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167ba5b9dc22350d5fec46299769a4030b5cde4a/gcc%2Fconfig%2Farc%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167ba5b9dc22350d5fec46299769a4030b5cde4a/gcc%2Fconfig%2Farc%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fpredicates.md?ref=167ba5b9dc22350d5fec46299769a4030b5cde4a", "patch": "@@ -776,10 +776,14 @@\n   (and (match_code \"reg\")\n        (match_test \"REGNO (op) == (TARGET_BIG_ENDIAN ? 58 : 59)\")))\n \n+; Unfortunately, we can not allow a const_int_operand before reload, because\n+; reload needs a non-void mode to guide it how to reload the inside of a\n+; {sign_}extend.\n (define_predicate \"extend_operand\"\n-  (ior (match_test \"register_operand (op, mode)\")\n-       (and (match_test \"immediate_operand (op, mode)\")\n-\t    (not (match_test \"const_int_operand (op, mode)\")))))\n+  (ior (match_operand 0 \"register_operand\")\n+       (and (match_operand 0 \"immediate_operand\")\n+\t    (ior (not (match_operand 0 \"const_int_operand\"))\n+\t\t (match_test \"reload_in_progress || reload_completed\")))))\n \n (define_predicate \"millicode_store_operation\"\n   (match_code \"parallel\")"}]}