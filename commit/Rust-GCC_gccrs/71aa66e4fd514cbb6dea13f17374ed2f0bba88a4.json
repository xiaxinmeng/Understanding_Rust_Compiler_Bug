{"sha": "71aa66e4fd514cbb6dea13f17374ed2f0bba88a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFhYTY2ZTRmZDUxNGNiYjZkZWExM2YxNzM3NGVkMmYwYmJhODhhNA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2012-12-06T10:07:41Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2012-12-06T10:07:41Z"}, "message": "sourcebuild.texi: Document arm_v8_neon_ok.\n\n2012-12-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\tgcc/\n\t* doc/sourcebuild.texi: Document arm_v8_neon_ok.\n\n\tgcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_arm_v8_neon_ok):\n\tNew procedure.\n\t(add_options_for_arm_v8_neon): Likewise.\n\nFrom-SVN: r194245", "tree": {"sha": "7b9d7f077615fb2e7d590b2045d4d999ce3c1eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b9d7f077615fb2e7d590b2045d4d999ce3c1eb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7973996540f699588bb2db60c795e3179869620a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7973996540f699588bb2db60c795e3179869620a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7973996540f699588bb2db60c795e3179869620a"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "9d87b558656deafc6f614ad9a00f86ff00f941fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71aa66e4fd514cbb6dea13f17374ed2f0bba88a4", "patch": "@@ -1,3 +1,7 @@\n+2012-12-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* doc/sourcebuild.texi: Document arm_v8_neon_ok.\n+\n 2012-12-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (neon_itype): Define NEON_RINT enum element."}, {"sha": "ae0568132c0b68bd5be66047f2a9c59c451ae1de", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=71aa66e4fd514cbb6dea13f17374ed2f0bba88a4", "patch": "@@ -1560,6 +1560,10 @@ Some multilibs may be incompatible with these options.\n ARM target supports @code{-mfpu=fp-armv8 -mfloat-abi=softfp}.\n Some multilibs may be incompatible with these options.\n \n+@item arm_v8_neon_ok\n+ARM target supports @code{-mfpu=neon-fp-armv8 -mfloat-abi=softfp}.\n+Some multilibs may be incompatible with these options.\n+\n @item arm_prefer_ldrd_strd\n ARM target prefers @code{LDRD} and @code{STRD} instructions over\n @code{LDM} and @code{STM} instructions."}, {"sha": "f89fe3c502664d01e5c283aa9a85d230d57fa165", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71aa66e4fd514cbb6dea13f17374ed2f0bba88a4", "patch": "@@ -1,3 +1,9 @@\n+2012-12-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_arm_v8_neon_ok):\n+\tNew procedure.\n+\t(add_options_for_arm_v8_neon): Likewise.\n+\n 2012-12-05  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* g++.dg/pr55604.C: New test."}, {"sha": "ef93ad1f56f067af7accd59eb1128b6e31a2b2e2", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71aa66e4fd514cbb6dea13f17374ed2f0bba88a4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=71aa66e4fd514cbb6dea13f17374ed2f0bba88a4", "patch": "@@ -2107,6 +2107,22 @@ proc check_effective_target_arm_v8_vfp_ok {} {\n     }\n }\n \n+# Return 1 if this is an ARM target supporting -mfpu=neon-fp-armv8\n+# -mfloat-abi=softfp\n+proc check_effective_target_arm_v8_neon_ok {} {\n+    if { [check_effective_target_arm32] } {\n+\treturn [check_no_compiler_messages arm_v8_neon_ok object {\n+\t  int foo (void)\n+\t  {\n+\t     __asm__ volatile (\"vrintn.f32 q0, q0\");\n+\t       return 0;\n+\t  }\n+\t} \"-mfpu=neon-fp-armv8 -mfloat-abi=softfp\"]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if this is an ARM target supporting -mfpu=vfp\n # -mfloat-abi=hard.  Some multilibs may be incompatible with these\n # options.\n@@ -2166,6 +2182,13 @@ proc add_options_for_arm_v8_vfp { flags } {\n     return \"$flags -mfpu=fp-armv8 -mfloat-abi=softfp\"\n }\n \n+proc add_options_for_arm_v8_neon { flags } {\n+    if { ! [check_effective_target_arm_v8_neon_ok] } {\n+        return \"$flags\"\n+    }\n+    return \"$flags -mfpu=neon-fp-armv8 -mfloat-abi=softfp\"\n+}\n+\n # Add the options needed for NEON.  We need either -mfloat-abi=softfp\n # or -mfloat-abi=hard, but if one is already specified by the\n # multilib, use it.  Similarly, if a -mfpu option already enables"}]}