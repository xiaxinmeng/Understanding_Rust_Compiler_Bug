{"sha": "8bb81b3c4945dbae8d490e7a4054ddeb5a3b506c", "node_id": "C_kwDOANBUbNoAKDhiYjgxYjNjNDk0NWRiYWU4ZDQ5MGU3YTQwNTRkZGViNWEzYjUwNmM", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-11-30T09:52:28Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-11-30T09:52:28Z"}, "message": "vect: Fix SVE mask_gather_load/store_store tests\n\nIf-conversion now applies rewrite_to_defined_overflow to the\naddress calculation in an IFN_MASK_LOAD.  This means that we\nend up with:\n\n    cast_base = (uintptr_t) base;\n    uncast_sum = cast_base + offset;\n    sum = (orig_type *) uncast_sum;\n\nIf the target supports IFN_MASK_GATHER_LOAD with pointer-sized\noffsets for the given vectype, we wouldn't look through the sum\ncast and so would needlessly vectorise the uncast_sum addition.\n\nThis showed up as several failures in gcc.target/aarch64/sve.\n\ngcc/\n\t* tree-vect-data-refs.c (vect_check_gather_scatter): Continue\n\tprocessing conversions if the current offset is a pointer.", "tree": {"sha": "ddce352a9a236aa554657cb5f1c6a412ddb6a7c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddce352a9a236aa554657cb5f1c6a412ddb6a7c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bb81b3c4945dbae8d490e7a4054ddeb5a3b506c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bb81b3c4945dbae8d490e7a4054ddeb5a3b506c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bb81b3c4945dbae8d490e7a4054ddeb5a3b506c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bb81b3c4945dbae8d490e7a4054ddeb5a3b506c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b577047eec65936a5299cac13dd7b73cdfc4ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b577047eec65936a5299cac13dd7b73cdfc4ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b577047eec65936a5299cac13dd7b73cdfc4ae4"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "888ad72f3a90b6e13ed4ac15f376ec12de5f7c56", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb81b3c4945dbae8d490e7a4054ddeb5a3b506c/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb81b3c4945dbae8d490e7a4054ddeb5a3b506c/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=8bb81b3c4945dbae8d490e7a4054ddeb5a3b506c", "patch": "@@ -4139,6 +4139,7 @@ vect_check_gather_scatter (stmt_vec_info stmt_info, loop_vec_info loop_vinfo,\n \t  /* Don't include the conversion if the target is happy with\n \t     the current offset type.  */\n \t  if (use_ifn_p\n+\t      && !POINTER_TYPE_P (TREE_TYPE (off))\n \t      && vect_gather_scatter_fn_p (loop_vinfo, DR_IS_READ (dr),\n \t\t\t\t\t   masked_p, vectype, memory_type,\n \t\t\t\t\t   TREE_TYPE (off), scale, &ifn,"}]}