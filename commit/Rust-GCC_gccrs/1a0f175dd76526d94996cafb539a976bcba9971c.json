{"sha": "1a0f175dd76526d94996cafb539a976bcba9971c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEwZjE3NWRkNzY1MjZkOTQ5OTZjYWZiNTM5YTk3NmJjYmE5OTcxYw==", "commit": {"author": {"name": "Ruan Beihong", "email": "ruanbeihong@gmail.com", "date": "2008-11-13T22:48:39Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-11-13T22:48:39Z"}, "message": "loongson.md (<u>div<mode>3, [...]): New patterns.\n\ngcc/\n2008-11-13  Ruan Beihong  <ruanbeihong@gmail.com>\n\n\t* config/mips/loongson.md (<u>div<mode>3, <u>mod<mode>3): New patterns.\n\t* config/mips/loongson2ef.md (ls2_imult): Handle imul3nc.\n\t(ls2_idiv): Likewise idiv3.\n\t(ls2_prefetch): New reservation.\n\t* config/mips/mips.h (ISA_HAS_PREFETCH): Add TARGET_LOONGSON_2EF.\n\t* config/mips/mips.md (type): Add imul3nc and idiv3.\n\t(length): Handle idiv3.\n\t(any_mod): New code_iterator.\n\t(u): Handle MOD and UMOD.\n\t(mul<mode>3): Generate mul<mode>3_mul3_ls2ef on Loongson targets.\n\t(prefetch): Handle TARGET_LOONGSON_2EF.\n\nFrom-SVN: r141835", "tree": {"sha": "9ccbf6a4319b8c13439841b5f342cdfd7485d3d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ccbf6a4319b8c13439841b5f342cdfd7485d3d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a0f175dd76526d94996cafb539a976bcba9971c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a0f175dd76526d94996cafb539a976bcba9971c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a0f175dd76526d94996cafb539a976bcba9971c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a0f175dd76526d94996cafb539a976bcba9971c/comments", "author": {"login": "jamesruan", "id": 110096, "node_id": "MDQ6VXNlcjExMDA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/110096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesruan", "html_url": "https://github.com/jamesruan", "followers_url": "https://api.github.com/users/jamesruan/followers", "following_url": "https://api.github.com/users/jamesruan/following{/other_user}", "gists_url": "https://api.github.com/users/jamesruan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesruan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesruan/subscriptions", "organizations_url": "https://api.github.com/users/jamesruan/orgs", "repos_url": "https://api.github.com/users/jamesruan/repos", "events_url": "https://api.github.com/users/jamesruan/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesruan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0daa811069488228c01548a63647dcb3fe09c1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0daa811069488228c01548a63647dcb3fe09c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0daa811069488228c01548a63647dcb3fe09c1a"}], "stats": {"total": 78, "additions": 70, "deletions": 8}, "files": [{"sha": "ece73ea4ca09042f8e682f517693dfac71b0c1e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a0f175dd76526d94996cafb539a976bcba9971c", "patch": "@@ -1,3 +1,17 @@\n+2008-11-13  Ruan Beihong  <ruanbeihong@gmail.com>\n+\n+\t* config/mips/loongson.md (<u>div<mode>3, <u>mod<mode>3): New patterns.\n+\t* config/mips/loongson2ef.md (ls2_imult): Handle imul3nc.\n+\t(ls2_idiv): Likewise idiv3.\n+\t(ls2_prefetch): New reservation.\n+\t* config/mips/mips.h (ISA_HAS_PREFETCH): Add TARGET_LOONGSON_2EF.\n+\t* config/mips/mips.md (type): Add imul3nc and idiv3.\n+\t(length): Handle idiv3.\n+\t(any_mod): New code_iterator.\n+\t(u): Handle MOD and UMOD.\n+\t(mul<mode>3): Generate mul<mode>3_mul3_ls2ef on Loongson targets.\n+\t(prefetch): Handle TARGET_LOONGSON_2EF.\n+\n 2008-11-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/27017"}, {"sha": "8cdb5f466e9cd63c451ddf1cb19a615ae06f0ca4", "filename": "gcc/config/mips/loongson.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2Fconfig%2Fmips%2Floongson.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2Fconfig%2Fmips%2Floongson.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Floongson.md?ref=1a0f175dd76526d94996cafb539a976bcba9971c", "patch": "@@ -473,3 +473,23 @@\n   \"TARGET_HARD_FLOAT && TARGET_LOONGSON_VECTORS\"\n   \"punpckl<V_stretch_half_suffix>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fdiv\")])\n+\n+;; Integer division and modulus.\n+\n+(define_insn \"<u>div<mode>3\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=&d\")\n+\t(any_div:GPR (match_operand:GPR 1 \"register_operand\" \"d\")\n+\t\t     (match_operand:GPR 2 \"register_operand\" \"d\")))]\n+  \"TARGET_LOONGSON_2EF\"\n+  { return mips_output_division (\"<d>div<u>.g\\t%0,%1,%2\", operands); }\n+  [(set_attr \"type\" \"idiv3\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"<u>mod<mode>3\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=&d\")\n+\t(any_mod:GPR (match_operand:GPR 1 \"register_operand\" \"d\")\n+\t\t     (match_operand:GPR 2 \"register_operand\" \"d\")))]\n+  \"TARGET_LOONGSON_2EF\"\n+  { return mips_output_division (\"<d>mod<u>.g\\t%0,%1,%2\", operands); }\n+  [(set_attr \"type\" \"idiv3\")\n+   (set_attr \"mode\" \"<MODE>\")])"}, {"sha": "df3de33f809f8efcdc2b87b73b9eff740c47ce97", "filename": "gcc/config/mips/loongson2ef.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2Fconfig%2Fmips%2Floongson2ef.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2Fconfig%2Fmips%2Floongson2ef.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Floongson2ef.md?ref=1a0f175dd76526d94996cafb539a976bcba9971c", "patch": "@@ -160,14 +160,14 @@\n ;; Reservation for integer multiplication instructions.\n (define_insn_reservation \"ls2_imult\" 5\n   (and (eq_attr \"cpu\" \"loongson_2e,loongson_2f\")\n-       (eq_attr \"type\" \"imul,imul3\"))\n+       (eq_attr \"type\" \"imul,imul3nc\"))\n   \"ls2_alu2,ls2_alu2_core\")\n \n ;; Reservation for integer division / remainder instructions.\n ;; These instructions use the SRT algorithm and hence take 2-38 cycles.\n (define_insn_reservation \"ls2_idiv\" 20\n   (and (eq_attr \"cpu\" \"loongson_2e,loongson_2f\")\n-       (eq_attr \"type\" \"idiv\"))\n+       (eq_attr \"type\" \"idiv,idiv3\"))\n   \"ls2_alu2,ls2_alu2_core*18\")\n \n ;; Reservation for memory load instructions.\n@@ -176,6 +176,11 @@\n        (eq_attr \"type\" \"load,fpload,mfc,mtc\"))\n   \"ls2_mem\")\n \n+(define_insn_reservation \"ls2_prefetch\" 0\n+  (and (eq_attr \"cpu\" \"loongson_2e,loongson_2f\")\n+       (eq_attr \"type\" \"prefetch,prefetchx\"))\n+  \"ls2_mem\")\n+\n ;; Reservation for memory store instructions.\n ;; With stores we assume they don't alias with dependent loads.\n ;; Therefore we set the latency to zero."}, {"sha": "354c4c5f1c37d97a340802130e825d77b04e85c6", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=1a0f175dd76526d94996cafb539a976bcba9971c", "patch": "@@ -919,6 +919,7 @@ enum mips_code_readable_setting {\n \n /* ISA has data prefetch instructions.  This controls use of 'pref'.  */\n #define ISA_HAS_PREFETCH\t((ISA_MIPS4\t\t\t\t\\\n+\t\t\t\t  || TARGET_LOONGSON_2EF\t\t\\\n \t\t\t\t  || ISA_MIPS32\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n \t\t\t\t  || ISA_MIPS64\t\t\t\t\\"}, {"sha": "222e41d7369acaffb3c4ef716effa6effa710e57", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a0f175dd76526d94996cafb539a976bcba9971c/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=1a0f175dd76526d94996cafb539a976bcba9971c", "patch": "@@ -351,8 +351,10 @@\n ;; trap\t\ttrap if instructions\n ;; imul\t\tinteger multiply 2 operands\n ;; imul3\tinteger multiply 3 operands\n+;; imul3nc\tinteger multiply 3 operands without clobbering HI/LO\n ;; imadd\tinteger multiply-add\n-;; idiv\t\tinteger divide\n+;; idiv\t\tinteger divide 2 operands\n+;; idiv3\tinteger divide 3 operands\n ;; move\t\tinteger register move ({,D}ADD{,U} with rt = 0)\n ;; fmove\tfloating point register move\n ;; fadd\t\tfloating point add/subtract\n@@ -376,9 +378,9 @@\n (define_attr \"type\"\n   \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,\n    prefetch,prefetchx,condmove,mtc,mfc,mthilo,mfhilo,const,arith,logical,\n-   shift,slt,signext,clz,pop,trap,imul,imul3,imadd,idiv,move,fmove,fadd,fmul,\n-   fmadd,fdiv,frdiv,frdiv1,frdiv2,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,frsqrt1,\n-   frsqrt2,multi,nop,ghost\"\n+   shift,slt,signext,clz,pop,trap,imul,imul3,imul3nc,imadd,idiv,idiv3,move,\n+   fmove,fadd,fmul,fmadd,fdiv,frdiv,frdiv1,frdiv2,fabs,fneg,fcmp,fcvt,fsqrt,\n+   frsqrt,frsqrt1,frsqrt2,multi,nop,ghost\"\n   (cond [(eq_attr \"jal\" \"!unset\") (const_string \"call\")\n \t (eq_attr \"got\" \"load\") (const_string \"load\")\n \n@@ -553,7 +555,7 @@\n \t\t    (ne (symbol_ref \"TARGET_FIX_VR4120\") (const_int 0))))\n \t  (const_int 8)\n \n-\t  (eq_attr \"type\" \"idiv\")\n+\t  (eq_attr \"type\" \"idiv,idiv3\")\n \t  (symbol_ref \"mips_idiv_insns () * 4\")\n \t  ] (const_int 4)))\n \n@@ -787,6 +789,10 @@\n ;; from the same template.\n (define_code_iterator any_div [div udiv])\n \n+;; This code iterator allows unsigned and signed modulus to be generated\n+;; from the same template.\n+(define_code_iterator any_mod [mod umod])\n+\n ;; This code iterator allows all native floating-point comparisons to be\n ;; generated from the same template.\n (define_code_iterator fcond [unordered uneq unlt unle eq lt le])\n@@ -809,6 +815,7 @@\n ;; \"u\" when doing an unsigned operation.\n (define_code_attr u [(sign_extend \"\") (zero_extend \"u\")\n \t\t     (div \"\") (udiv \"u\")\n+\t\t     (mod \"\") (umod \"u\")\n \t\t     (gt \"\") (gtu \"u\")\n \t\t     (ge \"\") (geu \"u\")\n \t\t     (lt \"\") (ltu \"u\")\n@@ -1357,7 +1364,10 @@\n \t\t  (match_operand:GPR 2 \"register_operand\")))]\n   \"\"\n {\n-  if (ISA_HAS_<D>MUL3)\n+  if (TARGET_LOONGSON_2EF)\n+    emit_insn (gen_mul<mode>3_mul3_ls2ef (operands[0], operands[1],\n+                                          operands[2]));\n+  else if (ISA_HAS_<D>MUL3)\n     emit_insn (gen_mul<mode>3_mul3 (operands[0], operands[1], operands[2]));\n   else if (TARGET_FIX_R4000)\n     emit_insn (gen_mul<mode>3_r4000 (operands[0], operands[1], operands[2]));\n@@ -1367,6 +1377,15 @@\n   DONE;\n })\n \n+(define_insn \"mul<mode>3_mul3_ls2ef\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n+        (mult:GPR (match_operand:GPR 1 \"register_operand\" \"d\")\n+                  (match_operand:GPR 2 \"register_operand\" \"d\")))]\n+  \"TARGET_LOONGSON_2EF\"\n+  \"<d>multu.g\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul3nc\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"mul<mode>3_mul3\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d,l\")\n \t(mult:GPR (match_operand:GPR 1 \"register_operand\" \"d,d\")\n@@ -6128,6 +6147,9 @@\n \t     (match_operand 2 \"const_int_operand\" \"n\"))]\n   \"ISA_HAS_PREFETCH && TARGET_EXPLICIT_RELOCS\"\n {\n+  if (TARGET_LOONGSON_2EF)\n+    /* Loongson 2[ef] use load to $0 to perform prefetching.  */\n+    return \"ld\\t$0,%a0\";\n   operands[1] = mips_prefetch_cookie (operands[1], operands[2]);\n   return \"pref\\t%1,%a0\";\n }"}]}