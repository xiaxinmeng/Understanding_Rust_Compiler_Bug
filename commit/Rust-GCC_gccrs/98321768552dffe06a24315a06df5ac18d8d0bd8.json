{"sha": "98321768552dffe06a24315a06df5ac18d8d0bd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgzMjE3Njg1NTJkZmZlMDZhMjQzMTVhMDZkZjVhYzE4ZDhkMGJkOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-01-22T14:43:55Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-01-22T14:43:55Z"}, "message": "re PR rtl-optimization/64688 (internal compiler error: Max. number of generated reload insns per insn is achieved (90))\n\n\tPR target/64688\n\tPR target/64477\n\t* config/i386/sse.md (vec_set<mode>_0): Use (Yi/r/C) constraints\n\tfor alternative 3.\n\ntestsuite/ChangeLog:\n\n\tPR target/64688\n\t* g++.dg/pr64688.C: New test.\n\nFrom-SVN: r220000", "tree": {"sha": "ce20eaa23273249481a78021728f472781b62270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce20eaa23273249481a78021728f472781b62270"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98321768552dffe06a24315a06df5ac18d8d0bd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98321768552dffe06a24315a06df5ac18d8d0bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98321768552dffe06a24315a06df5ac18d8d0bd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98321768552dffe06a24315a06df5ac18d8d0bd8/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9ed6b1e27a1845351b0f4ed019266c3a202da5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ed6b1e27a1845351b0f4ed019266c3a202da5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9ed6b1e27a1845351b0f4ed019266c3a202da5e"}], "stats": {"total": 87, "additions": 85, "deletions": 2}, "files": [{"sha": "82883c1b4ac0a5301aaad144925b78a9d1eb70bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98321768552dffe06a24315a06df5ac18d8d0bd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98321768552dffe06a24315a06df5ac18d8d0bd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98321768552dffe06a24315a06df5ac18d8d0bd8", "patch": "@@ -1,3 +1,10 @@\n+2015-22-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/64688\n+\tPR target/64477\n+\t* config/i386/sse.md (vec_set<mode>_0): Use (Yi/r/C) constraints\n+\tfor alternative 3.\n+\n 2015-01-22  Trevor Saunders  <tsaunders@mozilla.com>\n \n \tPR middle-end/63325"}, {"sha": "e19888e4fea7981e857bbdbd8cf91d273120948b", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98321768552dffe06a24315a06df5ac18d8d0bd8/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98321768552dffe06a24315a06df5ac18d8d0bd8/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=98321768552dffe06a24315a06df5ac18d8d0bd8", "patch": "@@ -6391,11 +6391,11 @@\n ;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"vec_set<mode>_0\"\n   [(set (match_operand:VI4F_128 0 \"nonimmediate_operand\"\n-\t  \"=Yr,*v,v,v ,x,x,v,Yr ,*x ,x  ,m ,m   ,m\")\n+\t  \"=Yr,*v,v,Yi,x,x,v,Yr ,*x ,x  ,m ,m   ,m\")\n \t(vec_merge:VI4F_128\n \t  (vec_duplicate:VI4F_128\n \t    (match_operand:<ssescalarmode> 2 \"general_operand\"\n-\t  \" Yr,*v,m,*r,m,x,v,*rm,*rm,*rm,!x,!*re,!*fF\"))\n+\t  \" Yr,*v,m,r ,m,x,v,*rm,*rm,*rm,!x,!*re,!*fF\"))\n \t  (match_operand:VI4F_128 1 \"vector_move_operand\"\n \t  \" C , C,C,C ,C,0,v,0  ,0  ,x  ,0 ,0   ,0\")\n \t  (const_int 1)))]"}, {"sha": "8e6dadc2d4371dceb137d535f31e18a7c6a26d1e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98321768552dffe06a24315a06df5ac18d8d0bd8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98321768552dffe06a24315a06df5ac18d8d0bd8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98321768552dffe06a24315a06df5ac18d8d0bd8", "patch": "@@ -1,3 +1,8 @@\n+2015-22-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/64688\n+\t* g++.dg/pr64688.C: New test.\n+\n 2015-01-22  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* gcc.target/i386/chkp-always_inline.c (f1): Make static"}, {"sha": "3525e49b735bdf08a27b750932975daa952a0260", "filename": "gcc/testsuite/g++.dg/pr64688.C", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98321768552dffe06a24315a06df5ac18d8d0bd8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr64688.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98321768552dffe06a24315a06df5ac18d8d0bd8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr64688.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr64688.C?ref=98321768552dffe06a24315a06df5ac18d8d0bd8", "patch": "@@ -0,0 +1,71 @@\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-options \"-std=c++11 -O3 -march=westmere\" }\n+\n+template <typename T> struct A { typedef typename T::next type; };\n+template <typename> struct B;\n+template <typename T> struct N : T {};\n+template <int N> struct C {\n+  static const int value = N;\n+  typedef C<N + 1> next;\n+};\n+template <typename Sequence>\n+struct R : N<typename B<typename Sequence::tag>::template P<Sequence>> {};\n+template <typename Base> struct O : Base {\n+  typedef typename A<typename Base::size>::type size;\n+};\n+template <typename = int> struct D {\n+  typedef int tag;\n+  typedef C<0> size;\n+};\n+template <> struct B<int> {\n+  template <typename> struct P : O<O<O<D<>>>>::size {};\n+};\n+template <typename> struct F;\n+template <typename> struct G;\n+template <typename, typename, int> struct H;\n+template <typename Element, typename Layout> struct H<Element, Layout, 3> {};\n+template <int, typename E, typename L, int N> unsigned char at_c(H<E, L, N>) {}\n+template <typename> class I;\n+template <typename> class J;\n+template <typename> class K;\n+template <typename, typename> struct Q;\n+struct L {\n+  typedef Q<unsigned char, F<O<O<O<D<>>>>>> *type;\n+};\n+template <typename XIterator> struct M { typedef K<J<I<XIterator>>> view_t; };\n+template <typename, typename>\n+struct Q : H<unsigned, F<int>, R<O<O<O<D<>>>>>::value> {};\n+template <typename Iterator> struct G<I<Iterator>> { typedef Iterator type; };\n+template <typename> class J {\n+public:\n+  typedef G<I<Q<unsigned, int> *>>::type x_iterator;\n+};\n+template <typename> class K {\n+public:\n+  J<int>::x_iterator row_begin(int);\n+};\n+template <typename Op> void measure_time(Op p1) { p1(); }\n+template <typename, typename> struct fill_nongil_t;\n+template <typename T, typename P>\n+struct fill_nongil_t<K<J<I<Q<T, F<O<O<O<D<>>>>>> *>>>, P> {\n+  typedef K<J<I<Q<T, F<O<O<O<D<>>>>>> *>>> View;\n+  View _v;\n+  P _p;\n+  fill_nongil_t(View, P);\n+  void operator()() {\n+    T *first = (T *)_v.row_begin(0);\n+    T last;\n+    while (first != &last) {\n+      first[0] = first[1] = at_c<1>(_p);\n+      first[2] = at_c<2>(_p);\n+      first += 3;\n+    }\n+  }\n+};\n+template <typename, typename> void test_fill(int) {\n+  M<L::type>::view_t __trans_tmp_1;\n+  measure_time(fill_nongil_t<K<J<I<Q<unsigned char, F<O<O<O<D<>>>>>> *>>>,\n+                             Q<unsigned char, F<O<O<O<D<>>>>>>>(\n+      __trans_tmp_1, Q<unsigned char, F<O<O<O<D<>>>>>>()));\n+}\n+void performance_testtest_method() { test_fill<K<int>, Q<unsigned, int>>(0); }"}]}