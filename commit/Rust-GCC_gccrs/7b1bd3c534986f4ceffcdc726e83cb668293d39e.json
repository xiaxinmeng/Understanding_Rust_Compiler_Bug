{"sha": "7b1bd3c534986f4ceffcdc726e83cb668293d39e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IxYmQzYzUzNDk4NmY0Y2VmZmNkYzcyNmU4M2NiNjY4MjkzZDM5ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-11-27T02:47:44Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-11-27T02:47:44Z"}, "message": "hooks.c (hook_bool_void_false, [...]): Rename so that the return type is first.\n\n        * hooks.c (hook_bool_void_false, hook_void_tree_int,\n        hook_void_FILEptr_constcharptr): Rename so that the return\n        type is first.\n        (hook_int_tree_tree_1, hook_void_tree, hook_void_tree_treeptr,\n        hook_bool_tree_false): New.\n        * hooks.h: Update.\n        * langhooks-def.h: Update for renames.\n        * target-def.h: Likewise.\n        * tree.c (default_comp_type_attributes,\n        default_set_default_type_attributes, default_insert_attributes,\n        default_function_attribute_inlinable_p,\n        default_ms_bitfield_layout_p): Remove.\n        * tree.h: Update.\n\nFrom-SVN: r59556", "tree": {"sha": "ac42a4633b86b62e66e20e713a5d8c2dcb04f129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac42a4633b86b62e66e20e713a5d8c2dcb04f129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b1bd3c534986f4ceffcdc726e83cb668293d39e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1bd3c534986f4ceffcdc726e83cb668293d39e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b1bd3c534986f4ceffcdc726e83cb668293d39e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1bd3c534986f4ceffcdc726e83cb668293d39e/comments", "author": null, "committer": null, "parents": [{"sha": "44571d6e4642d00a7adeb9564c838ac500eeabbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44571d6e4642d00a7adeb9564c838ac500eeabbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44571d6e4642d00a7adeb9564c838ac500eeabbc"}], "stats": {"total": 146, "additions": 68, "deletions": 78}, "files": [{"sha": "fa7d688de3bcf3440b6d68128f778a01c16b49fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b1bd3c534986f4ceffcdc726e83cb668293d39e", "patch": "@@ -1,3 +1,19 @@\n+2002-11-26  Richard Henderson  <rth@redhat.com>\n+\n+\t* hooks.c (hook_bool_void_false, hook_void_tree_int,\n+\thook_void_FILEptr_constcharptr): Rename so that the return\n+\ttype is first.\n+\t(hook_int_tree_tree_1, hook_void_tree, hook_void_tree_treeptr,\n+\thook_bool_tree_false): New.\n+\t* hooks.h: Update.\n+\t* langhooks-def.h: Update for renames.\n+\t* target-def.h: Likewise.\n+\t* tree.c (default_comp_type_attributes,\n+\tdefault_set_default_type_attributes, default_insert_attributes, \n+\tdefault_function_attribute_inlinable_p,\n+\tdefault_ms_bitfield_layout_p): Remove.\n+\t* tree.h: Update.\n+\n 2002-11-26  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa-protos.h (function_value): New prototype."}, {"sha": "6569a38d7a0049ed486cab73ccf0bf1fb252cf29", "filename": "gcc/hooks.c", "status": "modified", "additions": 32, "deletions": 11, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Fhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Fhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.c?ref=7b1bd3c534986f4ceffcdc726e83cb668293d39e", "patch": "@@ -34,30 +34,22 @@ hook_void_void ()\n \n /* Generic hook that takes no arguments and returns false.  */\n bool\n-hook_void_bool_false ()\n-{\n-  return false;\n-}\n-\n-/* Generic hook that takes (tree) and returns false.  */\n-bool\n-hook_tree_bool_false (a)\n-     tree a ATTRIBUTE_UNUSED;\n+hook_bool_void_false ()\n {\n   return false;\n }\n \n /* Generic hook that takes (tree, int) and does nothing.  */\n void\n-hook_tree_int_void (a, b)\n+hook_void_tree_int (a, b)\n      tree a ATTRIBUTE_UNUSED;\n      int b ATTRIBUTE_UNUSED;\n {\n }\n \n /* Generic hook that takes (FILE *, const char *) and does nothing.  */\n void\n-hook_FILEptr_constcharptr_void (a, b)\n+hook_void_FILEptr_constcharptr (a, b)\n      FILE *a ATTRIBUTE_UNUSED;\n      const char *b ATTRIBUTE_UNUSED;\n {\n@@ -93,3 +85,32 @@ default_can_output_mi_thunk_no_vcall (a, b, c, d)\n {\n   return c == 0;\n }\n+\n+/* ??? Used for comp_type_attributes, which ought to return bool.  */\n+int\n+hook_int_tree_tree_1 (a, b)\n+     tree a ATTRIBUTE_UNUSED;\n+     tree b ATTRIBUTE_UNUSED;\n+{\n+  return 1;\n+}\n+\n+void\n+hook_void_tree (a)\n+     tree a ATTRIBUTE_UNUSED;\n+{\n+}\n+\n+void\n+hook_void_tree_treeptr (a, b)\n+     tree a ATTRIBUTE_UNUSED;\n+     tree *b ATTRIBUTE_UNUSED;\n+{\n+}\n+\n+bool\n+hook_bool_tree_false (a)\n+     tree a ATTRIBUTE_UNUSED;\n+{\n+  return false;\n+}"}, {"sha": "4e09da932a3c944272ebabcdf236f1bbbbf865fb", "filename": "gcc/hooks.h", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Fhooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Fhooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.h?ref=7b1bd3c534986f4ceffcdc726e83cb668293d39e", "patch": "@@ -22,16 +22,21 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #ifndef GCC_HOOKS_H\n #define GCC_HOOKS_H\n \n-bool hook_void_bool_false PARAMS ((void));\n-bool hook_tree_bool_false PARAMS ((tree));\n-void hook_tree_int_void PARAMS ((tree, int));\n-void hook_void_void PARAMS ((void));\n-void hook_FILEptr_constcharptr_void PARAMS ((FILE *, const char *));\n+bool hook_bool_void_false PARAMS ((void));\n+bool hook_bool_tree_false PARAMS ((tree));\n bool hook_bool_tree_hwi_hwi_tree_false\n   PARAMS ((tree, HOST_WIDE_INT, HOST_WIDE_INT, tree));\n bool hook_bool_tree_hwi_hwi_tree_true\n   PARAMS ((tree, HOST_WIDE_INT, HOST_WIDE_INT, tree));\n \n+void hook_void_tree_int PARAMS ((tree, int));\n+void hook_void_void PARAMS ((void));\n+void hook_void_FILEptr_constcharptr PARAMS ((FILE *, const char *));\n+void hook_void_tree PARAMS ((tree));\n+void hook_void_tree_treeptr PARAMS ((tree, tree *));\n+\n+int hook_int_tree_tree_1 PARAMS ((tree, tree));\n+\n bool default_can_output_mi_thunk_no_vcall\n   PARAMS ((tree, HOST_WIDE_INT, HOST_WIDE_INT, tree));\n "}, {"sha": "8de0d6a41f2e4984207b67a1fec93a4851ffc1a7", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=7b1bd3c534986f4ceffcdc726e83cb668293d39e", "patch": "@@ -90,7 +90,7 @@ tree lhd_tree_inlining_convert_parm_for_inlining PARAMS ((tree, tree, tree));\n #define LANG_HOOKS_CLEAR_BINDING_STACK\tlhd_clear_binding_stack\n #define LANG_HOOKS_INIT_OPTIONS\t\tlhd_do_nothing\n #define LANG_HOOKS_DECODE_OPTION\tlhd_decode_option\n-#define LANG_HOOKS_POST_OPTIONS\t\thook_void_bool_false\n+#define LANG_HOOKS_POST_OPTIONS\t\thook_bool_void_false\n #define LANG_HOOKS_GET_ALIAS_SET\tlhd_get_alias_set\n #define LANG_HOOKS_EXPAND_CONSTANT\tlhd_return_tree\n #define LANG_HOOKS_EXPAND_EXPR\t\tlhd_expand_expr\n@@ -141,7 +141,7 @@ tree lhd_tree_inlining_convert_parm_for_inlining PARAMS ((tree, tree, tree));\n #define LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P \\\n   lhd_tree_inlining_anon_aggr_type_p\n #define LANG_HOOKS_TREE_INLINING_VAR_MOD_TYPE_P \\\n-  hook_tree_bool_false\n+  hook_bool_tree_false\n #define LANG_HOOKS_TREE_INLINING_START_INLINING \\\n   lhd_tree_inlining_start_inlining\n #define LANG_HOOKS_TREE_INLINING_END_INLINING \\"}, {"sha": "b866c858de78992ae3f9e098f7d71fae20355d5b", "filename": "gcc/target-def.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=7b1bd3c534986f4ceffcdc726e83cb668293d39e", "patch": "@@ -221,11 +221,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #define TARGET_MERGE_DECL_ATTRIBUTES merge_decl_attributes\n #define TARGET_MERGE_TYPE_ATTRIBUTES merge_type_attributes\n #define TARGET_ATTRIBUTE_TABLE NULL\n-#define TARGET_COMP_TYPE_ATTRIBUTES default_comp_type_attributes\n-#define TARGET_SET_DEFAULT_TYPE_ATTRIBUTES default_set_default_type_attributes\n-#define TARGET_INSERT_ATTRIBUTES default_insert_attributes\n-#define TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P default_function_attribute_inlinable_p\n-#define TARGET_MS_BITFIELD_LAYOUT_P default_ms_bitfield_layout_p\n \n /* In builtins.c.  */\n #define TARGET_INIT_BUILTINS default_init_builtins\n@@ -245,14 +240,19 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #endif\n \n /* In hook.c.  */\n-#define TARGET_CANNOT_MODIFY_JUMPS_P hook_void_bool_false\n+#define TARGET_CANNOT_MODIFY_JUMPS_P hook_bool_void_false\n+#define TARGET_COMP_TYPE_ATTRIBUTES hook_int_tree_tree_1\n+#define TARGET_SET_DEFAULT_TYPE_ATTRIBUTES hook_void_tree\n+#define TARGET_INSERT_ATTRIBUTES hook_void_tree_treeptr\n+#define TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P hook_bool_tree_false\n+#define TARGET_MS_BITFIELD_LAYOUT_P hook_bool_tree_false\n \n #ifndef TARGET_IN_SMALL_DATA_P\n-#define TARGET_IN_SMALL_DATA_P hook_tree_bool_false\n+#define TARGET_IN_SMALL_DATA_P hook_bool_tree_false\n #endif\n \n #ifndef TARGET_ENCODE_SECTION_INFO\n-#define TARGET_ENCODE_SECTION_INFO hook_tree_int_void\n+#define TARGET_ENCODE_SECTION_INFO hook_void_tree_int\n #endif\n \n /* The whole shebang.  */"}, {"sha": "c926b31092380be050dd02fda98b43dfa28dac38", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=7b1bd3c534986f4ceffcdc726e83cb668293d39e", "patch": "@@ -2552,53 +2552,6 @@ build_type_attribute_variant (ttype, attribute)\n   return ttype;\n }\n \n-/* Default value of targetm.comp_type_attributes that always returns 1.  */\n-\n-int\n-default_comp_type_attributes (type1, type2)\n-     tree type1 ATTRIBUTE_UNUSED;\n-     tree type2 ATTRIBUTE_UNUSED;\n-{\n-  return 1;\n-}\n-\n-/* Default version of targetm.set_default_type_attributes that always does\n-   nothing.  */\n-\n-void\n-default_set_default_type_attributes (type)\n-     tree type ATTRIBUTE_UNUSED;\n-{\n-}\n-\n-/* Default version of targetm.insert_attributes that always does nothing.  */\n-void\n-default_insert_attributes (decl, attr_ptr)\n-     tree decl ATTRIBUTE_UNUSED;\n-     tree *attr_ptr ATTRIBUTE_UNUSED;\n-{\n-}\n-\n-/* Default value of targetm.function_attribute_inlinable_p that always\n-   returns false.  */\n-bool\n-default_function_attribute_inlinable_p (fndecl)\n-     tree fndecl ATTRIBUTE_UNUSED;\n-{\n-  /* By default, functions with machine attributes cannot be inlined.  */\n-  return false;\n-}\n-\n-/* Default value of targetm.ms_bitfield_layout_p that always returns\n-   false.  */\n-bool\n-default_ms_bitfield_layout_p (record)\n-     tree record ATTRIBUTE_UNUSED;\n-{\n-  /* By default, GCC does not use the MS VC++ bitfield layout rules.  */\n-  return false;\n-}\n-\n /* Return nonzero if IDENT is a valid name for attribute ATTR,\n    or zero if not.\n "}, {"sha": "b020eceb1091de3fa297490fd9f3b79d39b08766", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1bd3c534986f4ceffcdc726e83cb668293d39e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=7b1bd3c534986f4ceffcdc726e83cb668293d39e", "patch": "@@ -2354,11 +2354,6 @@ enum attribute_flags\n \n extern tree merge_decl_attributes PARAMS ((tree, tree));\n extern tree merge_type_attributes PARAMS ((tree, tree));\n-extern int default_comp_type_attributes PARAMS ((tree, tree));\n-extern void default_set_default_type_attributes PARAMS ((tree));\n-extern void default_insert_attributes PARAMS ((tree, tree *));\n-extern bool default_function_attribute_inlinable_p PARAMS ((tree));\n-extern bool default_ms_bitfield_layout_p PARAMS ((tree));\n struct cpp_reader;\n extern void default_register_cpp_builtins PARAMS ((struct cpp_reader *));\n "}]}