{"sha": "2c41c19d5dfc3de0c0b149dc0846c08422c5dded", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM0MWMxOWQ1ZGZjM2RlMGMwYjE0OWRjMDg0NmMwODQyMmM1ZGRlZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-05-02T13:59:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-05-02T13:59:38Z"}, "message": "graphds.h (struct graph): Add obstack member.\n\n2013-05-02  Richard Biener  <rguenther@suse.de>\n\n\t* graphds.h (struct graph): Add obstack member.\n\t* graphds.c (new_graph): Initialize obstack and allocate\n\tvertices from it.\n\t(add_edge): Allocate edge from the obstack.\n\t(free_graph): Free the obstack instead of all edges and\n\tvertices.\n\nFrom-SVN: r198539", "tree": {"sha": "849d92074f65867ad3f1ba5437908e05b47c65e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/849d92074f65867ad3f1ba5437908e05b47c65e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c41c19d5dfc3de0c0b149dc0846c08422c5dded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c41c19d5dfc3de0c0b149dc0846c08422c5dded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c41c19d5dfc3de0c0b149dc0846c08422c5dded", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c41c19d5dfc3de0c0b149dc0846c08422c5dded/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b47039cde38d852471193033965e9d3e40e97bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b47039cde38d852471193033965e9d3e40e97bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b47039cde38d852471193033965e9d3e40e97bc"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "cf3c3e375aff105b83f9ec785c5bbdaa206c93db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c41c19d5dfc3de0c0b149dc0846c08422c5dded/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c41c19d5dfc3de0c0b149dc0846c08422c5dded/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c41c19d5dfc3de0c0b149dc0846c08422c5dded", "patch": "@@ -1,3 +1,12 @@\n+2013-05-02  Richard Biener  <rguenther@suse.de>\n+\n+\t* graphds.h (struct graph): Add obstack member.\n+\t* graphds.c (new_graph): Initialize obstack and allocate\n+\tvertices from it.\n+\t(add_edge): Allocate edge from the obstack.\n+\t(free_graph): Free the obstack instead of all edges and\n+\tvertices.\n+\n 2013-05-02  Teresa Johnson  <tejohnson@google.com>\n \n \t* loop-unswitch.c (unswitch_loop): Use helper routines with rounding"}, {"sha": "d009c1375c2054efb49b36dd688578cb1cd64b48", "filename": "gcc/graphds.c", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c41c19d5dfc3de0c0b149dc0846c08422c5dded/gcc%2Fgraphds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c41c19d5dfc3de0c0b149dc0846c08422c5dded/gcc%2Fgraphds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphds.c?ref=2c41c19d5dfc3de0c0b149dc0846c08422c5dded", "patch": "@@ -58,8 +58,10 @@ new_graph (int n_vertices)\n {\n   struct graph *g = XNEW (struct graph);\n \n+  gcc_obstack_init (&g->ob);\n   g->n_vertices = n_vertices;\n-  g->vertices = XCNEWVEC (struct vertex, n_vertices);\n+  g->vertices = XOBNEWVEC (&g->ob, struct vertex, n_vertices);\n+  memset (g->vertices, 0, sizeof (struct vertex) * n_vertices);\n \n   return g;\n }\n@@ -69,10 +71,9 @@ new_graph (int n_vertices)\n struct graph_edge *\n add_edge (struct graph *g, int f, int t)\n {\n-  struct graph_edge *e = XNEW (struct graph_edge);\n+  struct graph_edge *e = XOBNEW (&g->ob, struct graph_edge);\n   struct vertex *vf = &g->vertices[f], *vt = &g->vertices[t];\n \n-\n   e->src = f;\n   e->dest = t;\n \n@@ -324,20 +325,7 @@ for_each_edge (struct graph *g, graphds_edge_callback callback)\n void\n free_graph (struct graph *g)\n {\n-  struct graph_edge *e, *n;\n-  struct vertex *v;\n-  int i;\n-\n-  for (i = 0; i < g->n_vertices; i++)\n-    {\n-      v = &g->vertices[i];\n-      for (e = v->succ; e; e = n)\n-\t{\n-\t  n = e->succ_next;\n-\t  free (e);\n-\t}\n-    }\n-  free (g->vertices);\n+  obstack_free (&g->ob, NULL);\n   free (g);\n }\n "}, {"sha": "d9de5ae38e1a52f8930b63d462a43884af6d899a", "filename": "gcc/graphds.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c41c19d5dfc3de0c0b149dc0846c08422c5dded/gcc%2Fgraphds.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c41c19d5dfc3de0c0b149dc0846c08422c5dded/gcc%2Fgraphds.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphds.h?ref=2c41c19d5dfc3de0c0b149dc0846c08422c5dded", "patch": "@@ -43,9 +43,9 @@ struct vertex\n \n struct graph\n {\n-  int n_vertices;\t/* Number of vertices.  */\n-  struct vertex *vertices;\n-\t\t\t/* The vertices.  */\n+  int n_vertices;\t   /* Number of vertices.  */\n+  struct vertex *vertices; /* The vertices.  */\n+  struct obstack ob;\t   /* Obstack for vertex and edge allocation.  */\n };\n \n struct graph *new_graph (int);"}]}