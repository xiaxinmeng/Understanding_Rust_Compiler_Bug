{"sha": "7992cddd91882927fc26eaf1dfcd2b05576be55e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk5MmNkZGQ5MTg4MjkyN2ZjMjZlYWYxZGZjZDJiMDU1NzZiZTU1ZQ==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2002-10-04T20:17:26Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2002-10-04T20:17:26Z"}, "message": "[multiple changes]\n\n2002-10-04  C. Scott Ananian <cananian@lesser-magoo.lcs.mit.edu>\n\n\t* java/lang/ProtectionDomain.java (linesep): Remove field.\n\t(toString): Use System.getProperty(\"line.separator\").\n\n2002-10-04  Michael Koch  <konqueror@gmx.de>\n\n\t* java/security/Identity.java: Added serialVersionUID.\n\t* java/security/KeyPair.java: Added serialVersionUID.\n\t* java/security/Provider.java: Added serialVersionUID.\n\t* java/security/SecureRandom.java: Added serialVersionUID.\n\t* java/security/SecureRandomSpi.java: Added serialVersionUID.\n\t* java/security/SignedObject.java: Added serialVersionUID.\n\t* java/security/cert/Certificate.java: Added serialVersionUID.\n\n2002-10-04  Mark Wielaard <mark@klomp.org>\n\n\t* java/security/Security.java: Use java.home or gnu.classpath.home\n\tto load providers.\n\t(loadProviders): Extra dir argument.\n\t(getProvider): Return null when not found.\n\nFrom-SVN: r57827", "tree": {"sha": "1d7c0ee9f68e8e1a25d9e721792bc5848d0ccdc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d7c0ee9f68e8e1a25d9e721792bc5848d0ccdc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7992cddd91882927fc26eaf1dfcd2b05576be55e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7992cddd91882927fc26eaf1dfcd2b05576be55e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7992cddd91882927fc26eaf1dfcd2b05576be55e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7992cddd91882927fc26eaf1dfcd2b05576be55e/comments", "author": null, "committer": null, "parents": [{"sha": "c5d3d49b5856362ad2e49175147c44afac354c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d3d49b5856362ad2e49175147c44afac354c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5d3d49b5856362ad2e49175147c44afac354c1b"}], "stats": {"total": 57, "additions": 46, "deletions": 11}, "files": [{"sha": "410412dbe44d0c8a297e55b58fab0e19d11cbce8", "filename": "libjava/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -1,3 +1,25 @@\n+2002-10-04  C. Scott Ananian <cananian@lesser-magoo.lcs.mit.edu>\n+\t\n+\t* java/lang/ProtectionDomain.java (linesep): Remove field.\n+\t(toString): Use System.getProperty(\"line.separator\").\n+\n+2002-10-04  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/security/Identity.java: Added serialVersionUID.\n+\t* java/security/KeyPair.java: Added serialVersionUID.\n+\t* java/security/Provider.java: Added serialVersionUID.\n+\t* java/security/SecureRandom.java: Added serialVersionUID.\n+\t* java/security/SecureRandomSpi.java: Added serialVersionUID.\n+\t* java/security/SignedObject.java: Added serialVersionUID.\n+\t* java/security/cert/Certificate.java: Added serialVersionUID.\n+\n+2002-10-04  Mark Wielaard <mark@klomp.org>\n+\n+\t* java/security/Security.java: Use java.home or gnu.classpath.home\n+\tto load providers.\n+\t(loadProviders): Extra dir argument.\n+\t(getProvider): Return null when not found.\n+\n 2002-10-04  Mark Wielaard  <mark@klomp.org>\n \n \t* java/lang/Throwable.java: Remerge with Classpath."}, {"sha": "a1af11273e961785f5b6f04ef713490ad2a1dd21", "filename": "libjava/java/security/Identity.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FIdentity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FIdentity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FIdentity.java?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -64,6 +64,8 @@ Each identity (name and public key) within a scope is unique\n  */\n public abstract class Identity implements Principal, Serializable\n {\n+  static final long serialVersionUID = 3609922007826600659L;\n+\n   private String name;\n   private IdentityScope scope;\n   private PublicKey publicKey;"}, {"sha": "c502add50025560cd300e8a45e3c21b5d3a34554", "filename": "libjava/java/security/KeyPair.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FKeyPair.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FKeyPair.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FKeyPair.java?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -48,6 +48,8 @@\n  */\n public final class KeyPair implements Serializable\n {\n+  static final long serialVersionUID = -7565189502268009837L;\n+\n   private PublicKey publicKey;\n   private PrivateKey privateKey;\n "}, {"sha": "e8ead466565b80375636dedd5664db32b7da92f2", "filename": "libjava/java/security/ProtectionDomain.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FProtectionDomain.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FProtectionDomain.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FProtectionDomain.java?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -53,8 +53,6 @@\n  */\n public class ProtectionDomain\n {\n-  private static final String linesep = System.getProperty(\"line.separator\");\n-\n   /**\n    * This is the <code>CodeSource</code> for this protection domain\n    */\n@@ -131,6 +129,7 @@ public boolean implies(Permission perm)\n    */\n   public String toString()\n   {\n+    String linesep = System.getProperty(\"line.separator\");\n     StringBuffer sb = new StringBuffer(\"\");\n     sb.append(\"ProtectionDomain (\" + linesep);\n     if (code_source == null)"}, {"sha": "d3e3581891e637589a0649cb1c6eb33dd2c0cee5", "filename": "libjava/java/security/Provider.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FProvider.java?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -56,6 +56,8 @@\n  */\n public abstract class Provider extends Properties implements Serializable\n {\n+  static final long serialVersionUID = -4298000515446427739L;\n+\n   /**\n    * This is a textual description of the provider\n    */"}, {"sha": "31701cb6fd9ee4a57d39a37dc51c199e7d386b68", "filename": "libjava/java/security/SecureRandom.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FSecureRandom.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FSecureRandom.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecureRandom.java?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -49,6 +49,8 @@\n  */\n public class SecureRandom extends Random\n {\n+  static final long serialVersionUID = 4940670005562187L;\n+\n   //Serialized Field\n   long counter = 0;\t\t//Serialized\n   MessageDigest digest = null;"}, {"sha": "1586994d59699bf2fdb46275de505da1a4520227", "filename": "libjava/java/security/SecureRandomSpi.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FSecureRandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FSecureRandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecureRandomSpi.java?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -50,6 +50,8 @@\n  */\n public abstract class SecureRandomSpi implements Serializable\n {\n+  static final long serialVersionUID = -2991854161009191830L;\n+\n   /**\n      Default Constructor for SecureRandomSpi\n    */"}, {"sha": "9ae90ba365c9dc01d90d4dbbeb03918e59c57ced", "filename": "libjava/java/security/Security.java", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FSecurity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FSecurity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecurity.java?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -59,22 +59,23 @@ public final class Security extends Object\n \n   static\n   {\n-    loadProviders(System.getProperty(\"java.vm.name\"));\n-    loadProviders(\"classpath\");\n+    loadProviders(System.getProperty(\"java.home\"),\n+\t\t  System.getProperty(\"java.vm.name\"));\n+    loadProviders(System.getProperty(\"gnu.classpath.home\"), \"classpath\");\n   }\n \n   // This class can't be instantiated.\n   private Security ()\n   {\n   }\n \n-  private static void loadProviders(String vendor)\n+  private static void loadProviders(String dir, String vendor)\n   {\n-    if (vendor == null)\n+    if (dir == null || vendor == null)\n       return;\n \n     String separator = System.getProperty(\"file.separator\");\n-    String secfilestr = (System.getProperty(\"java.home\") +\n+    String secfilestr = (dir +\n \t\t\t separator + \"lib\" +\n \t\t\t separator + \"security\" +\n \t\t\t separator + vendor + \".security\");\n@@ -263,15 +264,15 @@ public static Provider[] getProviders()\n    */\n   public static Provider getProvider(String name)\n   {\n-    Provider p = null;\n+    Provider p;\n     int max = providers.size ();\n     for (int i = 0; i < max; i++)\n       {\n \tp = (Provider) providers.elementAt(i);\n \tif (p.getName() == name)\n-\t  break;\n+\t  return p;\n       }\n-    return p;\n+    return null;\n   }\n \n   /**"}, {"sha": "78684e57e73f05bd22f0025529b06d0c7c581539", "filename": "libjava/java/security/SignedObject.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FSignedObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2FSignedObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSignedObject.java?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -79,6 +79,8 @@ initialize the signature engine as this class will handle that\n  */\n public final class SignedObject implements Serializable\n {\n+  static final long serialVersionUID = 720502720485447167L;\n+\n   private byte[] content;\n   private byte[] signature;\n   private String thealgorithm;"}, {"sha": "25e8aadf1918dae9b69430a8c7cff1010374d703", "filename": "libjava/java/security/cert/Certificate.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2Fcert%2FCertificate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7992cddd91882927fc26eaf1dfcd2b05576be55e/libjava%2Fjava%2Fsecurity%2Fcert%2FCertificate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FCertificate.java?ref=7992cddd91882927fc26eaf1dfcd2b05576be55e", "patch": "@@ -69,7 +69,8 @@ class even though they differ in storage methods and information\n */\n public abstract class Certificate\n {\n-\n+  static final long serialVersionUID = -6751606818319535583L;\n+\t\n   private String type;\n   /**\n      Constructs a new certificate of the specified type. An example"}]}