{"sha": "22b04f05ab8e05707a031a5b6dfc1eb72d056957", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJiMDRmMDVhYjhlMDU3MDdhMDMxYTViNmRmYzFlYjcyZDA1Njk1Nw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-12-17T18:10:58Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-12-17T18:10:58Z"}, "message": "builtin-snprintf-4.c: Adjust for ILP32.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/tree-ssa/builtin-snprintf-4.c: Adjust for ILP32.\n\nFrom-SVN: r267206", "tree": {"sha": "0a08fb99e69bca0d2fa5f115734edbe4241d127d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a08fb99e69bca0d2fa5f115734edbe4241d127d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22b04f05ab8e05707a031a5b6dfc1eb72d056957", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b04f05ab8e05707a031a5b6dfc1eb72d056957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22b04f05ab8e05707a031a5b6dfc1eb72d056957", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b04f05ab8e05707a031a5b6dfc1eb72d056957/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a81037cea642bb6a7e037b9a421ed5dde9c0465b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a81037cea642bb6a7e037b9a421ed5dde9c0465b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a81037cea642bb6a7e037b9a421ed5dde9c0465b"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "220828db3b46834ca100e8b4f83fda750d2d9c64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b04f05ab8e05707a031a5b6dfc1eb72d056957/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b04f05ab8e05707a031a5b6dfc1eb72d056957/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22b04f05ab8e05707a031a5b6dfc1eb72d056957", "patch": "@@ -1,3 +1,7 @@\n+2018-12-17  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gcc.dg/tree-ssa/builtin-snprintf-4.c: Adjust for ILP32.\n+\n 2018-12-17  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>\n \n \tPR rtl-optimization/88253"}, {"sha": "97a385e581da8c04208a317a992ca87b7f72efba", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-snprintf-4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b04f05ab8e05707a031a5b6dfc1eb72d056957/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-snprintf-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b04f05ab8e05707a031a5b6dfc1eb72d056957/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-snprintf-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-snprintf-4.c?ref=22b04f05ab8e05707a031a5b6dfc1eb72d056957", "patch": "@@ -58,7 +58,12 @@ extern void sink (int, ...);\n static const size_t imax = __INT_MAX__;\n static const size_t imaxp1 = imax + 1;\n \n+#if __PTRDIFF_MAX__ == __INT_MAX__\n+/* Make the test pass on ILP32 the same way it does on LP64.  */\n+static const size_t dmax = __PTRDIFF_MAX__ + (size_t)1;\n+#else\n static const size_t dmax = __PTRDIFF_MAX__;\n+#endif\n static const size_t dmaxp1 = dmax + 1;\n \n static const size_t szmax = __SIZE_MAX__;"}]}