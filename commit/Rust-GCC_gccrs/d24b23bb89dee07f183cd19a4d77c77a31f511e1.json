{"sha": "d24b23bb89dee07f183cd19a4d77c77a31f511e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI0YjIzYmI4OWRlZTA3ZjE4M2NkMTlhNGQ3N2M3N2EzMWY1MTFlMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2006-04-24T03:04:29Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2006-04-24T03:04:29Z"}, "message": "Makefile.in (c-convert.o): Add dependency on $(TARGET_H)\n\n2006-04-23  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* Makefile.in (c-convert.o): Add dependency on $(TARGET_H)\n\t(tree-vect-patterns.o): Likewise.\n\t(jump.o): Likewise.\n\t(cselib.o): Likewise.\n\t(loop-doloop.o): Likewise.\n\t(regclass.o): Likewise.\n\t(reload1.o): Likewise.\n\t(explow.o): Replace target.h with $(TARGET_H).\n\t(ipa-prop.o): Likewise.\n\t(ipa-cp.o): Likewise.\n\t(ipa-inline.o): Likewise.\n\t(reorg.o): Likewise.\n\t(reg-stack.o): Likewise.\n\nFrom-SVN: r113212", "tree": {"sha": "b83f7029646283907a7572d97970ff11e0c65847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b83f7029646283907a7572d97970ff11e0c65847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d24b23bb89dee07f183cd19a4d77c77a31f511e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24b23bb89dee07f183cd19a4d77c77a31f511e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d24b23bb89dee07f183cd19a4d77c77a31f511e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24b23bb89dee07f183cd19a4d77c77a31f511e1/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5690f0d23c4cc17d24e04ad5710e21bebdf0325", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5690f0d23c4cc17d24e04ad5710e21bebdf0325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5690f0d23c4cc17d24e04ad5710e21bebdf0325"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "c32ab4dacfa69a00e0efd7eeaaad37512e362c4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24b23bb89dee07f183cd19a4d77c77a31f511e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24b23bb89dee07f183cd19a4d77c77a31f511e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d24b23bb89dee07f183cd19a4d77c77a31f511e1", "patch": "@@ -1,3 +1,19 @@\n+2006-04-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.in (c-convert.o): Add dependency on $(TARGET_H)\n+\t(tree-vect-patterns.o): Likewise.\n+\t(jump.o): Likewise.\n+\t(cselib.o): Likewise.\n+\t(loop-doloop.o): Likewise.\n+\t(regclass.o): Likewise.\n+\t(reload1.o): Likewise.\n+\t(explow.o): Replace target.h with $(TARGET_H).\n+\t(ipa-prop.o): Likewise.\n+\t(ipa-cp.o): Likewise.\n+\t(ipa-inline.o): Likewise.\n+\t(reorg.o): Likewise.\n+\t(reg-stack.o): Likewise.\n+\n 2006-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-tailcall.c (pass_tail_recursion): Use gate_tail_calls too."}, {"sha": "1833128ebe49ea8dfc34c5199d443eb5ce42aba9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24b23bb89dee07f183cd19a4d77c77a31f511e1/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24b23bb89dee07f183cd19a4d77c77a31f511e1/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d24b23bb89dee07f183cd19a4d77c77a31f511e1", "patch": "@@ -1604,7 +1604,7 @@ c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_\n     $(C_TREE_H) $(FLAGS_H) toplev.h\n c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(TREE_H) $(FLAGS_H) toplev.h $(C_COMMON_H) convert.h $(C_TREE_H) \\\n-    langhooks.h\n+    langhooks.h $(TARGET_H)\n c-pragma.o: c-pragma.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n     $(TREE_H) $(FUNCTION_H) $(C_PRAGMA_H) toplev.h output.h $(GGC_H) $(TM_P_H) \\\n     $(C_COMMON_H) $(TARGET_H) gt-c-pragma.h $(CPPLIB_H) $(FLAGS_H)\n@@ -2069,7 +2069,7 @@ tree-vect-analyze.o: tree-vect-analyze.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n tree-vect-patterns.o: tree-vect-patterns.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) errors.h $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    diagnostic.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) cfgloop.h \\\n-   tree-vectorizer.h $(TREE_DATA_REF_H) $(EXPR_H)\n+   tree-vectorizer.h $(TREE_DATA_REF_H) $(EXPR_H) $(TARGET_H)\n tree-vect-transform.o: tree-vect-transform.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(OPTABS_H) $(RECOG_H) $(TREE_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n@@ -2210,8 +2210,8 @@ expmed.o : expmed.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_\n    toplev.h $(TM_P_H) langhooks.h\n explow.o : explow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    $(FLAGS_H) hard-reg-set.h insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n-   toplev.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) langhooks.h gt-explow.h target.h \\\n-   output.h\n+   toplev.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) langhooks.h gt-explow.h \\\n+   $(TARGET_H) output.h\n optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) libfuncs.h \\\n    $(RECOG_H) reload.h toplev.h $(GGC_H) $(REAL_H) $(TM_P_H) except.h \\\n@@ -2256,8 +2256,8 @@ integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) hard-reg-set.h $(REGS_H) insn-config.h $(RECOG_H) $(EXPR_H) \\\n    $(REAL_H) except.h $(FUNCTION_H) tree-pass.h $(DIAGNOSTIC_H) \\\n-   toplev.h $(INSN_ATTR_H) $(TM_P_H) reload.h $(PREDICT_H) $(TIMEVAR_H)\n-\n+   toplev.h $(INSN_ATTR_H) $(TM_P_H) reload.h $(PREDICT_H) \\\n+   $(TIMEVAR_H) $(TARGET_H)\n simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h \\\n    $(RECOG_H) $(EXPR_H) toplev.h output.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n@@ -2273,10 +2273,10 @@ cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) ipa-prop.h\n ipa.o : ipa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(CGRAPH_H) \n ipa-prop.o : ipa-prop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n-   langhooks.h $(GGC_H) target.h $(CGRAPH_H) ipa-prop.h \\\n+   langhooks.h $(GGC_H) $(TARGET_H) $(CGRAPH_H) ipa-prop.h \\\n    tree-flow.h $(TM_H) tree-pass.h $(FLAGS_H) $(TREE_H)\n ipa-cp.o : ipa-cp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n-   langhooks.h target.h $(CGRAPH_H) ipa-prop.h  \\\n+   langhooks.h $(TARGET_H) $(CGRAPH_H) ipa-prop.h  \\\n    tree-flow.h $(TM_H) tree-pass.h $(FLAGS_H) $(TREE_H) \\\n    diagnostic.h\n ipa-inline.o : ipa-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2306,7 +2306,7 @@ coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h $(RECOG_H) \\\n    $(EMIT_RTL_H) toplev.h output.h $(FUNCTION_H) cselib.h $(GGC_H) $(TM_P_H) \\\n-   gt-cselib.h $(PARAMS_H) alloc-pool.h $(HASHTAB_H)\n+   gt-cselib.h $(PARAMS_H) alloc-pool.h $(HASHTAB_H) $(TARGET_H)\n cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n    output.h $(FUNCTION_H) $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\\n@@ -2385,7 +2385,7 @@ value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    tree-flow-inline.h timevar.h tree-pass.h\n loop-doloop.o : loop-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) \\\n-   toplev.h $(CFGLOOP_H) output.h $(PARAMS_H)\n+   toplev.h $(CFGLOOP_H) output.h $(PARAMS_H) $(TARGET_H)\n alloc-pool.o : alloc-pool.c $(CONFIG_H) $(SYSTEM_H) alloc-pool.h $(HASHTAB_H)\n flow.o : flow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) \\\n@@ -2457,7 +2457,8 @@ combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n regclass.o : regclass.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) insn-config.h \\\n    $(RECOG_H) reload.h $(REAL_H) toplev.h $(FUNCTION_H) output.h $(GGC_H) \\\n-   $(TM_P_H) $(EXPR_H) $(TIMEVAR_H) gt-regclass.h $(HASHTAB_H)\n+   $(TM_P_H) $(EXPR_H) $(TIMEVAR_H) gt-regclass.h $(HASHTAB_H) \\\n+   $(TARGET_H)\n local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n    output.h $(FUNCTION_H) $(INSN_ATTR_H) toplev.h  except.h reload.h $(TM_P_H) \\\n@@ -2480,7 +2481,7 @@ reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(RECOG_H) output.h $(FUNCTION_H) toplev.h $(TM_P_H) \\\n    addresses.h except.h $(TREE_H) $(REAL_H) $(FLAGS_H) $(MACHMODE_H) \\\n-   $(OBSTACK_H)\n+   $(OBSTACK_H) $(TARGET_H)\n rtlhooks.o :  rtlhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    rtlhooks-def.h $(EXPR_H) $(RECOG_H)\n postreload.o : postreload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2503,7 +2504,7 @@ reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    conditions.h hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) insn-config.h \\\n    $(INSN_ATTR_H) except.h $(RECOG_H) $(FUNCTION_H) $(FLAGS_H) output.h \\\n    $(EXPR_H) toplev.h $(PARAMS_H) $(TM_P_H) $(OBSTACK_H) $(RESOURCE_H) \\\n-   timevar.h target.h tree-pass.h\n+   timevar.h $(TARGET_H) tree-pass.h\n alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) toplev.h output.h \\\n    $(ALIAS_H) $(EMIT_RTL_H) $(GGC_H) $(FUNCTION_H) cselib.h $(TREE_H) $(TM_P_H) \\\n@@ -2556,7 +2557,7 @@ reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h toplev.h reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) output.h $(VARRAY_H) timevar.h tree-pass.h \\\n-   target.h vecprim.h\n+   $(TARGET_H) vecprim.h\n sreal.o: sreal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) sreal.h\n predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) \\"}]}