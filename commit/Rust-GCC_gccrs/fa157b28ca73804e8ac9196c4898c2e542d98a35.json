{"sha": "fa157b28ca73804e8ac9196c4898c2e542d98a35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmExNTdiMjhjYTczODA0ZThhYzkxOTZjNDg5OGMyZTU0MmQ5OGEzNQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2007-08-29T03:53:41Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-08-29T03:53:41Z"}, "message": "m68k.c (m68k_get_function_kind): Assert we're never given a non-function.\n\ngcc/\n\t* config/m68k/m68k.c (m68k_get_function_kind): Assert we're never\n\tgiven a non-function.\n\t(m68k_ok_for_sibcall_p): Only sibcall functions of the same kind.\n\ngcc/testsuite/\n\t* gcc.target/m68k/interrupt-1.c: New.\n\nCo-Authored-By: Kazu Hirata <kazu@codesourcery.com>\n\nFrom-SVN: r127880", "tree": {"sha": "d2833806f032a2079955aeaeb53b1ee366295d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2833806f032a2079955aeaeb53b1ee366295d5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa157b28ca73804e8ac9196c4898c2e542d98a35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa157b28ca73804e8ac9196c4898c2e542d98a35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa157b28ca73804e8ac9196c4898c2e542d98a35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa157b28ca73804e8ac9196c4898c2e542d98a35/comments", "author": null, "committer": null, "parents": [{"sha": "bdf57c4096fd8cd0bfdadade196c8ac7a87ddf5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf57c4096fd8cd0bfdadade196c8ac7a87ddf5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf57c4096fd8cd0bfdadade196c8ac7a87ddf5a"}], "stats": {"total": 66, "additions": 58, "deletions": 8}, "files": [{"sha": "9e2f445e77b38102c8a0d3d3d229d697f5ccd326", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa157b28ca73804e8ac9196c4898c2e542d98a35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa157b28ca73804e8ac9196c4898c2e542d98a35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa157b28ca73804e8ac9196c4898c2e542d98a35", "patch": "@@ -1,3 +1,9 @@\n+2007-08-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/m68k/m68k.c (m68k_get_function_kind): Assert we're never\n+\tgiven a non-function.\n+\t(m68k_ok_for_sibcall_p): Only sibcall functions of the same kind.\n+\n 2007-08-28  DJ Delorie  <dj@redhat.com>\n \n \t* config/sh/sh.c (sh_gimplify_va_arg_expr): Fix sh2a support."}, {"sha": "f1f09bc86c11657605882b627f6f2e89fa5968cc", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa157b28ca73804e8ac9196c4898c2e542d98a35/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa157b28ca73804e8ac9196c4898c2e542d98a35/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=fa157b28ca73804e8ac9196c4898c2e542d98a35", "patch": "@@ -639,9 +639,8 @@ m68k_get_function_kind (tree func)\n {\n   tree a;\n \n-  if (TREE_CODE (func) != FUNCTION_DECL)\n-    return false;\n-\n+  gcc_assert (TREE_CODE (func) == FUNCTION_DECL);\n+  \n   a = lookup_attribute (\"interrupt\", DECL_ATTRIBUTES (func));\n   if (a != NULL_TREE)\n     return m68k_fk_interrupt_handler;\n@@ -1258,14 +1257,30 @@ flags_in_68881 (void)\n   return cc_status.flags & CC_IN_68881;\n }\n \n-/* Implement TARGET_FUNCTION_OK_FOR_SIBCALL_P.  We cannot use sibcalls\n-   for nested functions because we use the static chain register for\n-   indirect calls.  */\n+/* Implement TARGET_FUNCTION_OK_FOR_SIBCALL_P.  */\n \n static bool\n-m68k_ok_for_sibcall_p (tree decl ATTRIBUTE_UNUSED, tree exp)\n+m68k_ok_for_sibcall_p (tree decl, tree exp)\n {\n-  return TREE_OPERAND (exp, 2) == NULL;\n+  enum m68k_function_kind kind;\n+  \n+  /* We cannot use sibcalls for nested functions because we use the\n+     static chain register for indirect calls.  */\n+  if (CALL_EXPR_STATIC_CHAIN (exp))\n+    return false;\n+\n+  kind = m68k_get_function_kind (current_function_decl);\n+  if (kind == m68k_fk_normal_function)\n+    /* We can always sibcall from a normal function, because it's\n+       undefined if it is calling an interrupt function.  */\n+    return true;\n+\n+  /* Otherwise we can only sibcall if the function kind is known to be\n+     the same.  */\n+  if (decl && m68k_get_function_kind (decl) == kind)\n+    return true;\n+  \n+  return false;\n }\n \n /* Convert X to a legitimate function call memory reference and return the"}, {"sha": "36dd47a953ed5916f9e40c8c8820520fe7e49093", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa157b28ca73804e8ac9196c4898c2e542d98a35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa157b28ca73804e8ac9196c4898c2e542d98a35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa157b28ca73804e8ac9196c4898c2e542d98a35", "patch": "@@ -1,3 +1,8 @@\n+2007-08-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\t    Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* gcc.target/m68k/interrupt-1.c: New.\n+\n 2007-08-28  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \t* gcc.c-torture/compile/limits-blockid.c: Reduce testcase size to"}, {"sha": "443c13b460edc553b72140cae93ec2cbe0048f4f", "filename": "gcc/testsuite/gcc.target/m68k/interrupt-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa157b28ca73804e8ac9196c4898c2e542d98a35/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Finterrupt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa157b28ca73804e8ac9196c4898c2e542d98a35/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Finterrupt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Finterrupt-1.c?ref=fa157b28ca73804e8ac9196c4898c2e542d98a35", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler \"j(ra|mp)\\[ \\t\\]*interrupt_sibcall\" } } */\n+/* { dg-final { scan-assembler \"j(b|)sr\\[ \\t\\]*interrupt_call\" } } */\n+/* { dg-final { scan-assembler \"j(ra|mp)\\[ \\t\\]*normal_sibcall\" } } */\n+\n+void normal_sibcall (void);\n+void interrupt_call (void);\n+void __attribute ((interrupt)) interrupt_sibcall (void);\n+\n+void normal (void)\n+{\n+  normal_sibcall ();\n+}\n+\n+void __attribute ((interrupt)) interrupt (void)\n+{\n+  interrupt_call ();\n+}\n+\n+void __attribute ((interrupt)) interrupt_2 (void)\n+{\n+  interrupt_sibcall ();\n+}"}]}