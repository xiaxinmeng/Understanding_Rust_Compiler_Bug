{"sha": "d9f8303fb6886eb46fa66c4a7595dc8219a52160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlmODMwM2ZiNjg4NmViNDZmYTY2YzRhNzU5NWRjODIxOWE1MjE2MA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-05-25T12:52:10Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-05-25T12:52:10Z"}, "message": "move TS_EXP to be a substructure of TS_TYPED\n\nmove TS_EXP to be a substructure of TS_TYPED\ngcc/\n\t* tree.h (struct tree_exp): Inherit from struct tree_typed.\n\t* tree.c (initialize_tree_contains_struct): Mark TS_EXP as TS_TYPED\n\tinstead of TS_COMMON.\n\ngcc/lto/\n\t* lto.c (lto_ft_typed): New function.\n\t(lto_ft_common): Call it.\n\t(lto_ft_constructor): Likewise.\n\t(lto_ft_expr): Likewise.\n\t(lto_fixup_prevailing_decls): Check for TS_COMMON before accessing\n\tTREE_CHAIN.\n\nFrom-SVN: r174192", "tree": {"sha": "850c21e1d1ad635fe18c45a463e69c71a2247561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/850c21e1d1ad635fe18c45a463e69c71a2247561"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9f8303fb6886eb46fa66c4a7595dc8219a52160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f8303fb6886eb46fa66c4a7595dc8219a52160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9f8303fb6886eb46fa66c4a7595dc8219a52160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f8303fb6886eb46fa66c4a7595dc8219a52160/comments", "author": null, "committer": null, "parents": [{"sha": "cdbf45414aecd8ec143a0f2634ba7c53b11053ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdbf45414aecd8ec143a0f2634ba7c53b11053ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdbf45414aecd8ec143a0f2634ba7c53b11053ca"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "8811e14b5a4e07eba2319e4f5384712b8af5c4c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9f8303fb6886eb46fa66c4a7595dc8219a52160", "patch": "@@ -1,3 +1,9 @@\n+2011-05-25  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree.h (struct tree_exp): Inherit from struct tree_typed.\n+\t* tree.c (initialize_tree_contains_struct): Mark TS_EXP as TS_TYPED\n+\tinstead of TS_COMMON.\n+\n 2011-05-25  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* libgcc2.h (__NW, __NDW): Define using a __gnu_ prefix if"}, {"sha": "aa8859c405d8c2f77b33bbf1db892436329d89e8", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=d9f8303fb6886eb46fa66c4a7595dc8219a52160", "patch": "@@ -1,3 +1,12 @@\n+2011-05-25  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* lto.c (lto_ft_typed): New function.\n+\t(lto_ft_common): Call it.\n+\t(lto_ft_constructor): Likewise.\n+\t(lto_ft_expr): Likewise.\n+\t(lto_fixup_prevailing_decls): Check for TS_COMMON before accessing\n+\tTREE_CHAIN.\n+\n 2011-05-20  Richard Guenther  <rguenther@suse.de>\n \n \t* lto.c (lto_ft_common): Remove pointer-to chain teardown."}, {"sha": "1067b51c9482bc436fd9fd53632156e4b79eb641", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=d9f8303fb6886eb46fa66c4a7595dc8219a52160", "patch": "@@ -254,14 +254,20 @@ remember_with_vars (tree t)\n \n static void lto_fixup_types (tree);\n \n-/* Fix up fields of a tree_common T.  */\n+/* Fix up fields of a tree_typed T.  */\n \n static void\n-lto_ft_common (tree t)\n+lto_ft_typed (tree t)\n {\n-  /* Fixup our type.  */\n   LTO_FIXUP_TREE (TREE_TYPE (t));\n+}\n+\n+/* Fix up fields of a tree_common T.  */\n \n+static void\n+lto_ft_common (tree t)\n+{\n+  lto_ft_typed (t);\n   LTO_FIXUP_TREE (TREE_CHAIN (t));\n }\n \n@@ -398,7 +404,7 @@ lto_ft_constructor (tree t)\n   unsigned HOST_WIDE_INT idx;\n   constructor_elt *ce;\n \n-  LTO_FIXUP_TREE (TREE_TYPE (t));\n+  lto_ft_typed (t);\n \n   for (idx = 0;\n        VEC_iterate(constructor_elt, CONSTRUCTOR_ELTS (t), idx, ce);\n@@ -415,7 +421,7 @@ static void\n lto_ft_expr (tree t)\n {\n   int i;\n-  lto_ft_common (t);\n+  lto_ft_typed (t);\n   for (i = TREE_OPERAND_LENGTH (t) - 1; i >= 0; --i)\n     LTO_FIXUP_TREE (TREE_OPERAND (t, i));\n }\n@@ -2029,7 +2035,8 @@ lto_fixup_prevailing_decls (tree t)\n {\n   enum tree_code code = TREE_CODE (t);\n   LTO_NO_PREVAIL (TREE_TYPE (t));\n-  LTO_NO_PREVAIL (TREE_CHAIN (t));\n+  if (CODE_CONTAINS_STRUCT (code, TS_COMMON))\n+    LTO_NO_PREVAIL (TREE_CHAIN (t));\n   if (DECL_P (t))\n     {\n       LTO_NO_PREVAIL (DECL_NAME (t));"}, {"sha": "1dfad04174aed28dd866a5582902f833b5784fd9", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=d9f8303fb6886eb46fa66c4a7595dc8219a52160", "patch": "@@ -380,6 +380,7 @@ initialize_tree_contains_struct (void)\n \tcase TS_COMPLEX:\n \tcase TS_SSA_NAME:\n \tcase TS_CONSTRUCTOR:\n+\tcase TS_EXP:\n \t  MARK_TS_TYPED (code);\n \t  break;\n \n@@ -388,7 +389,6 @@ initialize_tree_contains_struct (void)\n \tcase TS_TYPE_COMMON:\n \tcase TS_LIST:\n \tcase TS_VEC:\n-\tcase TS_EXP:\n \tcase TS_BLOCK:\n \tcase TS_BINFO:\n \tcase TS_STATEMENT_LIST:"}, {"sha": "142237feb82c08bf8efa151102ed24e3d1f09c87", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f8303fb6886eb46fa66c4a7595dc8219a52160/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d9f8303fb6886eb46fa66c4a7595dc8219a52160", "patch": "@@ -1917,7 +1917,7 @@ enum omp_clause_default_kind\n   (OMP_CLAUSE_SUBCODE_CHECK (NODE, OMP_CLAUSE_DEFAULT)->omp_clause.subcode.default_kind)\n \n struct GTY(()) tree_exp {\n-  struct tree_common common;\n+  struct tree_typed typed;\n   location_t locus;\n   tree block;\n   tree GTY ((special (\"tree_exp\"),"}]}