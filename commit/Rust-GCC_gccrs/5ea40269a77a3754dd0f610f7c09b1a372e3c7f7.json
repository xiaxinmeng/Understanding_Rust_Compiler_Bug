{"sha": "5ea40269a77a3754dd0f610f7c09b1a372e3c7f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhNDAyNjlhNzdhMzc1NGRkMGY2MTBmN2MwOWIxYTM3MmUzYzdmNw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2021-05-11T14:25:55Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2021-05-11T14:25:55Z"}, "message": "preprocessor: Enable digit separators for C2X\n\nC2X adds digit separators, as in C++.  Enable them accordingly in\nlibcpp and c-lex.c.  Some basic tests are added that digit separators\nbehave as expected for C2X and are properly disabled for C11; further\ntest coverage is included in the existing g++.dg/cpp1y/digit-sep*.C\ntests.\n\nBootstrapped with no regressions for x86_64-pc-linux-gnu.\n\ngcc/c-family/\n\t* c-lex.c (interpret_float): Handle digit separators for C2X.\n\nlibcpp/\n\t* init.c (lang_defaults): Enable digit separators for GNUC2X and\n\tSTDC2X.\n\ngcc/testsuite/\n\t* gcc.dg/c11-digit-separators-1.c,\n\tgcc.dg/c2x-digit-separators-1.c, gcc.dg/c2x-digit-separators-2.c:\n\tNew tests.", "tree": {"sha": "cc0b1ef3b1f4f4a03447c7cca3b8cdec6ffd7bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc0b1ef3b1f4f4a03447c7cca3b8cdec6ffd7bee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "010d4a5047166037b316ed22331f3d99742f1f1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/010d4a5047166037b316ed22331f3d99742f1f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/010d4a5047166037b316ed22331f3d99742f1f1d"}], "stats": {"total": 77, "additions": 74, "deletions": 3}, "files": [{"sha": "1c66ecd8fc413b70a6d19917e0566dbc7c9ba9ba", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=5ea40269a77a3754dd0f610f7c09b1a372e3c7f7", "patch": "@@ -1001,7 +1001,7 @@ interpret_float (const cpp_token *token, unsigned int flags,\n     }\n \n   copy = (char *) alloca (copylen + 1);\n-  if (cxx_dialect > cxx11)\n+  if (c_dialect_cxx () ? cxx_dialect > cxx11 : flag_isoc2x)\n     {\n       size_t maxlen = 0;\n       for (size_t i = 0; i < copylen; ++i)"}, {"sha": "fc832260acbf7d305bc48d70a95fb6533bcaf9df", "filename": "gcc/testsuite/gcc.dg/c11-digit-separators-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/gcc%2Ftestsuite%2Fgcc.dg%2Fc11-digit-separators-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/gcc%2Ftestsuite%2Fgcc.dg%2Fc11-digit-separators-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc11-digit-separators-1.c?ref=5ea40269a77a3754dd0f610f7c09b1a372e3c7f7", "patch": "@@ -0,0 +1,7 @@\n+/* Test C2x digit separators not in C11.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n+\n+#define m(x) 0\n+\n+_Static_assert (m(1'2)+(3'4) == 0, \"digit separators\");"}, {"sha": "6eadf2ea87f0b1597221cbbc0b0cdc931560c8b4", "filename": "gcc/testsuite/gcc.dg/c2x-digit-separators-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-digit-separators-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-digit-separators-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-digit-separators-1.c?ref=5ea40269a77a3754dd0f610f7c09b1a372e3c7f7", "patch": "@@ -0,0 +1,39 @@\n+/* Test C2x digit separators.  Valid usages.  */\n+/* { dg-do run } */\n+/* { dg-options \"-std=c2x -pedantic-errors\" } */\n+\n+_Static_assert (123'45'6 == 123456);\n+_Static_assert (0'123 == 0123);\n+_Static_assert (0x1'23 == 0x123);\n+\n+#define m(x) 0\n+\n+_Static_assert (m(1'2)+(3'4) == 34);\n+\n+_Static_assert (0x0'e-0xe == 0);\n+\n+#define a0 '.' -\n+#define acat(x) a ## x\n+_Static_assert (acat (0'.') == 0);\n+\n+#define c0(x) 0\n+#define b0 c0 (\n+#define bcat(x) b ## x\n+_Static_assert (bcat (0'\\u00c0')) == 0);\n+\n+extern void exit (int);\n+extern void abort (void);\n+\n+int\n+main (void)\n+{\n+  if (314'159e-0'5f != 3.14159f)\n+    abort ();\n+  exit (0);\n+}\n+\n+#line 0'123\n+_Static_assert (__LINE__ == 123);\n+\n+#line 4'56'7'8'9\n+_Static_assert (__LINE__ == 456789);"}, {"sha": "d72f8adc6cb5f43884683f58f00571c1948e0c6d", "filename": "gcc/testsuite/gcc.dg/c2x-digit-separators-2.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-digit-separators-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-digit-separators-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-digit-separators-2.c?ref=5ea40269a77a3754dd0f610f7c09b1a372e3c7f7", "patch": "@@ -0,0 +1,25 @@\n+/* Test C2x digit separators.  Invalid usages.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x -pedantic-errors\" } */\n+\n+void\n+tf (void)\n+{\n+  int i;\n+  i = 1''2; /* { dg-error \"adjacent digit separators\" } */\n+  i = 0x'0; /* { dg-error \"digit separator after base indicator\" } */\n+  i = 0X'1; /* { dg-error \"digit separator after base indicator\" } */\n+  i = 0b'0; /* { dg-error \"digit separator after base indicator\" } */\n+  i = 0B'1; /* { dg-error \"digit separator after base indicator\" } */\n+  i = 1'u; /* { dg-error \"digit separator outside digit sequence\" } */\n+  float f = 1.2e-3'f; /* { dg-error \"digit separator outside digit sequence\" } */\n+  i = 1'2'3'; /* { dg-error \"12:missing terminating\" } */\n+  ;\n+  double d;\n+  d = 1'.2'3e-4; /* { dg-warning \"multi-character\" } */\n+  /* { dg-error \"expected\" \"parse error\" { target *-*-* } .-1 } */\n+  d = 1.2''3; /* { dg-error \"adjacent digit separators\" } */\n+  d = 1.23e-4''5; /* { dg-error \"adjacent digit separators\" } */\n+  d = 1.2'3e-4'5'; /* { dg-error \"17:missing terminating\" } */\n+  /* { dg-error \"expected\" \"parse error\" { target *-*-* } .-1 } */\n+}"}, {"sha": "18a2341c2d02b9511b6961f7444ea22fbb245e56", "filename": "libcpp/init.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea40269a77a3754dd0f610f7c09b1a372e3c7f7/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=5ea40269a77a3754dd0f610f7c09b1a372e3c7f7", "patch": "@@ -103,13 +103,13 @@ static const struct lang_flags lang_defaults[] =\n   /* GNUC99   */  { 1,  0,  1,  1,  0,  0,  1,   1,   1,   0,    0,     0,     0,   0,      1,   1,     0,   0 },\n   /* GNUC11   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    0,     0,     0,   0,      1,   1,     0,   0 },\n   /* GNUC17   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    0,     0,     0,   0,      1,   1,     0,   0 },\n-  /* GNUC2X   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    1,     0,     0,   1,      1,   1,     1,   0 },\n+  /* GNUC2X   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    1,     1,     0,   1,      1,   1,     1,   0 },\n   /* STDC89   */  { 0,  0,  0,  0,  0,  1,  0,   0,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0 },\n   /* STDC94   */  { 0,  0,  0,  0,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0 },\n   /* STDC99   */  { 1,  0,  1,  1,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0 },\n   /* STDC11   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0 },\n   /* STDC17   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0 },\n-  /* STDC2X   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    1,     0,     1,   1,      0,   1,     1,   0 },\n+  /* STDC2X   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    1,     1,     1,   1,      0,   1,     1,   0 },\n   /* GNUCXX   */  { 0,  1,  1,  1,  0,  0,  1,   0,   0,   0,    0,     0,     0,   0,      1,   1,     0,   0 },\n   /* CXX98    */  { 0,  1,  0,  1,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   1,     0,   0 },\n   /* GNUCXX11 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    0,     0,     0,   0,      1,   1,     0,   0 },"}]}