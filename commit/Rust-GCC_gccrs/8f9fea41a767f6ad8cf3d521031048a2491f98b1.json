{"sha": "8f9fea41a767f6ad8cf3d521031048a2491f98b1", "node_id": "C_kwDOANBUbNoAKDhmOWZlYTQxYTc2N2Y2YWQ4Y2YzZDUyMTAzMTA0OGEyNDkxZjk4YjE", "commit": {"author": {"name": "Haochen Jiang", "email": "haochen.jiang@intel.com", "date": "2021-12-01T08:48:28Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-12-15T08:26:14Z"}, "message": "Add combine splitter to transform vashr/vlshr/vashl_optab to ashr/lshr/ashl_optab for const vector duplicate operand.\n\ngcc/ChangeLog:\n\n\tPR target/101796\n\t* config/i386/predicates.md (const_vector_operand):\n\tAdd new predicate.\n\t* config/i386/sse.md(<insn><mode>3<mask_name>):\n\tAdd new define_split below.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/101796\n\t* gcc.target/i386/pr101796-1.c: New test.", "tree": {"sha": "656d89a628e8794d43d0bb81ce8daca9b4eebf15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/656d89a628e8794d43d0bb81ce8daca9b4eebf15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f9fea41a767f6ad8cf3d521031048a2491f98b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f9fea41a767f6ad8cf3d521031048a2491f98b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f9fea41a767f6ad8cf3d521031048a2491f98b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f9fea41a767f6ad8cf3d521031048a2491f98b1/comments", "author": {"login": "jianghc724", "id": 10798680, "node_id": "MDQ6VXNlcjEwNzk4Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/10798680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianghc724", "html_url": "https://github.com/jianghc724", "followers_url": "https://api.github.com/users/jianghc724/followers", "following_url": "https://api.github.com/users/jianghc724/following{/other_user}", "gists_url": "https://api.github.com/users/jianghc724/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianghc724/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianghc724/subscriptions", "organizations_url": "https://api.github.com/users/jianghc724/orgs", "repos_url": "https://api.github.com/users/jianghc724/repos", "events_url": "https://api.github.com/users/jianghc724/events{/privacy}", "received_events_url": "https://api.github.com/users/jianghc724/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "575ad7700f3d29d9310a778818c0c7a360f4eb1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575ad7700f3d29d9310a778818c0c7a360f4eb1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575ad7700f3d29d9310a778818c0c7a360f4eb1a"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "770e2f0c0dd8fafe5a6fc20ee26537674a290050", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9fea41a767f6ad8cf3d521031048a2491f98b1/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9fea41a767f6ad8cf3d521031048a2491f98b1/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=8f9fea41a767f6ad8cf3d521031048a2491f98b1", "patch": "@@ -1844,6 +1844,19 @@\n   return true;\n })\n \n+;; Return true if OP is a const vector with duplicate value.\n+(define_predicate \"const_vector_duplicate_operand\"\n+  (match_code \"const_vector\")\n+{\n+  rtx elt = XVECEXP (op, 0, 0);\n+  int i, nelt = XVECLEN (op, 0);\n+\n+  for (i = 1; i < nelt; ++i)\n+    if (!rtx_equal_p (elt, XVECEXP (op, 0, i)))\n+      return false;\n+  return true;\n+})\n+\n ;; Return true if OP is a parallel for a vbroadcast permute.\n (define_predicate \"avx_vbroadcast_operand\"\n   (and (match_code \"parallel\")"}, {"sha": "768a93ed1c17110027f643d199e9845bf8082d24", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9fea41a767f6ad8cf3d521031048a2491f98b1/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9fea41a767f6ad8cf3d521031048a2491f98b1/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=8f9fea41a767f6ad8cf3d521031048a2491f98b1", "patch": "@@ -15287,6 +15287,20 @@\n        (const_string \"0\")))\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+;; PR target/101796: Transfrom movl+vpbranchcastw+vpsravw to vpsraw\n+;; when COUNT is immediate.\n+(define_split\n+  [(set (match_operand:VI248_AVX512BW 0 \"register_operand\")\n+\t(any_shift:VI248_AVX512BW\n+\t  (match_operand:VI248_AVX512BW 1 \"nonimmediate_operand\")\n+\t  (match_operand:VI248_AVX512BW 2 \"const_vector_duplicate_operand\")))]\n+  \"TARGET_AVX512F && GET_MODE_UNIT_BITSIZE (<MODE>mode)\n+   > INTVAL (XVECEXP (operands[2], 0, 0))\"\n+  [(set (match_dup 0)\n+\t(any_shift:VI248_AVX512BW\n+\t  (match_dup 1)\n+\t  (match_dup 3)))]\n+  \"operands[3] = XVECEXP (operands[2], 0, 0);\")\n \n (define_expand \"vec_shl_<mode>\"\n   [(set (match_dup 3)"}, {"sha": "3a5f50dbedab392bee7491327952e709b8a2f2aa", "filename": "gcc/testsuite/gcc.target/i386/pr101796-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9fea41a767f6ad8cf3d521031048a2491f98b1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101796-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9fea41a767f6ad8cf3d521031048a2491f98b1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101796-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101796-1.c?ref=8f9fea41a767f6ad8cf3d521031048a2491f98b1", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512bw\" } */\n+/* { dg-final {scan-assembler-times \"vpsrlw\\[ \\\\t\\]\" 1 } } */\n+/* { dg-final {scan-assembler-times \"vpsllw\\[ \\\\t\\]\" 1 } } */\n+/* { dg-final {scan-assembler-times \"vpsraw\\[ \\\\t\\]\" 1 } } */\n+/* { dg-final {scan-assembler-not \"vpbroadcastw\\[ \\\\t\\]\" } } */\n+/* { dg-final {scan-assembler-not \"vpsrlvw\\[ \\\\t\\]\" } } */\n+/* { dg-final {scan-assembler-not \"vpsllvw\\[ \\\\t\\]\" } } */\n+/* { dg-final {scan-assembler-not \"vpsravw\\[ \\\\t\\]\" } } */\n+#include <immintrin.h>\n+\n+volatile __m512i a, b;\n+\n+void\n+foo()\n+{\n+  b = _mm512_srlv_epi16 (a, _mm512_set1_epi16 (3));\n+  b = _mm512_sllv_epi16 (a, _mm512_set1_epi16 (4));\n+  b = _mm512_srav_epi16 (a, _mm512_set1_epi16 (5));\n+}"}]}