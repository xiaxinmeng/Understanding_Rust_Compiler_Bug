{"sha": "fc349931adcf1024ee95e0a0cd98cf4a41996093", "node_id": "C_kwDOANBUbNoAKGZjMzQ5OTMxYWRjZjEwMjRlZTk1ZTBhMGNkOThjZjRhNDE5OTYwOTM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-01-04T17:42:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-01-04T17:42:31Z"}, "message": "c++: Error recovery in merge_default_template_args [PR108206]\n\nWe ICE on the following testcase during error recovery, both new_parm\nand old_parm are error_mark_node, the ICE is on\n          error (\"redefinition of default argument for %q+#D\", new_parm);\n          inform (DECL_SOURCE_LOCATION (old_parm),\n                  \"original definition appeared here\");\nwhere we don't print anything useful for new_parm and ICE trying to\naccess DECL_SOURCE_LOCATION of old_parm.  I think we shouldn't diagnose\nanything when either of the parms is erroneous, GCC 11 before\nmerge_default_template_args has been added was doing\n      if (TREE_VEC_ELT (tmpl_parms, i) == error_mark_node\n          || TREE_VEC_ELT (parms, i) == error_mark_node)\n        continue;\n\n      tmpl_parm = TREE_VALUE (TREE_VEC_ELT (tmpl_parms, i));\n      if (error_operand_p (tmpl_parm))\n        return false;\nin redeclare_class_template.\n\n2023-01-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/108206\n\t* decl.cc (merge_default_template_args): Return false if either\n\tnew_parm or old_parm are erroneous.\n\n\t* g++.dg/template/pr108206.C: New test.", "tree": {"sha": "0f70461ce5caaf86a2fb26e7babe38dd537b4a0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f70461ce5caaf86a2fb26e7babe38dd537b4a0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc349931adcf1024ee95e0a0cd98cf4a41996093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc349931adcf1024ee95e0a0cd98cf4a41996093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc349931adcf1024ee95e0a0cd98cf4a41996093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc349931adcf1024ee95e0a0cd98cf4a41996093/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "66e7d9ff50ee31938cc1a35c300eab59748a583d", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc349931adcf1024ee95e0a0cd98cf4a41996093/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc349931adcf1024ee95e0a0cd98cf4a41996093/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=fc349931adcf1024ee95e0a0cd98cf4a41996093", "patch": "@@ -1556,6 +1556,8 @@ merge_default_template_args (tree new_parms, tree old_parms, bool class_p)\n       tree old_parm = TREE_VALUE (TREE_VEC_ELT (old_parms, i));\n       tree& new_default = TREE_PURPOSE (TREE_VEC_ELT (new_parms, i));\n       tree& old_default = TREE_PURPOSE (TREE_VEC_ELT (old_parms, i));\n+      if (error_operand_p (new_parm) || error_operand_p (old_parm))\n+\treturn false;\n       if (new_default != NULL_TREE && old_default != NULL_TREE)\n \t{\n \t  auto_diagnostic_group d;"}, {"sha": "9362d261bea57c3be7f9f073dfd274106bd0c06a", "filename": "gcc/testsuite/g++.dg/template/pr108206.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc349931adcf1024ee95e0a0cd98cf4a41996093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr108206.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc349931adcf1024ee95e0a0cd98cf4a41996093/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr108206.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr108206.C?ref=fc349931adcf1024ee95e0a0cd98cf4a41996093", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/108206\n+// { dg-do compile { target c++11 } }\n+\n+template <X x, typename T1> void foo (T1);\t// { dg-error \"'X' has not been declared\" }\n+template <X x, typename T2> void foo (T2);\t// { dg-error \"'X' has not been declared\" }"}]}