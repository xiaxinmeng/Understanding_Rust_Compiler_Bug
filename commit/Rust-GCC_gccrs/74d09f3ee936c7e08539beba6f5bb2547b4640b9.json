{"sha": "74d09f3ee936c7e08539beba6f5bb2547b4640b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRkMDlmM2VlOTM2YzdlMDg1MzliZWJhNmY1YmIyNTQ3YjQ2NDBiOQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-04-30T18:40:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:20Z"}, "message": "[Ada] AI12-0293-1 Remove pragma Assert\n\n2020-06-19  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-ststbo.adb (Write): Replace pragma Assert with \"if\n\t... raise Constraint_Error\".", "tree": {"sha": "ddfb96dbcec6384d20ca270860592e24de7d14e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddfb96dbcec6384d20ca270860592e24de7d14e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74d09f3ee936c7e08539beba6f5bb2547b4640b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74d09f3ee936c7e08539beba6f5bb2547b4640b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74d09f3ee936c7e08539beba6f5bb2547b4640b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74d09f3ee936c7e08539beba6f5bb2547b4640b9/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b64bea1830d8fa651843f4e5e5c04263746b06af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64bea1830d8fa651843f4e5e5c04263746b06af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b64bea1830d8fa651843f4e5e5c04263746b06af"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "4bd3c1742547e2e752e5ebe6b6c5c258cdad467d", "filename": "gcc/ada/libgnat/a-ststbo.adb", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74d09f3ee936c7e08539beba6f5bb2547b4640b9/gcc%2Fada%2Flibgnat%2Fa-ststbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74d09f3ee936c7e08539beba6f5bb2547b4640b9/gcc%2Fada%2Flibgnat%2Fa-ststbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ststbo.adb?ref=74d09f3ee936c7e08539beba6f5bb2547b4640b9", "patch": "@@ -79,16 +79,19 @@ package body Ada.Streams.Storage.Bounded is\n    overriding procedure Write\n      (Stream : in out Stream_Type; Item : Stream_Element_Array)\n    is\n-      pragma Assert\n-        (Element_Count (Stream) + Item'Length <= Stream.Max_Elements\n-           or else (raise Constraint_Error));\n-      --  That is a precondition in the RM\n-\n-      New_Count : constant Stream_Element_Count :=\n-        Element_Count (Stream) + Item'Length;\n    begin\n-      Stream.Elements (Element_Count (Stream) + 1 .. New_Count) := Item;\n-      Stream.Count := New_Count;\n+      if Element_Count (Stream) + Item'Length > Stream.Max_Elements then\n+         --  That is a precondition in the RM\n+         raise Constraint_Error;\n+      end if;\n+\n+      declare\n+         New_Count : constant Stream_Element_Count :=\n+           Element_Count (Stream) + Item'Length;\n+      begin\n+         Stream.Elements (Element_Count (Stream) + 1 .. New_Count) := Item;\n+         Stream.Count := New_Count;\n+      end;\n    end Write;\n \n    -------------------"}]}