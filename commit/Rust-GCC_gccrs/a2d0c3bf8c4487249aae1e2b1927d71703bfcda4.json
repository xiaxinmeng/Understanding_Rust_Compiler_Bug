{"sha": "a2d0c3bf8c4487249aae1e2b1927d71703bfcda4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJkMGMzYmY4YzQ0ODcyNDlhYWUxZTJiMTkyN2Q3MTcwM2JmY2RhNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-02-08T13:21:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-02-08T13:21:36Z"}, "message": "re PR tree-optimization/89247 (ICE in expand_LOOP_VECTORIZED, at internal-fn.c:2409)\n\n2019-02-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/89247\n\t* tree-if-conv.c: Include tree-cfgcleanup.h.\n\t(version_loop_for_if_conversion): Record LOOP_VECTORIZED call.\n\t(tree_if_conversion): Pass through predicate vector.\n\t(pass_if_conversion::execute): Do CFG cleanup and SSA update\n\tinline, see if any if-converted loops we refrece in\n\tLOOP_VECTORIZED calls vanished and fixup.\n\t* tree-if-conv.h (tree_if_conversion): Adjust prototype.\n\n\t* gcc.dg/torture/pr89247.c: New testcase.\n\nFrom-SVN: r268689", "tree": {"sha": "2bc0646c56aa7a909d392e2a090b45f5e17c3c5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bc0646c56aa7a909d392e2a090b45f5e17c3c5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11719d1474c6dbd574867646b7c53f9719abc178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11719d1474c6dbd574867646b7c53f9719abc178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11719d1474c6dbd574867646b7c53f9719abc178"}], "stats": {"total": 67, "additions": 61, "deletions": 6}, "files": [{"sha": "a961722d054e3f2d47cb2fc01f1d03467a507ce5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2d0c3bf8c4487249aae1e2b1927d71703bfcda4", "patch": "@@ -1,3 +1,14 @@\n+2019-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89247\n+\t* tree-if-conv.c: Include tree-cfgcleanup.h.\n+\t(version_loop_for_if_conversion): Record LOOP_VECTORIZED call.\n+\t(tree_if_conversion): Pass through predicate vector.\n+\t(pass_if_conversion::execute): Do CFG cleanup and SSA update\n+\tinline, see if any if-converted loops we refrece in\n+\tLOOP_VECTORIZED calls vanished and fixup.\n+\t* tree-if-conv.h (tree_if_conversion): Adjust prototype.\n+\n 2019-02-08  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* config/s390/constraints.md (jdd): New constraint."}, {"sha": "eeb10000bf5557c29a3f2094bbce337d37054bf5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a2d0c3bf8c4487249aae1e2b1927d71703bfcda4", "patch": "@@ -1,3 +1,8 @@\n+2019-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89247\n+\t* gcc.dg/torture/pr89247.c: New testcase.\n+\n 2019-02-08  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* gcc.target/s390/jump-label.c: New test."}, {"sha": "558e89e222a60e4cd0c988af4ae75be5ece568b5", "filename": "gcc/testsuite/gcc.dg/torture/pr89247.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89247.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89247.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89247.c?ref=a2d0c3bf8c4487249aae1e2b1927d71703bfcda4", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+\n+int *a;\n+void b()\n+{\n+  void *c = &&d;\n+  for (;;)\n+    d:\n+\tif (*a)\n+\t  ;\n+\telse\n+\t  *a = ({ 0 < b; });\n+}"}, {"sha": "cfeaec7ae076cb62a96021221afa94c77df8622b", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=a2d0c3bf8c4487249aae1e2b1927d71703bfcda4", "patch": "@@ -119,6 +119,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"internal-fn.h\"\n #include \"fold-const.h\"\n #include \"tree-ssa-sccvn.h\"\n+#include \"tree-cfgcleanup.h\"\n \n /* Only handle PHIs with no more arguments unless we are asked to by\n    simd pragma.  */\n@@ -2719,7 +2720,7 @@ combine_blocks (struct loop *loop)\n    consistent after the condition is folded in the vectorizer.  */\n \n static struct loop *\n-version_loop_for_if_conversion (struct loop *loop)\n+version_loop_for_if_conversion (struct loop *loop, vec<gimple *> *preds)\n {\n   basic_block cond_bb;\n   tree cond = make_ssa_name (boolean_type_node);\n@@ -2759,6 +2760,7 @@ version_loop_for_if_conversion (struct loop *loop)\n   new_loop->force_vectorize = false;\n   gsi = gsi_last_bb (cond_bb);\n   gimple_call_set_arg (g, 1, build_int_cst (integer_type_node, new_loop->num));\n+  preds->safe_push (g);\n   gsi_insert_before (&gsi, g, GSI_SAME_STMT);\n   update_ssa (TODO_update_ssa);\n   return new_loop;\n@@ -2979,7 +2981,7 @@ ifcvt_local_dce (basic_block bb)\n    changed.  */\n \n unsigned int\n-tree_if_conversion (struct loop *loop)\n+tree_if_conversion (struct loop *loop, vec<gimple *> *preds)\n {\n   unsigned int todo = 0;\n   bool aggressive_if_conv;\n@@ -3027,7 +3029,7 @@ tree_if_conversion (struct loop *loop)\n       struct loop *vloop\n \t= (versionable_outer_loop_p (loop_outer (loop))\n \t   ? loop_outer (loop) : loop);\n-      struct loop *nloop = version_loop_for_if_conversion (vloop);\n+      struct loop *nloop = version_loop_for_if_conversion (vloop, preds);\n       if (nloop == NULL)\n \tgoto cleanup;\n       if (vloop != loop)\n@@ -3139,11 +3141,12 @@ pass_if_conversion::execute (function *fun)\n   if (number_of_loops (fun) <= 1)\n     return 0;\n \n+  auto_vec<gimple *> preds;\n   FOR_EACH_LOOP (loop, 0)\n     if (flag_tree_loop_if_convert == 1\n \t|| ((flag_tree_loop_vectorize || loop->force_vectorize)\n \t    && !loop->dont_vectorize))\n-      todo |= tree_if_conversion (loop);\n+      todo |= tree_if_conversion (loop, &preds);\n \n   if (todo)\n     {\n@@ -3158,7 +3161,30 @@ pass_if_conversion::execute (function *fun)\n \tgcc_assert (!bb->aux);\n     }\n \n-  return todo;\n+  /* Perform IL update now, it might elide some loops.  */\n+  if (todo & TODO_cleanup_cfg)\n+    {\n+      cleanup_tree_cfg ();\n+      if (need_ssa_update_p (fun))\n+\ttodo |= TODO_update_ssa;\n+    }\n+  if (todo & TODO_update_ssa_any)\n+    update_ssa (todo & TODO_update_ssa_any);\n+\n+  /* If if-conversion elided the loop fall back to the original one.  */\n+  for (unsigned i = 0; i < preds.length (); ++i)\n+    {\n+      gimple *g = preds[i];\n+      unsigned ifcvt_loop = tree_to_uhwi (gimple_call_arg (g, 0));\n+      if (!get_loop (fun, ifcvt_loop))\n+\t{\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \"If-converted loop vanished\\n\");\n+\t  fold_loop_internal_call (g, boolean_false_node);\n+\t}\n+    }\n+\n+  return 0;\n }\n \n } // anon namespace"}, {"sha": "c136ebb17ffccd03f9925503dff04f437d48c5eb", "filename": "gcc/tree-if-conv.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2Ftree-if-conv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2d0c3bf8c4487249aae1e2b1927d71703bfcda4/gcc%2Ftree-if-conv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.h?ref=a2d0c3bf8c4487249aae1e2b1927d71703bfcda4", "patch": "@@ -19,6 +19,6 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_TREE_IF_CONV_H\n #define GCC_TREE_IF_CONV_H\n \n-unsigned int tree_if_conversion (struct loop *);\n+unsigned int tree_if_conversion (struct loop *, vec<gimple *> * = NULL);\n \n #endif  /* GCC_TREE_IF_CONV_H  */"}]}