{"sha": "a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIxZjIzZmM2N2FjZGU5ZGM3NzA4YTBhYzJlZDA2Y2JiZGVkZjljZg==", "commit": {"author": {"name": "Warren Levy", "email": "warrenl@cygnus.com", "date": "1999-06-10T18:52:00Z"}, "committer": {"name": "Warren Levy", "email": "warrenl@gcc.gnu.org", "date": "1999-06-10T18:52:00Z"}, "message": "FileDescriptor.java (FileDescriptor(String, int)): Throw FileNotFoundException instead of IOException.\n\n1999-06-10  Warren Levy  <warrenl@cygnus.com>\n\t* java/io/FileDescriptor.java (FileDescriptor(String, int)):\n\tThrow FileNotFoundException instead of IOException.\n\t(open): ditto.\n\t* java/io/FileInputStream.java (FileInputStream): Doesn't throw\n\tIOException.\n\t* java/text/Collator.java (CANONICAL_DECOMPOSITION): Fixed typo\n\tin static field name.\n\nFrom-SVN: r27473", "tree": {"sha": "c3f6a815904d87ad6cc38aa24b6d47c9dca2067c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3f6a815904d87ad6cc38aa24b6d47c9dca2067c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf/comments", "author": null, "committer": null, "parents": [{"sha": "9a726fc16f70ba230cee347c2d40223b74f612fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a726fc16f70ba230cee347c2d40223b74f612fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a726fc16f70ba230cee347c2d40223b74f612fc"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "8c473d0137631754a28e7a758fa102db7c3d8f91", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf", "patch": "@@ -1,3 +1,13 @@\n+1999-06-10  Warren Levy  <warrenl@cygnus.com>\n+\n+\t* java/io/FileDescriptor.java (FileDescriptor(String, int)):\n+\tThrow FileNotFoundException instead of IOException.\n+\t(open): ditto.\n+\t* java/io/FileInputStream.java (FileInputStream): Doesn't throw\n+\tIOException.\n+\t* java/text/Collator.java (CANONICAL_DECOMPOSITION): Fixed typo\n+\tin static field name.\n+\n 1999-06-09  Bryce McKinlay <bryce@albatross.co.nz>\n \n \t* java/lang/Runtime.java (exec): Convert prog name and arguments"}, {"sha": "d345db29ad7ae8674a69b52b107817ab06088619", "filename": "libjava/java/io/FileDescriptor.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf/libjava%2Fjava%2Fio%2FFileDescriptor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf/libjava%2Fjava%2Fio%2FFileDescriptor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileDescriptor.java?ref=a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf", "patch": "@@ -42,7 +42,7 @@\n   static final int CUR = 1;\n \n   // Open a file.  MODE is a combination of the above mode flags.\n-  FileDescriptor (String path, int mode) throws IOException\n+  FileDescriptor (String path, int mode) throws FileNotFoundException\n   {\n     fd = open (path, mode);\n   }\n@@ -52,7 +52,7 @@ public FileDescriptor ()\n     fd = -1;\n   }\n \n-  native int open (String path, int mode) throws IOException;\n+  native int open (String path, int mode) throws FileNotFoundException;\n   native void write (int b) throws IOException;\n   native void write (byte[] b, int offset, int len)\n     throws IOException, NullPointerException, IndexOutOfBoundsException;"}, {"sha": "04ad6dd78dbbf6db65ad8bf79c36fed6de74bfa8", "filename": "libjava/java/io/FileInputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf/libjava%2Fjava%2Fio%2FFileInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf/libjava%2Fjava%2Fio%2FFileInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileInputStream.java?ref=a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf", "patch": "@@ -23,15 +23,15 @@ public class FileInputStream extends InputStream\n   /* Contains the file descriptor for referencing the actual file. */\n   private FileDescriptor fd;\n \n-  public FileInputStream(String name) throws FileNotFoundException, IOException\n+  public FileInputStream(String name) throws FileNotFoundException\n   {\n     SecurityManager s = System.getSecurityManager();\n     if (s != null)\n       s.checkRead(name);\n     fd = new FileDescriptor(name, FileDescriptor.READ);\n   }\n \n-  public FileInputStream(File file) throws FileNotFoundException, IOException\n+  public FileInputStream(File file) throws FileNotFoundException\n   {\n     this(file.getPath());\n   }"}, {"sha": "c323fc79a64c8dc924c98c0e4d8c1fc57f04f651", "filename": "libjava/java/text/Collator.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf/libjava%2Fjava%2Ftext%2FCollator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf/libjava%2Fjava%2Ftext%2FCollator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FCollator.java?ref=a21f23fc67acde9dc7708a0ac2ed06cbbdedf9cf", "patch": "@@ -27,7 +27,7 @@\n public abstract class Collator implements Cloneable, Serializable\n {\n   public static final int NO_DECOMPOSITION = 0;\n-  public static final int CANONCIAL_DECOMPOSITION = 1;\n+  public static final int CANONICAL_DECOMPOSITION = 1;\n   public static final int FULL_DECOMPOSITION = 2;\n \n   public static final int PRIMARY = 0;\n@@ -38,7 +38,7 @@ public abstract class Collator implements Cloneable, Serializable\n   protected Collator ()\n   {\n     strength = TERTIARY;\n-    decmp = CANONCIAL_DECOMPOSITION;\n+    decmp = CANONICAL_DECOMPOSITION;\n   }\n \n   public abstract int compare (String source, String target);\n@@ -107,7 +107,7 @@ public synchronized int getStrength ()\n   public synchronized void setDecomposition (int mode)\n   {\n     if (mode != NO_DECOMPOSITION\n-\t&& mode != CANONCIAL_DECOMPOSITION\n+\t&& mode != CANONICAL_DECOMPOSITION\n \t&& mode != FULL_DECOMPOSITION)\n       throw new IllegalArgumentException ();\n     decmp = mode;"}]}