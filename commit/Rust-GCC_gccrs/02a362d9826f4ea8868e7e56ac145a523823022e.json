{"sha": "02a362d9826f4ea8868e7e56ac145a523823022e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhMzYyZDk4MjZmNGVhODg2OGU3ZTU2YWMxNDVhNTIzODIzMDIyZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2002-11-20T10:37:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2002-11-20T10:37:08Z"}, "message": "re PR c/8518 (ICE when compiling mplayer)\n\n\tPR c/8518\n\t* c-decl.c (duplicate_decls): Outline the second definition\n\tof an extern inline function in all cases.\n\nFrom-SVN: r59302", "tree": {"sha": "95acf43b84272e0ed2ef3117774d8b4e65e05100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95acf43b84272e0ed2ef3117774d8b4e65e05100"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02a362d9826f4ea8868e7e56ac145a523823022e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a362d9826f4ea8868e7e56ac145a523823022e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a362d9826f4ea8868e7e56ac145a523823022e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a362d9826f4ea8868e7e56ac145a523823022e/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5354730bf62ca4d1418885813585e2cf63a2b842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5354730bf62ca4d1418885813585e2cf63a2b842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5354730bf62ca4d1418885813585e2cf63a2b842"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "189c310efd093f3708c15b234ede6fd506fcdf37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a362d9826f4ea8868e7e56ac145a523823022e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a362d9826f4ea8868e7e56ac145a523823022e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02a362d9826f4ea8868e7e56ac145a523823022e", "patch": "@@ -1,3 +1,9 @@\n+2002-11-20 \ufffdEric Botcazou \ufffd<ebotcazou@libertysurf.fr>\n+\n+\tPR c/8518\n+\t* c-decl.c (duplicate_decls): Outline the second definition\n+\tof an extern inline function in all cases.\n+\n 2002-11-20  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* stor-layout.c (place_field): Update rli->offset as well as"}, {"sha": "5b078c0cde526ec2d52680418a2af7b85c9fe948", "filename": "gcc/c-decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a362d9826f4ea8868e7e56ac145a523823022e/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a362d9826f4ea8868e7e56ac145a523823022e/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=02a362d9826f4ea8868e7e56ac145a523823022e", "patch": "@@ -1474,9 +1474,10 @@ duplicate_decls (newdecl, olddecl, different_binding_level)\n \t inline, make sure we emit debug info for the inline before we\n \t throw it away, in case it was inlined into a function that hasn't\n \t been written out yet.  */\n-      if (new_is_definition && DECL_INITIAL (olddecl) && TREE_USED (olddecl))\n+      if (new_is_definition && DECL_INITIAL (olddecl))\n \t{\n-\t  (*debug_hooks->outlining_inline_function) (olddecl);\n+\t  if (TREE_USED (olddecl))\n+\t    (*debug_hooks->outlining_inline_function) (olddecl);\n \n \t  /* The new defn must not be inline.  */\n \t  DECL_INLINE (newdecl) = 0;"}]}