{"sha": "1541ede1e18b72f77b84fdef0478e97684d14cf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU0MWVkZTFlMThiNzJmNzdiODRmZGVmMDQ3OGU5NzY4NGQxNGNmMQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-28T08:54:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-28T08:54:18Z"}, "message": "[Ada] Copy index expression trees rather than relocating them\n\n2018-05-28  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_aggr.adb (Flatten): Copy tree of expression in a component\n\tassociation with a range or a set of discrete choices, rather than\n\trelocating the node. This avoids inconsistencies in the tree when\n\thandling nested subprograms with uplevel references for LLVM.\n\nFrom-SVN: r260829", "tree": {"sha": "e81527f078a261020212905d2a046b4ee07168ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e81527f078a261020212905d2a046b4ee07168ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1541ede1e18b72f77b84fdef0478e97684d14cf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1541ede1e18b72f77b84fdef0478e97684d14cf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1541ede1e18b72f77b84fdef0478e97684d14cf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1541ede1e18b72f77b84fdef0478e97684d14cf1/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f167c73516dcce0e9b0f659a8ca9bdbaf10f8097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f167c73516dcce0e9b0f659a8ca9bdbaf10f8097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f167c73516dcce0e9b0f659a8ca9bdbaf10f8097"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "95e4822412f7cf7d440c8d1e53bc39b37d05cd1a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1541ede1e18b72f77b84fdef0478e97684d14cf1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1541ede1e18b72f77b84fdef0478e97684d14cf1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1541ede1e18b72f77b84fdef0478e97684d14cf1", "patch": "@@ -1,3 +1,10 @@\n+2018-05-28  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Flatten): Copy tree of expression in a component\n+\tassociation with a range or a set of discrete choices, rather than\n+\trelocating the node. This avoids inconsistencies in the tree when\n+\thandling nested subprograms with uplevel references for LLVM.\n+\n 2018-05-28  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_util.adb (Possible_Bit_Aligned_Component): Always return False in"}, {"sha": "cedc7224f28970b86393a2daabd3d6129de839b3", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1541ede1e18b72f77b84fdef0478e97684d14cf1/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1541ede1e18b72f77b84fdef0478e97684d14cf1/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=1541ede1e18b72f77b84fdef0478e97684d14cf1", "patch": "@@ -4490,7 +4490,9 @@ package body Exp_Aggr is\n                      return False;\n                   end if;\n \n-                  Vals (Num) := Relocate_Node (Elmt);\n+                  --  Duplicate expression for each index it covers.\n+\n+                  Vals (Num) := New_Copy_Tree (Elmt);\n                   Num := Num + 1;\n \n                   Next (Elmt);"}]}