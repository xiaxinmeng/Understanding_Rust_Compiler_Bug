{"sha": "33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNhM2RmYzRmMDEwMmZlY2ZjNDJlZjk4M2QzZmIzYTYxZjA1ZWMwNw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-05-28T22:03:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-05-28T22:03:06Z"}, "message": "sched-deps.c (sched_analyze): Do not clear SCHED_GROUP_P.\n\n        * sched-deps.c (sched_analyze): Do not clear SCHED_GROUP_P.\n        * haifa-sched.c (move_insn): Clear SCHED_GROUP_P after it is used.\n\nCo-Authored-By: Jeff Law <law@redhat.com>\n\nFrom-SVN: r53973", "tree": {"sha": "1f652b49281e66219ae2c1028c23fa31f0b56d8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f652b49281e66219ae2c1028c23fa31f0b56d8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07/comments", "author": null, "committer": null, "parents": [{"sha": "972957badc39400fb0839db031835c30d090583a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972957badc39400fb0839db031835c30d090583a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/972957badc39400fb0839db031835c30d090583a"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "5197780406015b4fdd4072bad57171eeb3e079c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07", "patch": "@@ -1,4 +1,11 @@\n+2002-05-22  David Edelsohn  <edelsohn@gnu.org>\n+\t    Jeff Law <law@redhat.com>\n+\n+\t* sched-deps.c (sched_analyze): Do not clear SCHED_GROUP_P.\n+\t* haifa-sched.c (move_insn): Clear SCHED_GROUP_P after it is used.\n+\n 2002-05-28\tMarc Espie <espie@openbsd.org>\n+\n \t* config/i386/openbsd.h (HAVE_GAS_MAX_SKIP_P2ALIGN):  Remove, \n \tinherited from gas.h.\n \t(ASM_QUAD):  Undef.  OpenBSD does not support it."}, {"sha": "63a31352a5b7e8f319368df8f3277a3e2b1aca88", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07", "patch": "@@ -1775,6 +1775,8 @@ move_insn (insn, last)\n \tretval = reemit_notes (insn, insn);\n       else\n \treemit_notes (insn, insn);\n+      /* Consume SCHED_GROUP_P flag.  */\n+      SCHED_GROUP_P (insn) = 0;\n       insn = prev;\n     }\n "}, {"sha": "0afb21bcf6b618eaff5bebf413687af91f654eb3", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=33a3dfc4f0102fecfc42ef983d3fb3a61f05ec07", "patch": "@@ -1231,9 +1231,6 @@ sched_analyze (deps, head, tail)\n \t  /* Clear out the stale LOG_LINKS from flow.  */\n \t  free_INSN_LIST_list (&LOG_LINKS (insn));\n \n-\t  /* Clear out stale SCHED_GROUP_P.  */\n-\t  SCHED_GROUP_P (insn) = 0;\n-\n \t  /* Make each JUMP_INSN a scheduling barrier for memory\n              references.  */\n \t  if (GET_CODE (insn) == JUMP_INSN)"}]}