{"sha": "2c832ffedf06ff614fc36c44ab6c892d84075e08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM4MzJmZmVkZjA2ZmY2MTRmYzM2YzQ0YWI2Yzg5MmQ4NDA3NWUwOA==", "commit": {"author": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2020-05-05T17:44:19Z"}, "committer": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2020-05-18T18:04:25Z"}, "message": "tree-optimization: Fix use of uninitialized variables warnings [PR94952]\n\nWhile bootstrapping GCC on S/390 with --enable-checking=release several\nwarnings about use of uninitialized variables bitpos, bitregion_start, and\nbitregion_end of function pass_store_merging::process_store are raised.\nAccording to PR94952 these seem to be false positives which are silenced by\ninitialising the mentioned variables.\n\nBootstrapped on S/390.  Ok for master and releases/gcc-10 assuming that\nregtest succeeds (still running but I don't see a reason why it\nshould fail)?\n\ngcc/ChangeLog:\n\n2020-05-18  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n\n\tPR tree-optimization/94952\n\t* gimple-ssa-store-merging.c (pass_store_merging::process_store):\n\tInitialize variables bitpos, bitregion_start, and bitregion_end in\n\torder to silence warnings about use of uninitialized variables.", "tree": {"sha": "209b08caabf201f8890e8898bcf27575261a7f82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/209b08caabf201f8890e8898bcf27575261a7f82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c832ffedf06ff614fc36c44ab6c892d84075e08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c832ffedf06ff614fc36c44ab6c892d84075e08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c832ffedf06ff614fc36c44ab6c892d84075e08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c832ffedf06ff614fc36c44ab6c892d84075e08/comments", "author": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be464161b4ae128681958d94aa460531cf30e0a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be464161b4ae128681958d94aa460531cf30e0a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be464161b4ae128681958d94aa460531cf30e0a4"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "0a1ff053ffa50adb63631da7a9f5c473dd675d78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c832ffedf06ff614fc36c44ab6c892d84075e08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c832ffedf06ff614fc36c44ab6c892d84075e08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c832ffedf06ff614fc36c44ab6c892d84075e08", "patch": "@@ -1,3 +1,10 @@\n+2020-05-18  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\tPR tree-optimization/94952\n+\t* gimple-ssa-store-merging.c (pass_store_merging::process_store):\n+\tInitialize variables bitpos, bitregion_start, and bitregion_end in\n+\torder to silence warnings about use of uninitialized variables.\n+\n 2020-05-18  Carl Love  <cel@us.ibm.com>\n \n \tPR target/94833"}, {"sha": "c8e1877f54077b2c905994e177d85f3649d0a0e2", "filename": "gcc/gimple-ssa-store-merging.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c832ffedf06ff614fc36c44ab6c892d84075e08/gcc%2Fgimple-ssa-store-merging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c832ffedf06ff614fc36c44ab6c892d84075e08/gcc%2Fgimple-ssa-store-merging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.c?ref=2c832ffedf06ff614fc36c44ab6c892d84075e08", "patch": "@@ -4668,8 +4668,8 @@ pass_store_merging::process_store (gimple *stmt)\n {\n   tree lhs = gimple_assign_lhs (stmt);\n   tree rhs = gimple_assign_rhs1 (stmt);\n-  poly_uint64 bitsize, bitpos;\n-  poly_uint64 bitregion_start, bitregion_end;\n+  poly_uint64 bitsize, bitpos = 0;\n+  poly_uint64 bitregion_start = 0, bitregion_end = 0;\n   tree base_addr\n     = mem_valid_for_store_merging (lhs, &bitsize, &bitpos,\n \t\t\t\t   &bitregion_start, &bitregion_end);"}]}