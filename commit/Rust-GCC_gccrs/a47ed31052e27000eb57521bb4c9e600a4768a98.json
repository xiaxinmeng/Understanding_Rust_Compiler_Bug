{"sha": "a47ed31052e27000eb57521bb4c9e600a4768a98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ3ZWQzMTA1MmUyNzAwMGViNTc1MjFiYjRjOWU2MDBhNDc2OGE5OA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-02-24T12:52:30Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-02-24T12:52:30Z"}, "message": "cpplex.c (cpp_interpret_charconst): Get signedness or otherwise of wide character constants correct.\n\n\t* cpplex.c (cpp_interpret_charconst): Get signedness or\n\totherwise of wide character constants correct.\n\t* cppexp.c (lex): Get signedness of wide charconsts correct.\n\t* testsuite/gcc.dg/cpp/wchar-1.c: New test.\n\nFrom-SVN: r50005", "tree": {"sha": "b8bc66887f2c3523f7edef448ecb1be8ff9d481a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8bc66887f2c3523f7edef448ecb1be8ff9d481a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a47ed31052e27000eb57521bb4c9e600a4768a98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47ed31052e27000eb57521bb4c9e600a4768a98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a47ed31052e27000eb57521bb4c9e600a4768a98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47ed31052e27000eb57521bb4c9e600a4768a98/comments", "author": null, "committer": null, "parents": [{"sha": "cb8f73be28c7ad42f8244cc9e442c7559d39f725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8f73be28c7ad42f8244cc9e442c7559d39f725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8f73be28c7ad42f8244cc9e442c7559d39f725"}], "stats": {"total": 57, "additions": 49, "deletions": 8}, "files": [{"sha": "06217541fc0a14f1691d0f6c75edc3373ed40cfc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a47ed31052e27000eb57521bb4c9e600a4768a98", "patch": "@@ -1,3 +1,9 @@\n+2002-02-24  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cpplex.c (cpp_interpret_charconst): Get signedness or\n+\totherwise of wide character constants correct.\n+\t* cppexp.c (lex): Get signedness of wide charconsts correct.\n+\n Sun Feb 24 07:41:31 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* optabs.c (widen_operand): Only call convert_modes for"}, {"sha": "1d4ceccde956462398139e0ff779d17a7e344c59", "filename": "gcc/cppexp.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=a47ed31052e27000eb57521bb4c9e600a4768a98", "patch": "@@ -293,8 +293,10 @@ lex (pfile, skip_evaluation)\n       {\n \tunsigned int chars_seen;\n \n-\t/* This is always a signed type.  */\n-\top.unsignedp = 0;\n+\tif (token->type == CPP_CHAR)\n+\t  op.unsignedp = 0;\n+\telse\n+\t  op.unsignedp = WCHAR_UNSIGNED;\n \top.op = CPP_NUMBER;\n \top.value = cpp_interpret_charconst (pfile, token, 1, 0, &chars_seen);\n \treturn op;"}, {"sha": "eea6a9e1c53a426eb24d698ceacbcc22ac19e96a", "filename": "gcc/cpplex.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=a47ed31052e27000eb57521bb4c9e600a4768a98", "patch": "@@ -1837,16 +1837,23 @@ cpp_interpret_charconst (pfile, token, warn_multi, traditional, pchars_seen)\n   unsigned int width, max_chars, c;\n   unsigned HOST_WIDE_INT mask;\n   HOST_WIDE_INT result = 0;\n+  bool unsigned_p;\n \n #ifdef MULTIBYTE_CHARS\n   (void) local_mbtowc (NULL, NULL, 0);\n #endif\n \n   /* Width in bits.  */\n   if (token->type == CPP_CHAR)\n-    width = MAX_CHAR_TYPE_SIZE;\n+    {\n+      width = MAX_CHAR_TYPE_SIZE;\n+      unsigned_p = CPP_OPTION (pfile, signed_char) == 0;\n+    }\n   else\n-    width = MAX_WCHAR_TYPE_SIZE;\n+    {\n+      width = MAX_WCHAR_TYPE_SIZE;\n+      unsigned_p = WCHAR_UNSIGNED;\n+    }\n \n   if (width < HOST_BITS_PER_WIDE_INT)\n     mask = ((unsigned HOST_WIDE_INT) 1 << width) - 1;\n@@ -1903,14 +1910,13 @@ cpp_interpret_charconst (pfile, token, warn_multi, traditional, pchars_seen)\n   else if (chars_seen > 1 && !traditional && warn_multi)\n     cpp_warning (pfile, \"multi-character character constant\");\n \n-  /* If char type is signed, sign-extend the constant.  */\n-  if (token->type == CPP_CHAR && chars_seen)\n+  /* If relevant type is signed, sign-extend the constant.  */\n+  if (chars_seen)\n     {\n       unsigned int nbits = chars_seen * width;\n \n       mask = (unsigned HOST_WIDE_INT) ~0 >> (HOST_BITS_PER_WIDE_INT - nbits);\n-      if (CPP_OPTION (pfile, signed_char) == 0\n-\t  || ((result >> (nbits - 1)) & 1) == 0)\n+      if (unsigned_p || ((result >> (nbits - 1)) & 1) == 0)\n \tresult &= mask;\n       else\n \tresult |= ~mask;"}, {"sha": "61dedb65bf702aa76ac4e8cc8104611f6d15673b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a47ed31052e27000eb57521bb4c9e600a4768a98", "patch": "@@ -1,3 +1,7 @@\n+2002-02-24  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* testsuite/gcc.dg/cpp/wchar-1.c: New test.\n+\n 2002-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/20020222-1.c: New test."}, {"sha": "f93c1cd4ec0729dfcaed480aa036f9c2986dc91b", "filename": "gcc/testsuite/gcc.dg/cpp/wchar-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwchar-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a47ed31052e27000eb57521bb4c9e600a4768a98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwchar-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwchar-1.c?ref=a47ed31052e27000eb57521bb4c9e600a4768a98", "patch": "@@ -0,0 +1,23 @@\n+/* Copyright (C) 2002 Free Software Foundation, Inc.  */\n+\n+/* { dg-do run } */\n+\n+/* Source: Neil Booth, 24 Feb 2002.\n+\n+   Test if compiler and preprocessor agree on signeness of wide\n+   chars.  */\n+\n+int main ()\n+{\n+  __WCHAR_TYPE__ c = -1;\n+\n+#if L'\\x0' - 1 < 0\n+  if (c > 0)\n+    abort ();\n+#else\n+  if (c < 0)\n+    abort ();\n+#endif\n+ \n+  return 0;\n+}"}]}