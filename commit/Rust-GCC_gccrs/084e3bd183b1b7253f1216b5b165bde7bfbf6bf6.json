{"sha": "084e3bd183b1b7253f1216b5b165bde7bfbf6bf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0ZTNiZDE4M2IxYjcyNTNmMTIxNmI1YjE2NWJkZTdiZmJmNmJmNg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-08-21T14:49:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-08-21T14:49:42Z"}, "message": "[Ada] Crash on expression function and tagged types\n\nThis patch fixes a compiler abort on an expression function whose\nexpression includes tagged types that have not been frozen before the\ngenerated body of the function is analyzed, even though that body is\ninserted at the end of the current declarative part.\n\n2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper, Mask_Type):\n\tRefine the handling of freezing types for expression functions\n\tthat are not completions, when analyzing the generated body for\n\tthe function: the body is inserted at the end of the enclosing\n\tdeclarative part, and its analysis may freeze types declared in\n\tthe same scope that have not been frozen yet.\n\ngcc/testsuite/\n\n\t* gnat.dg/expr_func7.adb, gnat.dg/expr_func7.ads: New testcase.\n\nFrom-SVN: r263735", "tree": {"sha": "15c1266f3c0df930ae6ce191b1a33c0e4c9831dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15c1266f3c0df930ae6ce191b1a33c0e4c9831dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0db1c3863d5167dd47e5a0ab4a714ace875a9202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db1c3863d5167dd47e5a0ab4a714ace875a9202", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db1c3863d5167dd47e5a0ab4a714ace875a9202"}], "stats": {"total": 74, "additions": 58, "deletions": 16}, "files": [{"sha": "503aa062230a225702428b73d6def35c9d7efb75", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=084e3bd183b1b7253f1216b5b165bde7bfbf6bf6", "patch": "@@ -1,3 +1,12 @@\n+2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper, Mask_Type):\n+\tRefine the handling of freezing types for expression functions\n+\tthat are not completions, when analyzing the generated body for\n+\tthe function: the body is inserted at the end of the enclosing\n+\tdeclarative part, and its analysis may freeze types declared in\n+\tthe same scope that have not been frozen yet.\n+\n 2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb: Remove Freeze_Expr_Types."}, {"sha": "3e0cae1d8861d374495e5a7c32108349ed25959f", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=084e3bd183b1b7253f1216b5b165bde7bfbf6bf6", "patch": "@@ -3145,8 +3145,12 @@ package body Sem_Ch6 is\n                end if;\n \n                if not Is_Frozen (Typ) then\n-                  Set_Is_Frozen (Typ);\n-                  Append_New_Elmt (Typ, Result);\n+                  if Scope (Typ) /= Current_Scope then\n+                     Set_Is_Frozen (Typ);\n+                     Append_New_Elmt (Typ, Result);\n+                  else\n+                     Freeze_Before (N, Typ);\n+                  end if;\n                end if;\n             end Mask_Type;\n \n@@ -3636,28 +3640,28 @@ package body Sem_Ch6 is\n          --  They are necessary in any case to insure order of elaboration\n          --  in gigi.\n \n-         if not Is_Frozen (Spec_Id)\n+         if Nkind (N) = N_Subprogram_Body\n+           and then Was_Expression_Function (N)\n+           and then not Has_Completion (Spec_Id)\n+           and then Serious_Errors_Detected = 0\n            and then (Expander_Active\n                       or else ASIS_Mode\n-                      or else (Operating_Mode = Check_Semantics\n-                                and then Serious_Errors_Detected = 0))\n+                      or else Operating_Mode = Check_Semantics)\n          then\n             --  The body generated for an expression function that is not a\n             --  completion is a freeze point neither for the profile nor for\n             --  anything else. That's why, in order to prevent any freezing\n             --  during analysis, we need to mask types declared outside the\n-            --  expression that are not yet frozen.\n+            --  expression (and in an outer scope) that are not yet frozen.\n \n-            if Nkind (N) = N_Subprogram_Body\n-              and then Was_Expression_Function (N)\n-              and then not Has_Completion (Spec_Id)\n-            then\n-               Set_Is_Frozen (Spec_Id);\n-               Mask_Types := Mask_Unfrozen_Types (Spec_Id);\n-            else\n-               Set_Has_Delayed_Freeze (Spec_Id);\n-               Freeze_Before (N, Spec_Id);\n-            end if;\n+            Set_Is_Frozen (Spec_Id);\n+            Mask_Types := Mask_Unfrozen_Types (Spec_Id);\n+\n+         elsif not Is_Frozen (Spec_Id)\n+           and then Serious_Errors_Detected = 0\n+         then\n+            Set_Has_Delayed_Freeze (Spec_Id);\n+            Freeze_Before (N, Spec_Id);\n          end if;\n       end if;\n "}, {"sha": "6a6e2267a94eadba2ad9bab62b048f6e9910032a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=084e3bd183b1b7253f1216b5b165bde7bfbf6bf6", "patch": "@@ -1,3 +1,7 @@\n+2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/expr_func7.adb, gnat.dg/expr_func7.ads: New testcase.\n+\n 2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/expr_func6.adb, gnat.dg/expr_func6.ads: New testcase."}, {"sha": "048af62c6ac14a287f851dfc8dadc7fd18a40837", "filename": "gcc/testsuite/gnat.dg/expr_func7.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Ftestsuite%2Fgnat.dg%2Fexpr_func7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Ftestsuite%2Fgnat.dg%2Fexpr_func7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fexpr_func7.adb?ref=084e3bd183b1b7253f1216b5b165bde7bfbf6bf6", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-do compile }\n+\n+package body Expr_Func7 is\n+   procedure Dummy is null;\n+end Expr_Func7;"}, {"sha": "47fc6f805b045454d2a51edeae18ec17d7b43278", "filename": "gcc/testsuite/gnat.dg/expr_func7.ads", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Ftestsuite%2Fgnat.dg%2Fexpr_func7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084e3bd183b1b7253f1216b5b165bde7bfbf6bf6/gcc%2Ftestsuite%2Fgnat.dg%2Fexpr_func7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fexpr_func7.ads?ref=084e3bd183b1b7253f1216b5b165bde7bfbf6bf6", "patch": "@@ -0,0 +1,20 @@\n+package Expr_Func7 is\n+\n+   type Abstract_Food is tagged null record;\n+   type Abstract_Food_Access is access Abstract_Food'Class;\n+\n+   type Fruit is new Abstract_Food with record\n+      Worm : Boolean;\n+   end record;\n+\n+   type Bananas is tagged record\n+      Inside : Abstract_Food_Access;\n+   end record;\n+\n+   function Has_Worm\n+     (B : Bananas) return Boolean is (Fruit (B.Inside.all).Worm);\n+\n+   Cool : Bananas;\n+\n+   procedure Dummy;\n+end Expr_Func7;"}]}