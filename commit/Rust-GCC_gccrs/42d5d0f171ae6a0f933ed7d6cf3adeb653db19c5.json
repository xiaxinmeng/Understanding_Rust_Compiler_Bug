{"sha": "42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJkNWQwZjE3MWFlNmEwZjkzM2VkN2Q2Y2YzYWRlYjY1M2RiMTljNQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.co.uk", "date": "2000-09-18T17:21:25Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "2000-09-18T17:21:25Z"}, "message": "Fix for sh minipool generation\n\nFrom-SVN: r36500", "tree": {"sha": "0f4b169405aa63acfc79c19f69df33c5eada6523", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f4b169405aa63acfc79c19f69df33c5eada6523"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5/comments", "author": null, "committer": null, "parents": [{"sha": "2e361e5924716e80f87daf85812a9d75ee6b8fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e361e5924716e80f87daf85812a9d75ee6b8fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e361e5924716e80f87daf85812a9d75ee6b8fa0"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "2a26741ead240b1f295c6a2fec0feeeeeee726e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5", "patch": "@@ -9,6 +9,8 @@\n \t* sh.md (floatsisf2_i4, floatsidf2_i, extendsfdf2_i4): Use it for\n \tinput operand that needs to be in fpul.\n \t(fix_truncsfsi2, fix_truncsfsi2_i4): Use register_operand for output.\n+\t* sh.c (find_barrier): Take into account that machine_dependent_reorg\n+\tmight add new insns.\n \n 2000-09-18  Alexandre Oliva  <aoliva@redhat.com>\n "}, {"sha": "afc0dca0c177378f25e42b14c7172c5199ac8dc6", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=42d5d0f171ae6a0f933ed7d6cf3adeb653db19c5", "patch": "@@ -2201,6 +2201,14 @@ find_barrier (num_mova, mova, from)\n \t      if (num_mova)\n \t\tsi_limit -= GET_MODE_SIZE (mode);\n \t    }\n+\n+\t  /* See the code in machine_dependent_reorg, which has a similar if\n+\t     statement that generates new mova insn in many cases.  */\n+\t  if (GET_CODE (dst) == REG\n+\t      && ((REGNO (dst) >= FIRST_FP_REG\n+\t\t   && REGNO (dst) <= LAST_XD_REG)\n+\t\t  || REGNO (dst) == FPUL_REG))\n+\t    inc += 2;\n \t}\n \n       if (mova_p (from))"}]}