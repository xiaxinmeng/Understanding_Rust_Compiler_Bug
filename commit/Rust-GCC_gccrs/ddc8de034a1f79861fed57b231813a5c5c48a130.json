{"sha": "ddc8de034a1f79861fed57b231813a5c5c48a130", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRjOGRlMDM0YTFmNzk4NjFmZWQ1N2IyMzE4MTNhNWM1YzQ4YTEzMA==", "commit": {"author": {"name": "Phil Muldoon", "email": "pmuldoon@gcc.gnu.org", "date": "2014-10-27T17:21:42Z"}, "committer": {"name": "Phil Muldoon", "email": "pmuldoon@gcc.gnu.org", "date": "2014-10-27T17:21:42Z"}, "message": "Let GDB reuse GCC's parser.\n\n2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n\t    Jan Kratochvil  <jan.kratochvil@redhat.com>\n\t    Tom Tromey  <tromey@redhat.com>\n\n\t* aclocal.m4: New file.\n\t* callbacks.cc: New file.\n\t* callbacks.hh: New file.\n\t* cc1plugin-config.h.in: New file.\n\t* configure: New file.\n\t* configure.ac: New file.\n\t* connection.cc: New file.\n\t* connection.hh: New file.\n\t* findcomp.cc: New file.\n\t* findcomp.hh: New file.\n\t* libcc1.cc: New file.\n\t* libcc1plugin.sym: New file.\n\t* libcc1.sym: New file.\n\t* Makefile.am: New file.\n\t* Makefile.in: New file.\n\t* marshall.cc: New file.\n\t* marshall.hh: New file.\n\t* names.cc: New file.\n\t* names.hh: New file.\n\t* plugin.cc: New file.\n\t* rpc.hh: New file.\n\t* status.hh: New file.\n\n2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n\t    Jan Kratochvil  <jan.kratochvil@redhat.com>\n\t    Tom Tromey  <tromey@redhat.com>\n\n\t* gcc-c-fe.def: New file.\n\t* gcc-c-interface.h: New file.\n\t* gcc-interface.h: New file.\n\n2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n\t    Tom Tromey  <tromey@redhat.com>\n\n\t* c-tree.h (enum c_oracle_request): New.\n\t(c_binding_oracle_function): New typedef.\n\t(c_binding_oracle, c_pushtag, c_bind): Declare.\n\t* c-decl.c (c_binding_oracle): New global.\n\t(I_SYMBOL_CHECKED): New macro.\n\t(i_symbol_binding): New function.\n\t(I_SYMBOL_BINDING, I_SYMBOL_DECL): Redefine.\n\t(I_TAG_CHECKED): New macro.\n\t(i_tag_binding): New function.\n\t(I_TAG_BINDING, I_TAG_DECL): Redefine.\n\t(I_LABEL_CHECKED): New macro.\n\t(i_label_binding): New function.\n\t(I_LABEL_BINDING, I_LABEL_DECL): Redefine.\n\t(c_print_identifier): Save and restore c_binding_oracle.\n\t(c_pushtag, c_bind): New functions.\n\n2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n\t    Tom Tromey  <tromey@redhat.com>\n\n\t* aclocal.m4, configure: Rebuild.\n\t* Makefile.in (aclocal_deps): Add gcc-plugin.m4.\n\t* configure.ac: Use GCC_ENABLE_PLUGINS.\n\t* stor-layout.c (finish_bitfield_layout): Now public.  Change\n\targument type to 'tree'.\n\t(finish_record_layout): Update.\n\t* stor-layout.h (finish_bitfield_layout): Declare.\n\n2014-10-27  Tom Tromey  <tromey@redhat.com>\n\n\t* gcc-plugin.m4: New file.\n\n2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n\t    Tom Tromey  <tromey@redhat.com>\n\n\t* Makefile.def: Add libcc1 to host_modules.\n\t* configure.ac (host_tools): Add libcc1.\n\t* Makefile.in, configure: Rebuild.\n\nFrom-SVN: r216748", "tree": {"sha": "93d1166de8622ded3678c7599baa864b75cb5e25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93d1166de8622ded3678c7599baa864b75cb5e25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddc8de034a1f79861fed57b231813a5c5c48a130", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc8de034a1f79861fed57b231813a5c5c48a130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddc8de034a1f79861fed57b231813a5c5c48a130", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc8de034a1f79861fed57b231813a5c5c48a130/comments", "author": null, "committer": null, "parents": [{"sha": "50a504654d2c54b270615541ab66af7c4f3d664f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a504654d2c54b270615541ab66af7c4f3d664f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a504654d2c54b270615541ab66af7c4f3d664f"}], "stats": {"total": 24223, "additions": 23921, "deletions": 302}, "files": [{"sha": "2f95590b1caebc743ee57146fd4dd54cfaedc9f7", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -1,3 +1,10 @@\n+2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n+\t    Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.def: Add libcc1 to host_modules.\n+\t* configure.ac (host_tools): Add libcc1.\n+\t* Makefile.in, configure: Rebuild.\n+\n 2014-10-24  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* configure.ac (build_configargs): Don't share config.cache between"}, {"sha": "7d25bd6295808ddca9f7bdbe134b2cd0f3140b01", "filename": "Makefile.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -123,6 +123,8 @@ host_modules= { module= gnattools; };\n host_modules= { module= lto-plugin; bootstrap=true;\n \t\textra_configure_flags='--enable-shared @extra_linker_plugin_flags@ @extra_linker_plugin_configure_flags@';\n \t\textra_make_flags='@extra_linker_plugin_flags@'; };\n+host_modules= { module= libcc1; bootstrap=true;\n+\t\textra_configure_flags=--enable-shared; };\n \n target_modules = { module= libstdc++-v3;\n \t\t   bootstrap=true;\n@@ -356,6 +358,9 @@ dependencies = { module=all-gnattools; on=all-target-libstdc++-v3; };\n dependencies = { module=all-lto-plugin; on=all-libiberty; };\n dependencies = { module=all-lto-plugin; on=all-libiberty-linker-plugin; };\n \n+dependencies = { module=configure-libcc1; on=configure-gcc; };\n+dependencies = { module=all-libcc1; on=all-gcc; };\n+\n dependencies = { module=all-utils; on=all-libiberty; };\n \n dependencies = { module=configure-mpfr; on=all-gmp; };"}, {"sha": "0a93962c83555ab12fe1120a8d889acd0290e6a1", "filename": "Makefile.in", "status": "modified", "additions": 992, "deletions": 5, "changes": 997, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -930,7 +930,8 @@ configure-host:  \\\n     maybe-configure-libtermcap \\\n     maybe-configure-utils \\\n     maybe-configure-gnattools \\\n-    maybe-configure-lto-plugin\n+    maybe-configure-lto-plugin \\\n+    maybe-configure-libcc1\n .PHONY: configure-target\n configure-target:  \\\n     maybe-configure-target-libstdc++-v3 \\\n@@ -1084,6 +1085,9 @@ all-host: maybe-all-gnattools\n @if lto-plugin-no-bootstrap\n all-host: maybe-all-lto-plugin\n @endif lto-plugin-no-bootstrap\n+@if libcc1-no-bootstrap\n+all-host: maybe-all-libcc1\n+@endif libcc1-no-bootstrap\n \n .PHONY: all-target\n \n@@ -1183,6 +1187,7 @@ info-host: maybe-info-libtermcap\n info-host: maybe-info-utils\n info-host: maybe-info-gnattools\n info-host: maybe-info-lto-plugin\n+info-host: maybe-info-libcc1\n \n .PHONY: info-target\n \n@@ -1267,6 +1272,7 @@ dvi-host: maybe-dvi-libtermcap\n dvi-host: maybe-dvi-utils\n dvi-host: maybe-dvi-gnattools\n dvi-host: maybe-dvi-lto-plugin\n+dvi-host: maybe-dvi-libcc1\n \n .PHONY: dvi-target\n \n@@ -1351,6 +1357,7 @@ pdf-host: maybe-pdf-libtermcap\n pdf-host: maybe-pdf-utils\n pdf-host: maybe-pdf-gnattools\n pdf-host: maybe-pdf-lto-plugin\n+pdf-host: maybe-pdf-libcc1\n \n .PHONY: pdf-target\n \n@@ -1435,6 +1442,7 @@ html-host: maybe-html-libtermcap\n html-host: maybe-html-utils\n html-host: maybe-html-gnattools\n html-host: maybe-html-lto-plugin\n+html-host: maybe-html-libcc1\n \n .PHONY: html-target\n \n@@ -1519,6 +1527,7 @@ TAGS-host: maybe-TAGS-libtermcap\n TAGS-host: maybe-TAGS-utils\n TAGS-host: maybe-TAGS-gnattools\n TAGS-host: maybe-TAGS-lto-plugin\n+TAGS-host: maybe-TAGS-libcc1\n \n .PHONY: TAGS-target\n \n@@ -1603,6 +1612,7 @@ install-info-host: maybe-install-info-libtermcap\n install-info-host: maybe-install-info-utils\n install-info-host: maybe-install-info-gnattools\n install-info-host: maybe-install-info-lto-plugin\n+install-info-host: maybe-install-info-libcc1\n \n .PHONY: install-info-target\n \n@@ -1687,6 +1697,7 @@ install-pdf-host: maybe-install-pdf-libtermcap\n install-pdf-host: maybe-install-pdf-utils\n install-pdf-host: maybe-install-pdf-gnattools\n install-pdf-host: maybe-install-pdf-lto-plugin\n+install-pdf-host: maybe-install-pdf-libcc1\n \n .PHONY: install-pdf-target\n \n@@ -1771,6 +1782,7 @@ install-html-host: maybe-install-html-libtermcap\n install-html-host: maybe-install-html-utils\n install-html-host: maybe-install-html-gnattools\n install-html-host: maybe-install-html-lto-plugin\n+install-html-host: maybe-install-html-libcc1\n \n .PHONY: install-html-target\n \n@@ -1855,6 +1867,7 @@ installcheck-host: maybe-installcheck-libtermcap\n installcheck-host: maybe-installcheck-utils\n installcheck-host: maybe-installcheck-gnattools\n installcheck-host: maybe-installcheck-lto-plugin\n+installcheck-host: maybe-installcheck-libcc1\n \n .PHONY: installcheck-target\n \n@@ -1939,6 +1952,7 @@ mostlyclean-host: maybe-mostlyclean-libtermcap\n mostlyclean-host: maybe-mostlyclean-utils\n mostlyclean-host: maybe-mostlyclean-gnattools\n mostlyclean-host: maybe-mostlyclean-lto-plugin\n+mostlyclean-host: maybe-mostlyclean-libcc1\n \n .PHONY: mostlyclean-target\n \n@@ -2023,6 +2037,7 @@ clean-host: maybe-clean-libtermcap\n clean-host: maybe-clean-utils\n clean-host: maybe-clean-gnattools\n clean-host: maybe-clean-lto-plugin\n+clean-host: maybe-clean-libcc1\n \n .PHONY: clean-target\n \n@@ -2107,6 +2122,7 @@ distclean-host: maybe-distclean-libtermcap\n distclean-host: maybe-distclean-utils\n distclean-host: maybe-distclean-gnattools\n distclean-host: maybe-distclean-lto-plugin\n+distclean-host: maybe-distclean-libcc1\n \n .PHONY: distclean-target\n \n@@ -2191,6 +2207,7 @@ maintainer-clean-host: maybe-maintainer-clean-libtermcap\n maintainer-clean-host: maybe-maintainer-clean-utils\n maintainer-clean-host: maybe-maintainer-clean-gnattools\n maintainer-clean-host: maybe-maintainer-clean-lto-plugin\n+maintainer-clean-host: maybe-maintainer-clean-libcc1\n \n .PHONY: maintainer-clean-target\n \n@@ -2329,7 +2346,8 @@ check-host:  \\\n     maybe-check-libtermcap \\\n     maybe-check-utils \\\n     maybe-check-gnattools \\\n-    maybe-check-lto-plugin\n+    maybe-check-lto-plugin \\\n+    maybe-check-libcc1\n \n .PHONY: check-target\n check-target:  \\\n@@ -2439,7 +2457,8 @@ install-host-nogcc:  \\\n     maybe-install-libtermcap \\\n     maybe-install-utils \\\n     maybe-install-gnattools \\\n-    maybe-install-lto-plugin\n+    maybe-install-lto-plugin \\\n+    maybe-install-libcc1\n \n .PHONY: install-host\n install-host:  \\\n@@ -2487,7 +2506,8 @@ install-host:  \\\n     maybe-install-libtermcap \\\n     maybe-install-utils \\\n     maybe-install-gnattools \\\n-    maybe-install-lto-plugin\n+    maybe-install-lto-plugin \\\n+    maybe-install-libcc1\n \n .PHONY: install-target\n install-target:  \\\n@@ -2591,7 +2611,8 @@ install-strip-host:  \\\n     maybe-install-strip-libtermcap \\\n     maybe-install-strip-utils \\\n     maybe-install-strip-gnattools \\\n-    maybe-install-strip-lto-plugin\n+    maybe-install-strip-lto-plugin \\\n+    maybe-install-strip-libcc1\n \n .PHONY: install-strip-target\n install-strip-target:  \\\n@@ -32235,6 +32256,886 @@ maintainer-clean-lto-plugin:\n \n \n \n+.PHONY: configure-libcc1 maybe-configure-libcc1\n+maybe-configure-libcc1:\n+@if gcc-bootstrap\n+configure-libcc1: stage_current\n+@endif gcc-bootstrap\n+@if libcc1\n+maybe-configure-libcc1: configure-libcc1\n+configure-libcc1: \n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcc1/Makefile || exit 0; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1 ; \\\n+\t$(HOST_EXPORTS)  \\\n+\techo Configuring in $(HOST_SUBDIR)/libcc1; \\\n+\tcd \"$(HOST_SUBDIR)/libcc1\" || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcc1/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcc1; \\\n+\t$(SHELL) \\\n+\t  $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} --enable-shared \\\n+\t  || exit 1\n+@endif libcc1\n+\n+\n+\n+.PHONY: configure-stage1-libcc1 maybe-configure-stage1-libcc1\n+maybe-configure-stage1-libcc1:\n+@if libcc1-bootstrap\n+maybe-configure-stage1-libcc1: configure-stage1-libcc1\n+configure-stage1-libcc1:\n+\t@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE1_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcc1/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE1_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE1_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(LIBCFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 1 in $(HOST_SUBDIR)/libcc1 ; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1 ; \\\n+\tcd $(HOST_SUBDIR)/libcc1 || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcc1/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcc1; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t   \\\n+\t  $(STAGE1_CONFIGURE_FLAGS) \\\n+\t  --enable-shared\n+@endif libcc1-bootstrap\n+\n+.PHONY: configure-stage2-libcc1 maybe-configure-stage2-libcc1\n+maybe-configure-stage2-libcc1:\n+@if libcc1-bootstrap\n+maybe-configure-stage2-libcc1: configure-stage2-libcc1\n+configure-stage2-libcc1:\n+\t@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE2_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcc1/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE2_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE2_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE2_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 2 in $(HOST_SUBDIR)/libcc1 ; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1 ; \\\n+\tcd $(HOST_SUBDIR)/libcc1 || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcc1/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcc1; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t   --with-build-libsubdir=$(HOST_SUBDIR)  \\\n+\t  $(STAGE2_CONFIGURE_FLAGS) \\\n+\t  --enable-shared\n+@endif libcc1-bootstrap\n+\n+.PHONY: configure-stage3-libcc1 maybe-configure-stage3-libcc1\n+maybe-configure-stage3-libcc1:\n+@if libcc1-bootstrap\n+maybe-configure-stage3-libcc1: configure-stage3-libcc1\n+configure-stage3-libcc1:\n+\t@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE3_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcc1/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE3_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE3_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE3_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 3 in $(HOST_SUBDIR)/libcc1 ; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1 ; \\\n+\tcd $(HOST_SUBDIR)/libcc1 || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcc1/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcc1; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t   --with-build-libsubdir=$(HOST_SUBDIR)  \\\n+\t  $(STAGE3_CONFIGURE_FLAGS) \\\n+\t  --enable-shared\n+@endif libcc1-bootstrap\n+\n+.PHONY: configure-stage4-libcc1 maybe-configure-stage4-libcc1\n+maybe-configure-stage4-libcc1:\n+@if libcc1-bootstrap\n+maybe-configure-stage4-libcc1: configure-stage4-libcc1\n+configure-stage4-libcc1:\n+\t@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE4_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcc1/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE4_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE4_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE4_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 4 in $(HOST_SUBDIR)/libcc1 ; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1 ; \\\n+\tcd $(HOST_SUBDIR)/libcc1 || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcc1/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcc1; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t   --with-build-libsubdir=$(HOST_SUBDIR)  \\\n+\t  $(STAGE4_CONFIGURE_FLAGS) \\\n+\t  --enable-shared\n+@endif libcc1-bootstrap\n+\n+.PHONY: configure-stageprofile-libcc1 maybe-configure-stageprofile-libcc1\n+maybe-configure-stageprofile-libcc1:\n+@if libcc1-bootstrap\n+maybe-configure-stageprofile-libcc1: configure-stageprofile-libcc1\n+configure-stageprofile-libcc1:\n+\t@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcc1/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEprofile_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEprofile_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEprofile_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage profile in $(HOST_SUBDIR)/libcc1 ; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1 ; \\\n+\tcd $(HOST_SUBDIR)/libcc1 || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcc1/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcc1; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t   --with-build-libsubdir=$(HOST_SUBDIR)  \\\n+\t  $(STAGEprofile_CONFIGURE_FLAGS) \\\n+\t  --enable-shared\n+@endif libcc1-bootstrap\n+\n+.PHONY: configure-stagefeedback-libcc1 maybe-configure-stagefeedback-libcc1\n+maybe-configure-stagefeedback-libcc1:\n+@if libcc1-bootstrap\n+maybe-configure-stagefeedback-libcc1: configure-stagefeedback-libcc1\n+configure-stagefeedback-libcc1:\n+\t@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcc1/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEfeedback_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEfeedback_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEfeedback_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage feedback in $(HOST_SUBDIR)/libcc1 ; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcc1 ; \\\n+\tcd $(HOST_SUBDIR)/libcc1 || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcc1/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcc1; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t   --with-build-libsubdir=$(HOST_SUBDIR)  \\\n+\t  $(STAGEfeedback_CONFIGURE_FLAGS) \\\n+\t  --enable-shared\n+@endif libcc1-bootstrap\n+\n+\n+\n+\n+\n+.PHONY: all-libcc1 maybe-all-libcc1\n+maybe-all-libcc1:\n+@if gcc-bootstrap\n+all-libcc1: stage_current\n+@endif gcc-bootstrap\n+@if libcc1\n+TARGET-libcc1=all\n+maybe-all-libcc1: all-libcc1\n+all-libcc1: configure-libcc1\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS)  \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(TARGET-libcc1))\n+@endif libcc1\n+\n+\n+\n+.PHONY: all-stage1-libcc1 maybe-all-stage1-libcc1\n+.PHONY: clean-stage1-libcc1 maybe-clean-stage1-libcc1\n+maybe-all-stage1-libcc1:\n+maybe-clean-stage1-libcc1:\n+@if libcc1-bootstrap\n+maybe-all-stage1-libcc1: all-stage1-libcc1\n+all-stage1: all-stage1-libcc1\n+TARGET-stage1-libcc1 = $(TARGET-libcc1)\n+all-stage1-libcc1: configure-stage1-libcc1\n+\t@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE1_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE1_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE1_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(LIBCFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n+\t\t$(TARGET-stage1-libcc1)\n+\n+maybe-clean-stage1-libcc1: clean-stage1-libcc1\n+clean-stage1: clean-stage1-libcc1\n+clean-stage1-libcc1:\n+\t@if [ $(current_stage) = stage1 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcc1/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage1-libcc1/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage1-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n+@endif libcc1-bootstrap\n+\n+\n+.PHONY: all-stage2-libcc1 maybe-all-stage2-libcc1\n+.PHONY: clean-stage2-libcc1 maybe-clean-stage2-libcc1\n+maybe-all-stage2-libcc1:\n+maybe-clean-stage2-libcc1:\n+@if libcc1-bootstrap\n+maybe-all-stage2-libcc1: all-stage2-libcc1\n+all-stage2: all-stage2-libcc1\n+TARGET-stage2-libcc1 = $(TARGET-libcc1)\n+all-stage2-libcc1: configure-stage2-libcc1\n+\t@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE2_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE2_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE2_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE2_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE2_TFLAGS)\" \\\n+\t\t$(TARGET-stage2-libcc1)\n+\n+maybe-clean-stage2-libcc1: clean-stage2-libcc1\n+clean-stage2: clean-stage2-libcc1\n+clean-stage2-libcc1:\n+\t@if [ $(current_stage) = stage2 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcc1/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage2-libcc1/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage2-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcc1-bootstrap\n+\n+\n+.PHONY: all-stage3-libcc1 maybe-all-stage3-libcc1\n+.PHONY: clean-stage3-libcc1 maybe-clean-stage3-libcc1\n+maybe-all-stage3-libcc1:\n+maybe-clean-stage3-libcc1:\n+@if libcc1-bootstrap\n+maybe-all-stage3-libcc1: all-stage3-libcc1\n+all-stage3: all-stage3-libcc1\n+TARGET-stage3-libcc1 = $(TARGET-libcc1)\n+all-stage3-libcc1: configure-stage3-libcc1\n+\t@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE3_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE3_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE3_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE3_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE3_TFLAGS)\" \\\n+\t\t$(TARGET-stage3-libcc1)\n+\n+maybe-clean-stage3-libcc1: clean-stage3-libcc1\n+clean-stage3: clean-stage3-libcc1\n+clean-stage3-libcc1:\n+\t@if [ $(current_stage) = stage3 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcc1/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage3-libcc1/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage3-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcc1-bootstrap\n+\n+\n+.PHONY: all-stage4-libcc1 maybe-all-stage4-libcc1\n+.PHONY: clean-stage4-libcc1 maybe-clean-stage4-libcc1\n+maybe-all-stage4-libcc1:\n+maybe-clean-stage4-libcc1:\n+@if libcc1-bootstrap\n+maybe-all-stage4-libcc1: all-stage4-libcc1\n+all-stage4: all-stage4-libcc1\n+TARGET-stage4-libcc1 = $(TARGET-libcc1)\n+all-stage4-libcc1: configure-stage4-libcc1\n+\t@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE4_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE4_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE4_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE4_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE4_TFLAGS)\" \\\n+\t\t$(TARGET-stage4-libcc1)\n+\n+maybe-clean-stage4-libcc1: clean-stage4-libcc1\n+clean-stage4: clean-stage4-libcc1\n+clean-stage4-libcc1:\n+\t@if [ $(current_stage) = stage4 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcc1/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage4-libcc1/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage4-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcc1-bootstrap\n+\n+\n+.PHONY: all-stageprofile-libcc1 maybe-all-stageprofile-libcc1\n+.PHONY: clean-stageprofile-libcc1 maybe-clean-stageprofile-libcc1\n+maybe-all-stageprofile-libcc1:\n+maybe-clean-stageprofile-libcc1:\n+@if libcc1-bootstrap\n+maybe-all-stageprofile-libcc1: all-stageprofile-libcc1\n+all-stageprofile: all-stageprofile-libcc1\n+TARGET-stageprofile-libcc1 = $(TARGET-libcc1)\n+all-stageprofile-libcc1: configure-stageprofile-libcc1\n+\t@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEprofile_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEprofile_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEprofile_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\" \\\n+\t\t$(TARGET-stageprofile-libcc1)\n+\n+maybe-clean-stageprofile-libcc1: clean-stageprofile-libcc1\n+clean-stageprofile: clean-stageprofile-libcc1\n+clean-stageprofile-libcc1:\n+\t@if [ $(current_stage) = stageprofile ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcc1/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageprofile-libcc1/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageprofile-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcc1-bootstrap\n+\n+\n+.PHONY: all-stagefeedback-libcc1 maybe-all-stagefeedback-libcc1\n+.PHONY: clean-stagefeedback-libcc1 maybe-clean-stagefeedback-libcc1\n+maybe-all-stagefeedback-libcc1:\n+maybe-clean-stagefeedback-libcc1:\n+@if libcc1-bootstrap\n+maybe-all-stagefeedback-libcc1: all-stagefeedback-libcc1\n+all-stagefeedback: all-stagefeedback-libcc1\n+TARGET-stagefeedback-libcc1 = $(TARGET-libcc1)\n+all-stagefeedback-libcc1: configure-stagefeedback-libcc1\n+\t@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEfeedback_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEfeedback_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEfeedback_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\" \\\n+\t\t$(TARGET-stagefeedback-libcc1)\n+\n+maybe-clean-stagefeedback-libcc1: clean-stagefeedback-libcc1\n+clean-stagefeedback: clean-stagefeedback-libcc1\n+clean-stagefeedback-libcc1:\n+\t@if [ $(current_stage) = stagefeedback ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcc1/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stagefeedback-libcc1/Makefile ] || exit 0; \\\n+\t  $(MAKE) stagefeedback-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcc1 && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcc1-bootstrap\n+\n+\n+\n+\n+\n+.PHONY: check-libcc1 maybe-check-libcc1\n+maybe-check-libcc1:\n+@if libcc1\n+maybe-check-libcc1: check-libcc1\n+\n+check-libcc1:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  check)\n+\n+@endif libcc1\n+\n+.PHONY: install-libcc1 maybe-install-libcc1\n+maybe-install-libcc1:\n+@if libcc1\n+maybe-install-libcc1: install-libcc1\n+\n+install-libcc1: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  install)\n+\n+@endif libcc1\n+\n+.PHONY: install-strip-libcc1 maybe-install-strip-libcc1\n+maybe-install-strip-libcc1:\n+@if libcc1\n+maybe-install-strip-libcc1: install-strip-libcc1\n+\n+install-strip-libcc1: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  install-strip)\n+\n+@endif libcc1\n+\n+# Other targets (info, dvi, pdf, etc.)\n+\n+.PHONY: maybe-info-libcc1 info-libcc1\n+maybe-info-libcc1:\n+@if libcc1\n+maybe-info-libcc1: info-libcc1\n+\n+info-libcc1: \\\n+    configure-libcc1 \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing info in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          info) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-dvi-libcc1 dvi-libcc1\n+maybe-dvi-libcc1:\n+@if libcc1\n+maybe-dvi-libcc1: dvi-libcc1\n+\n+dvi-libcc1: \\\n+    configure-libcc1 \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing dvi in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          dvi) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-pdf-libcc1 pdf-libcc1\n+maybe-pdf-libcc1:\n+@if libcc1\n+maybe-pdf-libcc1: pdf-libcc1\n+\n+pdf-libcc1: \\\n+    configure-libcc1 \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing pdf in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          pdf) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-html-libcc1 html-libcc1\n+maybe-html-libcc1:\n+@if libcc1\n+maybe-html-libcc1: html-libcc1\n+\n+html-libcc1: \\\n+    configure-libcc1 \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing html in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          html) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-TAGS-libcc1 TAGS-libcc1\n+maybe-TAGS-libcc1:\n+@if libcc1\n+maybe-TAGS-libcc1: TAGS-libcc1\n+\n+TAGS-libcc1: \\\n+    configure-libcc1 \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing TAGS in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          TAGS) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-install-info-libcc1 install-info-libcc1\n+maybe-install-info-libcc1:\n+@if libcc1\n+maybe-install-info-libcc1: install-info-libcc1\n+\n+install-info-libcc1: \\\n+    configure-libcc1 \\\n+    info-libcc1 \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-info in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-info) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-install-pdf-libcc1 install-pdf-libcc1\n+maybe-install-pdf-libcc1:\n+@if libcc1\n+maybe-install-pdf-libcc1: install-pdf-libcc1\n+\n+install-pdf-libcc1: \\\n+    configure-libcc1 \\\n+    pdf-libcc1 \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-pdf in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-pdf) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-install-html-libcc1 install-html-libcc1\n+maybe-install-html-libcc1:\n+@if libcc1\n+maybe-install-html-libcc1: install-html-libcc1\n+\n+install-html-libcc1: \\\n+    configure-libcc1 \\\n+    html-libcc1 \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-html in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-html) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-installcheck-libcc1 installcheck-libcc1\n+maybe-installcheck-libcc1:\n+@if libcc1\n+maybe-installcheck-libcc1: installcheck-libcc1\n+\n+installcheck-libcc1: \\\n+    configure-libcc1 \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing installcheck in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          installcheck) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-mostlyclean-libcc1 mostlyclean-libcc1\n+maybe-mostlyclean-libcc1:\n+@if libcc1\n+maybe-mostlyclean-libcc1: mostlyclean-libcc1\n+\n+mostlyclean-libcc1: \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing mostlyclean in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          mostlyclean) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-clean-libcc1 clean-libcc1\n+maybe-clean-libcc1:\n+@if libcc1\n+maybe-clean-libcc1: clean-libcc1\n+\n+clean-libcc1: \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing clean in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          clean) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-distclean-libcc1 distclean-libcc1\n+maybe-distclean-libcc1:\n+@if libcc1\n+maybe-distclean-libcc1: distclean-libcc1\n+\n+distclean-libcc1: \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing distclean in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          distclean) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+.PHONY: maybe-maintainer-clean-libcc1 maintainer-clean-libcc1\n+maybe-maintainer-clean-libcc1:\n+@if libcc1\n+maybe-maintainer-clean-libcc1: maintainer-clean-libcc1\n+\n+maintainer-clean-libcc1: \n+\t@[ -f ./libcc1/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing maintainer-clean in libcc1\" ; \\\n+\t(cd $(HOST_SUBDIR)/libcc1 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          maintainer-clean) \\\n+\t  || exit 1\n+\n+@endif libcc1\n+\n+\n+\n # ---------------------------------------\n # Modules which run on the target machine\n # ---------------------------------------\n@@ -46017,6 +46918,11 @@ stage1-start::\n \t  mkdir stage1-lto-plugin; \\\n \tmv stage1-lto-plugin lto-plugin \n @endif lto-plugin\n+@if libcc1\n+\t@cd $(HOST_SUBDIR); [ -d stage1-libcc1 ] || \\\n+\t  mkdir stage1-libcc1; \\\n+\tmv stage1-libcc1 libcc1 \n+@endif libcc1\n \t@[ -d stage1-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stage1-$(TARGET_SUBDIR); \\\n \tmv stage1-$(TARGET_SUBDIR) $(TARGET_SUBDIR) \n@@ -46132,6 +47038,11 @@ stage1-end::\n \t  cd $(HOST_SUBDIR); mv lto-plugin stage1-lto-plugin  ; \\\n \tfi\n @endif lto-plugin\n+@if libcc1\n+\t@if test -d $(HOST_SUBDIR)/libcc1 ; then \\\n+\t  cd $(HOST_SUBDIR); mv libcc1 stage1-libcc1  ; \\\n+\tfi\n+@endif libcc1\n \t@if test -d $(TARGET_SUBDIR) ; then \\\n \t  mv $(TARGET_SUBDIR) stage1-$(TARGET_SUBDIR)  ; \\\n \tfi\n@@ -46312,6 +47223,12 @@ stage2-start::\n \tmv stage2-lto-plugin lto-plugin  ; \\\n \tmv stage1-lto-plugin prev-lto-plugin || test -f stage1-lean \n @endif lto-plugin\n+@if libcc1\n+\t@cd $(HOST_SUBDIR); [ -d stage2-libcc1 ] || \\\n+\t  mkdir stage2-libcc1; \\\n+\tmv stage2-libcc1 libcc1  ; \\\n+\tmv stage1-libcc1 prev-libcc1 || test -f stage1-lean \n+@endif libcc1\n \t@[ -d stage2-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stage2-$(TARGET_SUBDIR); \\\n \tmv stage2-$(TARGET_SUBDIR) $(TARGET_SUBDIR)  ; \\\n@@ -46450,6 +47367,12 @@ stage2-end::\n \t  mv prev-lto-plugin stage1-lto-plugin ; :  ; \\\n \tfi\n @endif lto-plugin\n+@if libcc1\n+\t@if test -d $(HOST_SUBDIR)/libcc1 ; then \\\n+\t  cd $(HOST_SUBDIR); mv libcc1 stage2-libcc1 ; \\\n+\t  mv prev-libcc1 stage1-libcc1 ; :  ; \\\n+\tfi\n+@endif libcc1\n \t@if test -d $(TARGET_SUBDIR) ; then \\\n \t  mv $(TARGET_SUBDIR) stage2-$(TARGET_SUBDIR)  ; \\\n \t  mv prev-$(TARGET_SUBDIR) stage1-$(TARGET_SUBDIR) ; :  ; \\\n@@ -46654,6 +47577,12 @@ stage3-start::\n \tmv stage3-lto-plugin lto-plugin  ; \\\n \tmv stage2-lto-plugin prev-lto-plugin || test -f stage2-lean \n @endif lto-plugin\n+@if libcc1\n+\t@cd $(HOST_SUBDIR); [ -d stage3-libcc1 ] || \\\n+\t  mkdir stage3-libcc1; \\\n+\tmv stage3-libcc1 libcc1  ; \\\n+\tmv stage2-libcc1 prev-libcc1 || test -f stage2-lean \n+@endif libcc1\n \t@[ -d stage3-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stage3-$(TARGET_SUBDIR); \\\n \tmv stage3-$(TARGET_SUBDIR) $(TARGET_SUBDIR)  ; \\\n@@ -46792,6 +47721,12 @@ stage3-end::\n \t  mv prev-lto-plugin stage2-lto-plugin ; :  ; \\\n \tfi\n @endif lto-plugin\n+@if libcc1\n+\t@if test -d $(HOST_SUBDIR)/libcc1 ; then \\\n+\t  cd $(HOST_SUBDIR); mv libcc1 stage3-libcc1 ; \\\n+\t  mv prev-libcc1 stage2-libcc1 ; :  ; \\\n+\tfi\n+@endif libcc1\n \t@if test -d $(TARGET_SUBDIR) ; then \\\n \t  mv $(TARGET_SUBDIR) stage3-$(TARGET_SUBDIR)  ; \\\n \t  mv prev-$(TARGET_SUBDIR) stage2-$(TARGET_SUBDIR) ; :  ; \\\n@@ -47052,6 +47987,12 @@ stage4-start::\n \tmv stage4-lto-plugin lto-plugin  ; \\\n \tmv stage3-lto-plugin prev-lto-plugin || test -f stage3-lean \n @endif lto-plugin\n+@if libcc1\n+\t@cd $(HOST_SUBDIR); [ -d stage4-libcc1 ] || \\\n+\t  mkdir stage4-libcc1; \\\n+\tmv stage4-libcc1 libcc1  ; \\\n+\tmv stage3-libcc1 prev-libcc1 || test -f stage3-lean \n+@endif libcc1\n \t@[ -d stage4-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stage4-$(TARGET_SUBDIR); \\\n \tmv stage4-$(TARGET_SUBDIR) $(TARGET_SUBDIR)  ; \\\n@@ -47190,6 +48131,12 @@ stage4-end::\n \t  mv prev-lto-plugin stage3-lto-plugin ; :  ; \\\n \tfi\n @endif lto-plugin\n+@if libcc1\n+\t@if test -d $(HOST_SUBDIR)/libcc1 ; then \\\n+\t  cd $(HOST_SUBDIR); mv libcc1 stage4-libcc1 ; \\\n+\t  mv prev-libcc1 stage3-libcc1 ; :  ; \\\n+\tfi\n+@endif libcc1\n \t@if test -d $(TARGET_SUBDIR) ; then \\\n \t  mv $(TARGET_SUBDIR) stage4-$(TARGET_SUBDIR)  ; \\\n \t  mv prev-$(TARGET_SUBDIR) stage3-$(TARGET_SUBDIR) ; :  ; \\\n@@ -47438,6 +48385,12 @@ stageprofile-start::\n \tmv stageprofile-lto-plugin lto-plugin  ; \\\n \tmv stage1-lto-plugin prev-lto-plugin || test -f stage1-lean \n @endif lto-plugin\n+@if libcc1\n+\t@cd $(HOST_SUBDIR); [ -d stageprofile-libcc1 ] || \\\n+\t  mkdir stageprofile-libcc1; \\\n+\tmv stageprofile-libcc1 libcc1  ; \\\n+\tmv stage1-libcc1 prev-libcc1 || test -f stage1-lean \n+@endif libcc1\n \t@[ -d stageprofile-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stageprofile-$(TARGET_SUBDIR); \\\n \tmv stageprofile-$(TARGET_SUBDIR) $(TARGET_SUBDIR)  ; \\\n@@ -47576,6 +48529,12 @@ stageprofile-end::\n \t  mv prev-lto-plugin stage1-lto-plugin ; :  ; \\\n \tfi\n @endif lto-plugin\n+@if libcc1\n+\t@if test -d $(HOST_SUBDIR)/libcc1 ; then \\\n+\t  cd $(HOST_SUBDIR); mv libcc1 stageprofile-libcc1 ; \\\n+\t  mv prev-libcc1 stage1-libcc1 ; :  ; \\\n+\tfi\n+@endif libcc1\n \t@if test -d $(TARGET_SUBDIR) ; then \\\n \t  mv $(TARGET_SUBDIR) stageprofile-$(TARGET_SUBDIR)  ; \\\n \t  mv prev-$(TARGET_SUBDIR) stage1-$(TARGET_SUBDIR) ; :  ; \\\n@@ -47757,6 +48716,12 @@ stagefeedback-start::\n \tmv stagefeedback-lto-plugin lto-plugin  ; \\\n \tmv stageprofile-lto-plugin prev-lto-plugin || test -f stageprofile-lean \n @endif lto-plugin\n+@if libcc1\n+\t@cd $(HOST_SUBDIR); [ -d stagefeedback-libcc1 ] || \\\n+\t  mkdir stagefeedback-libcc1; \\\n+\tmv stagefeedback-libcc1 libcc1  ; \\\n+\tmv stageprofile-libcc1 prev-libcc1 || test -f stageprofile-lean \n+@endif libcc1\n \t@[ -d stagefeedback-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stagefeedback-$(TARGET_SUBDIR); \\\n \tmv stagefeedback-$(TARGET_SUBDIR) $(TARGET_SUBDIR)  ; \\\n@@ -47895,6 +48860,12 @@ stagefeedback-end::\n \t  mv prev-lto-plugin stageprofile-lto-plugin ; :  ; \\\n \tfi\n @endif lto-plugin\n+@if libcc1\n+\t@if test -d $(HOST_SUBDIR)/libcc1 ; then \\\n+\t  cd $(HOST_SUBDIR); mv libcc1 stagefeedback-libcc1 ; \\\n+\t  mv prev-libcc1 stageprofile-libcc1 ; :  ; \\\n+\tfi\n+@endif libcc1\n \t@if test -d $(TARGET_SUBDIR) ; then \\\n \t  mv $(TARGET_SUBDIR) stagefeedback-$(TARGET_SUBDIR)  ; \\\n \t  mv prev-$(TARGET_SUBDIR) stageprofile-$(TARGET_SUBDIR) ; :  ; \\\n@@ -48408,6 +49379,22 @@ all-stage3-lto-plugin: maybe-all-stage3-libiberty-linker-plugin\n all-stage4-lto-plugin: maybe-all-stage4-libiberty-linker-plugin\n all-stageprofile-lto-plugin: maybe-all-stageprofile-libiberty-linker-plugin\n all-stagefeedback-lto-plugin: maybe-all-stagefeedback-libiberty-linker-plugin\n+configure-libcc1: maybe-configure-gcc\n+\n+configure-stage1-libcc1: maybe-configure-stage1-gcc\n+configure-stage2-libcc1: maybe-configure-stage2-gcc\n+configure-stage3-libcc1: maybe-configure-stage3-gcc\n+configure-stage4-libcc1: maybe-configure-stage4-gcc\n+configure-stageprofile-libcc1: maybe-configure-stageprofile-gcc\n+configure-stagefeedback-libcc1: maybe-configure-stagefeedback-gcc\n+all-libcc1: maybe-all-gcc\n+\n+all-stage1-libcc1: maybe-all-stage1-gcc\n+all-stage2-libcc1: maybe-all-stage2-gcc\n+all-stage3-libcc1: maybe-all-stage3-gcc\n+all-stage4-libcc1: maybe-all-stage4-gcc\n+all-stageprofile-libcc1: maybe-all-stageprofile-gcc\n+all-stagefeedback-libcc1: maybe-all-stagefeedback-gcc\n all-utils: maybe-all-libiberty\n configure-mpfr: maybe-all-gmp\n "}, {"sha": "215063c2765671a224dd8870e6901c94c1bbce9e", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -1,3 +1,7 @@\n+2014-10-27  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gcc-plugin.m4: New file.\n+\n 2014-09-01  Andi Kleen  <ak@linux.intel.com>\n \n \t* bootstrap-lto.mk: Implement slim bootstrap."}, {"sha": "dd06a58cd1329aaee15b1e8624467dbd2e91a1f4", "filename": "config/gcc-plugin.m4", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/config%2Fgcc-plugin.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/config%2Fgcc-plugin.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fgcc-plugin.m4?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,113 @@\n+# gcc-plugin.m4 -*- Autoconf -*-\n+# Check whether GCC is able to be built with plugin support.\n+\n+dnl Copyright (C) 2014 Free Software Foundation, Inc.\n+dnl This file is free software, distributed under the terms of the GNU\n+dnl General Public License.  As a special exception to the GNU General\n+dnl Public License, this file may be distributed as part of a program\n+dnl that contains a configuration script generated by Autoconf, under\n+dnl the same distribution terms as the rest of that program.\n+\n+# Check for plugin support.\n+# Respects --enable-plugin.\n+# Sets the shell variables enable_plugin and pluginlibs.\n+AC_DEFUN([GCC_ENABLE_PLUGINS],\n+  [# Check for plugin support\n+   AC_ARG_ENABLE(plugin,\n+   [AS_HELP_STRING([--enable-plugin], [enable plugin support])],\n+   enable_plugin=$enableval,\n+   enable_plugin=yes; default_plugin=yes)\n+\n+   pluginlibs=\n+\n+   case \"${host}\" in\n+     *-*-darwin*)\n+       if test x$build = x$host; then\n+\t export_sym_check=\"nm${exeext} -g\"\n+       elif test x$host = x$target; then\n+\t export_sym_check=\"$gcc_cv_nm -g\"\n+       else\n+\t export_sym_check=\n+       fi\n+     ;;\n+     *)\n+       if test x$build = x$host; then\n+\t export_sym_check=\"objdump${exeext} -T\"\n+       elif test x$host = x$target; then\n+\t export_sym_check=\"$gcc_cv_objdump -T\"\n+       else\n+\t export_sym_check=\n+       fi\n+     ;;\n+   esac\n+\n+   if test x\"$enable_plugin\" = x\"yes\"; then\n+\n+     AC_MSG_CHECKING([for exported symbols])\n+     if test \"x$export_sym_check\" != x; then\n+       echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n+       ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest$ac_exeext > /dev/null 2>&1\n+       if $export_sym_check conftest$ac_exeext | grep -q foobar > /dev/null; then\n+\t : # No need to use a flag\n+\t AC_MSG_RESULT([yes])\n+       else\n+\t AC_MSG_RESULT([yes])\n+\t AC_MSG_CHECKING([for -rdynamic])\n+\t ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest$ac_exeext > /dev/null 2>&1\n+\t if $export_sym_check conftest$ac_exeext | grep -q foobar > /dev/null; then\n+\t   plugin_rdynamic=yes\n+\t   pluginlibs=\"-rdynamic\"\n+\t else\n+\t   plugin_rdynamic=no\n+\t   enable_plugin=no\n+\t fi\n+\t AC_MSG_RESULT([$plugin_rdynamic])\n+       fi\n+     else\n+       AC_MSG_RESULT([unable to check])\n+     fi\n+\n+     # Check -ldl\n+     saved_LIBS=\"$LIBS\"\n+     AC_SEARCH_LIBS([dlopen], [dl])\n+     if test x\"$ac_cv_search_dlopen\" = x\"-ldl\"; then\n+       pluginlibs=\"$pluginlibs -ldl\"\n+     fi\n+     LIBS=\"$saved_LIBS\"\n+\n+     # Check that we can build shared objects with -fPIC -shared\n+     saved_LDFLAGS=\"$LDFLAGS\"\n+     saved_CFLAGS=\"$CFLAGS\"\n+     case \"${host}\" in\n+       *-*-darwin*)\n+\t CFLAGS=`echo $CFLAGS | sed s/-mdynamic-no-pic//g`\n+\t CFLAGS=\"$CFLAGS -fPIC\"\n+\t LDFLAGS=\"$LDFLAGS -shared -undefined dynamic_lookup\"\n+       ;;\n+       *)\n+\t CFLAGS=\"$CFLAGS -fPIC\"\n+\t LDFLAGS=\"$LDFLAGS -fPIC -shared\"\n+       ;;\n+     esac\n+     AC_MSG_CHECKING([for -fPIC -shared])\n+     AC_TRY_LINK(\n+       [extern int X;],[return X == 0;],\n+       [AC_MSG_RESULT([yes]); have_pic_shared=yes],\n+       [AC_MSG_RESULT([no]); have_pic_shared=no])\n+     if test x\"$have_pic_shared\" != x\"yes\" -o x\"$ac_cv_search_dlopen\" = x\"no\"; then\n+       pluginlibs=\n+       enable_plugin=no\n+     fi\n+     LDFLAGS=\"$saved_LDFLAGS\"\n+     CFLAGS=\"$saved_CFLAGS\"\n+\n+     # If plugin support had been requested but not available, fail.\n+     if test x\"$enable_plugin\" = x\"no\" ; then\n+       if test x\"$default_plugin\" != x\"yes\"; then\n+\t AC_MSG_ERROR([\n+   Building GCC with plugin support requires a host that supports\n+   -fPIC, -shared, -ldl and -rdynamic.])\n+       fi\n+     fi\n+   fi\n+])"}, {"sha": "149acf6596b61a6e7bb9e44f0f1f87d86c2186c8", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -2728,7 +2728,7 @@ host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktr\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gprof etc expect dejagnu m4 utils guile fastjar gnattools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1\"\n \n # libgcj represents the runtime libraries only used by gcj.\n libgcj=\"target-libffi \\"}, {"sha": "b62af38e7a25f2cf13425a94ef96b2244cc81c56", "filename": "configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -1,5 +1,5 @@\n #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-#   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n+#   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2014\n #   Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify it\n@@ -141,7 +141,7 @@ host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktr\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gprof etc expect dejagnu m4 utils guile fastjar gnattools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1\"\n \n # libgcj represents the runtime libraries only used by gcj.\n libgcj=\"target-libffi \\"}, {"sha": "f588f0328410d9ccec729fe6047278fa7f4932c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -1,3 +1,14 @@\n+2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n+\t    Tom Tromey  <tromey@redhat.com>\n+\n+\t* aclocal.m4, configure: Rebuild.\n+\t* Makefile.in (aclocal_deps): Add gcc-plugin.m4.\n+\t* configure.ac: Use GCC_ENABLE_PLUGINS.\n+\t* stor-layout.c (finish_bitfield_layout): Now public.  Change\n+\targument type to 'tree'.\n+\t(finish_record_layout): Update.\n+\t* stor-layout.h (finish_bitfield_layout): Declare.\n+\n 2014-10-27  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64.c (TARGET_GIMPLE_FOLD_BUILTIN): Define again."}, {"sha": "a74df1fd1ae6c54758081274635044a5a37e50b3", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -1673,6 +1673,7 @@ aclocal_deps = \\\n \t$(srcdir)/../config/codeset.m4 \\\n \t$(srcdir)/../config/extensions.m4 \\\n \t$(srcdir)/../config/gettext-sister.m4 \\\n+\t$(srcdir)/../config/gcc-plugin.m4 \\\n \t$(srcdir)/../config/iconv.m4 \\\n \t$(srcdir)/../config/lcmessage.m4 \\\n \t$(srcdir)/../config/lib-ld.m4 \\"}, {"sha": "cb6a48beb376267ccaf77920bdbc7c1eb4832a7c", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 1, "deletions": 88, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -11,94 +11,6 @@\n # even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n # PARTICULAR PURPOSE.\n \n-# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n-\n-# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n-# For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n-# $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to\n-# `$srcdir', `$srcdir/..', or `$srcdir/../..'.\n-#\n-# Of course, Automake must honor this variable whenever it calls a\n-# tool from the auxiliary directory.  The problem is that $srcdir (and\n-# therefore $ac_aux_dir as well) can be either absolute or relative,\n-# depending on how configure is run.  This is pretty annoying, since\n-# it makes $ac_aux_dir quite unusable in subdirectories: in the top\n-# source directory, any form will work fine, but in subdirectories a\n-# relative path needs to be adjusted first.\n-#\n-# $ac_aux_dir/missing\n-#    fails when called from a subdirectory if $ac_aux_dir is relative\n-# $top_srcdir/$ac_aux_dir/missing\n-#    fails if $ac_aux_dir is absolute,\n-#    fails when called from a subdirectory in a VPATH build with\n-#          a relative $ac_aux_dir\n-#\n-# The reason of the latter failure is that $top_srcdir and $ac_aux_dir\n-# are both prefixed by $srcdir.  In an in-source build this is usually\n-# harmless because $srcdir is `.', but things will broke when you\n-# start a VPATH build or use an absolute $srcdir.\n-#\n-# So we could use something similar to $top_srcdir/$ac_aux_dir/missing,\n-# iff we strip the leading $srcdir from $ac_aux_dir.  That would be:\n-#   am_aux_dir='\\$(top_srcdir)/'`expr \"$ac_aux_dir\" : \"$srcdir//*\\(.*\\)\"`\n-# and then we would define $MISSING as\n-#   MISSING=\"\\${SHELL} $am_aux_dir/missing\"\n-# This will work as long as MISSING is not called from configure, because\n-# unfortunately $(top_srcdir) has no meaning in configure.\n-# However there are other variables, like CC, which are often used in\n-# configure, and could therefore not use this \"fixed\" $ac_aux_dir.\n-#\n-# Another solution, used here, is to always expand $ac_aux_dir to an\n-# absolute PATH.  The drawback is that using absolute paths prevent a\n-# configured tree to be moved without reconfiguration.\n-\n-AC_DEFUN([AM_AUX_DIR_EXPAND],\n-[dnl Rely on autoconf to set up CDPATH properly.\n-AC_PREREQ([2.50])dnl\n-# expand $ac_aux_dir to an absolute path\n-am_aux_dir=`cd $ac_aux_dir && pwd`\n-])\n-\n-# Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005, 2008\n-# Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n-# serial 6\n-\n-# AM_PROG_CC_C_O\n-# --------------\n-# Like AC_PROG_CC_C_O, but changed for automake.\n-AC_DEFUN([AM_PROG_CC_C_O],\n-[AC_REQUIRE([AC_PROG_CC_C_O])dnl\n-AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\n-AC_REQUIRE_AUX_FILE([compile])dnl\n-# FIXME: we rely on the cache variable name because\n-# there is no other way.\n-set dummy $CC\n-am_cc=`echo $[2] | sed ['s/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/']`\n-eval am_t=\\$ac_cv_prog_cc_${am_cc}_c_o\n-if test \"$am_t\" != yes; then\n-   # Losing compiler, so override with the script.\n-   # FIXME: It is wrong to rewrite CC.\n-   # But if we don't then we get into trouble of one sort or another.\n-   # A longer-term fix would be to have automake use am__CC in this case,\n-   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n-   CC=\"$am_aux_dir/compile $CC\"\n-fi\n-dnl Make sure AC_PROG_CC is never called again, or it will override our\n-dnl setting of CC.\n-m4_define([AC_PROG_CC],\n-          [m4_fatal([AC_PROG_CC cannot be called after AM_PROG_CC_C_O])])\n-])\n-\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n@@ -108,6 +20,7 @@ m4_include([../config/acx.m4])\n m4_include([../config/codeset.m4])\n m4_include([../config/depstand.m4])\n m4_include([../config/dfp.m4])\n+m4_include([../config/gcc-plugin.m4])\n m4_include([../config/gettext-sister.m4])\n m4_include([../config/iconv.m4])\n m4_include([../config/lcmessage.m4])"}, {"sha": "dcc5548a905d8ec0ce57c391f302869fcc9520c6", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -1,3 +1,22 @@\n+2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n+\t    Tom Tromey  <tromey@redhat.com>\n+\n+\t* c-tree.h (enum c_oracle_request): New.\n+\t(c_binding_oracle_function): New typedef.\n+\t(c_binding_oracle, c_pushtag, c_bind): Declare.\n+\t* c-decl.c (c_binding_oracle): New global.\n+\t(I_SYMBOL_CHECKED): New macro.\n+\t(i_symbol_binding): New function.\n+\t(I_SYMBOL_BINDING, I_SYMBOL_DECL): Redefine.\n+\t(I_TAG_CHECKED): New macro.\n+\t(i_tag_binding): New function.\n+\t(I_TAG_BINDING, I_TAG_DECL): Redefine.\n+\t(I_LABEL_CHECKED): New macro.\n+\t(i_label_binding): New function.\n+\t(I_LABEL_BINDING, I_LABEL_DECL): Redefine.\n+\t(c_print_identifier): Save and restore c_binding_oracle.\n+\t(c_pushtag, c_bind): New functions.\n+\n 2014-10-27  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* c-typeck.c: Adjust include files."}, {"sha": "d0105ff122b94836f700033d1b152a88104b5060", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 149, "deletions": 15, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -220,21 +220,6 @@ struct GTY((chain_next (\"%h.prev\"))) c_binding {\n #define B_IN_FILE_SCOPE(b) ((b)->depth == 1 /*file_scope->depth*/)\n #define B_IN_EXTERNAL_SCOPE(b) ((b)->depth == 0 /*external_scope->depth*/)\n \n-#define I_SYMBOL_BINDING(node) \\\n-  (((struct lang_identifier *) IDENTIFIER_NODE_CHECK(node))->symbol_binding)\n-#define I_SYMBOL_DECL(node) \\\n- (I_SYMBOL_BINDING(node) ? I_SYMBOL_BINDING(node)->decl : 0)\n-\n-#define I_TAG_BINDING(node) \\\n-  (((struct lang_identifier *) IDENTIFIER_NODE_CHECK(node))->tag_binding)\n-#define I_TAG_DECL(node) \\\n- (I_TAG_BINDING(node) ? I_TAG_BINDING(node)->decl : 0)\n-\n-#define I_LABEL_BINDING(node) \\\n-  (((struct lang_identifier *) IDENTIFIER_NODE_CHECK(node))->label_binding)\n-#define I_LABEL_DECL(node) \\\n- (I_LABEL_BINDING(node) ? I_LABEL_BINDING(node)->decl : 0)\n-\n /* Each C symbol points to three linked lists of c_binding structures.\n    These describe the values of the identifier in the three different\n    namespaces defined by the language.  */\n@@ -250,6 +235,96 @@ struct GTY(()) lang_identifier {\n extern char C_SIZEOF_STRUCT_LANG_IDENTIFIER_isnt_accurate\n [(sizeof(struct lang_identifier) == C_SIZEOF_STRUCT_LANG_IDENTIFIER) ? 1 : -1];\n \n+/* The binding oracle; see c-tree.h.  */\n+void (*c_binding_oracle) (enum c_oracle_request, tree identifier);\n+\n+/* This flag is set on an identifier if we have previously asked the\n+   binding oracle for this identifier's symbol binding.  */\n+#define I_SYMBOL_CHECKED(node) \\\n+  (TREE_LANG_FLAG_4 (IDENTIFIER_NODE_CHECK (node)))\n+\n+static inline struct c_binding* *\n+i_symbol_binding (tree node)\n+{\n+  struct lang_identifier *lid\n+    = (struct lang_identifier *) IDENTIFIER_NODE_CHECK (node);\n+\n+  if (lid->symbol_binding == NULL\n+      && c_binding_oracle != NULL\n+      && !I_SYMBOL_CHECKED (node))\n+    {\n+      /* Set the \"checked\" flag first, to avoid infinite recursion\n+\t when the binding oracle calls back into gcc.  */\n+      I_SYMBOL_CHECKED (node) = 1;\n+      c_binding_oracle (C_ORACLE_SYMBOL, node);\n+    }\n+\n+  return &lid->symbol_binding;\n+}\n+\n+#define I_SYMBOL_BINDING(node) (*i_symbol_binding (node))\n+\n+#define I_SYMBOL_DECL(node) \\\n+ (I_SYMBOL_BINDING(node) ? I_SYMBOL_BINDING(node)->decl : 0)\n+\n+/* This flag is set on an identifier if we have previously asked the\n+   binding oracle for this identifier's tag binding.  */\n+#define I_TAG_CHECKED(node) \\\n+  (TREE_LANG_FLAG_5 (IDENTIFIER_NODE_CHECK (node)))\n+\n+static inline struct c_binding **\n+i_tag_binding (tree node)\n+{\n+  struct lang_identifier *lid\n+    = (struct lang_identifier *) IDENTIFIER_NODE_CHECK (node);\n+\n+  if (lid->tag_binding == NULL\n+      && c_binding_oracle != NULL\n+      && !I_TAG_CHECKED (node))\n+    {\n+      /* Set the \"checked\" flag first, to avoid infinite recursion\n+\t when the binding oracle calls back into gcc.  */\n+      I_TAG_CHECKED (node) = 1;\n+      c_binding_oracle (C_ORACLE_TAG, node);\n+    }\n+\n+  return &lid->tag_binding;\n+}\n+\n+#define I_TAG_BINDING(node) (*i_tag_binding (node))\n+\n+#define I_TAG_DECL(node) \\\n+ (I_TAG_BINDING(node) ? I_TAG_BINDING(node)->decl : 0)\n+\n+/* This flag is set on an identifier if we have previously asked the\n+   binding oracle for this identifier's label binding.  */\n+#define I_LABEL_CHECKED(node) \\\n+  (TREE_LANG_FLAG_6 (IDENTIFIER_NODE_CHECK (node)))\n+\n+static inline struct c_binding **\n+i_label_binding (tree node)\n+{\n+  struct lang_identifier *lid\n+    = (struct lang_identifier *) IDENTIFIER_NODE_CHECK (node);\n+\n+  if (lid->label_binding == NULL\n+      && c_binding_oracle != NULL\n+      && !I_LABEL_CHECKED (node))\n+    {\n+      /* Set the \"checked\" flag first, to avoid infinite recursion\n+\t when the binding oracle calls back into gcc.  */\n+      I_LABEL_CHECKED (node) = 1;\n+      c_binding_oracle (C_ORACLE_LABEL, node);\n+    }\n+\n+  return &lid->label_binding;\n+}\n+\n+#define I_LABEL_BINDING(node) (*i_label_binding (node))\n+\n+#define I_LABEL_DECL(node) \\\n+ (I_LABEL_BINDING(node) ? I_LABEL_BINDING(node)->decl : 0)\n+\n /* The resulting tree type.  */\n \n union GTY((desc (\"TREE_CODE (&%h.generic) == IDENTIFIER_NODE\"),\n@@ -618,6 +693,15 @@ decl_jump_unsafe (tree decl)\n void\n c_print_identifier (FILE *file, tree node, int indent)\n {\n+  void (*save) (enum c_oracle_request, tree identifier);\n+\n+  /* Temporarily hide any binding oracle.  Without this, calls to\n+     debug_tree from the debugger will end up calling into the oracle,\n+     making for a confusing debug session.  As the oracle isn't needed\n+     here for normal operation, it's simplest to suppress it.  */\n+  save = c_binding_oracle;\n+  c_binding_oracle = NULL;\n+\n   print_node (file, \"symbol\", I_SYMBOL_DECL (node), indent + 4);\n   print_node (file, \"tag\", I_TAG_DECL (node), indent + 4);\n   print_node (file, \"label\", I_LABEL_DECL (node), indent + 4);\n@@ -628,6 +712,8 @@ c_print_identifier (FILE *file, tree node, int indent)\n       fprintf (file, \"rid \" HOST_PTR_PRINTF \" \\\"%s\\\"\",\n \t       (void *) rid, IDENTIFIER_POINTER (rid));\n     }\n+\n+  c_binding_oracle = save;\n }\n \n /* Establish a binding between NAME, an IDENTIFIER_NODE, and DECL,\n@@ -1494,6 +1580,54 @@ pushtag (location_t loc, tree name, tree type)\n \t}\n     }\n }\n+\n+/* An exported interface to pushtag.  This is used by the gdb plugin's\n+   binding oracle to introduce a new tag binding.  */\n+\n+void\n+c_pushtag (location_t loc, tree name, tree type)\n+{\n+  pushtag (loc, name, type);\n+}\n+\n+/* An exported interface to bind a declaration.  LOC is the location\n+   to use.  DECL is the declaration to bind.  The decl's name is used\n+   to determine how it is bound.  If DECL is a VAR_DECL, then\n+   IS_GLOBAL determines whether the decl is put into the global (file\n+   and external) scope or the current function's scope; if DECL is not\n+   a VAR_DECL then it is always put into the file scope.  */\n+\n+void\n+c_bind (location_t loc, tree decl, bool is_global)\n+{\n+  struct c_scope *scope;\n+  bool nested = false;\n+\n+  if (TREE_CODE (decl) != VAR_DECL || current_function_scope == NULL)\n+    {\n+      /* Types and functions are always considered to be global.  */\n+      scope = file_scope;\n+      DECL_EXTERNAL (decl) = 1;\n+      TREE_PUBLIC (decl) = 1;\n+    }\n+  else if (is_global)\n+    {\n+      /* Also bind it into the external scope.  */\n+      bind (DECL_NAME (decl), decl, external_scope, true, false, loc);\n+      nested = true;\n+      scope = file_scope;\n+      DECL_EXTERNAL (decl) = 1;\n+      TREE_PUBLIC (decl) = 1;\n+    }\n+  else\n+    {\n+      DECL_CONTEXT (decl) = current_function_decl;\n+      TREE_PUBLIC (decl) = 0;\n+      scope = current_function_scope;\n+    }\n+\n+  bind (DECL_NAME (decl), decl, scope, false, nested, loc);\n+}\n \f\n /* Subroutine of compare_decls.  Allow harmless mismatches in return\n    and argument types provided that the type modes match.  This function"}, {"sha": "cf9497360b782b92fb87a0f74c44e8c7f7ca3c80", "filename": "gcc/c/c-tree.h", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-tree.h?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -673,12 +673,36 @@ extern int current_function_returns_abnormally;\n extern enum machine_mode c_default_pointer_mode;\n \n /* In c-decl.c */\n+\n+/* Tell the binding oracle what kind of binding we are looking for.  */\n+\n+enum c_oracle_request\n+{\n+  C_ORACLE_SYMBOL,\n+  C_ORACLE_TAG,\n+  C_ORACLE_LABEL\n+};\n+\n+/* If this is non-NULL, then it is a \"binding oracle\" which can lazily\n+   create bindings when needed by the C compiler.  The oracle is told\n+   the name and type of the binding to create.  It can call pushdecl\n+   or the like to ensure the binding is visible; or do nothing,\n+   leaving the binding untouched.  c-decl.c takes note of when the\n+   oracle has been called and will not call it again if it fails to\n+   create a given binding.  */\n+\n+typedef void c_binding_oracle_function (enum c_oracle_request, tree identifier);\n+\n+extern c_binding_oracle_function *c_binding_oracle;\n+\n extern void c_finish_incomplete_decl (tree);\n extern void c_write_global_declarations (void);\n extern tree c_omp_reduction_id (enum tree_code, tree);\n extern tree c_omp_reduction_decl (tree);\n extern tree c_omp_reduction_lookup (tree, tree);\n extern tree c_check_omp_declare_reduction_r (tree *, int *, void *);\n+extern void c_pushtag (location_t, tree, tree);\n+extern void c_bind (location_t, tree, bool);\n \n /* In c-errors.c */\n extern void pedwarn_c90 (location_t, int opt, const char *, ...)"}, {"sha": "4022332f5f0b56f9d16091ed5b201c40d4871e7d", "filename": "gcc/configure", "status": "modified", "additions": 86, "deletions": 86, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -27931,72 +27931,72 @@ $as_echo \"#define HAVE_cloog 1\" >>confdefs.h\n fi\n \n # Check for plugin support\n-# Check whether --enable-plugin was given.\n+   # Check whether --enable-plugin was given.\n if test \"${enable_plugin+set}\" = set; then :\n   enableval=$enable_plugin; enable_plugin=$enableval\n else\n   enable_plugin=yes; default_plugin=yes\n fi\n \n \n-pluginlibs=\n+   pluginlibs=\n \n-case \"${host}\" in\n-  *-*-darwin*)\n-    if test x$build = x$host; then\n-      export_sym_check=\"nm${exeext} -g\"\n-    elif test x$host = x$target; then\n-      export_sym_check=\"$gcc_cv_nm -g\"\n-    else\n-      export_sym_check=\n-    fi\n-  ;;\n-  *)\n-    if test x$build = x$host; then\n-      export_sym_check=\"objdump${exeext} -T\"\n-    elif test x$host = x$target; then\n-      export_sym_check=\"$gcc_cv_objdump -T\"\n-    else\n-      export_sym_check=\n-    fi\n-  ;;\n-esac\n+   case \"${host}\" in\n+     *-*-darwin*)\n+       if test x$build = x$host; then\n+\t export_sym_check=\"nm${exeext} -g\"\n+       elif test x$host = x$target; then\n+\t export_sym_check=\"$gcc_cv_nm -g\"\n+       else\n+\t export_sym_check=\n+       fi\n+     ;;\n+     *)\n+       if test x$build = x$host; then\n+\t export_sym_check=\"objdump${exeext} -T\"\n+       elif test x$host = x$target; then\n+\t export_sym_check=\"$gcc_cv_objdump -T\"\n+       else\n+\t export_sym_check=\n+       fi\n+     ;;\n+   esac\n \n-if test x\"$enable_plugin\" = x\"yes\"; then\n+   if test x\"$enable_plugin\" = x\"yes\"; then\n \n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for exported symbols\" >&5\n+     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for exported symbols\" >&5\n $as_echo_n \"checking for exported symbols... \" >&6; }\n-  if test \"x$export_sym_check\" != x; then\n-    echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n-    ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest$ac_exeext > /dev/null 2>&1\n-    if $export_sym_check conftest$ac_exeext | grep -q foobar > /dev/null; then\n-      : # No need to use a flag\n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+     if test \"x$export_sym_check\" != x; then\n+       echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n+       ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest$ac_exeext > /dev/null 2>&1\n+       if $export_sym_check conftest$ac_exeext | grep -q foobar > /dev/null; then\n+\t : # No need to use a flag\n+\t { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n $as_echo \"yes\" >&6; }\n-    else\n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+       else\n+\t { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n $as_echo \"yes\" >&6; }\n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -rdynamic\" >&5\n+\t { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -rdynamic\" >&5\n $as_echo_n \"checking for -rdynamic... \" >&6; }\n-      ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest$ac_exeext > /dev/null 2>&1\n-      if $export_sym_check conftest$ac_exeext | grep -q foobar > /dev/null; then\n-        plugin_rdynamic=yes\n-        pluginlibs=\"-rdynamic\"\n-      else\n-        plugin_rdynamic=no\n-        enable_plugin=no\n-      fi\n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $plugin_rdynamic\" >&5\n+\t ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest$ac_exeext > /dev/null 2>&1\n+\t if $export_sym_check conftest$ac_exeext | grep -q foobar > /dev/null; then\n+\t   plugin_rdynamic=yes\n+\t   pluginlibs=\"-rdynamic\"\n+\t else\n+\t   plugin_rdynamic=no\n+\t   enable_plugin=no\n+\t fi\n+\t { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $plugin_rdynamic\" >&5\n $as_echo \"$plugin_rdynamic\" >&6; }\n-    fi\n-  else\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unable to check\" >&5\n+       fi\n+     else\n+       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unable to check\" >&5\n $as_echo \"unable to check\" >&6; }\n-  fi\n+     fi\n \n-  # Check -ldl\n-  saved_LIBS=\"$LIBS\"\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing dlopen\" >&5\n+     # Check -ldl\n+     saved_LIBS=\"$LIBS\"\n+     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing dlopen\" >&5\n $as_echo_n \"checking for library containing dlopen... \" >&6; }\n if test \"${ac_cv_search_dlopen+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n@@ -28052,28 +28052,28 @@ if test \"$ac_res\" != no; then :\n \n fi\n \n-  if test x\"$ac_cv_search_dlopen\" = x\"-ldl\"; then\n-    pluginlibs=\"$pluginlibs -ldl\"\n-  fi\n-  LIBS=\"$saved_LIBS\"\n-\n-  # Check that we can build shared objects with -fPIC -shared\n-  saved_LDFLAGS=\"$LDFLAGS\"\n-  saved_CFLAGS=\"$CFLAGS\"\n-  case \"${host}\" in\n-    *-*-darwin*)\n-      CFLAGS=`echo $CFLAGS | sed s/-mdynamic-no-pic//g`\n-      CFLAGS=\"$CFLAGS -fPIC\"\n-      LDFLAGS=\"$LDFLAGS -shared -undefined dynamic_lookup\"\n-    ;;\n-    *)\n-      CFLAGS=\"$CFLAGS -fPIC\"\n-      LDFLAGS=\"$LDFLAGS -fPIC -shared\"\n-    ;;\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -fPIC -shared\" >&5\n+     if test x\"$ac_cv_search_dlopen\" = x\"-ldl\"; then\n+       pluginlibs=\"$pluginlibs -ldl\"\n+     fi\n+     LIBS=\"$saved_LIBS\"\n+\n+     # Check that we can build shared objects with -fPIC -shared\n+     saved_LDFLAGS=\"$LDFLAGS\"\n+     saved_CFLAGS=\"$CFLAGS\"\n+     case \"${host}\" in\n+       *-*-darwin*)\n+\t CFLAGS=`echo $CFLAGS | sed s/-mdynamic-no-pic//g`\n+\t CFLAGS=\"$CFLAGS -fPIC\"\n+\t LDFLAGS=\"$LDFLAGS -shared -undefined dynamic_lookup\"\n+       ;;\n+       *)\n+\t CFLAGS=\"$CFLAGS -fPIC\"\n+\t LDFLAGS=\"$LDFLAGS -fPIC -shared\"\n+       ;;\n+     esac\n+     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -fPIC -shared\" >&5\n $as_echo_n \"checking for -fPIC -shared... \" >&6; }\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n extern int X;\n int\n@@ -28093,22 +28093,22 @@ $as_echo \"no\" >&6; }; have_pic_shared=no\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n-  if test x\"$have_pic_shared\" != x\"yes\" -o x\"$ac_cv_search_dlopen\" = x\"no\"; then\n-    pluginlibs=\n-    enable_plugin=no\n-  fi\n-  LDFLAGS=\"$saved_LDFLAGS\"\n-  CFLAGS=\"$saved_CFLAGS\"\n-\n-  # If plugin support had been requested but not available, fail.\n-  if test x\"$enable_plugin\" = x\"no\" ; then\n-    if test x\"$default_plugin\" != x\"yes\"; then\n-      as_fn_error \"\n-Building GCC with plugin support requires a host that supports\n--fPIC, -shared, -ldl and -rdynamic.\" \"$LINENO\" 5\n-    fi\n-  fi\n-fi\n+     if test x\"$have_pic_shared\" != x\"yes\" -o x\"$ac_cv_search_dlopen\" = x\"no\"; then\n+       pluginlibs=\n+       enable_plugin=no\n+     fi\n+     LDFLAGS=\"$saved_LDFLAGS\"\n+     CFLAGS=\"$saved_CFLAGS\"\n+\n+     # If plugin support had been requested but not available, fail.\n+     if test x\"$enable_plugin\" = x\"no\" ; then\n+       if test x\"$default_plugin\" != x\"yes\"; then\n+\t as_fn_error \"\n+   Building GCC with plugin support requires a host that supports\n+   -fPIC, -shared, -ldl and -rdynamic.\" \"$LINENO\" 5\n+       fi\n+     fi\n+   fi\n \n \n "}, {"sha": "02bb3066795f75d88e201f7b147c2142f907bcac", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 99, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -5548,105 +5548,7 @@ if test \"x${CLOOGLIBS}\" != \"x\" ; then\n    AC_DEFINE(HAVE_cloog, 1, [Define if cloog is in use.])\n fi\n \n-# Check for plugin support\n-AC_ARG_ENABLE(plugin,\n-[AS_HELP_STRING([--enable-plugin], [enable plugin support])],\n-enable_plugin=$enableval,\n-enable_plugin=yes; default_plugin=yes)\n-\n-pluginlibs=\n-\n-case \"${host}\" in\n-  *-*-darwin*)\n-    if test x$build = x$host; then\n-      export_sym_check=\"nm${exeext} -g\"\n-    elif test x$host = x$target; then\n-      export_sym_check=\"$gcc_cv_nm -g\"\n-    else\n-      export_sym_check=\n-    fi\n-  ;;\n-  *)\n-    if test x$build = x$host; then\n-      export_sym_check=\"objdump${exeext} -T\"\n-    elif test x$host = x$target; then\n-      export_sym_check=\"$gcc_cv_objdump -T\"\n-    else\n-      export_sym_check=\n-    fi\n-  ;;\n-esac\n-\n-if test x\"$enable_plugin\" = x\"yes\"; then\n-\n-  AC_MSG_CHECKING([for exported symbols])\n-  if test \"x$export_sym_check\" != x; then\n-    echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n-    ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest$ac_exeext > /dev/null 2>&1\n-    if $export_sym_check conftest$ac_exeext | grep -q foobar > /dev/null; then\n-      : # No need to use a flag\n-      AC_MSG_RESULT([yes])\n-    else\n-      AC_MSG_RESULT([yes])\n-      AC_MSG_CHECKING([for -rdynamic])\n-      ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest$ac_exeext > /dev/null 2>&1\n-      if $export_sym_check conftest$ac_exeext | grep -q foobar > /dev/null; then\n-        plugin_rdynamic=yes\n-        pluginlibs=\"-rdynamic\"\n-      else\n-        plugin_rdynamic=no\n-        enable_plugin=no\n-      fi\n-      AC_MSG_RESULT([$plugin_rdynamic])\n-    fi\n-  else\n-    AC_MSG_RESULT([unable to check])\n-  fi\n-\n-  # Check -ldl\n-  saved_LIBS=\"$LIBS\"\n-  AC_SEARCH_LIBS([dlopen], [dl])\n-  if test x\"$ac_cv_search_dlopen\" = x\"-ldl\"; then\n-    pluginlibs=\"$pluginlibs -ldl\"\n-  fi\n-  LIBS=\"$saved_LIBS\"\n-\n-  # Check that we can build shared objects with -fPIC -shared\n-  saved_LDFLAGS=\"$LDFLAGS\"\n-  saved_CFLAGS=\"$CFLAGS\"\n-  case \"${host}\" in\n-    *-*-darwin*)\n-      CFLAGS=`echo $CFLAGS | sed s/-mdynamic-no-pic//g`\n-      CFLAGS=\"$CFLAGS -fPIC\"\n-      LDFLAGS=\"$LDFLAGS -shared -undefined dynamic_lookup\"\n-    ;;\n-    *)\n-      CFLAGS=\"$CFLAGS -fPIC\"\n-      LDFLAGS=\"$LDFLAGS -fPIC -shared\"\n-    ;;\n-  esac\n-  AC_MSG_CHECKING([for -fPIC -shared])\n-  AC_TRY_LINK(\n-    [extern int X;],[return X == 0;],\n-    [AC_MSG_RESULT([yes]); have_pic_shared=yes],\n-    [AC_MSG_RESULT([no]); have_pic_shared=no])\n-  if test x\"$have_pic_shared\" != x\"yes\" -o x\"$ac_cv_search_dlopen\" = x\"no\"; then\n-    pluginlibs=\n-    enable_plugin=no\n-  fi\n-  LDFLAGS=\"$saved_LDFLAGS\"\n-  CFLAGS=\"$saved_CFLAGS\"\n-\n-  # If plugin support had been requested but not available, fail.\n-  if test x\"$enable_plugin\" = x\"no\" ; then\n-    if test x\"$default_plugin\" != x\"yes\"; then\n-      AC_MSG_ERROR([\n-Building GCC with plugin support requires a host that supports\n--fPIC, -shared, -ldl and -rdynamic.])\n-    fi\n-  fi\n-fi\n-\n+GCC_ENABLE_PLUGINS\n AC_SUBST(pluginlibs)\n AC_SUBST(enable_plugin)\n if test x\"$enable_plugin\" = x\"yes\"; then"}, {"sha": "fcfabf3bc1ab7ec0146fae6f50843ffdb0742138", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -1959,10 +1959,10 @@ finish_bitfield_representative (tree repr, tree field)\n }\n \n /* Compute and set FIELD_DECLs for the underlying objects we should\n-   use for bitfield access for the structure laid out with RLI.  */\n+   use for bitfield access for the structure T.  */\n \n-static void\n-finish_bitfield_layout (record_layout_info rli)\n+void\n+finish_bitfield_layout (tree t)\n {\n   tree field, prev;\n   tree repr = NULL_TREE;\n@@ -1971,10 +1971,10 @@ finish_bitfield_layout (record_layout_info rli)\n      we could use the underlying type as hint for the representative\n      if the bitfield would fit and the representative would not exceed\n      the union in size.  */\n-  if (TREE_CODE (rli->t) != RECORD_TYPE)\n+  if (TREE_CODE (t) != RECORD_TYPE)\n     return;\n \n-  for (prev = NULL_TREE, field = TYPE_FIELDS (rli->t);\n+  for (prev = NULL_TREE, field = TYPE_FIELDS (t);\n        field; field = DECL_CHAIN (field))\n     {\n       if (TREE_CODE (field) != FIELD_DECL)\n@@ -2061,7 +2061,7 @@ finish_record_layout (record_layout_info rli, int free_p)\n   finalize_type_size (rli->t);\n \n   /* Compute bitfield representatives.  */\n-  finish_bitfield_layout (rli);\n+  finish_bitfield_layout (rli->t);\n \n   /* Propagate TYPE_PACKED to variants.  With C++ templates,\n      handle_packed_attribute is too early to do this.  */"}, {"sha": "ec3bbb8368fb11a2667677ff1510dcc74660f2a5", "filename": "gcc/stor-layout.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fstor-layout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/gcc%2Fstor-layout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.h?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -35,6 +35,7 @@ extern tree rli_size_so_far (record_layout_info);\n extern void normalize_rli (record_layout_info);\n extern void place_field (record_layout_info, tree);\n extern void compute_record_mode (tree);\n+extern void finish_bitfield_layout (tree);\n extern void finish_record_layout (record_layout_info, int);\n extern unsigned int element_precision (const_tree);\n extern void finalize_size_functions (void);"}, {"sha": "441ea3daded5e0ce2c94effc565cddf684cc5e02", "filename": "include/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -1,3 +1,11 @@\n+2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n+\t    Jan Kratochvil  <jan.kratochvil@redhat.com>\n+\t    Tom Tromey  <tromey@redhat.com>\n+\n+\t* gcc-c-fe.def: New file.\n+\t* gcc-c-interface.h: New file.\n+\t* gcc-interface.h: New file.\n+\n 2014-10-15  David Malcolm  <dmalcolm@redhat.com>\n \n \t* libiberty.h (choose_tmpdir): New prototype."}, {"sha": "19cb8674db9d0f7671de54b788f2d1c38ae759b2", "filename": "include/gcc-c-fe.def", "status": "added", "additions": 197, "deletions": 0, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/include%2Fgcc-c-fe.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/include%2Fgcc-c-fe.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fgcc-c-fe.def?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,197 @@\n+/* Interface between GCC C FE and GDB  -*- c -*-\n+\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+\n+\n+/* Create a new \"decl\" in GCC.  A decl is a declaration, basically a\n+   kind of symbol.\n+\n+   NAME is the name of the new symbol.  SYM_KIND is the kind of\n+   symbol being requested.  SYM_TYPE is the new symbol's C type;\n+   except for labels, where this is not meaningful and should be\n+   zero.  If SUBSTITUTION_NAME is not NULL, then a reference to this\n+   decl in the source will later be substituted with a dereference\n+   of a variable of the given name.  Otherwise, for symbols having\n+   an address (e.g., functions), ADDRESS is the address.  FILENAME\n+   and LINE_NUMBER refer to the symbol's source location.  If this\n+   is not known, FILENAME can be NULL and LINE_NUMBER can be 0.\n+   This function returns the new decl.  */\n+\n+GCC_METHOD7 (gcc_decl, build_decl,\n+\t     const char *,\t      /* Argument NAME.  */\n+\t     enum gcc_c_symbol_kind,  /* Argument SYM_KIND.  */\n+\t     gcc_type,\t\t      /* Argument SYM_TYPE.  */\n+\t     const char *,\t      /* Argument SUBSTITUTION_NAME.  */\n+\t     gcc_address,\t      /* Argument ADDRESS.  */\n+\t     const char *,\t      /* Argument FILENAME.  */\n+\t     unsigned int)\t      /* Argument LINE_NUMBER.  */\n+\n+/* Insert a GCC decl into the symbol table.  DECL is the decl to\n+   insert.  IS_GLOBAL is true if this is an outermost binding, and\n+   false if it is a possibly-shadowing binding.  */\n+\n+GCC_METHOD2 (int /* bool */, bind,\n+\t     gcc_decl,\t\t   /* Argument DECL.  */\n+\t     int /* bool */)       /* Argument IS_GLOBAL.  */\n+\n+/* Insert a tagged type into the symbol table.  NAME is the tag name\n+   of the type and TAGGED_TYPE is the type itself.  TAGGED_TYPE must\n+   be either a struct, union, or enum type, as these are the only\n+   types that have tags.  FILENAME and LINE_NUMBER refer to the type's\n+   source location.  If this is not known, FILENAME can be NULL and\n+   LINE_NUMBER can be 0.  */\n+\n+GCC_METHOD4 (int /* bool */, tagbind,\n+\t     const char *,\t      /* Argument NAME.  */\n+\t     gcc_type,\t\t      /* Argument TAGGED_TYPE.  */\n+\t     const char *,\t      /* Argument FILENAME.  */\n+\t     unsigned int)\t      /* Argument LINE_NUMBER.  */\n+\n+/* Return the type of a pointer to a given base type.  */\n+\n+GCC_METHOD1 (gcc_type, build_pointer_type,\n+\t     gcc_type)\t\t\t/* Argument BASE_TYPE.  */\n+\n+/* Create a new 'struct' type.  Initially it has no fields.  */\n+\n+GCC_METHOD0 (gcc_type, build_record_type)\n+\n+/* Create a new 'union' type.  Initially it has no fields.  */\n+\n+GCC_METHOD0 (gcc_type, build_union_type)\n+\n+/* Add a field to a struct or union type.  FIELD_NAME is the field's\n+   name.  FIELD_TYPE is the type of the field.  BITSIZE and BITPOS\n+   indicate where in the struct the field occurs.  */\n+\n+GCC_METHOD5 (int /* bool */, build_add_field,\n+\t     gcc_type,\t\t\t   /* Argument RECORD_OR_UNION_TYPE. */\n+\t     const char *,\t\t   /* Argument FIELD_NAME.  */\n+\t     gcc_type,\t\t\t   /* Argument FIELD_TYPE.  */\n+\t     unsigned long,\t\t   /* Argument BITSIZE.  */\n+\t     unsigned long)\t\t   /* Argument BITPOS.  */\n+\n+/* After all the fields have been added to a struct or union, the\n+   struct or union type must be \"finished\".  This does some final\n+   cleanups in GCC.  */\n+\n+GCC_METHOD2 (int /* bool */, finish_record_or_union,\n+\t     gcc_type,\t\t\t   /* Argument RECORD_OR_UNION_TYPE. */\n+\t     unsigned long)\t\t   /* Argument SIZE_IN_BYTES.  */\n+\n+/* Create a new 'enum' type.  The new type initially has no\n+   associated constants.  */\n+\n+GCC_METHOD1 (gcc_type, build_enum_type,\n+\t     gcc_type)\t\t\t    /* Argument UNDERLYING_INT_TYPE. */\n+\n+/* Add a new constant to an enum type.  NAME is the constant's\n+   name and VALUE is its value.  */\n+\n+GCC_METHOD3 (int /* bool */, build_add_enum_constant,\n+\t     gcc_type,\t\t       /* Argument ENUM_TYPE.  */\n+\t     const char *,\t       /* Argument NAME.  */\n+\t     unsigned long)\t       /* Argument VALUE.  */\n+\n+/* After all the constants have been added to an enum, the type must\n+   be \"finished\".  This does some final cleanups in GCC.  */\n+\n+GCC_METHOD1 (int /* bool */, finish_enum_type,\n+\t     gcc_type)\t\t       /* Argument ENUM_TYPE.  */\n+\n+/* Create a new function type.  RETURN_TYPE is the type returned by\n+   the function, and ARGUMENT_TYPES is a vector, of length NARGS, of\n+   the argument types.  IS_VARARGS is true if the function is\n+   varargs.  */\n+\n+GCC_METHOD3 (gcc_type, build_function_type,\n+\t     gcc_type,\t\t\t   /* Argument RETURN_TYPE.  */\n+\t     const struct gcc_type_array *, /* Argument ARGUMENT_TYPES.  */\n+\t     int /* bool */)               /* Argument IS_VARARGS.  */\n+\n+/* Return an integer type with the given properties.  */\n+\n+GCC_METHOD2 (gcc_type, int_type,\n+\t     int /* bool */,               /* Argument IS_UNSIGNED.  */\n+\t     unsigned long)                /* Argument SIZE_IN_BYTES.  */\n+\n+/* Return a floating point type with the given properties.  */\n+\n+GCC_METHOD1 (gcc_type, float_type,\n+\t     unsigned long)\t\t\t/* Argument SIZE_IN_BYTES.  */\n+\n+/* Return the 'void' type.  */\n+\n+GCC_METHOD0 (gcc_type, void_type)\n+\n+/* Return the 'bool' type.  */\n+\n+GCC_METHOD0 (gcc_type, bool_type)\n+\n+/* Create a new array type.  If NUM_ELEMENTS is -1, then the array\n+   is assumed to have an unknown length.  */\n+\n+GCC_METHOD2 (gcc_type, build_array_type,\n+\t     gcc_type,\t\t\t  /* Argument ELEMENT_TYPE.  */\n+\t     int)\t\t\t  /* Argument NUM_ELEMENTS.  */\n+\n+/* Create a new variably-sized array type.  UPPER_BOUND_NAME is the\n+   name of a local variable that holds the upper bound of the array;\n+   it is one less than the array size.  */\n+\n+GCC_METHOD2 (gcc_type, build_vla_array_type,\n+\t     gcc_type,\t\t\t  /* Argument ELEMENT_TYPE.  */\n+\t     const char *)\t\t  /* Argument UPPER_BOUND_NAME.  */\n+\n+/* Return a qualified variant of a given base type.  QUALIFIERS says\n+   which qualifiers to use; it is composed of or'd together\n+   constants from 'enum gcc_qualifiers'.  */\n+\n+GCC_METHOD2 (gcc_type, build_qualified_type,\n+\t     gcc_type,\t\t\t      /* Argument UNQUALIFIED_TYPE.  */\n+\t     enum gcc_qualifiers)\t      /* Argument QUALIFIERS.  */\n+\n+/* Build a complex type given its element type.  */\n+\n+GCC_METHOD1 (gcc_type, build_complex_type,\n+\t     gcc_type)\t\t\t  /* Argument ELEMENT_TYPE.  */\n+\n+/* Build a vector type given its element type and number of\n+   elements.  */\n+\n+GCC_METHOD2 (gcc_type, build_vector_type,\n+\t     gcc_type,\t\t\t  /* Argument ELEMENT_TYPE.  */\n+\t     int)\t\t\t  /* Argument NUM_ELEMENTS.  */\n+\n+/* Build a constant.  NAME is the constant's name and VALUE is its\n+   value.  FILENAME and LINE_NUMBER refer to the type's source\n+   location.  If this is not known, FILENAME can be NULL and\n+   LINE_NUMBER can be 0.  */\n+\n+GCC_METHOD5 (int /* bool */, build_constant,\n+\t     gcc_type,\t\t  /* Argument TYPE.  */\n+\t     const char *,\t  /* Argument NAME.  */\n+\t     unsigned long,\t  /* Argument VALUE.  */\n+\t     const char *,\t  /* Argument FILENAME.  */\n+\t     unsigned int)\t  /* Argument LINE_NUMBER.  */\n+\n+/* Emit an error and return an error type object.  */\n+\n+GCC_METHOD1 (gcc_type, error,\n+\t     const char *)\t\t /* Argument MESSAGE.  */"}, {"sha": "25ef62f6e81f2bdd47490125f066c6429bf80f5e", "filename": "include/gcc-c-interface.h", "status": "added", "additions": 220, "deletions": 0, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/include%2Fgcc-c-interface.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/include%2Fgcc-c-interface.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fgcc-c-interface.h?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,220 @@\n+/* Interface between GCC C FE and GDB\n+\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_C_INTERFACE_H\n+#define GCC_C_INTERFACE_H\n+\n+#include \"gcc-interface.h\"\n+\n+/* This header defines the interface to the GCC API.  It must be both\n+   valid C and valid C++, because it is included by both programs.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/* Forward declaration.  */\n+\n+struct gcc_c_context;\n+\n+/*\n+ * Definitions and declarations for the C front end.\n+ */\n+\n+/* Defined versions of the C front-end API.  */\n+\n+enum gcc_c_api_version\n+{\n+  GCC_C_FE_VERSION_0 = 0\n+};\n+\n+/* Qualifiers.  */\n+\n+enum gcc_qualifiers\n+{\n+  GCC_QUALIFIER_CONST = 1,\n+  GCC_QUALIFIER_VOLATILE = 2,\n+  GCC_QUALIFIER_RESTRICT = 4\n+};\n+\n+/* This enumerates the kinds of decls that GDB can create.  */\n+\n+enum gcc_c_symbol_kind\n+{\n+  /* A function.  */\n+\n+  GCC_C_SYMBOL_FUNCTION,\n+\n+  /* A variable.  */\n+\n+  GCC_C_SYMBOL_VARIABLE,\n+\n+  /* A typedef.  */\n+\n+  GCC_C_SYMBOL_TYPEDEF,\n+\n+  /* A label.  */\n+\n+  GCC_C_SYMBOL_LABEL\n+};\n+\n+/* This enumerates the types of symbols that GCC might request from\n+   GDB.  */\n+\n+enum gcc_c_oracle_request\n+{\n+  /* An ordinary symbol -- a variable, function, typedef, or enum\n+     constant.  */\n+\n+  GCC_C_ORACLE_SYMBOL,\n+\n+  /* A struct, union, or enum tag.  */\n+\n+  GCC_C_ORACLE_TAG,\n+\n+  /* A label.  */\n+\n+  GCC_C_ORACLE_LABEL\n+};\n+\n+/* The type of the function called by GCC to ask GDB for a symbol's\n+   definition.  DATUM is an arbitrary value supplied when the oracle\n+   function is registered.  CONTEXT is the GCC context in which the\n+   request is being made.  REQUEST specifies what sort of symbol is\n+   being requested, and IDENTIFIER is the name of the symbol.  */\n+\n+typedef void gcc_c_oracle_function (void *datum,\n+\t\t\t\t    struct gcc_c_context *context,\n+\t\t\t\t    enum gcc_c_oracle_request request,\n+\t\t\t\t    const char *identifier);\n+\n+/* The type of the function called by GCC to ask GDB for a symbol's\n+   address.  This should return 0 if the address is not known.  */\n+\n+typedef gcc_address gcc_c_symbol_address_function (void *datum,\n+\t\t\t\t\t\t   struct gcc_c_context *ctxt,\n+\t\t\t\t\t\t   const char *identifier);\n+\n+/* An array of types used for creating a function type.  */\n+\n+struct gcc_type_array\n+{\n+  /* Number of elements.  */\n+\n+  int n_elements;\n+\n+  /* The elements.  */\n+\n+  gcc_type *elements;\n+};\n+\n+/* The vtable used by the C front end.  */\n+\n+struct gcc_c_fe_vtable\n+{\n+  /* The version of the C interface.  The value is one of the\n+     gcc_c_api_version constants.  */\n+\n+  unsigned int c_version;\n+\n+  /* Set the callbacks for this context.\n+\n+     The binding oracle is called whenever the C parser needs to look\n+     up a symbol.  This gives the caller a chance to lazily\n+     instantiate symbols using other parts of the gcc_c_fe_interface\n+     API.\n+\n+     The address oracle is called whenever the C parser needs to look\n+     up a symbol.  This is only called for symbols not provided by the\n+     symbol oracle -- that is, just built-in functions where GCC\n+     provides the declaration.\n+\n+     DATUM is an arbitrary piece of data that is passed back verbatim\n+     to the callbakcs in requests.  */\n+\n+  void (*set_callbacks) (struct gcc_c_context *self,\n+\t\t\t gcc_c_oracle_function *binding_oracle,\n+\t\t\t gcc_c_symbol_address_function *address_oracle,\n+\t\t\t void *datum);\n+\n+#define GCC_METHOD0(R, N) \\\n+  R (*N) (struct gcc_c_context *);\n+#define GCC_METHOD1(R, N, A) \\\n+  R (*N) (struct gcc_c_context *, A);\n+#define GCC_METHOD2(R, N, A, B) \\\n+  R (*N) (struct gcc_c_context *, A, B);\n+#define GCC_METHOD3(R, N, A, B, C) \\\n+  R (*N) (struct gcc_c_context *, A, B, C);\n+#define GCC_METHOD4(R, N, A, B, C, D) \\\n+  R (*N) (struct gcc_c_context *, A, B, C, D);\n+#define GCC_METHOD5(R, N, A, B, C, D, E) \\\n+  R (*N) (struct gcc_c_context *, A, B, C, D, E);\n+#define GCC_METHOD7(R, N, A, B, C, D, E, F, G) \\\n+  R (*N) (struct gcc_c_context *, A, B, C, D, E, F, G);\n+\n+#include \"gcc-c-fe.def\"\n+\n+#undef GCC_METHOD0\n+#undef GCC_METHOD1\n+#undef GCC_METHOD2\n+#undef GCC_METHOD3\n+#undef GCC_METHOD4\n+#undef GCC_METHOD5\n+#undef GCC_METHOD7\n+\n+};\n+\n+/* The C front end object.  */\n+\n+struct gcc_c_context\n+{\n+  /* Base class.  */\n+\n+  struct gcc_base_context base;\n+\n+  /* Our vtable.  This is a separate field because this is simpler\n+     than implementing a vtable inheritance scheme in C.  */\n+\n+  const struct gcc_c_fe_vtable *c_ops;\n+};\n+\n+/* The name of the .so that the compiler builds.  We dlopen this\n+   later.  */\n+\n+#define GCC_C_FE_LIBCC libcc1.so\n+\n+/* The compiler exports a single initialization function.  This macro\n+   holds its name as a symbol.  */\n+\n+#define GCC_C_FE_CONTEXT gcc_c_fe_context\n+\n+/* The type of the initialization function.  The caller passes in the\n+   desired base version and desired C-specific version.  If the\n+   request can be satisfied, a compatible gcc_context object will be\n+   returned.  Otherwise, the function returns NULL.  */\n+\n+typedef struct gcc_c_context *gcc_c_fe_context_function\n+    (enum gcc_base_api_version,\n+     enum gcc_c_api_version);\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif /* GCC_C_INTERFACE_H */"}, {"sha": "34010f24704e77b559e07a9528906d945478fa1d", "filename": "include/gcc-interface.h", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/include%2Fgcc-interface.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/include%2Fgcc-interface.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fgcc-interface.h?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,127 @@\n+/* Generic interface between GCC and GDB\n+\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_INTERFACE_H\n+#define GCC_INTERFACE_H\n+\n+/* This header defines the interface to the GCC API.  It must be both\n+   valid C and valid C++, because it is included by both programs.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/* Opaque typedefs for objects passed through the interface.  */\n+\n+typedef unsigned long long gcc_type;\n+typedef unsigned long long gcc_decl;\n+\n+/* An address in the inferior.  */\n+\n+typedef unsigned long long gcc_address;\n+\n+/* Forward declaration.  */\n+\n+struct gcc_base_context;\n+\n+/* Defined versions of the generic API.  */\n+\n+enum gcc_base_api_version\n+{\n+  GCC_FE_VERSION_0 = 0\n+};\n+\n+/* The operations defined by the GCC base API.  This is the vtable for\n+   the real context structure which is passed around.\n+\n+   The \"base\" API is concerned with basics shared by all compiler\n+   front ends: setting command-line arguments, the file names, etc.\n+\n+   Front-end-specific interfaces inherit from this one.  */\n+\n+struct gcc_base_vtable\n+{\n+  /* The actual version implemented in this interface.  This field can\n+     be relied on not to move, so users can always check it if they\n+     desire.  The value is one of the gcc_base_api_version constants.\n+  */\n+\n+  unsigned int version;\n+\n+  /* Set the compiler's command-line options for the next compilation.\n+     TRIPLET_REGEXP is a regular expression that is used to match the\n+     configury triplet prefix to the compiler.\n+     The arguments are copied by GCC.  ARGV need not be\n+     NULL-terminated.  The arguments must be set separately for each\n+     compilation; that is, after a compile is requested, the\n+     previously-set arguments cannot be reused.\n+\n+     This returns NULL on success.  On failure, returns a malloc()d\n+     error message.  The caller is responsible for freeing it.  */\n+\n+  char *(*set_arguments) (struct gcc_base_context *self,\n+\t\t\t  const char *triplet_regexp,\n+\t\t\t  int argc, char **argv);\n+\n+  /* Set the file name of the program to compile.  The string is\n+     copied by the method implementation, but the caller must\n+     guarantee that the file exists through the compilation.  */\n+\n+  void (*set_source_file) (struct gcc_base_context *self, const char *file);\n+\n+  /* Set a callback to use for printing error messages.  DATUM is\n+     passed through to the callback unchanged.  */\n+\n+  void (*set_print_callback) (struct gcc_base_context *self,\n+\t\t\t      void (*print_function) (void *datum,\n+\t\t\t\t\t\t      const char *message),\n+\t\t\t      void *datum);\n+\n+  /* Perform the compilation.  FILENAME is the name of the resulting\n+     object file.  VERBOSE can be set to cause GCC to print some\n+     information as it works.  Returns true on success, false on\n+     error.  */\n+\n+  int /* bool */ (*compile) (struct gcc_base_context *self,\n+\t\t\t     const char *filename,\n+\t\t\t     int /* bool */ verbose);\n+\n+  /* Destroy this object.  */\n+\n+  void (*destroy) (struct gcc_base_context *self);\n+};\n+\n+/* The GCC object.  */\n+\n+struct gcc_base_context\n+{\n+  /* The virtual table.  */\n+\n+  const struct gcc_base_vtable *ops;\n+};\n+\n+/* The name of the dummy wrapper function generated by gdb.  */\n+\n+#define GCC_FE_WRAPPER_FUNCTION \"_gdb_expr\"\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif /* GCC_INTERFACE_H */"}, {"sha": "3d07d1aeb692f7e20ebda9c8b9f6bb2c5f581dbc", "filename": "libcc1/ChangeLog", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,26 @@\n+2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n+\t    Jan Kratochvil  <jan.kratochvil@redhat.com>\n+\t    Tom Tromey  <tromey@redhat.com>\n+\n+\t* aclocal.m4: New file.\n+\t* callbacks.cc: New file.\n+\t* callbacks.hh: New file.\n+\t* cc1plugin-config.h.in: New file.\n+\t* configure: New file.\n+\t* configure.ac: New file.\n+\t* connection.cc: New file.\n+\t* connection.hh: New file.\n+\t* findcomp.cc: New file.\n+\t* findcomp.hh: New file.\n+\t* libcc1.cc: New file.\n+\t* libcc1plugin.sym: New file.\n+\t* libcc1.sym: New file.\n+\t* Makefile.am: New file.\n+\t* Makefile.in: New file.\n+\t* marshall.cc: New file.\n+\t* marshall.hh: New file.\n+\t* names.cc: New file.\n+\t* names.hh: New file.\n+\t* plugin.cc: New file.\n+\t* rpc.hh: New file.\n+\t* status.hh: New file."}, {"sha": "b3040c54bc4c2d24385ce97fc184e76809087a1d", "filename": "libcc1/Makefile.am", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FMakefile.am?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,55 @@\n+## Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+## This file is part of GCC.\n+\n+## GCC is free software; you can redistribute it and/or modify it under\n+## the terms of the GNU General Public License as published by the Free\n+## Software Foundation; either version 3, or (at your option) any later\n+## version.\n+\n+## GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+## WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+## for more details.\n+\n+## You should have received a copy of the GNU General Public License\n+## along with GCC; see the file COPYING3.  If not see\n+## <http://www.gnu.org/licenses/>.\n+\n+ACLOCAL_AMFLAGS = -I .. -I ../config\n+gcc_build_dir = ../$(host_subdir)/gcc\n+AM_CPPFLAGS = -I $(srcdir)/../include -I $(srcdir)/../libgcc \\\n+\t-I $(gcc_build_dir) -I$(srcdir)/../gcc \\\n+\t-I $(srcdir)/../gcc/c -I $(srcdir)/../gcc/c-family \\\n+\t-I $(srcdir)/../libcpp/include\n+WERROR_FLAG = -Werror\n+AM_CXXFLAGS = $(WARN_FLAGS) $(WERROR_FLAG) $(visibility)\n+libiberty = ../libiberty/pic/libiberty.a\n+\n+\n+plugindir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)/plugin\n+cc1libdir = $(libdir)/$(libsuffix)\n+\n+if ENABLE_PLUGIN\n+plugin_LTLIBRARIES = libcc1plugin.la\n+cc1lib_LTLIBRARIES = libcc1.la\n+endif\n+\n+BUILT_SOURCES = compiler-name.h\n+\n+# Put this in a header so we don't run sed for each compilation.  This\n+# is also simpler to debug as one can easily see the constant.\n+compiler-name.h: Makefile\n+\techo \"#define COMPILER_NAME \\\"`echo gcc | sed '$(transform)'`\\\"\" > compiler-name.h\n+\n+\n+shared_source = callbacks.cc callbacks.hh connection.cc connection.hh \\\n+    marshall.cc marshall.hh rpc.hh status.hh\n+\n+libcc1plugin_la_LDFLAGS = -module -export-symbols $(srcdir)/libcc1plugin.sym\n+libcc1plugin_la_SOURCES = plugin.cc $(shared_source)\n+libcc1plugin_la_LIBADD = $(libiberty)\n+\n+libcc1_la_LDFLAGS = -module -export-symbols $(srcdir)/libcc1.sym\n+libcc1_la_SOURCES = findcomp.cc libcc1.cc names.cc names.hh $(shared_source)\n+libcc1_la_LIBADD = $(libiberty)"}, {"sha": "89783de3ec111d98316bbe7e7b137893dc5bc415", "filename": "libcc1/Makefile.in", "status": "added", "additions": 630, "deletions": 0, "changes": 630, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FMakefile.in?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,630 @@\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+\n+VPATH = @srcdir@\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkglibexecdir = $(libexecdir)/@PACKAGE@\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+target_triplet = @target@\n+subdir = .\n+DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+\t$(top_srcdir)/configure $(am__configure_deps) \\\n+\t$(srcdir)/cc1plugin-config.h.in $(srcdir)/../mkinstalldirs \\\n+\t$(srcdir)/../depcomp\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/gcc-plugin.m4 \\\n+\t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n+\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n+\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n+ configure.lineno config.status.lineno\n+mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n+CONFIG_HEADER = cc1plugin-config.h\n+CONFIG_CLEAN_FILES =\n+CONFIG_CLEAN_VPATH_FILES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__installdirs = \"$(DESTDIR)$(cc1libdir)\" \"$(DESTDIR)$(plugindir)\"\n+LTLIBRARIES = $(cc1lib_LTLIBRARIES) $(plugin_LTLIBRARIES)\n+libcc1_la_DEPENDENCIES = $(libiberty)\n+am__objects_1 = callbacks.lo connection.lo marshall.lo\n+am_libcc1_la_OBJECTS = findcomp.lo libcc1.lo names.lo $(am__objects_1)\n+libcc1_la_OBJECTS = $(am_libcc1_la_OBJECTS)\n+libcc1_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(libcc1_la_LDFLAGS) $(LDFLAGS) -o $@\n+@ENABLE_PLUGIN_TRUE@am_libcc1_la_rpath = -rpath $(cc1libdir)\n+libcc1plugin_la_DEPENDENCIES = $(libiberty)\n+am_libcc1plugin_la_OBJECTS = plugin.lo $(am__objects_1)\n+libcc1plugin_la_OBJECTS = $(am_libcc1plugin_la_OBJECTS)\n+libcc1plugin_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(libcc1plugin_la_LDFLAGS) $(LDFLAGS) -o $@\n+@ENABLE_PLUGIN_TRUE@am_libcc1plugin_la_rpath = -rpath $(plugindir)\n+DEFAULT_INCLUDES = -I.@am__isrc@\n+depcomp = $(SHELL) $(top_srcdir)/../depcomp\n+am__depfiles_maybe = depfiles\n+am__mv = mv -f\n+CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+CXXLD = $(CXX)\n+CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \\\n+\t$(LDFLAGS) -o $@\n+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+CCLD = $(CC)\n+LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \\\n+\t$(LDFLAGS) -o $@\n+SOURCES = $(libcc1_la_SOURCES) $(libcc1plugin_la_SOURCES)\n+ETAGS = etags\n+CTAGS = ctags\n+ACLOCAL = @ACLOCAL@\n+AMTAR = @AMTAR@\n+AR = @AR@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+CC = @CC@\n+CCDEPMODE = @CCDEPMODE@\n+CFLAGS = @CFLAGS@\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+DEFS = @DEFS@\n+DEPDIR = @DEPDIR@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+EXEEXT = @EXEEXT@\n+FGREP = @FGREP@\n+GREP = @GREP@\n+INSTALL = @INSTALL@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LD = @LD@\n+LDFLAGS = @LDFLAGS@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LTLIBOBJS = @LTLIBOBJS@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+MKDIR_P = @MKDIR_P@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_URL = @PACKAGE_URL@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+RANLIB = @RANLIB@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+STRIP = @STRIP@\n+VERSION = @VERSION@\n+WARN_FLAGS = @WARN_FLAGS@\n+abs_builddir = @abs_builddir@\n+abs_srcdir = @abs_srcdir@\n+abs_top_builddir = @abs_top_builddir@\n+abs_top_srcdir = @abs_top_srcdir@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+am__include = @am__include@\n+am__leading_dot = @am__leading_dot@\n+am__quote = @am__quote@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_libsubdir = @build_libsubdir@\n+build_os = @build_os@\n+build_subdir = @build_subdir@\n+build_vendor = @build_vendor@\n+builddir = @builddir@\n+datadir = @datadir@\n+datarootdir = @datarootdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n+exec_prefix = @exec_prefix@\n+gcc_version = @gcc_version@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_subdir = @host_subdir@\n+host_vendor = @host_vendor@\n+htmldir = @htmldir@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+libsuffix = @libsuffix@\n+localedir = @localedir@\n+localstatedir = @localstatedir@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+psdir = @psdir@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+srcdir = @srcdir@\n+sysconfdir = @sysconfdir@\n+target = @target@\n+target_alias = @target_alias@\n+target_cpu = @target_cpu@\n+target_noncanonical = @target_noncanonical@\n+target_os = @target_os@\n+target_subdir = @target_subdir@\n+target_vendor = @target_vendor@\n+top_build_prefix = @top_build_prefix@\n+top_builddir = @top_builddir@\n+top_srcdir = @top_srcdir@\n+visibility = @visibility@\n+ACLOCAL_AMFLAGS = -I .. -I ../config\n+gcc_build_dir = ../$(host_subdir)/gcc\n+AM_CPPFLAGS = -I $(srcdir)/../include -I $(srcdir)/../libgcc \\\n+\t-I $(gcc_build_dir) -I$(srcdir)/../gcc \\\n+\t-I $(srcdir)/../gcc/c -I $(srcdir)/../gcc/c-family \\\n+\t-I $(srcdir)/../libcpp/include\n+\n+WERROR_FLAG = -Werror\n+AM_CXXFLAGS = $(WARN_FLAGS) $(WERROR_FLAG) $(visibility)\n+libiberty = ../libiberty/pic/libiberty.a\n+plugindir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)/plugin\n+cc1libdir = $(libdir)/$(libsuffix)\n+@ENABLE_PLUGIN_TRUE@plugin_LTLIBRARIES = libcc1plugin.la\n+@ENABLE_PLUGIN_TRUE@cc1lib_LTLIBRARIES = libcc1.la\n+BUILT_SOURCES = compiler-name.h\n+shared_source = callbacks.cc callbacks.hh connection.cc connection.hh \\\n+    marshall.cc marshall.hh rpc.hh status.hh\n+\n+libcc1plugin_la_LDFLAGS = -module -export-symbols $(srcdir)/libcc1plugin.sym\n+libcc1plugin_la_SOURCES = plugin.cc $(shared_source)\n+libcc1plugin_la_LIBADD = $(libiberty)\n+libcc1_la_LDFLAGS = -module -export-symbols $(srcdir)/libcc1.sym\n+libcc1_la_SOURCES = findcomp.cc libcc1.cc names.cc names.hh $(shared_source)\n+libcc1_la_LIBADD = $(libiberty)\n+all: $(BUILT_SOURCES) cc1plugin-config.h\n+\t$(MAKE) $(AM_MAKEFLAGS) all-am\n+\n+.SUFFIXES:\n+.SUFFIXES: .cc .lo .o .obj\n+am--refresh:\n+\t@:\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \\\n+\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \\\n+\t\t&& exit 0; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    echo ' $(SHELL) ./config.status'; \\\n+\t    $(SHELL) ./config.status;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\t$(SHELL) ./config.status --recheck\n+\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+\t$(am__cd) $(srcdir) && $(AUTOCONF)\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n+\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n+$(am__aclocal_m4_deps):\n+\n+cc1plugin-config.h: stamp-h1\n+\t@if test ! -f $@; then \\\n+\t  rm -f stamp-h1; \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \\\n+\telse :; fi\n+\n+stamp-h1: $(srcdir)/cc1plugin-config.h.in $(top_builddir)/config.status\n+\t@rm -f stamp-h1\n+\tcd $(top_builddir) && $(SHELL) ./config.status cc1plugin-config.h\n+$(srcdir)/cc1plugin-config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) \n+\t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n+\trm -f stamp-h1\n+\ttouch $@\n+\n+distclean-hdr:\n+\t-rm -f cc1plugin-config.h stamp-h1\n+install-cc1libLTLIBRARIES: $(cc1lib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(cc1libdir)\" || $(MKDIR_P) \"$(DESTDIR)$(cc1libdir)\"\n+\t@list='$(cc1lib_LTLIBRARIES)'; test -n \"$(cc1libdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(cc1libdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(cc1libdir)\"; \\\n+\t}\n+\n+uninstall-cc1libLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(cc1lib_LTLIBRARIES)'; test -n \"$(cc1libdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(cc1libdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(cc1libdir)/$$f\"; \\\n+\tdone\n+\n+clean-cc1libLTLIBRARIES:\n+\t-test -z \"$(cc1lib_LTLIBRARIES)\" || rm -f $(cc1lib_LTLIBRARIES)\n+\t@list='$(cc1lib_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n+install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(plugindir)\" || $(MKDIR_P) \"$(DESTDIR)$(plugindir)\"\n+\t@list='$(plugin_LTLIBRARIES)'; test -n \"$(plugindir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(plugindir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(plugindir)\"; \\\n+\t}\n+\n+uninstall-pluginLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(plugin_LTLIBRARIES)'; test -n \"$(plugindir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(plugindir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(plugindir)/$$f\"; \\\n+\tdone\n+\n+clean-pluginLTLIBRARIES:\n+\t-test -z \"$(plugin_LTLIBRARIES)\" || rm -f $(plugin_LTLIBRARIES)\n+\t@list='$(plugin_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n+libcc1.la: $(libcc1_la_OBJECTS) $(libcc1_la_DEPENDENCIES) \n+\t$(libcc1_la_LINK) $(am_libcc1_la_rpath) $(libcc1_la_OBJECTS) $(libcc1_la_LIBADD) $(LIBS)\n+libcc1plugin.la: $(libcc1plugin_la_OBJECTS) $(libcc1plugin_la_DEPENDENCIES) \n+\t$(libcc1plugin_la_LINK) $(am_libcc1plugin_la_rpath) $(libcc1plugin_la_OBJECTS) $(libcc1plugin_la_LIBADD) $(LIBS)\n+\n+mostlyclean-compile:\n+\t-rm -f *.$(OBJEXT)\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callbacks.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connection.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/findcomp.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcc1.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marshall.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/names.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plugin.Plo@am__quote@\n+\n+.cc.o:\n+@am__fastdepCXX_TRUE@\t$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n+@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(CXXCOMPILE) -c -o $@ $<\n+\n+.cc.obj:\n+@am__fastdepCXX_TRUE@\t$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`\n+@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.cc.lo:\n+@am__fastdepCXX_TRUE@\t$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n+@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='$<' object='$@' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(LTCXXCOMPILE) -c -o $@ $<\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+distclean-libtool:\n+\t-rm -f libtool config.lt\n+\n+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n+\tlist='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\tmkid -fID $$unique\n+tags: TAGS\n+\n+TAGS:  $(HEADERS) $(SOURCES) cc1plugin-config.h.in $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\tset x; \\\n+\there=`pwd`; \\\n+\tlist='$(SOURCES) $(HEADERS) cc1plugin-config.h.in $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: CTAGS\n+CTAGS:  $(HEADERS) $(SOURCES) cc1plugin-config.h.in $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\tlist='$(SOURCES) $(HEADERS) cc1plugin-config.h.in $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+check-am: all-am\n+check: $(BUILT_SOURCES)\n+\t$(MAKE) $(AM_MAKEFLAGS) check-am\n+all-am: Makefile $(LTLIBRARIES) cc1plugin-config.h\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(cc1libdir)\" \"$(DESTDIR)$(plugindir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: $(BUILT_SOURCES)\n+\t$(MAKE) $(AM_MAKEFLAGS) install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\t-test -z \"$(BUILT_SOURCES)\" || rm -f $(BUILT_SOURCES)\n+clean: clean-am\n+\n+clean-am: clean-cc1libLTLIBRARIES clean-generic clean-libtool \\\n+\tclean-pluginLTLIBRARIES mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf ./$(DEPDIR)\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-compile distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-tags\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am: install-cc1libLTLIBRARIES install-pluginLTLIBRARIES\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am:\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf $(top_srcdir)/autom4te.cache\n+\t-rm -rf ./$(DEPDIR)\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-cc1libLTLIBRARIES uninstall-pluginLTLIBRARIES\n+\n+.MAKE: all check install install-am install-strip\n+\n+.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \\\n+\tclean-cc1libLTLIBRARIES clean-generic clean-libtool \\\n+\tclean-pluginLTLIBRARIES ctags distclean distclean-compile \\\n+\tdistclean-generic distclean-hdr distclean-libtool \\\n+\tdistclean-tags dvi dvi-am html html-am info info-am install \\\n+\tinstall-am install-cc1libLTLIBRARIES install-data \\\n+\tinstall-data-am install-dvi install-dvi-am install-exec \\\n+\tinstall-exec-am install-html install-html-am install-info \\\n+\tinstall-info-am install-man install-pdf install-pdf-am \\\n+\tinstall-pluginLTLIBRARIES install-ps install-ps-am \\\n+\tinstall-strip installcheck installcheck-am installdirs \\\n+\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n+\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n+\tpdf pdf-am ps ps-am tags uninstall uninstall-am \\\n+\tuninstall-cc1libLTLIBRARIES uninstall-pluginLTLIBRARIES\n+\n+\n+# Put this in a header so we don't run sed for each compilation.  This\n+# is also simpler to debug as one can easily see the constant.\n+compiler-name.h: Makefile\n+\techo \"#define COMPILER_NAME \\\"`echo gcc | sed '$(transform)'`\\\"\" > compiler-name.h\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "e418a1062de23a17b4b206e1b4a2b864b734f85b", "filename": "libcc1/aclocal.m4", "status": "added", "additions": 981, "deletions": 0, "changes": 981, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Faclocal.m4?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,981 @@\n+# generated automatically by aclocal 1.11.1 -*- Autoconf -*-\n+\n+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+# 2005, 2006, 2007, 2008, 2009  Free Software Foundation, Inc.\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+m4_ifndef([AC_AUTOCONF_VERSION],\n+  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\n+m4_if(m4_defn([AC_AUTOCONF_VERSION]), [2.64],,\n+[m4_warning([this file was generated for autoconf 2.64.\n+You have another version of autoconf.  It may work, but is not guaranteed to.\n+If you have problems, you may need to regenerate the build system entirely.\n+To do so, use the procedure documented by the package, typically `autoreconf'.])])\n+\n+# Copyright (C) 2002, 2003, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# AM_AUTOMAKE_VERSION(VERSION)\n+# ----------------------------\n+# Automake X.Y traces this macro to ensure aclocal.m4 has been\n+# generated from the m4 files accompanying Automake X.Y.\n+# (This private macro should not be called outside this file.)\n+AC_DEFUN([AM_AUTOMAKE_VERSION],\n+[am__api_version='1.11'\n+dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to\n+dnl require some minimum version.  Point them to the right macro.\n+m4_if([$1], [1.11.1], [],\n+      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl\n+])\n+\n+# _AM_AUTOCONF_VERSION(VERSION)\n+# -----------------------------\n+# aclocal traces this macro to find the Autoconf version.\n+# This is a private macro too.  Using m4_define simplifies\n+# the logic in aclocal, which can simply ignore this definition.\n+m4_define([_AM_AUTOCONF_VERSION], [])\n+\n+# AM_SET_CURRENT_AUTOMAKE_VERSION\n+# -------------------------------\n+# Call AM_AUTOMAKE_VERSION and AM_AUTOMAKE_VERSION so they can be traced.\n+# This function is AC_REQUIREd by AM_INIT_AUTOMAKE.\n+AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n+[AM_AUTOMAKE_VERSION([1.11.1])dnl\n+m4_ifndef([AC_AUTOCONF_VERSION],\n+  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\n+_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])\n+\n+# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n+\n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n+# $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to\n+# `$srcdir', `$srcdir/..', or `$srcdir/../..'.\n+#\n+# Of course, Automake must honor this variable whenever it calls a\n+# tool from the auxiliary directory.  The problem is that $srcdir (and\n+# therefore $ac_aux_dir as well) can be either absolute or relative,\n+# depending on how configure is run.  This is pretty annoying, since\n+# it makes $ac_aux_dir quite unusable in subdirectories: in the top\n+# source directory, any form will work fine, but in subdirectories a\n+# relative path needs to be adjusted first.\n+#\n+# $ac_aux_dir/missing\n+#    fails when called from a subdirectory if $ac_aux_dir is relative\n+# $top_srcdir/$ac_aux_dir/missing\n+#    fails if $ac_aux_dir is absolute,\n+#    fails when called from a subdirectory in a VPATH build with\n+#          a relative $ac_aux_dir\n+#\n+# The reason of the latter failure is that $top_srcdir and $ac_aux_dir\n+# are both prefixed by $srcdir.  In an in-source build this is usually\n+# harmless because $srcdir is `.', but things will broke when you\n+# start a VPATH build or use an absolute $srcdir.\n+#\n+# So we could use something similar to $top_srcdir/$ac_aux_dir/missing,\n+# iff we strip the leading $srcdir from $ac_aux_dir.  That would be:\n+#   am_aux_dir='\\$(top_srcdir)/'`expr \"$ac_aux_dir\" : \"$srcdir//*\\(.*\\)\"`\n+# and then we would define $MISSING as\n+#   MISSING=\"\\${SHELL} $am_aux_dir/missing\"\n+# This will work as long as MISSING is not called from configure, because\n+# unfortunately $(top_srcdir) has no meaning in configure.\n+# However there are other variables, like CC, which are often used in\n+# configure, and could therefore not use this \"fixed\" $ac_aux_dir.\n+#\n+# Another solution, used here, is to always expand $ac_aux_dir to an\n+# absolute PATH.  The drawback is that using absolute paths prevent a\n+# configured tree to be moved without reconfiguration.\n+\n+AC_DEFUN([AM_AUX_DIR_EXPAND],\n+[dnl Rely on autoconf to set up CDPATH properly.\n+AC_PREREQ([2.50])dnl\n+# expand $ac_aux_dir to an absolute path\n+am_aux_dir=`cd $ac_aux_dir && pwd`\n+])\n+\n+# AM_CONDITIONAL                                            -*- Autoconf -*-\n+\n+# Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005, 2006, 2008\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 9\n+\n+# AM_CONDITIONAL(NAME, SHELL-CONDITION)\n+# -------------------------------------\n+# Define a conditional.\n+AC_DEFUN([AM_CONDITIONAL],\n+[AC_PREREQ(2.52)dnl\n+ ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],\n+\t[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl\n+AC_SUBST([$1_TRUE])dnl\n+AC_SUBST([$1_FALSE])dnl\n+_AM_SUBST_NOTMAKE([$1_TRUE])dnl\n+_AM_SUBST_NOTMAKE([$1_FALSE])dnl\n+m4_define([_AM_COND_VALUE_$1], [$2])dnl\n+if $2; then\n+  $1_TRUE=\n+  $1_FALSE='#'\n+else\n+  $1_TRUE='#'\n+  $1_FALSE=\n+fi\n+AC_CONFIG_COMMANDS_PRE(\n+[if test -z \"${$1_TRUE}\" && test -z \"${$1_FALSE}\"; then\n+  AC_MSG_ERROR([[conditional \"$1\" was never defined.\n+Usually this means the macro was only invoked conditionally.]])\n+fi])])\n+\n+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 10\n+\n+# There are a few dirty hacks below to avoid letting `AC_PROG_CC' be\n+# written in clear, in which case automake, when reading aclocal.m4,\n+# will think it sees a *use*, and therefore will trigger all it's\n+# C support machinery.  Also note that it means that autoscan, seeing\n+# CC etc. in the Makefile, will ask for an AC_PROG_CC use...\n+\n+\n+# _AM_DEPENDENCIES(NAME)\n+# ----------------------\n+# See how the compiler implements dependency checking.\n+# NAME is \"CC\", \"CXX\", \"GCJ\", or \"OBJC\".\n+# We try a few techniques and use that to set a single cache variable.\n+#\n+# We don't AC_REQUIRE the corresponding AC_PROG_CC since the latter was\n+# modified to invoke _AM_DEPENDENCIES(CC); we would have a circular\n+# dependency, and given that the user is not expected to run this macro,\n+# just rely on AC_PROG_CC.\n+AC_DEFUN([_AM_DEPENDENCIES],\n+[AC_REQUIRE([AM_SET_DEPDIR])dnl\n+AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl\n+AC_REQUIRE([AM_MAKE_INCLUDE])dnl\n+AC_REQUIRE([AM_DEP_TRACK])dnl\n+\n+ifelse([$1], CC,   [depcc=\"$CC\"   am_compiler_list=],\n+       [$1], CXX,  [depcc=\"$CXX\"  am_compiler_list=],\n+       [$1], OBJC, [depcc=\"$OBJC\" am_compiler_list='gcc3 gcc'],\n+       [$1], UPC,  [depcc=\"$UPC\"  am_compiler_list=],\n+       [$1], GCJ,  [depcc=\"$GCJ\"  am_compiler_list='gcc3 gcc'],\n+                   [depcc=\"$$1\"   am_compiler_list=])\n+\n+AC_CACHE_CHECK([dependency style of $depcc],\n+               [am_cv_$1_dependencies_compiler_type],\n+[if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n+  # We make a subdir and do the tests there.  Otherwise we can end up\n+  # making bogus files that we don't know about and never remove.  For\n+  # instance it was reported that on HP-UX the gcc test will end up\n+  # making a dummy file named `D' -- because `-MD' means `put the output\n+  # in D'.\n+  mkdir conftest.dir\n+  # Copy depcomp to subdir because otherwise we won't find it if we're\n+  # using a relative directory.\n+  cp \"$am_depcomp\" conftest.dir\n+  cd conftest.dir\n+  # We will build objects and dependencies in a subdirectory because\n+  # it helps to detect inapplicable dependency modes.  For instance\n+  # both Tru64's cc and ICC support -MD to output dependencies as a\n+  # side effect of compilation, but ICC will put the dependencies in\n+  # the current directory while Tru64 will put them in the object\n+  # directory.\n+  mkdir sub\n+\n+  am_cv_$1_dependencies_compiler_type=none\n+  if test \"$am_compiler_list\" = \"\"; then\n+     am_compiler_list=`sed -n ['s/^#*\\([a-zA-Z0-9]*\\))$/\\1/p'] < ./depcomp`\n+  fi\n+  am__universal=false\n+  m4_case([$1], [CC],\n+    [case \" $depcc \" in #(\n+     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n+     esac],\n+    [CXX],\n+    [case \" $depcc \" in #(\n+     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n+     esac])\n+\n+  for depmode in $am_compiler_list; do\n+    # Setup a source with many dependencies, because some compilers\n+    # like to wrap large dependency lists on column 80 (with \\), and\n+    # we should not choose a depcomp mode which is confused by this.\n+    #\n+    # We need to recreate these files for each test, as the compiler may\n+    # overwrite some of them when testing with obscure command lines.\n+    # This happens at least with the AIX C compiler.\n+    : > sub/conftest.c\n+    for i in 1 2 3 4 5 6; do\n+      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with\n+      # Solaris 8's {/usr,}/bin/sh.\n+      touch sub/conftst$i.h\n+    done\n+    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n+\n+    # We check with `-c' and `-o' for the sake of the \"dashmstdout\"\n+    # mode.  It turns out that the SunPro C++ compiler does not properly\n+    # handle `-M -o', and we need to detect this.  Also, some Intel\n+    # versions had trouble with output in subdirs\n+    am__obj=sub/conftest.${OBJEXT-o}\n+    am__minus_obj=\"-o $am__obj\"\n+    case $depmode in\n+    gcc)\n+      # This depmode causes a compiler race in universal mode.\n+      test \"$am__universal\" = false || continue\n+      ;;\n+    nosideeffect)\n+      # after this tag, mechanisms are not by side-effect, so they'll\n+      # only be used when explicitly requested\n+      if test \"x$enable_dependency_tracking\" = xyes; then\n+\tcontinue\n+      else\n+\tbreak\n+      fi\n+      ;;\n+    msvisualcpp | msvcmsys)\n+      # This compiler won't grok `-c -o', but also, the minuso test has\n+      # not run yet.  These depmodes are late enough in the game, and\n+      # so weak that their functioning should not be impacted.\n+      am__obj=conftest.${OBJEXT-o}\n+      am__minus_obj=\n+      ;;\n+    none) break ;;\n+    esac\n+    if depmode=$depmode \\\n+       source=sub/conftest.c object=$am__obj \\\n+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n+       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n+         >/dev/null 2>conftest.err &&\n+       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n+       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n+       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n+       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n+      # icc doesn't choke on unknown options, it will just issue warnings\n+      # or remarks (even with -Werror).  So we grep stderr for any message\n+      # that says an option was ignored or not supported.\n+      # When given -MP, icc 7.0 and 7.1 complain thusly:\n+      #   icc: Command line warning: ignoring option '-M'; no argument required\n+      # The diagnosis changed in icc 8.0:\n+      #   icc: Command line remark: option '-MP' not supported\n+      if (grep 'ignoring option' conftest.err ||\n+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n+        am_cv_$1_dependencies_compiler_type=$depmode\n+        break\n+      fi\n+    fi\n+  done\n+\n+  cd ..\n+  rm -rf conftest.dir\n+else\n+  am_cv_$1_dependencies_compiler_type=none\n+fi\n+])\n+AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])\n+AM_CONDITIONAL([am__fastdep$1], [\n+  test \"x$enable_dependency_tracking\" != xno \\\n+  && test \"$am_cv_$1_dependencies_compiler_type\" = gcc3])\n+])\n+\n+\n+# AM_SET_DEPDIR\n+# -------------\n+# Choose a directory name for dependency files.\n+# This macro is AC_REQUIREd in _AM_DEPENDENCIES\n+AC_DEFUN([AM_SET_DEPDIR],\n+[AC_REQUIRE([AM_SET_LEADING_DOT])dnl\n+AC_SUBST([DEPDIR], [\"${am__leading_dot}deps\"])dnl\n+])\n+\n+\n+# AM_DEP_TRACK\n+# ------------\n+AC_DEFUN([AM_DEP_TRACK],\n+[AC_ARG_ENABLE(dependency-tracking,\n+[  --disable-dependency-tracking  speeds up one-time build\n+  --enable-dependency-tracking   do not reject slow dependency extractors])\n+if test \"x$enable_dependency_tracking\" != xno; then\n+  am_depcomp=\"$ac_aux_dir/depcomp\"\n+  AMDEPBACKSLASH='\\'\n+fi\n+AM_CONDITIONAL([AMDEP], [test \"x$enable_dependency_tracking\" != xno])\n+AC_SUBST([AMDEPBACKSLASH])dnl\n+_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl\n+])\n+\n+# Generate code to set up dependency tracking.              -*- Autoconf -*-\n+\n+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2008\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+#serial 5\n+\n+# _AM_OUTPUT_DEPENDENCY_COMMANDS\n+# ------------------------------\n+AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],\n+[{\n+  # Autoconf 2.62 quotes --file arguments for eval, but not when files\n+  # are listed without --file.  Let's play safe and only enable the eval\n+  # if we detect the quoting.\n+  case $CONFIG_FILES in\n+  *\\'*) eval set x \"$CONFIG_FILES\" ;;\n+  *)   set x $CONFIG_FILES ;;\n+  esac\n+  shift\n+  for mf\n+  do\n+    # Strip MF so we end up with the name of the file.\n+    mf=`echo \"$mf\" | sed -e 's/:.*$//'`\n+    # Check whether this is an Automake generated Makefile or not.\n+    # We used to match only the files named `Makefile.in', but\n+    # some people rename them; so instead we look at the file content.\n+    # Grep'ing the first line is not enough: some people post-process\n+    # each Makefile.in and add a new line on top of each file to say so.\n+    # Grep'ing the whole file is not good either: AIX grep has a line\n+    # limit of 2048, but all sed's we know have understand at least 4000.\n+    if sed -n 's,^#.*generated by automake.*,X,p' \"$mf\" | grep X >/dev/null 2>&1; then\n+      dirpart=`AS_DIRNAME(\"$mf\")`\n+    else\n+      continue\n+    fi\n+    # Extract the definition of DEPDIR, am__include, and am__quote\n+    # from the Makefile without running `make'.\n+    DEPDIR=`sed -n 's/^DEPDIR = //p' < \"$mf\"`\n+    test -z \"$DEPDIR\" && continue\n+    am__include=`sed -n 's/^am__include = //p' < \"$mf\"`\n+    test -z \"am__include\" && continue\n+    am__quote=`sed -n 's/^am__quote = //p' < \"$mf\"`\n+    # When using ansi2knr, U may be empty or an underscore; expand it\n+    U=`sed -n 's/^U = //p' < \"$mf\"`\n+    # Find all dependency output files, they are included files with\n+    # $(DEPDIR) in their names.  We invoke sed twice because it is the\n+    # simplest approach to changing $(DEPDIR) to its actual value in the\n+    # expansion.\n+    for file in `sed -n \"\n+      s/^$am__include $am__quote\\(.*(DEPDIR).*\\)$am__quote\"'$/\\1/p' <\"$mf\" | \\\n+\t sed -e 's/\\$(DEPDIR)/'\"$DEPDIR\"'/g' -e 's/\\$U/'\"$U\"'/g'`; do\n+      # Make sure the directory exists.\n+      test -f \"$dirpart/$file\" && continue\n+      fdir=`AS_DIRNAME([\"$file\"])`\n+      AS_MKDIR_P([$dirpart/$fdir])\n+      # echo \"creating $dirpart/$file\"\n+      echo '# dummy' > \"$dirpart/$file\"\n+    done\n+  done\n+}\n+])# _AM_OUTPUT_DEPENDENCY_COMMANDS\n+\n+\n+# AM_OUTPUT_DEPENDENCY_COMMANDS\n+# -----------------------------\n+# This macro should only be invoked once -- use via AC_REQUIRE.\n+#\n+# This code is only required when automatic dependency tracking\n+# is enabled.  FIXME.  This creates each `.P' file that we will\n+# need in order to bootstrap the dependency handling code.\n+AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],\n+[AC_CONFIG_COMMANDS([depfiles],\n+     [test x\"$AMDEP_TRUE\" != x\"\" || _AM_OUTPUT_DEPENDENCY_COMMANDS],\n+     [AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"])\n+])\n+\n+# Do all the work for Automake.                             -*- Autoconf -*-\n+\n+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+# 2005, 2006, 2008, 2009 Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 16\n+\n+# This macro actually does too much.  Some checks are only needed if\n+# your package does certain things.  But this isn't really a big deal.\n+\n+# AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])\n+# AM_INIT_AUTOMAKE([OPTIONS])\n+# -----------------------------------------------\n+# The call with PACKAGE and VERSION arguments is the old style\n+# call (pre autoconf-2.50), which is being phased out.  PACKAGE\n+# and VERSION should now be passed to AC_INIT and removed from\n+# the call to AM_INIT_AUTOMAKE.\n+# We support both call styles for the transition.  After\n+# the next Automake release, Autoconf can make the AC_INIT\n+# arguments mandatory, and then we can depend on a new Autoconf\n+# release and drop the old call support.\n+AC_DEFUN([AM_INIT_AUTOMAKE],\n+[AC_PREREQ([2.62])dnl\n+dnl Autoconf wants to disallow AM_ names.  We explicitly allow\n+dnl the ones we care about.\n+m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl\n+AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl\n+AC_REQUIRE([AC_PROG_INSTALL])dnl\n+if test \"`cd $srcdir && pwd`\" != \"`pwd`\"; then\n+  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output\n+  # is not polluted with repeated \"-I.\"\n+  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl\n+  # test to see if srcdir already configured\n+  if test -f $srcdir/config.status; then\n+    AC_MSG_ERROR([source directory already configured; run \"make distclean\" there first])\n+  fi\n+fi\n+\n+# test whether we have cygpath\n+if test -z \"$CYGPATH_W\"; then\n+  if (cygpath --version) >/dev/null 2>/dev/null; then\n+    CYGPATH_W='cygpath -w'\n+  else\n+    CYGPATH_W=echo\n+  fi\n+fi\n+AC_SUBST([CYGPATH_W])\n+\n+# Define the identity of the package.\n+dnl Distinguish between old-style and new-style calls.\n+m4_ifval([$2],\n+[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl\n+ AC_SUBST([PACKAGE], [$1])dnl\n+ AC_SUBST([VERSION], [$2])],\n+[_AM_SET_OPTIONS([$1])dnl\n+dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.\n+m4_if(m4_ifdef([AC_PACKAGE_NAME], 1)m4_ifdef([AC_PACKAGE_VERSION], 1), 11,,\n+  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl\n+ AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl\n+ AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl\n+\n+_AM_IF_OPTION([no-define],,\n+[AC_DEFINE_UNQUOTED(PACKAGE, \"$PACKAGE\", [Name of package])\n+ AC_DEFINE_UNQUOTED(VERSION, \"$VERSION\", [Version number of package])])dnl\n+\n+# Some tools Automake needs.\n+AC_REQUIRE([AM_SANITY_CHECK])dnl\n+AC_REQUIRE([AC_ARG_PROGRAM])dnl\n+AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})\n+AM_MISSING_PROG(AUTOCONF, autoconf)\n+AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})\n+AM_MISSING_PROG(AUTOHEADER, autoheader)\n+AM_MISSING_PROG(MAKEINFO, makeinfo)\n+AC_REQUIRE([AM_PROG_INSTALL_SH])dnl\n+AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl\n+AC_REQUIRE([AM_PROG_MKDIR_P])dnl\n+# We need awk for the \"check\" target.  The system \"awk\" is bad on\n+# some platforms.\n+AC_REQUIRE([AC_PROG_AWK])dnl\n+AC_REQUIRE([AC_PROG_MAKE_SET])dnl\n+AC_REQUIRE([AM_SET_LEADING_DOT])dnl\n+_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],\n+\t      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],\n+\t\t\t     [_AM_PROG_TAR([v7])])])\n+_AM_IF_OPTION([no-dependencies],,\n+[AC_PROVIDE_IFELSE([AC_PROG_CC],\n+\t\t  [_AM_DEPENDENCIES(CC)],\n+\t\t  [define([AC_PROG_CC],\n+\t\t\t  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl\n+AC_PROVIDE_IFELSE([AC_PROG_CXX],\n+\t\t  [_AM_DEPENDENCIES(CXX)],\n+\t\t  [define([AC_PROG_CXX],\n+\t\t\t  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl\n+AC_PROVIDE_IFELSE([AC_PROG_OBJC],\n+\t\t  [_AM_DEPENDENCIES(OBJC)],\n+\t\t  [define([AC_PROG_OBJC],\n+\t\t\t  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl\n+])\n+_AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])dnl\n+dnl The `parallel-tests' driver may need to know about EXEEXT, so add the\n+dnl `am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This macro\n+dnl is hooked onto _AC_COMPILER_EXEEXT early, see below.\n+AC_CONFIG_COMMANDS_PRE(dnl\n+[m4_provide_if([_AM_COMPILER_EXEEXT],\n+  [AM_CONDITIONAL([am__EXEEXT], [test -n \"$EXEEXT\"])])])dnl\n+])\n+\n+dnl Hook into `_AC_COMPILER_EXEEXT' early to learn its expansion.  Do not\n+dnl add the conditional right here, as _AC_COMPILER_EXEEXT may be further\n+dnl mangled by Autoconf and run in a shell conditional statement.\n+m4_define([_AC_COMPILER_EXEEXT],\n+m4_defn([_AC_COMPILER_EXEEXT])[m4_provide([_AM_COMPILER_EXEEXT])])\n+\n+\n+# When config.status generates a header, we must update the stamp-h file.\n+# This file resides in the same directory as the config header\n+# that is generated.  The stamp files are numbered to have different names.\n+\n+# Autoconf calls _AC_AM_CONFIG_HEADER_HOOK (when defined) in the\n+# loop where config.status creates the headers, so we can generate\n+# our stamp files there.\n+AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],\n+[# Compute $1's index in $config_headers.\n+_am_arg=$1\n+_am_stamp_count=1\n+for _am_header in $config_headers :; do\n+  case $_am_header in\n+    $_am_arg | $_am_arg:* )\n+      break ;;\n+    * )\n+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;\n+  esac\n+done\n+echo \"timestamp for $_am_arg\" >`AS_DIRNAME([\"$_am_arg\"])`/stamp-h[]$_am_stamp_count])\n+\n+# Copyright (C) 2001, 2003, 2005, 2008  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# AM_PROG_INSTALL_SH\n+# ------------------\n+# Define $install_sh.\n+AC_DEFUN([AM_PROG_INSTALL_SH],\n+[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\n+if test x\"${install_sh}\" != xset; then\n+  case $am_aux_dir in\n+  *\\ * | *\\\t*)\n+    install_sh=\"\\${SHELL} '$am_aux_dir/install-sh'\" ;;\n+  *)\n+    install_sh=\"\\${SHELL} $am_aux_dir/install-sh\"\n+  esac\n+fi\n+AC_SUBST(install_sh)])\n+\n+# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n+# From Jim Meyering\n+\n+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 5\n+\n+# AM_MAINTAINER_MODE([DEFAULT-MODE])\n+# ----------------------------------\n+# Control maintainer-specific portions of Makefiles.\n+# Default is to disable them, unless `enable' is passed literally.\n+# For symmetry, `disable' may be passed as well.  Anyway, the user\n+# can override the default with the --enable/--disable switch.\n+AC_DEFUN([AM_MAINTAINER_MODE],\n+[m4_case(m4_default([$1], [disable]),\n+       [enable], [m4_define([am_maintainer_other], [disable])],\n+       [disable], [m4_define([am_maintainer_other], [enable])],\n+       [m4_define([am_maintainer_other], [enable])\n+        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])\n+AC_MSG_CHECKING([whether to am_maintainer_other maintainer-specific portions of Makefiles])\n+  dnl maintainer-mode's default is 'disable' unless 'enable' is passed\n+  AC_ARG_ENABLE([maintainer-mode],\n+[  --][am_maintainer_other][-maintainer-mode  am_maintainer_other make rules and dependencies not useful\n+\t\t\t  (and sometimes confusing) to the casual installer],\n+      [USE_MAINTAINER_MODE=$enableval],\n+      [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))\n+  AC_MSG_RESULT([$USE_MAINTAINER_MODE])\n+  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])\n+  MAINT=$MAINTAINER_MODE_TRUE\n+  AC_SUBST([MAINT])dnl\n+]\n+)\n+\n+AU_DEFUN([jm_MAINTAINER_MODE], [AM_MAINTAINER_MODE])\n+\n+# Check to see how 'make' treats includes.\t            -*- Autoconf -*-\n+\n+# Copyright (C) 2001, 2002, 2003, 2005, 2009  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 4\n+\n+# AM_MAKE_INCLUDE()\n+# -----------------\n+# Check to see how make treats includes.\n+AC_DEFUN([AM_MAKE_INCLUDE],\n+[am_make=${MAKE-make}\n+cat > confinc << 'END'\n+am__doit:\n+\t@echo this is the am__doit target\n+.PHONY: am__doit\n+END\n+# If we don't find an include directive, just comment out the code.\n+AC_MSG_CHECKING([for style of include used by $am_make])\n+am__include=\"#\"\n+am__quote=\n+_am_result=none\n+# First try GNU make style include.\n+echo \"include confinc\" > confmf\n+# Ignore all kinds of additional output from `make'.\n+case `$am_make -s -f confmf 2> /dev/null` in #(\n+*the\\ am__doit\\ target*)\n+  am__include=include\n+  am__quote=\n+  _am_result=GNU\n+  ;;\n+esac\n+# Now try BSD make style include.\n+if test \"$am__include\" = \"#\"; then\n+   echo '.include \"confinc\"' > confmf\n+   case `$am_make -s -f confmf 2> /dev/null` in #(\n+   *the\\ am__doit\\ target*)\n+     am__include=.include\n+     am__quote=\"\\\"\"\n+     _am_result=BSD\n+     ;;\n+   esac\n+fi\n+AC_SUBST([am__include])\n+AC_SUBST([am__quote])\n+AC_MSG_RESULT([$_am_result])\n+rm -f confinc confmf\n+])\n+\n+# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-\n+\n+# Copyright (C) 1997, 1999, 2000, 2001, 2003, 2004, 2005, 2008\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 6\n+\n+# AM_MISSING_PROG(NAME, PROGRAM)\n+# ------------------------------\n+AC_DEFUN([AM_MISSING_PROG],\n+[AC_REQUIRE([AM_MISSING_HAS_RUN])\n+$1=${$1-\"${am_missing_run}$2\"}\n+AC_SUBST($1)])\n+\n+\n+# AM_MISSING_HAS_RUN\n+# ------------------\n+# Define MISSING if not defined so far and test if it supports --run.\n+# If it does, set am_missing_run to use it, otherwise, to nothing.\n+AC_DEFUN([AM_MISSING_HAS_RUN],\n+[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\n+AC_REQUIRE_AUX_FILE([missing])dnl\n+if test x\"${MISSING+set}\" != xset; then\n+  case $am_aux_dir in\n+  *\\ * | *\\\t*)\n+    MISSING=\"\\${SHELL} \\\"$am_aux_dir/missing\\\"\" ;;\n+  *)\n+    MISSING=\"\\${SHELL} $am_aux_dir/missing\" ;;\n+  esac\n+fi\n+# Use eval to expand $SHELL\n+if eval \"$MISSING --run true\"; then\n+  am_missing_run=\"$MISSING --run \"\n+else\n+  am_missing_run=\n+  AC_MSG_WARN([`missing' script is too old or missing])\n+fi\n+])\n+\n+# Copyright (C) 2003, 2004, 2005, 2006  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# AM_PROG_MKDIR_P\n+# ---------------\n+# Check for `mkdir -p'.\n+AC_DEFUN([AM_PROG_MKDIR_P],\n+[AC_PREREQ([2.60])dnl\n+AC_REQUIRE([AC_PROG_MKDIR_P])dnl\n+dnl Automake 1.8 to 1.9.6 used to define mkdir_p.  We now use MKDIR_P,\n+dnl while keeping a definition of mkdir_p for backward compatibility.\n+dnl @MKDIR_P@ is magic: AC_OUTPUT adjusts its value for each Makefile.\n+dnl However we cannot define mkdir_p as $(MKDIR_P) for the sake of\n+dnl Makefile.ins that do not define MKDIR_P, so we do our own\n+dnl adjustment using top_builddir (which is defined more often than\n+dnl MKDIR_P).\n+AC_SUBST([mkdir_p], [\"$MKDIR_P\"])dnl\n+case $mkdir_p in\n+  [[\\\\/$]]* | ?:[[\\\\/]]*) ;;\n+  */*) mkdir_p=\"\\$(top_builddir)/$mkdir_p\" ;;\n+esac\n+])\n+\n+# Helper functions for option handling.                     -*- Autoconf -*-\n+\n+# Copyright (C) 2001, 2002, 2003, 2005, 2008  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 4\n+\n+# _AM_MANGLE_OPTION(NAME)\n+# -----------------------\n+AC_DEFUN([_AM_MANGLE_OPTION],\n+[[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])\n+\n+# _AM_SET_OPTION(NAME)\n+# ------------------------------\n+# Set option NAME.  Presently that only means defining a flag for this option.\n+AC_DEFUN([_AM_SET_OPTION],\n+[m4_define(_AM_MANGLE_OPTION([$1]), 1)])\n+\n+# _AM_SET_OPTIONS(OPTIONS)\n+# ----------------------------------\n+# OPTIONS is a space-separated list of Automake options.\n+AC_DEFUN([_AM_SET_OPTIONS],\n+[m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])\n+\n+# _AM_IF_OPTION(OPTION, IF-SET, [IF-NOT-SET])\n+# -------------------------------------------\n+# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\n+AC_DEFUN([_AM_IF_OPTION],\n+[m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])\n+\n+# Check to make sure that the build environment is sane.    -*- Autoconf -*-\n+\n+# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005, 2008\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 5\n+\n+# AM_SANITY_CHECK\n+# ---------------\n+AC_DEFUN([AM_SANITY_CHECK],\n+[AC_MSG_CHECKING([whether build environment is sane])\n+# Just in case\n+sleep 1\n+echo timestamp > conftest.file\n+# Reject unsafe characters in $srcdir or the absolute working directory\n+# name.  Accept space and tab only in the latter.\n+am_lf='\n+'\n+case `pwd` in\n+  *[[\\\\\\\"\\#\\$\\&\\'\\`$am_lf]]*)\n+    AC_MSG_ERROR([unsafe absolute working directory name]);;\n+esac\n+case $srcdir in\n+  *[[\\\\\\\"\\#\\$\\&\\'\\`$am_lf\\ \\\t]]*)\n+    AC_MSG_ERROR([unsafe srcdir value: `$srcdir']);;\n+esac\n+\n+# Do `set' in a subshell so we don't clobber the current shell's\n+# arguments.  Must try -L first in case configure is actually a\n+# symlink; some systems play weird games with the mod time of symlinks\n+# (eg FreeBSD returns the mod time of the symlink's containing\n+# directory).\n+if (\n+   set X `ls -Lt \"$srcdir/configure\" conftest.file 2> /dev/null`\n+   if test \"$[*]\" = \"X\"; then\n+      # -L didn't work.\n+      set X `ls -t \"$srcdir/configure\" conftest.file`\n+   fi\n+   rm -f conftest.file\n+   if test \"$[*]\" != \"X $srcdir/configure conftest.file\" \\\n+      && test \"$[*]\" != \"X conftest.file $srcdir/configure\"; then\n+\n+      # If neither matched, then we have a broken ls.  This can happen\n+      # if, for instance, CONFIG_SHELL is bash and it inherits a\n+      # broken ls alias from the environment.  This has actually\n+      # happened.  Such a system could not be considered \"sane\".\n+      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken\n+alias in your environment])\n+   fi\n+\n+   test \"$[2]\" = conftest.file\n+   )\n+then\n+   # Ok.\n+   :\n+else\n+   AC_MSG_ERROR([newly created file is older than distributed files!\n+Check your system clock])\n+fi\n+AC_MSG_RESULT(yes)])\n+\n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# AM_PROG_INSTALL_STRIP\n+# ---------------------\n+# One issue with vendor `install' (even GNU) is that you can't\n+# specify the program used to strip binaries.  This is especially\n+# annoying in cross-compiling environments, where the build's strip\n+# is unlikely to handle the host's binaries.\n+# Fortunately install-sh will honor a STRIPPROG variable, so we\n+# always use install-sh in `make install-strip', and initialize\n+# STRIPPROG with the value of the STRIP variable (set by the user).\n+AC_DEFUN([AM_PROG_INSTALL_STRIP],\n+[AC_REQUIRE([AM_PROG_INSTALL_SH])dnl\n+# Installed binaries are usually stripped using `strip' when the user\n+# run `make install-strip'.  However `strip' might not be the right\n+# tool to use in cross-compilation environments, therefore Automake\n+# will honor the `STRIP' environment variable to overrule this program.\n+dnl Don't test for $cross_compiling = yes, because it might be `maybe'.\n+if test \"$cross_compiling\" != no; then\n+  AC_CHECK_TOOL([STRIP], [strip], :)\n+fi\n+INSTALL_STRIP_PROGRAM=\"\\$(install_sh) -c -s\"\n+AC_SUBST([INSTALL_STRIP_PROGRAM])])\n+\n+# Copyright (C) 2006, 2008  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 2\n+\n+# _AM_SUBST_NOTMAKE(VARIABLE)\n+# ---------------------------\n+# Prevent Automake from outputting VARIABLE = @VARIABLE@ in Makefile.in.\n+# This macro is traced by Automake.\n+AC_DEFUN([_AM_SUBST_NOTMAKE])\n+\n+# AM_SUBST_NOTMAKE(VARIABLE)\n+# ---------------------------\n+# Public sister of _AM_SUBST_NOTMAKE.\n+AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n+\n+# Check how to create a tarball.                            -*- Autoconf -*-\n+\n+# Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 2\n+\n+# _AM_PROG_TAR(FORMAT)\n+# --------------------\n+# Check how to create a tarball in format FORMAT.\n+# FORMAT should be one of `v7', `ustar', or `pax'.\n+#\n+# Substitute a variable $(am__tar) that is a command\n+# writing to stdout a FORMAT-tarball containing the directory\n+# $tardir.\n+#     tardir=directory && $(am__tar) > result.tar\n+#\n+# Substitute a variable $(am__untar) that extract such\n+# a tarball read from stdin.\n+#     $(am__untar) < result.tar\n+AC_DEFUN([_AM_PROG_TAR],\n+[# Always define AMTAR for backward compatibility.\n+AM_MISSING_PROG([AMTAR], [tar])\n+m4_if([$1], [v7],\n+     [am__tar='${AMTAR} chof - \"$$tardir\"'; am__untar='${AMTAR} xf -'],\n+     [m4_case([$1], [ustar],, [pax],,\n+              [m4_fatal([Unknown tar format])])\n+AC_MSG_CHECKING([how to create a $1 tar archive])\n+# Loop over all known methods to create a tar archive until one works.\n+_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'\n+_am_tools=${am_cv_prog_tar_$1-$_am_tools}\n+# Do not fold the above two line into one, because Tru64 sh and\n+# Solaris sh will not grok spaces in the rhs of `-'.\n+for _am_tool in $_am_tools\n+do\n+  case $_am_tool in\n+  gnutar)\n+    for _am_tar in tar gnutar gtar;\n+    do\n+      AM_RUN_LOG([$_am_tar --version]) && break\n+    done\n+    am__tar=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$$tardir\"'\n+    am__tar_=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$tardir\"'\n+    am__untar=\"$_am_tar -xf -\"\n+    ;;\n+  plaintar)\n+    # Must skip GNU tar: if it does not support --format= it doesn't create\n+    # ustar tarball either.\n+    (tar --version) >/dev/null 2>&1 && continue\n+    am__tar='tar chf - \"$$tardir\"'\n+    am__tar_='tar chf - \"$tardir\"'\n+    am__untar='tar xf -'\n+    ;;\n+  pax)\n+    am__tar='pax -L -x $1 -w \"$$tardir\"'\n+    am__tar_='pax -L -x $1 -w \"$tardir\"'\n+    am__untar='pax -r'\n+    ;;\n+  cpio)\n+    am__tar='find \"$$tardir\" -print | cpio -o -H $1 -L'\n+    am__tar_='find \"$tardir\" -print | cpio -o -H $1 -L'\n+    am__untar='cpio -i -H $1 -d'\n+    ;;\n+  none)\n+    am__tar=false\n+    am__tar_=false\n+    am__untar=false\n+    ;;\n+  esac\n+\n+  # If the value was cached, stop now.  We just wanted to have am__tar\n+  # and am__untar set.\n+  test -n \"${am_cv_prog_tar_$1}\" && break\n+\n+  # tar/untar a dummy directory, and stop if the command works\n+  rm -rf conftest.dir\n+  mkdir conftest.dir\n+  echo GrepMe > conftest.dir/file\n+  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])\n+  rm -rf conftest.dir\n+  if test -s conftest.tar; then\n+    AM_RUN_LOG([$am__untar <conftest.tar])\n+    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break\n+  fi\n+done\n+rm -rf conftest.dir\n+\n+AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])\n+AC_MSG_RESULT([$am_cv_prog_tar_$1])])\n+AC_SUBST([am__tar])\n+AC_SUBST([am__untar])\n+]) # _AM_PROG_TAR\n+\n+m4_include([../config/acx.m4])\n+m4_include([../config/depstand.m4])\n+m4_include([../config/gcc-plugin.m4])\n+m4_include([../config/lead-dot.m4])\n+m4_include([../config/override.m4])\n+m4_include([../config/warnings.m4])\n+m4_include([../libtool.m4])\n+m4_include([../ltoptions.m4])\n+m4_include([../ltsugar.m4])\n+m4_include([../ltversion.m4])\n+m4_include([../lt~obsolete.m4])"}, {"sha": "3c4eda67ad07332259f3a1ccbc45df371bfc2c9f", "filename": "libcc1/callbacks.cc", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fcallbacks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fcallbacks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fcallbacks.cc?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,90 @@\n+/* Callback management.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include <cc1plugin-config.h>\n+#include <string.h>\n+#include <stdlib.h>\n+#include \"callbacks.hh\"\n+#include \"libiberty.h\"\n+\n+// An entry in the hash table.\n+struct method\n+{\n+  const char *name;\n+  cc1_plugin::callback_ftype *func;\n+};\n+\n+// Hash function for struct method.\n+static hashval_t\n+hash_method (const void *a)\n+{\n+  const struct method *m = (const struct method *) a;\n+\n+  return htab_hash_string (m->name);\n+}\n+\n+// Equality function for struct method.\n+static int\n+eq_method (const void *a, const void *b)\n+{\n+  const struct method *ma = (const struct method *) a;\n+  const struct method *mb = (const struct method *) b;\n+\n+  return strcmp (ma->name, mb->name) == 0;\n+}\n+\n+cc1_plugin::callbacks::callbacks ()\n+  : m_registry (htab_create_alloc (10, hash_method, eq_method,\n+\t\t\t\t   free, xcalloc, free))\n+{\n+}\n+\n+cc1_plugin::callbacks::~callbacks ()\n+{\n+  htab_delete (m_registry);\n+}\n+\n+void\n+cc1_plugin::callbacks::add_callback (const char *name,\n+\t\t\t\t     cc1_plugin::callback_ftype *func)\n+{\n+  method m;\n+  method **slot;\n+\n+  m.name = name;\n+  m.func = func;\n+\n+  slot = (method **) htab_find_slot (m_registry, &m, INSERT);\n+  *slot = XNEW (method);\n+  **slot = m;\n+}\n+\n+cc1_plugin::callback_ftype *\n+cc1_plugin::callbacks::find_callback (const char *name)\n+{\n+  method m, *found;\n+\n+  m.name = name;\n+\n+  found = (method *) htab_find (m_registry, &m);\n+  if (found == NULL)\n+    return NULL;\n+\n+  return found->func;\n+}"}, {"sha": "bde1100fd06ea62b87f60612ae709a34464158f1", "filename": "libcc1/callbacks.hh", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fcallbacks.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fcallbacks.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fcallbacks.hh?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,64 @@\n+/* Callback management\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef CC1_PLUGIN_CALLBACKS_HH\n+#define CC1_PLUGIN_CALLBACKS_HH\n+\n+#include \"status.hh\"\n+#include \"hashtab.h\"\n+\n+namespace cc1_plugin\n+{\n+  class connection;\n+\n+  // The type of a callback method.\n+  typedef status callback_ftype (connection *);\n+\n+  // This class manages callback functions.  A callback has a name and\n+  // an underlying function.  When a query packet arrives, the name is\n+  // inspected and the corresponding function is called.  A callback\n+  // function has to know how to decode its own arguments, but\n+  // wrappers are provided elsewhere to automate this.\n+  class callbacks\n+  {\n+  public:\n+\n+    callbacks ();\n+    ~callbacks ();\n+\n+    // Add a callback named NAME.  FUNC is the function to call when\n+    // this method is invoked.\n+    void add_callback (const char *name, callback_ftype *func);\n+\n+    // Look up a callback by name.  Returns NULL if the method is not\n+    // found.\n+    callback_ftype *find_callback (const char *name);\n+\n+  private:\n+\n+    // Declared but not defined to avoid use.\n+    callbacks (const callbacks &);\n+    callbacks &operator= (const callbacks &);\n+\n+    // The mapping.\n+    htab_t m_registry;\n+  };\n+};\n+\n+#endif // CC1_PLUGIN_CALLBACKS_HH"}, {"sha": "ac06357bad48bcef80ec6090a58da969c48f5134", "filename": "libcc1/cc1plugin-config.h.in", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fcc1plugin-config.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fcc1plugin-config.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fcc1plugin-config.h.in?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,92 @@\n+/* cc1plugin-config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+/* Define to 1 if you have the declaration of `basename', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BASENAME\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+#undef HAVE_DLFCN_H\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#undef HAVE_INTTYPES_H\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#undef HAVE_MEMORY_H\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#undef HAVE_STDINT_H\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#undef HAVE_STDLIB_H\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#undef HAVE_STRINGS_H\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#undef HAVE_STRING_H\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#undef HAVE_SYS_STAT_H\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#undef HAVE_SYS_TYPES_H\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#undef HAVE_UNISTD_H\n+\n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#undef LT_OBJDIR\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n+\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n+\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n+\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n+\n+/* Define to the home page for this package. */\n+#undef PACKAGE_URL\n+\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#undef STDC_HEADERS\n+\n+/* Enable extensions on AIX 3, Interix.  */\n+#ifndef _ALL_SOURCE\n+# undef _ALL_SOURCE\n+#endif\n+/* Enable GNU extensions on systems that have them.  */\n+#ifndef _GNU_SOURCE\n+# undef _GNU_SOURCE\n+#endif\n+/* Enable threading extensions on Solaris.  */\n+#ifndef _POSIX_PTHREAD_SEMANTICS\n+# undef _POSIX_PTHREAD_SEMANTICS\n+#endif\n+/* Enable extensions on HP NonStop.  */\n+#ifndef _TANDEM_SOURCE\n+# undef _TANDEM_SOURCE\n+#endif\n+/* Enable general extensions on Solaris.  */\n+#ifndef __EXTENSIONS__\n+# undef __EXTENSIONS__\n+#endif\n+\n+\n+/* Define to 1 if on MINIX. */\n+#undef _MINIX\n+\n+/* Define to 2 if the system does not provide POSIX.1 features except with\n+   this defined. */\n+#undef _POSIX_1_SOURCE\n+\n+/* Define to 1 if you need to in order for `stat' and other things to work. */\n+#undef _POSIX_SOURCE"}, {"sha": "06b6f52cc4d797d4251d0a407e4f579bedba5947", "filename": "libcc1/configure", "status": "added", "additions": 17176, "deletions": 0, "changes": 17176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconfigure?ref=ddc8de034a1f79861fed57b231813a5c5c48a130"}, {"sha": "7328977d25759cc31a1317ff01ba485bcceb604a", "filename": "libcc1/configure.ac", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconfigure.ac?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,73 @@\n+dnl   Copyright (C) 2014 Free Software Foundation, Inc.\n+dnl\n+dnl This file is part of GCC.\n+dnl\n+dnl GCC is free software; you can redistribute it and/or modify it under\n+dnl the terms of the GNU General Public License as published by the Free\n+dnl Software Foundation; either version 3, or (at your option) any later\n+dnl version.\n+dnl\n+dnl GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+dnl WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+dnl FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+dnl for more details.\n+dnl\n+dnl You should have received a copy of the GNU General Public License\n+dnl along with GCC; see the file COPYING3.  If not see\n+dnl <http://www.gnu.org/licenses/>.\n+\n+AC_PREREQ(2.64)\n+AC_INIT([libcc1], [version-unused])\n+AC_CONFIG_SRCDIR([libcc1.cc])\n+AC_CONFIG_HEADER(cc1plugin-config.h)\n+\n+AC_CANONICAL_SYSTEM\n+AC_USE_SYSTEM_EXTENSIONS\n+# Determine the noncanonical target name, for directory use.\n+ACX_NONCANONICAL_TARGET\n+GCC_TOPLEV_SUBDIRS\n+\n+# 1.11.1: Require that version of automake.\n+# foreign: Don't require README, INSTALL, NEWS, etc.\n+# no-define: Don't define PACKAGE and VERSION.\n+# -Wall: Issue all automake warnings.\n+# -Wno-portability: Don't warn about constructs supported by GNU make.\n+#    (because GCC requires GNU make anyhow).\n+AM_INIT_AUTOMAKE([1.11.1 foreign no-dist no-define -Wall -Wno-portability])\n+AM_MAINTAINER_MODE\n+\n+LT_INIT([disable-static])\n+AM_PROG_LIBTOOL\n+AC_PROG_CXX\n+\n+visibility=\n+if test \"$GXX\" = yes; then\n+  visibility=-fvisibility=hidden\n+fi\n+AC_SUBST(visibility)\n+\n+AC_CHECK_DECLS([basename])\n+\n+gcc_version=`cat $srcdir/../gcc/BASE-VER`\n+AC_SUBST(gcc_version)\n+\n+ACX_PROG_CC_WARNING_OPTS([-W -Wall], [WARN_FLAGS])\n+WARN_FLAGS=\"$WARN_FLAGS -Werror\"\n+AC_SUBST(WARN_FLAGS)\n+\n+libsuffix=\n+if test \"$GXX\" = yes; then\n+  libsuffix=`$CXX -print-multi-os-directory`\n+fi\n+AC_SUBST(libsuffix)\n+\n+# If any of these functions are missing, simply don't bother building\n+# this plugin.\n+GCC_ENABLE_PLUGINS\n+AC_CHECK_FUNC(socketpair, , enable_plugin=no)\n+AC_CHECK_FUNC(select, , enable_plugin=no)\n+AC_CHECK_FUNC(fork, , enable_plugin=no)\n+AM_CONDITIONAL(ENABLE_PLUGIN, test $enable_plugin = yes)\n+\n+AC_CONFIG_FILES([Makefile])\n+AC_OUTPUT"}, {"sha": "3e57bbc0efe994ca7ca006ea4507e6712eb9c510", "filename": "libcc1/connection.cc", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fconnection.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fconnection.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconnection.cc?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,153 @@\n+/* Connect implementation\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include <cc1plugin-config.h>\n+#include <string>\n+#include <unistd.h>\n+#include <sys/types.h>\n+#include <errno.h>\n+#include \"marshall.hh\"\n+#include \"connection.hh\"\n+#include \"rpc.hh\"\n+\n+cc1_plugin::connection::~connection ()\n+{\n+}\n+\n+void\n+cc1_plugin::connection::print (const char *)\n+{\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::connection::send (char c)\n+{\n+  if (write (m_fd, &c, 1) != 1)\n+    return FAIL;\n+  return OK;\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::connection::send (const void *buf, int len)\n+{\n+  if (write (m_fd, buf, len) != len)\n+    return FAIL;\n+  return OK;\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::connection::require (char c)\n+{\n+  char result;\n+\n+  if (read (m_fd, &result, 1) != 1\n+      || result != c)\n+    return FAIL;\n+\n+  return OK;\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::connection::get (void *buf, int len)\n+{\n+  if (read (m_fd, buf, len) != len)\n+    return FAIL;\n+  return OK;\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::connection::do_wait (bool want_result)\n+{\n+  while (true)\n+    {\n+      char result;\n+      fd_set read_set;\n+\n+      FD_ZERO (&read_set);\n+      FD_SET (m_fd, &read_set);\n+      if (m_aux_fd != -1)\n+\tFD_SET (m_aux_fd, &read_set);\n+\n+      int nfds = select (FD_SETSIZE, &read_set, NULL, NULL, NULL);\n+      if (nfds == -1)\n+\t{\n+\t  if (errno == EINTR)\n+\t    continue;\n+\t  return FAIL;\n+\t}\n+\n+      // We have to check the stderr fd first, to avoid a possible\n+      // blocking scenario when do_wait is called reentrantly.  In\n+      // such a call, if we handle the primary fd first, then we may\n+      // re-enter this function, read from gcc's stderr, causing the\n+      // outer invocation of this function to block when trying to\n+      // read.\n+      if (m_aux_fd != -1 && FD_ISSET (m_aux_fd, &read_set))\n+\t{\n+\t  char buf[1024];\n+\t  int n = read (m_aux_fd, buf, sizeof (buf) - 1);\n+\t  if (n < 0)\n+\t    return FAIL;\n+\t  if (n > 0)\n+\t    {\n+\t      buf[n] = '\\0';\n+\t      print (buf);\n+\t    }\n+\t}\n+\n+      if (FD_ISSET (m_fd, &read_set))\n+\t{\n+\t  int n = read (m_fd, &result, 1);\n+\t  if (n == 0)\n+\t    return want_result ? FAIL : OK;\n+\t  if (n != 1)\n+\t    return FAIL;\n+\n+\t  switch (result)\n+\t    {\n+\t    case 'R':\n+\t      // The reply is ready; the caller will unmarshall it.\n+\t      return want_result ? OK : FAIL;\n+\n+\t    case 'Q':\n+\t      // While waiting for a reply, the other side made a method\n+\t      // call.\n+\t      {\n+\t\t// Use an argument_wrapper here to simplify management\n+\t\t// of the string's lifetime.\n+\t\targument_wrapper<char *> method_name;\n+\n+\t\tif (!method_name.unmarshall (this))\n+\t\t  return FAIL;\n+\n+\t\tcallback_ftype *callback\n+\t\t  = m_callbacks.find_callback (method_name);\n+\t\t// The call to CALLBACK is where we may end up in a\n+\t\t// reentrant call.\n+\t\tif (callback == NULL || !callback (this))\n+\t\t  return FAIL;\n+\t      }\n+\t      break;\n+\n+\t    default:\n+\t      return FAIL;\n+\t    }\n+\t}\n+    }\n+}"}, {"sha": "242deec311d460cb0d1349995e3dc63393b396e3", "filename": "libcc1/connection.hh", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fconnection.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fconnection.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconnection.hh?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,114 @@\n+/* Plugin connection declarations\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef CC1_PLUGIN_CONNECTION_HH\n+#define CC1_PLUGIN_CONNECTION_HH\n+\n+#include \"status.hh\"\n+#include \"callbacks.hh\"\n+\n+namespace cc1_plugin\n+{\n+  // The connection class represents one side of the connection\n+  // between the gdb-side library and the gcc plugin.  It handles the\n+  // low-level details of reading and writing data.\n+  class connection\n+  {\n+  public:\n+\n+    connection (int fd)\n+      : m_fd (fd),\n+\tm_aux_fd (-1),\n+\tm_callbacks ()\n+    {\n+    }\n+\n+    connection (int fd, int aux_fd)\n+      : m_fd (fd),\n+\tm_aux_fd (aux_fd),\n+\tm_callbacks ()\n+    {\n+    }\n+\n+    virtual ~connection ();\n+\n+    // Send a single character.  This is used to introduce various\n+    // higher-level protocol elements.\n+    status send (char c);\n+\n+    // Send data in bulk.\n+    status send (const void *buf, int len);\n+\n+    // Read a single byte from the connection and verify that it\n+    // matches the argument C.\n+    status require (char c);\n+\n+    // Read data in bulk.\n+    status get (void *buf, int len);\n+\n+    // This is called after a query (remote function call) has been\n+    // sent to the remote.  It waits for a response packet.  The\n+    // response character is read before returning.  Any query packets\n+    // sent from the remote while waiting for a response are handled\n+    // by this function.\n+    status wait_for_result ()\n+    {\n+      return do_wait (true);\n+    }\n+\n+    // Read and respond to query packets sent by the remote.  This\n+    // function returns when the connection is closed.\n+    status wait_for_query ()\n+    {\n+      return do_wait (false);\n+    }\n+\n+    // Register a callback with this connection.  NAME is the name of\n+    // the method being registered.  FUNC is the function.  It must\n+    // know how to decode its own arguments.  When a query packet is\n+    // received by one of the wait_* methods, the corresponding\n+    // callback is invoked.\n+    void add_callback (const char *name, callback_ftype *func)\n+    {\n+      m_callbacks.add_callback (name, func);\n+    }\n+\n+    virtual void print (const char *);\n+\n+  private:\n+\n+    // Declared but not defined, to prevent use.\n+    connection (const connection &);\n+    connection &operator= (const connection &);\n+\n+    // Helper function for the wait_* methods.\n+    status do_wait (bool);\n+\n+    // The file descriptor.\n+    int m_fd;\n+\n+    // An auxiliary file descriptor, or -1 if none.\n+    int m_aux_fd;\n+\n+    // Callbacks associated with this connection.\n+    callbacks m_callbacks;\n+  };\n+}\n+\n+#endif // CC1_PLUGIN_CONNECTION_HH"}, {"sha": "f02b1dfe425448d5232b22492143621ff5a29ec3", "filename": "libcc1/findcomp.cc", "status": "added", "additions": 139, "deletions": 0, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Ffindcomp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Ffindcomp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Ffindcomp.cc?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,139 @@\n+/* Find the correct compiler.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include <config.h>\n+#include <string>\n+#include <dirent.h>\n+#include <stdlib.h>\n+\n+#include \"libiberty.h\"\n+#include \"xregex.h\"\n+#include \"findcomp.hh\"\n+\n+class scanner\n+{\n+public:\n+\n+  scanner (const std::string &dir)\n+  {\n+    m_dir = opendir (dir.c_str ());\n+  }\n+\n+  ~scanner ()\n+  {\n+    if (m_dir != NULL)\n+      closedir (m_dir);\n+  }\n+\n+  const char *next ()\n+  {\n+    if (m_dir == NULL)\n+      return NULL;\n+\n+    struct dirent *entry = readdir (m_dir);\n+    if (entry == NULL)\n+      return NULL;\n+\n+    return entry->d_name;\n+  }\n+\n+private:\n+\n+  DIR *m_dir;\n+};\n+\n+static bool\n+search_dir (const regex_t &regexp, const std::string &dir, std::string *result)\n+{\n+  scanner scan (dir);\n+  const char *filename;\n+\n+  while ((filename = scan.next ()) != NULL)\n+    {\n+      if (regexec (&regexp, filename, 0, NULL, 0) == 0)\n+\t{\n+\t  *result = filename;\n+\t  return true;\n+\t}\n+    }\n+\n+  return false;\n+}\n+\n+class tokenizer\n+{\n+public:\n+\n+  tokenizer (const char *str)\n+    : m_str (str),\n+      m_pos (0)\n+  {\n+  }\n+\n+  bool done () const\n+  {\n+    return m_pos == std::string::npos;\n+  }\n+\n+  std::string next ()\n+  {\n+    std::string::size_type last_pos = m_pos;\n+    std::string::size_type colon = m_str.find(':', last_pos);\n+\n+    std::string result;\n+    if (colon == std::string::npos)\n+      {\n+\tm_pos = colon;\n+\tresult = m_str.substr(last_pos, colon);\n+      }\n+    else\n+      {\n+\tm_pos = colon + 1;\n+\tresult = m_str.substr(last_pos, colon - last_pos);\n+      }\n+    if (result == \"\")\n+      result = \".\";\n+\n+    return result;\n+  }\n+\n+private:\n+\n+  std::string m_str;\n+  std::string::size_type m_pos;\n+};\n+\n+bool\n+find_compiler (const regex_t &regexp, std::string *result)\n+{\n+  const char *cpath = getenv (\"PATH\");\n+\n+  if (cpath == NULL)\n+    return false;\n+\n+  tokenizer dirs (cpath);\n+  while (!dirs.done ())\n+    {\n+      std::string dir = dirs.next ();\n+      if (search_dir (regexp, dir, result))\n+\treturn true;\n+    }\n+\n+  return false;\n+}"}, {"sha": "a55a28379c64e18c648f8783045ee130552e98bf", "filename": "libcc1/findcomp.hh", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Ffindcomp.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Ffindcomp.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Ffindcomp.hh?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,25 @@\n+/* Find the correct compiler.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef CC1_PLUGIN_FINDCOMP_HH\n+#define CC1_PLUGIN_FINDCOMP_HH\n+\n+extern bool find_compiler (const regex_t &regexp, std::string *result);\n+\n+#endif // CC1_PLUGIN_FINDCOMP_HH"}, {"sha": "15320c2d750ae79b19c19640650ec0cc9a01335b", "filename": "libcc1/libcc1.cc", "status": "added", "additions": 530, "deletions": 0, "changes": 530, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Flibcc1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Flibcc1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Flibcc1.cc?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,530 @@\n+/* The library used by gdb.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include <cc1plugin-config.h>\n+#include <vector>\n+#include <string>\n+#include <sys/socket.h>\n+#include <sys/types.h>\n+#include <unistd.h>\n+#include <sys/wait.h>\n+#include <stdio.h>\n+#include <errno.h>\n+#include <sys/stat.h>\n+#include <stdlib.h>\n+#include <sstream>\n+#include \"rpc.hh\"\n+#include \"connection.hh\"\n+#include \"names.hh\"\n+#include \"callbacks.hh\"\n+#include \"gcc-interface.h\"\n+#include \"libiberty.h\"\n+#include \"xregex.h\"\n+#include \"findcomp.hh\"\n+#include \"compiler-name.h\"\n+\n+struct libcc1;\n+\n+class libcc1_connection;\n+\n+// The C compiler context that we hand back to our caller.\n+struct libcc1 : public gcc_c_context\n+{\n+  libcc1 (const gcc_base_vtable *, const gcc_c_fe_vtable *);\n+  ~libcc1 ();\n+\n+  // A convenience function to print something.\n+  void print (const char *str)\n+  {\n+    this->print_function (this->print_datum, str);\n+  }\n+\n+  libcc1_connection *connection;\n+\n+  gcc_c_oracle_function *binding_oracle;\n+  gcc_c_symbol_address_function *address_oracle;\n+  void *oracle_datum;\n+\n+  void (*print_function) (void *datum, const char *message);\n+  void *print_datum;\n+\n+  std::vector<std::string> args;\n+  std::string source_file;\n+};\n+\n+// A local subclass of connection that holds a back-pointer to the\n+// gcc_c_context object that we provide to our caller.\n+class libcc1_connection : public cc1_plugin::connection\n+{\n+public:\n+\n+  libcc1_connection (int fd, int aux_fd, libcc1 *b)\n+    : connection (fd, aux_fd),\n+      back_ptr (b)\n+  {\n+  }\n+\n+  virtual void print (const char *buf)\n+  {\n+    back_ptr->print (buf);\n+  }\n+\n+  libcc1 *back_ptr;\n+};\n+\n+libcc1::libcc1 (const gcc_base_vtable *v,\n+\t\tconst gcc_c_fe_vtable *cv)\n+  : connection (NULL),\n+    binding_oracle (NULL),\n+    address_oracle (NULL),\n+    oracle_datum (NULL),\n+    print_function (NULL),\n+    print_datum (NULL),\n+    args (),\n+    source_file ()\n+{\n+  base.ops = v;\n+  c_ops = cv;\n+}\n+\n+libcc1::~libcc1 ()\n+{\n+  delete connection;\n+}\n+\n+\f\n+\n+// This is a wrapper function that is called by the RPC system and\n+// that then forwards the call to the library user.  Note that the\n+// return value is not used; the type cannot be 'void' due to\n+// limitations in our simple RPC.\n+int\n+call_binding_oracle (cc1_plugin::connection *conn,\n+\t\t     enum gcc_c_oracle_request request,\n+\t\t     const char *identifier)\n+{\n+  libcc1 *self = ((libcc1_connection *) conn)->back_ptr;\n+\n+  self->binding_oracle (self->oracle_datum, self, request, identifier);\n+  return 1;\n+}\n+\n+// This is a wrapper function that is called by the RPC system and\n+// that then forwards the call to the library user.\n+gcc_address\n+call_symbol_address (cc1_plugin::connection *conn, const char *identifier)\n+{\n+  libcc1 *self = ((libcc1_connection *) conn)->back_ptr;\n+\n+  return self->address_oracle (self->oracle_datum, self, identifier);\n+}\n+\n+\f\n+\n+static void\n+set_callbacks (struct gcc_c_context *s,\n+\t       gcc_c_oracle_function *binding_oracle,\n+\t       gcc_c_symbol_address_function *address_oracle,\n+\t       void *datum)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+\n+  self->binding_oracle = binding_oracle;\n+  self->address_oracle = address_oracle;\n+  self->oracle_datum = datum;\n+}\n+\n+// Instances of these rpc<> template functions are installed into the\n+// \"c_vtable\".  These functions are parameterized by type and method\n+// name and forward the call via the connection.\n+\n+template<typename R, const char *&NAME>\n+R rpc (struct gcc_c_context *s)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+  R result;\n+\n+  if (!cc1_plugin::call (self->connection, NAME, &result))\n+    return 0;\n+  return result;\n+}\n+\n+template<typename R, const char *&NAME, typename A>\n+R rpc (struct gcc_c_context *s, A arg)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+  R result;\n+\n+  if (!cc1_plugin::call (self->connection, NAME, &result, arg))\n+    return 0;\n+  return result;\n+}\n+\n+template<typename R, const char *&NAME, typename A1, typename A2>\n+R rpc (struct gcc_c_context *s, A1 arg1, A2 arg2)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+  R result;\n+\n+  if (!cc1_plugin::call (self->connection, NAME, &result, arg1, arg2))\n+    return 0;\n+  return result;\n+}\n+\n+template<typename R, const char *&NAME, typename A1, typename A2, typename A3>\n+R rpc (struct gcc_c_context *s, A1 arg1, A2 arg2, A3 arg3)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+  R result;\n+\n+  if (!cc1_plugin::call (self->connection, NAME, &result, arg1, arg2, arg3))\n+    return 0;\n+  return result;\n+}\n+\n+template<typename R, const char *&NAME, typename A1, typename A2, typename A3,\n+\t typename A4>\n+R rpc (struct gcc_c_context *s, A1 arg1, A2 arg2, A3 arg3, A4 arg4)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+  R result;\n+\n+  if (!cc1_plugin::call (self->connection, NAME, &result, arg1, arg2, arg3,\n+\t\t\t arg4))\n+    return 0;\n+  return result;\n+}\n+\n+template<typename R, const char *&NAME, typename A1, typename A2, typename A3,\n+\t typename A4, typename A5>\n+R rpc (struct gcc_c_context *s, A1 arg1, A2 arg2, A3 arg3, A4 arg4, A5 arg5)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+  R result;\n+\n+  if (!cc1_plugin::call (self->connection, NAME, &result, arg1, arg2, arg3,\n+\t\t\t arg4, arg5))\n+    return 0;\n+  return result;\n+}\n+\n+template<typename R, const char *&NAME, typename A1, typename A2, typename A3,\n+\t typename A4, typename A5, typename A6, typename A7>\n+R rpc (struct gcc_c_context *s, A1 arg1, A2 arg2, A3 arg3, A4 arg4, A5 arg5,\n+       A6 arg6, A7 arg7)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+  R result;\n+\n+  if (!cc1_plugin::call (self->connection, NAME, &result, arg1, arg2, arg3,\n+\t\t\t arg4, arg5, arg6, arg7))\n+    return 0;\n+  return result;\n+}\n+\n+static const struct gcc_c_fe_vtable c_vtable =\n+{\n+  GCC_C_FE_VERSION_0,\n+  set_callbacks,\n+\n+#define GCC_METHOD0(R, N) \\\n+  rpc<R, cc1_plugin::N>,\n+#define GCC_METHOD1(R, N, A) \\\n+  rpc<R, cc1_plugin::N, A>,\n+#define GCC_METHOD2(R, N, A, B) \\\n+  rpc<R, cc1_plugin::N, A, B>,\n+#define GCC_METHOD3(R, N, A, B, C) \\\n+  rpc<R, cc1_plugin::N, A, B, C>,\n+#define GCC_METHOD4(R, N, A, B, C, D) \\\n+  rpc<R, cc1_plugin::N, A, B, C, D>,\n+#define GCC_METHOD5(R, N, A, B, C, D, E) \\\n+  rpc<R, cc1_plugin::N, A, B, C, D, E>,\n+#define GCC_METHOD7(R, N, A, B, C, D, E, F, G) \\\n+  rpc<R, cc1_plugin::N, A, B, C, D, E, F, G>,\n+\n+#include \"gcc-c-fe.def\"\n+\n+#undef GCC_METHOD0\n+#undef GCC_METHOD1\n+#undef GCC_METHOD2\n+#undef GCC_METHOD3\n+#undef GCC_METHOD4\n+#undef GCC_METHOD5\n+#undef GCC_METHOD7\n+};\n+\n+\f\n+\n+// Construct an appropriate regexp to match the compiler name.\n+static std::string\n+make_regexp (const char *triplet_regexp, const char *compiler)\n+{\n+  std::stringstream buf;\n+\n+  buf << \"^\" << triplet_regexp << \"-\";\n+\n+  // Quote the compiler name in case it has something funny in it.\n+  for (const char *p = compiler; *p; ++p)\n+    {\n+      switch (*p)\n+\t{\n+\tcase '.':\n+\tcase '^':\n+\tcase '$':\n+\tcase '*':\n+\tcase '+':\n+\tcase '?':\n+\tcase '(':\n+\tcase ')':\n+\tcase '[':\n+\tcase '{':\n+\tcase '\\\\':\n+\tcase '|':\n+\t  buf << '\\\\';\n+\t  break;\n+\t}\n+      buf << *p;\n+    }\n+  buf << \"$\";\n+\n+  return buf.str ();\n+}\n+\n+static char *\n+libcc1_set_arguments (struct gcc_base_context *s,\n+\t\t      const char *triplet_regexp,\n+\t\t      int argc, char **argv)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+  regex_t triplet;\n+  int code;\n+\n+  std::string rx = make_regexp (triplet_regexp, COMPILER_NAME);\n+  code = regcomp (&triplet, rx.c_str (), REG_EXTENDED | REG_NOSUB);\n+  if (code != 0)\n+    {\n+      size_t len = regerror (code, &triplet, NULL, 0);\n+      char err[len];\n+\n+      regerror (code, &triplet, err, len);\n+\n+      return concat (\"Could not compile regexp \\\"\",\n+\t\t     rx.c_str (),\n+\t\t     \"\\\": \",\n+\t\t     err,\n+\t\t     (char *) NULL);\n+    }\n+\n+  std::string compiler;\n+  if (!find_compiler (triplet, &compiler))\n+    {\n+      regfree (&triplet);\n+      return concat (\"Could not find a compiler matching \\\"\",\n+\t\t     rx.c_str (),\n+\t\t     \"\\\"\",\n+\t\t     (char *) NULL);\n+    }\n+  regfree (&triplet);\n+\n+  self->args.push_back (compiler);\n+\n+  for (int i = 0; i < argc; ++i)\n+    self->args.push_back (argv[i]);\n+\n+  return NULL;\n+}\n+\n+static void\n+libcc1_set_source_file (struct gcc_base_context *s,\n+\t\t\tconst char *file)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+\n+  self->source_file = file;\n+}\n+\n+static void\n+libcc1_set_print_callback (struct gcc_base_context *s,\n+\t\t\t   void (*print_function) (void *datum,\n+\t\t\t\t\t\t   const char *message),\n+\t\t\t   void *datum)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+\n+  self->print_function = print_function;\n+  self->print_datum = datum;\n+}\n+\n+static int\n+fork_exec (libcc1 *self, char **argv, int spair_fds[2], int stderr_fds[2])\n+{\n+  pid_t child_pid = fork ();\n+\n+  if (child_pid == -1)\n+    {\n+      close (spair_fds[0]);\n+      close (spair_fds[1]);\n+      close (stderr_fds[0]);\n+      close (stderr_fds[1]);\n+      return 0;\n+    }\n+\n+  if (child_pid == 0)\n+    {\n+      // Child.\n+      dup2 (stderr_fds[1], 1);\n+      dup2 (stderr_fds[1], 2);\n+      close (stderr_fds[0]);\n+      close (stderr_fds[1]);\n+      close (spair_fds[0]);\n+\n+      execvp (argv[0], argv);\n+      _exit (127);\n+    }\n+  else\n+    {\n+      // Parent.\n+      close (spair_fds[1]);\n+      close (stderr_fds[1]);\n+\n+      cc1_plugin::status result = cc1_plugin::FAIL;\n+      if (self->connection->send ('H')\n+\t  && ::cc1_plugin::marshall (self->connection, GCC_C_FE_VERSION_0))\n+\tresult = self->connection->wait_for_query ();\n+\n+      close (spair_fds[0]);\n+      close (stderr_fds[0]);\n+\n+      while (true)\n+\t{\n+\t  int status;\n+\n+\t  if (waitpid (child_pid, &status, 0) == -1)\n+\t    {\n+\t      if (errno != EINTR)\n+\t\treturn 0;\n+\t    }\n+\n+\t  if (!WIFEXITED (status) || WEXITSTATUS (status) != 0)\n+\t    return 0;\n+\t  break;\n+\t}\n+\n+      if (!result)\n+\treturn 0;\n+      return 1;\n+    }\n+}\n+\n+static int\n+libcc1_compile (struct gcc_base_context *s,\n+\t\tconst char *filename,\n+\t\tint verbose)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+\n+  int fds[2];\n+  if (socketpair (AF_LOCAL, SOCK_STREAM, 0, fds) != 0)\n+    {\n+      self->print (\"could not create socketpair\\n\");\n+      return 0;\n+    }\n+\n+  int stderr_fds[2];\n+  if (pipe (stderr_fds) != 0)\n+    {\n+      self->print (\"could not create pipe\\n\");\n+      close (fds[0]);\n+      close (fds[1]);\n+      return 0;\n+    }\n+\n+  self->args.push_back (\"-fplugin=libcc1plugin\");\n+  char buf[100];\n+  if (snprintf (buf, sizeof (buf), \"-fplugin-arg-libcc1plugin-fd=%d\", fds[1])\n+      >= (long) sizeof (buf))\n+    abort ();\n+  self->args.push_back (buf);\n+\n+  self->args.push_back (self->source_file);\n+  self->args.push_back (\"-c\");\n+  self->args.push_back (\"-o\");\n+  self->args.push_back (filename);\n+  if (verbose)\n+    self->args.push_back (\"-v\");\n+\n+  self->connection = new libcc1_connection (fds[0], stderr_fds[0], self);\n+\n+  cc1_plugin::callback_ftype *fun\n+    = cc1_plugin::callback<int,\n+\t\t\t   enum gcc_c_oracle_request,\n+\t\t\t   const char *,\n+\t\t\t   call_binding_oracle>;\n+  self->connection->add_callback (\"binding_oracle\", fun);\n+\n+  fun = cc1_plugin::callback<gcc_address,\n+\t\t\t     const char *,\n+\t\t\t     call_symbol_address>;\n+  self->connection->add_callback (\"address_oracle\", fun);\n+\n+  char **argv = new (std::nothrow) char *[self->args.size () + 1];\n+  if (argv == NULL)\n+    return 0;\n+\n+  for (unsigned int i = 0; i < self->args.size (); ++i)\n+    argv[i] = const_cast<char *> (self->args[i].c_str ());\n+  argv[self->args.size ()] = NULL;\n+\n+  return fork_exec (self, argv, fds, stderr_fds);\n+}\n+\n+static void\n+libcc1_destroy (struct gcc_base_context *s)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+\n+  delete self;\n+}\n+\n+static const struct gcc_base_vtable vtable =\n+{\n+  GCC_FE_VERSION_0,\n+  libcc1_set_arguments,\n+  libcc1_set_source_file,\n+  libcc1_set_print_callback,\n+  libcc1_compile,\n+  libcc1_destroy\n+};\n+\n+extern \"C\" gcc_c_fe_context_function gcc_c_fe_context;\n+\n+#ifdef __GNUC__\n+#pragma GCC visibility push(default)\n+#endif\n+\n+extern \"C\"\n+struct gcc_c_context *\n+gcc_c_fe_context (enum gcc_base_api_version base_version,\n+\t\t  enum gcc_c_api_version c_version)\n+{\n+  if (base_version != GCC_FE_VERSION_0 || c_version != GCC_C_FE_VERSION_0)\n+    return NULL;\n+\n+  return new libcc1 (&vtable, &c_vtable);\n+}"}, {"sha": "86b1e3ea1e34f9126cf463dac398aaabd4feec88", "filename": "libcc1/libcc1.sym", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Flibcc1.sym", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Flibcc1.sym", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Flibcc1.sym?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1 @@\n+gcc_c_fe_context"}, {"sha": "05d0f7b520fbd3ae1638b4286ccab4ec5d52e825", "filename": "libcc1/libcc1plugin.sym", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Flibcc1plugin.sym", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Flibcc1plugin.sym", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Flibcc1plugin.sym?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,2 @@\n+plugin_init\n+plugin_is_GPL_compatible"}, {"sha": "9119de652b74fdf44048e451b51961781bb2e789", "filename": "libcc1/marshall.cc", "status": "added", "additions": 166, "deletions": 0, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fmarshall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fmarshall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fmarshall.cc?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,166 @@\n+/* Marshalling and unmarshalling.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include <cc1plugin-config.h>\n+#include <new>\n+#include <string.h>\n+#include \"marshall.hh\"\n+#include \"connection.hh\"\n+\n+cc1_plugin::status\n+cc1_plugin::unmarshall_check (connection *conn, unsigned long long check)\n+{\n+  unsigned long long r;\n+\n+  if (!unmarshall (conn, &r))\n+    return FAIL;\n+  return check == r ? OK : FAIL;\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::marshall_intlike (connection *conn, unsigned long long val)\n+{\n+  if (!conn->send ('i'))\n+    return FAIL;\n+  return conn->send (&val, sizeof (val));\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::unmarshall_intlike (connection *conn, unsigned long long *result)\n+{\n+  if (!conn->require ('i'))\n+    return FAIL;\n+  return conn->get (result, sizeof (*result));\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::unmarshall (connection *conn, enum gcc_c_symbol_kind *result)\n+{\n+  protocol_int p;\n+  if (!unmarshall_intlike (conn, &p))\n+    return FAIL;\n+  *result = (enum gcc_c_symbol_kind) p;\n+  return OK;\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::unmarshall (connection *conn, enum gcc_c_oracle_request *result)\n+{\n+  protocol_int p;\n+  if (!unmarshall_intlike (conn, &p))\n+    return FAIL;\n+  *result = (enum gcc_c_oracle_request) p;\n+  return OK;\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::unmarshall (connection *conn, enum gcc_qualifiers *result)\n+{\n+  protocol_int p;\n+  if (!unmarshall_intlike (conn, &p))\n+    return FAIL;\n+  *result = (enum gcc_qualifiers) p;\n+  return OK;\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::marshall (connection *conn, const char *str)\n+{\n+  if (!conn->send ('s'))\n+    return FAIL;\n+\n+  unsigned long long len = str == NULL ? -1ULL : strlen (str);\n+  if (!conn->send (&len, sizeof (len)))\n+    return FAIL;\n+\n+  if (str == NULL)\n+    return OK;\n+\n+  return conn->send (str, len);\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::unmarshall (connection *conn, char **result)\n+{\n+  unsigned long long len;\n+\n+  if (!conn->require ('s'))\n+    return FAIL;\n+  if (!conn->get (&len, sizeof (len)))\n+    return FAIL;\n+\n+  if (len == -1ULL)\n+    {\n+      *result = NULL;\n+      return OK;\n+    }\n+\n+  char *str = new (std::nothrow) char[len + 1];\n+  if (str == NULL)\n+    return FAIL;\n+\n+  if (!conn->get (str, len))\n+    {\n+      delete[] str;\n+      return FAIL;\n+    }\n+\n+  str[len] = '\\0';\n+  *result = str;\n+\n+  return OK;\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::marshall (connection *conn, const gcc_type_array *a)\n+{\n+  if (!conn->send ('a'))\n+    return FAIL;\n+\n+  unsigned long long r = a->n_elements;\n+  if (!conn->send (&r, sizeof (r)))\n+    return FAIL;\n+\n+  return conn->send (a->elements, r * sizeof (a->elements[0]));\n+}\n+\n+cc1_plugin::status\n+cc1_plugin::unmarshall (connection *conn, gcc_type_array **result)\n+{\n+  unsigned long long len;\n+\n+  if (!conn->require ('a'))\n+    return FAIL;\n+  if (!conn->get (&len, sizeof (len)))\n+    return FAIL;\n+\n+  *result = new gcc_type_array;\n+\n+  (*result)->n_elements = len;\n+  (*result)->elements = new gcc_type[len];\n+\n+  if (!conn->get ((*result)->elements, len * sizeof ((*result)->elements[0])))\n+    {\n+      delete[] (*result)->elements;\n+      delete *result;\n+      return FAIL;\n+    }\n+\n+  return OK;\n+}"}, {"sha": "3f936e7a7543c9cbbd0bc23423b6da68daaac36c", "filename": "libcc1/marshall.hh", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fmarshall.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fmarshall.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fmarshall.hh?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,93 @@\n+/* Marshalling and unmarshalling.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef CC1_PLUGIN_MARSHALL_HH\n+#define CC1_PLUGIN_MARSHALL_HH\n+\n+#include \"status.hh\"\n+#include \"gcc-c-interface.h\"\n+\n+namespace cc1_plugin\n+{\n+  class connection;\n+\n+  // Only a single kind of integer is ever sent over the wire, and\n+  // this is it.\n+  typedef unsigned long long protocol_int;\n+\n+  // Read an integer from the connection and verify that it has the\n+  // value V.\n+  status unmarshall_check (connection *, protocol_int v);\n+\n+  // Write an integer, prefixed with the integer type marker, to the\n+  // connection.\n+  status marshall_intlike (connection *, protocol_int);\n+\n+  // Read a type marker from the connection and verify that it is an\n+  // integer type marker.  If not, return FAIL.  If so, read an\n+  // integer store it in the out argument.\n+  status unmarshall_intlike (connection *, protocol_int *);\n+\n+  // A template function that can handle marshalling various integer\n+  // objects to the connection.\n+  template<typename T>\n+  status marshall (connection *conn, T scalar)\n+  {\n+    return marshall_intlike (conn, scalar);\n+  }\n+\n+  // A template function that can handle unmarshalling various integer\n+  // objects from the connection.  Note that this can't be\n+  // instantiated for enum types.  Note also that there's no way at\n+  // the protocol level to distinguish different int types.\n+  template<typename T>\n+  status unmarshall (connection *conn, T *scalar)\n+  {\n+    protocol_int result;\n+\n+    if (!unmarshall_intlike (conn, &result))\n+      return FAIL;\n+    *scalar = result;\n+    return OK;\n+  }\n+\n+  // Unmarshallers for some specific enum types.  With C++11 we\n+  // wouldn't need these, as we could add type traits to the scalar\n+  // unmarshaller.\n+  status unmarshall (connection *, enum gcc_c_symbol_kind *);\n+  status unmarshall (connection *, enum gcc_qualifiers *);\n+  status unmarshall (connection *, enum gcc_c_oracle_request *);\n+\n+  // Send a string type marker followed by a string.\n+  status marshall (connection *, const char *);\n+\n+  // Read a string type marker followed by a string.  The caller is\n+  // responsible for freeing the resulting string using 'delete[]'.\n+  status unmarshall (connection *, char **);\n+\n+  // Send a gcc_type_array marker followed by the array.\n+  status marshall (connection *, const gcc_type_array *);\n+\n+  // Read a gcc_type_array marker, followed by a gcc_type_array.  The\n+  // resulting array must be freed by the caller, using 'delete[]' on\n+  // the elements, and 'delete' on the array object itself.\n+  status unmarshall (connection *, struct gcc_type_array **);\n+};\n+\n+#endif // CC1_PLUGIN_MARSHALL_HH"}, {"sha": "5ddfa7bbc17e9146c9551a9a5f95822d939399db", "filename": "libcc1/names.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fnames.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fnames.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fnames.cc?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,46 @@\n+/* String definitions.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include <cc1plugin-config.h>\n+#include \"names.hh\"\n+\n+#define GCC_METHOD0(R, N) \\\n+  const char *cc1_plugin::N = # N;\n+#define GCC_METHOD1(R, N, A) \\\n+  const char *cc1_plugin::N = # N;\n+#define GCC_METHOD2(R, N, A, B) \\\n+  const char *cc1_plugin::N = # N;\n+#define GCC_METHOD3(R, N, A, B, C) \\\n+  const char *cc1_plugin::N = # N;\n+#define GCC_METHOD4(R, N, A, B, C, D) \\\n+  const char *cc1_plugin::N = # N;\n+#define GCC_METHOD5(R, N, A, B, C, D, E) \\\n+  const char *cc1_plugin::N = # N;\n+#define GCC_METHOD7(R, N, A, B, C, D, E, F, G) \\\n+  const char *cc1_plugin::N = # N;\n+\n+#include \"gcc-c-fe.def\"\n+\n+#undef GCC_METHOD0\n+#undef GCC_METHOD1\n+#undef GCC_METHOD2\n+#undef GCC_METHOD3\n+#undef GCC_METHOD4\n+#undef GCC_METHOD5\n+#undef GCC_METHOD7"}, {"sha": "9bda8d542c44533005f8ac28e4951a49561e8b5f", "filename": "libcc1/names.hh", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fnames.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fnames.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fnames.hh?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,55 @@\n+/* String declarations.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef CC1_PLUGIN_NAMES_HH\n+#define CC1_PLUGIN_NAMES_HH\n+\n+namespace cc1_plugin\n+{\n+  // This code defines global string constants, one for each method in\n+  // gcc-c-fe.def.  This is needed so that they can be used as\n+  // template arguments elsewhere.\n+\n+#define GCC_METHOD0(R, N) \\\n+  extern const char *N;\n+#define GCC_METHOD1(R, N, A) \\\n+  extern const char *N;\n+#define GCC_METHOD2(R, N, A, B) \\\n+  extern const char *N;\n+#define GCC_METHOD3(R, N, A, B, C) \\\n+  extern const char *N;\n+#define GCC_METHOD4(R, N, A, B, C, D) \\\n+  extern const char *N;\n+#define GCC_METHOD5(R, N, A, B, C, D, E) \\\n+  extern const char *N;\n+#define GCC_METHOD7(R, N, A, B, C, D, E, F, G) \\\n+  extern const char *N;\n+\n+#include \"gcc-c-fe.def\"\n+\n+#undef GCC_METHOD0\n+#undef GCC_METHOD1\n+#undef GCC_METHOD2\n+#undef GCC_METHOD3\n+#undef GCC_METHOD4\n+#undef GCC_METHOD5\n+#undef GCC_METHOD7\n+};\n+\n+#endif // CC1_PLUGIN_NAMES_HH"}, {"sha": "5cdd19d78ceb3155bf6d818ebcb6a194e99cddca", "filename": "libcc1/plugin.cc", "status": "added", "additions": 916, "deletions": 0, "changes": 916, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fplugin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fplugin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fplugin.cc?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,916 @@\n+/* Library interface to C front end\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it under\n+   the terms of the GNU General Public License as published by the Free\n+   Software Foundation; either version 3, or (at your option) any later\n+   version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+   for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include <cc1plugin-config.h>\n+\n+#undef PACKAGE_NAME\n+#undef PACKAGE_STRING\n+#undef PACKAGE_TARNAME\n+#undef PACKAGE_VERSION\n+\n+#include \"../gcc/config.h\"\n+\n+#undef PACKAGE_NAME\n+#undef PACKAGE_STRING\n+#undef PACKAGE_TARNAME\n+#undef PACKAGE_VERSION\n+\n+#include \"gcc-plugin.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"stringpool.h\"\n+\n+#include \"gcc-interface.h\"\n+#include \"tree-core.h\"\n+#include \"wide-int.h\"\n+#include \"stor-layout.h\"\n+#include \"c-tree.h\"\n+#include \"toplev.h\"\n+#include \"timevar.h\"\n+#include \"hash-table.h\"\n+#include \"tm.h\"\n+#include \"c-family/c-pragma.h\"\n+#include \"c-lang.h\"\n+#include \"diagnostic.h\"\n+#include \"langhooks.h\"\n+#include \"langhooks-def.h\"\n+\n+#include \"callbacks.hh\"\n+#include \"connection.hh\"\n+#include \"rpc.hh\"\n+\n+#include <string>\n+\n+#ifdef __GNUC__\n+#pragma GCC visibility push(default)\n+#endif\n+int plugin_is_GPL_compatible;\n+#ifdef __GNUC__\n+#pragma GCC visibility pop\n+#endif\n+\n+\f\n+\n+// This is put into the lang hooks when the plugin starts.\n+\n+static void\n+plugin_print_error_function (diagnostic_context *context, const char *file,\n+\t\t\t     diagnostic_info *diagnostic)\n+{\n+  if (current_function_decl != NULL_TREE\n+      && DECL_NAME (current_function_decl) != NULL_TREE\n+      && strcmp (IDENTIFIER_POINTER (DECL_NAME (current_function_decl)),\n+\t\t GCC_FE_WRAPPER_FUNCTION) == 0)\n+    return;\n+  lhd_print_error_function (context, file, diagnostic);\n+}\n+\n+\f\n+\n+static unsigned long long\n+convert_out (tree t)\n+{\n+  return (unsigned long long) (uintptr_t) t;\n+}\n+\n+static tree\n+convert_in (unsigned long long v)\n+{\n+  return (tree) (uintptr_t) v;\n+}\n+\n+\f\n+\n+struct decl_addr_value\n+{\n+  tree decl;\n+  tree address;\n+};\n+\n+struct decl_addr_hasher : typed_free_remove<decl_addr_value>\n+{\n+  typedef decl_addr_value value_type;\n+  typedef decl_addr_value compare_type;\n+\n+  static inline hashval_t hash (const value_type *);\n+  static inline bool equal (const value_type *, const compare_type *);\n+};\n+\n+inline hashval_t\n+decl_addr_hasher::hash (const value_type *e)\n+{\n+  return IDENTIFIER_HASH_VALUE (DECL_NAME (e->decl));\n+}\n+\n+inline bool\n+decl_addr_hasher::equal (const value_type *p1, const compare_type *p2)\n+{\n+  return p1->decl == p2->decl;\n+}\n+\n+\f\n+\n+struct string_hasher : typed_noop_remove<char>\n+{\n+  typedef char value_type;\n+  typedef char compare_type;\n+\n+  static inline hashval_t hash (const value_type *s)\n+  {\n+    return htab_hash_string (s);\n+  }\n+\n+  static inline bool equal (const value_type *p1, const value_type *p2)\n+  {\n+    return strcmp (p1, p2) == 0;\n+  }\n+};\n+\n+\f\n+\n+// A wrapper for pushdecl that doesn't let gdb have a chance to\n+// instantiate a symbol.\n+\n+static void\n+pushdecl_safe (tree decl)\n+{\n+  void (*save) (enum c_oracle_request, tree identifier);\n+\n+  save = c_binding_oracle;\n+  c_binding_oracle = NULL;\n+  pushdecl (decl);\n+  c_binding_oracle = save;\n+}\n+\n+\f\n+\n+struct plugin_context : public cc1_plugin::connection\n+{\n+  plugin_context (int fd);\n+\n+  // Map decls to addresses.\n+  hash_table<decl_addr_hasher> address_map;\n+\n+  // A collection of trees that are preserved for the GC.\n+  hash_table< pointer_hash<tree_node> > preserved;\n+\n+  // File name cache.\n+  hash_table<string_hasher> file_names;\n+\n+  // Perform GC marking.\n+  void mark ();\n+\n+  // Preserve a tree during the plugin's operation.\n+  tree preserve (tree t)\n+  {\n+    tree_node **slot = preserved.find_slot (t, INSERT);\n+    *slot = t;\n+    return t;\n+  }\n+\n+  source_location get_source_location (const char *filename,\n+\t\t\t\t       unsigned int line_number)\n+  {\n+    if (filename == NULL)\n+      return UNKNOWN_LOCATION;\n+\n+    filename = intern_filename (filename);\n+    linemap_add (line_table, LC_ENTER, false, filename, line_number);\n+    source_location loc = linemap_line_start (line_table, line_number, 0);\n+    linemap_add (line_table, LC_LEAVE, false, NULL, 0);\n+    return loc;\n+  }\n+\n+private:\n+\n+  // Add a file name to FILE_NAMES and return the canonical copy.\n+  const char *intern_filename (const char *filename)\n+  {\n+    char **slot = file_names.find_slot (filename, INSERT);\n+    if (*slot == NULL)\n+      {\n+\t/* The file name must live as long as the line map, which\n+\t   effectively means as long as this compilation.  So, we copy\n+\t   the string here but never free it.  */\n+\t*slot = xstrdup (filename);\n+      }\n+    return *slot;\n+  }\n+};\n+\n+static plugin_context *current_context;\n+\n+\f\n+\n+plugin_context::plugin_context (int fd)\n+  : cc1_plugin::connection (fd),\n+    address_map (30),\n+    preserved (30),\n+    file_names (30)\n+{\n+}\n+\n+void\n+plugin_context::mark ()\n+{\n+  for (hash_table<decl_addr_hasher>::iterator it = address_map.begin ();\n+       it != address_map.end ();\n+       ++it)\n+    {\n+      ggc_mark ((*it)->decl);\n+      ggc_mark ((*it)->address);\n+    }\n+\n+  for (hash_table< pointer_hash<tree_node> >::iterator it = preserved.begin ();\n+       it != preserved.end ();\n+       ++it)\n+    ggc_mark (&*it);\n+}\n+\n+static void\n+plugin_binding_oracle (enum c_oracle_request kind, tree identifier)\n+{\n+  enum gcc_c_oracle_request request;\n+\n+  gcc_assert (current_context != NULL);\n+\n+  switch (kind)\n+    {\n+    case C_ORACLE_SYMBOL:\n+      request = GCC_C_ORACLE_SYMBOL;\n+      break;\n+    case C_ORACLE_TAG:\n+      request = GCC_C_ORACLE_TAG;\n+      break;\n+    case C_ORACLE_LABEL:\n+      request = GCC_C_ORACLE_LABEL;\n+      break;\n+    default:\n+      abort ();\n+    }\n+\n+  int ignore;\n+  cc1_plugin::call (current_context, \"binding_oracle\", &ignore,\n+\t\t    request, IDENTIFIER_POINTER (identifier));\n+}\n+\n+static void\n+plugin_pragma_user_expression (cpp_reader *)\n+{\n+  c_binding_oracle = plugin_binding_oracle;\n+}\n+\n+static void\n+plugin_init_extra_pragmas (void *, void *)\n+{\n+  c_register_pragma (\"GCC\", \"user_expression\", plugin_pragma_user_expression);\n+}\n+\n+\f\n+\n+// Maybe rewrite a decl to its address.\n+static tree\n+address_rewriter (tree *in, int *walk_subtrees, void *arg)\n+{\n+  plugin_context *ctx = (plugin_context *) arg;\n+\n+  if (!DECL_P (*in) || DECL_NAME (*in) == NULL_TREE)\n+    return NULL_TREE;\n+\n+  decl_addr_value value;\n+  value.decl = *in;\n+  decl_addr_value *found_value = ctx->address_map.find (&value);\n+  if (found_value != NULL)\n+    {\n+      // At this point we don't need VLA sizes for gdb-supplied\n+      // variables, and having them here confuses later passes, so we\n+      // drop them.\n+      if (C_TYPE_VARIABLE_SIZE (TREE_TYPE (*in)))\n+\t{\n+\t  TREE_TYPE (*in)\n+\t    = build_array_type_nelts (TREE_TYPE (TREE_TYPE (*in)), 1);\n+\t  DECL_SIZE (*in) = TYPE_SIZE (TREE_TYPE (*in));\n+\t  DECL_SIZE_UNIT (*in) = TYPE_SIZE_UNIT (TREE_TYPE (*in));\n+\t}\n+    }\n+  else if (DECL_IS_BUILTIN (*in))\n+    {\n+      gcc_address address;\n+\n+      if (!cc1_plugin::call (ctx, \"address_oracle\", &address,\n+\t\t\t     IDENTIFIER_POINTER (DECL_NAME (*in))))\n+\treturn NULL_TREE;\n+      if (address == 0)\n+\treturn NULL_TREE;\n+\n+      // Insert the decl into the address map in case it is referenced\n+      // again.\n+      value.address = build_int_cst_type (ptr_type_node, address);\n+      decl_addr_value **slot = ctx->address_map.find_slot (&value, INSERT);\n+      gcc_assert (*slot == NULL);\n+      *slot\n+\t= static_cast<decl_addr_value *> (xmalloc (sizeof (decl_addr_value)));\n+      **slot = value;\n+      found_value = *slot;\n+    }\n+  else\n+    return NULL_TREE;\n+\n+  if (found_value->address != error_mark_node)\n+    {\n+      // We have an address for the decl, so rewrite the tree.\n+      tree ptr_type = build_pointer_type (TREE_TYPE (*in));\n+      *in = fold_build1 (INDIRECT_REF, TREE_TYPE (*in),\n+\t\t\t fold_build1 (CONVERT_EXPR, ptr_type,\n+\t\t\t\t      found_value->address));\n+    }\n+\n+  *walk_subtrees = 0;\n+\n+  return NULL_TREE;\n+}\n+\n+// When generating code for gdb, we want to be able to use absolute\n+// addresses to refer to otherwise external objects that gdb knows\n+// about.  gdb passes in these addresses when building decls, and then\n+// before gimplification we go through the trees, rewriting uses to\n+// the equivalent of \"*(TYPE *) ADDR\".\n+static void\n+rewrite_decls_to_addresses (void *function_in, void *)\n+{\n+  tree function = (tree) function_in;\n+\n+  // Do nothing if we're not in gdb.\n+  if (current_context == NULL)\n+    return;\n+\n+  walk_tree (&DECL_SAVED_TREE (function), address_rewriter, current_context,\n+\t     NULL);\n+}\n+\n+\f\n+\n+gcc_decl\n+plugin_build_decl (cc1_plugin::connection *self,\n+\t\t   const char *name,\n+\t\t   enum gcc_c_symbol_kind sym_kind,\n+\t\t   gcc_type sym_type_in,\n+\t\t   const char *substitution_name,\n+\t\t   gcc_address address,\n+\t\t   const char *filename,\n+\t\t   unsigned int line_number)\n+{\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  tree identifier = get_identifier (name);\n+  enum tree_code code;\n+  tree decl;\n+  tree sym_type = convert_in (sym_type_in);\n+\n+  switch (sym_kind)\n+    {\n+    case GCC_C_SYMBOL_FUNCTION:\n+      code = FUNCTION_DECL;\n+      break;\n+\n+    case GCC_C_SYMBOL_VARIABLE:\n+      code = VAR_DECL;\n+      break;\n+\n+    case GCC_C_SYMBOL_TYPEDEF:\n+      code = TYPE_DECL;\n+      break;\n+\n+    case GCC_C_SYMBOL_LABEL:\n+      // FIXME: we aren't ready to handle labels yet.\n+      // It isn't clear how to translate them properly\n+      // and in any case a \"goto\" isn't likely to work.\n+      return convert_out (error_mark_node);\n+\n+    default:\n+      abort ();\n+    }\n+\n+  source_location loc = ctx->get_source_location (filename, line_number);\n+\n+  decl = build_decl (loc, code, identifier, sym_type);\n+  TREE_USED (decl) = 1;\n+  TREE_ADDRESSABLE (decl) = 1;\n+\n+  if (sym_kind != GCC_C_SYMBOL_TYPEDEF)\n+    {\n+      decl_addr_value value;\n+\n+      value.decl = decl;\n+      if (substitution_name != NULL)\n+\t{\n+\t  // If the translator gave us a name without a binding,\n+\t  // we can just substitute error_mark_node, since we know the\n+\t  // translator will be reporting an error anyhow.\n+\t  value.address\n+\t    = lookup_name (get_identifier (substitution_name));\n+\t  if (value.address == NULL_TREE)\n+\t    value.address = error_mark_node;\n+\t}\n+      else\n+\tvalue.address = build_int_cst_type (ptr_type_node, address);\n+      decl_addr_value **slot = ctx->address_map.find_slot (&value, INSERT);\n+      gcc_assert (*slot == NULL);\n+      *slot\n+\t= static_cast<decl_addr_value *> (xmalloc (sizeof (decl_addr_value)));\n+      **slot = value;\n+    }\n+\n+  return convert_out (ctx->preserve (decl));\n+}\n+\n+int\n+plugin_bind (cc1_plugin::connection *,\n+\t     gcc_decl decl_in, int is_global)\n+{\n+  tree decl = convert_in (decl_in);\n+  c_bind (DECL_SOURCE_LOCATION (decl), decl, is_global);\n+  rest_of_decl_compilation (decl, is_global, 0);\n+  return 1;\n+}\n+\n+int\n+plugin_tagbind (cc1_plugin::connection *self,\n+\t\tconst char *name, gcc_type tagged_type,\n+\t\tconst char *filename, unsigned int line_number)\n+{\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  c_pushtag (ctx->get_source_location (filename, line_number),\n+\t     get_identifier (name), convert_in (tagged_type));\n+  return 1;\n+}\n+\n+gcc_type\n+plugin_build_pointer_type (cc1_plugin::connection *,\n+\t\t\t   gcc_type base_type)\n+{\n+  // No need to preserve a pointer type as the base type is preserved.\n+  return convert_out (build_pointer_type (convert_in (base_type)));\n+}\n+\n+gcc_type\n+plugin_build_record_type (cc1_plugin::connection *self)\n+{\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  return convert_out (ctx->preserve (make_node (RECORD_TYPE)));\n+}\n+\n+gcc_type\n+plugin_build_union_type (cc1_plugin::connection *self)\n+{\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  return convert_out (ctx->preserve (make_node (UNION_TYPE)));\n+}\n+\n+int\n+plugin_build_add_field (cc1_plugin::connection *,\n+\t\t\tgcc_type record_or_union_type_in,\n+\t\t\tconst char *field_name,\n+\t\t\tgcc_type field_type_in,\n+\t\t\tunsigned long bitsize,\n+\t\t\tunsigned long bitpos)\n+{\n+  tree record_or_union_type = convert_in (record_or_union_type_in);\n+  tree field_type = convert_in (field_type_in);\n+\n+  gcc_assert (TREE_CODE (record_or_union_type) == RECORD_TYPE\n+\t      || TREE_CODE (record_or_union_type) == UNION_TYPE);\n+\n+  /* Note that gdb does not preserve the location of field decls, so\n+     we can't provide a decent location here.  */\n+  tree decl = build_decl (BUILTINS_LOCATION, FIELD_DECL,\n+\t\t\t  get_identifier (field_name), field_type);\n+  DECL_FIELD_CONTEXT (decl) = record_or_union_type;\n+\n+  if (TREE_CODE (field_type) == INTEGER_TYPE\n+      && TYPE_PRECISION (field_type) != bitsize)\n+    {\n+      DECL_BIT_FIELD_TYPE (decl) = field_type;\n+      TREE_TYPE (decl)\n+\t= c_build_bitfield_integer_type (bitsize, TYPE_UNSIGNED (field_type));\n+    }\n+\n+  DECL_MODE (decl) = TYPE_MODE (TREE_TYPE (decl));\n+\n+  // There's no way to recover this from DWARF.\n+  SET_DECL_OFFSET_ALIGN (decl, TYPE_PRECISION (pointer_sized_int_node));\n+\n+  tree pos = bitsize_int (bitpos);\n+  pos_from_bit (&DECL_FIELD_OFFSET (decl), &DECL_FIELD_BIT_OFFSET (decl),\n+\t\tDECL_OFFSET_ALIGN (decl), pos);\n+\n+  DECL_SIZE (decl) = bitsize_int (bitsize);\n+  DECL_SIZE_UNIT (decl) = size_int ((bitsize + BITS_PER_UNIT - 1)\n+\t\t\t\t    / BITS_PER_UNIT);\n+\n+  DECL_CHAIN (decl) = TYPE_FIELDS (record_or_union_type);\n+  TYPE_FIELDS (record_or_union_type) = decl;\n+\n+  return 1;\n+}\n+\n+int\n+plugin_finish_record_or_union (cc1_plugin::connection *,\n+\t\t\t       gcc_type record_or_union_type_in,\n+\t\t\t       unsigned long size_in_bytes)\n+{\n+  tree record_or_union_type = convert_in (record_or_union_type_in);\n+\n+  gcc_assert (TREE_CODE (record_or_union_type) == RECORD_TYPE\n+\t      || TREE_CODE (record_or_union_type) == UNION_TYPE);\n+\n+  /* We built the field list in reverse order, so fix it now.  */\n+  TYPE_FIELDS (record_or_union_type)\n+    = nreverse (TYPE_FIELDS (record_or_union_type));\n+\n+  if (TREE_CODE (record_or_union_type) == UNION_TYPE)\n+    {\n+      /* Unions can just be handled by the generic code.  */\n+      layout_type (record_or_union_type);\n+    }\n+  else\n+    {\n+      // FIXME there's no way to get this from DWARF,\n+      // or even, it seems, a particularly good way to deduce it.\n+      TYPE_ALIGN (record_or_union_type)\n+\t= TYPE_PRECISION (pointer_sized_int_node);\n+\n+      TYPE_SIZE (record_or_union_type) = bitsize_int (size_in_bytes\n+\t\t\t\t\t\t      * BITS_PER_UNIT);\n+      TYPE_SIZE_UNIT (record_or_union_type) = size_int (size_in_bytes);\n+\n+      compute_record_mode (record_or_union_type);\n+      finish_bitfield_layout (record_or_union_type);\n+      // FIXME we have no idea about TYPE_PACKED\n+    }\n+\n+  return 1;\n+}\n+\n+gcc_type\n+plugin_build_enum_type (cc1_plugin::connection *self,\n+\t\t\tgcc_type underlying_int_type_in)\n+{\n+  tree underlying_int_type = convert_in (underlying_int_type_in);\n+\n+  if (underlying_int_type == error_mark_node)\n+    return convert_out (error_mark_node);\n+\n+  tree result = make_node (ENUMERAL_TYPE);\n+\n+  TYPE_PRECISION (result) = TYPE_PRECISION (underlying_int_type);\n+  TYPE_UNSIGNED (result) = TYPE_UNSIGNED (underlying_int_type);\n+\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  return convert_out (ctx->preserve (result));\n+}\n+\n+int\n+plugin_build_add_enum_constant (cc1_plugin::connection *,\n+\t\t\t\tgcc_type enum_type_in,\n+\t\t\t\tconst char *name,\n+\t\t\t\tunsigned long value)\n+{\n+  tree cst, decl, cons;\n+  tree enum_type = convert_in (enum_type_in);\n+\n+  gcc_assert (TREE_CODE (enum_type) == ENUMERAL_TYPE);\n+\n+  cst = build_int_cst (enum_type, value);\n+  /* Note that gdb does not preserve the location of enum constants,\n+     so we can't provide a decent location here.  */\n+  decl = build_decl (BUILTINS_LOCATION, CONST_DECL,\n+\t\t     get_identifier (name), enum_type);\n+  DECL_INITIAL (decl) = cst;\n+  pushdecl_safe (decl);\n+\n+  cons = tree_cons (DECL_NAME (decl), cst, TYPE_VALUES (enum_type));\n+  TYPE_VALUES (enum_type) = cons;\n+\n+  return 1;\n+}\n+\n+int\n+plugin_finish_enum_type (cc1_plugin::connection *,\n+\t\t\t gcc_type enum_type_in)\n+{\n+  tree enum_type = convert_in (enum_type_in);\n+  tree minnode, maxnode, iter;\n+\n+  iter = TYPE_VALUES (enum_type);\n+  minnode = maxnode = TREE_VALUE (iter);\n+  for (iter = TREE_CHAIN (iter);\n+       iter != NULL_TREE;\n+       iter = TREE_CHAIN (iter))\n+    {\n+      tree value = TREE_VALUE (iter);\n+      if (tree_int_cst_lt (maxnode, value))\n+\tmaxnode = value;\n+      if (tree_int_cst_lt (value, minnode))\n+\tminnode = value;\n+    }\n+  TYPE_MIN_VALUE (enum_type) = minnode;\n+  TYPE_MAX_VALUE (enum_type) = maxnode;\n+\n+  layout_type (enum_type);\n+\n+  return 1;\n+}\n+\n+gcc_type\n+plugin_build_function_type (cc1_plugin::connection *self,\n+\t\t\t    gcc_type return_type_in,\n+\t\t\t    const struct gcc_type_array *argument_types_in,\n+\t\t\t    int is_varargs)\n+{\n+  tree *argument_types;\n+  tree return_type = convert_in (return_type_in);\n+  tree result;\n+\n+  argument_types = new tree[argument_types_in->n_elements];\n+  for (int i = 0; i < argument_types_in->n_elements; ++i)\n+    argument_types[i] = convert_in (argument_types_in->elements[i]);\n+\n+  if (is_varargs)\n+    result = build_varargs_function_type_array (return_type,\n+\t\t\t\t\t\targument_types_in->n_elements,\n+\t\t\t\t\t\targument_types);\n+  else\n+    result = build_function_type_array (return_type,\n+\t\t\t\t\targument_types_in->n_elements,\n+\t\t\t\t\targument_types);\n+\n+  delete[] argument_types;\n+\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  return convert_out (ctx->preserve (result));\n+}\n+\n+gcc_type\n+plugin_int_type (cc1_plugin::connection *self,\n+\t\t int is_unsigned, unsigned long size_in_bytes)\n+{\n+  tree result = c_common_type_for_size (BITS_PER_UNIT * size_in_bytes,\n+\t\t\t\t\tis_unsigned);\n+  if (result == NULL_TREE)\n+    result = error_mark_node;\n+  else\n+    {\n+      plugin_context *ctx = static_cast<plugin_context *> (self);\n+      ctx->preserve (result);\n+    }\n+  return convert_out (result);\n+}\n+\n+gcc_type\n+plugin_float_type (cc1_plugin::connection *,\n+\t\t   unsigned long size_in_bytes)\n+{\n+  if (BITS_PER_UNIT * size_in_bytes == TYPE_PRECISION (float_type_node))\n+    return convert_out (float_type_node);\n+  if (BITS_PER_UNIT * size_in_bytes == TYPE_PRECISION (double_type_node))\n+    return convert_out (double_type_node);\n+  if (BITS_PER_UNIT * size_in_bytes == TYPE_PRECISION (long_double_type_node))\n+    return convert_out (long_double_type_node);\n+  return convert_out (error_mark_node);\n+}\n+\n+gcc_type\n+plugin_void_type (cc1_plugin::connection *)\n+{\n+  return convert_out (void_type_node);\n+}\n+\n+gcc_type\n+plugin_bool_type (cc1_plugin::connection *)\n+{\n+  return convert_out (boolean_type_node);\n+}\n+\n+gcc_type\n+plugin_build_array_type (cc1_plugin::connection *self,\n+\t\t\t gcc_type element_type_in, int num_elements)\n+{\n+  tree element_type = convert_in (element_type_in);\n+  tree result;\n+\n+  if (num_elements == -1)\n+    result = build_array_type (element_type, NULL_TREE);\n+  else\n+    result = build_array_type_nelts (element_type, num_elements);\n+\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  return convert_out (ctx->preserve (result));\n+}\n+\n+gcc_type\n+plugin_build_vla_array_type (cc1_plugin::connection *self,\n+\t\t\t     gcc_type element_type_in,\n+\t\t\t     const char *upper_bound_name)\n+{\n+  tree element_type = convert_in (element_type_in);\n+  tree upper_bound = lookup_name (get_identifier (upper_bound_name));\n+  tree range = build_index_type (upper_bound);\n+\n+  tree result = build_array_type (element_type, range);\n+  C_TYPE_VARIABLE_SIZE (result) = 1;\n+\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  return convert_out (ctx->preserve (result));\n+}\n+\n+gcc_type\n+plugin_build_qualified_type (cc1_plugin::connection *,\n+\t\t\t     gcc_type unqualified_type_in,\n+\t\t\t     enum gcc_qualifiers qualifiers)\n+{\n+  tree unqualified_type = convert_in (unqualified_type_in);\n+  int quals = 0;\n+\n+  if ((qualifiers & GCC_QUALIFIER_CONST) != 0)\n+    quals |= TYPE_QUAL_CONST;\n+  if ((qualifiers & GCC_QUALIFIER_VOLATILE) != 0)\n+    quals |= TYPE_QUAL_VOLATILE;\n+  if ((qualifiers & GCC_QUALIFIER_RESTRICT) != 0)\n+    quals |= TYPE_QUAL_RESTRICT;\n+\n+  return convert_out (build_qualified_type (unqualified_type, quals));\n+}\n+\n+gcc_type\n+plugin_build_complex_type (cc1_plugin::connection *self,\n+\t\t\t   gcc_type base_type)\n+{\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  return convert_out (ctx->preserve (build_complex_type (convert_in (base_type))));\n+}\n+\n+gcc_type\n+plugin_build_vector_type (cc1_plugin::connection *self,\n+\t\t\t  gcc_type base_type, int nunits)\n+{\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  return convert_out (ctx->preserve (build_vector_type (convert_in (base_type),\n+\t\t\t\t\t\t\tnunits)));\n+}\n+\n+int\n+plugin_build_constant (cc1_plugin::connection *self, gcc_type type_in,\n+\t\t       const char *name, unsigned long value,\n+\t\t       const char *filename, unsigned int line_number)\n+{\n+  plugin_context *ctx = static_cast<plugin_context *> (self);\n+  tree cst, decl;\n+  tree type = convert_in (type_in);\n+\n+  cst = build_int_cst (type, value);\n+  decl = build_decl (ctx->get_source_location (filename, line_number),\n+\t\t     CONST_DECL, get_identifier (name), type);\n+  DECL_INITIAL (decl) = cst;\n+  pushdecl_safe (decl);\n+\n+  return 1;\n+}\n+\n+gcc_type\n+plugin_error (cc1_plugin::connection *,\n+\t      const char *message)\n+{\n+  error (\"%s\", message);\n+  return convert_out (error_mark_node);\n+}\n+\n+\f\n+\n+// Perform GC marking.\n+\n+static void\n+gc_mark (void *, void *)\n+{\n+  if (current_context != NULL)\n+    current_context->mark ();\n+}\n+\n+#ifdef __GNUC__\n+#pragma GCC visibility push(default)\n+#endif\n+\n+int\n+plugin_init (struct plugin_name_args *plugin_info,\n+\t     struct plugin_gcc_version *)\n+{\n+  long fd = -1;\n+  for (int i = 0; i < plugin_info->argc; ++i)\n+    {\n+      if (strcmp (plugin_info->argv[i].key, \"fd\") == 0)\n+\t{\n+\t  char *tail;\n+\t  errno = 0;\n+\t  fd = strtol (plugin_info->argv[i].value, &tail, 0);\n+\t  if (*tail != '\\0' || errno != 0)\n+\t    fatal_error (\"%s: invalid file descriptor argument to plugin\",\n+\t\t\t plugin_info->base_name);\n+\t  break;\n+\t}\n+    }\n+  if (fd == -1)\n+    fatal_error (\"%s: required plugin argument %<fd%> is missing\",\n+\t\t plugin_info->base_name);\n+\n+  current_context = new plugin_context (fd);\n+\n+  // Handshake.\n+  cc1_plugin::protocol_int version;\n+  if (!current_context->require ('H')\n+      || ! ::cc1_plugin::unmarshall (current_context, &version))\n+    fatal_error (\"%s: handshake failed\", plugin_info->base_name);\n+  if (version != GCC_C_FE_VERSION_0)\n+    fatal_error (\"%s: unknown version in handshake\", plugin_info->base_name);\n+\n+  register_callback (plugin_info->base_name, PLUGIN_PRAGMAS,\n+\t\t     plugin_init_extra_pragmas, NULL);\n+  register_callback (plugin_info->base_name, PLUGIN_PRE_GENERICIZE,\n+\t\t     rewrite_decls_to_addresses, NULL);\n+  register_callback (plugin_info->base_name, PLUGIN_GGC_MARKING,\n+\t\t     gc_mark, NULL);\n+\n+  lang_hooks.print_error_function = plugin_print_error_function;\n+\n+#define GCC_METHOD0(R, N)\t\t\t\\\n+  {\t\t\t\t\t\t\\\n+    cc1_plugin::callback_ftype *fun\t\t\\\n+      = cc1_plugin::callback<R, plugin_ ## N>;\t\\\n+    current_context->add_callback (# N, fun);\t\\\n+  }\n+#define GCC_METHOD1(R, N, A)\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\\\n+    cc1_plugin::callback_ftype *fun\t\t\t\\\n+      = cc1_plugin::callback<R, A, plugin_ ## N>;\t\\\n+    current_context->add_callback (# N, fun);\t\t\\\n+  }\n+#define GCC_METHOD2(R, N, A, B)\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\\\n+    cc1_plugin::callback_ftype *fun\t\t\t\\\n+      = cc1_plugin::callback<R, A, B, plugin_ ## N>;\t\\\n+    current_context->add_callback (# N, fun);\t\t\\\n+  }\n+#define GCC_METHOD3(R, N, A, B, C)\t\t\t\\\n+  {\t\t\t\t\t\t\t\\\n+    cc1_plugin::callback_ftype *fun\t\t\t\\\n+      = cc1_plugin::callback<R, A, B, C, plugin_ ## N>;\t\\\n+    current_context->add_callback (# N, fun);\t\t\\\n+  }\n+#define GCC_METHOD4(R, N, A, B, C, D)\t\t\\\n+  {\t\t\t\t\t\t\\\n+    cc1_plugin::callback_ftype *fun\t\t\\\n+      = cc1_plugin::callback<R, A, B, C, D,\t\\\n+\t\t\t     plugin_ ## N>;\t\\\n+    current_context->add_callback (# N, fun);\t\\\n+  }\n+#define GCC_METHOD5(R, N, A, B, C, D, E)\t\\\n+  {\t\t\t\t\t\t\\\n+    cc1_plugin::callback_ftype *fun\t\t\\\n+      = cc1_plugin::callback<R, A, B, C, D, E,\t\\\n+\t\t\t     plugin_ ## N>;\t\\\n+    current_context->add_callback (# N, fun);\t\\\n+  }\n+#define GCC_METHOD7(R, N, A, B, C, D, E, F, G)\t\t\\\n+  {\t\t\t\t\t\t\t\\\n+    cc1_plugin::callback_ftype *fun\t\t\t\\\n+      = cc1_plugin::callback<R, A, B, C, D, E, F, G,\t\\\n+\t\t\t     plugin_ ## N>;\t\t\\\n+    current_context->add_callback (# N, fun);\t\t\\\n+  }\n+\n+#include \"gcc-c-fe.def\"\n+\n+#undef GCC_METHOD0\n+#undef GCC_METHOD1\n+#undef GCC_METHOD2\n+#undef GCC_METHOD3\n+#undef GCC_METHOD4\n+#undef GCC_METHOD5\n+#undef GCC_METHOD7\n+\n+  return 0;\n+}"}, {"sha": "58758d3d39ece3697f49957fbde5ed1d7737b990", "filename": "libcc1/rpc.hh", "status": "added", "additions": 486, "deletions": 0, "changes": 486, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Frpc.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Frpc.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Frpc.hh?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,486 @@\n+/* RPC call and callback templates\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef CC1_PLUGIN_RPC_HH\n+#define CC1_PLUGIN_RPC_HH\n+\n+#include \"status.hh\"\n+#include \"marshall.hh\"\n+#include \"connection.hh\"\n+\n+namespace cc1_plugin\n+{\n+  // The plugin API may contain some \"const\" method parameters.\n+  // However, when unmarshalling we cannot unmarshall into a const\n+  // object; and furthermore we want to be able to deallocate pointers\n+  // when finished with them.  This wrapper class lets us properly\n+  // remove the \"const\" and handle deallocation from pointer types.\n+\n+  template<typename T>\n+  class argument_wrapper\n+  {\n+  public:\n+\n+    argument_wrapper () { }\n+    ~argument_wrapper () { }\n+\n+    operator T () const { return m_object; }\n+\n+    status unmarshall (connection *conn)\n+    {\n+      return ::cc1_plugin::unmarshall (conn, &m_object);\n+    }\n+\n+  private:\n+\n+    T m_object;\n+\n+    // No copying or assignment allowed.\n+    argument_wrapper (const argument_wrapper &);\n+    argument_wrapper &operator= (const argument_wrapper &);\n+  };\n+\n+  // Specialization for any kind of pointer.  This is declared but not\n+  // defined to avoid bugs if a new pointer type is introduced into\n+  // the API.  Instead you will just get a compilation error.\n+  template<typename T>\n+  class argument_wrapper<const T *>;\n+\n+  // Specialization for string types.\n+  template<>\n+  class argument_wrapper<const char *>\n+  {\n+  public:\n+    argument_wrapper () : m_object (NULL) { }\n+    ~argument_wrapper ()\n+    {\n+      delete[] m_object;\n+    }\n+\n+    operator const char * () const\n+    {\n+      return m_object;\n+    }\n+\n+    status unmarshall (connection *conn)\n+    {\n+      return ::cc1_plugin::unmarshall (conn, &m_object);\n+    }\n+\n+  private:\n+\n+    char *m_object;\n+\n+    // No copying or assignment allowed.\n+    argument_wrapper (const argument_wrapper &);\n+    argument_wrapper &operator= (const argument_wrapper &);\n+  };\n+\n+  // Specialization for gcc_type_array.\n+  template<>\n+  class argument_wrapper<const gcc_type_array *>\n+  {\n+  public:\n+    argument_wrapper () : m_object (NULL) { }\n+    ~argument_wrapper ()\n+    {\n+      // It would be nicer if gcc_type_array could have a destructor.\n+      // But, it is in code shared with gdb and cannot.\n+      if (m_object != NULL)\n+\tdelete[] m_object->elements;\n+      delete m_object;\n+    }\n+\n+    operator const gcc_type_array * () const\n+    {\n+      return m_object;\n+    }\n+\n+    status unmarshall (connection *conn)\n+    {\n+      return ::cc1_plugin::unmarshall (conn, &m_object);\n+    }\n+\n+  private:\n+\n+    gcc_type_array *m_object;\n+\n+    // No copying or assignment allowed.\n+    argument_wrapper (const argument_wrapper &);\n+    argument_wrapper &operator= (const argument_wrapper &);\n+  };\n+\n+  // There are two kinds of template functions here: \"call\" and\n+  // \"callback\".  They are each repeated multiple times to handle\n+  // different numbers of arguments.  (This would be improved with\n+  // C++11, though applying a call is still tricky until C++14 can be\n+  // used.)\n+\n+  // The \"call\" template is used for making a remote procedure call.\n+  // It starts a query ('Q') packet, marshalls its arguments, waits\n+  // for a result, and finally reads and returns the result via an\n+  // \"out\" parameter.\n+\n+  // The \"callback\" template is used when receiving a remote procedure\n+  // call.  This template function is suitable for use with the\n+  // \"callbacks\" and \"connection\" classes.  It decodes incoming\n+  // arguments, passes them to the wrapped function, and finally\n+  // marshalls a reply packet.\n+\n+  template<typename R>\n+  status\n+  call (connection *conn, const char *method, R *result)\n+  {\n+    if (!conn->send ('Q'))\n+      return FAIL;\n+    if (!marshall (conn, method))\n+      return FAIL;\n+    if (!marshall (conn, 0))\n+      return FAIL;\n+    if (!conn->wait_for_result ())\n+      return FAIL;\n+    if (!unmarshall (conn, result))\n+      return FAIL;\n+    return OK;\n+  }\n+\n+  template<typename R, R (*func) (connection *)>\n+  status\n+  callback (connection *conn)\n+  {\n+    R result;\n+\n+    if (!unmarshall_check (conn, 0))\n+      return FAIL;\n+    result = func (conn);\n+    if (!conn->send ('R'))\n+      return FAIL;\n+    return marshall (conn, result);\n+  }\n+\n+  template<typename R, typename A>\n+  status\n+  call (connection *conn, const char *method, R *result, A arg)\n+  {\n+    if (!conn->send ('Q'))\n+      return FAIL;\n+    if (!marshall (conn, method))\n+      return FAIL;\n+    if (!marshall (conn, 1))\n+      return FAIL;\n+    if (!marshall (conn, arg))\n+      return FAIL;\n+    if (!conn->wait_for_result ())\n+      return FAIL;\n+    if (!unmarshall (conn, result))\n+      return FAIL;\n+    return OK;\n+  }\n+\n+  template<typename R, typename A, R (*func) (connection *, A)>\n+  status\n+  callback (connection *conn)\n+  {\n+    argument_wrapper<A> arg;\n+    R result;\n+\n+    if (!unmarshall_check (conn, 1))\n+      return FAIL;\n+    if (!arg.unmarshall (conn))\n+      return FAIL;\n+    result = func (conn, arg);\n+    if (!conn->send ('R'))\n+      return FAIL;\n+    return marshall (conn, result);\n+  }\n+\n+  template<typename R, typename A1, typename A2>\n+  status\n+  call (connection *conn, const char *method, R *result, A1 arg1, A2 arg2)\n+  {\n+    if (!conn->send ('Q'))\n+      return FAIL;\n+    if (!marshall (conn, method))\n+      return FAIL;\n+    if (!marshall (conn, 2))\n+      return FAIL;\n+    if (!marshall (conn, arg1))\n+      return FAIL;\n+    if (!marshall (conn, arg2))\n+      return FAIL;\n+    if (!conn->wait_for_result ())\n+      return FAIL;\n+    if (!unmarshall (conn, result))\n+      return FAIL;\n+    return OK;\n+  }\n+\n+  template<typename R, typename A1, typename A2, R (*func) (connection *,\n+\t\t\t\t\t\t\t    A1, A2)>\n+  status\n+  callback (connection *conn)\n+  {\n+    argument_wrapper<A1> arg1;\n+    argument_wrapper<A2> arg2;\n+    R result;\n+\n+    if (!unmarshall_check (conn, 2))\n+      return FAIL;\n+    if (!arg1.unmarshall (conn))\n+      return FAIL;\n+    if (!arg2.unmarshall (conn))\n+      return FAIL;\n+    result = func (conn, arg1, arg2);\n+    if (!conn->send ('R'))\n+      return FAIL;\n+    return marshall (conn, result);\n+  }\n+\n+  template<typename R, typename A1, typename A2, typename A3>\n+  status\n+  call (connection *conn, const char *method, R *result, A1 arg1, A2 arg2,\n+\tA3 arg3)\n+  {\n+    if (!conn->send ('Q'))\n+      return FAIL;\n+    if (!marshall (conn, method))\n+      return FAIL;\n+    if (!marshall (conn, 3))\n+      return FAIL;\n+    if (!marshall (conn, arg1))\n+      return FAIL;\n+    if (!marshall (conn, arg2))\n+      return FAIL;\n+    if (!marshall (conn, arg3))\n+      return FAIL;\n+    if (!conn->wait_for_result ())\n+      return FAIL;\n+    if (!unmarshall (conn, result))\n+      return FAIL;\n+    return OK;\n+  }\n+\n+  template<typename R, typename A1, typename A2, typename A3,\n+\t   R (*func) (connection *, A1, A2, A3)>\n+  status\n+  callback (connection *conn)\n+  {\n+    argument_wrapper<A1> arg1;\n+    argument_wrapper<A2> arg2;\n+    argument_wrapper<A3> arg3;\n+    R result;\n+\n+    if (!unmarshall_check (conn, 3))\n+      return FAIL;\n+    if (!arg1.unmarshall (conn))\n+      return FAIL;\n+    if (!arg2.unmarshall (conn))\n+      return FAIL;\n+    if (!arg3.unmarshall (conn))\n+      return FAIL;\n+    result = func (conn, arg1, arg2, arg3);\n+    if (!conn->send ('R'))\n+      return FAIL;\n+    return marshall (conn, result);\n+  }\n+\n+  template<typename R, typename A1, typename A2, typename A3, typename A4>\n+  status\n+  call (connection *conn, const char *method, R *result, A1 arg1, A2 arg2,\n+\tA3 arg3, A4 arg4)\n+  {\n+    if (!conn->send ('Q'))\n+      return FAIL;\n+    if (!marshall (conn, method))\n+      return FAIL;\n+    if (!marshall (conn, 4))\n+      return FAIL;\n+    if (!marshall (conn, arg1))\n+      return FAIL;\n+    if (!marshall (conn, arg2))\n+      return FAIL;\n+    if (!marshall (conn, arg3))\n+      return FAIL;\n+    if (!marshall (conn, arg4))\n+      return FAIL;\n+    if (!conn->wait_for_result ())\n+      return FAIL;\n+    if (!unmarshall (conn, result))\n+      return FAIL;\n+    return OK;\n+  }\n+\n+  template<typename R, typename A1, typename A2, typename A3, typename A4,\n+\t   R (*func) (connection *, A1, A2, A3, A4)>\n+  status\n+  callback (connection *conn)\n+  {\n+    argument_wrapper<A1> arg1;\n+    argument_wrapper<A2> arg2;\n+    argument_wrapper<A3> arg3;\n+    argument_wrapper<A4> arg4;\n+    R result;\n+\n+    if (!unmarshall_check (conn, 4))\n+      return FAIL;\n+    if (!arg1.unmarshall (conn))\n+      return FAIL;\n+    if (!arg2.unmarshall (conn))\n+      return FAIL;\n+    if (!arg3.unmarshall (conn))\n+      return FAIL;\n+    if (!arg4.unmarshall (conn))\n+      return FAIL;\n+    result = func (conn, arg1, arg2, arg3, arg4);\n+    if (!conn->send ('R'))\n+      return FAIL;\n+    return marshall (conn, result);\n+  }\n+\n+  template<typename R, typename A1, typename A2, typename A3, typename A4,\n+\t   typename A5>\n+  status\n+  call (connection *conn, const char *method, R *result, A1 arg1, A2 arg2,\n+\tA3 arg3, A4 arg4, A5 arg5)\n+  {\n+    if (!conn->send ('Q'))\n+      return FAIL;\n+    if (!marshall (conn, method))\n+      return FAIL;\n+    if (!marshall (conn, 5))\n+      return FAIL;\n+    if (!marshall (conn, arg1))\n+      return FAIL;\n+    if (!marshall (conn, arg2))\n+      return FAIL;\n+    if (!marshall (conn, arg3))\n+      return FAIL;\n+    if (!marshall (conn, arg4))\n+      return FAIL;\n+    if (!marshall (conn, arg5))\n+      return FAIL;\n+    if (!conn->wait_for_result ())\n+      return FAIL;\n+    if (!unmarshall (conn, result))\n+      return FAIL;\n+    return OK;\n+  }\n+\n+  template<typename R, typename A1, typename A2, typename A3, typename A4,\n+\t   typename A5, R (*func) (connection *, A1, A2, A3, A4, A5)>\n+  status\n+  callback (connection *conn)\n+  {\n+    argument_wrapper<A1> arg1;\n+    argument_wrapper<A2> arg2;\n+    argument_wrapper<A3> arg3;\n+    argument_wrapper<A4> arg4;\n+    argument_wrapper<A5> arg5;\n+    R result;\n+\n+    if (!unmarshall_check (conn, 5))\n+      return FAIL;\n+    if (!arg1.unmarshall (conn))\n+      return FAIL;\n+    if (!arg2.unmarshall (conn))\n+      return FAIL;\n+    if (!arg3.unmarshall (conn))\n+      return FAIL;\n+    if (!arg4.unmarshall (conn))\n+      return FAIL;\n+    if (!arg5.unmarshall (conn))\n+      return FAIL;\n+    result = func (conn, arg1, arg2, arg3, arg4, arg5);\n+    if (!conn->send ('R'))\n+      return FAIL;\n+    return marshall (conn, result);\n+  }\n+\n+  template<typename R, typename A1, typename A2, typename A3, typename A4,\n+\t   typename A5, typename A6, typename A7>\n+  status\n+  call (connection *conn, const char *method, R *result, A1 arg1, A2 arg2,\n+\tA3 arg3, A4 arg4, A5 arg5, A6 arg6, A7 arg7)\n+  {\n+    if (!conn->send ('Q'))\n+      return FAIL;\n+    if (!marshall (conn, method))\n+      return FAIL;\n+    if (!marshall (conn, 7))\n+      return FAIL;\n+    if (!marshall (conn, arg1))\n+      return FAIL;\n+    if (!marshall (conn, arg2))\n+      return FAIL;\n+    if (!marshall (conn, arg3))\n+      return FAIL;\n+    if (!marshall (conn, arg4))\n+      return FAIL;\n+    if (!marshall (conn, arg5))\n+      return FAIL;\n+    if (!marshall (conn, arg6))\n+      return FAIL;\n+    if (!marshall (conn, arg7))\n+      return FAIL;\n+    if (!conn->wait_for_result ())\n+      return FAIL;\n+    if (!unmarshall (conn, result))\n+      return FAIL;\n+    return OK;\n+  }\n+\n+  template<typename R, typename A1, typename A2, typename A3, typename A4,\n+\t   typename A5, typename A6, typename A7,\n+\t   R (*func) (connection *, A1, A2, A3, A4, A5, A6, A7)>\n+  status\n+  callback (connection *conn)\n+  {\n+    argument_wrapper<A1> arg1;\n+    argument_wrapper<A2> arg2;\n+    argument_wrapper<A3> arg3;\n+    argument_wrapper<A4> arg4;\n+    argument_wrapper<A5> arg5;\n+    argument_wrapper<A6> arg6;\n+    argument_wrapper<A7> arg7;\n+    R result;\n+\n+    if (!unmarshall_check (conn, 7))\n+      return FAIL;\n+    if (!arg1.unmarshall (conn))\n+      return FAIL;\n+    if (!arg2.unmarshall (conn))\n+      return FAIL;\n+    if (!arg3.unmarshall (conn))\n+      return FAIL;\n+    if (!arg4.unmarshall (conn))\n+      return FAIL;\n+    if (!arg5.unmarshall (conn))\n+      return FAIL;\n+    if (!arg6.unmarshall (conn))\n+      return FAIL;\n+    if (!arg7.unmarshall (conn))\n+      return FAIL;\n+    result = func (conn, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\n+    if (!conn->send ('R'))\n+      return FAIL;\n+    return marshall (conn, result);\n+  }\n+};\n+\n+#endif // CC1_PLUGIN_RPC_HH"}, {"sha": "764c7ffd0b5214847a1cea121a2f9de0e137f707", "filename": "libcc1/status.hh", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fstatus.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc8de034a1f79861fed57b231813a5c5c48a130/libcc1%2Fstatus.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fstatus.hh?ref=ddc8de034a1f79861fed57b231813a5c5c48a130", "patch": "@@ -0,0 +1,33 @@\n+/* status type definition\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef CC1_PLUGIN_STATUS_HH\n+#define CC1_PLUGIN_STATUS_HH\n+\n+namespace cc1_plugin\n+{\n+  // The status returned by various connection functions.\n+  enum status\n+  {\n+    FAIL = 0,\n+    OK = 1\n+  };\n+}\n+\n+#endif // CC1_PLUGIN_STATUS_HH"}]}