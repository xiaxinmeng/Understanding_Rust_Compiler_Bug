{"sha": "b229c5186093fa6603030ae83d5fe640ef7051a4", "node_id": "C_kwDOANBUbNoAKGIyMjljNTE4NjA5M2ZhNjYwMzAzMGFlODNkNWZlNjQwZWY3MDUxYTQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-25T21:29:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-02T16:30:51Z"}, "message": "libstdc++: Fix link failure in _OutputIteratorConcept\n\nThe C++98-style concept check for output iterators causes a link\nfailure on mingw-w64, because the __val() member function isn't defined.\nChange it to use a function pointer instead. That pointer is never set\nto anything meaningful, but it doesn't matter as the __constraints()\nfunction only has to be instantiated, it's never called.\n\nWe could refactor all of these to use unevaluated contexts (e.g. sizeof\nof __decltype) so that we only check the expressions are well-formed,\nwithout any codegen at all. Any improvements to these are very low\npriority though.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/boost_concept_check.h (_OutputIteratorConcept):\n\tChange member function to data member of function pointer type.", "tree": {"sha": "5a439dfa81066020a836bb651ff046df7a0b9d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a439dfa81066020a836bb651ff046df7a0b9d61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b229c5186093fa6603030ae83d5fe640ef7051a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b229c5186093fa6603030ae83d5fe640ef7051a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b229c5186093fa6603030ae83d5fe640ef7051a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b229c5186093fa6603030ae83d5fe640ef7051a4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a92e46c0e9a75cd14125493b8826d3e33dd0f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a92e46c0e9a75cd14125493b8826d3e33dd0f67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a92e46c0e9a75cd14125493b8826d3e33dd0f67"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "3d884eb440ff0d56f16be707f4dc6ce1295caa34", "filename": "libstdc++-v3/include/bits/boost_concept_check.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b229c5186093fa6603030ae83d5fe640ef7051a4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fboost_concept_check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b229c5186093fa6603030ae83d5fe640ef7051a4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fboost_concept_check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fboost_concept_check.h?ref=b229c5186093fa6603030ae83d5fe640ef7051a4", "patch": "@@ -483,7 +483,9 @@ struct _Aux_require_same<_Tp,_Tp> { typedef _Tp _Type; };\n       *__i++ = __val();                 // require postincrement and assignment\n     }\n     _Tp __i;\n-    _ValueT __val() const;\n+    // Use a function pointer here so no definition of the function needed.\n+    // Just need something that returns a _ValueT (which might be a reference).\n+    _ValueT (*__val)();\n   };\n \n   template<typename _Tp>"}]}