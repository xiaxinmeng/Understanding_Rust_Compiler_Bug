{"sha": "acb14262e18e8338c014926cdbcd034832f3561e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNiMTQyNjJlMThlODMzOGMwMTQ5MjZjZGJjZDAzNDgzMmYzNTYxZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-04-20T14:25:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-04-20T14:25:11Z"}, "message": "ggc-page.c (ggc_allocated_p): Rename to ...\n\n2017-04-20  Richard Biener  <rguenther@suse.de>\n\n\t* ggc-page.c (ggc_allocated_p): Rename to ...\n\t(safe_lookup_page_table_entry): ... this and return the lookup\n\tresult.\n\t(gt_ggc_m_S): Use safe_lookup_page_table_entry.\n\nFrom-SVN: r247025", "tree": {"sha": "a08e3113a16fe64998d1432712e342830b1515a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a08e3113a16fe64998d1432712e342830b1515a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acb14262e18e8338c014926cdbcd034832f3561e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb14262e18e8338c014926cdbcd034832f3561e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acb14262e18e8338c014926cdbcd034832f3561e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb14262e18e8338c014926cdbcd034832f3561e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ee1b0a013d0bbfc70a8165a52cf64d3157c1e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee1b0a013d0bbfc70a8165a52cf64d3157c1e96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee1b0a013d0bbfc70a8165a52cf64d3157c1e96"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "fc1260739e080ed19ea77a4385ec1479bb2e9477", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb14262e18e8338c014926cdbcd034832f3561e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb14262e18e8338c014926cdbcd034832f3561e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acb14262e18e8338c014926cdbcd034832f3561e", "patch": "@@ -1,3 +1,10 @@\n+2017-04-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* ggc-page.c (ggc_allocated_p): Rename to ...\n+\t(safe_lookup_page_table_entry): ... this and return the lookup\n+\tresult.\n+\t(gt_ggc_m_S): Use safe_lookup_page_table_entry.\n+\n 2017-04-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80453"}, {"sha": "dd655608309618de5835ebf2d49ca4ef7ec8f041", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb14262e18e8338c014926cdbcd034832f3561e/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb14262e18e8338c014926cdbcd034832f3561e/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=acb14262e18e8338c014926cdbcd034832f3561e", "patch": "@@ -522,7 +522,6 @@ static bool in_gc = false;\n /* Initial guess as to how many page table entries we might need.  */\n #define INITIAL_PTE_COUNT 128\n \f\n-static int ggc_allocated_p (const void *);\n static page_entry *lookup_page_table_entry (const void *);\n static void set_page_table_entry (void *, page_entry *);\n #ifdef USING_MMAP\n@@ -587,10 +586,11 @@ push_by_depth (page_entry *p, unsigned long *s)\n #define save_in_use_p(__p) \\\n   (save_in_use_p_i (__p->index_by_depth))\n \n-/* Returns nonzero if P was allocated in GC'able memory.  */\n+/* Traverse the page table and find the entry for a page.\n+   If the object wasn't allocated in GC return NULL.  */\n \n-static inline int\n-ggc_allocated_p (const void *p)\n+static inline page_entry *\n+safe_lookup_page_table_entry (const void *p)\n {\n   page_entry ***base;\n   size_t L1, L2;\n@@ -603,7 +603,7 @@ ggc_allocated_p (const void *p)\n   while (1)\n     {\n       if (table == NULL)\n-\treturn 0;\n+\treturn NULL;\n       if (table->high_bits == high_bits)\n \tbreak;\n       table = table->next;\n@@ -614,8 +614,10 @@ ggc_allocated_p (const void *p)\n   /* Extract the level 1 and 2 indices.  */\n   L1 = LOOKUP_L1 (p);\n   L2 = LOOKUP_L2 (p);\n+  if (! base[L1])\n+    return NULL;\n \n-  return base[L1] && base[L1][L2];\n+  return base[L1][L2];\n }\n \n /* Traverse the page table and find the entry for a page.\n@@ -1455,12 +1457,14 @@ gt_ggc_m_S (const void *p)\n   unsigned long mask;\n   unsigned long offset;\n \n-  if (!p || !ggc_allocated_p (p))\n+  if (!p)\n     return;\n \n-  /* Look up the page on which the object is alloced.  .  */\n-  entry = lookup_page_table_entry (p);\n-  gcc_assert (entry);\n+  /* Look up the page on which the object is alloced.  If it was not\n+     GC allocated, gracefully bail out.  */\n+  entry = safe_lookup_page_table_entry (p);\n+  if (!entry)\n+    return;\n \n   /* Calculate the index of the object on the page; this is its bit\n      position in the in_use_p bitmap.  Note that because a char* might"}]}