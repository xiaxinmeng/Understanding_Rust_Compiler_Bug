{"sha": "15c193e2f5ce96026cc02828f4f91b1c9e832ea8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVjMTkzZTJmNWNlOTYwMjZjYzAyODI4ZjRmOTFiMWM5ZTgzMmVhOA==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2018-03-28T13:26:42Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-03-28T13:26:42Z"}, "message": "[NDS32] Adjust BRANCH_COST to prevent too much jump when compile with -Os.\n\ngcc/\n\t* config/nds32/nds32.h (BRANCH_COST): Adjust cost.\n\nFrom-SVN: r258921", "tree": {"sha": "34da37a95b5bd3589ac945e5d92cb8974a153a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34da37a95b5bd3589ac945e5d92cb8974a153a18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15c193e2f5ce96026cc02828f4f91b1c9e832ea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c193e2f5ce96026cc02828f4f91b1c9e832ea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c193e2f5ce96026cc02828f4f91b1c9e832ea8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c193e2f5ce96026cc02828f4f91b1c9e832ea8/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ee4f6f3ec4c51221a8fc44f98f5da4c95f779ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee4f6f3ec4c51221a8fc44f98f5da4c95f779ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee4f6f3ec4c51221a8fc44f98f5da4c95f779ae"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "f7f37cb0717f0d1bb58c9963c839d6d0ce401712", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c193e2f5ce96026cc02828f4f91b1c9e832ea8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c193e2f5ce96026cc02828f4f91b1c9e832ea8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15c193e2f5ce96026cc02828f4f91b1c9e832ea8", "patch": "@@ -1,3 +1,7 @@\n+2018-03-27  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.h (BRANCH_COST): Adjust cost.\n+\n 2018-03-27  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/84914"}, {"sha": "b12274ac25e8a8a2ff5802f4b05589259e958737", "filename": "gcc/config/nds32/nds32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c193e2f5ce96026cc02828f4f91b1c9e832ea8/gcc%2Fconfig%2Fnds32%2Fnds32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c193e2f5ce96026cc02828f4f91b1c9e832ea8/gcc%2Fconfig%2Fnds32%2Fnds32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.h?ref=15c193e2f5ce96026cc02828f4f91b1c9e832ea8", "patch": "@@ -865,7 +865,7 @@ enum reg_class\n /* A C expression for the cost of a branch instruction.\n    A value of 1 is the default;\n    other values are interpreted relative to that.  */\n-#define BRANCH_COST(speed_p, predictable_p) ((speed_p) ? 2 : 0)\n+#define BRANCH_COST(speed_p, predictable_p) ((speed_p) ? 2 : 1)\n \n /* Override BRANCH_COST heuristic which empirically produces worse\n    performance for removing short circuiting from the logical ops.  */"}]}