{"sha": "2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg2NmYyMWQxOTFiYjAwYzA4ZjNhM2MzYTEzYWY4YjhmMWE2OWJhNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-09T13:31:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-09T13:31:27Z"}, "message": "tree-ssa-loop-im.c (execute_sm): Do not force multi-threaded model if the ref is always written to.\n\n2017-06-09  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-loop-im.c (execute_sm): Do not force multi-threaded\n\tmodel if the ref is always written to.\n\nFrom-SVN: r249063", "tree": {"sha": "cd323d8176bfe332c019d14f9d5b04d1fe8be8f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd323d8176bfe332c019d14f9d5b04d1fe8be8f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4/comments", "author": null, "committer": null, "parents": [{"sha": "37b68a4389bd452e9b5aa03870f6b81e4f26b71c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37b68a4389bd452e9b5aa03870f6b81e4f26b71c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37b68a4389bd452e9b5aa03870f6b81e4f26b71c"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "9706455f5a24ee9f9f714a516bf635414f6fec54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4", "patch": "@@ -1,6 +1,12 @@\n+2017-06-09  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-im.c (execute_sm): Do not force multi-threaded\n+\tmodel if the ref is always written to.\n+\n 2017-06-09  Tamar Christina  <tamar.christina@arm.com>\n \n-\t* config/arm/arm.c (arm_rtx_costs_internal): Make sdiv more expensive than udiv.\n+\t* config/arm/arm.c (arm_rtx_costs_internal): Make sdiv more expensive\n+\tthan udiv.\n \n 2017-06-09  Tom de Vries  <tom@codesourcery.com>\n "}, {"sha": "e92eaa6e2d737b062aabf540c345ca254862d5a1", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=2866f21d191bb00c08f3a3c3a13af8b8f1a69ba4", "patch": "@@ -198,6 +198,7 @@ static bitmap_obstack lim_bitmap_obstack;\n static obstack mem_ref_obstack;\n \n static bool ref_indep_loop_p (struct loop *, im_mem_ref *, struct loop *);\n+static bool ref_always_accessed_p (struct loop *, im_mem_ref *, bool);\n \n /* Minimum cost of an expensive expression.  */\n #define LIM_EXPENSIVE ((unsigned) PARAM_VALUE (PARAM_LIM_EXPENSIVE))\n@@ -2025,7 +2026,8 @@ execute_sm (struct loop *loop, vec<edge> exits, im_mem_ref *ref)\n   for_each_index (&ref->mem.ref, force_move_till, &fmt_data);\n \n   if (bb_in_transaction (loop_preheader_edge (loop)->src)\n-      || !PARAM_VALUE (PARAM_ALLOW_STORE_DATA_RACES))\n+      || (! PARAM_VALUE (PARAM_ALLOW_STORE_DATA_RACES)\n+\t  && ! ref_always_accessed_p (loop, ref, true)))\n     multi_threaded_model_p = true;\n \n   if (multi_threaded_model_p)"}]}