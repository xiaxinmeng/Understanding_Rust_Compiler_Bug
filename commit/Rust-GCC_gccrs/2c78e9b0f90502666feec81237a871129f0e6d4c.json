{"sha": "2c78e9b0f90502666feec81237a871129f0e6d4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM3OGU5YjBmOTA1MDI2NjZmZWVjODEyMzdhODcxMTI5ZjBlNmQ0Yw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-08-30T19:20:57Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-08-30T19:20:57Z"}, "message": "re PR testsuite/23609 (all obj-c++ execute tests fails with the GNU runtime)\n\n2005-08-30  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR testsuite/23609\n        * lib/obj-c++.exp: Include target-libpath.exp.\n        (obj-c++_link_flags): Look for the GNU libobjc library\n        and set the library path to include it.\n        Don't manually set LD_LIBRARY_PATH (etc.) but call\n        set_ld_library_path_env_vars instead.\n        (obj-c++_target_compile): Don't set library path or\n        linker flags because they are already set correctly\n        in obj-c++_link_flags.\n\nFrom-SVN: r103646", "tree": {"sha": "728385dfa37697428d781cdfeab5b7fdf9828c35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/728385dfa37697428d781cdfeab5b7fdf9828c35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c78e9b0f90502666feec81237a871129f0e6d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c78e9b0f90502666feec81237a871129f0e6d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c78e9b0f90502666feec81237a871129f0e6d4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c78e9b0f90502666feec81237a871129f0e6d4c/comments", "author": null, "committer": null, "parents": [{"sha": "166206ce70f9c9ef4e4f418e958ea635b953cf1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/166206ce70f9c9ef4e4f418e958ea635b953cf1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/166206ce70f9c9ef4e4f418e958ea635b953cf1c"}], "stats": {"total": 60, "additions": 26, "deletions": 34}, "files": [{"sha": "ee019b98f0695ece7693d51fb8d295304b13599c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c78e9b0f90502666feec81237a871129f0e6d4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c78e9b0f90502666feec81237a871129f0e6d4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c78e9b0f90502666feec81237a871129f0e6d4c", "patch": "@@ -1,3 +1,15 @@\n+2005-08-30  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR testsuite/23609\n+\t* lib/obj-c++.exp: Include target-libpath.exp.\n+\t(obj-c++_link_flags): Look for the GNU libobjc library\n+\tand set the library path to include it.\n+\tDon't manually set LD_LIBRARY_PATH (etc.) but call\n+\tset_ld_library_path_env_vars instead.\n+\t(obj-c++_target_compile): Don't set library path or\n+\tlinker flags because they are already set correctly\n+\tin obj-c++_link_flags.\n+\n 2005-08-30  Josh Conner  <jconner@apple.com>\n \n \t* gcc.dg/builtin-stringop-chk-1.c: Add -mstructure-size-boundary=8"}, {"sha": "c58051821dc830c76893774fc7df843d675dd357", "filename": "gcc/testsuite/lib/obj-c++.exp", "status": "modified", "additions": 14, "deletions": 34, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c78e9b0f90502666feec81237a871129f0e6d4c/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c78e9b0f90502666feec81237a871129f0e6d4c/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B.exp?ref=2c78e9b0f90502666feec81237a871129f0e6d4c", "patch": "@@ -23,6 +23,7 @@\n #\n load_lib prune.exp\n load_lib gcc-defs.exp\n+load_lib target-libpath.exp\n \n #\n # OBJCXX_UNDER_TEST is the compiler under test.\n@@ -127,6 +128,18 @@ proc obj-c++_link_flags { paths } {\n       if [file exists \"${gccpath}/librx/librx.a\"] {\n           append flags \"-L${gccpath}/librx \"\n       }\n+\n+      set objcpath \"[get_multilibs]\"\n+      set libobjc_dir [lookfor_file ${objcpath} libobjc/.libs/libobjc.a]\n+      if { $libobjc_dir == \"\"} {\n+\t  set libobjc_dir [lookfor_file ${objcpath} libobjc/.libs/libobjc-gnu.a]\n+      }\n+      if { $libobjc_dir != \"\" } {\n+\t  set libobjc_dir [file dirname ${libobjc_dir}]\n+\t  append flags \"-L${libobjc_dir}\"\n+\t  append ld_library_path \":${libobjc_dir}\"\n+      }\n+    \n       append ld_library_path \":${rootme}\"\n       set compiler [lindex $OBJCXX_UNDER_TEST 0]\n       if { [is_remote host] == 0 && [which $compiler] != 0 } {\n@@ -165,36 +178,7 @@ proc obj-c++_link_flags { paths } {\n       }\n     }\n \n-    # On IRIX 6, we have to set variables akin to LD_LIBRARY_PATH, but\n-    # called LD_LIBRARYN32_PATH (for the N32 ABI) and LD_LIBRARY64_PATH\n-    # (for the 64-bit ABI).  The right way to do this would be to modify\n-    # unix.exp -- but that's not an option since it's part of DejaGNU\n-    # proper, so we do it here.\n-    # The same applies to Darwin (DYLD_LIBRARY_PATH), Solaris 32 bit\n-    # (LD_LIBRARY_PATH_32), Solaris 64 bit (LD_LIBRARY_PATH_64), and HP-UX\n-    # (SHLIB_PATH).\n-    # Doing this does cause trouble when testing cross-compilers.\n-    if {![is_remote target]} {\n-\tglobal env;\n-\tif [info exists env(LD_LIBRARY_PATH)] {\n-\t    # If we've already added these directories once, keep the\n-\t    # existing path.\n-\t    if {$ld_library_path == $env(LD_LIBRARY_PATH)\n-\t\t|| [string first $ld_library_path: \\\n-\t\t\t\t $env(LD_LIBRARY_PATH)] == 0} {\n-\t\tset ld_library_path $env(LD_LIBRARY_PATH)\n-\t    } elseif { $env(LD_LIBRARY_PATH) != \"\" } {\n-\t\tappend ld_library_path \":$env(LD_LIBRARY_PATH)\"\n-\t    }\n-\t}\n-\tsetenv  LD_LIBRARY_PATH     $ld_library_path\n-\tsetenv  SHLIB_PATH          $ld_library_path\n-\tsetenv  LD_LIBRARYN32_PATH  $ld_library_path\n-\tsetenv  LD_LIBRARY64_PATH   $ld_library_path\n-\tsetenv  LD_LIBRARY_PATH_32  $ld_library_path\n-\tsetenv  LD_LIBRARY_PATH_64  $ld_library_path\n-\tsetenv  DYLD_LIBRARY_PATH   $ld_library_path\n-    }\n+    set_ld_library_path_env_vars\n \n     return \"$flags\"\n }\n@@ -314,10 +298,6 @@ proc obj-c++_target_compile { source dest type options } {\n     if { $libobjc_dir != \"\" } {\n \tset objc_include_dir \"${srcdir}/../../libobjc\"\n \tlappend options \"additional_flags=-I${objc_include_dir}\"\n-\tset libobjc_dir [file dirname ${libobjc_dir}]\n-\tset objc_link_flags \"-L${libobjc_dir}\"\n-\tlappend options \"additional_flags=${objc_link_flags}\"\n-\tappend ld_library_path \":${libobjc_dir}\"\n     }\n \n     lappend options \"additional_flags=[libio_include_flags]\""}]}