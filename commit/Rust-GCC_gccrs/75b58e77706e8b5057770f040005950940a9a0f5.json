{"sha": "75b58e77706e8b5057770f040005950940a9a0f5", "node_id": "C_kwDOANBUbNoAKDc1YjU4ZTc3NzA2ZThiNTA1Nzc3MGYwNDAwMDU5NTA5NDBhOWEwZjU", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2023-02-02T10:00:57Z"}, "committer": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2023-02-02T10:00:57Z"}, "message": "arm: Fix sign of MVE predicate mve_pred16_t [PR 107674]\n\nThe ACLE defines mve_pred16_t as an unsigned short.  This patch makes sure GCC\ntreats the predicate as an unsigned type, rather than signed.\n\ngcc/ChangeLog:\n\n\tPR target/107674\n\t* config/arm/arm-builtins.cc (arm_simd_builtin_type): Rewrite to use\n\tnew qualifiers parameter and use unsigned short type for MVE predicate.\n\t(arm_init_builtin): Call arm_simd_builtin_type with qualifiers\n\tparameter.\n\t(arm_init_crypto_builtins): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/107674\n\t* gcc.target/arm/mve/mve_vpt.c: New test.", "tree": {"sha": "9436354594cf54329af0d16ab1ab21d7bef23c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9436354594cf54329af0d16ab1ab21d7bef23c1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75b58e77706e8b5057770f040005950940a9a0f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b58e77706e8b5057770f040005950940a9a0f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b58e77706e8b5057770f040005950940a9a0f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b58e77706e8b5057770f040005950940a9a0f5/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2423144eb36a68fd0da9224857ce807714874a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2423144eb36a68fd0da9224857ce807714874a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2423144eb36a68fd0da9224857ce807714874a7"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "58bf856f08d8d4836d01c5e4545dc5bab2f39c14", "filename": "gcc/config/arm/arm-builtins.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b58e77706e8b5057770f040005950940a9a0f5/gcc%2Fconfig%2Farm%2Farm-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b58e77706e8b5057770f040005950940a9a0f5/gcc%2Fconfig%2Farm%2Farm-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.cc?ref=75b58e77706e8b5057770f040005950940a9a0f5", "patch": "@@ -1489,12 +1489,14 @@ arm_lookup_simd_builtin_type (machine_mode mode,\n }\n \n static tree\n-arm_simd_builtin_type (machine_mode mode, bool unsigned_p, bool poly_p)\n+arm_simd_builtin_type (machine_mode mode, arm_type_qualifiers qualifiers)\n {\n-  if (poly_p)\n+  if ((qualifiers & qualifier_poly) != 0)\n     return arm_lookup_simd_builtin_type (mode, qualifier_poly);\n-  else if (unsigned_p)\n+  else if ((qualifiers & qualifier_unsigned) != 0)\n     return arm_lookup_simd_builtin_type (mode, qualifier_unsigned);\n+  else if ((qualifiers & qualifier_predicate) != 0)\n+    return unsigned_intHI_type_node;\n   else\n     return arm_lookup_simd_builtin_type (mode, qualifier_none);\n }\n@@ -1755,9 +1757,7 @@ arm_init_builtin (unsigned int fcode, arm_builtin_datum *d,\n       else\n \t{\n \t  eltype\n-\t    = arm_simd_builtin_type (op_mode,\n-\t\t\t\t     (qualifiers & qualifier_unsigned) != 0,\n-\t\t\t\t     (qualifiers & qualifier_poly) != 0);\n+\t    = arm_simd_builtin_type (op_mode, qualifiers);\n \t  gcc_assert (eltype != NULL);\n \n \t  /* Add qualifiers.  */\n@@ -1929,10 +1929,10 @@ static void\n arm_init_crypto_builtins (void)\n {\n   tree V16UQI_type_node\n-    = arm_simd_builtin_type (V16QImode, true, false);\n+    = arm_simd_builtin_type (V16QImode, qualifier_unsigned);\n \n   tree V4USI_type_node\n-    = arm_simd_builtin_type (V4SImode, true, false);\n+    = arm_simd_builtin_type (V4SImode, qualifier_unsigned);\n \n   tree v16uqi_ftype_v16uqi\n     = build_function_type_list (V16UQI_type_node, V16UQI_type_node,"}, {"sha": "28e4697c3c5bcc89b37fcb296f4b46c861aed27d", "filename": "gcc/testsuite/gcc.target/arm/mve/mve_vpt.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b58e77706e8b5057770f040005950940a9a0f5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fmve_vpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b58e77706e8b5057770f040005950940a9a0f5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fmve_vpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fmve_vpt.c?ref=75b58e77706e8b5057770f040005950940a9a0f5", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n+#include <arm_mve.h>\n+void test0 (uint8_t *a, uint8_t *b, uint8_t *c)\n+{\n+    uint8x16_t va = vldrbq_u8 (a);\n+    uint8x16_t vb = vldrbq_u8 (b);\n+    mve_pred16_t p = vcmpeqq_u8 (va, vb);\n+    uint8x16_t vc = vaddq_x_u8 (va, vb, p);\n+    vstrbq_p_u8 (c, vc, p);\n+}\n+/*\n+** test0:\n+**\tvldrb.8\tq[0-9]+, \\[r[0-9]+\\]\n+**\tvldrb.8\tq[0-9]+, \\[r[0-9]+\\]\n+**\tvcmp.i8\teq, q[0-9]+, q[0-9]+\n+**\tvmrs\t(r[0-9]+), p0\t@ movhi\n+**\tuxth\t\\1, \\1\n+**\tvmsr\tp0, \\1\t@ movhi\n+**\tvpst\n+**\tvaddt.i8\t(q[0-9]+), q[0-9]+, q[0-9]+\n+**\tvpst\n+**\tvstrbt.8\t\\2, \\[r[0-9]+\\]\n+**\tbx\tlr\n+*/"}]}