{"sha": "99e764a225b18deb086ee0e73a14c92df52bed5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTllNzY0YTIyNWIxOGRlYjA4NmVlMGU3M2ExNGM5MmRmNTJiZWQ1ZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-06-12T22:26:54Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-06-12T22:26:54Z"}, "message": "PR c++/90825 - endless recursion when evaluating sizeof.\n\n\tPR c++/90832 - endless recursion when evaluating sizeof.\n\t* constexpr.c (cxx_eval_constant_expression): Don't recurse on the\n\tresult of fold_sizeof_expr if is returns a SIZEOF_EXPR.\n\t* typeck.c (cxx_sizeof_expr): Only return a SIZEOF_EXPR if the operand\n\tis instantiation-dependent.\n\n\t* g++.dg/cpp0x/constexpr-sizeof2.C: New test.\n\t* g++.dg/cpp0x/constexpr-sizeof3.C: New test.\n\nFrom-SVN: r272221", "tree": {"sha": "146e85e9437b5e7a54bf249206e7a6554193ee14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/146e85e9437b5e7a54bf249206e7a6554193ee14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99e764a225b18deb086ee0e73a14c92df52bed5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e764a225b18deb086ee0e73a14c92df52bed5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99e764a225b18deb086ee0e73a14c92df52bed5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e764a225b18deb086ee0e73a14c92df52bed5d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d52a6e0a86203c42a9a1fc0e4f900d3f712002c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d52a6e0a86203c42a9a1fc0e4f900d3f712002c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d52a6e0a86203c42a9a1fc0e4f900d3f712002c1"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "87ca00bcf79254d00f150c5b9e14da73b4d153a0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=99e764a225b18deb086ee0e73a14c92df52bed5d", "patch": "@@ -1,5 +1,12 @@\n 2019-06-12  Marek Polacek  <polacek@redhat.com>\n \n+\tPR c++/90825 - endless recursion when evaluating sizeof.\n+\tPR c++/90832 - endless recursion when evaluating sizeof.\n+\t* constexpr.c (cxx_eval_constant_expression): Don't recurse on the\n+\tresult of fold_sizeof_expr if is returns a SIZEOF_EXPR.\n+\t* typeck.c (cxx_sizeof_expr): Only return a SIZEOF_EXPR if the operand\n+\tis instantiation-dependent.\n+\n \tPR c++/90736 - bogus error with alignof.\n \t* constexpr.c (adjust_temp_type): Use cv_unqualified type.\n "}, {"sha": "8bbabd8ab441198e4a31354c15271e5159d51d0d", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=99e764a225b18deb086ee0e73a14c92df52bed5d", "patch": "@@ -4810,9 +4810,19 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n       break;\n \n     case SIZEOF_EXPR:\n-      r = cxx_eval_constant_expression (ctx, fold_sizeof_expr (t), lval,\n-\t\t\t\t\tnon_constant_p, overflow_p,\n-\t\t\t\t\tjump_target);\n+      r = fold_sizeof_expr (t);\n+      /* In a template, fold_sizeof_expr may merely create a new SIZEOF_EXPR,\n+\t which could lead to an infinite recursion.  */\n+      if (TREE_CODE (r) != SIZEOF_EXPR)\n+\tr = cxx_eval_constant_expression (ctx, r, lval,\n+\t\t\t\t\t  non_constant_p, overflow_p,\n+\t\t\t\t\t  jump_target);\n+      else\n+\t{\n+\t  *non_constant_p = true;\n+\t  gcc_assert (ctx->quiet);\n+\t}\n+\n       break;\n \n     case COMPOUND_EXPR:"}, {"sha": "a8fb1624b487b6f656b5059baa227833a486f72a", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=99e764a225b18deb086ee0e73a14c92df52bed5d", "patch": "@@ -1690,7 +1690,7 @@ cxx_sizeof_expr (tree e, tsubst_flags_t complain)\n   if (e == error_mark_node)\n     return error_mark_node;\n \n-  if (processing_template_decl)\n+  if (instantiation_dependent_uneval_expression_p (e))\n     {\n       e = build_min (SIZEOF_EXPR, size_type_node, e);\n       TREE_SIDE_EFFECTS (e) = 0;"}, {"sha": "05802734f6e04f7792f543775221f5d81d167497", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=99e764a225b18deb086ee0e73a14c92df52bed5d", "patch": "@@ -1,3 +1,10 @@\n+2019-06-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90825 - endless recursion when evaluating sizeof.\n+\tPR c++/90832 - endless recursion when evaluating sizeof.\n+\t* g++.dg/cpp0x/constexpr-sizeof2.C: New test.\n+\t* g++.dg/cpp0x/constexpr-sizeof3.C: New test.\n+\n 2019-06-12  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/90676"}, {"sha": "8676ae40b61b6beb6d193f8d0bef0f1576a5ccb6", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-sizeof2.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sizeof2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sizeof2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sizeof2.C?ref=99e764a225b18deb086ee0e73a14c92df52bed5d", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/90825 - endless recursion when evaluating sizeof.\n+// { dg-do compile { target c++11 } }\n+\n+class address {\n+  char host_[63];\n+public:\n+  static constexpr unsigned buffer_size() noexcept { return sizeof(host_); }\n+};\n+\n+template <class Archive>\n+void load()\n+{\n+  char host[address::buffer_size()];\n+}"}, {"sha": "05f07c38796fea339a2886faf3d6df9f062ccf2d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-sizeof3.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sizeof3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e764a225b18deb086ee0e73a14c92df52bed5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sizeof3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sizeof3.C?ref=99e764a225b18deb086ee0e73a14c92df52bed5d", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/90832 - endless recursion when evaluating sizeof.\n+// { dg-do compile { target c++11 } }\n+\n+class B\n+{\n+ template <typename T> friend struct A;\n+ B() {}\n+};\n+\n+template <typename T>\n+struct A\n+{\n+ A() noexcept(sizeof(B{})) { }\n+};\n+\n+struct C\n+{\n+ C()\n+ {\n+ static_assert( sizeof(A<int>{}), \"\" );\n+ }\n+};"}]}