{"sha": "64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRlZDBmNDBkM2I0ZGJlYWFhMDAzMTg4MDhlZjkzZTk3MDFhNmViZA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-12-24T00:38:22Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-12-24T00:38:22Z"}, "message": "(function_cannot_inline_p): Reject function with PARALLEL result.\n\n(function_cannot_inline_p): Reject function with\nPARALLEL result.\n(expand_inline_function): Abort if function result not handled.\n\nFrom-SVN: r13340", "tree": {"sha": "4a0810f01d11cc373505e32501b38cdf59952419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a0810f01d11cc373505e32501b38cdf59952419"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd/comments", "author": null, "committer": null, "parents": [{"sha": "141719a8d7441a64d057e5095e7c96c19cf2aa7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141719a8d7441a64d057e5095e7c96c19cf2aa7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/141719a8d7441a64d057e5095e7c96c19cf2aa7e"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "c4b8cac0f39dade9a26cf3048ecee7964bbd3c8c", "filename": "gcc/integrate.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd", "patch": "@@ -91,6 +91,7 @@ function_cannot_inline_p (fndecl)\n   int max_insns = INTEGRATE_THRESHOLD (fndecl);\n   register int ninsns = 0;\n   register tree parms;\n+  rtx result;\n \n   /* No inlines with varargs.  `grokdeclarator' gives a warning\n      message about that if `inline' is specified.  This code\n@@ -184,6 +185,11 @@ function_cannot_inline_p (fndecl)\n \treturn \"function with complex parameters cannot be inline\";\n     }\n \n+  /* We can't inline functions that return a PARALLEL rtx.  */\n+  result = DECL_RTL (DECL_RESULT (fndecl));\n+  if (result && GET_CODE (result) == PARALLEL)\n+    return \"inline functions not supported for this return value type\";\n+\n   return 0;\n }\n \f\n@@ -1698,6 +1704,8 @@ expand_inline_function (fndecl, parms, target, ignore, type,\n       else\n \tmap->reg_map[REGNO (loc)] = reg_to_map;\n     }\n+  else\n+    abort ();\n \n   /* Make new label equivalences for the labels in the called function.  */\n   for (i = min_labelno; i < max_labelno; i++)"}]}