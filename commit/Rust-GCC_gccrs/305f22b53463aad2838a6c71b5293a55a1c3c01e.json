{"sha": "305f22b53463aad2838a6c71b5293a55a1c3c01e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA1ZjIyYjUzNDYzYWFkMjgzOGE2YzcxYjUyOTNhNTVhMWMzYzAxZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-27T21:16:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-27T21:16:42Z"}, "message": "(memory_address, allocate_dynamic_stack_space): Pass additional arg to\nmark_reg_pointer.\n\nFrom-SVN: r10885", "tree": {"sha": "53efa89d1eb6f27f5e1fd5b969fb23c9aed898e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53efa89d1eb6f27f5e1fd5b969fb23c9aed898e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/305f22b53463aad2838a6c71b5293a55a1c3c01e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305f22b53463aad2838a6c71b5293a55a1c3c01e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305f22b53463aad2838a6c71b5293a55a1c3c01e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305f22b53463aad2838a6c71b5293a55a1c3c01e/comments", "author": null, "committer": null, "parents": [{"sha": "a74abd2e16dba474a7701c21f25c26e46908657a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74abd2e16dba474a7701c21f25c26e46908657a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a74abd2e16dba474a7701c21f25c26e46908657a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "89870752e8a1fbccc4d5654329ad8f53b6e93686", "filename": "gcc/explow.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305f22b53463aad2838a6c71b5293a55a1c3c01e/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305f22b53463aad2838a6c71b5293a55a1c3c01e/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=305f22b53463aad2838a6c71b5293a55a1c3c01e", "patch": "@@ -493,11 +493,11 @@ memory_address (mode, x)\n   if (oldx == x)\n     return x;\n   else if (GET_CODE (x) == REG)\n-    mark_reg_pointer (x);\n+    mark_reg_pointer (x, 1);\n   else if (GET_CODE (x) == PLUS\n \t   && GET_CODE (XEXP (x, 0)) == REG\n \t   && GET_CODE (XEXP (x, 1)) == CONST_INT)\n-    mark_reg_pointer (XEXP (x, 0));\n+    mark_reg_pointer (XEXP (x, 0), 1);\n \n   /* OLDX may have been the address on a temporary.  Update the address\n      to indicate that X is now used.  */\n@@ -1070,7 +1070,7 @@ allocate_dynamic_stack_space (size, target, known_align)\n       || REGNO (target) < FIRST_PSEUDO_REGISTER)\n     target = gen_reg_rtx (Pmode);\n \n-  mark_reg_pointer (target);\n+  mark_reg_pointer (target, known_align / BITS_PER_UNIT);\n \n #ifndef STACK_GROWS_DOWNWARD\n   emit_move_insn (target, virtual_stack_dynamic_rtx);"}]}