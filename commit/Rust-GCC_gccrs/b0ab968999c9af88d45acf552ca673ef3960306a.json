{"sha": "b0ab968999c9af88d45acf552ca673ef3960306a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBhYjk2ODk5OWM5YWY4OGQ0NWFjZjU1MmNhNjczZWYzOTYwMzA2YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-07-01T07:45:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-07-01T07:45:02Z"}, "message": "dwarf2out: Handle COMPOUND_LITERAL_EXPR in loc_list_from_tree_1 [PR101266]\n\nIn this case dwarf2out_decl is called from the FEs with GENERIC but not\nyet gimplified expressions in it.\n\nAs loc_list_from_tree_1 has an exhaustive list of tree codes it wants to\nhandle and for checking asserts no other codes makes it in, we should\nhandle even GENERIC trees that shouldn't be valid in GIMPLE.\n\nThe following patch handles COMPOUND_LITERAL_EXPR by hnadling it like the\nunderlying VAR_DECL temporary.\n\nVerified the emitted DWARF is correct (but unoptimized, we emit\nDW_OP_lit1 DW_OP_lit1 DW_OP_minus for the upper bound).\n\n2021-07-01  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/101266\n\t* dwarf2out.c (loc_list_from_tree_1): Handle COMPOUND_LITERAL_EXPR.\n\n\t* gcc.dg/pr101266.c: New test.", "tree": {"sha": "74cf65b67e230b82b5f7c1c7b61416b5d7b275ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74cf65b67e230b82b5f7c1c7b61416b5d7b275ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0ab968999c9af88d45acf552ca673ef3960306a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0ab968999c9af88d45acf552ca673ef3960306a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0ab968999c9af88d45acf552ca673ef3960306a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0ab968999c9af88d45acf552ca673ef3960306a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91c771ec8a3b649765de3e0a7b04cf946c6649ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91c771ec8a3b649765de3e0a7b04cf946c6649ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91c771ec8a3b649765de3e0a7b04cf946c6649ef"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "82783c4968b857ffadbab193b078e3f40a47ff39", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ab968999c9af88d45acf552ca673ef3960306a/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ab968999c9af88d45acf552ca673ef3960306a/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b0ab968999c9af88d45acf552ca673ef3960306a", "patch": "@@ -19404,6 +19404,10 @@ loc_list_from_tree_1 (tree loc, int want_address,\n     case FIX_TRUNC_EXPR:\n       return 0;\n \n+    case COMPOUND_LITERAL_EXPR:\n+      return loc_list_from_tree_1 (COMPOUND_LITERAL_EXPR_DECL (loc),\n+\t\t\t\t   0, context);\n+\n     default:\n       /* Leave front-end specific codes as simply unknown.  This comes\n \t up, for instance, with the C STMT_EXPR.  */"}, {"sha": "d1980891a01835d9d990ce56b69cf48d8aa89ef2", "filename": "gcc/testsuite/gcc.dg/pr101266.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ab968999c9af88d45acf552ca673ef3960306a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr101266.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ab968999c9af88d45acf552ca673ef3960306a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr101266.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr101266.c?ref=b0ab968999c9af88d45acf552ca673ef3960306a", "patch": "@@ -0,0 +1,8 @@\n+/* PR debug/101266 */\n+/* { dg-do compile } */\n+/* { dg-options \"-g -O2\" } */\n+\n+void\n+foo (int (*p)[(int){1}])\n+{\n+}"}]}