{"sha": "a444c05623faa2b6bd1bbc8f7908b8ea3d83b475", "node_id": "C_kwDOANBUbNoAKGE0NDRjMDU2MjNmYWEyYjZiZDFiYmM4Zjc5MDhiOGVhM2Q4M2I0NzU", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-12-04T13:53:26Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-12-06T13:58:48Z"}, "message": "ada: Small adjustment to special resolution of membership test\n\nIt's needed because, in GNAT, universal_integer does not cover all the\nvalues of all the supported integer types.\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Membership_Op): Adjust latest change.", "tree": {"sha": "4dcd1c05681762b51284074dbbedc80b98dc0125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dcd1c05681762b51284074dbbedc80b98dc0125"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a444c05623faa2b6bd1bbc8f7908b8ea3d83b475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a444c05623faa2b6bd1bbc8f7908b8ea3d83b475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a444c05623faa2b6bd1bbc8f7908b8ea3d83b475", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a444c05623faa2b6bd1bbc8f7908b8ea3d83b475/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1ab8eddca918f342b06a66fedb8fbc06c5532ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ab8eddca918f342b06a66fedb8fbc06c5532ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ab8eddca918f342b06a66fedb8fbc06c5532ab"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "4bbec65d6a01cd13f8b46c63bdd3f46c94fcb023", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a444c05623faa2b6bd1bbc8f7908b8ea3d83b475/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a444c05623faa2b6bd1bbc8f7908b8ea3d83b475/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=a444c05623faa2b6bd1bbc8f7908b8ea3d83b475", "patch": "@@ -10105,11 +10105,11 @@ package body Sem_Res is\n       then\n          T := Etype (R);\n \n-      --  If the left operand is of a universal numeric type and the right\n-      --  operand is not, we do not resolve the operands to the tested type\n-      --  but to the universal type instead. If not conforming to the letter,\n-      --  it's conforming to the spirit of the specification of membership\n-      --  tests, which are typically used to guard a specific operation and\n+      --  If the type of the left operand is universal_integer and that of the\n+      --  right operand is smaller, then we do not resolve the operands to the\n+      --  tested type but to universal_integer instead. If not conforming to\n+      --  the letter, it's conforming to the spirit of the specification of\n+      --  membership tests, which are typically used to guard an operation and\n       --  ought not to fail a check in doing so. Without this, in the case of\n \n       --    type Small_Length is range 1 .. 16;\n@@ -10122,10 +10122,14 @@ package body Sem_Res is\n       --   the function Is_Small_String would fail a range check for strings\n       --   larger than 127 characters.\n \n+      --  The test on the size is required in GNAT because universal_integer\n+      --  does not cover all the values of all the supported integer types,\n+      --  for example the large values of Long_Long_Long_Unsigned.\n+\n       elsif not Is_Overloaded (L)\n-        and then Is_Universal_Numeric_Type (Etype (L))\n+        and then Etype (L) = Universal_Integer\n         and then (Is_Overloaded (R)\n-                   or else not Is_Universal_Numeric_Type (Etype (R)))\n+                   or else RM_Size (Etype (R)) < RM_Size (Universal_Integer))\n       then\n          T := Etype (L);\n "}]}