{"sha": "e8a68017b07181dfe3451ec65cf4c4f979f4fc3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThhNjgwMTdiMDcxODFkZmUzNDUxZWM2NWNmNGM0Zjk3OWY0ZmMzYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-02T22:22:05Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-02T22:22:05Z"}, "message": "h8300.c (dosize): Replace argument op with sign.\n\n\t* config/h8300/h8300.c (dosize): Replace argument op with\n\tsign.\n\t(h8300_output_function_prologue): Update the call to dosize.\n\t(h8300_output_function_epilogue): Likewise.\n\nFrom-SVN: r59746", "tree": {"sha": "cc3b881e4186a2c4649e638f9089af71857f7fdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc3b881e4186a2c4649e638f9089af71857f7fdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8a68017b07181dfe3451ec65cf4c4f979f4fc3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8a68017b07181dfe3451ec65cf4c4f979f4fc3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8a68017b07181dfe3451ec65cf4c4f979f4fc3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8a68017b07181dfe3451ec65cf4c4f979f4fc3c/comments", "author": null, "committer": null, "parents": [{"sha": "61b8da3733cfa15ed60eb93615b37e716af2fc5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b8da3733cfa15ed60eb93615b37e716af2fc5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b8da3733cfa15ed60eb93615b37e716af2fc5e"}], "stats": {"total": 86, "additions": 66, "deletions": 20}, "files": [{"sha": "7b4eecb550e4d4e8be2d1ffb41f9e6bf1ceb3a40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8a68017b07181dfe3451ec65cf4c4f979f4fc3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8a68017b07181dfe3451ec65cf4c4f979f4fc3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8a68017b07181dfe3451ec65cf4c4f979f4fc3c", "patch": "@@ -1,3 +1,10 @@\n+2002-12-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (dosize): Replace argument op with\n+\tsign.\n+\t(h8300_output_function_prologue): Update the call to dosize.\n+\t(h8300_output_function_epilogue): Likewise.\n+\n 2002-12-02  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.h: Delete ifndefs with nothing inside them."}, {"sha": "71e3477a60305a2e44dcaf6f53a87c42a928586b", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 59, "deletions": 20, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8a68017b07181dfe3451ec65cf4c4f979f4fc3c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8a68017b07181dfe3451ec65cf4c4f979f4fc3c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=e8a68017b07181dfe3451ec65cf4c4f979f4fc3c", "patch": "@@ -48,7 +48,7 @@ static const char *byte_reg PARAMS ((rtx, int));\n static int h8300_interrupt_function_p PARAMS ((tree));\n static int h8300_monitor_function_p PARAMS ((tree));\n static int h8300_os_task_function_p PARAMS ((tree));\n-static void dosize PARAMS ((FILE *, const char *, unsigned int));\n+static void dosize PARAMS ((FILE *, int, unsigned int));\n static int round_frame_size PARAMS ((int));\n static unsigned int compute_saved_regs PARAMS ((void));\n static void push PARAMS ((FILE *, int));\n@@ -393,9 +393,9 @@ byte_reg (x, b)\n    SIZE to adjust the stack pointer.  */\n \n static void\n-dosize (file, op, size)\n+dosize (file, sign, size)\n      FILE *file;\n-     const char *op;\n+     int sign;\n      unsigned int size;\n {\n   /* On the H8/300H and H8S, for sizes <= 8 bytes, it is as good or\n@@ -409,8 +409,9 @@ dosize (file, op, size)\n       || ((TARGET_H8300H || TARGET_H8300S) && size <= 8)\n       || (TARGET_H8300 && interrupt_handler)\n       || (TARGET_H8300 && current_function_needs_context\n-\t  && ! strcmp (op, \"sub\")))\n+\t  && sign < 0))\n     {\n+      const char *op = (sign > 0) ? \"add\" : \"sub\";\n       unsigned HOST_WIDE_INT amount;\n \n       /* Try different amounts in descending order.  */\n@@ -429,9 +430,13 @@ dosize (file, op, size)\n   else\n     {\n       if (TARGET_H8300)\n-\tfprintf (file, \"\\tmov.w\\t#%d,r3\\n\\t%s.w\\tr3,r7\\n\", size, op);\n+\t{\n+\t  fprintf (file, \"\\tmov.w\\t#%d,r3\\n\\tadd.w\\tr3,r7\\n\", sign * size);\n+\t}\n       else\n-\tfprintf (file, \"\\t%s.l\\t#%d,er7\\n\", op, size);\n+\t{\n+\t  fprintf (file, \"\\tadd.l\\t#%d,er7\\n\", sign * size);\n+\t}\n     }\n }\n \n@@ -586,7 +591,7 @@ h8300_output_function_prologue (file, size)\n     }\n \n   /* Leave room for locals.  */\n-  dosize (file, \"sub\", fsize);\n+  dosize (file, -1, fsize);\n \n   /* Push the rest of the registers in ascending order.  */\n   saved_regs = compute_saved_regs ();\n@@ -611,12 +616,29 @@ h8300_output_function_prologue (file, size)\n \t\tn_regs = 2;\n \t    }\n \n-\t  if (n_regs == 1)\n-\t    push (file, regno);\n-\t  else\n-\t    fprintf (file, \"\\tstm.l\\t%s-%s,@-er7\\n\",\n-\t\t     h8_reg_names[regno],\n-\t\t     h8_reg_names[regno + (n_regs - 1)]);\n+\t  switch (n_regs)\n+\t    {\n+\t    case 1:\n+\t      push (file, regno);\n+\t      break;\n+\t    case 2:\n+\t      fprintf (file, \"\\tstm.l\\t%s-%s,@-er7\\n\",\n+\t\t       h8_reg_names[regno],\n+\t\t       h8_reg_names[regno + 1]);\n+\t      break;\n+\t    case 3:\n+\t      fprintf (file, \"\\tstm.l\\t%s-%s,@-er7\\n\",\n+\t\t       h8_reg_names[regno],\n+\t\t       h8_reg_names[regno + 2]);\n+\t      break;\n+\t    case 4:\n+\t      fprintf (file, \"\\tstm.l\\t%s-%s,@-er7\\n\",\n+\t\t       h8_reg_names[regno],\n+\t\t       h8_reg_names[regno + 3]);\n+\t      break;\n+\t    default:\n+\t      abort ();\n+\t    }\n \t}\n     }\n }\n@@ -677,17 +699,34 @@ h8300_output_function_epilogue (file, size)\n \t\tn_regs = 2;\n \t    }\n \n-\t  if (n_regs == 1)\n-\t    pop (file, regno);\n-\t  else\n-\t    fprintf (file, \"\\tldm.l\\t@er7+,%s-%s\\n\",\n-\t\t     h8_reg_names[regno - (n_regs - 1)],\n-\t\t     h8_reg_names[regno]);\n+\t  switch (n_regs)\n+\t    {\n+\t    case 1:\n+\t      pop (file, regno);\n+\t      break;\n+\t    case 2:\n+\t      fprintf (file, \"\\tldm.l\\t@er7+,%s-%s\\n\",\n+\t\t       h8_reg_names[regno - 1],\n+\t\t       h8_reg_names[regno]);\n+\t      break;\n+\t    case 3:\n+\t      fprintf (file, \"\\tldm.l\\t@er7+,%s-%s\\n\",\n+\t\t       h8_reg_names[regno - 2],\n+\t\t       h8_reg_names[regno]);\n+\t      break;\n+\t    case 4:\n+\t      fprintf (file, \"\\tldm.l\\t@er7+,%s-%s\\n\",\n+\t\t       h8_reg_names[regno - 3],\n+\t\t       h8_reg_names[regno]);\n+\t      break;\n+\t    default:\n+\t      abort ();\n+\t    }\n \t}\n     }\n \n   /* Deallocate locals.  */\n-  dosize (file, \"add\", fsize);\n+  dosize (file, 1, fsize);\n \n   /* Pop frame pointer if we had one.  */\n   if (frame_pointer_needed)"}]}