{"sha": "fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQyZDZiMWIxNjU3ODEzYmJlNWVmMWQ3M2U0MmZmYjQwNzFhNWQwNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-11-27T10:14:57Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-11-27T10:14:57Z"}, "message": "mips.c (mips16_unextended_reference_p): Test for BLKmode.\n\ngcc/\n\t* config/mips/mips.c (mips16_unextended_reference_p): Test for BLKmode.\n\nFrom-SVN: r181762", "tree": {"sha": "23f920a5cf1b1afe489582c2398bb9f37a420061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23f920a5cf1b1afe489582c2398bb9f37a420061"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2ccf3c28c9e7a79ace3f0c20d000f285bc732e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ccf3c28c9e7a79ace3f0c20d000f285bc732e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ccf3c28c9e7a79ace3f0c20d000f285bc732e5"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "88ad9d84baf7d22ba6d809b6865a0ba6abede6d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06", "patch": "@@ -1,3 +1,7 @@\n+2011-11-27  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (mips16_unextended_reference_p): Test for BLKmode.\n+\n 2011-11-27  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips-protos.h (mips_emit_binary): Declare."}, {"sha": "0559a9b78d951bc847500c297c2638530be6634a", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=fd2d6b1b1657813bbe5ef1d73e42ffb4071a5d06", "patch": "@@ -2163,7 +2163,7 @@ static bool\n mips16_unextended_reference_p (enum machine_mode mode, rtx base,\n \t\t\t       unsigned HOST_WIDE_INT offset)\n {\n-  if (offset % GET_MODE_SIZE (mode) == 0)\n+  if (mode != BLKmode && offset % GET_MODE_SIZE (mode) == 0)\n     {\n       if (GET_MODE_SIZE (mode) == 4 && base == stack_pointer_rtx)\n \treturn offset < 256U * GET_MODE_SIZE (mode);"}]}