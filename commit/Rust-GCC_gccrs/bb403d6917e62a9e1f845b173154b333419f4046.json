{"sha": "bb403d6917e62a9e1f845b173154b333419f4046", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI0MDNkNjkxN2U2MmE5ZTFmODQ1YjE3MzE1NGIzMzM0MTlmNDA0Ng==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@nerim.net", "date": "2002-07-19T04:45:20Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2002-07-19T04:45:20Z"}, "message": "slice_array.h (slice_array<T>::operator=(const T&)): Constify.\n\n\n        * include/bits/slice_array.h\n        (slice_array<T>::operator=(const T&)): Constify.\n        * include/bits/gslice_array.h\n        (gslice_array<T>::operator=(const T&)):  Likewise.\n        * include/bits/mask_array.h\n        (mask_array<T>::operator=(const T&)): Likewise.\n        * include/bits/indirect_array.h\n        (indirect_array<T>::operator=(const T&): Likewise.\n:w\n\nFrom-SVN: r55577", "tree": {"sha": "0dadfac01fff48321025bae41c5d903080fa6538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dadfac01fff48321025bae41c5d903080fa6538"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb403d6917e62a9e1f845b173154b333419f4046", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb403d6917e62a9e1f845b173154b333419f4046", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb403d6917e62a9e1f845b173154b333419f4046", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb403d6917e62a9e1f845b173154b333419f4046/comments", "author": null, "committer": null, "parents": [{"sha": "ddebdfebad723879a1ff8ee180c791326acd4507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddebdfebad723879a1ff8ee180c791326acd4507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddebdfebad723879a1ff8ee180c791326acd4507"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "3ca8df1a57449f3794bc538ef14dc79f03591d4d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bb403d6917e62a9e1f845b173154b333419f4046", "patch": "@@ -1,3 +1,15 @@\n+2002-07-19  Gabriel Dos Reis  <gdr@nerim.net>\n+\n+\tDR/123\n+\t* include/bits/slice_array.h \n+\t(slice_array<T>::operator=(const T&)): Constify.\n+\t* include/bits/gslice_array.h \n+\t(gslice_array<T>::operator=(const T&)):  Likewise.\n+\t* include/bits/mask_array.h \n+\t(mask_array<T>::operator=(const T&)): Likewise.\n+\t* include/bits/indirect_array.h\n+\t(indirect_array<T>::operator=(const T&): Likewise.\n+\n 2002-07-17  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/doxygen/run_doxygen:  Remove template parameter names from"}, {"sha": "445029c2742f3170cb4804605570083c77729368", "filename": "libstdc++-v3/include/bits/gslice_array.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice_array.h?ref=bb403d6917e62a9e1f845b173154b333419f4046", "patch": "@@ -57,7 +57,7 @@ namespace std {\n         void operator|= (const valarray<_Tp>&) const;\n         void operator<<=(const valarray<_Tp>&) const;\n         void operator>>=(const valarray<_Tp>&) const;\n-        void operator=(const _Tp&);\n+        void operator=(const _Tp&) const;\n \n         template<class _Dom>\n         void operator= (const _Expr<_Dom,_Tp>&) const;\n@@ -113,7 +113,7 @@ namespace std {\n     \n     template<typename _Tp>\n     inline void\n-    gslice_array<_Tp>::operator= (const _Tp& __t) \n+    gslice_array<_Tp>::operator= (const _Tp& __t) const\n     { \n         __valarray_fill (_M_array, _Array<size_t>(_M_index),\n                          _M_index.size(), __t); "}, {"sha": "3a61b21fd57be9cc8b28280768eb2459c92e7766", "filename": "libstdc++-v3/include/bits/indirect_array.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2Finclude%2Fbits%2Findirect_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2Finclude%2Fbits%2Findirect_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Findirect_array.h?ref=bb403d6917e62a9e1f845b173154b333419f4046", "patch": "@@ -61,7 +61,7 @@ namespace std\n        void operator|= (const valarray<_Tp>&) const;\n        void operator<<= (const valarray<_Tp>&) const;\n        void operator>>= (const valarray<_Tp>&) const; \n-       void operator= (const _Tp&);\n+       void operator= (const _Tp&) const;\n        //    ~indirect_array();\n \n        template<class _Dom>\n@@ -124,7 +124,7 @@ namespace std\n \n   template<typename _Tp>\n      inline void\n-     indirect_array<_Tp>::operator= (const _Tp& __t)\n+     indirect_array<_Tp>::operator= (const _Tp& __t) const\n      { __valarray_fill(_M_array, _M_index, _M_sz, __t); }\n \n   template<typename _Tp>"}, {"sha": "0fcc3809fc4f83a2cffc0d16ef1ecf64f066d1c7", "filename": "libstdc++-v3/include/bits/mask_array.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmask_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmask_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmask_array.h?ref=bb403d6917e62a9e1f845b173154b333419f4046", "patch": "@@ -57,7 +57,7 @@ namespace std {\n         void operator|= (const valarray<_Tp>&) const;\n         void operator<<=(const valarray<_Tp>&) const;  \n         void operator>>=(const valarray<_Tp>&) const; \n-        void operator= (const _Tp&);\n+        void operator= (const _Tp&) const;\n     \n         //        ~mask_array ();\n         \n@@ -114,7 +114,7 @@ namespace std {\n     \n     template<typename _Tp>\n     inline void\n-    mask_array<_Tp>::operator= (const _Tp& __t)\n+    mask_array<_Tp>::operator= (const _Tp& __t) const\n     { __valarray_fill (_M_array, _M_sz, _M_mask, __t); }\n     \n     template<typename _Tp>"}, {"sha": "cc4ce5d5997ec3b4bc0562df56ed0d83519e578c", "filename": "libstdc++-v3/include/bits/slice_array.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fslice_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb403d6917e62a9e1f845b173154b333419f4046/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fslice_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fslice_array.h?ref=bb403d6917e62a9e1f845b173154b333419f4046", "patch": "@@ -101,7 +101,7 @@ namespace std\n       void operator|=(const valarray<_Tp>&) const;\n       void operator<<=(const valarray<_Tp>&) const;\n       void operator>>=(const valarray<_Tp>&) const;\n-      void operator=(const _Tp &);\n+      void operator=(const _Tp &) const;\n       //        ~slice_array ();\n \n       template<class _Dom>\n@@ -163,7 +163,7 @@ namespace std\n \n   template<typename _Tp>\n     inline void\n-    slice_array<_Tp>::operator=(const _Tp& __t) \n+    slice_array<_Tp>::operator=(const _Tp& __t) const\n     { __valarray_fill(_M_array, _M_sz, _M_stride, __t); }\n     \n   template<typename _Tp>"}]}