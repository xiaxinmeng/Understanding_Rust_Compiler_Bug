{"sha": "57579172585eae4fd6f57c0dbd55ea998ddfb63f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1NzkxNzI1ODVlYWU0ZmQ2ZjU3YzBkYmQ1NWVhOTk4ZGRmYjYzZg==", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2004-09-02T05:10:34Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2004-09-02T05:10:34Z"}, "message": "[multiple changes]\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicTextAreaUI.java\n\t(create): New method.\n\t* javax/swing/text/DefaultHighlighter.java\n\t(DefaultHighlightPainter.debugRect): Removed.\n\t* javax/swing/text/StyleContext.java\n\t(DEFAULT_STYLE): New field.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n\t(initComponentDefaults): Add keybindings for selection.backward and\n\tselection-forward for text components.\n\t* javax/swing/plaf/basic/BasicTextUI.java\n\t(paintSafely): Paint highlight only when something is actually\n\tselected.\n\t* javax/swing/text/DefaultCaret.java\n\t(handleHighlight): New method.\n\t(setSelectionVisible): Don't do anything when nothing changes.\n\tHandle highlight.\n\t(moveDot): Reimplemented. Handle highlight.\n\t(setDot): Set mark too. Handle highlight.\n\t(getSelectionPainter): New method.\n\t* javax/swing/text/DefaultEditorKit.java\n\t(defaultActions): Added new actions for text selection.\n\t* javax/swing/text/DefaultHighlighter.java\n\t(DefaultHighlightPainter): New inner class.\n\t(DefaultPainter): New field.\n\t(paint): Implemented.\n\t* javax/swing/text/PlainView.java\n\t(paint): Don't draw background here again.\n\t* javax/swing/text/Utilities.java\n\t(getTabbedTextWidth): Use width of ' ' instead of 'm' for tabsize.\n\t(drawTabbedText): Likewise.\n\n2004-08-31  Graydon Hoare  <graydon@redhat.com>\n\n\t* javax/swing/JComponent.java\n\t(resetKeyboardActions): Add null checks.\n\n2004-08-31  Graydon Hoare  <graydon@redhat.com>\n\n\t* javax/swing/DefaultButtonModel.java:\n\tSkip group notification when no group is set.\n\n2004-08-31  Graydon Hoare  <graydon@redhat.com>\n\n\t* javax/swing/JColorChooser.java:\n\tMake a couple inner classes static, for jikes.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicTextUI.java\n\t(RottView.modelToView): New method.\n\t(UpdateHandler): Renamed from EventHandler.\n\t(updateHandler): Renamed from eventHandler.\n\t(modelToView): Implemented.\n\t* javax/swing/text/AbstractDocument.java\n\t(BranchElement.getElement): Return null for non-existing indeces.\n\t(BranchElement.getElementIndex): Return 0 in some corner cases.\n\t* javax/swing/text/FieldView.java\n\t(modelToView): New method.\n\t* javax/swing/text/PlainView.java\n\t(modelToView): Made public.\n\n2004-08-31  Kim Ho  <kho@redhat.com>\n\n\t* Makefile.am: New files.\n\t* Makefile.in: Regenerate.\n\t* gcj/Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* java/awt/Color.java: Fix documentation.\n\t(RGBtoHSB): Use floats for conversions.\n\t* javax/swing/ButtonGroup.java: Run Jalopy.\n\t(setSelected): Reimplement.\n\t* javax/swing/DefaultButtonModel.java: Run Jalopy.\n\t(changeState): Let ButtonGroup know that the button\n\tis changing state.\n\t* javax/swing/JColorChooser.java: Implement.\n\t* javax/swing/JLabel.java: Run Jalopy.\n\t* javax/swing/JSpinner.java: Run Jalopy.\n\t(setValue): New method.\n\t* javax/swing/JTabbedPane.java: Run Jalopy.\n\t(removeTabAt): Call correct remove method.\n\t* javax/swing/SpinnerNumberModel.java: Run Jalopy.\n\t(getPreviousValue): Compare minimum value.\n\t* javax/swing/Timer.java: Run Jalopy.\n\t(run): Comment out println.\n\t* javax/swing/ToolTipManager.java:\n\t(mouseMoved): Get new tooltip text for location.\n\t* javax/swing/colorchooser/AbstractColorChooserPanel.java:\n\tJalopy and Javadoc.\n\t* javax/swing/colorchooser/ColorChooserComponentFactory.java:\n\tImplement.\n\t* javax/swing/colorchooser/DefaultColorSelectionModel.java:\n\tRun Jalopy.\n\t(setSelectedColor): Fire ChangeEvent.\n\t* javax/swing/colorchooser/DefaultHSBChooserPanel.java:\n\tNew file. Implement.\n\t* javax/swing/colorchooser/DefaultPreviewPanel.java:\n\tDitto.\n\t* javax/swing/colorchooser/DefaultRGBChooserPanel.java:\n\tDitto.\n\t* javax/swing/colorchooser/DefaultSwatchChooserPanel.java:\n\tDitto.\n\t* javax/swing/plaf/basic/BasicArrowButton.java:\n\t(getArrow): Fix size of upward pointing button.\n\t* javax/swing/plaf/basic/BasicColorChooserUI.java:\n\tImplement.\n\t* javax/swing/plaf/basic/BasicSliderUI.java:\n\t(getWidthOfWidestLabel): Use preferred dimensions.\n\t(getHeightOfTallestLabel): Ditto.\n\t* javax/swing/plaf/basic/BasicSpinnerUI.java:\n\tRun Jalopy.\n\t(mousePressed): Disable changes to spinner if it is not enabled.\n\t* testsuite/Makefile.in: Regenerate.\n\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicTableHeaderUI.java,\n\tjavax/swing/plaf/basic/BasicTableUI.java:\n\tAdded copyright notice.\n\n2004-08-31  Olga Rodimina  <rodimina@redhat.com>\n\n\t* Makefile.am: Added new files.\n\t* Makefile.in: Regenerate.\n\t* javax/swing/ComboBoxEditor.java: Added javadocs.\n\t* javax/swing/ComboBoxModel.java: Likewise.\n\t* javax/swing/DefaultComboBoxModel.java: Implemented.\n\t* javax/swing/DefaultListCellRenderer.java: Added javadocs\n\tand ran through jalopy to fix formatting style.\n\t(getListCellRendererComponent): Use appropriate border\n\tif renderer has focus and use noFocusBorder when it doesn't.\n\t* javax/swing/JComboBox.java: Implemented.\n\t* javax/swing/JList.java:\n\t(locationToIndex): New Method. Implemented.\n\t(indexToLocation): New Method.\n\t* javax/swing/JPopupMenu.java:\n\t(visible): New field.\n\t(isVisible): Changed to use new field above.\n\t(setVisible): Likewise.\n\t* javax/swing/MutableComboBoxModel.java: Added javadocs.\n\t* javax/swing/plaf/basic/BasicArrowButton.java:\n\t(shadow): Changed default color to Color.gray.\n\t* javax/swing/plaf/basic/BasicComboBoxUI.java: New File.\n\tUI delegate for JComboBox.\n\t* javax/swing/plaf/basic/BasicComboPopup.java: New File.\n\tPopup menu containing list of JComboBox's items.\n\t* javax/swing/plaf/basic/BasicComboBoxEditor.java: New File.\n\t* javax/swing/plaf/basic/BasicComboBoxRenderer.java: New File.\n\t* javax/swing/plaf/basic/BasicComboBoxUI.java: New File.\n\t* javax/swing/plaf/basic/BasicComboPopup.java: New File.\n\t* javax/swing/plaf/basic/BasicPopupMenuUI.java:\n\t(popupMenuWillBecomeVisible): Set selected path to the first\n\telement only if it is of type MenuElement. Also fix formatting\n\tstyle.\n\t* javax/swing/plaf/basic/ComboPopup.java: Added javadocs and missing\n\tmethods signatures.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/AbstractDocument.java\n\t(createBranchElement): Use new constructor of BranchElement.\n\t(createLeafElement): Renamed arguments.\n\t(getRootElements): Implemented.\n\t(BranchElement.start): Removed.\n\t(BranchElement.end): Likewise.\n\t(BranchElement.BranchElement): Fixed arguments.\n\t(BranchElement.getEndOffset): Reimplemented.\n\t(BranchElement.getStartOffset): Likewis.\n\t* javax/swing/text/DefaultCaret.java\n\t(paint): Draw simple vertical line as caret instead of a rectangle.\n\t* javax/swing/text/JTextComponent.java\n\t(setText): Use doc directly.\n\t* javax/swing/text/PlainView.java\n\t(nextTabStop): Implemented.\n\t* javax/swing/text/Utilities.java\n\t(drawTabbedText): nextTabStop() returns an absolute x position.\n\t(getTabbedTextWidth): Likewise.\n\n2004-08-31  Graydon Hoare  <graydon@redhat.com>\n\n\t* java/awt/Component.java\n\t(isFocusTraversable): Predicate on isLightweight()\n\t(setFocusable): Set isFocusTraversableOverridden.\n\t(requestFocus): Predicate peer dispatch on !isLightweight()\n\t(requestFocusInWindow): Likewise.\n\t(dispatchEventImpl): Coordinate with KeyboardFocusManager.\n\t* java/awt/Container.java\n\t(dispatchEventImpl): Predicate on event mask.\n\t(LightweightDispatcher): Remove focus machinery.\n\t* java/awt/DefaultFocusTraversalPolicy.java\n\t(accept): Expand predicate to include isFocusable().\n\t* java/awt/DefaultKeyboardFocusManager.java:\n\tGlobally change c.dispatchEvent(e) to redispatchEvent(c,e)\n\t* java/awt/KeyboardFocusManager.java\n\t(redispatchEvent): Synchronize on event to prevent feedback.\n\t* javax/swing/AbstractButton.java\n\t(ButtonFocusListener): Remove class.\n\t(init): Set focusPainted, focusable.\n\t* javax/swing/ActionMap.java (get): Check parent for null.\n\t* javax/swing/InputMap.java (get): Likewise.\n\t* javax/swing/JComponent.java\n\t(inputMap_whenFocused): New InputMap.\n\t(inputMap_whenAncestorOfFocused): Likewise.\n\t(inputMap_whenInFocusedWindow): Likewise.\n\t(getActionForKeyStroke): Rewrite.\n\t(getConditionForKeystroke): Likewise.\n\t(ActionListenerProxy): New private class.\n\t(setInputMap): Implement.\n\t(getInputMap): Likewise.\n\t(setActionMap): Likewise.\n\t(getActionMap): Likewise.\n\t(processComponentKeyEvent): New empty method.\n\t(processKeyEvent): Implement.\n\t(processKeyBinding): Likewise.\n\t(resetKeyboardActions): Rewrite.\n\t* javax/swing/KeyStroke.java: Rewrite.\n\t* javax/swing/SwingUtilities.java\n\t(notifyAction): Implement.\n\t(replaceUIActionMap): Likewise.\n\t(replaceUIInputMap): Likewise.\n\t* javax/swing/plaf/basic/BasicButtonListener.java\n\t(focusGained): Implement.\n\t(focusLost): Repaint if focusPainted().\n\t(installKeyboardActions): Install pressed / released actions.\n\t(uninstallKeyboardActions): Implement.\n\t* javax/swing/plaf/basic/BasicButtonUI.java\n\t(focusColor): New field.\n\t(installDefaults): Load focus color, install input map.\n\t(installKeyboardActions): Implement.\n\t(uninstallKeyboardActions): Likewise.\n\t(paintFocus): Rewrite.\n\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n\t(Button.focus): New default, midPurple.\n\t* javax/swing/plaf/basic/BasicTextUI.java\n\t(kit): Make static.\n\t(installUI): Get doc from kit, load defaults.\n\t(getKeymapName): Implement.\n\t(createKeymap): Likewise.\n\t(installKeyboardActions): Likewise.\n\t(getInputMap): Likewise.\n\t(getActionMap): Likewise.\n\t(createActionMap): Likewise.\n\t* javax/swing/text/AbstractDocument.java\n\t(getStartPosition): Implement.\n\t(getEndPosition): Likewise.\n\t* javax/swing/text/DefaultEditorKit.java\n\t(CopyAction): New class.\n\t(CutAction): Likewise.\n\t(DefaultKeyTypedAction): Likewise.\n\t(InsertBreakAction): Likewise.\n\t(InsertContentAction): Likewise.\n\t(InsertTabAction): Likewise.\n\t(PasteAction): Likewise.\n\t(defaultActions): New static table.\n\t(createCaret): Implement.\n\t(getActions): Likewise.\n\t* javax/swing/text/JTextComponent.java\n\t(KeymapWrapper): New private class.\n\t(KeymapActionMap): Likewise.\n\t(DefaultKeymap): New class.\n\t(keymaps): New static table.\n\t(keymap): New field.\n\t(getKeymap): Implement.\n\t(removeKeymap): Likewise.\n\t(addKeymap): Likewise.\n\t(setKeymap): Likewise.\n\t(loadKeymap): Likewise.\n\t(getActions): Likewise.\n\t(margin): New field.\n\t(JTextComponent): Build and install default keymap.\n\t* javax/swing/text/TextAction.java\n\t(textAction): Call super properly.\n\t(getTextComponent): Implement.\n\t* javax/swing/text/Utilities.java\n\t(drawTabbedText): Adjust position by ascent.\n\n2004-08-31  David Jee  <djee@redhat.com>\n\n\tPR AWT/17156\n\n\t* gnu/java/awt/peer/gtk/GtkMenuItemPeer.java\n\t(setEnabled): Make it a native method.\n\t* java/awt/DefaultKeyboardFocusManager.java\n\t(postProcessKeyEvent): Only post event if the menu item\n\tis active.\n\t* java/awt/MenuItem.java:\n\tPrivate field 'enabled' should be true by default.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c\n\t(setEnabled): New function.\n\n2004-08-31  David Jee  <djee@redhat.com>\n\n\tPR AWT/17059\n\n\t* gnu/java/awt/peer/gtk/GtkMenuBarPeer.java\n\t(nativeSetHelpMenu): New native method declaration.\n\t(addHelpMenu): Call nativeSetHelpMenu().\n\t(addMenu): Remove.\n\t* java/awt/MenuBar.java\n\t(setHelpMenu): Call addNotify() on the new help menu.\n\t(add): Call addNotify() on the new menu.\n\t(addNotify): Set the help menu if one exists.\n\t* java/awt/peer/MenuBarPeer.java\n\t(addMenu): Remove.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c\n\t(nativeSetHelpMenu): New method.\n\n2004-08-31  Graydon Hoare  <graydon@redhat.com>\n\n\t* Makefile.am: Add new files.\n\t* Makefile.in: Regenerate.\n\t* javax/swing/Box.java: Fix setting of layout in ctor.\n\t* javax/swing/JScrollPane.java: Scroll headers as well.\n\t* javax/swing/JTable.java: Reimplement.\n\t* javax/swing/JViewPort.java: Only add non-null children.\n\t* javax/swing/ScrollPaneLayout.java: Correct header calculations.\n\t* javax/swing/Timer.java: Fix stopping null waker.\n\t* javax/swing/plaf/basic/BasicTableHeaderUI.java: New file.\n\t* javax/swing/plaf/basic/BasicTableUI.java: New file.\n\t* javax/swing/table/DefaultTableCellRenderer.java: Configure.\n\t* javax/swing/table/DefaultTableColumnModel.java: Flesh out.\n\t* javax/swing/table/DefaultTableModel.java: Clean up.\n\t* javax/swing/table/JTableHeader.java: Implement.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* javax/swing/JSpinner.java (getChangeListeners): Remove double\n\tsemi-colon.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c:\n\tDeclare variables at top of functions/block.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c: Likewise.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* java/lang/Rectangle.java (intersects): Check r.width and r.height\n\tfirst.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/PlainView.java\n\t(selectedColor): New field.\n\t(unselectedColor): Likewise.\n\t(font): Likewise.\n\t(updateMetrics): New method.\n\t(lineToRect): Likewise.\n\t(modelToView): Likewise.\n\t(drawSelectedText): Use color from JTextComponent ad draw with\n\tUtilities class.\n\t(drawUnselectedText): Likewise.\n\t(paint): Initialize helper fields.\n\t* javax/swing/text/View.java\n\t(getChildAllocation): New method.\n\t(getViewIndex): Likewise.\n\t(getToolTipText): Likewise.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/Utilities.java\n\t(drawTabbedText): Reimplemented.\n\t(getTabbedTextWidth): Likewise.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicTextUI.java\n\t(installDefaults): Install caret and highlighter.\n\t(modelToView): Use Bias.Forward when calling sibling.\n\t* javax/swing/text/AbstractDocument.java\n\t(ElementEdit): Implements DocumentEvent.ElementChange.\n\t(ElementEdit.ElementEdit): New method.\n\t(ElementEdit.getChildrenAdded): Likewise.\n\t(ElementEdit.getChildrenRemoved): Likewise.\n\t(ElementEdit.getElement): Likewise.\n\t(ElementEdit.getIndex): Likewise.\n\t* javax/swing/text/DefaultCaret.java\n\t(color): Removed.\n\t(textComponent): Renamed from parent, made private.\n\t(selectionVisible): Renamed from vis_sel, made private.\n\t(blinkRate): Renamed from blink, made private.\n\t(magicCaretPosition): Renamed from magic, made private.\n\t(visible): Renamed from vis, made private.\n\t(dot): Made private.\n\t(mark): Likewise.\n\t(deinstall): Remove as MouseMotionListener.\n\t(install): Initialize textComponent first. Add as MouseMotionListener.\n\t(paint): Reimplemented.\n\t* javax/swing/text/JTextComponent.java\n\t(setCaret): Deinstall old caret, install new one and fire property\n\tchange after setting property.\n\t(setHighlighter): Deinstall old highlighter, install new one and fire\n\tproperty change after setting property.\n\t(setCaretColor): Fire property change after setting property.\n\t(setDisabledTextColor): Likewise.\n\t(setSelectedTextColor): Likewise.\n\t(setSelectionColor): Likewise.\n\t(modelToView): New method.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/AbstractDocument.java\n\t(getText): Simplified.\n\t* javax/swing/text/Segment.java\n\t(current): New field.\n\t(current): Reimplemented.\n\t(first): Likewise.\n\t(getIndex): Likewise.\n\t(last): Likewise.\n\t(next): Likewise.\n\t(previous): Likewise.\n\t(setIndex): Likewise.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicButtonUI.java\n\t(defaultTextIconGap): Made protected.\n\t(defaultTextShiftOffset): Likewise.\n\t(textShiftOffset): New field.\n\t(clearTextShiftOffset): New method.\n\t(getTextShiftOffset): Likewise.\n\t(setTextShiftOffset): Likewise.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicTextUI.java\n\t(installUI): Add eventHandler as property listener.\n\t(uninstallUI): remove eventHandler as propert listener.\n\t(installDefaults): Added comment.\n\t(installListeners): Likewise.\n\t(installKeyboardActions): Likewise.\n\t(uninstallDefaults): Likewise.\n\t(uninstallListeners): Likewise.\n\t(uninstallKeyboardActions): Likewise.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/AbstractDocument.java:\n\tFixed some typos in comments.\n\t(insertString): Reimplemented.\n\t(remove): Likewise.\n\t(replace): New method.\n\t(children): Dont use fully qualified class name.\n\t(DefaultDocumentEvent.offset): Renamed from off.\n\t(DefaultDocumentEvent.length): Renamed from len.\n\t(DefaultDocumentEvent.type): New field.\n\t(DefaultDocumentEvent.DefaultDocumentEvent): New constructor.\n\t(DefaultDocumentEvent.getType): Implemented.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicTextUI.java\n\t(RootView.textComponent): Removed.\n\t(RootView.RootView): Don't initialize textComponent.\n\t(RootView.getViewFactory): New method.\n\t(EventHandler): New inner class.\n\t(rootView): Initialize at instance creation.\n\t(eventHandler): New field.\n\t(installUI): Don't create view hierarchy directly,\n\tcall modelChanged() instead.\n\t(modelChanged): New method.\n\t* javax/swing/text/JTextComponent.java\n\t(setDocument): Fire property change event.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicTextUI.java\n\t(RootView.paint): Removed debug output.\n\t(paintSafely): Draw highlighter before text.\n\t(paintBackground): Use background color of text component.\n\t* javax/swing/plaf/basic/BasicToggleButtonUI.java:\n\tReformatted.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicToolBarUI.java\n\t(BasicToolBarUI): Fixed arguments for constructor.\n\t(createUI): Fixed creation of object.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DefaultListSelectionModel.java\n\t(fireValueChanged): Renamed from fireSelectionValueChanged,\n\tmade protected.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/TabSet.java\n\t(TabSet): Implements java.io.Serializable.\n\t* javax/swing/text/TabStop.java\n\t(TabStop): Implements java.io.Serializable.\n\t(TabStop): Made public.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JComponent.java\n\t(setUI): Fire PropertyChange.\n\t* javax/swing/JLabel.java\n\t(text): Renamed from labelText.\n\t(horizontalAlignment): New default vlaue.\n\t(icon): Renamed from activeIcon.\n\t(displayedMnemonic): Renamed from mnemonicKey, added default value.\n\t(displayedMnemonicIndex): Renamed from underlineChar.\n\t(setDisplayedMnemonic): Reimplemented.\n\t* javax/swing/JRadioButton.java\n\t(JRadioButton): New constructors.\n\t* javax/swing/JTextField.java\n\t(JTextField): Throw exception if colums < 0, initialitialz\n\tthis.columns directly and initialize document with text conditionally.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicFormattedTextFieldUI.java,\n\tjavax/swing/plaf/basic/BasicPasswordFieldUI.java,\n\tjavax/swing/plaf/basic/BasicTextAreaUI.java: New files.\n\t* javax/swing/text/FieldView.java\n\t(paint): Just call super method for now.\n\t* Makefile.am: Added new files.\n\t* Makefile.in: Regenerated.\n\n2004-08-31  Ka-Hing Cheung  <kahing@javabsp.org>\n\n\t* javax/swing/AbstractSpinnerModel.java,\n\tjavax/swing/JSpinner.java,\n\tjavax/swing/SpinnerNumberModel.java,\n\tjavax/swing/plaf/basic/BasicSpinnerUI.java:\n\tNew files.\n\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n\t(initClassDefaults): Added defaults for BasicSpinnerUI.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* Makefile.am: Added new files.\n\t* Makefile.in: Regenerated.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/TransferHandler.java,\n\tjavax/swing/plaf/basic/ComboPopup.java: New files\n\t* Makefile.am: Added javax/swing/TransferHandler.java and\n\tjavax/swing/plaf/basic/ComboPopup.java\n\t* Makefile.in: Regenerated.\n\n2004-08-31  Roman Kennke  <roman@ontographics.com>\n\n\t* javax/swing/text/Utilities.java: New file.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* Makefile.am: Added javax/swing/text/Utilities.java.\n\t* Makefile.in: Regenerated.\n\n2004-08-31  Graydon Hoare  <graydon@redhat.com>\n\n\t* javax/swing/text/SimpleAttributeSet.java: New file.\n\t* javax/swing/text/StyleConstants.java: New file.\n\t* javax/swing/text/StyleContext.java: New file.\n\t* javax/swing/text/TabSet.java: New file.\n\t* javax/swing/text/TabStop.java: New file.\n\t* javax/swing/text/AbstactDocument.java:\n\t(AbstractElement): Implement attribute support.\n\t* javax/swing/text/AttributeSet.java\n\t(NameAttribute): New static field.\n\t(ResolveAttribute): New static field.\n\t* Makefile.am: Update for new files.\n\t* Makefile.in: Regenerate.\n\n2004-08-31  Craig Black  <craig.black@aonix.com>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics.java\n\t(drawImage): Add support for scaling pixmaps.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n\t(copyAndScalePixmap): New native method.\n\n2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\tPR AWT/16121\n\t* jni/gtk-peer/gthread-jni.c: Include stdio.h.  Eliminate\n\ttype-punning compiler warnings using unions.\n\t(throw): Replace bzero with memset.\n\n2004-08-31  Andreas Tobler  <a.tobler@schweiz.ch>\n\t    Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c: Move\n\tNSA_PB macros to gtkpeer.h.  Include gtkpeer.h.\n\t* jni/gtk-peer/gtkpeer.h: Move NSA_PB macros here.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n\t(nativeSetIconImageFromDecoder): Use NSA_GET_PB_PTR macro.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c:\n\t#include gdk.h, not gtk.h. #include jni.h, native_state.h, string.h\n\tand stdlib.h, not gtkpeer.h.\n\t(*vm): New static variable.\n\t(areaPreparedID): Make static.\n\t(areaUpdatedID): Likewise.\n\t(area_prepared): Get and use JNIEnv through stored JavaVM *vm.\n\t(area_prepared): Likewise.\n\t(area_updated): Likewise.\n\t(closed): Likewise.\n\t(initStaticState): Initialize *vm javaVM.\n\t(pumpBytes): Use given env, not global gdk_env.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* java/awt/geom/CubicCurve2D.java (solveCubic): Removed duplicate\n\tcomments.\n\n2004-08-31  Sven de Marothy  <sven@physto.se>\n\n\t* java/awt/geom/CubicCurve2D.java: Reindent.\n\t(contains): Implemented.\n\t(intersects): Implemented.\n\t* java/awt/geom/QuadCurve2D.java: Likewise.\n\t* java/awt/geom/GeneralPath.java: Reindent and document.\n\tFully (re)implemented using separate xpoints and ypoints\n\tfloat[] coords.\n\t* java/awt/geom/RoundRectangle2D.java: Several bugfixes (Bug #6007).\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JMenuItem.java\n\t(getMenuDragMouseListeners): New method.\n\t(getMenuKeyListeners): Likewise.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractButton.java\n\t(model): Made protected.\n\t(actionListener): Likewise.\n\t(changeListener): Likewise.\n\t(itemListener): Likewise.\n\t(multiClickThreshhold): New field.\n\t(getActionListeners): New method.\n\t(getChangeListeners): Likewise.\n\t(getItemListeners): Likewise.\n\t(fireItemStateChanged): Simplified implementation.\n\t(fireActionPerformed): Likewise.\n\t(fireStateChanged): Likewise.\n\t(getMultiClickThreshhold): New method.\n\t(setMultiClickThreshhold): Likewise.\n\n2004-08-31  Tom Tromey  <tromey@redhat.com>\n\n\t* java/awt/image/Kernel.java (clone): Use super.clone().\n\n2004-08-31  David Jee  <djee@redhat.com>\n\n\tPR AWT/16682\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n\t(nativeSetIconImage): Rename to nativeSetIconImageFromDecoder.\n\t(nativeSetIconImageFromData): New native method declaration.\n\t(setIconImage): Handle images not produced from GdkPixbufDecoder.\n\t* gnu/java/awt/peer/gtk/GtkImage.java\n\t(getPixelCache): New method.\n\t(getColorModel): New method.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n\t(nativeSetIconImage): Rename to nativeSetIconImageFromDecoder.\n\t(free_pixbuf_data): New helper function.\n\t(nativeSetIconImageFromData): New function.\n\n2004-08-31  Graydon Hoare  <graydon@redhat.com>\n\n\tPR SWING/16576\n\t* javax/swing/JLayeredPane.java\n\t(setLayer): Permit changing layer after addition.\n\t(setPosition): Permit over-length positions.\n\t(layerToRange): Compare intValue()s.\n\t* javax/swing/Box.java (createHorizontalBox): Implement.\n\t(createRigidArea): Likewise.\n\t(createVerticalBox): Likewise.\n\n2004-08-31  Kim Ho  <kho@redhat.com>\n\n\t* java/awt/Component.java:\n\t(processMouseEvent): Consume event after\n\tlisteners process it.\n\t(processMouseMotionEvent): ditto.\n\t(processMouseWheelEvent): ditto.\n\t* java/awt/Container.java:\n\t(acquireComponentForMouseEvent):\n\tDo not dispatch to events that have been\n\tremoved from the Container.\n\t(handleEvent): Consume the MouseEvents.\n\t* javax/swing/RepaintManager.java:\n\t(paintDirtyRegions): Do not add to list of\n\tdamaged areas if the component has no root.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicMenuItemUI.java: Clean ip imports.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java (getFontPeer): Don't return\n\tnull when a MissingResourceException is thrown. Should never happen.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* java/awt/EventQueue.java (postEvent): Throw NullPointerException\n\twhen argument is null.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n\t(Java_gnu_java_awt_peer_gtk_GtkComponentPeer_addExposeFilter):\n\tDefine hid at start of function.\n\t(Java_gnu_java_awt_peer_gtk_GtkComponentPeer_removeExposeFilter):\n\tLikewise.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* gnu/java/awt/EmbeddedWindow.java: Reindent.\n\t* javax/swing/JButton.java: Reindent.\n\t* javax/swing/JCheckBox.java: Reindent.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* Makefile.am (gtk_c_source_files): Added\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c.\n\t(gtk_awt_peer_sources): Added\n\tgnu/java/awt/peer/gtk/GThreadMutex.java and\n\tgnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java.\n\t* Makefile.in: Regenerated.\n\n2004-08-31  Archie Cobbs  <archie@dellroad.org>\n\n\t* jni/gtk-peer/gthread-jni.c: don't #include nonexistent files\n\n2004-08-31  Steven Augart  <augart@watson.ibm.com>\n\n\t* jni/gtk-peer/gthread-jni.c (c-font-lock-extra-types):\n\tAdded jfieldID, jmethodID.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n\t(Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit): Initialize\n\tgdk_env before calling any gdk or gtk function.\n\n\t* gnu/java/awt/peer/gtk/GtkMainThread.java (gtkInitCalled): New field.\n\t(GtkMainThread): Call wait() in while loop waiting for gtkInitCalled.\n\t(run): Set gtkInitCalled.\n\n2004-08-31  Steven Augart  <augart@watson.ibm.com>\n\n\t* gnu/java/awt/peer/gtk/GtkMainThread.java (run): Pass the value of\n\tthe gnu.classpath.awt.gtk.portable.native.sync system property to C.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n\t(Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit): New argument,\n\tportableNativeSync.  Delegate PORTABLE_NATIVE_SYNC work to\n\tinit_glib_threads.\n\t(init_glib_threads): New function.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* jni/gtk-peer/gthread-jni.c: Define MIN_, MAX_ and NORM_\n\tPRIORITY when not already defined in header file.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* jni/gtk-peer/gthread-jni.c (setup_cache): Call\n\tExceptionOccurred, not ExceptionCheck, when we don't have JNI 1.2.\n\n2004-08-31  Steven Augart  <augart@watson.ibm.com>\n\n\t* gnu/native/jni/gtk-peer/gthread-jni.c: Indentation fixes.\n\tImplemented missing functions for GTK2.\n\tAdded error handling.\n\tRenamed static functions out of the g_ namespace.\n\tAdded TRACE_API_CALLS, EXPLAIN_TROUBLE, EXPLAIN_BROKEN,\n\tEXPLAIN_BADLY_BROKEN, and DELETE_LOCAL_REFS options.\n\tRewrote global-reference code.\n\tEliminated cascading errors.\n\t(mutex_trylock_jni_impl) Fully implemented.\n\t(cond_timed_wait_jni_impl) Went from millisecond to microsecond\n\tresolution.\n\t(setup_cache) New function.\n\t(mutex_cond_wait_jni_impl, mutex_cond_timed_wait_jni_impl) Fixed\n\tbug where they were not unlocking the GMutex associated with the\n\tcondition variable during the wait on that condition variable.\n\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c,\n\tnative/jni/gtk-peer/gthread-jni.c,\n\tnative/jni/gtk-peer/gthread-jni.h\n\t(g_thread_jni_functions): Renamed to ...\n\t(portable_native_sync_jni_functions): this name.\n\t(gdk_vm): Renamed to...\n\t(the_vm): this name.\n\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n\t(gdk_vm): Removed duplicate definition.\n\t(gtkInit): Removed stray message to stdout.\n\t(gtkInit): Use g_malloc and g_free instead of malloc and free.\n\t(gtkInit): Fix a const assignment bug.\n\t(gtkInit): Simplified code.\n\n\t* gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java,\n\tnative/jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c,\n\tnative/jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.h,\n\tgnu/java/awt/peer/gtk/GThreadMutex.java:\n\tNew files.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* javax/swing/Box.java: Put FIXME comment above class declaration.\n\t* javax/swing/JButton.java: Remove illegal L&F HTML from comments.\n\t* javax/swing/JCheckBox.java: Likewise.\n\t* javax/swing/JDialog.java: Likewise.\n\t* javax/swing/JRadioButton.java: Likewise.\n\t* javax/swing/JToggleButton.java: Likewise.\n\t* javax/swing/UIManager.java: Likewise.\n\t* javax/swing/border/TitledBorder.java: Likewise.\n\t* javax/swing/plaf/basic/BasicLabelUI.java: Likewise.\n\t* javax/swing/plaf/basic/BasicLookAndFeel.java: Likewise.\n\t* javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java: Likewise.\n\t* javax/swing/plaf/basic/BasicProgressBarUI.java: Likewise.\n\t* javax/swing/plaf/basic/BasicScrollBarUI.java: Likewise.\n\t* javax/swing/plaf/basic/BasicSeparatorUI.java: Likewise.\n\t* javax/swing/text/JTextComponent.java: Likewise.\n\n2004-08-31  David Jee  <djee@redhat.com>\n\n\tPR AWT/16682\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n\t(setIconImage): Add a FIXME for unhandled cases.\n\n2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\tPR AWT/16040\n\t* gnu/awt/LightweightRedirector.java: Call getModifiersEx, not\n\tgetModifiers.  Replace old button masks with new ones.\n\t* gnu/awt/xlib/XEventLoop.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkListPeer.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java: Likewise.\n\t* java/awt/AWTKeyStroke.java: Remove old modifier masks.\n\t* java/awt/Component.java: Replace old modifier\tmasks with new\n\tones.\n\t* java/awt/Container.java: Call getModifiersEx, not\n\tgetModifiers.\n\t* java/awt/DefaultKeyboardFocusManager.java: Likewise.  Remove\n\told modifier masks.\n\t* javax/swing/JMenuItem.java: Replace old button masks with new\n\tones.\n\t* javax/swing/KeyStroke.java: Call getModifiersEx, not\n\tgetModifiers.\n\t* javax/swing/SwingUtilities.java: Likewise.\n\t* javax/swing/plaf/basic/BasicButtonListener.java: Likewise.\n\t* javax/swing/plaf/basic/BasicInternalFrameUI.java: Likewise.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c: Replace old\n\tmask macros with new ones.\n\t* jni/gtk-peer/gtkpeer.h: Replace old button and modifier mask\n\tmacros with new ones representing new masks.\n\n2004-08-31  Craig Black  <craig.black@aonix.com>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics.java\n\t(drawRoundRect): Implemented.\n\t(fillRoundRect): Implemented.\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n\t(drawRoundRect): Reimplemented to match GdkGraphics.\n\t(fillRoundRect): Reimplemented to match GdkGraphics.\n\n2004-08-31  Mark Wielaard  <mark@klomp.org>\n\n\t* Makefile.in: Regenerated.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/EmbeddedWindow.java\n\t(addNotify): Use AccessController to allow execution of privileged\n\tcode.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/EmbeddedWindow.java\n\t(static): Removed.\n\t(addNotify): Set peer via reflection.\n\t(setWindowPeer): Removed.\n\t* gnu/java/awt/natEmbeddedWindow.cc: Removed.\n\t* Makefile.am (nat_source_files):\n\tRemoved gnu/java/awt/natEmbeddedWindow.cc.\n\n2004-08-31  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* Makefile.am: Add  gnu/java/security/action/GetPropertyAction.java\n\tand gnu/java/security/action/SetAccessibleAction.java.\n\n2004-08-31  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* gnu/java/security/action/GetPropertyAction.java (setParameters):\n\tRenamed from 'setName'. New 2-argument form with default value.\n\t(run): Pass default 'value' parameter to System.getProperty().\n\t* gnu/java/security/action/SetAccessibleAction.java: Fix javadoc\n\ttypos.\n\n2004-08-31  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* gnu/java/security/action/GetPropertyAction.java: New class.\n\t* gnu/java/security/action/SetAccessibleAction.java: New class.\n\n2004-08-31  David Jee  <djee@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n\t(setIconImage): Check if image is null.\n\n2004-08-31  David Jee  <djee@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n\t(create): Set the icon image.\n\t(nativeSetIconImage): New native method declaration.\n\t(setIconImage): Implement.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n\t(nativeSetIconImage): New function.\n\n2004-08-31  Dalibor Topic <robilad@kaffe.org>\n\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n\t(filenameFilterCallback): Declare local variable accepted before use.\n\n2004-08-31  Dalibor Topic <robilad@kaffe.org>\n\n\t* gnu/java/awt/ComponentDataBlitOp.java:\n\tCleaned up imports.\n\n2004-08-31  Tom Tromey  <tromey@redhat.com>\n\n\t* gnu/java/awt/peer/GLightweightPeer.java,\n\tgnu/java/awt/peer/gtk/GdkGraphics2D.java,\n\tgnu/java/awt/peer/gtk/GtkComponentPeer.java,\n\tjavax/swing/JScrollPane.java: Removed\n\tredundant imports.\n\n2004-08-31  David Jee  <djee@redhat.com>\n\n\t* java/awt/DefaultKeyboardFocusManager.java\n\t(postProcessKeyEvent): Only activate MenuShortcuts on KEY_PRESSED\n\tevent.  Fix shift modifier checking.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c\n\t(accel_attach): Remove.\n\t(setupAccelGroup): Remove calls to accel_attach.\n\n2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkArg.java: Remove file.\n\t* gnu/java/awt/peer/gtk/GtkArgList.java: Remove file.\n\n\t* Makefile.am (gtk_awt_peer_sources): Remove GtkArg.java and\n\tGtkArgList.java.\n\t(gtk_c_files): Use CAIRO_CFLAGS and PANGOFT2_CFLAGS, not _LIBS.\n\t* Makefile.in: Regenerate.\n\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n\t(create(String)): New method.\n\t(create): Call new create method.\n\t(getArgs): Remove method.\n\t* gnu/java/awt/peer/gtk/GtkCheckboxPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c\n\t(nativeCreate): Rename to create.\n\t(gtkSetLabel): Rename to gtkButtonSetLabel.\n\t(gtkToggleButtonSetActive): New method.\n\t(create): Call gtkToggleButtonSetActive and gtkButtonSetLabel.\n\t(setState): Replace set call with gtkToggleButtonSetActive.\n\t(setLabel): Replace gtkSetLabel call with gtkButtonSetLabel.\n\t(getArgs): Remove method.\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n\t(gtkWidgetSetSensitive): New method.\n\t(gtkWidgetSetParent): Likewise.\n\t(GtkComponentPeer): Call setParent, setComponentBounds and\n\tsetVisibleAndEnabled.\n\t(setParent): New method.\n\t(setComponentBounds): New method.\n\t(setVisibleAndEnabled): New method.\n\t(setEnabled): Call gtkWidgetSetSensitive.\n\t(getArgs): Remove method.\n\tRemove all set methods.\n\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java (create): Call\n\tgtkWindowSetModal, setTitle and setResizable.\n\t(getArgs): Remove method.\n\t* gnu/java/awt/peer/gtk/GtkFileDialogPeer.java\n\t(setComponentBounds): New method.\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (setResizable):\n\tReplace set call with gtkWindowSetResizable.\n\t(getArgs): Remove method.\n\t(create): Call setTitle and setResizable.\n\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n\t(gtkWindowSetTitle): New method.\n\t(gtkWindowSetResizable): New method.\n\t(gtkWindowSetModal): New method.\n\t(setParent): New method.\n\t(setVisibleAndEnabled): New method.\n\t(getArgs): Remove method.\n\t(setTitle): Call gtkWindowSetTitle.\n\t(setResizable): Call gtkWindowSetResizable.\n\t* jni/gtk-peer/gtkpeer.h [DEBUG_LOCKING]: New define to turn on\n\tand off locking instrumentation.\n\n2004-08-31  Kim Ho  <kho@redhat.com>\n\n\t* Makefile.am: Add new file.\n\t* Makefile.in: Regenerate.\n\t* gcj/Makefile.in: Regenerate\n\t* include/Makefile.in:\n\t* java/awt/Container.java:\n\t(acquireComponentForMouseEvent): Respect\n\tthe event mask when looking for candidate.\n\t* javax/swing/JComponent.java:\n\tRemove toolTip field.\n\t(createToolTip): Create a tooltip on demand.\n\t(setToolTipText): Register with the ToolTipManager.\n\t(getToolTipText(MouseEvent)): Return getToolTipText().\n\t* javax/swing/JToolTip.java: Implement.\n\t* javax/swing/Timer.java: Jalopy.\n\t(restart): Call stop, then start.\n\t(stop): Interrupt the timer rather than wait for\n\tthe timer to come to a stop naturally.\n\t* javax/swing/ToolTipManager.java: Implement.\n\t* javax/swing/plaf/basic/BasicLookAndFeel.java:\n\tChange ToolTip.background color.\n\t* javax/swing/plaf/basic/BasicToolTipUI.java:\n\tImplement.\n\t* testsuite/Makefile.in: Regenerate\n\n2004-08-31  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/image/DirectColorModel.java (DirectColorModel): Fix\n\tconstructor param comments.\n\n2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* java/awt/Component.java: Document AWT 1.0 event handler\n\tmethods.\n\n2004-08-31  Roman Kennke  <roman@ontographics.com>\n\n\t* javax/swing/Box.java:\n\t(createGlue): Implemented\n\t(createHorizontalGlue): Implemented\n\t(createHorizontalStrut): Implemented\n\t(createVerticalGlue): Implemented\n\t(createVerticalStrut): Implemented\n\n2004-08-31  David Jee  <djee@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkChoicePeer.java\n\t(GtkChoicePeer): Do not automatically select first item.\n\t(getHistory): Remove.\n\t(nativeGetSelected): New method.\n\t(nativeRemoveAll): New method.\n\t(add): Use nativeGetSelected() instead of getHistory().\n\t(remove): Likewise.\n\t(removeAll): Call nativeRemoveAll().\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n\t(create): Migrate to GtkComboBox.\n\t(append): Likewise.\n\t(nativeAdd): Likewise.\n\t(nativeRemove): Likewise.\n\t(select): Likewise.\n\t(nativeRemoveAll): New method.\n\t(nativeGetSelected): New method.\n\t(selection_changed): New method.\n\t(getHistory): Remove.\n\t(item_activate): Remove.\n\t(item_removed): Remove.\n\t(connect_choice_item_selectable_hook): Remove.\n\n2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java (create): Use tf\n\tvariable in setEditable call.\n\n\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c\n\t(gtkWidgetSetBackground): New method.\n\t(gtkWidgetSetForeground): Likewise.\n\t(create): Set peer's editable state based on awtComponent's.\n\n\t* java/awt/Button.java (Button()): Use empty string rather than\n\tnull in no-label constructor.\n\n2004-08-31  Roman Kennke  <roman@ontographics.com>\n\n\t* javax/swing/BoxLayout.java: Reimplement.\n\n2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics.java,\n\tgnu_java_awt_peer_gtk_GdkGraphics.c\n\t(initState(GtkComponentPeer)): Don't return array of colour\n\tvalues.\n\t(GdkGraphics(int,int)): Set default font to size 12.\n\t(GdkGraphics(GtkComponentPeer)): Set graphics colour to\n\tcomponent's foreground colour.\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java,\n\tgnu_java_awt_peer_gtk_GdkGraphics2D.c\n\t(initState(GtkComponentPeer)): Don't return array of colour\n\tvalues.\n\t(GdkGraphics2D(GtkComponentPeer)): Set foreground and background\n\tcolours to component's colours.\n\t(current_colors_of_widget): Remove function.\n\t* gnu/java/awt/peer/gtk/GtkOffScreenImage.java (getGraphics):\n\tReturn a new graphics object.\n\t* java/awt/Font.java (toString): Fix format.\n\t* java/awt/Graphics.java (toString): Likewise.\n\n2004-08-31  Craig Black  <craig.black@aonix.com>\n\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c\n\t(addTearOff): New function.\n\t* gnu/java/awt/peer/gtk/GtkMenuPeer.java (addTearOff):\n\tNew native method.\n\t(init): Call addTearOff() when menu.isTearOff().\n\n2004-08-31  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* gnu/java/awt/ClasspathToolkit.java (createImageProducer): New.\n\tDefault implementation.\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java (createImageProducer): New.\n\tImplement using GdkPixbufDecoder.\n\n2004-08-31  David Jee  <djee@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n\t(GtkComponentPeer): Use gtkWidgetGetPreferredDimensions() for\n\tsetting the size of GtkFileDialogPeers.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n\t(gtkWidgetGetPreferredDimensions): For widgets extending GtkWindow,\n\tuse their default sizes rather than their natural requisitions.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JFormattedTextField.java\n\t(JFormattedTextField): Implemented.\n\t* javax/swing/text/DefaultEditorKit.java\n\t(BeepAction): New inner class.\n\t* javax/swing/text/Segment.java\n\t(partialReturn): New field.\n\t(setPartialReturn): New method.\n\t(isPartialReturn): Likewise.\n\t* javax/swing/text/View.java\n\t(createFragment): Fixed typo.\n\t(getStartOffset): New method.\n\t(getEndOffset): Likewise.\n\n2004-08-31  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/table/DefaultTableColumnModel.java\n\t(serialVersionUID): Made private.\n\t(listenerList): Initialize.\n\t(changeEvent): Initialize.\n\t* javax/swing/table/JTableHeader.java\n\t(JTableHeader): New constructors.\n\t(createDefaultColumnModel): New method.\n\t* javax/swing/table/TableColumn.java\n\t(setHeaderRenderer): Simplified code.\n\t(setCellRenderer): Likewise.\n\t(setWidth): Likewise.\n\nFrom-SVN: r86956", "tree": {"sha": "a420c1005dbef38d790847b62b0d57eb9bc758cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a420c1005dbef38d790847b62b0d57eb9bc758cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57579172585eae4fd6f57c0dbd55ea998ddfb63f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57579172585eae4fd6f57c0dbd55ea998ddfb63f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57579172585eae4fd6f57c0dbd55ea998ddfb63f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57579172585eae4fd6f57c0dbd55ea998ddfb63f/comments", "author": null, "committer": null, "parents": [{"sha": "1e8964cf94aa8b0e7176434d7b31fbf040416764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e8964cf94aa8b0e7176434d7b31fbf040416764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e8964cf94aa8b0e7176434d7b31fbf040416764"}], "stats": {"total": 21494, "additions": 15578, "deletions": 5916}, "files": [{"sha": "f717644a8962454c7de96d69e45848e2975da78e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 1171, "deletions": 0, "changes": 1171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,3 +1,1174 @@\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicTextAreaUI.java\n+\t(create): New method.\n+\t* javax/swing/text/DefaultHighlighter.java\n+\t(DefaultHighlightPainter.debugRect): Removed.\n+\t* javax/swing/text/StyleContext.java\n+\t(DEFAULT_STYLE): New field.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n+\t(initComponentDefaults): Add keybindings for selection.backward and\n+\tselection-forward for text components.\n+\t* javax/swing/plaf/basic/BasicTextUI.java\n+\t(paintSafely): Paint highlight only when something is actually\n+\tselected.\n+\t* javax/swing/text/DefaultCaret.java\n+\t(handleHighlight): New method.\n+\t(setSelectionVisible): Don't do anything when nothing changes.\n+\tHandle highlight.\n+\t(moveDot): Reimplemented. Handle highlight.\n+\t(setDot): Set mark too. Handle highlight.\n+\t(getSelectionPainter): New method.\n+\t* javax/swing/text/DefaultEditorKit.java\n+\t(defaultActions): Added new actions for text selection.\n+\t* javax/swing/text/DefaultHighlighter.java\n+\t(DefaultHighlightPainter): New inner class.\n+\t(DefaultPainter): New field.\n+\t(paint): Implemented.\n+\t* javax/swing/text/PlainView.java\n+\t(paint): Don't draw background here again.\n+\t* javax/swing/text/Utilities.java\n+\t(getTabbedTextWidth): Use width of ' ' instead of 'm' for tabsize.\n+\t(drawTabbedText): Likewise.\n+\n+2004-08-31  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* javax/swing/JComponent.java\n+\t(resetKeyboardActions): Add null checks.\n+\n+2004-08-31  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* javax/swing/DefaultButtonModel.java:\n+\tSkip group notification when no group is set.\n+\n+2004-08-31  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* javax/swing/JColorChooser.java: \n+\tMake a couple inner classes static, for jikes.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicTextUI.java\n+\t(RottView.modelToView): New method.\n+\t(UpdateHandler): Renamed from EventHandler.\n+\t(updateHandler): Renamed from eventHandler.\n+\t(modelToView): Implemented.\n+\t* javax/swing/text/AbstractDocument.java\n+\t(BranchElement.getElement): Return null for non-existing indeces.\n+\t(BranchElement.getElementIndex): Return 0 in some corner cases.\n+\t* javax/swing/text/FieldView.java\n+\t(modelToView): New method.\n+\t* javax/swing/text/PlainView.java\n+\t(modelToView): Made public.\n+\n+2004-08-31  Kim Ho  <kho@redhat.com>\n+\n+\t* Makefile.am: New files.\n+\t* Makefile.in: Regenerate.\n+\t* gcj/Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* java/awt/Color.java: Fix documentation.\n+\t(RGBtoHSB): Use floats for conversions.\n+\t* javax/swing/ButtonGroup.java: Run Jalopy.\n+\t(setSelected): Reimplement.\n+\t* javax/swing/DefaultButtonModel.java: Run Jalopy.\n+\t(changeState): Let ButtonGroup know that the button \n+\tis changing state.\n+\t* javax/swing/JColorChooser.java: Implement.\n+\t* javax/swing/JLabel.java: Run Jalopy.\n+\t* javax/swing/JSpinner.java: Run Jalopy.\n+\t(setValue): New method.\n+\t* javax/swing/JTabbedPane.java: Run Jalopy.\n+\t(removeTabAt): Call correct remove method.\n+\t* javax/swing/SpinnerNumberModel.java: Run Jalopy.\n+\t(getPreviousValue): Compare minimum value.\n+\t* javax/swing/Timer.java: Run Jalopy.\n+\t(run): Comment out println.\n+\t* javax/swing/ToolTipManager.java:\n+\t(mouseMoved): Get new tooltip text for location.\n+\t* javax/swing/colorchooser/AbstractColorChooserPanel.java:\n+\tJalopy and Javadoc.\n+\t* javax/swing/colorchooser/ColorChooserComponentFactory.java:\n+\tImplement.\n+\t* javax/swing/colorchooser/DefaultColorSelectionModel.java:\n+\tRun Jalopy.\n+\t(setSelectedColor): Fire ChangeEvent.\n+\t* javax/swing/colorchooser/DefaultHSBChooserPanel.java:\n+\tNew file. Implement.\n+\t* javax/swing/colorchooser/DefaultPreviewPanel.java:\n+\tDitto.\n+\t* javax/swing/colorchooser/DefaultRGBChooserPanel.java:\n+\tDitto.\n+\t* javax/swing/colorchooser/DefaultSwatchChooserPanel.java:\n+\tDitto.\n+\t* javax/swing/plaf/basic/BasicArrowButton.java:\n+\t(getArrow): Fix size of upward pointing button.\n+\t* javax/swing/plaf/basic/BasicColorChooserUI.java:\n+\tImplement.\n+\t* javax/swing/plaf/basic/BasicSliderUI.java:\n+\t(getWidthOfWidestLabel): Use preferred dimensions.\n+\t(getHeightOfTallestLabel): Ditto.\n+\t* javax/swing/plaf/basic/BasicSpinnerUI.java:\n+\tRun Jalopy.\n+\t(mousePressed): Disable changes to spinner if it is not enabled.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicTableHeaderUI.java,\n+\tjavax/swing/plaf/basic/BasicTableUI.java:\n+\tAdded copyright notice.\n+\n+2004-08-31  Olga Rodimina  <rodimina@redhat.com>\n+\n+\t* Makefile.am: Added new files.\n+\t* Makefile.in: Regenerate.\n+\t* javax/swing/ComboBoxEditor.java: Added javadocs.\n+\t* javax/swing/ComboBoxModel.java: Likewise.\n+\t* javax/swing/DefaultComboBoxModel.java: Implemented.\n+\t* javax/swing/DefaultListCellRenderer.java: Added javadocs\n+\tand ran through jalopy to fix formatting style.\n+\t(getListCellRendererComponent): Use appropriate border\n+\tif renderer has focus and use noFocusBorder when it doesn't.\n+\t* javax/swing/JComboBox.java: Implemented.\n+\t* javax/swing/JList.java:\n+\t(locationToIndex): New Method. Implemented.\n+\t(indexToLocation): New Method.\n+\t* javax/swing/JPopupMenu.java: \n+\t(visible): New field.\n+\t(isVisible): Changed to use new field above.\n+\t(setVisible): Likewise.\n+\t* javax/swing/MutableComboBoxModel.java: Added javadocs.\n+\t* javax/swing/plaf/basic/BasicArrowButton.java: \n+\t(shadow): Changed default color to Color.gray.\n+\t* javax/swing/plaf/basic/BasicComboBoxUI.java: New File.\n+\tUI delegate for JComboBox.\n+\t* javax/swing/plaf/basic/BasicComboPopup.java: New File.\n+\tPopup menu containing list of JComboBox's items.\n+\t* javax/swing/plaf/basic/BasicComboBoxEditor.java: New File.\n+\t* javax/swing/plaf/basic/BasicComboBoxRenderer.java: New File.\n+\t* javax/swing/plaf/basic/BasicComboBoxUI.java: New File.\n+\t* javax/swing/plaf/basic/BasicComboPopup.java: New File.\n+\t* javax/swing/plaf/basic/BasicPopupMenuUI.java:\n+\t(popupMenuWillBecomeVisible): Set selected path to the first\n+\telement only if it is of type MenuElement. Also fix formatting\n+\tstyle.\n+\t* javax/swing/plaf/basic/ComboPopup.java: Added javadocs and missing\n+\tmethods signatures.\n+\t\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/AbstractDocument.java\n+\t(createBranchElement): Use new constructor of BranchElement.\n+\t(createLeafElement): Renamed arguments.\n+\t(getRootElements): Implemented.\n+\t(BranchElement.start): Removed.\n+\t(BranchElement.end): Likewise.\n+\t(BranchElement.BranchElement): Fixed arguments.\n+\t(BranchElement.getEndOffset): Reimplemented.\n+\t(BranchElement.getStartOffset): Likewis.\n+\t* javax/swing/text/DefaultCaret.java\n+\t(paint): Draw simple vertical line as caret instead of a rectangle.\n+\t* javax/swing/text/JTextComponent.java\n+\t(setText): Use doc directly.\n+\t* javax/swing/text/PlainView.java\n+\t(nextTabStop): Implemented.\n+\t* javax/swing/text/Utilities.java\n+\t(drawTabbedText): nextTabStop() returns an absolute x position.\n+\t(getTabbedTextWidth): Likewise.\n+\n+2004-08-31  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* java/awt/Component.java \n+\t(isFocusTraversable): Predicate on isLightweight()\n+\t(setFocusable): Set isFocusTraversableOverridden.\n+\t(requestFocus): Predicate peer dispatch on !isLightweight()\n+\t(requestFocusInWindow): Likewise.\n+\t(dispatchEventImpl): Coordinate with KeyboardFocusManager.\n+\t* java/awt/Container.java\n+\t(dispatchEventImpl): Predicate on event mask.\n+\t(LightweightDispatcher): Remove focus machinery.\n+\t* java/awt/DefaultFocusTraversalPolicy.java\n+\t(accept): Expand predicate to include isFocusable(). \n+\t* java/awt/DefaultKeyboardFocusManager.java:\n+\tGlobally change c.dispatchEvent(e) to redispatchEvent(c,e)\n+\t* java/awt/KeyboardFocusManager.java\n+\t(redispatchEvent): Synchronize on event to prevent feedback.\n+\t* javax/swing/AbstractButton.java\n+\t(ButtonFocusListener): Remove class.\n+\t(init): Set focusPainted, focusable.\n+\t* javax/swing/ActionMap.java (get): Check parent for null. \n+\t* javax/swing/InputMap.java (get): Likewise. \n+\t* javax/swing/JComponent.java\n+\t(inputMap_whenFocused): New InputMap.\n+\t(inputMap_whenAncestorOfFocused): Likewise.\n+\t(inputMap_whenInFocusedWindow): Likewise.\n+\t(getActionForKeyStroke): Rewrite.\n+\t(getConditionForKeystroke): Likewise.\n+\t(ActionListenerProxy): New private class.\n+\t(setInputMap): Implement.\n+\t(getInputMap): Likewise.\n+\t(setActionMap): Likewise.\n+\t(getActionMap): Likewise.\n+\t(processComponentKeyEvent): New empty method.\n+\t(processKeyEvent): Implement.\n+\t(processKeyBinding): Likewise.\n+\t(resetKeyboardActions): Rewrite.\n+\t* javax/swing/KeyStroke.java: Rewrite.\n+\t* javax/swing/SwingUtilities.java\n+\t(notifyAction): Implement.\n+\t(replaceUIActionMap): Likewise.\n+\t(replaceUIInputMap): Likewise.\n+\t* javax/swing/plaf/basic/BasicButtonListener.java\n+\t(focusGained): Implement.\n+\t(focusLost): Repaint if focusPainted().\n+\t(installKeyboardActions): Install pressed / released actions.\n+\t(uninstallKeyboardActions): Implement.\n+\t* javax/swing/plaf/basic/BasicButtonUI.java\n+\t(focusColor): New field.\n+\t(installDefaults): Load focus color, install input map.\n+\t(installKeyboardActions): Implement.\n+\t(uninstallKeyboardActions): Likewise.\n+\t(paintFocus): Rewrite.\n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n+\t(Button.focus): New default, midPurple. \n+\t* javax/swing/plaf/basic/BasicTextUI.java\n+\t(kit): Make static.\n+\t(installUI): Get doc from kit, load defaults.\n+\t(getKeymapName): Implement.\n+\t(createKeymap): Likewise.\n+\t(installKeyboardActions): Likewise.\n+\t(getInputMap): Likewise.\n+\t(getActionMap): Likewise.\n+\t(createActionMap): Likewise.\n+\t* javax/swing/text/AbstractDocument.java\n+\t(getStartPosition): Implement.\n+\t(getEndPosition): Likewise.\n+\t* javax/swing/text/DefaultEditorKit.java\n+\t(CopyAction): New class.\n+\t(CutAction): Likewise.\n+\t(DefaultKeyTypedAction): Likewise.\n+\t(InsertBreakAction): Likewise.\n+\t(InsertContentAction): Likewise.\n+\t(InsertTabAction): Likewise.\n+\t(PasteAction): Likewise.\n+\t(defaultActions): New static table.\n+\t(createCaret): Implement.\n+\t(getActions): Likewise.\n+\t* javax/swing/text/JTextComponent.java\n+\t(KeymapWrapper): New private class.\n+\t(KeymapActionMap): Likewise.\n+\t(DefaultKeymap): New class.\n+\t(keymaps): New static table.\n+\t(keymap): New field.\n+\t(getKeymap): Implement.\n+\t(removeKeymap): Likewise.\n+\t(addKeymap): Likewise.\n+\t(setKeymap): Likewise.\n+\t(loadKeymap): Likewise.\n+\t(getActions): Likewise.\n+\t(margin): New field.\n+\t(JTextComponent): Build and install default keymap.\n+\t* javax/swing/text/TextAction.java\n+\t(textAction): Call super properly.\n+\t(getTextComponent): Implement.\n+\t* javax/swing/text/Utilities.java\n+\t(drawTabbedText): Adjust position by ascent.\n+\n+2004-08-31  David Jee  <djee@redhat.com>\n+\n+\tPR AWT/17156\n+\n+\t* gnu/java/awt/peer/gtk/GtkMenuItemPeer.java\n+\t(setEnabled): Make it a native method.\n+\t* java/awt/DefaultKeyboardFocusManager.java\n+\t(postProcessKeyEvent): Only post event if the menu item\n+\tis active.\n+\t* java/awt/MenuItem.java:\n+\tPrivate field 'enabled' should be true by default.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c\n+\t(setEnabled): New function.\n+\n+2004-08-31  David Jee  <djee@redhat.com>\n+\n+\tPR AWT/17059\n+\n+\t* gnu/java/awt/peer/gtk/GtkMenuBarPeer.java\n+\t(nativeSetHelpMenu): New native method declaration.\n+\t(addHelpMenu): Call nativeSetHelpMenu().\n+\t(addMenu): Remove.\n+\t* java/awt/MenuBar.java\n+\t(setHelpMenu): Call addNotify() on the new help menu.\n+\t(add): Call addNotify() on the new menu.\n+\t(addNotify): Set the help menu if one exists.\n+\t* java/awt/peer/MenuBarPeer.java\n+\t(addMenu): Remove.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c\n+\t(nativeSetHelpMenu): New method.\n+\n+2004-08-31  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* Makefile.am: Add new files.\n+\t* Makefile.in: Regenerate.\n+\t* javax/swing/Box.java: Fix setting of layout in ctor.\n+\t* javax/swing/JScrollPane.java: Scroll headers as well.\n+\t* javax/swing/JTable.java: Reimplement.\n+\t* javax/swing/JViewPort.java: Only add non-null children.\n+\t* javax/swing/ScrollPaneLayout.java: Correct header calculations.\n+\t* javax/swing/Timer.java: Fix stopping null waker.\n+\t* javax/swing/plaf/basic/BasicTableHeaderUI.java: New file.\n+\t* javax/swing/plaf/basic/BasicTableUI.java: New file.\n+\t* javax/swing/table/DefaultTableCellRenderer.java: Configure.\n+\t* javax/swing/table/DefaultTableColumnModel.java: Flesh out.\n+\t* javax/swing/table/DefaultTableModel.java: Clean up.\n+\t* javax/swing/table/JTableHeader.java: Implement.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* javax/swing/JSpinner.java (getChangeListeners): Remove double\n+\tsemi-colon.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c:\n+\tDeclare variables at top of functions/block.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c: Likewise.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/lang/Rectangle.java (intersects): Check r.width and r.height\n+\tfirst.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/PlainView.java\n+\t(selectedColor): New field.\n+\t(unselectedColor): Likewise.\n+\t(font): Likewise.\n+\t(updateMetrics): New method.\n+\t(lineToRect): Likewise.\n+\t(modelToView): Likewise.\n+\t(drawSelectedText): Use color from JTextComponent ad draw with\n+\tUtilities class.\n+\t(drawUnselectedText): Likewise.\n+\t(paint): Initialize helper fields.\n+\t* javax/swing/text/View.java\n+\t(getChildAllocation): New method.\n+\t(getViewIndex): Likewise.\n+\t(getToolTipText): Likewise.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/Utilities.java\n+\t(drawTabbedText): Reimplemented.\n+\t(getTabbedTextWidth): Likewise.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicTextUI.java\n+\t(installDefaults): Install caret and highlighter.\n+\t(modelToView): Use Bias.Forward when calling sibling.\n+\t* javax/swing/text/AbstractDocument.java\n+\t(ElementEdit): Implements DocumentEvent.ElementChange.\n+\t(ElementEdit.ElementEdit): New method.\n+\t(ElementEdit.getChildrenAdded): Likewise.\n+\t(ElementEdit.getChildrenRemoved): Likewise.\n+\t(ElementEdit.getElement): Likewise.\n+\t(ElementEdit.getIndex): Likewise.\n+\t* javax/swing/text/DefaultCaret.java\n+\t(color): Removed.\n+\t(textComponent): Renamed from parent, made private.\n+\t(selectionVisible): Renamed from vis_sel, made private.\n+\t(blinkRate): Renamed from blink, made private.\n+\t(magicCaretPosition): Renamed from magic, made private.\n+\t(visible): Renamed from vis, made private.\n+\t(dot): Made private.\n+\t(mark): Likewise.\n+\t(deinstall): Remove as MouseMotionListener.\n+\t(install): Initialize textComponent first. Add as MouseMotionListener.\n+\t(paint): Reimplemented.\n+\t* javax/swing/text/JTextComponent.java\n+\t(setCaret): Deinstall old caret, install new one and fire property\n+\tchange after setting property.\n+\t(setHighlighter): Deinstall old highlighter, install new one and fire\n+\tproperty change after setting property.\n+\t(setCaretColor): Fire property change after setting property.\n+\t(setDisabledTextColor): Likewise.\n+\t(setSelectedTextColor): Likewise.\n+\t(setSelectionColor): Likewise.\n+\t(modelToView): New method.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/AbstractDocument.java\n+\t(getText): Simplified.\n+\t* javax/swing/text/Segment.java\n+\t(current): New field.\n+\t(current): Reimplemented.\n+\t(first): Likewise.\n+\t(getIndex): Likewise.\n+\t(last): Likewise.\n+\t(next): Likewise.\n+\t(previous): Likewise.\n+\t(setIndex): Likewise.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicButtonUI.java\n+\t(defaultTextIconGap): Made protected.\n+\t(defaultTextShiftOffset): Likewise.\n+\t(textShiftOffset): New field.\n+\t(clearTextShiftOffset): New method.\n+\t(getTextShiftOffset): Likewise.\n+\t(setTextShiftOffset): Likewise.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicTextUI.java\n+\t(installUI): Add eventHandler as property listener.\n+\t(uninstallUI): remove eventHandler as propert listener.\n+\t(installDefaults): Added comment.\n+\t(installListeners): Likewise.\n+\t(installKeyboardActions): Likewise.\n+\t(uninstallDefaults): Likewise.\n+\t(uninstallListeners): Likewise.\n+\t(uninstallKeyboardActions): Likewise.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/AbstractDocument.java:\n+\tFixed some typos in comments.\n+\t(insertString): Reimplemented.\n+\t(remove): Likewise.\n+\t(replace): New method.\n+\t(children): Dont use fully qualified class name.\n+\t(DefaultDocumentEvent.offset): Renamed from off.\n+\t(DefaultDocumentEvent.length): Renamed from len.\n+\t(DefaultDocumentEvent.type): New field.\n+\t(DefaultDocumentEvent.DefaultDocumentEvent): New constructor.\n+\t(DefaultDocumentEvent.getType): Implemented.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicTextUI.java\n+\t(RootView.textComponent): Removed.\n+\t(RootView.RootView): Don't initialize textComponent.\n+\t(RootView.getViewFactory): New method.\n+\t(EventHandler): New inner class.\n+\t(rootView): Initialize at instance creation.\n+\t(eventHandler): New field.\n+\t(installUI): Don't create view hierarchy directly,\n+\tcall modelChanged() instead.\n+\t(modelChanged): New method.\n+\t* javax/swing/text/JTextComponent.java\n+\t(setDocument): Fire property change event.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicTextUI.java\n+\t(RootView.paint): Removed debug output.\n+\t(paintSafely): Draw highlighter before text.\n+\t(paintBackground): Use background color of text component.\n+\t* javax/swing/plaf/basic/BasicToggleButtonUI.java:\n+\tReformatted.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicToolBarUI.java\n+\t(BasicToolBarUI): Fixed arguments for constructor.\n+\t(createUI): Fixed creation of object.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultListSelectionModel.java\n+\t(fireValueChanged): Renamed from fireSelectionValueChanged,\n+\tmade protected.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/TabSet.java\n+\t(TabSet): Implements java.io.Serializable.\n+\t* javax/swing/text/TabStop.java\n+\t(TabStop): Implements java.io.Serializable.\n+\t(TabStop): Made public.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JComponent.java\n+\t(setUI): Fire PropertyChange.\n+\t* javax/swing/JLabel.java\n+\t(text): Renamed from labelText.\n+\t(horizontalAlignment): New default vlaue.\n+\t(icon): Renamed from activeIcon.\n+\t(displayedMnemonic): Renamed from mnemonicKey, added default value.\n+\t(displayedMnemonicIndex): Renamed from underlineChar.\n+\t(setDisplayedMnemonic): Reimplemented.\n+\t* javax/swing/JRadioButton.java\n+\t(JRadioButton): New constructors.\n+\t* javax/swing/JTextField.java\n+\t(JTextField): Throw exception if colums < 0, initialitialz\n+\tthis.columns directly and initialize document with text conditionally.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicFormattedTextFieldUI.java,\n+\tjavax/swing/plaf/basic/BasicPasswordFieldUI.java,\n+\tjavax/swing/plaf/basic/BasicTextAreaUI.java: New files.\n+\t* javax/swing/text/FieldView.java\n+\t(paint): Just call super method for now.\n+\t* Makefile.am: Added new files.\n+\t* Makefile.in: Regenerated.\n+\n+2004-08-31  Ka-Hing Cheung  <kahing@javabsp.org>\n+\n+\t* javax/swing/AbstractSpinnerModel.java,\n+\tjavax/swing/JSpinner.java,\n+\tjavax/swing/SpinnerNumberModel.java,\n+\tjavax/swing/plaf/basic/BasicSpinnerUI.java:\n+\tNew files.\n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n+\t(initClassDefaults): Added defaults for BasicSpinnerUI.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* Makefile.am: Added new files.\n+\t* Makefile.in: Regenerated.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/TransferHandler.java,\n+\tjavax/swing/plaf/basic/ComboPopup.java: New files\n+\t* Makefile.am: Added javax/swing/TransferHandler.java and\n+\tjavax/swing/plaf/basic/ComboPopup.java\n+\t* Makefile.in: Regenerated.\n+\n+2004-08-31  Roman Kennke  <roman@ontographics.com>\n+\n+\t* javax/swing/text/Utilities.java: New file.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* Makefile.am: Added javax/swing/text/Utilities.java.\n+\t* Makefile.in: Regenerated.\n+\n+2004-08-31  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* javax/swing/text/SimpleAttributeSet.java: New file.\n+\t* javax/swing/text/StyleConstants.java: New file.\n+\t* javax/swing/text/StyleContext.java: New file.\n+\t* javax/swing/text/TabSet.java: New file.\n+\t* javax/swing/text/TabStop.java: New file.\n+\t* javax/swing/text/AbstactDocument.java:\n+\t(AbstractElement): Implement attribute support.\n+\t* javax/swing/text/AttributeSet.java\n+\t(NameAttribute): New static field.\n+\t(ResolveAttribute): New static field.\n+\t* Makefile.am: Update for new files.\n+\t* Makefile.in: Regenerate.\n+\n+2004-08-31  Craig Black  <craig.black@aonix.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java \n+\t(drawImage): Add support for scaling pixmaps.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n+\t(copyAndScalePixmap): New native method.\n+ \n+2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\tPR AWT/16121\n+\t* jni/gtk-peer/gthread-jni.c: Include stdio.h.  Eliminate\n+\ttype-punning compiler warnings using unions.\n+\t(throw): Replace bzero with memset.\n+\n+2004-08-31  Andreas Tobler  <a.tobler@schweiz.ch>\n+\t    Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c: Move\n+\tNSA_PB macros to gtkpeer.h.  Include gtkpeer.h.\n+\t* jni/gtk-peer/gtkpeer.h: Move NSA_PB macros here.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(nativeSetIconImageFromDecoder): Use NSA_GET_PB_PTR macro.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c:\n+\t#include gdk.h, not gtk.h. #include jni.h, native_state.h, string.h\n+\tand stdlib.h, not gtkpeer.h.\n+\t(*vm): New static variable.\n+\t(areaPreparedID): Make static.\n+\t(areaUpdatedID): Likewise.\n+\t(area_prepared): Get and use JNIEnv through stored JavaVM *vm.\n+\t(area_prepared): Likewise.\n+\t(area_updated): Likewise.\n+\t(closed): Likewise.\n+\t(initStaticState): Initialize *vm javaVM.\n+\t(pumpBytes): Use given env, not global gdk_env.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/awt/geom/CubicCurve2D.java (solveCubic): Removed duplicate\n+\tcomments.\n+\n+2004-08-31  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/geom/CubicCurve2D.java: Reindent.\n+\t(contains): Implemented.\n+\t(intersects): Implemented.\n+\t* java/awt/geom/QuadCurve2D.java: Likewise.\n+\t* java/awt/geom/GeneralPath.java: Reindent and document.\n+\tFully (re)implemented using separate xpoints and ypoints\n+\tfloat[] coords.\n+\t* java/awt/geom/RoundRectangle2D.java: Several bugfixes (Bug #6007).\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JMenuItem.java\n+\t(getMenuDragMouseListeners): New method.\n+\t(getMenuKeyListeners): Likewise.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractButton.java\n+\t(model): Made protected.\n+\t(actionListener): Likewise.\n+\t(changeListener): Likewise.\n+\t(itemListener): Likewise.\n+\t(multiClickThreshhold): New field.\n+\t(getActionListeners): New method.\n+\t(getChangeListeners): Likewise.\n+\t(getItemListeners): Likewise.\n+\t(fireItemStateChanged): Simplified implementation.\n+\t(fireActionPerformed): Likewise.\n+\t(fireStateChanged): Likewise.\n+\t(getMultiClickThreshhold): New method.\n+\t(setMultiClickThreshhold): Likewise.\n+\n+2004-08-31  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/awt/image/Kernel.java (clone): Use super.clone().\n+\n+2004-08-31  David Jee  <djee@redhat.com>\n+\n+\tPR AWT/16682\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n+\t(nativeSetIconImage): Rename to nativeSetIconImageFromDecoder.\n+\t(nativeSetIconImageFromData): New native method declaration.\n+\t(setIconImage): Handle images not produced from GdkPixbufDecoder.\n+\t* gnu/java/awt/peer/gtk/GtkImage.java\n+\t(getPixelCache): New method.\n+\t(getColorModel): New method.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(nativeSetIconImage): Rename to nativeSetIconImageFromDecoder.\n+\t(free_pixbuf_data): New helper function.\n+\t(nativeSetIconImageFromData): New function.\n+\n+2004-08-31  Graydon Hoare  <graydon@redhat.com>\n+\n+\tPR SWING/16576\n+\t* javax/swing/JLayeredPane.java \n+\t(setLayer): Permit changing layer after addition.\n+\t(setPosition): Permit over-length positions.\n+\t(layerToRange): Compare intValue()s.\n+\t* javax/swing/Box.java (createHorizontalBox): Implement.\n+\t(createRigidArea): Likewise.\n+\t(createVerticalBox): Likewise.\n+\n+2004-08-31  Kim Ho  <kho@redhat.com>\n+\n+\t* java/awt/Component.java:\n+\t(processMouseEvent): Consume event after\n+\tlisteners process it.\n+\t(processMouseMotionEvent): ditto.\n+\t(processMouseWheelEvent): ditto.\n+\t* java/awt/Container.java:\n+\t(acquireComponentForMouseEvent):\n+\tDo not dispatch to events that have been\n+\tremoved from the Container.\n+\t(handleEvent): Consume the MouseEvents.\n+\t* javax/swing/RepaintManager.java:\n+\t(paintDirtyRegions): Do not add to list of \n+\tdamaged areas if the component has no root.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicMenuItemUI.java: Clean ip imports.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java (getFontPeer): Don't return\n+\tnull when a MissingResourceException is thrown. Should never happen.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/awt/EventQueue.java (postEvent): Throw NullPointerException\n+\twhen argument is null.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkComponentPeer_addExposeFilter):\n+\tDefine hid at start of function.\n+\t(Java_gnu_java_awt_peer_gtk_GtkComponentPeer_removeExposeFilter):\n+\tLikewise.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* gnu/java/awt/EmbeddedWindow.java: Reindent.\n+\t* javax/swing/JButton.java: Reindent.\n+\t* javax/swing/JCheckBox.java: Reindent.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* Makefile.am (gtk_c_source_files): Added\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c.\n+\t(gtk_awt_peer_sources): Added\n+\tgnu/java/awt/peer/gtk/GThreadMutex.java and\n+\tgnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java.\n+\t* Makefile.in: Regenerated.\n+\n+2004-08-31  Archie Cobbs  <archie@dellroad.org>\n+\n+\t* jni/gtk-peer/gthread-jni.c: don't #include nonexistent files\n+\n+2004-08-31  Steven Augart  <augart@watson.ibm.com>\n+\n+\t* jni/gtk-peer/gthread-jni.c (c-font-lock-extra-types): \n+\tAdded jfieldID, jmethodID.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit): Initialize\n+\tgdk_env before calling any gdk or gtk function.\n+\n+\t* gnu/java/awt/peer/gtk/GtkMainThread.java (gtkInitCalled): New field.\n+\t(GtkMainThread): Call wait() in while loop waiting for gtkInitCalled.\n+\t(run): Set gtkInitCalled.\n+\n+2004-08-31  Steven Augart  <augart@watson.ibm.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkMainThread.java (run): Pass the value of \n+\tthe gnu.classpath.awt.gtk.portable.native.sync system property to C.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit): New argument,\n+\tportableNativeSync.  Delegate PORTABLE_NATIVE_SYNC work to\n+\tinit_glib_threads. \n+\t(init_glib_threads): New function.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* jni/gtk-peer/gthread-jni.c: Define MIN_, MAX_ and NORM_\n+\tPRIORITY when not already defined in header file.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* jni/gtk-peer/gthread-jni.c (setup_cache): Call\n+\tExceptionOccurred, not ExceptionCheck, when we don't have JNI 1.2.\n+\n+2004-08-31  Steven Augart  <augart@watson.ibm.com>\n+\n+\t* gnu/native/jni/gtk-peer/gthread-jni.c: Indentation fixes.\n+\tImplemented missing functions for GTK2.\n+\tAdded error handling.\n+\tRenamed static functions out of the g_ namespace.\n+\tAdded TRACE_API_CALLS, EXPLAIN_TROUBLE, EXPLAIN_BROKEN, \n+\tEXPLAIN_BADLY_BROKEN, and DELETE_LOCAL_REFS options.\n+\tRewrote global-reference code.\n+\tEliminated cascading errors.\n+\t(mutex_trylock_jni_impl) Fully implemented.\n+\t(cond_timed_wait_jni_impl) Went from millisecond to microsecond\n+\tresolution.\n+\t(setup_cache) New function.\n+\t(mutex_cond_wait_jni_impl, mutex_cond_timed_wait_jni_impl) Fixed\n+\tbug where they were not unlocking the GMutex associated with the\n+\tcondition variable during the wait on that condition variable.\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c,\n+\tnative/jni/gtk-peer/gthread-jni.c,\n+\tnative/jni/gtk-peer/gthread-jni.h\n+\t(g_thread_jni_functions): Renamed to ...\n+\t(portable_native_sync_jni_functions): this name.\n+\t(gdk_vm): Renamed to...\n+\t(the_vm): this name.\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n+\t(gdk_vm): Removed duplicate definition.\n+\t(gtkInit): Removed stray message to stdout.\n+\t(gtkInit): Use g_malloc and g_free instead of malloc and free.\n+\t(gtkInit): Fix a const assignment bug.\n+\t(gtkInit): Simplified code.\n+\n+\t* gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java,\n+\tnative/jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c,\n+\tnative/jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.h,\n+\tgnu/java/awt/peer/gtk/GThreadMutex.java:\n+\tNew files.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* javax/swing/Box.java: Put FIXME comment above class declaration.\n+\t* javax/swing/JButton.java: Remove illegal L&F HTML from comments.\n+\t* javax/swing/JCheckBox.java: Likewise.\n+\t* javax/swing/JDialog.java: Likewise.\n+\t* javax/swing/JRadioButton.java: Likewise.\n+\t* javax/swing/JToggleButton.java: Likewise.\n+\t* javax/swing/UIManager.java: Likewise.\n+\t* javax/swing/border/TitledBorder.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicLabelUI.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicProgressBarUI.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicScrollBarUI.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicSeparatorUI.java: Likewise.\n+\t* javax/swing/text/JTextComponent.java: Likewise.\n+\n+2004-08-31  David Jee  <djee@redhat.com>\n+\n+\tPR AWT/16682\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n+\t(setIconImage): Add a FIXME for unhandled cases.\n+\n+2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\tPR AWT/16040\n+\t* gnu/awt/LightweightRedirector.java: Call getModifiersEx, not\n+\tgetModifiers.  Replace old button masks with new ones.\n+\t* gnu/awt/xlib/XEventLoop.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkListPeer.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java: Likewise.\n+\t* java/awt/AWTKeyStroke.java: Remove old modifier masks.\n+\t* java/awt/Component.java: Replace old modifier\tmasks with new\n+\tones.\n+\t* java/awt/Container.java: Call getModifiersEx, not\n+\tgetModifiers.\n+\t* java/awt/DefaultKeyboardFocusManager.java: Likewise.  Remove\n+\told modifier masks.\n+\t* javax/swing/JMenuItem.java: Replace old button masks with new\n+\tones.\n+\t* javax/swing/KeyStroke.java: Call getModifiersEx, not\n+\tgetModifiers.\n+\t* javax/swing/SwingUtilities.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicButtonListener.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicInternalFrameUI.java: Likewise.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c: Replace old\n+\tmask macros with new ones.\n+\t* jni/gtk-peer/gtkpeer.h: Replace old button and modifier mask\n+\tmacros with new ones representing new masks.\n+\n+2004-08-31  Craig Black  <craig.black@aonix.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java\n+\t(drawRoundRect): Implemented.\n+\t(fillRoundRect): Implemented.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n+\t(drawRoundRect): Reimplemented to match GdkGraphics.\n+\t(fillRoundRect): Reimplemented to match GdkGraphics.\n+\n+2004-08-31  Mark Wielaard  <mark@klomp.org>\n+\n+\t* Makefile.in: Regenerated.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/EmbeddedWindow.java\n+\t(addNotify): Use AccessController to allow execution of privileged\n+\tcode.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/EmbeddedWindow.java\n+\t(static): Removed.\n+\t(addNotify): Set peer via reflection.\n+\t(setWindowPeer): Removed.\n+\t* gnu/java/awt/natEmbeddedWindow.cc: Removed.\n+\t* Makefile.am (nat_source_files):\n+\tRemoved gnu/java/awt/natEmbeddedWindow.cc.\n+\n+2004-08-31  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* Makefile.am: Add  gnu/java/security/action/GetPropertyAction.java\n+\tand gnu/java/security/action/SetAccessibleAction.java.\n+\n+2004-08-31  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* gnu/java/security/action/GetPropertyAction.java (setParameters):\n+\tRenamed from 'setName'. New 2-argument form with default value.\n+\t(run): Pass default 'value' parameter to System.getProperty().\n+\t* gnu/java/security/action/SetAccessibleAction.java: Fix javadoc\n+\ttypos.\n+\n+2004-08-31  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* gnu/java/security/action/GetPropertyAction.java: New class.\n+\t* gnu/java/security/action/SetAccessibleAction.java: New class.\n+\n+2004-08-31  David Jee  <djee@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n+\t(setIconImage): Check if image is null.\n+\n+2004-08-31  David Jee  <djee@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java\n+\t(create): Set the icon image.\n+\t(nativeSetIconImage): New native method declaration.\n+\t(setIconImage): Implement.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(nativeSetIconImage): New function.\n+\n+2004-08-31  Dalibor Topic <robilad@kaffe.org>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n+\t(filenameFilterCallback): Declare local variable accepted before use.\n+\n+2004-08-31  Dalibor Topic <robilad@kaffe.org>\n+\n+\t* gnu/java/awt/ComponentDataBlitOp.java:\n+\tCleaned up imports.\n+\n+2004-08-31  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gnu/java/awt/peer/GLightweightPeer.java,\n+\tgnu/java/awt/peer/gtk/GdkGraphics2D.java,\n+\tgnu/java/awt/peer/gtk/GtkComponentPeer.java,\n+\tjavax/swing/JScrollPane.java: Removed\n+\tredundant imports.\n+\n+2004-08-31  David Jee  <djee@redhat.com>\n+\n+\t* java/awt/DefaultKeyboardFocusManager.java\n+\t(postProcessKeyEvent): Only activate MenuShortcuts on KEY_PRESSED\n+\tevent.  Fix shift modifier checking.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c\n+\t(accel_attach): Remove.\n+\t(setupAccelGroup): Remove calls to accel_attach.\n+\n+2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkArg.java: Remove file.\n+\t* gnu/java/awt/peer/gtk/GtkArgList.java: Remove file.\n+\n+\t* Makefile.am (gtk_awt_peer_sources): Remove GtkArg.java and\n+\tGtkArgList.java.\n+\t(gtk_c_files): Use CAIRO_CFLAGS and PANGOFT2_CFLAGS, not _LIBS.\n+\t* Makefile.in: Regenerate.\n+\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n+\t(create(String)): New method.\n+\t(create): Call new create method.\n+\t(getArgs): Remove method.\n+\t* gnu/java/awt/peer/gtk/GtkCheckboxPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c \n+\t(nativeCreate): Rename to create.\n+\t(gtkSetLabel): Rename to gtkButtonSetLabel.\n+\t(gtkToggleButtonSetActive): New method.\n+\t(create): Call gtkToggleButtonSetActive and gtkButtonSetLabel.\n+\t(setState): Replace set call with gtkToggleButtonSetActive.\n+\t(setLabel): Replace gtkSetLabel call with gtkButtonSetLabel.\n+\t(getArgs): Remove method.\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(gtkWidgetSetSensitive): New method.\n+\t(gtkWidgetSetParent): Likewise.\n+\t(GtkComponentPeer): Call setParent, setComponentBounds and\n+\tsetVisibleAndEnabled.\n+\t(setParent): New method.\n+\t(setComponentBounds): New method.\n+\t(setVisibleAndEnabled): New method.\n+\t(setEnabled): Call gtkWidgetSetSensitive.\n+\t(getArgs): Remove method.\n+\tRemove all set methods.\n+\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java (create): Call\n+\tgtkWindowSetModal, setTitle and setResizable.\n+\t(getArgs): Remove method.\n+\t* gnu/java/awt/peer/gtk/GtkFileDialogPeer.java\n+\t(setComponentBounds): New method.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (setResizable):\n+\tReplace set call with gtkWindowSetResizable.\n+\t(getArgs): Remove method.\n+\t(create): Call setTitle and setResizable.\n+\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(gtkWindowSetTitle): New method.\n+\t(gtkWindowSetResizable): New method.\n+\t(gtkWindowSetModal): New method.\n+\t(setParent): New method.\n+\t(setVisibleAndEnabled): New method.\n+\t(getArgs): Remove method.\n+\t(setTitle): Call gtkWindowSetTitle.\n+\t(setResizable): Call gtkWindowSetResizable.\n+\t* jni/gtk-peer/gtkpeer.h [DEBUG_LOCKING]: New define to turn on\n+\tand off locking instrumentation.\n+\n+2004-08-31  Kim Ho  <kho@redhat.com>\n+\n+\t* Makefile.am: Add new file.\n+\t* Makefile.in: Regenerate.\n+\t* gcj/Makefile.in: Regenerate\n+\t* include/Makefile.in:\n+\t* java/awt/Container.java:\n+\t(acquireComponentForMouseEvent): Respect \n+\tthe event mask when looking for candidate.\n+\t* javax/swing/JComponent.java:\n+\tRemove toolTip field.\n+\t(createToolTip): Create a tooltip on demand.\n+\t(setToolTipText): Register with the ToolTipManager.\n+\t(getToolTipText(MouseEvent)): Return getToolTipText().\n+\t* javax/swing/JToolTip.java: Implement.\n+\t* javax/swing/Timer.java: Jalopy.\n+\t(restart): Call stop, then start.\n+\t(stop): Interrupt the timer rather than wait for\n+\tthe timer to come to a stop naturally.\n+\t* javax/swing/ToolTipManager.java: Implement.\n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java:\n+\tChange ToolTip.background color.\n+\t* javax/swing/plaf/basic/BasicToolTipUI.java:\n+\tImplement.\n+\t* testsuite/Makefile.in: Regenerate\n+\n+2004-08-31  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/image/DirectColorModel.java (DirectColorModel): Fix\n+\tconstructor param comments.\n+\n+2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* java/awt/Component.java: Document AWT 1.0 event handler\n+\tmethods.\n+\n+2004-08-31  Roman Kennke  <roman@ontographics.com>\n+\n+\t* javax/swing/Box.java:\n+\t(createGlue): Implemented\n+\t(createHorizontalGlue): Implemented\n+\t(createHorizontalStrut): Implemented\n+\t(createVerticalGlue): Implemented\n+\t(createVerticalStrut): Implemented\n+\n+2004-08-31  David Jee  <djee@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkChoicePeer.java\n+\t(GtkChoicePeer): Do not automatically select first item.\n+\t(getHistory): Remove.\n+\t(nativeGetSelected): New method.\n+\t(nativeRemoveAll): New method.\n+\t(add): Use nativeGetSelected() instead of getHistory().\n+\t(remove): Likewise.\n+\t(removeAll): Call nativeRemoveAll().\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n+\t(create): Migrate to GtkComboBox.\n+\t(append): Likewise.\n+\t(nativeAdd): Likewise.\n+\t(nativeRemove): Likewise.\n+\t(select): Likewise.\n+\t(nativeRemoveAll): New method.\n+\t(nativeGetSelected): New method.\n+\t(selection_changed): New method.\n+\t(getHistory): Remove.\n+\t(item_activate): Remove.\n+\t(item_removed): Remove.\n+\t(connect_choice_item_selectable_hook): Remove.\n+\n+2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java (create): Use tf\n+\tvariable in setEditable call.\n+\n+\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c\n+\t(gtkWidgetSetBackground): New method.\n+\t(gtkWidgetSetForeground): Likewise.\n+\t(create): Set peer's editable state based on awtComponent's.\n+\n+\t* java/awt/Button.java (Button()): Use empty string rather than\n+\tnull in no-label constructor.\n+\n+2004-08-31  Roman Kennke  <roman@ontographics.com>\n+\n+\t* javax/swing/BoxLayout.java: Reimplement.\n+\n+2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java,\n+\tgnu_java_awt_peer_gtk_GdkGraphics.c\n+\t(initState(GtkComponentPeer)): Don't return array of colour\n+\tvalues.\n+\t(GdkGraphics(int,int)): Set default font to size 12.\n+\t(GdkGraphics(GtkComponentPeer)): Set graphics colour to\n+\tcomponent's foreground colour.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java,\n+\tgnu_java_awt_peer_gtk_GdkGraphics2D.c\n+\t(initState(GtkComponentPeer)): Don't return array of colour\n+\tvalues.\n+\t(GdkGraphics2D(GtkComponentPeer)): Set foreground and background\n+\tcolours to component's colours.\n+\t(current_colors_of_widget): Remove function.\n+\t* gnu/java/awt/peer/gtk/GtkOffScreenImage.java (getGraphics):\n+\tReturn a new graphics object.\n+\t* java/awt/Font.java (toString): Fix format.\n+\t* java/awt/Graphics.java (toString): Likewise.\n+\n+2004-08-31  Craig Black  <craig.black@aonix.com>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c\n+\t(addTearOff): New function.\n+\t* gnu/java/awt/peer/gtk/GtkMenuPeer.java (addTearOff):\n+\tNew native method.\n+\t(init): Call addTearOff() when menu.isTearOff().\n+\n+2004-08-31  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* gnu/java/awt/ClasspathToolkit.java (createImageProducer): New.\n+\tDefault implementation.\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java (createImageProducer): New.\n+\tImplement using GdkPixbufDecoder.\n+\n+2004-08-31  David Jee  <djee@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n+\t(GtkComponentPeer): Use gtkWidgetGetPreferredDimensions() for\n+\tsetting the size of GtkFileDialogPeers.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(gtkWidgetGetPreferredDimensions): For widgets extending GtkWindow,\n+\tuse their default sizes rather than their natural requisitions.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JFormattedTextField.java\n+\t(JFormattedTextField): Implemented.\n+\t* javax/swing/text/DefaultEditorKit.java\n+\t(BeepAction): New inner class.\n+\t* javax/swing/text/Segment.java\n+\t(partialReturn): New field.\n+\t(setPartialReturn): New method.\n+\t(isPartialReturn): Likewise.\n+\t* javax/swing/text/View.java\n+\t(createFragment): Fixed typo.\n+\t(getStartOffset): New method.\n+\t(getEndOffset): Likewise.\n+\n+2004-08-31  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/table/DefaultTableColumnModel.java\n+\t(serialVersionUID): Made private.\n+\t(listenerList): Initialize.\n+\t(changeEvent): Initialize.\n+\t* javax/swing/table/JTableHeader.java\n+\t(JTableHeader): New constructors.\n+\t(createDefaultColumnModel): New method.\n+\t* javax/swing/table/TableColumn.java\n+\t(setHeaderRenderer): Simplified code.\n+\t(setCellRenderer): Likewise.\n+\t(setWidth): Likewise.\n+\n 2004-08-31  Tom Tromey  <tromey@redhat.com>\n \n \t* java/text/AttributedString.java (AttributedString): Use"}, {"sha": "cc80edbed5e4c5d3fbe3e0d74483a179eaa7ddee", "filename": "libjava/Makefile.am", "status": "modified", "additions": 37, "deletions": 6, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -268,6 +268,7 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c\t\\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c \\\n jni/gtk-peer/gthread-jni.c \\\n jni/classpath/jcl.c \\\n jni/classpath/jnilink.c\t\\\n@@ -284,8 +285,6 @@ gnu/java/awt/peer/gtk/GdkGraphics.java \\\n gnu/java/awt/peer/gtk/GdkGraphics2D.java \\\n gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java \\\n gnu/java/awt/peer/gtk/GdkPixbufDecoder.java \\\n-gnu/java/awt/peer/gtk/GtkArg.java \\\n-gnu/java/awt/peer/gtk/GtkArgList.java \\\n gnu/java/awt/peer/gtk/GtkButtonPeer.java \\\n gnu/java/awt/peer/gtk/GtkCanvasPeer.java \\\n gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.java\t\\\n@@ -319,7 +318,10 @@ gnu/java/awt/peer/gtk/GtkTextAreaPeer.java \\\n gnu/java/awt/peer/gtk/GtkTextComponentPeer.java\t\\\n gnu/java/awt/peer/gtk/GtkTextFieldPeer.java \\\n gnu/java/awt/peer/gtk/GtkToolkit.java \\\n-gnu/java/awt/peer/gtk/GtkWindowPeer.java\n+gnu/java/awt/peer/gtk/GtkWindowPeer.java \\\n+gnu/java/awt/peer/gtk/GThreadMutex.java \\\n+gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java\n+\n \n gtk_jni_headers = $(patsubst %.java,jniinclude/%.h,$(subst /,_,$(gtk_awt_peer_sources)))\n \n@@ -344,7 +346,8 @@ jni/classpath/primlib.h\n \n lib_gnu_java_awt_peer_gtk_la_CFLAGS = \\\n \t-Ijniinclude -I$(srcdir)/jni/classpath \\\n-\t-I$(srcdir)/jni/gtk-peer $(GTK_CFLAGS) $(LIBART_CFLAGS)\n+\t-I$(srcdir)/jni/gtk-peer $(PEDANTIC_CFLAGS) $(GTK_CFLAGS) $(LIBART_CFLAGS) \\\n+\t$(CAIRO_CFLAGS) $(PANGOFT2_CFLAGS)\n lib_gnu_java_awt_peer_gtk_la_GCJFLAGS = $(AM_GCJFLAGS) -fjni\n lib_gnu_java_awt_peer_gtk_la_LIBADD = $(GTK_LIBS) $(GLIB_LIBS) $(LIBART_LIBS) $(CAIRO_LIBS) $(PANGOFT2_LIBS)\n lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES = $(gtk_jni_headers) libgcj-@gcc_version@.jar libgcj.la libgcj.spec\n@@ -1327,12 +1330,19 @@ javax/swing/border/TitledBorder.java \\\n javax/swing/GrayFilter.java \\\n javax/swing/AbstractAction.java \\\n javax/swing/AbstractButton.java \\\n+javax/swing/AbstractSpinnerModel.java \\\n javax/swing/plaf/basic/BasicArrowButton.java \\\n javax/swing/plaf/basic/BasicButtonListener.java \\\n javax/swing/plaf/basic/BasicButtonUI.java \\\n javax/swing/plaf/basic/BasicCheckBoxUI.java \\\n+javax/swing/plaf/basic/BasicColorChooserUI.java \\\n+javax/swing/plaf/basic/BasicComboBoxUI.java \\\n+javax/swing/plaf/basic/BasicComboBoxEditor.java \\\n+javax/swing/plaf/basic/BasicComboBoxRenderer.java \\\n+javax/swing/plaf/basic/BasicComboPopup.java \\\n javax/swing/plaf/basic/BasicDesktopIconUI.java \\\n javax/swing/plaf/basic/BasicDesktopPaneUI.java \\\n+javax/swing/plaf/basic/BasicFormattedTextFieldUI.java \\\n javax/swing/plaf/basic/BasicGraphicsUtils.java \\\n javax/swing/plaf/basic/BasicInternalFrameTitlePane.java \\\n javax/swing/plaf/basic/BasicInternalFrameUI.java \\\n@@ -1343,6 +1353,7 @@ javax/swing/plaf/basic/BasicMenuBarUI.java \\\n javax/swing/plaf/basic/BasicMenuItemUI.java \\\n javax/swing/plaf/basic/BasicOptionPaneUI.java \\\n javax/swing/plaf/basic/BasicPanelUI.java \\\n+javax/swing/plaf/basic/BasicPasswordFieldUI.java \\\n javax/swing/plaf/basic/BasicPopupMenuUI.java \\\n javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java \\\n javax/swing/plaf/basic/BasicProgressBarUI.java \\\n@@ -1354,19 +1365,25 @@ javax/swing/plaf/basic/BasicScrollBarUI.java \\\n javax/swing/plaf/basic/BasicScrollPaneUI.java \\\n javax/swing/plaf/basic/BasicSeparatorUI.java \\\n javax/swing/plaf/basic/BasicSliderUI.java \\\n+javax/swing/plaf/basic/BasicSpinnerUI.java \\\n javax/swing/plaf/basic/BasicSplitPaneDivider.java \\\n javax/swing/plaf/basic/BasicSplitPaneUI.java \\\n javax/swing/plaf/basic/BasicTabbedPaneUI.java \\\n+javax/swing/plaf/basic/BasicTableUI.java \\\n+javax/swing/plaf/basic/BasicTableHeaderUI.java \\\n+javax/swing/plaf/basic/BasicTextAreaUI.java \\\n javax/swing/plaf/basic/BasicTextFieldUI.java \\\n javax/swing/plaf/basic/BasicTextUI.java \\\n javax/swing/plaf/basic/BasicToggleButtonUI.java \\\n javax/swing/plaf/basic/BasicToolBarSeparatorUI.java \\\n javax/swing/plaf/basic/BasicToolBarUI.java \\\n+javax/swing/plaf/basic/BasicToolTipUI.java \\\n javax/swing/plaf/basic/BasicTreeUI.java \\\n javax/swing/plaf/basic/BasicViewportUI.java \\\n javax/swing/plaf/basic/BasicLookAndFeel.java \\\n javax/swing/plaf/basic/BasicBorders.java \\\n javax/swing/plaf/basic/BasicIconFactory.java \\\n+javax/swing/plaf/basic/ComboPopup.java \\\n javax/swing/plaf/BorderUIResource.java \\\n javax/swing/plaf/UIResource.java \\\n javax/swing/plaf/ButtonUI.java \\\n@@ -1415,6 +1432,10 @@ javax/swing/colorchooser/AbstractColorChooserPanel.java \\\n javax/swing/colorchooser/ColorChooserComponentFactory.java \\\n javax/swing/colorchooser/ColorSelectionModel.java \\\n javax/swing/colorchooser/DefaultColorSelectionModel.java \\\n+javax/swing/colorchooser/DefaultPreviewPanel.java \\\n+javax/swing/colorchooser/DefaultSwatchChooserPanel.java \\\n+javax/swing/colorchooser/DefaultHSBChooserPanel.java \\\n+javax/swing/colorchooser/DefaultRGBChooserPanel.java \\\n javax/swing/filechooser/FileFilter.java \\\n javax/swing/filechooser/FileSystemView.java \\\n javax/swing/filechooser/FileView.java \\\n@@ -1460,6 +1481,7 @@ javax/swing/JRadioButton.java \\\n javax/swing/JRootPane.java \\\n javax/swing/JScrollBar.java \\\n javax/swing/JScrollPane.java \\\n+javax/swing/JSpinner.java \\\n javax/swing/JTabbedPane.java \\\n javax/swing/JTextArea.java \\\n javax/swing/JTextField.java \\\n@@ -1474,11 +1496,15 @@ javax/swing/ListModel.java \\\n javax/swing/ListSelectionModel.java \\\n javax/swing/LookAndFeel.java \\\n javax/swing/Scrollable.java \\\n+javax/swing/SpinnerModel.java \\\n+javax/swing/SpinnerNumberModel.java \\\n javax/swing/Spring.java \\\n javax/swing/SpringLayout.java \\\n javax/swing/SwingConstants.java \\\n javax/swing/SwingUtilities.java \\\n javax/swing/Timer.java \\\n+javax/swing/ToolTipManager.java \\\n+javax/swing/TransferHandler.java \\\n javax/swing/UIDefaults.java \\\n javax/swing/UIManager.java \\\n javax/swing/UnsupportedLookAndFeelException.java \\\n@@ -1550,12 +1576,18 @@ javax/swing/text/PlainDocument.java \\\n javax/swing/text/PlainView.java \\\n javax/swing/text/Position.java \\\n javax/swing/text/Segment.java \\\n+javax/swing/text/SimpleAttributeSet.java \\\n javax/swing/text/Style.java \\\n+javax/swing/text/StyleConstants.java \\\n+javax/swing/text/StyleContext.java \\\n javax/swing/text/StyledDocument.java \\\n javax/swing/text/StyledEditorKit.java \\\n-javax/swing/text/TabExpander.java \\\n javax/swing/text/TabableView.java \\\n+javax/swing/text/TabExpander.java \\\n+javax/swing/text/TabSet.java \\\n+javax/swing/text/TabStop.java \\\n javax/swing/text/TextAction.java \\\n+javax/swing/text/Utilities.java \\\n javax/swing/text/View.java \\\n javax/swing/text/ViewFactory.java \\\n javax/swing/text/html/HTML.java \\\n@@ -1638,7 +1670,6 @@ javax/swing/ProgressMonitor.java \\\n javax/swing/ProgressMonitorInputStream.java \\\n javax/swing/RepaintManager.java \\\n javax/swing/ScrollPaneLayout.java \\\n-javax/swing/ToolTipManager.java \\\n javax/swing/ViewportLayout.java\n \n rmi_java_source_files =\t\\"}, {"sha": "6b8e28a0bb19a28f6347e850dfaea03957c15dd6", "filename": "libjava/Makefile.in", "status": "modified", "additions": 562, "deletions": 309, "changes": 871, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -130,8 +130,6 @@ am__lib_gnu_java_awt_peer_gtk_la_SOURCES_DIST =  \\\n \tgnu/java/awt/peer/gtk/GdkGraphics2D.java \\\n \tgnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java \\\n \tgnu/java/awt/peer/gtk/GdkPixbufDecoder.java \\\n-\tgnu/java/awt/peer/gtk/GtkArg.java \\\n-\tgnu/java/awt/peer/gtk/GtkArgList.java \\\n \tgnu/java/awt/peer/gtk/GtkButtonPeer.java \\\n \tgnu/java/awt/peer/gtk/GtkCanvasPeer.java \\\n \tgnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.java \\\n@@ -166,6 +164,8 @@ am__lib_gnu_java_awt_peer_gtk_la_SOURCES_DIST =  \\\n \tgnu/java/awt/peer/gtk/GtkTextFieldPeer.java \\\n \tgnu/java/awt/peer/gtk/GtkToolkit.java \\\n \tgnu/java/awt/peer/gtk/GtkWindowPeer.java \\\n+\tgnu/java/awt/peer/gtk/GThreadMutex.java \\\n+\tgnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c \\\n@@ -202,6 +202,7 @@ am__lib_gnu_java_awt_peer_gtk_la_SOURCES_DIST =  \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c \\\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c \\\n \tjni/gtk-peer/gthread-jni.c jni/classpath/jcl.c \\\n \tjni/classpath/jnilink.c jni/classpath/native_state.c \\\n \tjni/classpath/primlib.c jni/gtk-peer/gthread-jni.h \\\n@@ -216,8 +217,6 @@ am__objects_3 = gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkClasspathF\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics2D.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo \\\n-\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArg.lo \\\n-\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArgList.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkCanvasPeer.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkCheckboxGroupPeer.lo \\\n@@ -251,7 +250,9 @@ am__objects_3 = gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkClasspathF\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkTextComponentPeer.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkTextFieldPeer.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkToolkit.lo \\\n-\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkWindowPeer.lo\n+\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkWindowPeer.lo \\\n+\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.lo \\\n+\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.lo\n @GTK_CAIRO_TRUE@am__objects_4 = jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkClasspathFontPeer.lo \\\n @GTK_CAIRO_TRUE@\tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.lo \\\n @GTK_CAIRO_TRUE@\tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.lo \\\n@@ -289,6 +290,7 @@ am__objects_5 = $(am__objects_4) \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkTextFieldPeer.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkToolkit.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkWindowPeer.lo \\\n+\tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gthread-jni.lo \\\n \tjni/classpath/lib_gnu_java_awt_peer_gtk_la-jcl.lo \\\n \tjni/classpath/lib_gnu_java_awt_peer_gtk_la-jnilink.lo \\\n@@ -1542,12 +1544,19 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tjavax/swing/border/TitledBorder.java \\\n \tjavax/swing/GrayFilter.java javax/swing/AbstractAction.java \\\n \tjavax/swing/AbstractButton.java \\\n+\tjavax/swing/AbstractSpinnerModel.java \\\n \tjavax/swing/plaf/basic/BasicArrowButton.java \\\n \tjavax/swing/plaf/basic/BasicButtonListener.java \\\n \tjavax/swing/plaf/basic/BasicButtonUI.java \\\n \tjavax/swing/plaf/basic/BasicCheckBoxUI.java \\\n+\tjavax/swing/plaf/basic/BasicColorChooserUI.java \\\n+\tjavax/swing/plaf/basic/BasicComboBoxUI.java \\\n+\tjavax/swing/plaf/basic/BasicComboBoxEditor.java \\\n+\tjavax/swing/plaf/basic/BasicComboBoxRenderer.java \\\n+\tjavax/swing/plaf/basic/BasicComboPopup.java \\\n \tjavax/swing/plaf/basic/BasicDesktopIconUI.java \\\n \tjavax/swing/plaf/basic/BasicDesktopPaneUI.java \\\n+\tjavax/swing/plaf/basic/BasicFormattedTextFieldUI.java \\\n \tjavax/swing/plaf/basic/BasicGraphicsUtils.java \\\n \tjavax/swing/plaf/basic/BasicInternalFrameTitlePane.java \\\n \tjavax/swing/plaf/basic/BasicInternalFrameUI.java \\\n@@ -1558,6 +1567,7 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tjavax/swing/plaf/basic/BasicMenuItemUI.java \\\n \tjavax/swing/plaf/basic/BasicOptionPaneUI.java \\\n \tjavax/swing/plaf/basic/BasicPanelUI.java \\\n+\tjavax/swing/plaf/basic/BasicPasswordFieldUI.java \\\n \tjavax/swing/plaf/basic/BasicPopupMenuUI.java \\\n \tjavax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java \\\n \tjavax/swing/plaf/basic/BasicProgressBarUI.java \\\n@@ -1569,19 +1579,25 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tjavax/swing/plaf/basic/BasicScrollPaneUI.java \\\n \tjavax/swing/plaf/basic/BasicSeparatorUI.java \\\n \tjavax/swing/plaf/basic/BasicSliderUI.java \\\n+\tjavax/swing/plaf/basic/BasicSpinnerUI.java \\\n \tjavax/swing/plaf/basic/BasicSplitPaneDivider.java \\\n \tjavax/swing/plaf/basic/BasicSplitPaneUI.java \\\n \tjavax/swing/plaf/basic/BasicTabbedPaneUI.java \\\n+\tjavax/swing/plaf/basic/BasicTableUI.java \\\n+\tjavax/swing/plaf/basic/BasicTableHeaderUI.java \\\n+\tjavax/swing/plaf/basic/BasicTextAreaUI.java \\\n \tjavax/swing/plaf/basic/BasicTextFieldUI.java \\\n \tjavax/swing/plaf/basic/BasicTextUI.java \\\n \tjavax/swing/plaf/basic/BasicToggleButtonUI.java \\\n \tjavax/swing/plaf/basic/BasicToolBarSeparatorUI.java \\\n \tjavax/swing/plaf/basic/BasicToolBarUI.java \\\n+\tjavax/swing/plaf/basic/BasicToolTipUI.java \\\n \tjavax/swing/plaf/basic/BasicTreeUI.java \\\n \tjavax/swing/plaf/basic/BasicViewportUI.java \\\n \tjavax/swing/plaf/basic/BasicLookAndFeel.java \\\n \tjavax/swing/plaf/basic/BasicBorders.java \\\n \tjavax/swing/plaf/basic/BasicIconFactory.java \\\n+\tjavax/swing/plaf/basic/ComboPopup.java \\\n \tjavax/swing/plaf/BorderUIResource.java \\\n \tjavax/swing/plaf/UIResource.java \\\n \tjavax/swing/plaf/ButtonUI.java \\\n@@ -1626,6 +1642,10 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tjavax/swing/colorchooser/ColorChooserComponentFactory.java \\\n \tjavax/swing/colorchooser/ColorSelectionModel.java \\\n \tjavax/swing/colorchooser/DefaultColorSelectionModel.java \\\n+\tjavax/swing/colorchooser/DefaultPreviewPanel.java \\\n+\tjavax/swing/colorchooser/DefaultSwatchChooserPanel.java \\\n+\tjavax/swing/colorchooser/DefaultHSBChooserPanel.java \\\n+\tjavax/swing/colorchooser/DefaultRGBChooserPanel.java \\\n \tjavax/swing/filechooser/FileFilter.java \\\n \tjavax/swing/filechooser/FileSystemView.java \\\n \tjavax/swing/filechooser/FileView.java \\\n@@ -1658,17 +1678,21 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tjavax/swing/JOptionPane.java javax/swing/JPanel.java \\\n \tjavax/swing/JRadioButton.java javax/swing/JRootPane.java \\\n \tjavax/swing/JScrollBar.java javax/swing/JScrollPane.java \\\n-\tjavax/swing/JTabbedPane.java javax/swing/JTextArea.java \\\n-\tjavax/swing/JTextField.java javax/swing/JToggleButton.java \\\n-\tjavax/swing/JToolTip.java javax/swing/JTree.java \\\n-\tjavax/swing/JViewport.java javax/swing/JWindow.java \\\n-\tjavax/swing/KeyStroke.java javax/swing/ListCellRenderer.java \\\n-\tjavax/swing/ListModel.java javax/swing/ListSelectionModel.java \\\n+\tjavax/swing/JSpinner.java javax/swing/JTabbedPane.java \\\n+\tjavax/swing/JTextArea.java javax/swing/JTextField.java \\\n+\tjavax/swing/JToggleButton.java javax/swing/JToolTip.java \\\n+\tjavax/swing/JTree.java javax/swing/JViewport.java \\\n+\tjavax/swing/JWindow.java javax/swing/KeyStroke.java \\\n+\tjavax/swing/ListCellRenderer.java javax/swing/ListModel.java \\\n+\tjavax/swing/ListSelectionModel.java \\\n \tjavax/swing/LookAndFeel.java javax/swing/Scrollable.java \\\n-\tjavax/swing/Spring.java javax/swing/SpringLayout.java \\\n-\tjavax/swing/SwingConstants.java \\\n+\tjavax/swing/SpinnerModel.java \\\n+\tjavax/swing/SpinnerNumberModel.java javax/swing/Spring.java \\\n+\tjavax/swing/SpringLayout.java javax/swing/SwingConstants.java \\\n \tjavax/swing/SwingUtilities.java javax/swing/Timer.java \\\n-\tjavax/swing/UIDefaults.java javax/swing/UIManager.java \\\n+\tjavax/swing/ToolTipManager.java \\\n+\tjavax/swing/TransferHandler.java javax/swing/UIDefaults.java \\\n+\tjavax/swing/UIManager.java \\\n \tjavax/swing/UnsupportedLookAndFeelException.java \\\n \tjavax/swing/event/AncestorEvent.java \\\n \tjavax/swing/event/AncestorListener.java \\\n@@ -1735,12 +1759,17 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tjavax/swing/text/NavigationFilter.java \\\n \tjavax/swing/text/PlainDocument.java \\\n \tjavax/swing/text/PlainView.java javax/swing/text/Position.java \\\n-\tjavax/swing/text/Segment.java javax/swing/text/Style.java \\\n+\tjavax/swing/text/Segment.java \\\n+\tjavax/swing/text/SimpleAttributeSet.java \\\n+\tjavax/swing/text/Style.java \\\n+\tjavax/swing/text/StyleConstants.java \\\n+\tjavax/swing/text/StyleContext.java \\\n \tjavax/swing/text/StyledDocument.java \\\n \tjavax/swing/text/StyledEditorKit.java \\\n-\tjavax/swing/text/TabExpander.java \\\n \tjavax/swing/text/TabableView.java \\\n-\tjavax/swing/text/TextAction.java javax/swing/text/View.java \\\n+\tjavax/swing/text/TabExpander.java javax/swing/text/TabSet.java \\\n+\tjavax/swing/text/TabStop.java javax/swing/text/TextAction.java \\\n+\tjavax/swing/text/Utilities.java javax/swing/text/View.java \\\n \tjavax/swing/text/ViewFactory.java \\\n \tjavax/swing/text/html/HTML.java \\\n \tjavax/swing/text/html/parser/ParserDelegator.java \\\n@@ -1807,7 +1836,6 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tjavax/swing/ProgressMonitorInputStream.java \\\n \tjavax/swing/RepaintManager.java \\\n \tjavax/swing/ScrollPaneLayout.java \\\n-\tjavax/swing/ToolTipManager.java \\\n \tjavax/swing/ViewportLayout.java \\\n \tgnu/gcj/convert/BytesToUnicode.java \\\n \tgnu/gcj/convert/Convert.java gnu/gcj/convert/Input_8859_1.java \\\n@@ -2679,12 +2707,19 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/border/SoftBevelBorder.lo \\\n \tjavax/swing/border/TitledBorder.lo javax/swing/GrayFilter.lo \\\n \tjavax/swing/AbstractAction.lo javax/swing/AbstractButton.lo \\\n+\tjavax/swing/AbstractSpinnerModel.lo \\\n \tjavax/swing/plaf/basic/BasicArrowButton.lo \\\n \tjavax/swing/plaf/basic/BasicButtonListener.lo \\\n \tjavax/swing/plaf/basic/BasicButtonUI.lo \\\n \tjavax/swing/plaf/basic/BasicCheckBoxUI.lo \\\n+\tjavax/swing/plaf/basic/BasicColorChooserUI.lo \\\n+\tjavax/swing/plaf/basic/BasicComboBoxUI.lo \\\n+\tjavax/swing/plaf/basic/BasicComboBoxEditor.lo \\\n+\tjavax/swing/plaf/basic/BasicComboBoxRenderer.lo \\\n+\tjavax/swing/plaf/basic/BasicComboPopup.lo \\\n \tjavax/swing/plaf/basic/BasicDesktopIconUI.lo \\\n \tjavax/swing/plaf/basic/BasicDesktopPaneUI.lo \\\n+\tjavax/swing/plaf/basic/BasicFormattedTextFieldUI.lo \\\n \tjavax/swing/plaf/basic/BasicGraphicsUtils.lo \\\n \tjavax/swing/plaf/basic/BasicInternalFrameTitlePane.lo \\\n \tjavax/swing/plaf/basic/BasicInternalFrameUI.lo \\\n@@ -2695,6 +2730,7 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/plaf/basic/BasicMenuItemUI.lo \\\n \tjavax/swing/plaf/basic/BasicOptionPaneUI.lo \\\n \tjavax/swing/plaf/basic/BasicPanelUI.lo \\\n+\tjavax/swing/plaf/basic/BasicPasswordFieldUI.lo \\\n \tjavax/swing/plaf/basic/BasicPopupMenuUI.lo \\\n \tjavax/swing/plaf/basic/BasicPopupMenuSeparatorUI.lo \\\n \tjavax/swing/plaf/basic/BasicProgressBarUI.lo \\\n@@ -2706,19 +2742,25 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/plaf/basic/BasicScrollPaneUI.lo \\\n \tjavax/swing/plaf/basic/BasicSeparatorUI.lo \\\n \tjavax/swing/plaf/basic/BasicSliderUI.lo \\\n+\tjavax/swing/plaf/basic/BasicSpinnerUI.lo \\\n \tjavax/swing/plaf/basic/BasicSplitPaneDivider.lo \\\n \tjavax/swing/plaf/basic/BasicSplitPaneUI.lo \\\n \tjavax/swing/plaf/basic/BasicTabbedPaneUI.lo \\\n+\tjavax/swing/plaf/basic/BasicTableUI.lo \\\n+\tjavax/swing/plaf/basic/BasicTableHeaderUI.lo \\\n+\tjavax/swing/plaf/basic/BasicTextAreaUI.lo \\\n \tjavax/swing/plaf/basic/BasicTextFieldUI.lo \\\n \tjavax/swing/plaf/basic/BasicTextUI.lo \\\n \tjavax/swing/plaf/basic/BasicToggleButtonUI.lo \\\n \tjavax/swing/plaf/basic/BasicToolBarSeparatorUI.lo \\\n \tjavax/swing/plaf/basic/BasicToolBarUI.lo \\\n+\tjavax/swing/plaf/basic/BasicToolTipUI.lo \\\n \tjavax/swing/plaf/basic/BasicTreeUI.lo \\\n \tjavax/swing/plaf/basic/BasicViewportUI.lo \\\n \tjavax/swing/plaf/basic/BasicLookAndFeel.lo \\\n \tjavax/swing/plaf/basic/BasicBorders.lo \\\n \tjavax/swing/plaf/basic/BasicIconFactory.lo \\\n+\tjavax/swing/plaf/basic/ComboPopup.lo \\\n \tjavax/swing/plaf/BorderUIResource.lo \\\n \tjavax/swing/plaf/UIResource.lo javax/swing/plaf/ButtonUI.lo \\\n \tjavax/swing/plaf/ComponentUI.lo javax/swing/plaf/LabelUI.lo \\\n@@ -2754,6 +2796,10 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/colorchooser/ColorChooserComponentFactory.lo \\\n \tjavax/swing/colorchooser/ColorSelectionModel.lo \\\n \tjavax/swing/colorchooser/DefaultColorSelectionModel.lo \\\n+\tjavax/swing/colorchooser/DefaultPreviewPanel.lo \\\n+\tjavax/swing/colorchooser/DefaultSwatchChooserPanel.lo \\\n+\tjavax/swing/colorchooser/DefaultHSBChooserPanel.lo \\\n+\tjavax/swing/colorchooser/DefaultRGBChooserPanel.lo \\\n \tjavax/swing/filechooser/FileFilter.lo \\\n \tjavax/swing/filechooser/FileSystemView.lo \\\n \tjavax/swing/filechooser/FileView.lo \\\n@@ -2785,17 +2831,19 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/JOptionPane.lo javax/swing/JPanel.lo \\\n \tjavax/swing/JRadioButton.lo javax/swing/JRootPane.lo \\\n \tjavax/swing/JScrollBar.lo javax/swing/JScrollPane.lo \\\n-\tjavax/swing/JTabbedPane.lo javax/swing/JTextArea.lo \\\n-\tjavax/swing/JTextField.lo javax/swing/JToggleButton.lo \\\n-\tjavax/swing/JToolTip.lo javax/swing/JTree.lo \\\n-\tjavax/swing/JViewport.lo javax/swing/JWindow.lo \\\n-\tjavax/swing/KeyStroke.lo javax/swing/ListCellRenderer.lo \\\n-\tjavax/swing/ListModel.lo javax/swing/ListSelectionModel.lo \\\n-\tjavax/swing/LookAndFeel.lo javax/swing/Scrollable.lo \\\n-\tjavax/swing/Spring.lo javax/swing/SpringLayout.lo \\\n-\tjavax/swing/SwingConstants.lo javax/swing/SwingUtilities.lo \\\n-\tjavax/swing/Timer.lo javax/swing/UIDefaults.lo \\\n-\tjavax/swing/UIManager.lo \\\n+\tjavax/swing/JSpinner.lo javax/swing/JTabbedPane.lo \\\n+\tjavax/swing/JTextArea.lo javax/swing/JTextField.lo \\\n+\tjavax/swing/JToggleButton.lo javax/swing/JToolTip.lo \\\n+\tjavax/swing/JTree.lo javax/swing/JViewport.lo \\\n+\tjavax/swing/JWindow.lo javax/swing/KeyStroke.lo \\\n+\tjavax/swing/ListCellRenderer.lo javax/swing/ListModel.lo \\\n+\tjavax/swing/ListSelectionModel.lo javax/swing/LookAndFeel.lo \\\n+\tjavax/swing/Scrollable.lo javax/swing/SpinnerModel.lo \\\n+\tjavax/swing/SpinnerNumberModel.lo javax/swing/Spring.lo \\\n+\tjavax/swing/SpringLayout.lo javax/swing/SwingConstants.lo \\\n+\tjavax/swing/SwingUtilities.lo javax/swing/Timer.lo \\\n+\tjavax/swing/ToolTipManager.lo javax/swing/TransferHandler.lo \\\n+\tjavax/swing/UIDefaults.lo javax/swing/UIManager.lo \\\n \tjavax/swing/UnsupportedLookAndFeelException.lo \\\n \tjavax/swing/event/AncestorEvent.lo \\\n \tjavax/swing/event/AncestorListener.lo \\\n@@ -2858,13 +2906,17 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/text/NavigationFilter.lo \\\n \tjavax/swing/text/PlainDocument.lo \\\n \tjavax/swing/text/PlainView.lo javax/swing/text/Position.lo \\\n-\tjavax/swing/text/Segment.lo javax/swing/text/Style.lo \\\n+\tjavax/swing/text/Segment.lo \\\n+\tjavax/swing/text/SimpleAttributeSet.lo \\\n+\tjavax/swing/text/Style.lo javax/swing/text/StyleConstants.lo \\\n+\tjavax/swing/text/StyleContext.lo \\\n \tjavax/swing/text/StyledDocument.lo \\\n \tjavax/swing/text/StyledEditorKit.lo \\\n-\tjavax/swing/text/TabExpander.lo \\\n-\tjavax/swing/text/TabableView.lo javax/swing/text/TextAction.lo \\\n-\tjavax/swing/text/View.lo javax/swing/text/ViewFactory.lo \\\n-\tjavax/swing/text/html/HTML.lo \\\n+\tjavax/swing/text/TabableView.lo \\\n+\tjavax/swing/text/TabExpander.lo javax/swing/text/TabSet.lo \\\n+\tjavax/swing/text/TabStop.lo javax/swing/text/TextAction.lo \\\n+\tjavax/swing/text/Utilities.lo javax/swing/text/View.lo \\\n+\tjavax/swing/text/ViewFactory.lo javax/swing/text/html/HTML.lo \\\n \tjavax/swing/text/html/parser/ParserDelegator.lo \\\n \tjavax/swing/tree/TreeNode.lo \\\n \tjavax/swing/tree/AbstractLayoutCache.lo \\\n@@ -2923,7 +2975,7 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/PopupFactory.lo javax/swing/ProgressMonitor.lo \\\n \tjavax/swing/ProgressMonitorInputStream.lo \\\n \tjavax/swing/RepaintManager.lo javax/swing/ScrollPaneLayout.lo \\\n-\tjavax/swing/ToolTipManager.lo javax/swing/ViewportLayout.lo\n+\tjavax/swing/ViewportLayout.lo\n am__objects_12 = gnu/gcj/convert/BytesToUnicode.lo \\\n \tgnu/gcj/convert/Convert.lo gnu/gcj/convert/Input_8859_1.lo \\\n \tgnu/gcj/convert/Input_ASCII.lo gnu/gcj/convert/Input_EUCJIS.lo \\\n@@ -4180,6 +4232,7 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c\t\\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c \\\n jni/gtk-peer/gthread-jni.c \\\n jni/classpath/jcl.c \\\n jni/classpath/jnilink.c\t\\\n@@ -4195,8 +4248,6 @@ gnu/java/awt/peer/gtk/GdkGraphics.java \\\n gnu/java/awt/peer/gtk/GdkGraphics2D.java \\\n gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java \\\n gnu/java/awt/peer/gtk/GdkPixbufDecoder.java \\\n-gnu/java/awt/peer/gtk/GtkArg.java \\\n-gnu/java/awt/peer/gtk/GtkArgList.java \\\n gnu/java/awt/peer/gtk/GtkButtonPeer.java \\\n gnu/java/awt/peer/gtk/GtkCanvasPeer.java \\\n gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.java\t\\\n@@ -4230,7 +4281,9 @@ gnu/java/awt/peer/gtk/GtkTextAreaPeer.java \\\n gnu/java/awt/peer/gtk/GtkTextComponentPeer.java\t\\\n gnu/java/awt/peer/gtk/GtkTextFieldPeer.java \\\n gnu/java/awt/peer/gtk/GtkToolkit.java \\\n-gnu/java/awt/peer/gtk/GtkWindowPeer.java\n+gnu/java/awt/peer/gtk/GtkWindowPeer.java \\\n+gnu/java/awt/peer/gtk/GThreadMutex.java \\\n+gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java\n \n gtk_jni_headers = $(patsubst %.java,jniinclude/%.h,$(subst /,_,$(gtk_awt_peer_sources)))\n lib_gnu_java_awt_peer_gtk_la_SOURCES = \\\n@@ -4245,7 +4298,8 @@ jni/classpath/primlib.h\n \n lib_gnu_java_awt_peer_gtk_la_CFLAGS = \\\n \t-Ijniinclude -I$(srcdir)/jni/classpath \\\n-\t-I$(srcdir)/jni/gtk-peer $(GTK_CFLAGS) $(LIBART_CFLAGS)\n+\t-I$(srcdir)/jni/gtk-peer $(PEDANTIC_CFLAGS) $(GTK_CFLAGS) $(LIBART_CFLAGS) \\\n+\t$(CAIRO_CFLAGS) $(PANGOFT2_CFLAGS)\n \n lib_gnu_java_awt_peer_gtk_la_GCJFLAGS = $(AM_GCJFLAGS) -fjni\n lib_gnu_java_awt_peer_gtk_la_LIBADD = $(GTK_LIBS) $(GLIB_LIBS) $(LIBART_LIBS) $(CAIRO_LIBS) $(PANGOFT2_LIBS)\n@@ -4846,12 +4900,19 @@ javax/swing/border/TitledBorder.java \\\n javax/swing/GrayFilter.java \\\n javax/swing/AbstractAction.java \\\n javax/swing/AbstractButton.java \\\n+javax/swing/AbstractSpinnerModel.java \\\n javax/swing/plaf/basic/BasicArrowButton.java \\\n javax/swing/plaf/basic/BasicButtonListener.java \\\n javax/swing/plaf/basic/BasicButtonUI.java \\\n javax/swing/plaf/basic/BasicCheckBoxUI.java \\\n+javax/swing/plaf/basic/BasicColorChooserUI.java \\\n+javax/swing/plaf/basic/BasicComboBoxUI.java \\\n+javax/swing/plaf/basic/BasicComboBoxEditor.java \\\n+javax/swing/plaf/basic/BasicComboBoxRenderer.java \\\n+javax/swing/plaf/basic/BasicComboPopup.java \\\n javax/swing/plaf/basic/BasicDesktopIconUI.java \\\n javax/swing/plaf/basic/BasicDesktopPaneUI.java \\\n+javax/swing/plaf/basic/BasicFormattedTextFieldUI.java \\\n javax/swing/plaf/basic/BasicGraphicsUtils.java \\\n javax/swing/plaf/basic/BasicInternalFrameTitlePane.java \\\n javax/swing/plaf/basic/BasicInternalFrameUI.java \\\n@@ -4862,6 +4923,7 @@ javax/swing/plaf/basic/BasicMenuBarUI.java \\\n javax/swing/plaf/basic/BasicMenuItemUI.java \\\n javax/swing/plaf/basic/BasicOptionPaneUI.java \\\n javax/swing/plaf/basic/BasicPanelUI.java \\\n+javax/swing/plaf/basic/BasicPasswordFieldUI.java \\\n javax/swing/plaf/basic/BasicPopupMenuUI.java \\\n javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java \\\n javax/swing/plaf/basic/BasicProgressBarUI.java \\\n@@ -4873,19 +4935,25 @@ javax/swing/plaf/basic/BasicScrollBarUI.java \\\n javax/swing/plaf/basic/BasicScrollPaneUI.java \\\n javax/swing/plaf/basic/BasicSeparatorUI.java \\\n javax/swing/plaf/basic/BasicSliderUI.java \\\n+javax/swing/plaf/basic/BasicSpinnerUI.java \\\n javax/swing/plaf/basic/BasicSplitPaneDivider.java \\\n javax/swing/plaf/basic/BasicSplitPaneUI.java \\\n javax/swing/plaf/basic/BasicTabbedPaneUI.java \\\n+javax/swing/plaf/basic/BasicTableUI.java \\\n+javax/swing/plaf/basic/BasicTableHeaderUI.java \\\n+javax/swing/plaf/basic/BasicTextAreaUI.java \\\n javax/swing/plaf/basic/BasicTextFieldUI.java \\\n javax/swing/plaf/basic/BasicTextUI.java \\\n javax/swing/plaf/basic/BasicToggleButtonUI.java \\\n javax/swing/plaf/basic/BasicToolBarSeparatorUI.java \\\n javax/swing/plaf/basic/BasicToolBarUI.java \\\n+javax/swing/plaf/basic/BasicToolTipUI.java \\\n javax/swing/plaf/basic/BasicTreeUI.java \\\n javax/swing/plaf/basic/BasicViewportUI.java \\\n javax/swing/plaf/basic/BasicLookAndFeel.java \\\n javax/swing/plaf/basic/BasicBorders.java \\\n javax/swing/plaf/basic/BasicIconFactory.java \\\n+javax/swing/plaf/basic/ComboPopup.java \\\n javax/swing/plaf/BorderUIResource.java \\\n javax/swing/plaf/UIResource.java \\\n javax/swing/plaf/ButtonUI.java \\\n@@ -4934,6 +5002,10 @@ javax/swing/colorchooser/AbstractColorChooserPanel.java \\\n javax/swing/colorchooser/ColorChooserComponentFactory.java \\\n javax/swing/colorchooser/ColorSelectionModel.java \\\n javax/swing/colorchooser/DefaultColorSelectionModel.java \\\n+javax/swing/colorchooser/DefaultPreviewPanel.java \\\n+javax/swing/colorchooser/DefaultSwatchChooserPanel.java \\\n+javax/swing/colorchooser/DefaultHSBChooserPanel.java \\\n+javax/swing/colorchooser/DefaultRGBChooserPanel.java \\\n javax/swing/filechooser/FileFilter.java \\\n javax/swing/filechooser/FileSystemView.java \\\n javax/swing/filechooser/FileView.java \\\n@@ -4979,6 +5051,7 @@ javax/swing/JRadioButton.java \\\n javax/swing/JRootPane.java \\\n javax/swing/JScrollBar.java \\\n javax/swing/JScrollPane.java \\\n+javax/swing/JSpinner.java \\\n javax/swing/JTabbedPane.java \\\n javax/swing/JTextArea.java \\\n javax/swing/JTextField.java \\\n@@ -4993,11 +5066,15 @@ javax/swing/ListModel.java \\\n javax/swing/ListSelectionModel.java \\\n javax/swing/LookAndFeel.java \\\n javax/swing/Scrollable.java \\\n+javax/swing/SpinnerModel.java \\\n+javax/swing/SpinnerNumberModel.java \\\n javax/swing/Spring.java \\\n javax/swing/SpringLayout.java \\\n javax/swing/SwingConstants.java \\\n javax/swing/SwingUtilities.java \\\n javax/swing/Timer.java \\\n+javax/swing/ToolTipManager.java \\\n+javax/swing/TransferHandler.java \\\n javax/swing/UIDefaults.java \\\n javax/swing/UIManager.java \\\n javax/swing/UnsupportedLookAndFeelException.java \\\n@@ -5069,12 +5146,18 @@ javax/swing/text/PlainDocument.java \\\n javax/swing/text/PlainView.java \\\n javax/swing/text/Position.java \\\n javax/swing/text/Segment.java \\\n+javax/swing/text/SimpleAttributeSet.java \\\n javax/swing/text/Style.java \\\n+javax/swing/text/StyleConstants.java \\\n+javax/swing/text/StyleContext.java \\\n javax/swing/text/StyledDocument.java \\\n javax/swing/text/StyledEditorKit.java \\\n-javax/swing/text/TabExpander.java \\\n javax/swing/text/TabableView.java \\\n+javax/swing/text/TabExpander.java \\\n+javax/swing/text/TabSet.java \\\n+javax/swing/text/TabStop.java \\\n javax/swing/text/TextAction.java \\\n+javax/swing/text/Utilities.java \\\n javax/swing/text/View.java \\\n javax/swing/text/ViewFactory.java \\\n javax/swing/text/html/HTML.java \\\n@@ -5157,7 +5240,6 @@ javax/swing/ProgressMonitor.java \\\n javax/swing/ProgressMonitorInputStream.java \\\n javax/swing/RepaintManager.java \\\n javax/swing/ScrollPaneLayout.java \\\n-javax/swing/ToolTipManager.java \\\n javax/swing/ViewportLayout.java\n \n rmi_java_source_files = \\\n@@ -6841,12 +6923,6 @@ gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.lo:  \\\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo:  \\\n \tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n \tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n-gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArg.lo:  \\\n-\tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n-\tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n-gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArgList.lo:  \\\n-\tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n-\tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo:  \\\n \tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n \tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n@@ -6949,6 +7025,12 @@ gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkToolkit.lo:  \\\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkWindowPeer.lo:  \\\n \tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n \tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.lo:  \\\n+\tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n+\tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.lo:  \\\n+\tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n+\tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n jni/gtk-peer/$(am__dirstamp):\n \t@$(mkdir_p) jni/gtk-peer\n \t@: > jni/gtk-peer/$(am__dirstamp)\n@@ -7063,6 +7145,9 @@ jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkToolkit.lo:\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkWindowPeer.lo:  \\\n \tjni/gtk-peer/$(am__dirstamp) \\\n \tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n+jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo:  \\\n+\tjni/gtk-peer/$(am__dirstamp) \\\n+\tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gthread-jni.lo:  \\\n \tjni/gtk-peer/$(am__dirstamp) \\\n \tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n@@ -11244,6 +11329,8 @@ javax/swing/AbstractAction.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/AbstractButton.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/AbstractSpinnerModel.lo: javax/swing/$(am__dirstamp) \\\n+\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/basic/$(am__dirstamp):\n \t@$(mkdir_p) javax/swing/plaf/basic\n \t@: > javax/swing/plaf/basic/$(am__dirstamp)\n@@ -11262,12 +11349,30 @@ javax/swing/plaf/basic/BasicButtonUI.lo:  \\\n javax/swing/plaf/basic/BasicCheckBoxUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicColorChooserUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicComboBoxUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicComboBoxEditor.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicComboBoxRenderer.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicComboPopup.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/basic/BasicDesktopIconUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/basic/BasicDesktopPaneUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicFormattedTextFieldUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/basic/BasicGraphicsUtils.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n@@ -11298,6 +11403,9 @@ javax/swing/plaf/basic/BasicOptionPaneUI.lo:  \\\n javax/swing/plaf/basic/BasicPanelUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicPasswordFieldUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/basic/BasicPopupMenuUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n@@ -11331,6 +11439,9 @@ javax/swing/plaf/basic/BasicSeparatorUI.lo:  \\\n javax/swing/plaf/basic/BasicSliderUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicSpinnerUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/basic/BasicSplitPaneDivider.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n@@ -11340,6 +11451,15 @@ javax/swing/plaf/basic/BasicSplitPaneUI.lo:  \\\n javax/swing/plaf/basic/BasicTabbedPaneUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicTableUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicTableHeaderUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicTextAreaUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/basic/BasicTextFieldUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n@@ -11355,6 +11475,9 @@ javax/swing/plaf/basic/BasicToolBarSeparatorUI.lo:  \\\n javax/swing/plaf/basic/BasicToolBarUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicToolTipUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/basic/BasicTreeUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n@@ -11370,6 +11493,9 @@ javax/swing/plaf/basic/BasicBorders.lo:  \\\n javax/swing/plaf/basic/BasicIconFactory.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/ComboPopup.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/$(am__dirstamp):\n \t@$(mkdir_p) javax/swing/plaf\n \t@: > javax/swing/plaf/$(am__dirstamp)\n@@ -11495,6 +11621,18 @@ javax/swing/colorchooser/ColorSelectionModel.lo:  \\\n javax/swing/colorchooser/DefaultColorSelectionModel.lo:  \\\n \tjavax/swing/colorchooser/$(am__dirstamp) \\\n \tjavax/swing/colorchooser/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/colorchooser/DefaultPreviewPanel.lo:  \\\n+\tjavax/swing/colorchooser/$(am__dirstamp) \\\n+\tjavax/swing/colorchooser/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/colorchooser/DefaultSwatchChooserPanel.lo:  \\\n+\tjavax/swing/colorchooser/$(am__dirstamp) \\\n+\tjavax/swing/colorchooser/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/colorchooser/DefaultHSBChooserPanel.lo:  \\\n+\tjavax/swing/colorchooser/$(am__dirstamp) \\\n+\tjavax/swing/colorchooser/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/colorchooser/DefaultRGBChooserPanel.lo:  \\\n+\tjavax/swing/colorchooser/$(am__dirstamp) \\\n+\tjavax/swing/colorchooser/$(DEPDIR)/$(am__dirstamp)\n javax/swing/filechooser/$(am__dirstamp):\n \t@$(mkdir_p) javax/swing/filechooser\n \t@: > javax/swing/filechooser/$(am__dirstamp)\n@@ -11607,6 +11745,8 @@ javax/swing/JScrollBar.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/JScrollPane.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/JSpinner.lo: javax/swing/$(am__dirstamp) \\\n+\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/JTabbedPane.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/JTextArea.lo: javax/swing/$(am__dirstamp) \\\n@@ -11635,6 +11775,10 @@ javax/swing/LookAndFeel.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/Scrollable.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/SpinnerModel.lo: javax/swing/$(am__dirstamp) \\\n+\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/SpinnerNumberModel.lo: javax/swing/$(am__dirstamp) \\\n+\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/Spring.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/SpringLayout.lo: javax/swing/$(am__dirstamp) \\\n@@ -11645,6 +11789,10 @@ javax/swing/SwingUtilities.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/Timer.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/ToolTipManager.lo: javax/swing/$(am__dirstamp) \\\n+\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/TransferHandler.lo: javax/swing/$(am__dirstamp) \\\n+\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/UIDefaults.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/UIManager.lo: javax/swing/$(am__dirstamp) \\\n@@ -11841,18 +11989,31 @@ javax/swing/text/Position.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/Segment.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/SimpleAttributeSet.lo:  \\\n+\tjavax/swing/text/$(am__dirstamp) \\\n+\tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/Style.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/StyleConstants.lo: javax/swing/text/$(am__dirstamp) \\\n+\tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/StyleContext.lo: javax/swing/text/$(am__dirstamp) \\\n+\tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/StyledDocument.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/StyledEditorKit.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/TabableView.lo: javax/swing/text/$(am__dirstamp) \\\n+\tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/TabExpander.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n-javax/swing/text/TabableView.lo: javax/swing/text/$(am__dirstamp) \\\n+javax/swing/text/TabSet.lo: javax/swing/text/$(am__dirstamp) \\\n+\tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/TabStop.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/TextAction.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/Utilities.lo: javax/swing/text/$(am__dirstamp) \\\n+\tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/View.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/ViewFactory.lo: javax/swing/text/$(am__dirstamp) \\\n@@ -12059,8 +12220,6 @@ javax/swing/RepaintManager.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/ScrollPaneLayout.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n-javax/swing/ToolTipManager.lo: javax/swing/$(am__dirstamp) \\\n-\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/ViewportLayout.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n gnu/gcj/convert/BytesToUnicode.lo: gnu/gcj/convert/$(am__dirstamp) \\\n@@ -13308,6 +13467,10 @@ mostlyclean-compile:\n \t-rm -f gnu/java/awt/peer/EmbeddedWindowPeer.lo\n \t-rm -f gnu/java/awt/peer/GLightweightPeer.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/GLightweightPeer.lo\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.$(OBJEXT)\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.lo\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.$(OBJEXT)\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkClasspathFontPeer.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkClasspathFontPeer.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkClasspathFontPeerMetrics.$(OBJEXT)\n@@ -13324,10 +13487,6 @@ mostlyclean-compile:\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo\n-\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArg.$(OBJEXT)\n-\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArg.lo\n-\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArgList.$(OBJEXT)\n-\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArgList.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkCanvasPeer.$(OBJEXT)\n@@ -16786,6 +16945,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/AbstractListModel.lo\n \t-rm -f javax/swing/AbstractSet.$(OBJEXT)\n \t-rm -f javax/swing/AbstractSet.lo\n+\t-rm -f javax/swing/AbstractSpinnerModel.$(OBJEXT)\n+\t-rm -f javax/swing/AbstractSpinnerModel.lo\n \t-rm -f javax/swing/Action.$(OBJEXT)\n \t-rm -f javax/swing/Action.lo\n \t-rm -f javax/swing/ActionMap.$(OBJEXT)\n@@ -16914,6 +17075,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/JSeparator.lo\n \t-rm -f javax/swing/JSlider.$(OBJEXT)\n \t-rm -f javax/swing/JSlider.lo\n+\t-rm -f javax/swing/JSpinner.$(OBJEXT)\n+\t-rm -f javax/swing/JSpinner.lo\n \t-rm -f javax/swing/JSplitPane.$(OBJEXT)\n \t-rm -f javax/swing/JSplitPane.lo\n \t-rm -f javax/swing/JTabbedPane.$(OBJEXT)\n@@ -16982,6 +17145,10 @@ mostlyclean-compile:\n \t-rm -f javax/swing/SizeRequirements.lo\n \t-rm -f javax/swing/SizeSequence.$(OBJEXT)\n \t-rm -f javax/swing/SizeSequence.lo\n+\t-rm -f javax/swing/SpinnerModel.$(OBJEXT)\n+\t-rm -f javax/swing/SpinnerModel.lo\n+\t-rm -f javax/swing/SpinnerNumberModel.$(OBJEXT)\n+\t-rm -f javax/swing/SpinnerNumberModel.lo\n \t-rm -f javax/swing/Spring.$(OBJEXT)\n \t-rm -f javax/swing/Spring.lo\n \t-rm -f javax/swing/SpringLayout.$(OBJEXT)\n@@ -16994,6 +17161,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/Timer.lo\n \t-rm -f javax/swing/ToolTipManager.$(OBJEXT)\n \t-rm -f javax/swing/ToolTipManager.lo\n+\t-rm -f javax/swing/TransferHandler.$(OBJEXT)\n+\t-rm -f javax/swing/TransferHandler.lo\n \t-rm -f javax/swing/UIDefaults.$(OBJEXT)\n \t-rm -f javax/swing/UIDefaults.lo\n \t-rm -f javax/swing/UIManager.$(OBJEXT)\n@@ -17032,6 +17201,14 @@ mostlyclean-compile:\n \t-rm -f javax/swing/colorchooser/ColorSelectionModel.lo\n \t-rm -f javax/swing/colorchooser/DefaultColorSelectionModel.$(OBJEXT)\n \t-rm -f javax/swing/colorchooser/DefaultColorSelectionModel.lo\n+\t-rm -f javax/swing/colorchooser/DefaultHSBChooserPanel.$(OBJEXT)\n+\t-rm -f javax/swing/colorchooser/DefaultHSBChooserPanel.lo\n+\t-rm -f javax/swing/colorchooser/DefaultPreviewPanel.$(OBJEXT)\n+\t-rm -f javax/swing/colorchooser/DefaultPreviewPanel.lo\n+\t-rm -f javax/swing/colorchooser/DefaultRGBChooserPanel.$(OBJEXT)\n+\t-rm -f javax/swing/colorchooser/DefaultRGBChooserPanel.lo\n+\t-rm -f javax/swing/colorchooser/DefaultSwatchChooserPanel.$(OBJEXT)\n+\t-rm -f javax/swing/colorchooser/DefaultSwatchChooserPanel.lo\n \t-rm -f javax/swing/event/AncestorEvent.$(OBJEXT)\n \t-rm -f javax/swing/event/AncestorEvent.lo\n \t-rm -f javax/swing/event/AncestorListener.$(OBJEXT)\n@@ -17218,10 +17395,22 @@ mostlyclean-compile:\n \t-rm -f javax/swing/plaf/basic/BasicCheckBoxMenuItemUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicCheckBoxUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicCheckBoxUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicColorChooserUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicColorChooserUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicComboBoxEditor.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicComboBoxEditor.lo\n+\t-rm -f javax/swing/plaf/basic/BasicComboBoxRenderer.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicComboBoxRenderer.lo\n+\t-rm -f javax/swing/plaf/basic/BasicComboBoxUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicComboBoxUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicComboPopup.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicComboPopup.lo\n \t-rm -f javax/swing/plaf/basic/BasicDesktopIconUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicDesktopIconUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicDesktopPaneUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicDesktopPaneUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicFormattedTextFieldUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicFormattedTextFieldUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicGraphicsUtils.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicGraphicsUtils.lo\n \t-rm -f javax/swing/plaf/basic/BasicIconFactory.$(OBJEXT)\n@@ -17246,6 +17435,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/plaf/basic/BasicOptionPaneUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicPanelUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicPanelUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicPasswordFieldUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicPasswordFieldUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicPopupMenuUI.$(OBJEXT)\n@@ -17266,12 +17457,20 @@ mostlyclean-compile:\n \t-rm -f javax/swing/plaf/basic/BasicSeparatorUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicSliderUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicSliderUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicSpinnerUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicSpinnerUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicSplitPaneDivider.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicSplitPaneDivider.lo\n \t-rm -f javax/swing/plaf/basic/BasicSplitPaneUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicSplitPaneUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicTabbedPaneUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicTabbedPaneUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicTableHeaderUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicTableHeaderUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicTableUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicTableUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicTextAreaUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicTextAreaUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicTextFieldUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicTextFieldUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicTextUI.$(OBJEXT)\n@@ -17282,10 +17481,14 @@ mostlyclean-compile:\n \t-rm -f javax/swing/plaf/basic/BasicToolBarSeparatorUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicToolBarUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicToolBarUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicToolTipUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicToolTipUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicTreeUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicTreeUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicViewportUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicViewportUI.lo\n+\t-rm -f javax/swing/plaf/basic/ComboPopup.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/ComboPopup.lo\n \t-rm -f javax/swing/plaf/metal/MetalLookAndFeel.$(OBJEXT)\n \t-rm -f javax/swing/plaf/metal/MetalLookAndFeel.lo\n \t-rm -f javax/swing/table/AbstractTableModel.$(OBJEXT)\n@@ -17356,18 +17559,30 @@ mostlyclean-compile:\n \t-rm -f javax/swing/text/Position.lo\n \t-rm -f javax/swing/text/Segment.$(OBJEXT)\n \t-rm -f javax/swing/text/Segment.lo\n+\t-rm -f javax/swing/text/SimpleAttributeSet.$(OBJEXT)\n+\t-rm -f javax/swing/text/SimpleAttributeSet.lo\n \t-rm -f javax/swing/text/Style.$(OBJEXT)\n \t-rm -f javax/swing/text/Style.lo\n+\t-rm -f javax/swing/text/StyleConstants.$(OBJEXT)\n+\t-rm -f javax/swing/text/StyleConstants.lo\n+\t-rm -f javax/swing/text/StyleContext.$(OBJEXT)\n+\t-rm -f javax/swing/text/StyleContext.lo\n \t-rm -f javax/swing/text/StyledDocument.$(OBJEXT)\n \t-rm -f javax/swing/text/StyledDocument.lo\n \t-rm -f javax/swing/text/StyledEditorKit.$(OBJEXT)\n \t-rm -f javax/swing/text/StyledEditorKit.lo\n \t-rm -f javax/swing/text/TabExpander.$(OBJEXT)\n \t-rm -f javax/swing/text/TabExpander.lo\n+\t-rm -f javax/swing/text/TabSet.$(OBJEXT)\n+\t-rm -f javax/swing/text/TabSet.lo\n+\t-rm -f javax/swing/text/TabStop.$(OBJEXT)\n+\t-rm -f javax/swing/text/TabStop.lo\n \t-rm -f javax/swing/text/TabableView.$(OBJEXT)\n \t-rm -f javax/swing/text/TabableView.lo\n \t-rm -f javax/swing/text/TextAction.$(OBJEXT)\n \t-rm -f javax/swing/text/TextAction.lo\n+\t-rm -f javax/swing/text/Utilities.$(OBJEXT)\n+\t-rm -f javax/swing/text/Utilities.lo\n \t-rm -f javax/swing/text/View.$(OBJEXT)\n \t-rm -f javax/swing/text/View.lo\n \t-rm -f javax/swing/text/ViewFactory.$(OBJEXT)\n@@ -17470,6 +17685,8 @@ mostlyclean-compile:\n \t-rm -f jni/classpath/lib_gnu_java_awt_peer_gtk_la-native_state.lo\n \t-rm -f jni/classpath/lib_gnu_java_awt_peer_gtk_la-primlib.$(OBJEXT)\n \t-rm -f jni/classpath/lib_gnu_java_awt_peer_gtk_la-primlib.lo\n+\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.$(OBJEXT)\n+\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkClasspathFontPeer.$(OBJEXT)\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkClasspathFontPeer.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.$(OBJEXT)\n@@ -17806,6 +18023,8 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/$(DEPDIR)/ClasspathFontPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/$(DEPDIR)/EmbeddedWindowPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/$(DEPDIR)/GLightweightPeer.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkClasspathFontPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkClasspathFontPeerMetrics.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkFontMetrics.Plo@am__quote@\n@@ -17814,8 +18033,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphics2D.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArg.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArgList.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkCanvasPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkCheckboxGroupPeer.Plo@am__quote@\n@@ -19545,6 +19762,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/AbstractCellEditor.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/AbstractListModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/AbstractSet.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/AbstractSpinnerModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/Action.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/ActionMap.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/BorderFactory.Plo@am__quote@\n@@ -19609,6 +19827,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JScrollPane.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JSeparator.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JSlider.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JSpinner.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JSplitPane.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JTabbedPane.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JTable.Plo@am__quote@\n@@ -19643,12 +19862,15 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SingleSelectionModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SizeRequirements.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SizeSequence.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SpinnerModel.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SpinnerNumberModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/Spring.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SpringLayout.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SwingConstants.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SwingUtilities.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/Timer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/ToolTipManager.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/TransferHandler.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/UIDefaults.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/UIManager.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/UnsupportedLookAndFeelException.Plo@am__quote@\n@@ -19668,6 +19890,10 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/colorchooser/$(DEPDIR)/ColorChooserComponentFactory.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/colorchooser/$(DEPDIR)/ColorSelectionModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/colorchooser/$(DEPDIR)/DefaultColorSelectionModel.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/colorchooser/$(DEPDIR)/DefaultHSBChooserPanel.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/colorchooser/$(DEPDIR)/DefaultPreviewPanel.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/colorchooser/$(DEPDIR)/DefaultRGBChooserPanel.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/colorchooser/$(DEPDIR)/DefaultSwatchChooserPanel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/event/$(DEPDIR)/AncestorEvent.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/event/$(DEPDIR)/AncestorListener.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/event/$(DEPDIR)/CaretEvent.Plo@am__quote@\n@@ -19761,8 +19987,14 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicButtonUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicCheckBoxMenuItemUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicCheckBoxUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicColorChooserUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicComboBoxEditor.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicComboBoxRenderer.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicComboBoxUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicComboPopup.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicDesktopIconUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicDesktopPaneUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicFormattedTextFieldUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicGraphicsUtils.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicIconFactory.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicInternalFrameTitlePane.Plo@am__quote@\n@@ -19775,6 +20007,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicMenuUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicOptionPaneUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicPanelUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicPasswordFieldUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicPopupMenuSeparatorUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicPopupMenuUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicProgressBarUI.Plo@am__quote@\n@@ -19785,16 +20018,22 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicScrollPaneUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicSeparatorUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicSliderUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicSpinnerUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicSplitPaneDivider.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicSplitPaneUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicTabbedPaneUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicTableHeaderUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicTableUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicTextAreaUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicTextFieldUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicTextUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicToggleButtonUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicToolBarSeparatorUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicToolBarUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicToolTipUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicTreeUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicViewportUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/ComboPopup.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/metal/$(DEPDIR)/MetalLookAndFeel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/table/$(DEPDIR)/AbstractTableModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/table/$(DEPDIR)/DefaultTableCellRenderer.Plo@am__quote@\n@@ -19830,12 +20069,18 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/PlainView.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/Position.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/Segment.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/SimpleAttributeSet.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/Style.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/StyleConstants.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/StyleContext.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/StyledDocument.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/StyledEditorKit.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/TabExpander.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/TabSet.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/TabStop.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/TabableView.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/TextAction.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/Utilities.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/View.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/ViewFactory.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/html/$(DEPDIR)/HTML.Plo@am__quote@\n@@ -19887,6 +20132,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@jni/classpath/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-jnilink.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/classpath/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-native_state.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/classpath/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-primlib.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkClasspathFontPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.Plo@am__quote@\n@@ -20257,6 +20503,13 @@ jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkWindowPeer.lo\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkWindowPeer.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n \n+jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo: jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c\n+@am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c; \\\n+@am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.Tpo\"; exit 1; fi\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c' object='jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c\n+\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gthread-jni.lo: jni/gtk-peer/gthread-jni.c\n @am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gthread-jni.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gthread-jni.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gthread-jni.lo `test -f 'jni/gtk-peer/gthread-jni.c' || echo '$(srcdir)/'`jni/gtk-peer/gthread-jni.c; \\\n @am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gthread-jni.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gthread-jni.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gthread-jni.Tpo\"; exit 1; fi\n@@ -20396,20 +20649,6 @@ gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo: gnu/java\n @AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo `test -f 'gnu/java/awt/peer/gtk/GdkPixbufDecoder.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkPixbufDecoder.java\n \n-gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArg.lo: gnu/java/awt/peer/gtk/GtkArg.java\n-@am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArg.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArg.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArg.lo `test -f 'gnu/java/awt/peer/gtk/GtkArg.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkArg.java; \\\n-@am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArg.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArg.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArg.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tsource='gnu/java/awt/peer/gtk/GtkArg.java' object='gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArg.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArg.lo `test -f 'gnu/java/awt/peer/gtk/GtkArg.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkArg.java\n-\n-gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArgList.lo: gnu/java/awt/peer/gtk/GtkArgList.java\n-@am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArgList.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArgList.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArgList.lo `test -f 'gnu/java/awt/peer/gtk/GtkArgList.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkArgList.java; \\\n-@am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArgList.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArgList.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkArgList.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tsource='gnu/java/awt/peer/gtk/GtkArgList.java' object='gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArgList.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkArgList.lo `test -f 'gnu/java/awt/peer/gtk/GtkArgList.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkArgList.java\n-\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo: gnu/java/awt/peer/gtk/GtkButtonPeer.java\n @am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo `test -f 'gnu/java/awt/peer/gtk/GtkButtonPeer.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkButtonPeer.java; \\\n @am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Tpo\"; exit 1; fi\n@@ -20648,6 +20887,20 @@ gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkWindowPeer.lo: gnu/java/aw\n @AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkWindowPeer.lo `test -f 'gnu/java/awt/peer/gtk/GtkWindowPeer.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkWindowPeer.java\n \n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.lo: gnu/java/awt/peer/gtk/GThreadMutex.java\n+@am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.lo `test -f 'gnu/java/awt/peer/gtk/GThreadMutex.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GThreadMutex.java; \\\n+@am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.Tpo\"; exit 1; fi\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tsource='gnu/java/awt/peer/gtk/GThreadMutex.java' object='gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadMutex.lo `test -f 'gnu/java/awt/peer/gtk/GThreadMutex.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GThreadMutex.java\n+\n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.lo: gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java\n+@am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.lo `test -f 'gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java; \\\n+@am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.Tpo\"; exit 1; fi\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tsource='gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java' object='gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GThreadNativeMethodRunner.lo `test -f 'gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java\n+\n mostlyclean-libtool:\n \t-rm -f *.lo\n \n@@ -21133,270 +21386,270 @@ clean-generic:\n \n distclean-generic:\n \t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n-\t-rm -f java/sql/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/nio/channels/spi/$(am__dirstamp)\n-\t-rm -f java/util/regex/$(am__dirstamp)\n-\t-rm -f javax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/rmi/rmic/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/net/protocol/file/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/net/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/lang/ref/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/table/$(am__dirstamp)\n-\t-rm -f javax/swing/$(am__dirstamp)\n-\t-rm -f java/awt/datatransfer/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/tree/$(am__dirstamp)\n-\t-rm -f javax/swing/text/$(am__dirstamp)\n-\t-rm -f javax/naming/spi/$(am__dirstamp)\n-\t-rm -f javax/naming/ldap/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/print/attribute/standard/$(am__dirstamp)\n-\t-rm -f java/util/$(am__dirstamp)\n-\t-rm -f java/awt/dnd/peer/$(am__dirstamp)\n-\t-rm -f javax/print/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/tree/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/awt/$(am__dirstamp)\n-\t-rm -f java/applet/$(am__dirstamp)\n-\t-rm -f gnu/classpath/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/security/auth/x500/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/rmi/server/$(am__dirstamp)\n-\t-rm -f java/rmi/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/lang/ref/$(am__dirstamp)\n-\t-rm -f gnu/java/rmi/rmic/$(am__dirstamp)\n-\t-rm -f gnu/java/awt/image/$(am__dirstamp)\n-\t-rm -f gnu/java/net/protocol/jar/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f jni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/util/prefs/$(am__dirstamp)\n-\t-rm -f java/util/regex/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/util/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/awt/peer/$(am__dirstamp)\n-\t-rm -f java/awt/image/renderable/$(am__dirstamp)\n-\t-rm -f javax/transaction/xa/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/image/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/filechooser/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/datatransfer/$(am__dirstamp)\n-\t-rm -f gnu/java/beans/editors/$(am__dirstamp)\n-\t-rm -f java/awt/font/$(am__dirstamp)\n+\t-rm -f javax/naming/$(am__dirstamp)\n+\t-rm -f java/util/logging/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/beans/$(am__dirstamp)\n+\t-rm -f gnu/java/awt/$(am__dirstamp)\n+\t-rm -f javax/swing/border/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/w3c/dom/traversal/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/rmi/activation/$(am__dirstamp)\n+\t-rm -f java/security/interfaces/$(am__dirstamp)\n \t-rm -f gnu/java/locale/$(am__dirstamp)\n-\t-rm -f gnu/gcj/$(am__dirstamp)\n-\t-rm -f gnu/gcj/xlib/$(am__dirstamp)\n-\t-rm -f javax/naming/directory/$(am__dirstamp)\n+\t-rm -f gnu/java/beans/$(am__dirstamp)\n+\t-rm -f gnu/java/net/protocol/jar/$(am__dirstamp)\n \t-rm -f java/awt/$(am__dirstamp)\n-\t-rm -f gnu/java/rmi/dgc/$(am__dirstamp)\n-\t-rm -f java/security/cert/$(am__dirstamp)\n-\t-rm -f javax/swing/event/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/gcj/convert/$(am__dirstamp)\n-\t-rm -f gnu/java/security/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/util/zip/$(am__dirstamp)\n-\t-rm -f javax/swing/text/html/parser/$(am__dirstamp)\n \t-rm -f org/xml/sax/helpers/$(am__dirstamp)\n-\t-rm -f javax/swing/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/font/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f sysdep/$(am__dirstamp)\n-\t-rm -f javax/swing/text/html/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/xml/sax/ext/$(am__dirstamp)\n+\t-rm -f java/security/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/net/protocol/file/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/w3c/dom/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/colorchooser/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/util/prefs/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/lang/$(am__dirstamp)\n+\t-rm -f java/lang/reflect/$(am__dirstamp)\n+\t-rm -f java/math/$(am__dirstamp)\n+\t-rm -f gnu/java/net/protocol/file/$(am__dirstamp)\n+\t-rm -f javax/transaction/xa/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/naming/ldap/$(am__dirstamp)\n \t-rm -f java/awt/geom/$(am__dirstamp)\n-\t-rm -f javax/transaction/xa/$(am__dirstamp)\n-\t-rm -f gnu/java/nio/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f org/w3c/dom/ranges/$(am__dirstamp)\n-\t-rm -f javax/swing/plaf/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/rmi/registry/$(am__dirstamp)\n-\t-rm -f javax/swing/undo/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/rmi/registry/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/accessibility/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/security/provider/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/peer/$(am__dirstamp)\n-\t-rm -f java/nio/channels/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/imageio/spi/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/beans/$(am__dirstamp)\n-\t-rm -f gnu/java/lang/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/color/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/lang/reflect/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/io/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/security/interfaces/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/security/provider/$(am__dirstamp)\n+\t-rm -f javax/naming/event/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/font/$(am__dirstamp)\n+\t-rm -f java/text/$(am__dirstamp)\n \t-rm -f gnu/java/util/prefs/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/nio/channels/$(am__dirstamp)\n-\t-rm -f java/nio/charset/spi/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/lang/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/im/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/imageio/stream/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/image/$(am__dirstamp)\n-\t-rm -f java/security/spec/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/text/$(am__dirstamp)\n-\t-rm -f javax/imageio/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/rmi/$(am__dirstamp)\n-\t-rm -f javax/naming/directory/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f org/xml/sax/$(am__dirstamp)\n-\t-rm -f java/security/interfaces/$(am__dirstamp)\n-\t-rm -f javax/swing/colorchooser/$(am__dirstamp)\n-\t-rm -f java/awt/print/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/sql/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/util/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/rmi/$(am__dirstamp)\n-\t-rm -f org/xml/sax/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/awt/peer/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/dnd/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/beans/info/$(am__dirstamp)\n-\t-rm -f java/beans/beancontext/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/nio/charset/spi/$(am__dirstamp)\n-\t-rm -f javax/naming/spi/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/gcj/convert/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/plaf/$(am__dirstamp)\n-\t-rm -f java/nio/charset/$(am__dirstamp)\n-\t-rm -f javax/swing/text/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/util/prefs/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/security/cert/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/text/html/parser/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/security/acl/$(am__dirstamp)\n-\t-rm -f gnu/java/net/protocol/jar/$(am__dirstamp)\n-\t-rm -f java/text/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/print/attribute/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/rmi/rmic/$(am__dirstamp)\n+\t-rm -f javax/print/event/$(am__dirstamp)\n+\t-rm -f gnu/java/nio/charset/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/rmi/dgc/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/security/$(am__dirstamp)\n+\t-rm -f javax/swing/plaf/metal/$(am__dirstamp)\n+\t-rm -f gnu/gcj/convert/$(am__dirstamp)\n+\t-rm -f java/nio/channels/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/rmi/dgc/$(am__dirstamp)\n+\t-rm -f gnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/math/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/util/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f gnu/gcj/runtime/$(am__dirstamp)\n-\t-rm -f javax/swing/filechooser/$(am__dirstamp)\n-\t-rm -f gnu/java/security/der/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/regexp/$(am__dirstamp)\n+\t-rm -f java/nio/charset/$(am__dirstamp)\n+\t-rm -f jni/classpath/$(am__dirstamp)\n+\t-rm -f gnu/awt/$(am__dirstamp)\n \t-rm -f javax/security/auth/x500/$(am__dirstamp)\n-\t-rm -f org/w3c/dom/traversal/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/im/$(am__dirstamp)\n-\t-rm -f gnu/java/security/$(am__dirstamp)\n-\t-rm -f gnu/java/net/$(am__dirstamp)\n-\t-rm -f java/nio/charset/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f jni/gtk-peer/$(am__dirstamp)\n-\t-rm -f javax/swing/event/$(am__dirstamp)\n-\t-rm -f gnu/java/net/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/awt/peer/gtk/$(am__dirstamp)\n \t-rm -f java/awt/dnd/peer/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f javax/swing/border/$(am__dirstamp)\n-\t-rm -f java/awt/geom/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/rmi/server/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/regexp/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/net/protocol/file/$(am__dirstamp)\n-\t-rm -f gnu/java/lang/reflect/$(am__dirstamp)\n+\t-rm -f gnu/java/nio/channels/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f jni/classpath/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/net/$(am__dirstamp)\n-\t-rm -f gnu/java/lang/reflect/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f org/xml/sax/ext/$(am__dirstamp)\n-\t-rm -f gnu/java/awt/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/locale/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/transaction/$(am__dirstamp)\n-\t-rm -f java/rmi/registry/$(am__dirstamp)\n-\t-rm -f gnu/java/security/action/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/print/$(am__dirstamp)\n-\t-rm -f java/awt/print/$(am__dirstamp)\n-\t-rm -f java/text/$(am__dirstamp)\n-\t-rm -f java/util/logging/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/transaction/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/undo/$(am__dirstamp)\n-\t-rm -f gnu/java/security/util/$(am__dirstamp)\n-\t-rm -f java/nio/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/print/attribute/standard/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f org/w3c/dom/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/rmi/activation/$(am__dirstamp)\n-\t-rm -f java/rmi/activation/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/accessibility/$(am__dirstamp)\n-\t-rm -f gnu/java/nio/charset/$(am__dirstamp)\n-\t-rm -f java/security/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/util/jar/$(am__dirstamp)\n-\t-rm -f gnu/awt/j2d/$(am__dirstamp)\n-\t-rm -f javax/imageio/$(am__dirstamp)\n-\t-rm -f java/lang/$(am__dirstamp)\n-\t-rm -f org/w3c/dom/traversal/$(am__dirstamp)\n-\t-rm -f gnu/java/security/x509/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/awt/image/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/security/x509/$(am__dirstamp)\n-\t-rm -f java/beans/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/rmi/server/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/beans/editors/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/imageio/event/$(am__dirstamp)\n-\t-rm -f java/io/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/table/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/security/der/$(am__dirstamp)\n-\t-rm -f javax/imageio/event/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/rmi/registry/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f jni/classpath/$(am__dirstamp)\n-\t-rm -f javax/imageio/stream/$(am__dirstamp)\n-\t-rm -f gnu/java/net/protocol/http/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/colorchooser/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/classpath/$(am__dirstamp)\n-\t-rm -f gnu/java/nio/charset/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/tree/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/naming/ldap/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/nio/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/peer/$(am__dirstamp)\n+\t-rm -f java/awt/image/renderable/$(am__dirstamp)\n+\t-rm -f gnu/java/security/$(am__dirstamp)\n+\t-rm -f javax/naming/spi/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/nio/$(am__dirstamp)\n+\t-rm -f java/nio/charset/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/net/protocol/core/$(am__dirstamp)\n+\t-rm -f gnu/java/nio/$(am__dirstamp)\n+\t-rm -f java/lang/ref/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/rmi/dgc/$(am__dirstamp)\n+\t-rm -f java/awt/peer/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/color/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/util/zip/$(am__dirstamp)\n+\t-rm -f java/awt/datatransfer/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/awt/image/renderable/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/beans/beancontext/$(am__dirstamp)\n-\t-rm -f gnu/java/beans/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/util/zip/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f org/w3c/dom/ranges/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/peer/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f javax/swing/plaf/basic/$(am__dirstamp)\n-\t-rm -f gnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/awt/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/print/event/$(am__dirstamp)\n-\t-rm -f gnu/awt/xlib/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/swing/plaf/metal/$(am__dirstamp)\n-\t-rm -f java/util/logging/$(am__dirstamp)\n-\t-rm -f java/lang/reflect/$(am__dirstamp)\n-\t-rm -f gnu/java/security/provider/$(am__dirstamp)\n-\t-rm -f gnu/java/beans/info/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/sql/$(am__dirstamp)\n-\t-rm -f javax/naming/$(am__dirstamp)\n-\t-rm -f java/security/spec/$(am__dirstamp)\n-\t-rm -f java/awt/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/net/protocol/gcjlib/$(am__dirstamp)\n-\t-rm -f gnu/java/rmi/dgc/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/rmi/dgc/$(am__dirstamp)\n \t-rm -f gnu/gcj/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/event/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/sql/$(am__dirstamp)\n+\t-rm -f javax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/awt/xlib/$(am__dirstamp)\n+\t-rm -f gnu/awt/j2d/$(am__dirstamp)\n \t-rm -f java/util/jar/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/math/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/beans/$(am__dirstamp)\n-\t-rm -f javax/naming/ldap/$(am__dirstamp)\n+\t-rm -f gnu/java/lang/reflect/$(am__dirstamp)\n+\t-rm -f javax/print/attribute/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/colorchooser/$(am__dirstamp)\n+\t-rm -f javax/print/attribute/$(am__dirstamp)\n+\t-rm -f javax/print/$(am__dirstamp)\n+\t-rm -f java/security/cert/$(am__dirstamp)\n+\t-rm -f gnu/awt/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/naming/directory/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/security/action/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/security/x509/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/w3c/dom/$(am__dirstamp)\n+\t-rm -f java/nio/channels/spi/$(am__dirstamp)\n+\t-rm -f gnu/java/lang/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/rmi/server/$(am__dirstamp)\n+\t-rm -f gnu/gcj/xlib/$(am__dirstamp)\n+\t-rm -f gnu/java/rmi/server/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/color/$(am__dirstamp)\n+\t-rm -f java/awt/print/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/lang/reflect/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/security/der/$(am__dirstamp)\n+\t-rm -f gnu/java/net/protocol/http/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/text/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/util/prefs/$(am__dirstamp)\n+\t-rm -f gnu/java/security/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/print/$(am__dirstamp)\n+\t-rm -f java/awt/geom/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/imageio/event/$(am__dirstamp)\n+\t-rm -f javax/imageio/spi/$(am__dirstamp)\n+\t-rm -f gnu/gcj/io/$(am__dirstamp)\n+\t-rm -f gnu/java/nio/charset/$(am__dirstamp)\n+\t-rm -f javax/swing/plaf/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/naming/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f gnu/java/net/protocol/gcjlib/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/color/$(am__dirstamp)\n-\t-rm -f javax/swing/border/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/gcj/io/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/lang/$(am__dirstamp)\n+\t-rm -f java/nio/channels/spi/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/im/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/transaction/xa/$(am__dirstamp)\n+\t-rm -f javax/swing/table/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/security/cert/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/beans/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/w3c/dom/traversal/$(am__dirstamp)\n+\t-rm -f javax/swing/$(am__dirstamp)\n+\t-rm -f java/rmi/registry/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/awt/image/$(am__dirstamp)\n+\t-rm -f javax/naming/directory/$(am__dirstamp)\n+\t-rm -f javax/swing/plaf/metal/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/lang/reflect/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/imageio/spi/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/print/event/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/nio/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/tree/$(am__dirstamp)\n+\t-rm -f gnu/java/rmi/dgc/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/image/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f sysdep/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/applet/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/rmi/server/$(am__dirstamp)\n+\t-rm -f java/text/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/classpath/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/rmi/$(am__dirstamp)\n+\t-rm -f javax/imageio/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/awt/xlib/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/security/x509/$(am__dirstamp)\n+\t-rm -f gnu/java/awt/image/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/beans/beancontext/$(am__dirstamp)\n+\t-rm -f gnu/java/rmi/$(am__dirstamp)\n+\t-rm -f gnu/regexp/$(am__dirstamp)\n+\t-rm -f java/security/interfaces/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/net/protocol/http/$(am__dirstamp)\n+\t-rm -f jni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/awt/peer/gtk/$(am__dirstamp)\n+\t-rm -f javax/accessibility/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/imageio/event/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/accessibility/$(am__dirstamp)\n+\t-rm -f gnu/java/awt/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/regexp/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/security/util/$(am__dirstamp)\n+\t-rm -f javax/print/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f gnu/java/rmi/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/naming/event/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/math/$(am__dirstamp)\n-\t-rm -f gnu/java/text/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/imageio/spi/$(am__dirstamp)\n-\t-rm -f gnu/gcj/xlib/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/naming/event/$(am__dirstamp)\n-\t-rm -f gnu/java/awt/$(am__dirstamp)\n-\t-rm -f java/awt/im/spi/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/net/protocol/core/$(am__dirstamp)\n-\t-rm -f gnu/java/io/$(am__dirstamp)\n+\t-rm -f java/awt/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/event/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/beans/editors/$(am__dirstamp)\n+\t-rm -f java/nio/charset/spi/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/text/$(am__dirstamp)\n+\t-rm -f gnu/classpath/$(am__dirstamp)\n+\t-rm -f java/math/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/net/$(am__dirstamp)\n+\t-rm -f javax/swing/text/$(am__dirstamp)\n+\t-rm -f javax/swing/table/$(am__dirstamp)\n+\t-rm -f gnu/java/beans/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f javax/swing/text/html/$(am__dirstamp)\n-\t-rm -f org/xml/sax/ext/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/util/$(am__dirstamp)\n-\t-rm -f java/rmi/dgc/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/nio/channels/spi/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/nio/channels/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/awt/xlib/$(am__dirstamp)\n-\t-rm -f gnu/awt/j2d/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f javax/print/event/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/io/$(am__dirstamp)\n-\t-rm -f org/xml/sax/helpers/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f org/w3c/dom/$(am__dirstamp)\n-\t-rm -f javax/print/attribute/$(am__dirstamp)\n+\t-rm -f gnu/gcj/$(am__dirstamp)\n+\t-rm -f java/util/jar/$(am__dirstamp)\n+\t-rm -f javax/print/attribute/standard/$(am__dirstamp)\n+\t-rm -f javax/security/auth/x500/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/naming/spi/$(am__dirstamp)\n+\t-rm -f javax/swing/filechooser/$(am__dirstamp)\n+\t-rm -f javax/swing/event/$(am__dirstamp)\n+\t-rm -f javax/sql/$(am__dirstamp)\n+\t-rm -f java/awt/image/$(am__dirstamp)\n+\t-rm -f gnu/java/beans/info/$(am__dirstamp)\n+\t-rm -f java/awt/event/$(am__dirstamp)\n+\t-rm -f gnu/java/net/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/rmi/registry/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/transaction/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/util/$(am__dirstamp)\n+\t-rm -f gnu/java/io/$(am__dirstamp)\n+\t-rm -f java/beans/beancontext/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/util/regex/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/beans/info/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/undo/$(am__dirstamp)\n+\t-rm -f java/awt/dnd/peer/$(am__dirstamp)\n+\t-rm -f javax/swing/undo/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/rmi/registry/$(am__dirstamp)\n+\t-rm -f sysdep/$(am__dirstamp)\n+\t-rm -f java/applet/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/text/html/parser/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/lang/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/imageio/$(am__dirstamp)\n+\t-rm -f java/sql/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/awt/peer/$(am__dirstamp)\n+\t-rm -f java/rmi/activation/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/text/html/parser/$(am__dirstamp)\n+\t-rm -f gnu/java/security/provider/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/security/spec/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/rmi/registry/$(am__dirstamp)\n+\t-rm -f gnu/java/awt/peer/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/security/der/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/sql/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/w3c/dom/ranges/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/security/acl/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/rmi/server/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/net/protocol/gcjlib/$(am__dirstamp)\n+\t-rm -f gnu/java/locale/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/datatransfer/$(am__dirstamp)\n+\t-rm -f gnu/java/util/prefs/$(am__dirstamp)\n+\t-rm -f java/security/spec/$(am__dirstamp)\n+\t-rm -f java/util/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/net/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/lang/ref/$(am__dirstamp)\n+\t-rm -f gnu/java/util/$(am__dirstamp)\n+\t-rm -f gnu/java/nio/channels/$(am__dirstamp)\n+\t-rm -f java/rmi/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/xml/sax/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/java/rmi/rmic/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/transaction/$(am__dirstamp)\n \t-rm -f gnu/java/math/$(am__dirstamp)\n-\t-rm -f java/math/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/util/regex/$(am__dirstamp)\n+\t-rm -f gnu/java/security/action/$(am__dirstamp)\n+\t-rm -f gnu/java/net/protocol/jar/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/nio/charset/spi/$(am__dirstamp)\n+\t-rm -f java/awt/im/$(am__dirstamp)\n+\t-rm -f javax/swing/text/html/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/awt/im/spi/$(am__dirstamp)\n-\t-rm -f gnu/java/net/protocol/core/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/nio/$(am__dirstamp)\n-\t-rm -f java/awt/dnd/$(am__dirstamp)\n-\t-rm -f gnu/gcj/io/$(am__dirstamp)\n-\t-rm -f java/security/acl/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/awt/event/$(am__dirstamp)\n-\t-rm -f javax/naming/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/net/protocol/http/$(am__dirstamp)\n-\t-rm -f javax/swing/plaf/metal/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/io/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f gnu/java/security/util/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f gnu/java/security/action/$(am__dirstamp)\n-\t-rm -f java/nio/$(am__dirstamp)\n+\t-rm -f java/awt/dnd/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/imageio/stream/$(am__dirstamp)\n+\t-rm -f org/w3c/dom/ranges/$(am__dirstamp)\n+\t-rm -f java/awt/dnd/$(am__dirstamp)\n+\t-rm -f gnu/java/beans/editors/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/font/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/plaf/$(am__dirstamp)\n+\t-rm -f java/util/logging/$(am__dirstamp)\n+\t-rm -f gnu/java/net/protocol/core/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f jni/gtk-peer/$(am__dirstamp)\n+\t-rm -f gnu/gcj/xlib/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/print/attribute/standard/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/rmi/server/$(am__dirstamp)\n+\t-rm -f gnu/awt/j2d/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/event/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/xml/sax/$(am__dirstamp)\n+\t-rm -f gnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/security/acl/$(am__dirstamp)\n+\t-rm -f gnu/java/io/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/xml/sax/ext/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f org/xml/sax/helpers/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/awt/im/spi/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/gcj/convert/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/lang/$(am__dirstamp)\n+\t-rm -f gnu/java/text/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/nio/channels/$(am__dirstamp)\n-\t-rm -f java/security/$(am__dirstamp)\n-\t-rm -f jni/classpath/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/sql/$(am__dirstamp)\n+\t-rm -f javax/imageio/stream/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f gnu/gcj/io/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/filechooser/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f java/applet/$(am__dirstamp)\n+\t-rm -f javax/naming/event/$(am__dirstamp)\n \n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\""}, {"sha": "41dc124279cf9736034e864e0a8206d85340986f", "filename": "libjava/gnu/awt/LightweightRedirector.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fawt%2FLightweightRedirector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fawt%2FLightweightRedirector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2FLightweightRedirector.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -141,7 +141,7 @@ MouseEvent redirectMouse(MouseEvent event)\n     \n     MouseEvent redirected = new MouseEvent(source, event.getID(),\n \t\t\t\t\t   event.getWhen(),\n-\t\t\t\t\t   event.getModifiers(),\n+\t\t\t\t\t   event.getModifiersEx(),\n \t\t\t\t\t   x, y,\n \t\t\t\t\t   event.getClickCount(),\n \t\t\t\t\t   event.isPopupTrigger());\n@@ -157,20 +157,20 @@ MouseEvent redirectMouse(MouseEvent event)\n    */\n   int getButtonNumber(InputEvent event)\n   {\n-    int modifiers = event.getModifiers();\n+    int modifiers = event.getModifiersEx();\n     \n     modifiers &=\n-      InputEvent.BUTTON1_MASK |\n-      InputEvent.BUTTON2_MASK |\n-      InputEvent.BUTTON3_MASK;\n+      InputEvent.BUTTON1_DOWN_MASK |\n+      InputEvent.BUTTON2_DOWN_MASK |\n+      InputEvent.BUTTON3_DOWN_MASK;\n     \n     switch (modifiers)\n       {\n-      case InputEvent.BUTTON1_MASK:\n+      case InputEvent.BUTTON1_DOWN_MASK:\n \treturn 1;\n-      case InputEvent.BUTTON2_MASK:\n+      case InputEvent.BUTTON2_DOWN_MASK:\n \treturn 2;\n-      case InputEvent.BUTTON3_MASK:\n+      case InputEvent.BUTTON3_DOWN_MASK:\n \treturn 3;\n       case 0:\n \treturn 0;"}, {"sha": "66878185b5191ef4797107cc8c3ff9ae74b5203e", "filename": "libjava/gnu/awt/xlib/XEventLoop.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -197,13 +197,13 @@ AWTEvent createMouseEvent(int type, Component src)\n     switch (buttonEvt.button)\n       {\n       case 1:\n-\tmodifiers = InputEvent.BUTTON1_MASK;\n+\tmodifiers = InputEvent.BUTTON1_DOWN_MASK;\n \tbreak;\n       case 2:\n-\tmodifiers = InputEvent.BUTTON2_MASK;\n+\tmodifiers = InputEvent.BUTTON2_DOWN_MASK;\n \tbreak;\n       case 3:\n-\tmodifiers = InputEvent.BUTTON2_MASK;\n+\tmodifiers = InputEvent.BUTTON2_DOWN_MASK;\n \tbreak;\n       }\n     "}, {"sha": "643c40f2ad4541a76e7858c6f867a29b596e8f8b", "filename": "libjava/gnu/java/awt/peer/GLightweightPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,5 +1,5 @@\n /* GLightweightPeer.java --\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,6 @@\n import java.awt.Cursor;\n import java.awt.Dimension;\n import java.awt.Font;\n-import java.awt.Font;\n import java.awt.FontMetrics;\n import java.awt.Graphics;\n import java.awt.GraphicsConfiguration;"}, {"sha": "c374ba218260b4fd193ca712dc727b46efa10bc5", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics.java", "status": "modified", "additions": 105, "deletions": 9, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -64,7 +64,7 @@ public class GdkGraphics extends Graphics\n \n   static final int GDK_COPY = 0, GDK_XOR = 2;\n \n-  native int[] initState (GtkComponentPeer component);\n+  native void initState (GtkComponentPeer component);\n   native void initState (int width, int height);\n   native void copyState (GdkGraphics g);\n \n@@ -84,15 +84,15 @@ public class GdkGraphics extends Graphics\n     initState (width, height);\n     color = Color.black;\n     clip = new Rectangle (0, 0, width, height);\n-    font = new Font (\"Dialog\", Font.PLAIN, 10);\n+    font = new Font (\"Dialog\", Font.PLAIN, 12);\n   }\n \n   GdkGraphics (GtkComponentPeer component)\n   {\n     this.component = component;\n-    int rgb[] = initState (component);\n-    color = new Color (rgb[0], rgb[1], rgb[2]);\n-    font = component.awtComponent.getFont();\n+    initState (component);\n+    color = component.awtComponent.getForeground ();\n+    font = component.awtComponent.getFont ();\n     Dimension d = component.awtComponent.getSize ();\n     clip = new Rectangle (0, 0, d.width, d.height);\n   }\n@@ -126,6 +126,11 @@ public Graphics create ()\n   native public void dispose ();\n \n   native void copyPixmap (Graphics g, int x, int y, int width, int height);\n+  native void copyAndScalePixmap (Graphics g, boolean flip_x, boolean flip_y,\n+                                  int src_x, int src_y, \n+                                  int src_width, int src_height, \n+                                  int dest_x, int dest_y, \n+                                  int dest_width, int dest_height);\n   public boolean drawImage (Image img, int x, int y, \n \t\t\t    Color bgcolor, ImageObserver observer)\n   {\n@@ -161,7 +166,10 @@ public boolean drawImage (Image img, int x, int y, int width, int height,\n   {\n     if (img instanceof GtkOffScreenImage)\n       {\n-\tthrow new RuntimeException ();\n+        copyAndScalePixmap (img.getGraphics (), false, false,\n+                            0, 0, img.getWidth (null), img.getHeight (null), \n+                            x, y, width, height);\n+        return true;\n       }\n \n     GtkImage image = (GtkImage) img;\n@@ -186,7 +194,60 @@ public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2,\n   {\n     if (img instanceof GtkOffScreenImage)\n       {\n-\tthrow new RuntimeException ();\n+        int dx_start, dy_start, d_width, d_height;\n+        int sx_start, sy_start, s_width, s_height;\n+        boolean x_flip = false;\n+        boolean y_flip = false;\n+\n+        if (dx1 < dx2)\n+        {\n+          dx_start = dx1;\n+          d_width = dx2 - dx1;\n+        }\n+        else\n+        {\n+          dx_start = dx2;\n+          d_width = dx1 - dx2;\n+          x_flip ^= true;\n+        }\n+        if (dy1 < dy2)\n+        {\n+          dy_start = dy1;\n+          d_height = dy2 - dy1;\n+        }\n+        else\n+        {\n+          dy_start = dy2;\n+          d_height = dy1 - dy2;\n+          y_flip ^= true;\n+        }\n+        if (sx1 < sx2)\n+        {\n+          sx_start = sx1;\n+          s_width = sx2 - sx1;\n+        }\n+        else\n+        {\n+          sx_start = sx2;\n+          s_width = sx1 - sx2;\n+          x_flip ^= true;\n+        }\n+        if (sy1 < sy2)\n+        {\n+          sy_start = sy1;\n+          s_height = sy2 - sy1;\n+        }\n+        else\n+        {\n+          sy_start = sy2;\n+          s_height = sy1 - sy2;\n+          y_flip ^= true;\n+        }\n+\n+        copyAndScalePixmap (img.getGraphics (), x_flip, y_flip,\n+                            sx_start, sy_start, s_width, s_height, \n+                            dx_start, dy_start, d_width, d_height);\n+        return true;\n       }\n \n     GtkImage image = (GtkImage) img;\n@@ -238,13 +299,48 @@ public void drawString (AttributedCharacterIterator ci, int x, int y)\n   public void drawRoundRect(int x, int y, int width, int height, \n \t\t\t    int arcWidth, int arcHeight)\n   {\n-    // System.out.println (\"drawRoundRect called [UNIMPLEMENTED]\");\n+    if (arcWidth > width)\n+      arcWidth = width;\n+    if (arcHeight > height)\n+      arcHeight = height;\n+\n+    int xx = x + width - arcWidth;\n+    int yy = y + height - arcHeight;\n+\n+    drawArc (x, y, arcWidth, arcHeight, 90, 90);\n+    drawArc (xx, y, arcWidth, arcHeight, 0, 90);\n+    drawArc (xx, yy, arcWidth, arcHeight, 270, 90);\n+    drawArc (x, yy, arcWidth, arcHeight, 180, 90);\n+\n+    int y1 = y + arcHeight / 2;\n+    int y2 = y + height - arcHeight / 2;\n+    drawLine (x, y1, x, y2);\n+    drawLine (x + width, y1, x + width, y2);\n+\n+    int x1 = x + arcWidth / 2;\n+    int x2 = x + width - arcWidth / 2;\n+    drawLine (x1, y, x2, y);\n+    drawLine (x1, y + height, x2, y + height);\n   }\n \n   public void fillRoundRect (int x, int y, int width, int height, \n \t\t\t     int arcWidth, int arcHeight)\n   {\n-    // System.out.println (\"fillRoundRect called [UNIMPLEMENTED]\");\n+    if (arcWidth > width)\n+      arcWidth = width;\n+    if (arcHeight > height)\n+      arcHeight = height;\n+\n+    int xx = x + width - arcWidth;\n+    int yy = y + height - arcHeight;\n+\n+    fillArc (x, y, arcWidth, arcHeight, 90, 90);\n+    fillArc (xx, y, arcWidth, arcHeight, 0, 90);\n+    fillArc (xx, yy, arcWidth, arcHeight, 270, 90);\n+    fillArc (x, yy, arcWidth, arcHeight, 180, 90);\n+\n+    fillRect (x, y + arcHeight / 2, width, height - arcHeight + 1);\n+    fillRect (x + arcWidth / 2, y, width - arcWidth + 1, height);\n   }\n \n   public Shape getClip ()"}, {"sha": "0986960b8b3d218bf9ce3925a5ab2495a963d353", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics2D.java", "status": "modified", "additions": 41, "deletions": 21, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,5 +1,5 @@\n /* GdkGraphics2D.java\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,6 @@\n import java.util.Map;\n \n import java.text.AttributedCharacterIterator;\n-import java.util.Map;\n import java.util.Stack;\n import java.lang.Integer;\n import gnu.java.awt.ClasspathToolkit;\n@@ -88,7 +87,7 @@ public class GdkGraphics2D extends Graphics2D\n \n   private Stack stateStack;\n   \n-  native private int[] initState (GtkComponentPeer component);\n+  native private void initState (GtkComponentPeer component);\n   native private void initState (int width, int height);\n   native private void copyState (GdkGraphics2D g);\n   native public void dispose ();\n@@ -169,10 +168,10 @@ public Graphics create (int x, int y, int width, int height)\n   GdkGraphics2D (GtkComponentPeer component)\n   {\n     this.component = component;\n-    int rgb[] = initState (component);\n+    initState (component);\n \n-    setColor (new Color (rgb[0], rgb[1], rgb[2]));\n-    setBackground (new Color (rgb[3], rgb[4], rgb[5]));\n+    setColor (component.awtComponent.getForeground ());\n+    setBackground (component.awtComponent.getBackground ());\n     setPaint (getColor());\n     setFont (new Font(\"SansSerif\", Font.PLAIN, 12));\n     setTransform (new AffineTransform ());\n@@ -1478,14 +1477,28 @@ public void drawOval(int x, int y, int width, int height)\n   public void drawRoundRect(int x, int y, int width, int height, \n                             int arcWidth, int arcHeight)\n   {\n-    int x1 = x + arcWidth, x2 = x + width - arcWidth;\n-    int y1 = y + arcHeight, y2 = y + height - arcHeight;\n-    fillRect (x1, y, x2 - x1, height);\n-    fillRect (x, y1, width, y2 - y1);\n-    fillArc (x, y, arcWidth, arcHeight, 90, 90);\n-    fillArc (x1, y, arcWidth, arcHeight, 0, 90);\n-    fillArc (x2, y2, arcWidth, arcHeight, 270, 90);\n-    fillArc (x, y2, arcWidth, arcHeight, 180, 90);\n+    if (arcWidth > width)\n+      arcWidth = width;\n+    if (arcHeight > height)\n+      arcHeight = height;\n+\n+    int xx = x + width - arcWidth;\n+    int yy = y + height - arcHeight;\n+\n+    drawArc (x, y, arcWidth, arcHeight, 90, 90);\n+    drawArc (xx, y, arcWidth, arcHeight, 0, 90);\n+    drawArc (xx, yy, arcWidth, arcHeight, 270, 90);\n+    drawArc (x, yy, arcWidth, arcHeight, 180, 90);\n+\n+    int y1 = y + arcHeight / 2;\n+    int y2 = y + height - arcHeight / 2;\n+    drawLine (x, y1, x, y2);\n+    drawLine (x + width, y1, x + width, y2);\n+\n+    int x1 = x + arcWidth / 2;\n+    int x2 = x + width - arcWidth / 2;\n+    drawLine (x1, y, x2, y);\n+    drawLine (x1, y + height, x2, y + height);\n   }\n \n   public void drawString (String str, int x, int y)\n@@ -1527,14 +1540,21 @@ public void fillOval(int x, int y, int width, int height)\n   public void fillRoundRect (int x, int y, int width, int height, \n                              int arcWidth, int arcHeight)\n   {\n-    int x1 = x + arcWidth, x2 = x + width - arcWidth;\n-    int y1 = y + arcHeight, y2 = y + height - arcHeight;\n-    fillRect (x1, y, x2 - x1, height);\n-    fillRect (x, y1, width, y2 - y1);\n+    if (arcWidth > width)\n+      arcWidth = width;\n+    if (arcHeight > height)\n+      arcHeight = height;\n+\n+    int xx = x + width - arcWidth;\n+    int yy = y + height - arcHeight;\n+\n     fillArc (x, y, arcWidth, arcHeight, 90, 90);\n-    fillArc (x1, y, arcWidth, arcHeight, 0, 90);\n-    fillArc (x2, y2, arcWidth, arcHeight, 270, 90);\n-    fillArc (x, y2, arcWidth, arcHeight, 180, 90);\n+    fillArc (xx, y, arcWidth, arcHeight, 0, 90);\n+    fillArc (xx, yy, arcWidth, arcHeight, 270, 90);\n+    fillArc (x, yy, arcWidth, arcHeight, 180, 90);\n+\n+    fillRect (x, y + arcHeight / 2, width, height - arcHeight + 1);\n+    fillRect (x + arcWidth / 2, y, width - arcWidth + 1, height);\n   }\n \n   public Font getFont ()"}, {"sha": "db8aed6087b5dd1476ef266e4c78eb4baa3bde78", "filename": "libjava/gnu/java/awt/peer/gtk/GtkButtonPeer.java", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -50,12 +50,13 @@\n public class GtkButtonPeer extends GtkComponentPeer\n     implements ButtonPeer\n {\n-  native void create ();\n+  native void create (String label);\n+\n   public native void connectJObject ();\n   public native void connectSignals ();\n \n   native void gtkSetFont (String name, int style, int size);\n-  native void gtkSetLabel(String label);\n+  native void gtkSetLabel (String label);\n   native void gtkWidgetSetForeground (int red, int green, int blue);\n   native void gtkActivate ();\n \n@@ -64,6 +65,11 @@ public GtkButtonPeer (Button b)\n     super (b);\n   }\n \n+  void create ()\n+  {\n+    create (((Button) awtComponent).getLabel ());\n+  }\n+\n   public void setLabel (String label) \n   {\n     gtkSetLabel(label);\n@@ -78,10 +84,10 @@ public void handleEvent (AWTEvent e)\n \tp.translate(((Component) me.getSource()).getX(),\n \t            ((Component) me.getSource()).getY());\n \tif (!me.isConsumed ()\n-\t    && (me.getModifiers () & MouseEvent.BUTTON1_MASK) != 0\n+\t    && (me.getModifiersEx () & MouseEvent.BUTTON1_DOWN_MASK) != 0\n \t    && awtComponent.getBounds().contains(p))\n \t  postActionEvent (((Button)awtComponent).getActionCommand (), \n-\t\t\t   me.getModifiers ());\n+\t\t\t   me.getModifiersEx ());\n       }\n \n     if (e.getID () == KeyEvent.KEY_PRESSED)\n@@ -90,18 +96,11 @@ public void handleEvent (AWTEvent e)\n \tif (!ke.isConsumed () && ke.getKeyCode () == KeyEvent.VK_SPACE)\n           {\n             postActionEvent (((Button) awtComponent).getActionCommand (),\n-                             ke.getModifiers ());\n+                             ke.getModifiersEx ());\n             gtkActivate ();\n           }\n       }\n \n     super.handleEvent (e);\n   }\n-\n-  public void getArgs (Component component, GtkArgList args)\n-  {\n-    super.getArgs (component, args);\n-\n-    args.add (\"label\", ((Button)component).getLabel ());\n-  }\n }"}, {"sha": "361136f08e975362ed4d5c19232b66324d993985", "filename": "libjava/gnu/java/awt/peer/gtk/GtkCheckboxPeer.java", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -52,39 +52,39 @@ public class GtkCheckboxPeer extends GtkComponentPeer\n   // The current state of the GTK checkbox.\n   private boolean currentState;  \n \n-  public native void nativeCreate (GtkCheckboxGroupPeer group,\n-                                   boolean state);\n+  public native void create (GtkCheckboxGroupPeer group);\n   public native void nativeSetCheckboxGroup (GtkCheckboxGroupPeer group);\n   public native void connectSignals ();\n   native void gtkSetFont (String name, int style, int size);\n-  public native void gtkSetLabel (String label);\n+  native void gtkButtonSetLabel (String label);\n+  native void gtkToggleButtonSetActive (boolean is_active);\n \n   public GtkCheckboxPeer (Checkbox c)\n   {\n     super (c);\n   }\n \n-  // We can't fully use the ordinary getArgs code here, due to\n-  // oddities of this particular widget.  In particular we must be\n-  // able to switch between a checkbutton and a radiobutton\n-  // dynamically.\n+  // FIXME: we must be able to switch between a checkbutton and a\n+  // radiobutton dynamically.\n   public void create ()\n   {\n-    CheckboxGroup g = ((Checkbox) awtComponent).getCheckboxGroup ();\n+    Checkbox checkbox = (Checkbox) awtComponent;\n+    CheckboxGroup g = checkbox.getCheckboxGroup ();\n     old_group = GtkCheckboxGroupPeer.getCheckboxGroupPeer (g);\n-    currentState = ((Checkbox)awtComponent).getState();\n-    nativeCreate (old_group, currentState);\n+    create (old_group);\n+    gtkToggleButtonSetActive (checkbox.getState ());\n+    gtkButtonSetLabel (checkbox.getLabel ());\n   }\n \n   public void setState (boolean state)\n   {\n     if (currentState != state)\n-      set (\"active\", state);\n+      gtkToggleButtonSetActive (state);\n   }\n \n   public void setLabel (String label)\n   {\n-    gtkSetLabel (label);\n+    gtkButtonSetLabel (label);\n   }\n \n   public void setCheckboxGroup (CheckboxGroup group)\n@@ -100,13 +100,6 @@ public void setCheckboxGroup (CheckboxGroup group)\n       }\n   }\n \n-  public void getArgs (Component component, GtkArgList args)\n-  {\n-    super.getArgs (component, args);\n-    args.add (\"active\", ((Checkbox) component).getState ());\n-    args.add (\"label\", ((Checkbox) component).getLabel ());\n-  }\n-\n   // Override the superclass postItemEvent so that the peer doesn't\n   // need information that we have.\n   public void postItemEvent (Object item, int stateChange)"}, {"sha": "2ecea5cb9bae897a9eff8f3c5c877b12a1904e05", "filename": "libjava/gnu/java/awt/peer/gtk/GtkChoicePeer.java", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -58,25 +58,22 @@ public GtkChoicePeer (Choice c)\n \t  items[i] = c.getItem (i);\n \t  \n \tappend (items);\n-\n-        // Must set our state before notifying listeners\n-\t((Choice) awtComponent).select (c.getItem (0));\n-\tpostItemEvent (c.getItem (0), ItemEvent.SELECTED);\n       }\n   }\n \n   native void create ();\n \n   native void append (String items[]);\n-  native int getHistory ();\n+  native int nativeGetSelected ();\n   native void nativeAdd (String item, int index);\n   native void nativeRemove (int index);\n+  native void nativeRemoveAll ();\n \n   native public void select (int position);\n  \n   public void add (String item, int index)\n   {\n-    int before = getHistory();\n+    int before = nativeGetSelected();\n     \n     nativeAdd (item, index);\n     \n@@ -92,11 +89,11 @@ public void add (String item, int index)\n \n   public void remove (int index)\n   {\n-    int before = getHistory();\n+    int before = nativeGetSelected();\n     int after;\n     \n     nativeRemove (index);\n-    after = getHistory();\n+    after = nativeGetSelected();\n     \n     /* Generate an ItemEvent if we are removing the currently selected item\n        and there are at least one item left. */\n@@ -110,7 +107,7 @@ public void remove (int index)\n \n   public void removeAll ()\n   {\n-    nativeRemove (-1);\n+    nativeRemoveAll();\n   }\n   \n   public void addItem (String item, int position)"}, {"sha": "eae5a948bc47f600246b650e8f4e5daec318f4a8", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 54, "deletions": 70, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -61,7 +61,6 @@\n import java.awt.Window;\n import java.awt.event.FocusEvent;\n import java.awt.event.ItemEvent;\n-import java.awt.event.FocusEvent;\n import java.awt.event.KeyEvent;\n import java.awt.event.MouseEvent;\n import java.awt.event.PaintEvent;\n@@ -93,6 +92,8 @@ public class GtkComponentPeer extends GtkGenericPeer\n   native void gtkWidgetSetCursor (int type);\n   native void gtkWidgetSetBackground (int red, int green, int blue);\n   native void gtkWidgetSetForeground (int red, int green, int blue);\n+  native void gtkWidgetSetSensitive (boolean sensitive);\n+  native void gtkWidgetSetParent (ComponentPeer parent);\n   native void gtkWidgetRequestFocus ();\n   native void gtkWidgetDispatchKeyEvent (int id, long when, int mods,\n                                          int keyCode, int keyLocation);\n@@ -115,37 +116,59 @@ protected GtkComponentPeer (Component awtComponent)\n     this.awtComponent = awtComponent;\n     insets = new Insets (0, 0, 0, 0);\n \n-      create ();\n-      \n-      GtkArgList args = new GtkArgList ();\n-      getArgs (awtComponent, args);\n-      args.setArgs (this);\n-\n-      connectJObject ();\n-      connectSignals ();\n-\n-      if (awtComponent.getForeground () != null)\n-\tsetForeground (awtComponent.getForeground ());\n-      if (awtComponent.getBackground () != null)\n-\tsetBackground (awtComponent.getBackground ());\n-      if (awtComponent.getFont() != null)\n-\tsetFont(awtComponent.getFont());\n-\n-      setCursor (awtComponent.getCursor ());\n-      if (this instanceof GtkFileDialogPeer && awtComponent.getHeight() == 0\n-          && awtComponent.getWidth() == 0)\n+    create ();\n+\n+    setParent ();\n+\n+    connectJObject ();\n+    connectSignals ();\n+\n+    if (awtComponent.getForeground () != null)\n+      setForeground (awtComponent.getForeground ());\n+    if (awtComponent.getBackground () != null)\n+      setBackground (awtComponent.getBackground ());\n+    if (awtComponent.getFont() != null)\n+      setFont(awtComponent.getFont());\n+\n+    setCursor (awtComponent.getCursor ());\n+\n+    setComponentBounds ();\n+\n+    Rectangle bounds = awtComponent.getBounds ();\n+    setBounds (bounds.x, bounds.y, bounds.width, bounds.height);\n+    setVisibleAndEnabled ();\n+  }\n+\n+  void setParent ()\n+  {\n+    ComponentPeer p;\n+    Component component = awtComponent;\n+    do\n       {\n-        int[] dims = new int[2];\n-        gtkWidgetGetDimensions(dims);\n-        ((GtkFileDialogPeer) this).setBoundsCallback((Window)awtComponent, \n-                                                     awtComponent.getX(), \n-                                                     awtComponent.getY(),\n-                                                     dims[0], dims[1]);\n+        component = component.getParent ();\n+        p = component.getPeer ();\n       }\n+    while (p instanceof java.awt.peer.LightweightPeer);\n+\n+    if (p != null)\n+      gtkWidgetSetParent (p);\n+  }\n+\n+  /*\n+   * Set the bounds of this peer's AWT Component based on dimensions\n+   * returned by the native windowing system.  Most Components impose\n+   * their dimensions on the peers so the default implementation does\n+   * nothing.  However some peers, like GtkFileDialogPeer, need to\n+   * pass their size back to the AWT Component.\n+   */\n+  void setComponentBounds ()\n+  {\n+  }\n \n-      Rectangle bounds = awtComponent.getBounds ();\n-      setBounds (bounds.x, bounds.y, bounds.width, bounds.height);\n+  void setVisibleAndEnabled ()\n+  {\n     setVisible (awtComponent.isVisible ());\n+    setEnabled (awtComponent.isEnabled ());\n   }\n \n   public int checkImage (Image image, int width, int height, \n@@ -260,12 +283,12 @@ public void handleEvent (AWTEvent event)\n         break;\n       case KeyEvent.KEY_PRESSED:\n         ke = (KeyEvent) event;\n-        gtkWidgetDispatchKeyEvent (ke.getID (), ke.getWhen (), ke.getModifiers (),\n+        gtkWidgetDispatchKeyEvent (ke.getID (), ke.getWhen (), ke.getModifiersEx (),\n                                    ke.getKeyCode (), ke.getKeyLocation ());\n         break;\n       case KeyEvent.KEY_RELEASED:\n         ke = (KeyEvent) event;\n-        gtkWidgetDispatchKeyEvent (ke.getID (), ke.getWhen (), ke.getModifiers (),\n+        gtkWidgetDispatchKeyEvent (ke.getID (), ke.getWhen (), ke.getModifiersEx (),\n                                    ke.getKeyCode (), ke.getKeyLocation ());\n         break;\n       }\n@@ -417,7 +440,7 @@ public void setCursor (Cursor cursor)\n \n   public void setEnabled (boolean b)\n   {\n-    set (\"sensitive\", b);\n+    gtkWidgetSetSensitive (b);\n   }\n \n   public void setFont (Font f)\n@@ -506,45 +529,6 @@ protected void postItemEvent (Object item, int stateChange)\n \t\t\t\titem, stateChange));\n   }\n \n-  public void getArgs (Component component, GtkArgList args)\n-  {\n-    args.add (\"sensitive\", component.isEnabled ());\n-\n-    ComponentPeer p;\n-\n-    do\n-      {\n-\tcomponent = component.getParent ();\n-\tp = component.getPeer ();\n-      } while (p instanceof java.awt.peer.LightweightPeer);\n-    \n-    if (p != null)\n-      args.add (\"parent\", p);\n-  }\n-\n-  native void set (String name, String value);\n-  native void set (String name, boolean value);\n-  native void set (String name, int value);\n-  native void set (String name, float value);\n-  native void set (String name, Object value);\n-\n-  void set (GtkArg arg)\n-  {\n-    String name = arg.getName ();\n-    Object value = arg.getValue ();\n-\n-    if (value instanceof Boolean)\n-      set (name, ((Boolean)value).booleanValue ());\n-    else if (value instanceof Integer)\n-      set (name, ((Integer)value).intValue ());\n-    else if (value instanceof Float)\n-      set (name, ((Float)value).floatValue ());\n-    else if (value instanceof String)\n-      set (name, ((String) value));\n-    else\n-      set (name, value);\n-  }\n-\n   public GraphicsConfiguration getGraphicsConfiguration ()\n   {\n     // FIXME: just a stub for now."}, {"sha": "1d6ce8b8bf0b4107ccdc87472da8db388111ba5d", "filename": "libjava/gnu/java/awt/peer/gtk/GtkDialogPeer.java", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -85,17 +85,11 @@ void create ()\n   {\n     // Create a decorated dialog window.\n     create (GDK_WINDOW_TYPE_HINT_DIALOG, true);\n-  }\n-\n-  public void getArgs (Component component, GtkArgList args)\n-  {\n-    super.getArgs (component, args);\n \n-    Dialog dialog = (Dialog) component;\n+    Dialog dialog = (Dialog) awtComponent;\n \n-    args.add (\"title\", dialog.getTitle ());\n-    args.add (\"modal\", dialog.isModal ());\n-    args.add (\"allow_shrink\", dialog.isResizable ());\n-    args.add (\"allow_grow\", dialog.isResizable ());\n+    gtkWindowSetModal (dialog.isModal ());\n+    setTitle (dialog.getTitle ());\n+    setResizable (dialog.isResizable ());\n   }\n }"}, {"sha": "d31e0c5be022cc6817d6481c1b1ac94029163ea4", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFileDialogPeer.java", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -42,6 +42,7 @@\n import java.awt.Dialog;\n import java.awt.FileDialog;\n import java.awt.Graphics;\n+import java.awt.Window;\n import java.awt.event.WindowEvent;\n import java.awt.peer.FileDialogPeer;\n import java.io.FilenameFilter;\n@@ -81,6 +82,20 @@ public GtkFileDialogPeer (FileDialog fd)\n     super (fd);\n   }\n \n+  void setComponentBounds ()\n+  {\n+    if (awtComponent.getHeight () == 0\n+        && awtComponent.getWidth () == 0)\n+      {\n+        int[] dims = new int[2];\n+        gtkWidgetGetPreferredDimensions (dims);\n+        ((GtkFileDialogPeer) this).setBoundsCallback ((Window) awtComponent,\n+                                                      awtComponent.getX (),\n+                                                      awtComponent.getY (),\n+                                                      dims[0], dims[1]);\n+      }\n+  }\n+\n   public void setFile (String fileName)\n   {\n     /* If nothing changed do nothing.  This usually happens because"}, {"sha": "e1a877eedcb82a0da1a17a12f404d7393a8863af", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 37, "deletions": 15, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -47,6 +47,7 @@\n import java.awt.Rectangle;\n import java.awt.Window;\n import java.awt.event.PaintEvent;\n+import java.awt.image.ColorModel;\n import java.awt.peer.FramePeer;\n import java.awt.peer.MenuBarPeer;\n \n@@ -115,10 +116,9 @@ public void setResizable (boolean resizable)\n     setSize (awtComponent.getWidth() - insets.left - insets.right,\n              awtComponent.getHeight() - insets.top - insets.bottom\n              + menuBarHeight);\n-    set (\"allow_shrink\", resizable);\n-    set (\"allow_grow\", resizable);\n-  }  \n-  \n+    gtkWindowSetResizable (resizable);\n+  }\n+\n   protected void postInsetsChangedEvent (int top, int left,\n \t\t\t\t\t int bottom, int right)\n   {\n@@ -137,24 +137,46 @@ void create ()\n   {\n     // Create a normal decorated window.\n     create (GDK_WINDOW_TYPE_HINT_NORMAL, true);\n-    setMenuBar(((Frame) awtComponent).getMenuBar());\n-    awtComponent.setForeground(java.awt.SystemColor.windowText);\n-  }\n \n-  public void getArgs (Component component, GtkArgList args)\n-  {\n-    super.getArgs (component, args);\n+    Frame frame = (Frame) awtComponent;\n \n-    Frame frame = (Frame) component;\n+    setMenuBar (frame.getMenuBar ());\n \n-    args.add (\"title\", frame.getTitle ());\n-    args.add (\"allow_shrink\", frame.isResizable ());\n-    args.add (\"allow_grow\", frame.isResizable ());\n+    setTitle (frame.getTitle ());\n+    setResizable (frame.isResizable ());\n+    setIconImage(frame.getIconImage());\n   }\n \n+  native void nativeSetIconImageFromDecoder (GdkPixbufDecoder decoder);\n+  native void nativeSetIconImageFromData (int[] pixels, int width, int height);\n   public void setIconImage (Image image) \n   {\n-      /* TODO: Waiting on Toolkit Image routines */\n+      if (image != null)\n+        {\n+          GtkImage img = (GtkImage) image;\n+          // FIXME: Image should be loaded, but if not, do image loading here.\n+          if (img.isLoaded())\n+            {\n+              if (img.getSource() instanceof GdkPixbufDecoder)\n+                {\n+                  nativeSetIconImageFromDecoder((GdkPixbufDecoder) img.getSource());\n+                }\n+              else\n+                {\n+                  int[] pixels = img.getPixelCache();\n+                  ColorModel model = img.getColorModel();\n+                  int[] data = new int[pixels.length * 4];\n+                  for (int i = 0; i < pixels.length; i++)\n+                    {\n+                      data[i * 4] = model.getRed(pixels[i]);\n+                      data[i * 4 + 1] = model.getGreen(pixels[i]);\n+                      data[i * 4 + 2] = model.getBlue(pixels[i]);\n+                      data[i * 4 + 3] = model.getAlpha(pixels[i]);\n+                    }\n+                  nativeSetIconImageFromData(data, img.getWidth(null), img.getHeight(null));\n+                }\n+            }\n+        }\n   }\n \n   public Graphics getGraphics ()"}, {"sha": "9234d248aba9610af4221908806084a4e11db995", "filename": "libjava/gnu/java/awt/peer/gtk/GtkImage.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -89,6 +89,18 @@ public void setObserver (ImageObserver observer)\n     this.observer = observer;\n   }\n \n+  public synchronized int[]\n+  getPixelCache ()\n+  {\n+    return pixelCache;\n+  }\n+\n+  public synchronized ColorModel\n+  getColorModel ()\n+  {\n+    return model;\n+  }\n+\n   public synchronized int \n   getWidth (ImageObserver observer)\n   {"}, {"sha": "a85aba952fd5593bc4fb414cf0e19befa775169f", "filename": "libjava/gnu/java/awt/peer/gtk/GtkListPeer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -144,7 +144,7 @@ public void handleEvent (AWTEvent e)\n         // multiple click.\n \tMouseEvent me = (MouseEvent) e;\n \tif (!me.isConsumed ()\n-\t    && (me.getModifiers () & MouseEvent.BUTTON1_MASK) != 0\n+\t    && (me.getModifiersEx () & MouseEvent.BUTTON1_DOWN_MASK) != 0\n \t    && me.getClickCount() == 2)\n \t  {\n             String selectedItem = ((List) awtComponent).getSelectedItem ();\n@@ -153,7 +153,7 @@ public void handleEvent (AWTEvent e)\n             // something is selected.\n             if (selectedItem != null)\n \t      postActionEvent (((List) awtComponent).getSelectedItem (), \n-\t\t\t       me.getModifiers ());\n+\t\t\t       me.getModifiersEx ());\n \t  }\n       }\n \n@@ -167,7 +167,7 @@ public void handleEvent (AWTEvent e)\n             // Enter only generates an Action event if something is\n             // selected.\n             if (selectedItem != null)\n-\t      postActionEvent (selectedItem, ke.getModifiers ());\n+\t      postActionEvent (selectedItem, ke.getModifiersEx ());\n \t  }\n       }\n "}, {"sha": "4cbe190731ce5e53e4f44305f6dda8b596be23d5", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMainThread.java", "status": "modified", "additions": 37, "deletions": 6, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -43,7 +43,18 @@ public class GtkMainThread extends GtkGenericPeer implements Runnable\n   private static Thread mainThread = null;\n   private static Object mainThreadLock = new Object();\n \n-  static native void gtkInit();\n+  // Whether the gtk+ subsystem has been initialized.\n+  private boolean gtkInitCalled = false;\n+\n+  /**\n+   * Call gtk_init.  It is very important that this happen before any other\n+   * gtk calls.\n+   *\n+   * @param portableNativeSync 1 if the Java property\n+   * gnu.classpath.awt.gtk.portable.native.sync is set to \"true\".  0 if it is\n+   * set to \"false\".  -1 if unset.\n+   */\n+  static native void gtkInit(int portableNativeSync);\n   native void gtkMain();\n   \n   public GtkMainThread() \n@@ -59,18 +70,38 @@ public GtkMainThread()\n     synchronized (this) \n       {\n \tmainThread.start();\n-\ttry {\n-\t  wait();\n-\t} catch (InterruptedException e) { }\n+\t\n+\twhile (!gtkInitCalled)\n+\t  {\n+\t    try\n+\t      {\n+\t\twait();\n+\t      }\n+\t    catch (InterruptedException e) { }\n+\t  }\n       }\n   }\n   \n   public void run() \n   {\n+    /* Pass the value of the gnu.classpath.awt.gtk.portable.native.sync system\n+     * property to C. */ \n+    int portableNativeSync;     \n+    String portNatSyncProp = \n+      System.getProperty(\"gnu.classpath.awt.gtk.portable.native.sync\");\n+\n+    if (portNatSyncProp == null)\n+      portableNativeSync = -1;  // unset\n+    else if (Boolean.valueOf(portNatSyncProp).booleanValue())\n+      portableNativeSync = 1;   // true\n+    else\n+      portableNativeSync = 0;   // false\n+    \n     synchronized (this) \n       {\n-\tgtkInit();\n-\tnotify();\n+\tgtkInit(portableNativeSync);\n+\tgtkInitCalled = true;\n+\tnotifyAll();\n       }\n     gtkMain();\n   }"}, {"sha": "b9cca1a5c38a3354435c0b06e29f33a0247ae206", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuBarPeer.java", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -56,15 +56,12 @@ public GtkMenuBarPeer (MenuBar target)\n     create ();\n   }\n \n+  native void nativeSetHelpMenu(MenuPeer menuPeer);\n+\n   /* In Gnome, help menus are no longer right flushed. */\n   public void addHelpMenu (Menu menu)\n   {\n-    addMenu (menu);\n-  }\n-\n-  public void addMenu (Menu menu)\n-  {\n-    addMenu ((MenuPeer) menu.getPeer ());\n+    nativeSetHelpMenu((MenuPeer) menu.getPeer());\n   }\n \n   native public void delMenu (int index);"}, {"sha": "c32839ec6ba98c6b3befbc3850da2a4abf4abc87", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuItemPeer.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -89,10 +89,8 @@ public void enable ()\n     setEnabled (true);\n   }\n \n-  public void setEnabled (boolean b)\n-  {\n-    // do nothing, for now.\n-  }\n+  native public void setEnabled (boolean b);\n+\n   native public void setLabel (String label);\n \n   protected void postMenuActionEvent ()"}, {"sha": "dc170b1cf12086c84c69962081a36bb9e5acb260", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuPeer.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -52,11 +52,15 @@ public class GtkMenuPeer extends GtkMenuItemPeer\n   native void create (String label);\n   native void addItem (MenuItemPeer item, int key, boolean shiftModifier);\n   native void setupAccelGroup (GtkGenericPeer container);\n+  native void addTearOff ();\n \n   public GtkMenuPeer (Menu menu)\n   {\n     super (menu);\n     \n+    if (menu.isTearOff())\n+      addTearOff();\n+\n     MenuContainer parent = menu.getParent ();\n     if (parent instanceof Menu)\n       setupAccelGroup ((GtkGenericPeer)((Menu)parent).getPeer ());"}, {"sha": "786c4b4493649b2d8a3c536f8e0a1cc5c41bf3ed", "filename": "libjava/gnu/java/awt/peer/gtk/GtkOffScreenImage.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkOffScreenImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkOffScreenImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkOffScreenImage.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -76,7 +76,10 @@ public ImageProducer getSource ()\n \n   public Graphics getGraphics ()\n   {\n-    return g;\n+    if (g instanceof GdkGraphics2D)\n+      return new GdkGraphics2D ((GdkGraphics2D) this.g);\n+    else\n+      return new GdkGraphics ((GdkGraphics) this.g);\n   }\n \n   public Object getProperty (String name, ImageObserver observer)"}, {"sha": "d4a702deb35c7cdae15cb273851db959e30be231", "filename": "libjava/gnu/java/awt/peer/gtk/GtkTextFieldPeer.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -50,6 +50,8 @@ public class GtkTextFieldPeer extends GtkTextComponentPeer\n   implements TextFieldPeer\n {\n   native void create (int width);\n+  native void gtkWidgetSetBackground (int red, int green, int blue);\n+  native void gtkWidgetSetForeground (int red, int green, int blue);\n \n   void create ()\n   {\n@@ -76,6 +78,8 @@ void create ()\n     int text_width = cols * fm.getMaxAdvance ();\n \n     create (text_width);\n+\n+    setEditable (tf.isEditable ());\n   }\n \n   native int gtkEntryGetBorderWidth ();\n@@ -162,7 +166,7 @@ public void handleEvent (AWTEvent e)\n \n         if (!ke.isConsumed ()\n             && ke.getKeyCode () == KeyEvent.VK_ENTER)\n-          postActionEvent (getText (), ke.getModifiers ());\n+          postActionEvent (getText (), ke.getModifiersEx ());\n       }\n \n     super.handleEvent (e);"}, {"sha": "a2357699b3c64989305de98328f2d227aaf78c40", "filename": "libjava/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -60,6 +60,10 @@ public class GtkWindowPeer extends GtkContainerPeer\n   private boolean hasBeenShown = false;\n   private int oldState = Frame.NORMAL;\n \n+  native void gtkWindowSetTitle (String title);\n+  native void gtkWindowSetResizable (boolean resizable);\n+  native void gtkWindowSetModal (boolean modal);\n+\n   native void create (int type, boolean decorated,\n \t\t      int width, int height,\n \t\t      GtkWindowPeer parent,\n@@ -92,6 +96,16 @@ void create ()\n     create (GDK_WINDOW_TYPE_HINT_NORMAL, false);\n   }\n \n+  void setParent ()\n+  {\n+    setVisible (awtComponent.isVisible ());\n+    setEnabled (awtComponent.isEnabled ());\n+  }\n+\n+  void setVisibleAndEnabled ()\n+  {\n+  }\n+\n   native void connectJObject ();\n   native void connectSignals ();\n \n@@ -100,12 +114,6 @@ public GtkWindowPeer (Window window)\n     super (window);\n   }\n \n-  public void getArgs (Component component, GtkArgList args)\n-  {\n-    args.add (\"visible\", component.isVisible ());\n-    args.add (\"sensitive\", component.isEnabled ());\n-  }\n-\n   native public void toBack ();\n   native public void toFront ();\n \n@@ -120,7 +128,7 @@ public void setBounds (int x, int y, int width, int height)\n \n   public void setTitle (String title)\n   {\n-    set (\"title\", title);\n+    gtkWindowSetTitle (title);\n   }\n \n   native void setSize (int width, int height);\n@@ -132,8 +140,7 @@ public void setResizable (boolean resizable)\n     // was resizable.\n     setSize (awtComponent.getWidth() - insets.left - insets.right,\n \t     awtComponent.getHeight() - insets.top - insets.bottom);\n-    set (\"allow_shrink\", resizable);\n-    set (\"allow_grow\", resizable);\n+    gtkWindowSetResizable (resizable);\n   }\n \n   native void setBoundsCallback (Window window,"}, {"sha": "23ae92bf0987a2be20be022c798ddcff0d55ae35", "filename": "libjava/java/awt/AWTKeyStroke.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -409,13 +409,13 @@ public static AWTKeyStroke getAWTKeyStroke(String s)\n       {\n         token = t.nextToken();\n         if (\"shift\".equals(token))\n-          modifiers |= KeyEvent.SHIFT_MASK | KeyEvent.SHIFT_DOWN_MASK;\n+          modifiers |= KeyEvent.SHIFT_DOWN_MASK;\n         else if (\"ctrl\".equals(token) || \"control\".equals(token))\n-          modifiers |= KeyEvent.CTRL_MASK | KeyEvent.CTRL_DOWN_MASK;\n+          modifiers |= KeyEvent.CTRL_DOWN_MASK;\n         else if (\"meta\".equals(token))\n-          modifiers |= KeyEvent.META_MASK | KeyEvent.META_DOWN_MASK;\n+          modifiers |= KeyEvent.META_DOWN_MASK;\n         else if (\"alt\".equals(token))\n-          modifiers |= KeyEvent.ALT_MASK | KeyEvent.ALT_DOWN_MASK;\n+          modifiers |= KeyEvent.ALT_DOWN_MASK;\n         else if (\"button1\".equals(token))\n           modifiers |= KeyEvent.BUTTON1_DOWN_MASK;\n         else if (\"button2\".equals(token))"}, {"sha": "0bb5766dbf00e52bdf395d7a0204a7c413401860", "filename": "libjava/java/awt/Button.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FButton.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -101,7 +101,7 @@ public class Button extends Component implements java.io.Serializable\n public\n Button()\n {\n-  this(null);\n+  this(\"\");\n }\n \n /*************************************************************************/"}, {"sha": "c32438521bee5d2d5b85df16fd04fde509ec44a9", "filename": "libjava/java/awt/Color.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FColor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FColor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FColor.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -506,7 +506,7 @@ public int getAlpha()\n \n   /**\n    * Returns the RGB value for this color, in the sRGB color space. The blue\n-   * value will be in bits 0-7, green in 8-15, red in 6-23, and alpha value in\n+   * value will be in bits 0-7, green in 8-15, red in 16-23, and alpha value in\n    * 24-31.\n    *\n    * @return the RGB value for this color\n@@ -772,9 +772,9 @@ else if (blue < min)\n         if (red == max)\n           array[0] = (green - blue) / delta;\n         else if (green == max)\n-          array[0] = 1 / 3 + (blue - red) / delta;\n+          array[0] = 1f / 3 + (blue - red) / delta;\n         else\n-          array[0] = 2 / 3 + (red - green) / delta;\n+          array[0] = 2f / 3 + (red - green) / delta;\n         if (array[0] < 0)\n           array[0]++;\n       }"}, {"sha": "90aaaf91f52d95c2be5d99090b48f512d3a19092", "filename": "libjava/java/awt/Component.java", "status": "modified", "additions": 95, "deletions": 47, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -58,6 +58,7 @@\n import java.awt.event.MouseWheelListener;\n import java.awt.event.MouseWheelEvent;\n import java.awt.event.PaintEvent;\n+import java.awt.event.WindowEvent;\n import java.awt.im.InputContext;\n import java.awt.im.InputMethodRequests;\n import java.awt.image.BufferStrategy;\n@@ -2262,7 +2263,7 @@ public final void dispatchEvent(AWTEvent e)\n    * This method simply calls handleEvent and returns the result.\n    *\n    * @param e the event to handle\n-   * @return the result of handling <code>e</code>\n+   * @return true if the event was handled, false otherwise\n    * @deprecated use {@link #dispatchEvent(AWTEvent)} instead\n    */\n   public boolean postEvent(Event e)\n@@ -3028,6 +3029,7 @@ protected void processMouseEvent(MouseEvent e)\n           mouseListener.mouseReleased(e);\n         break;\n       }\n+      e.consume();\n   }\n \n   /**\n@@ -3055,6 +3057,7 @@ protected void processMouseMotionEvent(MouseEvent e)\n           mouseMotionListener.mouseMoved(e);\n         break;\n       }\n+      e.consume();\n   }\n \n   /**\n@@ -3073,7 +3076,10 @@ protected void processMouseWheelEvent(MouseWheelEvent e)\n   {\n     if (mouseWheelListener != null\n         && e.id == MouseEvent.MOUSE_WHEEL)\n+    {\n       mouseWheelListener.mouseWheelMoved(e);\n+      e.consume();\n+    }\t\n   }\n \n   /**\n@@ -3205,135 +3211,145 @@ public boolean handleEvent(Event evt)\n   }\n \n   /**\n-   * AWT 1.0 mouse event handler.\n+   * AWT 1.0 MOUSE_DOWN event handler.  This method is meant to be\n+   * overridden by components providing their own MOUSE_DOWN handler.\n+   * The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param x the x coordinate, ignored\n    * @param y the y coordinate, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processMouseEvent(MouseEvent)} instead\n    */\n   public boolean mouseDown(Event evt, int x, int y)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n   /**\n-   * AWT 1.0 mouse event.\n+   * AWT 1.0 MOUSE_DRAG event handler.  This method is meant to be\n+   * overridden by components providing their own MOUSE_DRAG handler.\n+   * The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param x the x coordinate, ignored\n    * @param y the y coordinate, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processMouseMotionEvent(MouseEvent)} instead\n    */\n   public boolean mouseDrag(Event evt, int x, int y)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n   /**\n-   * AWT 1.0 mouse event.\n+   * AWT 1.0 MOUSE_UP event handler.  This method is meant to be\n+   * overridden by components providing their own MOUSE_UP handler.\n+   * The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param x the x coordinate, ignored\n    * @param y the y coordinate, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processMouseEvent(MouseEvent)} instead\n    */\n   public boolean mouseUp(Event evt, int x, int y)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n   /**\n-   * AWT 1.0 mouse event.\n+   * AWT 1.0 MOUSE_MOVE event handler.  This method is meant to be\n+   * overridden by components providing their own MOUSE_MOVE handler.\n+   * The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param x the x coordinate, ignored\n    * @param y the y coordinate, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processMouseMotionEvent(MouseEvent)} instead\n    */\n   public boolean mouseMove(Event evt, int x, int y)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n   /**\n-   * AWT 1.0 mouse event.\n+   * AWT 1.0 MOUSE_ENTER event handler.  This method is meant to be\n+   * overridden by components providing their own MOUSE_ENTER handler.\n+   * The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param x the x coordinate, ignored\n    * @param y the y coordinate, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processMouseEvent(MouseEvent)} instead\n    */\n   public boolean mouseEnter(Event evt, int x, int y)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n   /**\n-   * AWT 1.0 mouse event.\n+   * AWT 1.0 MOUSE_EXIT event handler.  This method is meant to be\n+   * overridden by components providing their own MOUSE_EXIT handler.\n+   * The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param x the x coordinate, ignored\n    * @param y the y coordinate, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processMouseEvent(MouseEvent)} instead\n    */\n   public boolean mouseExit(Event evt, int x, int y)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n   /**\n-   * AWT 1.0 key press event.\n+   * AWT 1.0 KEY_PRESS and KEY_ACTION event handler.  This method is\n+   * meant to be overridden by components providing their own key\n+   * press handler.  The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param key the key pressed, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processKeyEvent(KeyEvent)} instead\n    */\n   public boolean keyDown(Event evt, int key)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n   /**\n-   * AWT 1.0 key press event.\n+   * AWT 1.0 KEY_RELEASE and KEY_ACTION_RELEASE event handler.  This\n+   * method is meant to be overridden by components providing their\n+   * own key release handler.  The default implementation simply\n+   * returns false.\n    *\n    * @param evt the event to handle\n    * @param key the key pressed, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processKeyEvent(KeyEvent)} instead\n    */\n   public boolean keyUp(Event evt, int key)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n   /**\n-   * AWT 1.0 action event processor.\n+   * AWT 1.0 ACTION_EVENT event handler.  This method is meant to be\n+   * overridden by components providing their own action event\n+   * handler.  The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param what the object acted on, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated in classes which support actions, use\n    *             <code>processActionEvent(ActionEvent)</code> instead\n    */\n   public boolean action(Event evt, Object what)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n@@ -3377,30 +3393,32 @@ public void removeNotify()\n   }\n \n   /**\n-   * AWT 1.0 focus event.\n+   * AWT 1.0 GOT_FOCUS event handler.  This method is meant to be\n+   * overridden by components providing their own GOT_FOCUS handler.\n+   * The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param what the Object focused, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processFocusEvent(FocusEvent)} instead\n    */\n   public boolean gotFocus(Event evt, Object what)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n   /**\n-   * AWT 1.0 focus event.\n+   * AWT 1.0 LOST_FOCUS event handler.  This method is meant to be\n+   * overridden by components providing their own LOST_FOCUS handler.\n+   * The default implementation simply returns false.\n    *\n    * @param evt the event to handle\n    * @param what the Object focused, ignored\n-   * @return false: since the method was deprecated, the return has no meaning\n+   * @return false\n    * @deprecated use {@link #processFocusEvent(FocusEvent)} instead\n    */\n   public boolean lostFocus(Event evt, Object what)\n   {\n-    // XXX Add backward compatibility handling.\n     return false;\n   }\n \n@@ -3415,7 +3433,7 @@ public boolean lostFocus(Event evt, Object what)\n    */\n   public boolean isFocusTraversable()\n   {\n-    return enabled && visible && (peer == null || peer.isFocusTraversable());\n+    return enabled && visible && (peer == null || isLightweight() || peer.isFocusTraversable());\n   }\n \n   /**\n@@ -3430,7 +3448,11 @@ public boolean isFocusable()\n   }\n \n   /**\n-   * Specify whether this component can receive focus.\n+   * Specify whether this component can receive focus. This method also\n+   * sets the {@link #isFocusTraversableOverridden} field to 1, which\n+   * appears to be the undocumented way {@link\n+   * DefaultFocusTraversalPolicy#accept()} determines whether to respect\n+   * the {@link #isFocusable()} method of the component.\n    *\n    * @param focusable the new focusable status\n    * @since 1.4\n@@ -3439,6 +3461,7 @@ public void setFocusable(boolean focusable)\n   {\n     firePropertyChange(\"focusable\", this.focusable, focusable);\n     this.focusable = focusable;\n+    this.isFocusTraversableOverridden = 1;\n   }\n \n   /**\n@@ -3697,7 +3720,7 @@ && isFocusable ())\n             Window toplevel = (Window) parent;\n             if (toplevel.isFocusableWindow ())\n               {\n-                if (peer != null)\n+                if (peer != null && !isLightweight())\n                   // This call will cause a FOCUS_GAINED event to be\n                   // posted to the system event queue if the native\n                   // windowing system grants the focus request.\n@@ -3783,7 +3806,7 @@ && isFocusable ())\n             Window toplevel = (Window) parent;\n             if (toplevel.isFocusableWindow ())\n               {\n-                if (peer != null)\n+                if (peer != null && !isLightweight())\n                   // This call will cause a FOCUS_GAINED event to be\n                   // posted to the system event queue if the native\n                   // windowing system grants the focus request.\n@@ -3904,6 +3927,7 @@ && isFocusable ())\n                 if (focusedWindow == toplevel)\n                   {\n                     if (peer != null\n+                        && !isLightweight()\n                         && !(this instanceof Window))\n                       // This call will cause a FOCUS_GAINED event to be\n                       // posted to the system event queue if the native\n@@ -4495,23 +4519,23 @@ private Event translateEvent (AWTEvent e)\n         int id = e.getID ();\n \n         int oldMods = 0;\n-        int mods = ie.getModifiers ();\n+        int mods = ie.getModifiersEx ();\n \n-        if ((mods & InputEvent.BUTTON2_MASK) != 0)\n+        if ((mods & InputEvent.BUTTON2_DOWN_MASK) != 0)\n           oldMods |= Event.META_MASK;\n-        else if ((mods & InputEvent.BUTTON3_MASK) != 0)\n+        else if ((mods & InputEvent.BUTTON3_DOWN_MASK) != 0)\n           oldMods |= Event.ALT_MASK;\n \n-        if ((mods & (InputEvent.SHIFT_MASK | InputEvent.SHIFT_DOWN_MASK)) != 0)\n+        if ((mods & InputEvent.SHIFT_DOWN_MASK) != 0)\n           oldMods |= Event.SHIFT_MASK;\n \n-        if ((mods & (InputEvent.CTRL_MASK | InputEvent.CTRL_DOWN_MASK)) != 0)\n+        if ((mods & InputEvent.CTRL_DOWN_MASK) != 0)\n           oldMods |= Event.CTRL_MASK;\n \n-        if ((mods & (InputEvent.META_MASK | InputEvent.META_DOWN_MASK)) != 0)\n+        if ((mods & InputEvent.META_DOWN_MASK) != 0)\n           oldMods |= Event.META_MASK;\n \n-        if ((mods & (InputEvent.ALT_MASK | InputEvent.ALT_DOWN_MASK)) != 0)\n+        if ((mods & InputEvent.ALT_DOWN_MASK) != 0)\n           oldMods |= Event.ALT_MASK;\n \n         if (e instanceof MouseEvent)\n@@ -4673,15 +4697,39 @@ else if (e instanceof ActionEvent)\n    *\n    * @param e the event to dispatch\n    */\n-  void dispatchEventImpl(AWTEvent e)\n+\n+  void dispatchEventImpl (AWTEvent e)\n   {\n     Event oldEvent = translateEvent (e);\n \n     if (oldEvent != null)\n       postEvent (oldEvent);\n \n     if (eventTypeEnabled (e.id))\n-      processEvent(e);\n+      {\n+        // the trick we use to communicate between dispatch and redispatch\n+        // is to have KeyboardFocusManager.redispatch synchronize on the\n+        // object itself. we then do not redispatch to KeyboardFocusManager\n+        // if we are already holding the lock.\n+        if (! Thread.holdsLock(e))\n+          {\n+            switch (e.id)\n+              {\n+              case WindowEvent.WINDOW_GAINED_FOCUS:\n+              case WindowEvent.WINDOW_LOST_FOCUS:\n+              case KeyEvent.KEY_PRESSED:\n+              case KeyEvent.KEY_RELEASED:\n+              case KeyEvent.KEY_TYPED:\n+              case FocusEvent.FOCUS_GAINED:\n+              case FocusEvent.FOCUS_LOST:\n+                if (KeyboardFocusManager\n+                    .getCurrentKeyboardFocusManager()\n+                    .dispatchEvent(e))\n+                    return;\n+              }\n+          }\n+        processEvent (e);\n+      }\n   }\n \n   /**"}, {"sha": "e0ad22c4750b4e5dbb28b37aef61f869f51ec1e8", "filename": "libjava/java/awt/Container.java", "status": "modified", "additions": 27, "deletions": 32, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1505,10 +1505,11 @@ private void visitChild(Graphics gfx, GfxVisitor visitor,\n   void dispatchEventImpl(AWTEvent e)\n   {\n     // Give lightweight dispatcher a chance to handle it.\n-    if (dispatcher != null \n+    if (eventTypeEnabled (e.id)\n+        && dispatcher != null \n         && dispatcher.handleEvent (e))\n       return;\n-\n+    \n     if ((e.id <= ContainerEvent.CONTAINER_LAST\n              && e.id >= ContainerEvent.CONTAINER_FIRST)\n         && (containerListener != null\n@@ -1586,7 +1587,6 @@ private void addNotifyContainerChildren()\n                   {\n                     if (dispatcher == null)\n                       dispatcher = new LightweightDispatcher (this);\n-                    dispatcher.enableEvents (component[i].eventMask);\n                   }\t\n \t  \n \n@@ -1831,7 +1831,6 @@ class LightweightDispatcher implements Serializable\n {\n   private static final long serialVersionUID = 5184291520170872969L;\n   private Container nativeContainer;\n-  private Component focus;\n   private Cursor nativeCursor;\n   private long eventMask;\n   \n@@ -1845,11 +1844,6 @@ class LightweightDispatcher implements Serializable\n     nativeContainer = c;\n   }\n \n-  void enableEvents(long l)\n-  {\n-    eventMask |= l;\n-  }\n-\n   void acquireComponentForMouseEvent(MouseEvent me)\n   {\n     int x = me.getX ();\n@@ -1863,8 +1857,9 @@ void acquireComponentForMouseEvent(MouseEvent me)\n       {\n         candidate =\n           SwingUtilities.getDeepestComponentAt(parent, p.x, p.y);\n-        if (candidate == null)\n+        if (candidate == null || (candidate.eventMask & me.getID()) == 0)\n         {\n+          candidate = null;\n           p = SwingUtilities.convertPoint(parent, p.x, p.y, parent.parent);\n           parent = parent.parent;\n         }\n@@ -1881,21 +1876,25 @@ void acquireComponentForMouseEvent(MouseEvent me)\n         && lastComponentEntered.isShowing()\n         && lastComponentEntered != candidate)\n       {\n-        Point tp = \n-          SwingUtilities.convertPoint(nativeContainer, \n-                                      x, y, lastComponentEntered);\n-        MouseEvent exited = new MouseEvent (lastComponentEntered, \n-                                            MouseEvent.MOUSE_EXITED,\n-                                            me.getWhen (), \n-                                            me.getModifiers (), \n-                                            tp.x, tp.y,\n-                                            me.getClickCount (),\n-                                            me.isPopupTrigger (),\n-                                            me.getButton ());\n-        lastComponentEntered.dispatchEvent (exited); \n+        // Old candidate could have been removed from \n+        // the nativeContainer so we check first.\n+        if (SwingUtilities.isDescendingFrom(lastComponentEntered, nativeContainer))\n+        {\n+          Point tp = \n+            SwingUtilities.convertPoint(nativeContainer, \n+                                        x, y, lastComponentEntered);\n+          MouseEvent exited = new MouseEvent (lastComponentEntered, \n+                                              MouseEvent.MOUSE_EXITED,\n+                                              me.getWhen (), \n+                                              me.getModifiersEx (), \n+                                              tp.x, tp.y,\n+                                              me.getClickCount (),\n+                                              me.isPopupTrigger (),\n+                                              me.getButton ());\n+          lastComponentEntered.dispatchEvent (exited); \n+        }\n         lastComponentEntered = null;\n       }\n-\n     // If we have a candidate, maybe enter it.\n     if (candidate != null)\n       {\n@@ -1911,7 +1910,7 @@ void acquireComponentForMouseEvent(MouseEvent me)\n             MouseEvent entered = new MouseEvent (lastComponentEntered, \n                                                  MouseEvent.MOUSE_ENTERED,\n                                                  me.getWhen (), \n-                                                 me.getModifiers (), \n+                                                 me.getModifiersEx (), \n                                                  cp.x, cp.y,\n                                                  me.getClickCount (),\n                                                  me.isPopupTrigger (),\n@@ -1929,7 +1928,8 @@ void acquireComponentForMouseEvent(MouseEvent me)\n       //   - MOUSE_RELEASED\n       //   - MOUSE_PRESSED: another button pressed while the first is held down\n       //   - MOUSE_DRAGGED\n-      mouseEventTarget = pressedComponent;\n+      if (SwingUtilities.isDescendingFrom(pressedComponent, nativeContainer))\n+        mouseEventTarget = pressedComponent;\n     else if (me.getID() == MouseEvent.MOUSE_CLICKED)\n       {\n         // Don't dispatch CLICKED events whose target is not the same as the\n@@ -1943,9 +1943,6 @@ else if (pressCount == 0)\n \n   boolean handleEvent(AWTEvent e)\n   {\n-    if ((eventMask & e.getID()) == 0)\n-      return false;\n-\n     if (e instanceof MouseEvent)\n       {\n         MouseEvent me = (MouseEvent) e;\n@@ -1979,12 +1976,10 @@ boolean handleEvent(AWTEvent e)\n                     pressedComponent = null;\n                   break;\n               }\n+              if (newEvt.isConsumed())\n+                e.consume();\n           }\n       }\n-    else if (e instanceof KeyEvent && focus != null)\n-      {\n-        focus.processKeyEvent((KeyEvent) e);\n-      }\n     \n     return e.isConsumed();\n   }"}, {"sha": "f49f386a19cd4e6c5751c3d52c5030d65b3f35bb", "filename": "libjava/java/awt/DefaultFocusTraversalPolicy.java", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FDefaultFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FDefaultFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDefaultFocusTraversalPolicy.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -92,19 +92,17 @@ protected boolean accept (Component comp)\n \t&& comp.enabled)\n       {\n \tif (comp.isFocusTraversableOverridden != 0\n-\t    && comp.isFocusTraversable ())\n-\t  return true;\n-\telse\n-\t  {\n-\t    if (!(comp instanceof Canvas\n-\t\t  || comp instanceof Panel\n-\t\t  || comp instanceof Label\n-\t\t  || comp instanceof ScrollPane\n-\t\t  || comp instanceof Scrollbar\n-\t\t  || comp instanceof Window\n-\t\t  || comp.isLightweight ()))\n-\t      return true;\n-\t  }\n+\t    && (comp.isFocusTraversable () || comp.isFocusable()))\n+          return true;\n+        \n+\tif (!(comp instanceof Canvas\n+              || comp instanceof Panel\n+              || comp instanceof Label\n+              || comp instanceof ScrollPane\n+              || comp instanceof Scrollbar\n+              || comp instanceof Window\n+              || comp.isLightweight ()))\n+          return true;\n       }\n     return false;\n   }"}, {"sha": "7912e29f05658f8ec3300194d26a9c413d0a98c1", "filename": "libjava/java/awt/DefaultKeyboardFocusManager.java", "status": "modified", "additions": 30, "deletions": 22, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -155,7 +155,7 @@ else if (e.id != WindowEvent.WINDOW_LOST_FOCUS\n                  && e.id != WindowEvent.WINDOW_DEACTIVATED)\n           return false;\n \n-        target.dispatchEvent (e);\n+        redispatchEvent(target, e);\n         return true;\n       }\n     else if (e instanceof FocusEvent)\n@@ -197,7 +197,7 @@ else if (e.id == FocusEvent.FOCUS_LOST)\n               setGlobalPermanentFocusOwner (null);\n           }\n \n-          target.dispatchEvent (e);\n+        redispatchEvent(target, e);\n \n         return true;\n       }\n@@ -258,7 +258,7 @@ public boolean dispatchKeyEvent (KeyEvent e)\n     Component focusOwner = getGlobalPermanentFocusOwner ();\n \n     if (focusOwner != null)\n-    focusOwner.dispatchEvent (e);\n+      redispatchEvent(focusOwner, e);\n \n     // Loop through all registered KeyEventPostProcessors, giving\n     // each a chance to process this event.\n@@ -284,10 +284,10 @@ public boolean postProcessKeyEvent (KeyEvent e)\n   {\n     // Check if this event represents a menu shortcut.\n \n-    // MenuShortcuts are activated by Ctrl- KeyEvents.\n-    int modifiers = e.getModifiers ();\n-    if ((modifiers & KeyEvent.CTRL_MASK) != 0\n-        || (modifiers & KeyEvent.CTRL_DOWN_MASK) != 0)\n+    // MenuShortcuts are activated by Ctrl- KeyEvents, only on KEY_PRESSED.\n+    int modifiers = e.getModifiersEx ();\n+    if (e.getID() == KeyEvent.KEY_PRESSED\n+        && (modifiers & KeyEvent.CTRL_DOWN_MASK) != 0)\n       {\n         Window focusedWindow = getGlobalFocusedWindow ();\n         if (focusedWindow instanceof Frame)\n@@ -311,17 +311,21 @@ public boolean postProcessKeyEvent (KeyEvent e)\n                         MenuItem item = menu.getItem (j);\n                         MenuShortcut shortcut = item.getShortcut ();\n \n-                        if (shortcut != null)\n+                        if (item.isEnabled() && shortcut != null)\n                           {\n-                            // Dispatch a new ActionEvent if this is a\n-                            // Shift- KeyEvent and the shortcut requires\n-                            // the Shift modifier, or if the shortcut\n-                            // doesn't require the Shift modifier.\n-                            if ((shortcut.usesShiftModifier ()\n-                                 && ((modifiers & KeyEvent.SHIFT_MASK) != 0\n-                                     || (modifiers & KeyEvent.SHIFT_DOWN_MASK) != 0)\n-                                 || !shortcut.usesShiftModifier ())\n-                                && shortcut.getKey () == e.getKeyCode ())\n+                            // Dispatch a new ActionEvent if:\n+                            //\n+                            //     a) this is a Shift- KeyEvent, and the\n+                            //        shortcut requires the Shift modifier\n+                            //\n+                            // or, b) this is not a Shift- KeyEvent, and the\n+                            //        shortcut does not require the Shift\n+                            //        modifier.\n+                            if (shortcut.getKey () == e.getKeyCode ()\n+                                && ((shortcut.usesShiftModifier ()\n+                                     && (modifiers & KeyEvent.SHIFT_DOWN_MASK) != 0)\n+                                    || (! shortcut.usesShiftModifier ()\n+                                        && (modifiers & KeyEvent.SHIFT_DOWN_MASK) == 0)))\n                               {\n                                 item.dispatchEvent (new ActionEvent (item,\n                                                                      ActionEvent.ACTION_PERFORMED,\n@@ -347,7 +351,7 @@ public void processKeyEvent (Component comp, KeyEvent e)\n     // KEY_PRESSED TAB is a focus traversal keystroke, we also need to\n     // consume KEY_RELEASED and KEY_TYPED TAB key events).\n     AWTKeyStroke oppositeKeystroke = AWTKeyStroke.getAWTKeyStroke (e.getKeyCode (),\n-                                                                   e.getModifiers (),\n+                                                                   e.getModifiersEx (),\n                                                                    !(e.id == KeyEvent.KEY_RELEASED));\n \n     Set forwardKeystrokes = comp.getFocusTraversalKeys (KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS);\n@@ -439,7 +443,8 @@ public void focusPreviousComponent (Component comp)\n     FocusTraversalPolicy policy = focusCycleRoot.getFocusTraversalPolicy ();\n \n     Component previous = policy.getComponentBefore (focusCycleRoot, focusComp);\n-    previous.requestFocusInWindow ();\n+    if (previous != null)\n+      previous.requestFocusInWindow ();\n   }\n \n   public void focusNextComponent (Component comp)\n@@ -449,7 +454,8 @@ public void focusNextComponent (Component comp)\n     FocusTraversalPolicy policy = focusCycleRoot.getFocusTraversalPolicy ();\n \n     Component next = policy.getComponentAfter (focusCycleRoot, focusComp);\n-    next.requestFocusInWindow ();\n+    if (next != null)\n+      next.requestFocusInWindow ();\n   }\n \n   public void upFocusCycle (Component comp)\n@@ -461,7 +467,8 @@ public void upFocusCycle (Component comp)\n       {\n         FocusTraversalPolicy policy = focusCycleRoot.getFocusTraversalPolicy ();\n         Component defaultComponent = policy.getDefaultComponent (focusCycleRoot);\n-        defaultComponent.requestFocusInWindow ();\n+        if (defaultComponent != null)\n+          defaultComponent.requestFocusInWindow ();\n       }\n     else\n       {\n@@ -481,7 +488,8 @@ public void downFocusCycle (Container cont)\n       {\n         FocusTraversalPolicy policy = cont.getFocusTraversalPolicy ();\n         Component defaultComponent = policy.getDefaultComponent (cont);\n-        defaultComponent.requestFocusInWindow ();\n+        if (defaultComponent != null)\n+          defaultComponent.requestFocusInWindow ();        \n         setGlobalCurrentFocusCycleRoot (cont);\n       }\n   }"}, {"sha": "754e078d748b7d0d55d1ccedb218cfff4525145d", "filename": "libjava/java/awt/Font.java", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFont.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1265,12 +1265,28 @@ public int hashCode()\n public String\n toString()\n {\n-  return(getClass().getName() \n-         + \"(logical=\" + getName () \n-         + \",family=\" + getFamily ()\n-         + \",name=\" + getFontName ()\n-         + \",style=\" + getStyle ()\n-         + \",size=\" + getSize ());\n+  String styleString = \"\";\n+\n+  switch (getStyle ())\n+    {\n+    case 0:\n+      styleString = \"plain\";\n+      break;\n+    case 1:\n+      styleString = \"bold\";\n+      break;\n+    case 2:\n+      styleString = \"italic\";\n+      break;\n+    default:\n+      styleString = \"unknown\";\n+    }\n+\n+  return getClass ().getName () \n+    + \"[family=\" + getFamily ()\n+    + \",name=\" + getFontName ()\n+    + \",style=\" + styleString\n+    + \",size=\" + getSize () + \"]\";\n }\n \n "}, {"sha": "c75d34e4bc19ecc811184d5fd136938ffea7c154", "filename": "libjava/java/awt/Graphics.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphics.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -732,14 +732,14 @@\n /*************************************************************************/\n \n /**\n-  * Returns a string representation of this object.\n-  *\n-  * @param A string representation of this object. \n-  */\n+ * Returns a string representation of this object.\n+ *\n+ * @param A string representation of this object. \n+ */\n public String\n toString()\n {\n-  return(super.toString());\n+  return getClass ().getName () + \"[font=\" + getFont () + \",color=\" + getColor () + \"]\";\n }\n \n public boolean"}, {"sha": "3ae4dd6ca851d81acd2251b9d80b96600d8be7f6", "filename": "libjava/java/awt/KeyboardFocusManager.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -740,8 +740,11 @@ protected List getKeyEventPostProcessors ()\n \n   public final void redispatchEvent (Component target, AWTEvent e)\n   {\n-    e.setSource (target);\n-    dispatchEvent (e);\n+    synchronized (e)\n+      {\n+        e.setSource (target);\n+        target.dispatchEvent (e);\n+      }\n   }\n \n   public abstract boolean dispatchKeyEvent (KeyEvent e);"}, {"sha": "1c9b1c78946608fcdbd72f9f1b0dc25cdfbd4e01", "filename": "libjava/java/awt/MenuBar.java", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuBar.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -128,15 +128,15 @@ public class MenuBar extends MenuComponent\n       helpMenu.removeNotify ();\n       helpMenu.parent = null;\n     }\n+  helpMenu = menu;\n \n-  if (menu.parent != null)\n-    menu.parent.remove (menu);\n   if (menu.parent != null)\n     menu.parent.remove (menu);\n   menu.parent = this;\n \n   if (peer != null)\n     {\n+      menu.addNotify();\n       MenuBarPeer mp = (MenuBarPeer) peer;\n       mp.addHelpMenu (menu);\n     }\n@@ -163,8 +163,7 @@ public class MenuBar extends MenuComponent\n \n   if (peer != null)\n     {\n-      MenuBarPeer mp = (MenuBarPeer) peer;\n-      mp.addMenu (menu);\n+      menu.addNotify();\n     }\n \n   return(menu);\n@@ -269,6 +268,11 @@ public class MenuBar extends MenuComponent\n     Menu mi = (Menu)e.nextElement();\n     mi.addNotify();\n   }\n+  if (helpMenu != null)\n+  {\n+    helpMenu.addNotify();\n+    ((MenuBarPeer) peer).addHelpMenu(helpMenu);\n+  }\n }\n \n /*************************************************************************/"}, {"sha": "81a4a79bcfa89bb9fe98417ae75378f1f25358b5", "filename": "libjava/java/awt/MenuItem.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuItem.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -77,7 +77,7 @@ public class MenuItem extends MenuComponent\n /**\n   * @serial Indicates whether or not this menu item is enabled.\n   */\n-private boolean enabled;\n+private boolean enabled = true;\n \n /**\n   * @serial The mask of events that are enabled for this menu item."}, {"sha": "5dc54116fd2674d32c7240168c7d7080af373cfd", "filename": "libjava/java/awt/Rectangle.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FRectangle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2FRectangle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRectangle.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -542,7 +542,7 @@ public boolean inside(int x, int y)\n    */\n   public boolean intersects(Rectangle r)\n   {\n-    return width > 0 && height > 0 && r.width > 0 && r.height > 0\n+    return r.width > 0 && r.height > 0 && width > 0 && height > 0\n       && r.x < x + width && r.x + r.width > x\n       && r.y < y + height && r.y + r.height > y;\n   }"}, {"sha": "56b90e9983883a4b96b8f9d021e45d321c020a52", "filename": "libjava/java/awt/geom/CubicCurve2D.java", "status": "modified", "additions": 380, "deletions": 287, "changes": 667, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,5 +1,5 @@\n /* CubicCurve2D.java -- represents a parameterized cubic curve in 2-D space\n-   Copyright (C) 2002, 2003 Free Software Foundation\n+   Copyright (C) 2002, 2003, 2004 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -35,7 +35,6 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package java.awt.geom;\n \n import java.awt.Rectangle;\n@@ -53,12 +52,14 @@\n  * @author Eric Blake (ebb9@email.byu.edu)\n  * @author Graydon Hoare (graydon@redhat.com)\n  * @author Sascha Brawer (brawer@dandelis.ch)\n+ * @author Sven de Marothy (sven@physto.se)\n  *\n  * @since 1.2\n  */\n-public abstract class CubicCurve2D\n-  implements Shape, Cloneable\n+public abstract class CubicCurve2D implements Shape, Cloneable\n {\n+  private static final double BIG_VALUE = java.lang.Double.MAX_VALUE / 10.0;\n+\n   /**\n    * Constructs a new CubicCurve2D. Typical users will want to\n    * construct instances of a subclass, such as {@link\n@@ -68,87 +69,74 @@ protected CubicCurve2D()\n   {\n   }\n \n-\n   /**\n    * Returns the <i>x</i> coordinate of the curve&#x2019;s start\n    * point.\n    */\n   public abstract double getX1();\n \n-\n   /**\n    * Returns the <i>y</i> coordinate of the curve&#x2019;s start\n    * point.\n    */\n   public abstract double getY1();\n \n-\n   /**\n    * Returns the curve&#x2019;s start point.\n    */\n   public abstract Point2D getP1();\n \n-\n   /**\n    * Returns the <i>x</i> coordinate of the curve&#x2019;s first\n    * control point.\n    */\n   public abstract double getCtrlX1();\n \n-\n   /**\n    * Returns the <i>y</i> coordinate of the curve&#x2019;s first\n    * control point.\n    */\n   public abstract double getCtrlY1();\n \n-\n   /**\n    * Returns the curve&#x2019;s first control point.\n    */\n   public abstract Point2D getCtrlP1();\n \n-\n   /**\n    * Returns the <i>x</i> coordinate of the curve&#x2019;s second\n    * control point.\n    */\n   public abstract double getCtrlX2();\n \n-\n   /**\n    * Returns the <i>y</i> coordinate of the curve&#x2019;s second\n    * control point.\n    */\n   public abstract double getCtrlY2();\n \n-\n   /**\n    * Returns the curve&#x2019;s second control point.\n    */\n   public abstract Point2D getCtrlP2();\n \n-\n   /**\n    * Returns the <i>x</i> coordinate of the curve&#x2019;s end\n    * point.\n    */\n   public abstract double getX2();\n \n-\n   /**\n    * Returns the <i>y</i> coordinate of the curve&#x2019;s end\n    * point.\n    */\n   public abstract double getY2();\n \n-\n   /**\n    * Returns the curve&#x2019;s end point.\n    */\n   public abstract Point2D getP2();\n \n-\n   /**\n    * Changes the curve geometry, separately specifying each coordinate\n    * value.\n@@ -183,7 +171,6 @@ protected CubicCurve2D()\n   public abstract void setCurve(double x1, double y1, double cx1, double cy1,\n                                 double cx2, double cy2, double x2, double y2);\n \n-\n   /**\n    * Changes the curve geometry, specifying coordinate values in an\n    * array.\n@@ -206,13 +193,11 @@ public abstract void setCurve(double x1, double y1, double cx1, double cy1,\n    */\n   public void setCurve(double[] coords, int offset)\n   {\n-    setCurve(coords[offset++], coords[offset++],\n-             coords[offset++], coords[offset++],\n-             coords[offset++], coords[offset++],\n+    setCurve(coords[offset++], coords[offset++], coords[offset++],\n+             coords[offset++], coords[offset++], coords[offset++],\n              coords[offset++], coords[offset++]);\n   }\n \n-\n   /**\n    * Changes the curve geometry, specifying coordinate values in\n    * separate Point objects.\n@@ -232,11 +217,10 @@ public void setCurve(double[] coords, int offset)\n    */\n   public void setCurve(Point2D p1, Point2D c1, Point2D c2, Point2D p2)\n   {\n-    setCurve(p1.getX(), p1.getY(), c1.getX(), c1.getY(),\n-             c2.getX(), c2.getY(), p2.getX(), p2.getY());\n+    setCurve(p1.getX(), p1.getY(), c1.getX(), c1.getY(), c2.getX(), c2.getY(),\n+             p2.getX(), p2.getY());\n   }\n \n-\n   /**\n    * Changes the curve geometry, specifying coordinate values in an\n    * array of Point objects.\n@@ -258,12 +242,10 @@ public void setCurve(Point2D p1, Point2D c1, Point2D c2, Point2D p2)\n    */\n   public void setCurve(Point2D[] pts, int offset)\n   {\n-    setCurve(pts[offset].getX(), pts[offset++].getY(),\n-             pts[offset].getX(), pts[offset++].getY(),\n-             pts[offset].getX(), pts[offset++].getY(),\n+    setCurve(pts[offset].getX(), pts[offset++].getY(), pts[offset].getX(),\n+             pts[offset++].getY(), pts[offset].getX(), pts[offset++].getY(),\n              pts[offset].getX(), pts[offset++].getY());\n   }\n-  \n \n   /**\n    * Changes the curve geometry to that of another curve.\n@@ -276,7 +258,6 @@ public void setCurve(CubicCurve2D c)\n              c.getCtrlX2(), c.getCtrlY2(), c.getX2(), c.getY2());\n   }\n \n-\n   /**\n    * Calculates the squared flatness of a cubic curve, directly\n    * specifying each coordinate value. The flatness is the maximal\n@@ -309,7 +290,6 @@ public static double getFlatnessSq(double x1, double y1, double cx1,\n                     Line2D.ptSegDistSq(x1, y1, x2, y2, cx2, cy2));\n   }\n \n-\n   /**\n    * Calculates the flatness of a cubic curve, directly specifying\n    * each coordinate value. The flatness is the maximal distance of a\n@@ -340,7 +320,6 @@ public static double getFlatness(double x1, double y1, double cx1,\n     return Math.sqrt(getFlatnessSq(x1, y1, cx1, cy1, cx2, cy2, x2, y2));\n   }\n \n-\n   /**\n    * Calculates the squared flatness of a cubic curve, specifying the\n    * coordinate values in an array. The flatness is the maximal\n@@ -374,13 +353,11 @@ public static double getFlatness(double x1, double y1, double cx1,\n    */\n   public static double getFlatnessSq(double[] coords, int offset)\n   {\n-    return getFlatnessSq(coords[offset++], coords[offset++],\n-                         coords[offset++], coords[offset++],\n-                         coords[offset++], coords[offset++],\n+    return getFlatnessSq(coords[offset++], coords[offset++], coords[offset++],\n+                         coords[offset++], coords[offset++], coords[offset++],\n                          coords[offset++], coords[offset++]);\n   }\n \n-\n   /**\n    * Calculates the flatness of a cubic curve, specifying the\n    * coordinate values in an array. The flatness is the maximal\n@@ -420,7 +397,6 @@ public static double getFlatness(double[] coords, int offset)\n                                    coords[offset++], coords[offset++]));\n   }\n \n-\n   /**\n    * Calculates the squared flatness of this curve.  The flatness is\n    * the maximal distance of a control point to the line between start\n@@ -441,7 +417,6 @@ public double getFlatnessSq()\n                          getCtrlX2(), getCtrlY2(), getX2(), getY2());\n   }\n \n-\n   /**\n    * Calculates the flatness of this curve.  The flatness is the\n    * maximal distance of a control point to the line between start and\n@@ -458,12 +433,10 @@ public double getFlatnessSq()\n    */\n   public double getFlatness()\n   {\n-    return Math.sqrt(getFlatnessSq(getX1(), getY1(), getCtrlX1(),\n-                                   getCtrlY1(), getCtrlX2(), getCtrlY2(),\n-                                   getX2(), getY2()));\n+    return Math.sqrt(getFlatnessSq(getX1(), getY1(), getCtrlX1(), getCtrlY1(),\n+                                   getCtrlX2(), getCtrlY2(), getX2(), getY2()));\n   }\n \n-\n   /**\n    * Subdivides this curve into two halves.\n    *\n@@ -482,17 +455,18 @@ public double getFlatness()\n   public void subdivide(CubicCurve2D left, CubicCurve2D right)\n   {\n     // Use empty slots at end to share single array.\n-    double[] d = new double[] { getX1(), getY1(), getCtrlX1(), getCtrlY1(),\n-                                getCtrlX2(), getCtrlY2(), getX2(), getY2(),\n-                                0, 0, 0, 0, 0, 0 };\n+    double[] d = new double[]\n+                 {\n+                   getX1(), getY1(), getCtrlX1(), getCtrlY1(), getCtrlX2(),\n+                   getCtrlY2(), getX2(), getY2(), 0, 0, 0, 0, 0, 0\n+                 };\n     subdivide(d, 0, d, 0, d, 6);\n     if (left != null)\n       left.setCurve(d, 0);\n     if (right != null)\n       right.setCurve(d, 6);\n   }\n \n-\n   /**\n    * Subdivides a cubic curve into two halves.\n    *\n@@ -510,13 +484,12 @@ public void subdivide(CubicCurve2D left, CubicCurve2D right)\n    * of <code>src</code>, or <code>null</code> if the caller is not\n    * interested in the right half.\n    */\n-  public static void subdivide(CubicCurve2D src,\n-                               CubicCurve2D left, CubicCurve2D right)\n+  public static void subdivide(CubicCurve2D src, CubicCurve2D left,\n+                               CubicCurve2D right)\n   {\n     src.subdivide(left, right);\n   }\n \n-\n   /**\n    * Subdivides a cubic curve into two halves, passing all coordinates\n    * in an array.\n@@ -563,18 +536,29 @@ public static void subdivide(CubicCurve2D src,\n    * index where the start point&#x2019;s <i>x</i> coordinate will be\n    * stored.\n    */\n-  public static void subdivide(double[] src, int srcOff,\n-                               double[] left, int leftOff,\n-                               double[] right, int rightOff)\n+  public static void subdivide(double[] src, int srcOff, double[] left,\n+                               int leftOff, double[] right, int rightOff)\n   {\n     // To understand this code, please have a look at the image\n     // \"CubicCurve2D-3.png\" in the sub-directory \"doc-files\".\n-    double src_C1_x, src_C1_y, src_C2_x, src_C2_y;\n-    double left_P1_x, left_P1_y;\n-    double left_C1_x, left_C1_y, left_C2_x, left_C2_y;\n-    double right_C1_x, right_C1_y, right_C2_x, right_C2_y;\n-    double right_P2_x, right_P2_y;\n-    double Mid_x, Mid_y; // Mid = left.P2 = right.P1\n+    double src_C1_x;\n+    double src_C1_y;\n+    double src_C2_x;\n+    double src_C2_y;\n+    double left_P1_x;\n+    double left_P1_y;\n+    double left_C1_x;\n+    double left_C1_y;\n+    double left_C2_x;\n+    double left_C2_y;\n+    double right_C1_x;\n+    double right_C1_y;\n+    double right_C2_x;\n+    double right_C2_y;\n+    double right_P2_x;\n+    double right_P2_y;\n+    double Mid_x; // Mid = left.P2 = right.P1\n+    double Mid_y; // Mid = left.P2 = right.P1\n \n     left_P1_x = src[srcOff];\n     left_P1_y = src[srcOff + 1];\n@@ -599,31 +583,30 @@ public static void subdivide(double[] src, int srcOff,\n     Mid_y = (left_C2_y + right_C1_y) / 2;\n \n     if (left != null)\n-    {\n-      left[leftOff] = left_P1_x;\n-      left[leftOff + 1] = left_P1_y;\n-      left[leftOff + 2] = left_C1_x;\n-      left[leftOff + 3] = left_C1_y;\n-      left[leftOff + 4] = left_C2_x;\n-      left[leftOff + 5] = left_C2_y;\n-      left[leftOff + 6] = Mid_x;\n-      left[leftOff + 7] = Mid_y;\n-    }\n+      {\n+\tleft[leftOff] = left_P1_x;\n+\tleft[leftOff + 1] = left_P1_y;\n+\tleft[leftOff + 2] = left_C1_x;\n+\tleft[leftOff + 3] = left_C1_y;\n+\tleft[leftOff + 4] = left_C2_x;\n+\tleft[leftOff + 5] = left_C2_y;\n+\tleft[leftOff + 6] = Mid_x;\n+\tleft[leftOff + 7] = Mid_y;\n+      }\n \n     if (right != null)\n-    {\n-      right[rightOff] = Mid_x;\n-      right[rightOff + 1] = Mid_y;\n-      right[rightOff + 2] = right_C1_x;\n-      right[rightOff + 3] = right_C1_y;\n-      right[rightOff + 4] = right_C2_x;\n-      right[rightOff + 5] = right_C2_y;\n-      right[rightOff + 6] = right_P2_x;\n-      right[rightOff + 7] = right_P2_y;\n-    }\n+      {\n+\tright[rightOff] = Mid_x;\n+\tright[rightOff + 1] = Mid_y;\n+\tright[rightOff + 2] = right_C1_x;\n+\tright[rightOff + 3] = right_C1_y;\n+\tright[rightOff + 4] = right_C2_x;\n+\tright[rightOff + 5] = right_C2_y;\n+\tright[rightOff + 6] = right_P2_x;\n+\tright[rightOff + 7] = right_P2_y;\n+      }\n   }\n \n-\n   /**\n    * Finds the non-complex roots of a cubic equation, placing the\n    * results into the same array as the equation coefficients. The\n@@ -670,7 +653,6 @@ public static int solveCubic(double[] eqn)\n     return solveCubic(eqn, eqn);\n   }\n \n-\n   /**\n    * Finds the non-complex roots of a cubic equation. The following\n    * equation is being solved:\n@@ -727,9 +709,19 @@ public static int solveCubic(double[] eqn, double[] res)\n     // The Java implementation is very similar to the GSL code, but\n     // not a strict one-to-one copy. For example, GSL would sort the\n     // result.\n-\n-    double a, b, c, q, r, Q, R;\n-    double c3, Q3, R2, CR2, CQ3;\n+    \n+    double a;\n+    double b;\n+    double c;\n+    double q;\n+    double r;\n+    double Q;\n+    double R;\n+    double c3;\n+    double Q3;\n+    double R2;\n+    double CR2;\n+    double CQ3;\n \n     // If the cubic coefficient is zero, we have a quadratic equation.\n     c3 = eqn[3];\n@@ -755,219 +747,267 @@ public static int solveCubic(double[] eqn, double[] res)\n     CQ3 = 2916 * q * q * q;\n \n     if (R == 0 && Q == 0)\n-    {\n-      // The GNU Scientific Library would return three identical\n-      // solutions in this case.\n-      res[0] = -a/3;\n-      return 1;\n-    }\n-\n-    if (CR2 == CQ3) \n-    {\n-      /* this test is actually R2 == Q3, written in a form suitable\n-         for exact computation with integers */\n-\n-      /* Due to finite precision some double roots may be missed, and\n-         considered to be a pair of complex roots z = x +/- epsilon i\n-         close to the real axis. */\n-\n-      double sqrtQ = Math.sqrt(Q);\n-\n-      if (R > 0)\n       {\n-        res[0] = -2 * sqrtQ - a/3;\n-        res[1] = sqrtQ - a/3;\n+\t// The GNU Scientific Library would return three identical\n+\t// solutions in this case.\n+\tres[0] = -a / 3;\n+\treturn 1;\n       }\n-      else\n+\n+    if (CR2 == CQ3)\n       {\n-        res[0] = -sqrtQ - a/3;\n-        res[1] = 2 * sqrtQ - a/3;\n+\t/* this test is actually R2 == Q3, written in a form suitable\n+\t   for exact computation with integers */\n+\t/* Due to finite precision some double roots may be missed, and\n+\t   considered to be a pair of complex roots z = x +/- epsilon i\n+\t   close to the real axis. */\n+\tdouble sqrtQ = Math.sqrt(Q);\n+\n+\tif (R > 0)\n+\t  {\n+\t    res[0] = -2 * sqrtQ - a / 3;\n+\t    res[1] = sqrtQ - a / 3;\n+\t  }\n+\telse\n+\t  {\n+\t    res[0] = -sqrtQ - a / 3;\n+\t    res[1] = 2 * sqrtQ - a / 3;\n+\t  }\n+\treturn 2;\n       }\n-      return 2;\n-    }\n \n     if (CR2 < CQ3) /* equivalent to R2 < Q3 */\n-    {\n-      double sqrtQ = Math.sqrt(Q);\n-      double sqrtQ3 = sqrtQ * sqrtQ * sqrtQ;\n-      double theta = Math.acos(R / sqrtQ3);\n-      double norm = -2 * sqrtQ;\n-      res[0] = norm * Math.cos(theta / 3) - a / 3;\n-      res[1] = norm * Math.cos((theta + 2.0 * Math.PI) / 3) - a/3;\n-      res[2] = norm * Math.cos((theta - 2.0 * Math.PI) / 3) - a/3;\n-\n-      // The GNU Scientific Library sorts the results. We don't.\n-      return 3;\n-    }\n+      {\n+\tdouble sqrtQ = Math.sqrt(Q);\n+\tdouble sqrtQ3 = sqrtQ * sqrtQ * sqrtQ;\n+\tdouble theta = Math.acos(R / sqrtQ3);\n+\tdouble norm = -2 * sqrtQ;\n+\tres[0] = norm * Math.cos(theta / 3) - a / 3;\n+\tres[1] = norm * Math.cos((theta + 2.0 * Math.PI) / 3) - a / 3;\n+\tres[2] = norm * Math.cos((theta - 2.0 * Math.PI) / 3) - a / 3;\n+\n+\t// The GNU Scientific Library sorts the results. We don't.\n+\treturn 3;\n+      }\n \n     double sgnR = (R >= 0 ? 1 : -1);\n-    double A = -sgnR * Math.pow(Math.abs(R) + Math.sqrt(R2 - Q3), 1.0/3.0);\n-    double B = Q / A ;\n-    res[0] = A + B - a/3;\n+    double A = -sgnR * Math.pow(Math.abs(R) + Math.sqrt(R2 - Q3), 1.0 / 3.0);\n+    double B = Q / A;\n+    res[0] = A + B - a / 3;\n     return 1;\n   }\n \n-\n   /**\n-   * Determines whether a position lies inside the area that is bounded\n+   * Determines whether a position lies inside the area bounded\n    * by the curve and the straight line connecting its end points.\n    *\n    * <p><img src=\"doc-files/CubicCurve2D-5.png\" width=\"350\" height=\"180\"\n    * alt=\"A drawing of the area spanned by the curve\" />\n    *\n    * <p>The above drawing illustrates in which area points are\n-   * considered &#x201c;contained&#x201d; in a CubicCurve2D.\n+   * considered &#x201c;inside&#x201d; a CubicCurve2D.\n    */\n   public boolean contains(double x, double y)\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n-  }\n+    if (! getBounds2D().contains(x, y))\n+      return false;\n \n+    return ((getAxisIntersections(x, y, true, BIG_VALUE) & 1) != 0);\n+  }\n \n   /**\n-   * Determines whether a point lies inside the area that is bounded\n+   * Determines whether a point lies inside the area bounded\n    * by the curve and the straight line connecting its end points.\n    *\n    * <p><img src=\"doc-files/CubicCurve2D-5.png\" width=\"350\" height=\"180\"\n    * alt=\"A drawing of the area spanned by the curve\" />\n    *\n    * <p>The above drawing illustrates in which area points are\n-   * considered &#x201c;contained&#x201d; in a CubicCurve2D.\n+   * considered &#x201c;inside&#x201d; a CubicCurve2D.\n    */\n   public boolean contains(Point2D p)\n   {\n     return contains(p.getX(), p.getY());\n   }\n \n-\n+  /**\n+   * Determines whether any part of a rectangle is inside the area bounded\n+   * by the curve and the straight line connecting its end points.\n+   *\n+   * <p><img src=\"doc-files/CubicCurve2D-5.png\" width=\"350\" height=\"180\"\n+   * alt=\"A drawing of the area spanned by the curve\" />\n+   *\n+   * <p>The above drawing illustrates in which area points are\n+   * considered &#x201c;inside&#x201d; in a CubicCurve2D.\n+   * @see #contains(double, double)\n+   */\n   public boolean intersects(double x, double y, double w, double h)\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n-  }\n+    if (! getBounds2D().contains(x, y, w, h))\n+      return false;\n \n+    /* Does any edge intersect? */\n+    if (getAxisIntersections(x, y, true, w) != 0 /* top */\n+        || getAxisIntersections(x, y + h, true, w) != 0 /* bottom */\n+        || getAxisIntersections(x + w, y, false, h) != 0 /* right */\n+        || getAxisIntersections(x, y, false, h) != 0) /* left */\n+      return true;\n \n+    /* No intersections, is any point inside? */\n+    if ((getAxisIntersections(x, y, true, BIG_VALUE) & 1) != 0)\n+      return true;\n+\n+    return false;\n+  }\n+\n+  /**\n+   * Determines whether any part of a Rectangle2D is inside the area bounded \n+   * by the curve and the straight line connecting its end points.\n+   * @see #intersects(double, double, double, double)\n+   */\n   public boolean intersects(Rectangle2D r)\n   {\n     return intersects(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n   }\n \n-\n+  /**\n+   * Determine whether a rectangle is entirely inside the area that is bounded\n+   * by the curve and the straight line connecting its end points.\n+   *\n+   * <p><img src=\"doc-files/CubicCurve2D-5.png\" width=\"350\" height=\"180\"\n+   * alt=\"A drawing of the area spanned by the curve\" />\n+   *\n+   * <p>The above drawing illustrates in which area points are\n+   * considered &#x201c;inside&#x201d; a CubicCurve2D.\n+   * @see #contains(double, double)\n+   */\n   public boolean contains(double x, double y, double w, double h)\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n-  }\n+    if (! getBounds2D().intersects(x, y, w, h))\n+      return false;\n+\n+    /* Does any edge intersect? */\n+    if (getAxisIntersections(x, y, true, w) != 0 /* top */\n+        || getAxisIntersections(x, y + h, true, w) != 0 /* bottom */\n+        || getAxisIntersections(x + w, y, false, h) != 0 /* right */\n+        || getAxisIntersections(x, y, false, h) != 0) /* left */\n+      return false;\n \n+    /* No intersections, is any point inside? */\n+    if ((getAxisIntersections(x, y, true, BIG_VALUE) & 1) != 0)\n+      return true;\n \n+    return false;\n+  }\n+\n+  /**\n+   * Determine whether a Rectangle2D is entirely inside the area that is \n+   * bounded by the curve and the straight line connecting its end points.\n+   *\n+   * <p><img src=\"doc-files/CubicCurve2D-5.png\" width=\"350\" height=\"180\"\n+   * alt=\"A drawing of the area spanned by the curve\" />\n+   *\n+   * <p>The above drawing illustrates in which area points are\n+   * considered &#x201c;inside&#x201d; a CubicCurve2D.\n+   * @see #contains(double, double)\n+   */\n   public boolean contains(Rectangle2D r)\n   {\n     return contains(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n   }\n \n-\n   /**\n    * Determines the smallest rectangle that encloses the\n-   * curve&#x2019;s start, end and control points. As the illustration\n-   * below shows, the invisible control points may cause the bounds to\n-   * be much larger than the area that is actually covered by the\n-   * curve.\n-   *\n-   * <p><img src=\"doc-files/CubicCurve2D-2.png\" width=\"350\" height=\"180\"\n-   * alt=\"An illustration of the bounds of a CubicCurve2D\" />\n+   * curve&#x2019;s start, end and control points.\n    */\n   public Rectangle getBounds()\n   {\n     return getBounds2D().getBounds();\n   }\n \n-\n   public PathIterator getPathIterator(final AffineTransform at)\n   {\n     return new PathIterator()\n-    {\n-      /** Current coordinate. */\n-      private int current = 0;\n-\n-      public int getWindingRule()\n-      {\n-        return WIND_NON_ZERO;\n-      }\n-\n-      public boolean isDone()\n-      {\n-        return current >= 2;\n-      }\n-\n-      public void next()\n-      {\n-        current++;\n-      }\n-\n-      public int currentSegment(float[] coords)\n       {\n-        int result;\n-        switch (current)\n-          {\n-          case 0:\n-            coords[0] = (float) getX1();\n-            coords[1] = (float) getY1();\n-            result = SEG_MOVETO;\n-            break;            \n-          case 1:\n-            coords[0] = (float) getCtrlX1();\n-            coords[1] = (float) getCtrlY1();\n-            coords[2] = (float) getCtrlX2();\n-            coords[3] = (float) getCtrlY2();\n-            coords[4] = (float) getX2();\n-            coords[5] = (float) getY2();\n-            result = SEG_CUBICTO;\n-            break;\n-          default:\n-            throw new NoSuchElementException(\"cubic iterator out of bounds\");            \n-          }\n-        if (at != null)\n-          at.transform(coords, 0, coords, 0, 3);\n-        return result;\n-      }\n-\n-      public int currentSegment(double[] coords)\n-      {\n-        int result;\n-        switch (current)\n-          {\n-          case 0:\n-            coords[0] = getX1();\n-            coords[1] = getY1();\n-            result = SEG_MOVETO;\n-            break;\n-          case 1:\n-            coords[0] = getCtrlX1();\n-            coords[1] = getCtrlY1();\n-            coords[2] = getCtrlX2();\n-            coords[3] = getCtrlY2();\n-            coords[4] = getX2();\n-            coords[5] = getY2();\n-            result = SEG_CUBICTO;\n-            break;\n-          default:\n-            throw new NoSuchElementException(\"cubic iterator out of bounds\");\n-          }        \n-        if (at != null)\n-          at.transform(coords, 0, coords, 0, 3);\n-        return result;\n-      }\n-    };\n+\t/** Current coordinate. */\n+\tprivate int current = 0;\n+\n+\tpublic int getWindingRule()\n+\t{\n+\t  return WIND_NON_ZERO;\n+\t}\n+\n+\tpublic boolean isDone()\n+\t{\n+\t  return current >= 2;\n+\t}\n+\n+\tpublic void next()\n+\t{\n+\t  current++;\n+\t}\n+\n+\tpublic int currentSegment(float[] coords)\n+\t{\n+\t  int result;\n+\t  switch (current)\n+\t    {\n+\t    case 0:\n+\t      coords[0] = (float) getX1();\n+\t      coords[1] = (float) getY1();\n+\t      result = SEG_MOVETO;\n+\t      break;\n+\t    case 1:\n+\t      coords[0] = (float) getCtrlX1();\n+\t      coords[1] = (float) getCtrlY1();\n+\t      coords[2] = (float) getCtrlX2();\n+\t      coords[3] = (float) getCtrlY2();\n+\t      coords[4] = (float) getX2();\n+\t      coords[5] = (float) getY2();\n+\t      result = SEG_CUBICTO;\n+\t      break;\n+\t    default:\n+\t      throw new NoSuchElementException(\"cubic iterator out of bounds\");\n+\t    }\n+\t  if (at != null)\n+\t    at.transform(coords, 0, coords, 0, 3);\n+\t  return result;\n+\t}\n+\n+\tpublic int currentSegment(double[] coords)\n+\t{\n+\t  int result;\n+\t  switch (current)\n+\t    {\n+\t    case 0:\n+\t      coords[0] = getX1();\n+\t      coords[1] = getY1();\n+\t      result = SEG_MOVETO;\n+\t      break;\n+\t    case 1:\n+\t      coords[0] = getCtrlX1();\n+\t      coords[1] = getCtrlY1();\n+\t      coords[2] = getCtrlX2();\n+\t      coords[3] = getCtrlY2();\n+\t      coords[4] = getX2();\n+\t      coords[5] = getY2();\n+\t      result = SEG_CUBICTO;\n+\t      break;\n+\t    default:\n+\t      throw new NoSuchElementException(\"cubic iterator out of bounds\");\n+\t    }\n+\t  if (at != null)\n+\t    at.transform(coords, 0, coords, 0, 3);\n+\t  return result;\n+\t}\n+      };\n   }\n \n-\n   public PathIterator getPathIterator(AffineTransform at, double flatness)\n   {\n     return new FlatteningPathIterator(getPathIterator(at), flatness);\n   }\n \n-\n   /**\n    * Create a new curve with the same contents as this one.\n    *\n@@ -976,15 +1016,118 @@ public PathIterator getPathIterator(AffineTransform at, double flatness)\n   public Object clone()\n   {\n     try\n-    {\n-      return super.clone();\n-    }\n+      {\n+\treturn super.clone();\n+      }\n     catch (CloneNotSupportedException e)\n-    {\n-      throw (Error) new InternalError().initCause(e); // Impossible\n-    }\n+      {\n+\tthrow (Error) new InternalError().initCause(e); // Impossible\n+      }\n   }\n \n+  /**\n+   * Helper method used by contains() and intersects() methods, that\n+   * returns the number of curve/line intersections on a given axis\n+   * extending from a certain point.\n+   *\n+   * @param x x coordinate of the origin point\n+   * @param y y coordinate of the origin point\n+   * @param useYaxis axis used, if true the positive Y axis is used,\n+   * false uses the positive X axis.\n+   *\n+   * This is an implementation of the line-crossings algorithm,\n+   * Detailed in an article on Eric Haines' page:\n+   * http://www.acm.org/tog/editors/erich/ptinpoly/\n+   *\n+   * A special-case not adressed in this code is self-intersections\n+   * of the curve, e.g. if the axis intersects the self-itersection,\n+   * the degenerate roots of the polynomial will erroneously count as \n+   * a single intersection of the curve, and not two.\n+   */\n+  private int getAxisIntersections(double x, double y, boolean useYaxis,\n+                                   double distance)\n+  {\n+    int nCrossings = 0;\n+    double a0;\n+    double a1;\n+    double a2;\n+    double a3;\n+    double b0;\n+    double b1;\n+    double b2;\n+    double b3;\n+    double[] r = new double[4];\n+    int nRoots;\n+\n+    a0 = a3 = 0.0;\n+\n+    if (useYaxis)\n+      {\n+\ta0 = getY1() - y;\n+\ta1 = getCtrlY1() - y;\n+\ta2 = getCtrlY2() - y;\n+\ta3 = getY2() - y;\n+\tb0 = getX1() - x;\n+\tb1 = getCtrlX1() - x;\n+\tb2 = getCtrlX2() - x;\n+\tb3 = getX2() - x;\n+      }\n+    else\n+      {\n+\ta0 = getX1() - x;\n+\ta1 = getCtrlX1() - x;\n+\ta2 = getCtrlX2() - x;\n+\ta3 = getX2() - x;\n+\tb0 = getY1() - y;\n+\tb1 = getCtrlY1() - y;\n+\tb2 = getCtrlY2() - y;\n+\tb3 = getY2() - y;\n+      }\n+\n+    /* If the axis intersects a start/endpoint, shift it up by some small \n+       amount to guarantee the line is 'inside'\n+       If this is not done, bad behaviour may result for points on that axis.*/\n+    if (a0 == 0.0 || a3 == 0.0)\n+      {\n+\tdouble small = getFlatness() * (1E-10);\n+\tif (a0 == 0.0)\n+\t  a0 += small;\n+\tif (a3 == 0.0)\n+\t  a3 += small;\n+      }\n+\n+    if (useYaxis)\n+      {\n+\tif (Line2D.linesIntersect(b0, a0, b3, a3, 0.0, 0.0, distance, 0.0))\n+\t  nCrossings++;\n+      }\n+    else\n+      {\n+\tif (Line2D.linesIntersect(a0, b0, a3, b3, 0.0, 0.0, 0.0, distance))\n+\t  nCrossings++;\n+      }\n+\n+    r[0] = a0;\n+    r[1] = 3 * (a1 - a0);\n+    r[2] = 3 * (a2 + a0 - 2 * a1);\n+    r[3] = a3 - 3 * a2 + 3 * a1 - a0;\n+\n+    if ((nRoots = solveCubic(r)) != 0)\n+      for (int i = 0; i < nRoots; i++)\n+        {\n+\t  double t = r[i];\n+\t  if (t >= 0.0 && t <= 1.0)\n+\t    {\n+\t      double crossing = -(t * t * t) * (b0 - 3 * b1 + 3 * b2 - b3)\n+\t                        + 3 * t * t * (b0 - 2 * b1 + b2)\n+\t                        + 3 * t * (b1 - b0) + b0;\n+\t      if (crossing > 0.0 && crossing <= distance)\n+\t\tnCrossings++;\n+\t    }\n+        }\n+\n+    return (nCrossings);\n+  }\n \n   /**\n    * A two-dimensional curve that is parameterized with a cubic\n@@ -996,57 +1139,48 @@ public Object clone()\n    * @author Eric Blake (ebb9@email.byu.edu)\n    * @author Sascha Brawer (brawer@dandelis.ch)\n    */\n-  public static class Double\n-    extends CubicCurve2D\n+  public static class Double extends CubicCurve2D\n   {\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s start point.\n      */\n     public double x1;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s start point.\n      */\n     public double y1;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s first control point.\n      */\n     public double ctrlx1;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s first control point.\n      */\n     public double ctrly1;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s second control point.\n      */\n     public double ctrlx2;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s second control point.\n      */\n     public double ctrly2;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s end point.\n      */\n     public double x2;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s end point.\n      */\n     public double y2;\n \n-\n     /**\n      * Constructs a new CubicCurve2D that stores its coordinate values\n      * in double-precision floating-point format. All points are\n@@ -1056,7 +1190,6 @@ public Double()\n     {\n     }\n \n-\n     /**\n      * Constructs a new CubicCurve2D that stores its coordinate values\n      * in double-precision floating-point format, specifying the\n@@ -1089,8 +1222,8 @@ public Double()\n      * @param y2 the <i>y</i> coordinate of the curve&#x2019;s end\n      * point.\n      */\n-    public Double(double x1, double y1, double cx1, double cy1,\n-                  double cx2, double cy2, double x2, double y2)\n+    public Double(double x1, double y1, double cx1, double cy1, double cx2,\n+                  double cy2, double x2, double y2)\n     {\n       this.x1 = x1;\n       this.y1 = y1;\n@@ -1102,7 +1235,6 @@ public Double(double x1, double y1, double cx1, double cy1,\n       this.y2 = y2;\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s start\n      * point.\n@@ -1112,7 +1244,6 @@ public double getX1()\n       return x1;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s start\n      * point.\n@@ -1122,7 +1253,6 @@ public double getY1()\n       return y1;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s start point.\n      */\n@@ -1131,7 +1261,6 @@ public Point2D getP1()\n       return new Point2D.Double(x1, y1);\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s first\n      * control point.\n@@ -1141,7 +1270,6 @@ public double getCtrlX1()\n       return ctrlx1;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s first\n      * control point.\n@@ -1151,7 +1279,6 @@ public double getCtrlY1()\n       return ctrly1;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s first control point.\n      */\n@@ -1160,7 +1287,6 @@ public Point2D getCtrlP1()\n       return new Point2D.Double(ctrlx1, ctrly1);\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s second\n      * control point.\n@@ -1170,7 +1296,6 @@ public double getCtrlX2()\n       return ctrlx2;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s second\n      * control point.\n@@ -1180,7 +1305,6 @@ public double getCtrlY2()\n       return ctrly2;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s second control point.\n      */\n@@ -1189,7 +1313,6 @@ public Point2D getCtrlP2()\n       return new Point2D.Double(ctrlx2, ctrly2);\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s end\n      * point.\n@@ -1199,7 +1322,6 @@ public double getX2()\n       return x2;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s end\n      * point.\n@@ -1209,7 +1331,6 @@ public double getY2()\n       return y2;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s end point.\n      */\n@@ -1218,7 +1339,6 @@ public Point2D getP2()\n       return new Point2D.Double(x2, y2);\n     }\n \n-\n     /**\n      * Changes the curve geometry, separately specifying each coordinate\n      * value.\n@@ -1263,7 +1383,6 @@ public void setCurve(double x1, double y1, double cx1, double cy1,\n       this.y2 = y2;\n     }\n \n-\n     /**\n      * Determines the smallest rectangle that encloses the\n      * curve&#x2019;s start, end and control points. As the\n@@ -1284,7 +1403,6 @@ public Rectangle2D getBounds2D()\n     }\n   }\n \n-\n   /**\n    * A two-dimensional curve that is parameterized with a cubic\n    * function and stores coordinate values in single-precision\n@@ -1295,57 +1413,48 @@ public Rectangle2D getBounds2D()\n    * @author Eric Blake (ebb9@email.byu.edu)\n    * @author Sascha Brawer (brawer@dandelis.ch)\n    */\n-  public static class Float\n-    extends CubicCurve2D\n+  public static class Float extends CubicCurve2D\n   {\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s start point.\n      */\n     public float x1;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s start point.\n      */\n     public float y1;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s first control point.\n      */\n     public float ctrlx1;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s first control point.\n      */\n     public float ctrly1;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s second control point.\n      */\n     public float ctrlx2;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s second control point.\n      */\n     public float ctrly2;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s end point.\n      */\n     public float x2;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s end point.\n      */\n     public float y2;\n \n-\n     /**\n      * Constructs a new CubicCurve2D that stores its coordinate values\n      * in single-precision floating-point format. All points are\n@@ -1355,7 +1464,6 @@ public Float()\n     {\n     }\n \n-\n     /**\n      * Constructs a new CubicCurve2D that stores its coordinate values\n      * in single-precision floating-point format, specifying the\n@@ -1388,8 +1496,8 @@ public Float()\n      * @param y2 the <i>y</i> coordinate of the curve&#x2019;s end\n      * point.\n      */\n-    public Float(float x1, float y1, float cx1, float cy1,\n-                 float cx2, float cy2, float x2, float y2)\n+    public Float(float x1, float y1, float cx1, float cy1, float cx2,\n+                 float cy2, float x2, float y2)\n     {\n       this.x1 = x1;\n       this.y1 = y1;\n@@ -1401,7 +1509,6 @@ public Float(float x1, float y1, float cx1, float cy1,\n       this.y2 = y2;\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s start\n      * point.\n@@ -1411,7 +1518,6 @@ public double getX1()\n       return x1;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s start\n      * point.\n@@ -1421,7 +1527,6 @@ public double getY1()\n       return y1;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s start point.\n      */\n@@ -1430,7 +1535,6 @@ public Point2D getP1()\n       return new Point2D.Float(x1, y1);\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s first\n      * control point.\n@@ -1440,7 +1544,6 @@ public double getCtrlX1()\n       return ctrlx1;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s first\n      * control point.\n@@ -1450,7 +1553,6 @@ public double getCtrlY1()\n       return ctrly1;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s first control point.\n      */\n@@ -1459,7 +1561,6 @@ public Point2D getCtrlP1()\n       return new Point2D.Float(ctrlx1, ctrly1);\n     }\n \n-\n     /**\n      * Returns the <i>s</i> coordinate of the curve&#x2019;s second\n      * control point.\n@@ -1469,7 +1570,6 @@ public double getCtrlX2()\n       return ctrlx2;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s second\n      * control point.\n@@ -1479,7 +1579,6 @@ public double getCtrlY2()\n       return ctrly2;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s second control point.\n      */\n@@ -1488,7 +1587,6 @@ public Point2D getCtrlP2()\n       return new Point2D.Float(ctrlx2, ctrly2);\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s end\n      * point.\n@@ -1498,7 +1596,6 @@ public double getX2()\n       return x2;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s end\n      * point.\n@@ -1508,7 +1605,6 @@ public double getY2()\n       return y2;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s end point.\n      */\n@@ -1517,7 +1613,6 @@ public Point2D getP2()\n       return new Point2D.Float(x2, y2);\n     }\n \n-\n     /**\n      * Changes the curve geometry, separately specifying each coordinate\n      * value as a double-precision floating-point number.\n@@ -1562,7 +1657,6 @@ public void setCurve(double x1, double y1, double cx1, double cy1,\n       this.y2 = (float) y2;\n     }\n \n-\n     /**\n      * Changes the curve geometry, separately specifying each coordinate\n      * value as a single-precision floating-point number.\n@@ -1594,8 +1688,8 @@ public void setCurve(double x1, double y1, double cx1, double cy1,\n      * @param y2 the <i>y</i> coordinate of the curve&#x2019;s new end\n      * point.\n      */\n-    public void setCurve(float x1, float y1, float cx1, float cy1,\n-                         float cx2, float cy2, float x2, float y2)\n+    public void setCurve(float x1, float y1, float cx1, float cy1, float cx2,\n+                         float cy2, float x2, float y2)\n     {\n       this.x1 = x1;\n       this.y1 = y1;\n@@ -1607,7 +1701,6 @@ public void setCurve(float x1, float y1, float cx1, float cy1,\n       this.y2 = y2;\n     }\n \n-\n     /**\n      * Determines the smallest rectangle that encloses the\n      * curve&#x2019;s start, end and control points. As the"}, {"sha": "40182eabf7eebf159ad07bcf7cbf32167e383478", "filename": "libjava/java/awt/geom/GeneralPath.java", "status": "modified", "additions": 653, "deletions": 186, "changes": 839, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fgeom%2FGeneralPath.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fgeom%2FGeneralPath.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FGeneralPath.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,155 +1,257 @@\n /* GeneralPath.java -- represents a shape built from subpaths\n-   Copyright (C) 2002, 2003 Free Software Foundation\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n+   Copyright (C) 2002, 2003, 2004 Free Software Foundation\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version. */\n \n package java.awt.geom;\n \n import java.awt.Rectangle;\n import java.awt.Shape;\n \n+\n /**\n- * STUBS ONLY\n- * XXX Implement and document. Note that Sun's implementation only expects\n- * float precision, not double.\n+ * A general geometric path, consisting of any number of subpaths\n+ * constructed out of straight lines and cubic or quadratic Bezier\n+ * curves.\n+ *\n+ * <p>The inside of the curve is defined for drawing purposes by a winding\n+ * rule. Either the WIND_EVEN_ODD or WIND_NON_ZERO winding rule can be chosen.\n+ *\n+ * <p><img src=\"doc-files/GeneralPath-1.png\" width=\"300\" height=\"210\"\n+ * alt=\"A drawing of a GeneralPath\" />\n+ * <p>The EVEN_ODD winding rule defines a point as inside a path if:\n+ * A ray from the point towards infinity in an arbitrary direction\n+ * intersects the path an odd number of times. Points <b>A</b> and\n+ * <b>C</b> in the image are considered to be outside the path.\n+ * (both intersect twice)\n+ * Point <b>B</b> intersects once, and is inside.\n+ *\n+ * <p>The NON_ZERO winding rule defines a point as inside a path if:\n+ * The path intersects the ray in an equal number of opposite directions.\n+ * Point <b>A</b> in the image is outside (one intersection in the \n+ * &#x2019;up&#x2019;\n+ * direction, one in the &#x2019;down&#x2019; direction) Point <b>B</b> in \n+ * the image is inside (one intersection &#x2019;down&#x2019;)\n+ * Point <b>C</b> in the image is outside (two intersections \n+ * &#x2019;down&#x2019;)\n+ *\n+ * @see Line2D\n+ * @see CubicCurve2D\n+ * @see QuadCurve2D\n+ *\n+ * @author Sascha Brawer (brawer@dandelis.ch)\n+ * @author Sven de Marothy (sven@physto.se)\n+ *\n+ * @since 1.2\n  */\n public final class GeneralPath implements Shape, Cloneable\n {\n   public static final int WIND_EVEN_ODD = PathIterator.WIND_EVEN_ODD;\n   public static final int WIND_NON_ZERO = PathIterator.WIND_NON_ZERO;\n \n   /** Initial size if not specified. */\n-  private static final int INIT_SIZE = 20;\n+  private static final int INIT_SIZE = 10;\n+\n+  /** A big number, but not so big it can't survive a few float operations */\n+  private static final double BIG_VALUE = java.lang.Double.MAX_VALUE / 10.0;\n \n   /** The winding rule. */\n   private int rule;\n+\n   /**\n-   * The path type in points. Note that points[index] maps to\n-   * types[index >> 1]; the control points of quad and cubic paths map as\n+   * The path type in points. Note that xpoints[index] and ypoints[index] maps\n+   * to types[index]; the control points of quad and cubic paths map as\n    * well but are ignored.\n    */\n   private byte[] types;\n+\n   /**\n    * The list of all points seen. Since you can only append floats, it makes\n-   * sense for this to be a float[]. I have no idea why Sun didn't choose to\n+   * sense for these to be float[]. I have no idea why Sun didn't choose to\n    * allow a general path of double precision points.\n+   * Note: Storing x and y coords seperately makes for a slower transforms,\n+   * But it speeds up and simplifies box-intersection checking a lot.\n    */\n-  private float[] points;\n+  private float[] xpoints;\n+  private float[] ypoints;\n+\n   /** The index of the most recent moveto point, or null. */\n   private int subpath = -1;\n+\n   /** The next available index into points. */\n   private int index;\n \n+  /**\n+   * Constructs a GeneralPath with the default (NON_ZERO)\n+   * winding rule and initial capacity (20).\n+   */\n   public GeneralPath()\n   {\n     this(WIND_NON_ZERO, INIT_SIZE);\n   }\n+\n+  /**\n+   * Constructs a GeneralPath with a specific winding rule\n+   * and the default initial capacity (20).\n+   * @param rule the winding rule (WIND_NON_ZERO or WIND_EVEN_ODD)\n+   */\n   public GeneralPath(int rule)\n   {\n     this(rule, INIT_SIZE);\n   }\n+\n+  /**\n+   * Constructs a GeneralPath with a specific winding rule\n+   * and the initial capacity. The initial capacity should be\n+   * the approximate number of path segments to be used.\n+   * @param rule the winding rule (WIND_NON_ZERO or WIND_EVEN_ODD)\n+   * @param capacity the inital capacity, in path segments\n+   */\n   public GeneralPath(int rule, int capacity)\n   {\n     if (rule != WIND_EVEN_ODD && rule != WIND_NON_ZERO)\n       throw new IllegalArgumentException();\n     this.rule = rule;\n     if (capacity < INIT_SIZE)\n       capacity = INIT_SIZE;\n-    types = new byte[capacity >> 1];\n-    points = new float[capacity];\n+    types = new byte[capacity];\n+    xpoints = new float[capacity];\n+    ypoints = new float[capacity];\n   }\n+\n+  /**\n+   * Constructs a GeneralPath from an arbitrary shape object.\n+   * The Shapes PathIterator path and winding rule will be used.\n+   * @param s the shape\n+   */\n   public GeneralPath(Shape s)\n   {\n-    types = new byte[INIT_SIZE >> 1];\n-    points = new float[INIT_SIZE];\n+    types = new byte[INIT_SIZE];\n+    xpoints = new float[INIT_SIZE];\n+    ypoints = new float[INIT_SIZE];\n     PathIterator pi = s.getPathIterator(null);\n     setWindingRule(pi.getWindingRule());\n     append(pi, false);\n   }\n \n+  /**\n+   * Adds a new point to a path.\n+   */\n   public void moveTo(float x, float y)\n   {\n     subpath = index;\n-    ensureSize(index + 2);\n-    types[index >> 1] = PathIterator.SEG_MOVETO;\n-    points[index++] = x;\n-    points[index++] = y;\n+    ensureSize(index + 1);\n+    types[index] = PathIterator.SEG_MOVETO;\n+    xpoints[index] = x;\n+    ypoints[index++] = y;\n   }\n+\n+  /**\n+   * Appends a straight line to the current path.\n+   * @param x x coordinate of the line endpoint.\n+   * @param y y coordinate of the line endpoint.\n+   */\n   public void lineTo(float x, float y)\n   {\n-    ensureSize(index + 2);\n-    types[index >> 1] = PathIterator.SEG_LINETO;\n-    points[index++] = x;\n-    points[index++] = y;\n+    ensureSize(index + 1);\n+    types[index] = PathIterator.SEG_LINETO;\n+    xpoints[index] = x;\n+    ypoints[index++] = y;\n   }\n+\n+  /**\n+   * Appends a quadratic Bezier curve to the current path.\n+   * @param x1 x coordinate of the control point\n+   * @param y1 y coordinate of the control point\n+   * @param x2 x coordinate of the curve endpoint.\n+   * @param y2 y coordinate of the curve endpoint.\n+   */\n   public void quadTo(float x1, float y1, float x2, float y2)\n   {\n-    ensureSize(index + 4);\n-    types[index >> 1] = PathIterator.SEG_QUADTO;\n-    points[index++] = x1;\n-    points[index++] = y1;\n-    points[index++] = x2;\n-    points[index++] = y2;\n-  }\n-  public void curveTo(float x1, float y1, float x2, float y2,\n-                      float x3, float y3)\n-  {\n-    ensureSize(index + 6);\n-    types[index >> 1] = PathIterator.SEG_CUBICTO;\n-    points[index++] = x1;\n-    points[index++] = y1;\n-    points[index++] = x2;\n-    points[index++] = y2;\n-    points[index++] = x3;\n-    points[index++] = y3;\n+    ensureSize(index + 2);\n+    types[index] = PathIterator.SEG_QUADTO;\n+    xpoints[index] = x1;\n+    ypoints[index++] = y1;\n+    xpoints[index] = x2;\n+    ypoints[index++] = y2;\n   }\n+\n+  /**\n+   * Appends a cubic Bezier curve to the current path.\n+   * @param x1 x coordinate of the first control point\n+   * @param y1 y coordinate of the first control point\n+   * @param x2 x coordinate of the second control point\n+   * @param y2 y coordinate of the second control point\n+   * @param x3 x coordinate of the curve endpoint.\n+   * @param y3 y coordinate of the curve endpoint.\n+   */\n+  public void curveTo(float x1, float y1, float x2, float y2, float x3,\n+                      float y3)\n+  {\n+    ensureSize(index + 3);\n+    types[index] = PathIterator.SEG_CUBICTO;\n+    xpoints[index] = x1;\n+    ypoints[index++] = y1;\n+    xpoints[index] = x2;\n+    ypoints[index++] = y2;\n+    xpoints[index] = x3;\n+    ypoints[index++] = y3;\n+  }\n+\n+  /**\n+   * Closes the current subpath by drawing a line\n+   * back to the point of the last moveTo.\n+   */\n   public void closePath()\n   {\n-    ensureSize(index + 2);\n-    types[index >> 1] = PathIterator.SEG_CLOSE;\n-    points[index++] = points[subpath];\n-    points[index++] = points[subpath + 1];\n+    ensureSize(index + 1);\n+    types[index] = PathIterator.SEG_CLOSE;\n+    xpoints[index] = xpoints[subpath];\n+    ypoints[index++] = ypoints[subpath];\n   }\n \n+  /**\n+   * Appends the segments of a Shape to the path. If <code>connect</code> is \n+   * true, the new path segments are connected to the existing one with a line.\n+   * The winding rule of the Shape is ignored.\n+   */\n   public void append(Shape s, boolean connect)\n   {\n     append(s.getPathIterator(null), connect);\n   }\n \n-\n   /**\n    * Appends the segments of a PathIterator to this GeneralPath.\n    * Optionally, the initial {@link PathIterator#SEG_MOVETO} segment\n@@ -158,7 +260,7 @@ public void append(Shape s, boolean connect)\n    *\n    * @param iter the PathIterator specifying which segments shall be\n    * appended.\n-   * \n+   *\n    * @param connect <code>true</code> for substituting the initial\n    * {@link PathIterator#SEG_MOVETO} segment by a {@link\n    * PathIterator#SEG_LINETO}, or <code>false</code> for not\n@@ -171,159 +273,279 @@ public void append(PathIterator iter, boolean connect)\n   {\n     // A bad implementation of this method had caused Classpath bug #6076.\n     float[] f = new float[6];\n-    while (!iter.isDone())\n-    {\n-      switch (iter.currentSegment(f))\n+    while (! iter.isDone())\n       {\n-      case PathIterator.SEG_MOVETO:\n-        if (!connect || (index == 0))\n-        {\n-          moveTo(f[0], f[1]);\n-          break;\n-        }\n-\n-        if ((index >= 2) && (types[(index - 2) >> 2] == PathIterator.SEG_CLOSE)\n-            && (f[0] == points[index - 2]) && (f[1] == points[index - 1]))\n-          break;\n-        \n-        // Fall through.\n-\n-      case PathIterator.SEG_LINETO:\n-        lineTo(f[0], f[1]);\n-        break;\n-\n-      case PathIterator.SEG_QUADTO:\n-        quadTo(f[0], f[1], f[2], f[3]);\n-        break;\n-\n-      case PathIterator.SEG_CUBICTO:\n-        curveTo(f[0], f[1], f[2], f[3], f[4], f[5]);\n-        break;\n-\n-      case PathIterator.SEG_CLOSE:\n-        closePath();\n-        break;\n+\tswitch (iter.currentSegment(f))\n+\t  {\n+\t  case PathIterator.SEG_MOVETO:\n+\t    if (! connect || (index == 0))\n+\t      {\n+\t\tmoveTo(f[0], f[1]);\n+\t\tbreak;\n+\t      }\n+\t    if ((index >= 1) && (types[index - 1] == PathIterator.SEG_CLOSE)\n+\t        && (f[0] == xpoints[index - 1])\n+\t        && (f[1] == ypoints[index - 1]))\n+\t      break;\n+\n+\t  // Fall through.\n+\t  case PathIterator.SEG_LINETO:\n+\t    lineTo(f[0], f[1]);\n+\t    break;\n+\t  case PathIterator.SEG_QUADTO:\n+\t    quadTo(f[0], f[1], f[2], f[3]);\n+\t    break;\n+\t  case PathIterator.SEG_CUBICTO:\n+\t    curveTo(f[0], f[1], f[2], f[3], f[4], f[5]);\n+\t    break;\n+\t  case PathIterator.SEG_CLOSE:\n+\t    closePath();\n+\t    break;\n+\t  }\n+\n+\tconnect = false;\n+\titer.next();\n       }\n-\n-      connect = false;\n-      iter.next();\n-    }\n   }\n \n-\n+  /**\n+   * Returns the path&#x2019;s current winding rule.\n+   */\n   public int getWindingRule()\n   {\n     return rule;\n   }\n+\n+  /**\n+   * Sets the path&#x2019;s winding rule, which controls which areas are \n+   * considered &#x2019;inside&#x2019; or &#x2019;outside&#x2019; the path \n+   * on drawing. Valid rules are WIND_EVEN_ODD for an even-odd winding rule, \n+   * or WIND_NON_ZERO for a non-zero winding rule.\n+   */\n   public void setWindingRule(int rule)\n   {\n     if (rule != WIND_EVEN_ODD && rule != WIND_NON_ZERO)\n       throw new IllegalArgumentException();\n     this.rule = rule;\n   }\n \n+  /**\n+   * Returns the current appending point of the path.\n+   */\n   public Point2D getCurrentPoint()\n   {\n     if (subpath < 0)\n       return null;\n-    return new Point2D.Float(points[index - 2], points[index - 1]);\n+    return new Point2D.Float(xpoints[index - 1], ypoints[index - 1]);\n   }\n+\n+  /**\n+   * Resets the path. All points and segments are destroyed.\n+   */\n   public void reset()\n   {\n     subpath = -1;\n     index = 0;\n   }\n \n+  /**\n+   * Applies a transform to the path.\n+   */\n   public void transform(AffineTransform xform)\n   {\n-    xform.transform(points, 0, points, 0, index >> 1);\n+    double nx;\n+    double ny;\n+    double[] m = new double[6];\n+    xform.getMatrix(m);\n+    for (int i = 0; i < index; i++)\n+      {\n+\tnx = m[0] * xpoints[i] + m[2] * ypoints[i] + m[4];\n+\tny = m[1] * xpoints[i] + m[3] * ypoints[i] + m[5];\n+\txpoints[i] = (float) nx;\n+\typoints[i] = (float) ny;\n+      }\n   }\n+\n+  /**\n+   * Creates a transformed version of the path.\n+   * @param xform the transform to apply\n+   * @return a new transformed GeneralPath\n+   */\n   public Shape createTransformedShape(AffineTransform xform)\n   {\n     GeneralPath p = new GeneralPath(this);\n     p.transform(xform);\n     return p;\n   }\n \n+  /**\n+   * Returns the path&#x2019;s bounding box.\n+   */\n   public Rectangle getBounds()\n   {\n     return getBounds2D().getBounds();\n   }\n+\n+  /**\n+   * Returns the path&#x2019;s bounding box, in <code>float</code> precision\n+   */\n   public Rectangle2D getBounds2D()\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n+    float x1;\n+    float y1;\n+    float x2;\n+    float y2;\n+\n+    if (index > 0)\n+      {\n+\tx1 = x2 = xpoints[0];\n+\ty1 = y2 = ypoints[0];\n+      }\n+    else\n+      x1 = x2 = y1 = y2 = 0.0f;\n+\n+    for (int i = 0; i < index; i++)\n+      {\n+\tx1 = Math.min(xpoints[i], x1);\n+\ty1 = Math.min(ypoints[i], y1);\n+\tx2 = Math.max(xpoints[i], x2);\n+\ty2 = Math.max(ypoints[i], y2);\n+      }\n+    return (new Rectangle2D.Float(x1, y1, x2 - x1, y2 - y1));\n   }\n \n+  /**\n+   * Evaluates if a point is within the GeneralPath,\n+   * The NON_ZERO winding rule is used, regardless of the\n+   * set winding rule.\n+   * @param x x coordinate of the point to evaluate\n+   * @param y y coordinate of the point to evaluate\n+   * @return true if the point is within the path, false otherwise\n+   */\n   public boolean contains(double x, double y)\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n+    return (getWindingNumber(x, y) != 0);\n   }\n+\n+  /**\n+   * Evaluates if a Point2D is within the GeneralPath,\n+   * The NON_ZERO winding rule is used, regardless of the\n+   * set winding rule.\n+   * @param p The Point2D to evaluate\n+   * @return true if the point is within the path, false otherwise\n+   */\n   public boolean contains(Point2D p)\n   {\n     return contains(p.getX(), p.getY());\n   }\n+\n+  /**\n+   * Evaluates if a rectangle is completely contained within the path.\n+   * This method will return false in the cases when the box\n+   * intersects an inner segment of the path.\n+   * (i.e.: The method is accurate for the EVEN_ODD winding rule)\n+   */\n   public boolean contains(double x, double y, double w, double h)\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n+    if (! getBounds2D().intersects(x, y, w, h))\n+      return false;\n+\n+    /* Does any edge intersect? */\n+    if (getAxisIntersections(x, y, false, w) != 0 /* top */\n+        || getAxisIntersections(x, y + h, false, w) != 0 /* bottom */\n+        || getAxisIntersections(x + w, y, true, h) != 0 /* right */\n+        || getAxisIntersections(x, y, true, h) != 0) /* left */\n+      return false;\n+\n+    /* No intersections, is any point inside? */\n+    if (getWindingNumber(x, y) != 0)\n+      return true;\n+\n+    return false;\n   }\n+\n+  /**\n+   * Evaluates if a rectangle is completely contained within the path.\n+   * This method will return false in the cases when the box\n+   * intersects an inner segment of the path.\n+   * (i.e.: The method is accurate for the EVEN_ODD winding rule)\n+   * @param r the rectangle\n+   * @return <code>true</code> if the rectangle is completely contained\n+   * within the path, <code>false</code> otherwise\n+   */\n   public boolean contains(Rectangle2D r)\n   {\n     return contains(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n   }\n \n+  /**\n+   * Evaluates if a rectangle intersects the path.\n+   * @param x x coordinate of the rectangle\n+   * @param y y coordinate of the rectangle\n+   * @param w width of the rectangle\n+   * @param h height of the rectangle\n+   * @return <code>true</code> if the rectangle intersects the path,\n+   * <code>false</code> otherwise\n+   */\n   public boolean intersects(double x, double y, double w, double h)\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n+    /* Does any edge intersect? */\n+    if (getAxisIntersections(x, y, false, w) != 0 /* top */\n+        || getAxisIntersections(x, y + h, false, w) != 0 /* bottom */\n+        || getAxisIntersections(x + w, y, true, h) != 0 /* right */\n+        || getAxisIntersections(x, y, true, h) != 0) /* left */\n+      return true;\n+\n+    /* No intersections, is any point inside? */\n+    if (getWindingNumber(x, y) != 0)\n+      return true;\n+\n+    return false;\n   }\n+\n+  /**\n+   * Evaluates if a Rectangle2D intersects the path.\n+   * @param r The rectangle\n+   * @return <code>true</code> if the rectangle intersects the path,\n+   * <code>false</code> otherwise\n+   */\n   public boolean intersects(Rectangle2D r)\n   {\n     return intersects(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n   }\n \n-\n   /**\n    * A PathIterator that iterates over the segments of a GeneralPath.\n    *\n    * @author Sascha Brawer (brawer@dandelis.ch)\n    */\n-  private static class GeneralPathIterator\n-    implements PathIterator\n+  private static class GeneralPathIterator implements PathIterator\n   {\n     /**\n      * The number of coordinate values for each segment type.\n      */\n-    private static final int[] NUM_COORDS =\n-    {\n-      /* 0: SEG_MOVETO */ 2,\n-      /* 1: SEG_LINETO */ 2,\n-      /* 2: SEG_QUADTO */ 4,\n-      /* 3: SEG_CUBICTO */ 6,\n-      /* 4: SEG_CLOSE */ 0\n-    };\n-\n+    private static final int[] NUM_COORDS = { \n+                                            /* 0: SEG_MOVETO */ 1, \n+                                            /* 1: SEG_LINETO */ 1, \n+                                            /* 2: SEG_QUADTO */ 2, \n+                                            /* 3: SEG_CUBICTO */ 3, \n+                                            /* 4: SEG_CLOSE */ 0};\n \n     /**\n      * The GeneralPath whose segments are being iterated.\n      */\n     private final GeneralPath path;\n \n-\n     /**\n      * The affine transformation used to transform coordinates.\n      */\n     private final AffineTransform transform;\n \n-\n     /**\n      * The current position of the iterator.\n      */\n     private int pos;\n \n-\n     /**\n      * Constructs a new iterator for enumerating the segments of a\n      * GeneralPath.\n@@ -338,7 +560,6 @@ public boolean intersects(Rectangle2D r)\n       this.transform = transform;\n     }\n \n-\n     /**\n      * Returns the current winding rule of the GeneralPath.\n      */\n@@ -347,7 +568,6 @@ public int getWindingRule()\n       return path.rule;\n     }\n \n-\n     /**\n      * Determines whether the iterator has reached the last segment in\n      * the path.\n@@ -357,78 +577,79 @@ public boolean isDone()\n       return pos >= path.index;\n     }\n \n-\n     /**\n      * Advances the iterator position by one segment.\n      */\n     public void next()\n     {\n       int seg;\n \n-      /* Increment pos by the number of coordinate values. Note that\n-       * we store two values even for a SEG_CLOSE segment, which is\n-       * why we increment pos at least by 2. \n+      /*\n+       * Increment pos by the number of coordinate pairs.\n        */\n-      seg = path.types[pos >> 1];\n+      seg = path.types[pos];\n       if (seg == SEG_CLOSE)\n-        pos += 2;\n+\tpos++;\n       else\n-        pos += NUM_COORDS[seg];\n+\tpos += NUM_COORDS[seg];\n     }\n \n-\n     /**\n      * Returns the current segment in float coordinates.\n      */\n     public int currentSegment(float[] coords)\n     {\n-      int seg, numCoords;\n+      int seg;\n+      int numCoords;\n \n-      seg = path.types[pos >> 1];\n+      seg = path.types[pos];\n       numCoords = NUM_COORDS[seg];\n       if (numCoords > 0)\n-      {\n-        if (transform == null)\n-          System.arraycopy(path.points, pos, coords, 0, numCoords);\n-        else\n-          transform.transform(/* src */ path.points, /* srcOffset */ pos,\n-                              /* dest */ coords, /* destOffset */ 0,\n-                              /* numPoints */ numCoords >> 1);\n-      }\n+        {\n+\t  for (int i = 0; i < numCoords; i++)\n+\t    {\n+\t      coords[i << 1] = path.xpoints[pos + i];\n+\t      coords[(i << 1) + 1] = path.ypoints[pos + i];\n+\t    }\n+\n+\t  if (transform != null)\n+\t    transform.transform( /* src */\n+\t    coords, /* srcOffset */\n+\t    0, /* dest */ coords, /* destOffset */\n+\t    0, /* numPoints */ numCoords);\n+        }\n       return seg;\n     }\n \n-\n     /**\n      * Returns the current segment in double coordinates.\n      */\n     public int currentSegment(double[] coords)\n     {\n-      int seg, numCoords;\n+      int seg;\n+      int numCoords;\n \n-      seg = path.types[pos >> 1];\n+      seg = path.types[pos];\n       numCoords = NUM_COORDS[seg];\n       if (numCoords > 0)\n-      {\n-        if (transform == null)\n         {\n-          // System.arraycopy throws an exception if the source and destination\n-          // array are not of the same primitive type.\n-          for (int i = 0; i < numCoords; i++)\n-            coords[i] = (double) path.points[pos + i];\n+\t  for (int i = 0; i < numCoords; i++)\n+\t    {\n+\t      coords[i << 1] = (double) path.xpoints[pos + i];\n+\t      coords[(i << 1) + 1] = (double) path.ypoints[pos + i];\n+\t    }\n+\t  if (transform != null)\n+\t    transform.transform( /* src */\n+\t    coords, /* srcOffset */\n+\t    pos, /* dest */ coords, /* destOffset */\n+\t    0, /* numPoints */ numCoords);\n         }\n-        else\n-          transform.transform(/* src */ path.points, /* srcOffset */ pos,\n-                              /* dest */ coords, /* destOffset */ 0,\n-                              /* numPoints */ numCoords >> 1);\n-      }\n       return seg;\n     }\n   }\n \n-\n   /**\n-   * Creates a PathIterator for iterating along the segments of this path.\n+   * Creates a PathIterator for iterating along the segments of the path.\n    *\n    * @param at an affine transformation for projecting the returned\n    * points, or <code>null</code> to let the created iterator return\n@@ -439,15 +660,17 @@ public PathIterator getPathIterator(AffineTransform at)\n     return new GeneralPathIterator(this, at);\n   }\n \n-\n+  /**\n+   * Creates a new FlatteningPathIterator for the path\n+   */\n   public PathIterator getPathIterator(AffineTransform at, double flatness)\n   {\n     return new FlatteningPathIterator(getPathIterator(at), flatness);\n   }\n \n   /**\n-   * Create a new shape of the same run-time type with the same contents as\n-   * this one.\n+   * Creates a new shape of the same run-time type with the same contents \n+   * as this one.\n    *\n    * @return the clone\n    *\n@@ -461,17 +684,261 @@ public Object clone()\n     return new GeneralPath(this);\n   }\n \n+  /**\n+   * Helper method - ensure the size of the data arrays,\n+   * otherwise, reallocate new ones twice the size\n+   */\n   private void ensureSize(int size)\n   {\n     if (subpath < 0)\n       throw new IllegalPathStateException(\"need initial moveto\");\n-    if (size <= points.length)\n+    if (size <= xpoints.length)\n       return;\n-    byte[] b = new byte[points.length];\n-    System.arraycopy(types, 0, b, 0, index >> 1);\n+    byte[] b = new byte[types.length << 1];\n+    System.arraycopy(types, 0, b, 0, index);\n     types = b;\n-    float[] f = new float[points.length << 1];\n-    System.arraycopy(points, 0, f, 0, index);\n-    points = f;\n+    float[] f = new float[xpoints.length << 1];\n+    System.arraycopy(xpoints, 0, f, 0, index);\n+    xpoints = f;\n+    f = new float[ypoints.length << 1];\n+    System.arraycopy(ypoints, 0, f, 0, index);\n+    ypoints = f;\n+  }\n+\n+  /**\n+   * Helper method - Get the total number of intersections from (x,y) along \n+   * a given axis, within a given distance.\n+   */\n+  private int getAxisIntersections(double x, double y, boolean useYaxis,\n+                                   double distance)\n+  {\n+    return (evaluateCrossings(x, y, false, useYaxis, distance));\n+  }\n+\n+  /**\n+   * Helper method - returns the winding number of a point.\n+   */\n+  private int getWindingNumber(double x, double y)\n+  {\n+    /* Evaluate the crossings from x,y to infinity on the y axis (arbitrary \n+       choice). Note that we don't actually use Double.INFINITY, since that's \n+       slower, and may cause problems. */\n+    return (evaluateCrossings(x, y, true, true, BIG_VALUE));\n+  }\n+\n+  /**\n+   * Helper method - evaluates the number of intersections on an axis from \n+   * the point (x,y) to the point (x,y+distance) or (x+distance,y).\n+   * @param x x coordinate.\n+   * @param y y coordinate.\n+   * @param neg True if opposite-directed intersections should cancel, \n+   * false to sum all intersections.\n+   * @param useYaxis Use the Y axis, false uses the X axis.\n+   * @param distance Interval from (x,y) on the selected axis to find \n+   * intersections.\n+   */\n+  private int evaluateCrossings(double x, double y, boolean neg,\n+                                boolean useYaxis, double distance)\n+  {\n+    float cx = 0.0f;\n+    float cy = 0.0f;\n+    float firstx = 0.0f;\n+    float firsty = 0.0f;\n+\n+    int negative = (neg) ? -1 : 1;\n+    double x0;\n+    double x1;\n+    double x2;\n+    double x3;\n+    double y0;\n+    double y1;\n+    double y2;\n+    double y3;\n+    double[] r = new double[4];\n+    int nRoots;\n+    double epsilon = 0.0;\n+    int pos = 0;\n+    int windingNumber = 0;\n+    boolean pathStarted = false;\n+\n+    if (index == 0)\n+      return (0);\n+    if (useYaxis)\n+      {\n+\tfloat[] swap1;\n+\tswap1 = ypoints;\n+\typoints = xpoints;\n+\txpoints = swap1;\n+\tdouble swap2;\n+\tswap2 = y;\n+\ty = x;\n+\tx = swap2;\n+      }\n+\n+    /* Get a value which is hopefully small but not insignificant relative\n+     the path. */\n+    epsilon = ypoints[0] * 1E-9;\n+\n+    pos = 0;\n+    while (pos < index)\n+      {\n+\tswitch (types[pos])\n+\t  {\n+\t  case PathIterator.SEG_MOVETO:\n+\t    if (pathStarted) // close old path\n+\t      {\n+\t\tx0 = cx;\n+\t\ty0 = cy;\n+\t\tx1 = firstx;\n+\t\ty1 = firsty;\n+\n+\t\tif (y0 == 0.0)\n+\t\t  y0 += epsilon;\n+\t\tif (y1 == 0.0)\n+\t\t  y1 += epsilon;\n+\t\tif (Line2D.linesIntersect(x0, y0, x1, y1, 0.0, 0.0, distance,\n+\t\t                          0.0))\n+\t\t  windingNumber += (y1 < y0) ? 1 : negative;\n+\n+\t\tcx = firstx;\n+\t\tcy = firsty;\n+\t      }\n+\t    cx = firstx = xpoints[pos] - (float) x;\n+\t    cy = firsty = ypoints[pos++] - (float) y;\n+\t    pathStarted = true;\n+\t    break;\n+\t  case PathIterator.SEG_CLOSE:\n+\t    x0 = cx;\n+\t    y0 = cy;\n+\t    x1 = firstx;\n+\t    y1 = firsty;\n+\n+\t    if (y0 == 0.0)\n+\t      y0 += epsilon;\n+\t    if (y1 == 0.0)\n+\t      y1 += epsilon;\n+\t    if (Line2D.linesIntersect(x0, y0, x1, y1, 0.0, 0.0, distance, 0.0))\n+\t      windingNumber += (y1 < y0) ? 1 : negative;\n+\n+\t    cx = firstx;\n+\t    cy = firsty;\n+\t    pos++;\n+\t    pathStarted = false;\n+\t    break;\n+\t  case PathIterator.SEG_LINETO:\n+\t    x0 = cx;\n+\t    y0 = cy;\n+\t    x1 = xpoints[pos] - (float) x;\n+\t    y1 = ypoints[pos++] - (float) y;\n+\n+\t    if (y0 == 0.0)\n+\t      y0 += epsilon;\n+\t    if (y1 == 0.0)\n+\t      y1 += epsilon;\n+\t    if (Line2D.linesIntersect(x0, y0, x1, y1, 0.0, 0.0, distance, 0.0))\n+\t      windingNumber += (y1 < y0) ? 1 : negative;\n+\n+\t    cx = xpoints[pos - 1] - (float) x;\n+\t    cy = ypoints[pos - 1] - (float) y;\n+\t    break;\n+\t  case PathIterator.SEG_QUADTO:\n+\t    x0 = cx;\n+\t    y0 = cy;\n+\t    x1 = xpoints[pos] - x;\n+\t    y1 = ypoints[pos++] - y;\n+\t    x2 = xpoints[pos] - x;\n+\t    y2 = ypoints[pos++] - y;\n+\n+\t    /* check if curve may intersect X+ axis. */\n+\t    if ((x0 > 0.0 || x1 > 0.0 || x2 > 0.0)\n+\t        && (y0 * y1 <= 0 || y1 * y2 <= 0))\n+\t      {\n+\t\tif (y0 == 0.0)\n+\t\t  y0 += epsilon;\n+\t\tif (y2 == 0.0)\n+\t\t  y2 += epsilon;\n+\n+\t\tr[0] = y0;\n+\t\tr[1] = 2 * (y1 - y0);\n+\t\tr[2] = (y2 - 2 * y1 + y0);\n+\n+\t\t/* degenerate roots (=tangent points) do not\n+\t\t   contribute to the winding number. */\n+\t\tif ((nRoots = QuadCurve2D.solveQuadratic(r)) == 2)\n+\t\t  for (int i = 0; i < nRoots; i++)\n+\t\t    {\n+\t\t      float t = (float) r[i];\n+\t\t      if (t > 0.0f && t < 1.0f)\n+\t\t        {\n+\t\t\t  double crossing = t * t * (x2 - 2 * x1 + x0)\n+\t\t\t                    + 2 * t * (x1 - x0) + x0;\n+\t\t\t  if (crossing >= 0.0 && crossing <= distance)\n+\t\t\t    windingNumber += (2 * t * (y2 - 2 * y1 + y0)\n+\t\t\t                   + 2 * (y1 - y0) < 0) ? 1 : negative;\n+\t\t        }\n+\t\t    }\n+\t      }\n+\n+\t    cx = xpoints[pos - 1] - (float) x;\n+\t    cy = ypoints[pos - 1] - (float) y;\n+\t    break;\n+\t  case PathIterator.SEG_CUBICTO:\n+\t    x0 = cx;\n+\t    y0 = cy;\n+\t    x1 = xpoints[pos] - x;\n+\t    y1 = ypoints[pos++] - y;\n+\t    x2 = xpoints[pos] - x;\n+\t    y2 = ypoints[pos++] - y;\n+\t    x3 = xpoints[pos] - x;\n+\t    y3 = ypoints[pos++] - y;\n+\n+\t    /* check if curve may intersect X+ axis. */\n+\t    if ((x0 > 0.0 || x1 > 0.0 || x2 > 0.0 || x3 > 0.0)\n+\t        && (y0 * y1 <= 0 || y1 * y2 <= 0 || y2 * y3 <= 0))\n+\t      {\n+\t\tif (y0 == 0.0)\n+\t\t  y0 += epsilon;\n+\t\tif (y3 == 0.0)\n+\t\t  y3 += epsilon;\n+\n+\t\tr[0] = y0;\n+\t\tr[1] = 3 * (y1 - y0);\n+\t\tr[2] = 3 * (y2 + y0 - 2 * y1);\n+\t\tr[3] = y3 - 3 * y2 + 3 * y1 - y0;\n+\n+\t\tif ((nRoots = CubicCurve2D.solveCubic(r)) != 0)\n+\t\t  for (int i = 0; i < nRoots; i++)\n+\t\t    {\n+\t\t      float t = (float) r[i];\n+\t\t      if (t > 0.0 && t < 1.0)\n+\t\t        {\n+\t\t\t  double crossing = -(t * t * t) * (x0 - 3 * x1\n+\t\t\t                    + 3 * x2 - x3)\n+\t\t\t                    + 3 * t * t * (x0 - 2 * x1 + x2)\n+\t\t\t                    + 3 * t * (x1 - x0) + x0;\n+\t\t\t  if (crossing >= 0 && crossing <= distance)\n+\t\t\t    windingNumber += (3 * t * t * (y3 + 3 * y1\n+\t\t\t                     - 3 * y2 - y0)\n+\t\t\t                     + 6 * t * (y0 - 2 * y1 + y2)\n+\t\t\t                   + 3 * (y1 - y0) < 0) ? 1 : negative;\n+\t\t        }\n+\t\t    }\n+\t      }\n+\n+\t    cx = xpoints[pos - 1] - (float) x;\n+\t    cy = ypoints[pos - 1] - (float) y;\n+\t    break;\n+\t  }\n+      }\n+\n+    // swap coordinates back\n+    if (useYaxis)\n+      {\n+\tfloat[] swap;\n+\tswap = ypoints;\n+\typoints = xpoints;\n+\txpoints = swap;\n+      }\n+    return (windingNumber);\n   }\n } // class GeneralPath"}, {"sha": "0cc9eb46edc852bdda68f99b5495d78490dfae7e", "filename": "libjava/java/awt/geom/QuadCurve2D.java", "status": "modified", "additions": 325, "deletions": 253, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,5 +1,5 @@\n /* QuadCurve2D.java -- represents a parameterized quadratic curve in 2-D space\n-   Copyright (C) 2002, 2003 Free Software Foundation\n+   Copyright (C) 2002, 2003, 2004 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -35,7 +35,6 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package java.awt.geom;\n \n import java.awt.Rectangle;\n@@ -53,12 +52,14 @@\n  * @author Eric Blake (ebb9@email.byu.edu)\n  * @author Graydon Hoare (graydon@redhat.com)\n  * @author Sascha Brawer (brawer@dandelis.ch)\n+ * @author Sven de Marothy (sven@physto.se)\n  *\n  * @since 1.2\n  */\n-public abstract class QuadCurve2D\n-  implements Shape, Cloneable\n+public abstract class QuadCurve2D implements Shape, Cloneable\n {\n+  private static final double BIG_VALUE = java.lang.Double.MAX_VALUE / 10.0;\n+\n   /**\n    * Constructs a new QuadCurve2D. Typical users will want to\n    * construct instances of a subclass, such as {@link\n@@ -68,67 +69,57 @@ protected QuadCurve2D()\n   {\n   }\n \n-\n   /**\n    * Returns the <i>x</i> coordinate of the curve&#x2019;s start\n    * point.\n    */\n   public abstract double getX1();\n \n-\n   /**\n    * Returns the <i>y</i> coordinate of the curve&#x2019;s start\n    * point.\n    */\n   public abstract double getY1();\n \n-\n   /**\n    * Returns the curve&#x2019;s start point.\n    */\n   public abstract Point2D getP1();\n \n-\n   /**\n    * Returns the <i>x</i> coordinate of the curve&#x2019;s control\n    * point.\n    */\n   public abstract double getCtrlX();\n \n-\n   /**\n    * Returns the <i>y</i> coordinate of the curve&#x2019;s control\n    * point.\n    */\n   public abstract double getCtrlY();\n \n-\n   /**\n    * Returns the curve&#x2019;s control point.\n    */\n   public abstract Point2D getCtrlPt();\n \n-\n   /**\n    * Returns the <i>x</i> coordinate of the curve&#x2019;s end\n    * point.\n    */\n   public abstract double getX2();\n \n-\n   /**\n    * Returns the <i>y</i> coordinate of the curve&#x2019;s end\n    * point.\n    */\n   public abstract double getY2();\n \n-\n   /**\n    * Returns the curve&#x2019;s end point.\n    */\n   public abstract Point2D getP2();\n \n-\n   /**\n    * Changes the curve geometry, separately specifying each coordinate\n    * value.\n@@ -154,7 +145,6 @@ protected QuadCurve2D()\n   public abstract void setCurve(double x1, double y1, double cx, double cy,\n                                 double x2, double y2);\n \n-\n   /**\n    * Changes the curve geometry, passing coordinate values in an\n    * array.\n@@ -174,12 +164,10 @@ public abstract void setCurve(double x1, double y1, double cx, double cy,\n    */\n   public void setCurve(double[] coords, int offset)\n   {\n-    setCurve(coords[offset++], coords[offset++],\n-             coords[offset++], coords[offset++],\n-             coords[offset++], coords[offset++]);\n+    setCurve(coords[offset++], coords[offset++], coords[offset++],\n+             coords[offset++], coords[offset++], coords[offset++]);\n   }\n \n-\n   /**\n    * Changes the curve geometry, specifying coordinate values in\n    * separate Point objects.\n@@ -198,11 +186,9 @@ public void setCurve(double[] coords, int offset)\n    */\n   public void setCurve(Point2D p1, Point2D c, Point2D p2)\n   {\n-    setCurve(p1.getX(), p1.getY(), c.getX(), c.getY(),\n-             p2.getX(), p2.getY());\n+    setCurve(p1.getX(), p1.getY(), c.getX(), c.getY(), p2.getX(), p2.getY());\n   }\n \n-\n   /**\n    * Changes the curve geometry, specifying coordinate values in an\n    * array of Point objects.\n@@ -223,24 +209,22 @@ public void setCurve(Point2D p1, Point2D c, Point2D p2)\n    */\n   public void setCurve(Point2D[] pts, int offset)\n   {\n-    setCurve(pts[offset].getX(), pts[offset].getY(),\n-             pts[offset + 1].getX(), pts[offset + 1].getY(),\n-             pts[offset + 2].getX(), pts[offset + 2].getY());\n+    setCurve(pts[offset].getX(), pts[offset].getY(), pts[offset + 1].getX(),\n+             pts[offset + 1].getY(), pts[offset + 2].getX(),\n+             pts[offset + 2].getY());\n   }\n \n-\n   /**\n    * Changes the geometry of the curve to that of another curve.\n    *\n    * @param c the curve whose coordinates will be copied.\n    */\n   public void setCurve(QuadCurve2D c)\n   {\n-    setCurve(c.getX1(), c.getY1(), c.getCtrlX(), c.getCtrlY(),\n-             c.getX2(), c.getY2());\n+    setCurve(c.getX1(), c.getY1(), c.getCtrlX(), c.getCtrlY(), c.getX2(),\n+             c.getY2());\n   }\n \n-\n   /**\n    * Calculates the squared flatness of a quadratic curve, directly\n    * specifying each coordinate value. The flatness is the distance of\n@@ -267,7 +251,6 @@ public static double getFlatnessSq(double x1, double y1, double cx,\n     return Line2D.ptSegDistSq(x1, y1, x2, y2, cx, cy);\n   }\n \n-\n   /**\n    * Calculates the flatness of a quadratic curve, directly specifying\n    * each coordinate value. The flatness is the distance of the\n@@ -294,7 +277,6 @@ public static double getFlatness(double x1, double y1, double cx, double cy,\n     return Line2D.ptSegDist(x1, y1, x2, y2, cx, cy);\n   }\n \n-\n   /**\n    * Calculates the squared flatness of a quadratic curve, specifying\n    * the coordinate values in an array. The flatness is the distance\n@@ -328,7 +310,6 @@ public static double getFlatnessSq(double[] coords, int offset)\n                               coords[offset + 2], coords[offset + 3]);\n   }\n \n-\n   /**\n    * Calculates the flatness of a quadratic curve, specifying the\n    * coordinate values in an array. The flatness is the distance of\n@@ -362,7 +343,6 @@ public static double getFlatness(double[] coords, int offset)\n                             coords[offset + 2], coords[offset + 3]);\n   }\n \n-\n   /**\n    * Calculates the squared flatness of this curve. The flatness is\n    * the distance of the control point to the line between start and\n@@ -378,12 +358,10 @@ public static double getFlatness(double[] coords, int offset)\n    */\n   public double getFlatnessSq()\n   {\n-    return Line2D.ptSegDistSq(getX1(), getY1(),\n-                              getX2(), getY2(),\n-                              getCtrlX(), getCtrlY());\n+    return Line2D.ptSegDistSq(getX1(), getY1(), getX2(), getY2(), getCtrlX(),\n+                              getCtrlY());\n   }\n \n-\n   /**\n    * Calculates the flatness of this curve. The flatness is the\n    * distance of the control point to the line between start and end\n@@ -399,12 +377,10 @@ public double getFlatnessSq()\n    */\n   public double getFlatness()\n   {\n-    return Line2D.ptSegDist(getX1(), getY1(),\n-                            getX2(), getY2(),\n-                            getCtrlX(), getCtrlY());\n+    return Line2D.ptSegDist(getX1(), getY1(), getX2(), getY2(), getCtrlX(),\n+                            getCtrlY());\n   }\n \n-\n   /**\n    * Subdivides this curve into two halves.\n    *\n@@ -423,16 +399,18 @@ public double getFlatness()\n   public void subdivide(QuadCurve2D left, QuadCurve2D right)\n   {\n     // Use empty slots at end to share single array.\n-    double[] d = new double[] { getX1(), getY1(), getCtrlX(), getCtrlY(),\n-                                getX2(), getY2(), 0, 0, 0, 0 };\n+    double[] d = new double[]\n+                 {\n+                   getX1(), getY1(), getCtrlX(), getCtrlY(), getX2(), getY2(),\n+                   0, 0, 0, 0\n+                 };\n     subdivide(d, 0, d, 0, d, 4);\n     if (left != null)\n       left.setCurve(d, 0);\n     if (right != null)\n       right.setCurve(d, 4);\n   }\n \n-\n   /**\n    * Subdivides a quadratic curve into two halves.\n    *\n@@ -456,7 +434,6 @@ public static void subdivide(QuadCurve2D src, QuadCurve2D left,\n     src.subdivide(left, right);\n   }\n \n-\n   /**\n    * Subdivides a quadratic curve into two halves, passing all\n    * coordinates in an array.\n@@ -500,11 +477,15 @@ public static void subdivide(QuadCurve2D src, QuadCurve2D left,\n    * index where the start point&#x2019;s <i>x</i> coordinate will be\n    * stored.\n    */\n-  public static void subdivide(double[] src, int srcOff,\n-                               double[] left, int leftOff,\n-                               double[] right, int rightOff)\n+  public static void subdivide(double[] src, int srcOff, double[] left,\n+                               int leftOff, double[] right, int rightOff)\n   {\n-    double x1, y1, xc, yc, x2, y2;\n+    double x1;\n+    double y1;\n+    double xc;\n+    double yc;\n+    double x2;\n+    double y2;\n \n     x1 = src[srcOff];\n     y1 = src[srcOff + 1];\n@@ -514,16 +495,16 @@ public static void subdivide(double[] src, int srcOff,\n     y2 = src[srcOff + 5];\n \n     if (left != null)\n-    {\n-      left[leftOff] = x1;\n-      left[leftOff + 1] = y1;\n-    }\n+      {\n+\tleft[leftOff] = x1;\n+\tleft[leftOff + 1] = y1;\n+      }\n \n     if (right != null)\n-    {\n-      right[rightOff + 4] = x2;\n-      right[rightOff + 5] = y2;\n-    }\n+      {\n+\tright[rightOff + 4] = x2;\n+\tright[rightOff + 5] = y2;\n+      }\n \n     x1 = (x1 + xc) / 2;\n     x2 = (xc + x2) / 2;\n@@ -533,23 +514,22 @@ public static void subdivide(double[] src, int srcOff,\n     yc = (y1 + y2) / 2;\n \n     if (left != null)\n-    {\n-      left[leftOff + 2] = x1;\n-      left[leftOff + 3] = y1;\n-      left[leftOff + 4] = xc;\n-      left[leftOff + 5] = yc;\n-    }\n+      {\n+\tleft[leftOff + 2] = x1;\n+\tleft[leftOff + 3] = y1;\n+\tleft[leftOff + 4] = xc;\n+\tleft[leftOff + 5] = yc;\n+      }\n \n     if (right != null)\n-    {\n-      right[rightOff] = xc;\n-      right[rightOff + 1] = yc;\n-      right[rightOff + 2] = x2;\n-      right[rightOff + 3] = y2;\n-    }\n+      {\n+\tright[rightOff] = xc;\n+\tright[rightOff + 1] = yc;\n+\tright[rightOff + 2] = x2;\n+\tright[rightOff + 3] = y2;\n+      }\n   }\n \n-\n   /**\n    * Finds the non-complex roots of a quadratic equation, placing the\n    * results into the same array as the equation coefficients. The\n@@ -594,7 +574,6 @@ public static int solveQuadratic(double[] eqn)\n     return solveQuadratic(eqn, eqn);\n   }\n \n-\n   /**\n    * Finds the non-complex roots of a quadratic equation. The\n    * following equation is being solved:\n@@ -649,8 +628,10 @@ public static int solveQuadratic(double[] eqn, double[] res)\n     // The Java implementation is very similar to the GSL code, but\n     // not a strict one-to-one copy. For example, GSL would sort the\n     // result.\n-\n-    double a, b, c, disc;\n+    double a;\n+    double b;\n+    double c;\n+    double disc;\n \n     c = eqn[0];\n     b = eqn[1];\n@@ -661,110 +642,163 @@ public static int solveQuadratic(double[] eqn, double[] res)\n     // wouldn't return -1 for constant functions, and 2 instead of 1\n     // for linear functions.\n     if (a == 0)\n-    {\n-      if (b == 0)\n-        return -1;\n-      \n-      res[0] = -c / b;\n-      return 1;\n-    }\n+      {\n+\tif (b == 0)\n+\t  return -1;\n+\n+\tres[0] = -c / b;\n+\treturn 1;\n+      }\n \n     disc = b * b - 4 * a * c;\n \n     if (disc < 0)\n       return 0;\n \n     if (disc == 0)\n-    {\n-      // The GNU Scientific Library returns two identical results here.\n-      // We just return one.\n-      res[0] = -0.5 * b / a ;\n-      return 1;\n-    }\n+      {\n+\t// The GNU Scientific Library returns two identical results here.\n+\t// We just return one.\n+\tres[0] = -0.5 * b / a;\n+\treturn 1;\n+      }\n \n     // disc > 0\n     if (b == 0)\n-    {\n-      double r;\n+      {\n+\tdouble r;\n \n-      r = Math.abs(0.5 * Math.sqrt(disc) / a);\n-      res[0] = -r;\n-      res[1] = r;\n-    }\n+\tr = Math.abs(0.5 * Math.sqrt(disc) / a);\n+\tres[0] = -r;\n+\tres[1] = r;\n+      }\n     else\n-    {\n-      double sgnb, temp;\n-      \n-      sgnb = (b > 0 ? 1 : -1);\n-      temp = -0.5 * (b + sgnb * Math.sqrt(disc));\n-\n-      // The GNU Scientific Library sorts the result here. We don't.\n-      res[0] = temp / a;\n-      res[1] = c / temp;\n-    }\n+      {\n+\tdouble sgnb;\n+\tdouble temp;\n+\n+\tsgnb = (b > 0 ? 1 : -1);\n+\ttemp = -0.5 * (b + sgnb * Math.sqrt(disc));\n+\n+\t// The GNU Scientific Library sorts the result here. We don't.\n+\tres[0] = temp / a;\n+\tres[1] = c / temp;\n+      }\n     return 2;\n   }\n \n-\n   /**\n-   * Determines whether a point lies inside the area that is bounded\n+   * Determines whether a point is inside the area bounded\n    * by the curve and the straight line connecting its end points.\n    *\n    * <p><img src=\"doc-files/QuadCurve2D-5.png\" width=\"350\" height=\"180\"\n    * alt=\"A drawing of the area spanned by the curve\" />\n    *\n    * <p>The above drawing illustrates in which area points are\n-   * considered &#x201c;contained&#x201d; in a QuadCurve2D.\n+   * considered &#x201c;inside&#x201d; a QuadCurve2D.\n    */\n   public boolean contains(double x, double y)\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n-  }\n+    if (! getBounds2D().contains(x, y))\n+      return false;\n \n+    return ((getAxisIntersections(x, y, true, BIG_VALUE) & 1) != 0);\n+  }\n \n   /**\n-   * Determines whether a point lies inside the area that is bounded\n+   * Determines whether a point is inside the area bounded\n    * by the curve and the straight line connecting its end points.\n    *\n    * <p><img src=\"doc-files/QuadCurve2D-5.png\" width=\"350\" height=\"180\"\n    * alt=\"A drawing of the area spanned by the curve\" />\n    *\n    * <p>The above drawing illustrates in which area points are\n-   * considered &#x201c;contained&#x201d; in a QuadCurve2D.\n+   * considered &#x201c;inside&#x201d; a QuadCurve2D.\n    */\n   public boolean contains(Point2D p)\n   {\n     return contains(p.getX(), p.getY());\n   }\n \n-\n+  /**\n+   * Determines whether any part of a rectangle is inside the area bounded\n+   * by the curve and the straight line connecting its end points.\n+   *\n+   * <p><img src=\"doc-files/QuadCurve2D-5.png\" width=\"350\" height=\"180\"\n+   * alt=\"A drawing of the area spanned by the curve\" />\n+   *\n+   * <p>The above drawing illustrates in which area points are\n+   * considered &#x201c;inside&#x201d; in a CubicCurve2D.\n+   */\n   public boolean intersects(double x, double y, double w, double h)\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n-  }\n+    if (! getBounds2D().contains(x, y, w, h))\n+      return false;\n+\n+    /* Does any edge intersect? */\n+    if (getAxisIntersections(x, y, true, w) != 0 /* top */\n+        || getAxisIntersections(x, y + h, true, w) != 0 /* bottom */\n+        || getAxisIntersections(x + w, y, false, h) != 0 /* right */\n+        || getAxisIntersections(x, y, false, h) != 0) /* left */\n+      return true;\n+\n+    /* No intersections, is any point inside? */\n+    if ((getAxisIntersections(x, y, true, BIG_VALUE) & 1) != 0)\n+      return true;\n \n+    return false;\n+  }\n \n+  /**\n+   * Determines whether any part of a Rectangle2D is inside the area bounded \n+   * by the curve and the straight line connecting its end points.\n+   * @see #intersects(double, double, double, double)\n+   */\n   public boolean intersects(Rectangle2D r)\n   {\n     return intersects(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n   }\n \n-\n+  /**\n+   * Determines whether a rectangle is entirely inside the area bounded\n+   * by the curve and the straight line connecting its end points.\n+   *\n+   * <p><img src=\"doc-files/QuadCurve2D-5.png\" width=\"350\" height=\"180\"\n+   * alt=\"A drawing of the area spanned by the curve\" />\n+   *\n+   * <p>The above drawing illustrates in which area points are\n+   * considered &#x201c;inside&#x201d; a QuadCurve2D.\n+   * @see #contains(double, double)\n+   */\n   public boolean contains(double x, double y, double w, double h)\n   {\n-    // XXX Implement.\n-    throw new Error(\"not implemented\");\n-  }\n+    if (! getBounds2D().intersects(x, y, w, h))\n+      return false;\n+\n+    /* Does any edge intersect? */\n+    if (getAxisIntersections(x, y, true, w) != 0 /* top */\n+        || getAxisIntersections(x, y + h, true, w) != 0 /* bottom */\n+        || getAxisIntersections(x + w, y, false, h) != 0 /* right */\n+        || getAxisIntersections(x, y, false, h) != 0) /* left */\n+      return false;\n \n+    /* No intersections, is any point inside? */\n+    if ((getAxisIntersections(x, y, true, BIG_VALUE) & 1) != 0)\n+      return true;\n \n+    return false;\n+  }\n+\n+  /**\n+   * Determines whether a Rectangle2D is entirely inside the area that is \n+   * bounded by the curve and the straight line connecting its end points.\n+   * @see #contains(double, double, double, double)\n+   */\n   public boolean contains(Rectangle2D r)\n   {\n     return contains(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n   }\n \n-\n   /**\n    * Determines the smallest rectangle that encloses the\n    * curve&#x2019;s start, end and control point. As the illustration\n@@ -780,97 +814,85 @@ public Rectangle getBounds()\n     return getBounds2D().getBounds();\n   }\n \n-\n   public PathIterator getPathIterator(final AffineTransform at)\n   {\n     return new PathIterator()\n-    {\n-      /** Current coordinate. */\n-      private int current = 0;\n-\n-\n-      public int getWindingRule()\n-      {\n-        return WIND_NON_ZERO;\n-      }\n-\n-\n-      public boolean isDone()\n-      {\n-        return current >= 2;\n-      }\n-\n-\n-      public void next()\n-      {\n-        current++;\n-      }\n-\n-\n-      public int currentSegment(float[] coords)\n       {\n-        int result;\n-        switch (current)\n-        {\n-        case 0:\n-          coords[0] = (float) getX1();\n-          coords[1] = (float) getY1();\n-          result = SEG_MOVETO;\n-          break;\n-\n-        case 1:\n-          coords[0] = (float) getCtrlX();\n-          coords[1] = (float) getCtrlY();\n-          coords[2] = (float) getX2();\n-          coords[3] = (float) getY2();\n-          result = SEG_QUADTO;\n-          break;\n-\n-        default:\n-          throw new NoSuchElementException(\"quad iterator out of bounds\");\n-        }\n-        if (at != null)\n-          at.transform(coords, 0, coords, 0, 2);\n-        return result;\n-      }\n-\n-\n-      public int currentSegment(double[] coords)\n-      {\n-        int result;\n-        switch (current)\n-        {\n-        case 0:\n-          coords[0] = getX1();\n-          coords[1] = getY1();\n-          result = SEG_MOVETO;\n-          break;\n-\n-        case 1:\n-          coords[0] = getCtrlX();\n-          coords[1] = getCtrlY();\n-          coords[2] = getX2();\n-          coords[3] = getY2();\n-          result = SEG_QUADTO;\n-          break;\n-\n-        default:\n-          throw new NoSuchElementException(\"quad iterator out of bounds\");\n-        }\n-        if (at != null)\n-          at.transform(coords, 0, coords, 0, 2);\n-        return result;\n-      }\n-    };\n+\t/** Current coordinate. */\n+\tprivate int current = 0;\n+\n+\tpublic int getWindingRule()\n+\t{\n+\t  return WIND_NON_ZERO;\n+\t}\n+\n+\tpublic boolean isDone()\n+\t{\n+\t  return current >= 2;\n+\t}\n+\n+\tpublic void next()\n+\t{\n+\t  current++;\n+\t}\n+\n+\tpublic int currentSegment(float[] coords)\n+\t{\n+\t  int result;\n+\t  switch (current)\n+\t    {\n+\t    case 0:\n+\t      coords[0] = (float) getX1();\n+\t      coords[1] = (float) getY1();\n+\t      result = SEG_MOVETO;\n+\t      break;\n+\t    case 1:\n+\t      coords[0] = (float) getCtrlX();\n+\t      coords[1] = (float) getCtrlY();\n+\t      coords[2] = (float) getX2();\n+\t      coords[3] = (float) getY2();\n+\t      result = SEG_QUADTO;\n+\t      break;\n+\t    default:\n+\t      throw new NoSuchElementException(\"quad iterator out of bounds\");\n+\t    }\n+\t  if (at != null)\n+\t    at.transform(coords, 0, coords, 0, 2);\n+\t  return result;\n+\t}\n+\n+\tpublic int currentSegment(double[] coords)\n+\t{\n+\t  int result;\n+\t  switch (current)\n+\t    {\n+\t    case 0:\n+\t      coords[0] = getX1();\n+\t      coords[1] = getY1();\n+\t      result = SEG_MOVETO;\n+\t      break;\n+\t    case 1:\n+\t      coords[0] = getCtrlX();\n+\t      coords[1] = getCtrlY();\n+\t      coords[2] = getX2();\n+\t      coords[3] = getY2();\n+\t      result = SEG_QUADTO;\n+\t      break;\n+\t    default:\n+\t      throw new NoSuchElementException(\"quad iterator out of bounds\");\n+\t    }\n+\t  if (at != null)\n+\t    at.transform(coords, 0, coords, 0, 2);\n+\t  return result;\n+\t}\n+      };\n   }\n \n-\n   public PathIterator getPathIterator(AffineTransform at, double flatness)\n   {\n     return new FlatteningPathIterator(getPathIterator(at), flatness);\n   }\n \n-\n   /**\n    * Creates a new curve with the same contents as this one.\n    *\n@@ -879,15 +901,106 @@ public PathIterator getPathIterator(AffineTransform at, double flatness)\n   public Object clone()\n   {\n     try\n-    {\n-      return super.clone();\n-    }\n+      {\n+\treturn super.clone();\n+      }\n     catch (CloneNotSupportedException e)\n-    {\n-      throw (Error) new InternalError().initCause(e); // Impossible\n-    }\n+      {\n+\tthrow (Error) new InternalError().initCause(e); // Impossible\n+      }\n   }\n \n+  /**\n+   * Helper method used by contains() and intersects() methods\n+   * Return the number of curve/line intersections on a given axis\n+   * extending from a certain point. useYaxis is true for using the Y axis,\n+   * @param x x coordinate of the origin point\n+   * @param y y coordinate of the origin point\n+   * @param useYaxis axis to follow, if true the positive Y axis is used,\n+   * false uses the positive X axis.\n+   *\n+   * This is an implementation of the line-crossings algorithm,\n+   * Detailed in an article on Eric Haines' page:\n+   * http://www.acm.org/tog/editors/erich/ptinpoly/\n+   */\n+  private int getAxisIntersections(double x, double y, boolean useYaxis,\n+                                   double distance)\n+  {\n+    int nCrossings = 0;\n+    double a0;\n+    double a1;\n+    double a2;\n+    double b0;\n+    double b1;\n+    double b2;\n+    double[] r = new double[3];\n+    int nRoots;\n+\n+    a0 = a2 = 0.0;\n+\n+    if (useYaxis)\n+      {\n+\ta0 = getY1() - y;\n+\ta1 = getCtrlY() - y;\n+\ta2 = getY2() - y;\n+\tb0 = getX1() - x;\n+\tb1 = getCtrlX() - x;\n+\tb2 = getX2() - x;\n+      }\n+    else\n+      {\n+\ta0 = getX1() - x;\n+\ta1 = getCtrlX() - x;\n+\ta2 = getX2() - x;\n+\tb0 = getY1() - y;\n+\tb1 = getCtrlY() - y;\n+\tb2 = getY2() - y;\n+      }\n+\n+    /* If the axis intersects a start/endpoint, shift it up by some small \n+       amount to guarantee the line is 'inside'\n+       If this is not done,bad behaviour may result for points on that axis. */\n+    if (a0 == 0.0 || a2 == 0.0)\n+      {\n+\tdouble small = getFlatness() * (1E-10);\n+\tif (a0 == 0.0)\n+\t  a0 += small;\n+\n+\tif (a2 == 0.0)\n+\t  a2 += small;\n+      }\n+\n+    r[0] = a0;\n+    r[1] = 2 * (a1 - a0);\n+    r[2] = (a2 - 2 * a1 + a0);\n+\n+    nRoots = solveQuadratic(r);\n+    for (int i = 0; i < nRoots; i++)\n+      {\n+\tdouble t = r[i];\n+\tif (t >= 0.0 && t <= 1.0)\n+\t  {\n+\t    double crossing = t * t * (b2 - 2 * b1 + b0) + 2 * t * (b1 - b0)\n+\t                      + b0;\n+\t    /* single root is always doubly degenerate in quads */\n+\t    if (crossing > 0 && crossing < distance)\n+\t      nCrossings += (nRoots == 1) ? 2 : 1;\n+\t  }\n+      }\n+\n+    if (useYaxis)\n+      {\n+\tif (Line2D.linesIntersect(b0, a0, b2, a2, 0.0, 0.0, distance, 0.0))\n+\t  nCrossings++;\n+      }\n+    else\n+      {\n+\tif (Line2D.linesIntersect(a0, b0, a2, b2, 0.0, 0.0, 0.0, distance))\n+\t  nCrossings++;\n+      }\n+\n+    return (nCrossings);\n+  }\n \n   /**\n    * A two-dimensional curve that is parameterized with a quadratic\n@@ -899,45 +1012,38 @@ public Object clone()\n    * @author Eric Blake (ebb9@email.byu.edu)\n    * @author Sascha Brawer (brawer@dandelis.ch)\n    */\n-  public static class Double\n-    extends QuadCurve2D\n+  public static class Double extends QuadCurve2D\n   {\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s start point.\n      */\n     public double x1;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s start point.\n      */\n     public double y1;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s control point.\n      */\n     public double ctrlx;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s control point.\n      */\n     public double ctrly;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s end point.\n      */\n     public double x2;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s end point.\n      */\n     public double y2;\n \n-\n     /**\n      * Constructs a new QuadCurve2D that stores its coordinate values\n      * in double-precision floating-point format. All points are\n@@ -947,7 +1053,6 @@ public Double()\n     {\n     }\n \n-\n     /**\n      * Constructs a new QuadCurve2D that stores its coordinate values\n      * in double-precision floating-point format, specifying the\n@@ -971,8 +1076,8 @@ public Double()\n      * @param y2 the <i>y</i> coordinate of the curve&#x2019;s end\n      * point.\n      */\n-    public Double(double x1, double y1, double cx, double cy,\n-                  double x2, double y2)\n+    public Double(double x1, double y1, double cx, double cy, double x2,\n+                  double y2)\n     {\n       this.x1 = x1;\n       this.y1 = y1;\n@@ -982,7 +1087,6 @@ public Double(double x1, double y1, double cx, double cy,\n       this.y2 = y2;\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s start\n      * point.\n@@ -992,7 +1096,6 @@ public double getX1()\n       return x1;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s start\n      * point.\n@@ -1002,7 +1105,6 @@ public double getY1()\n       return y1;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s start point.\n      */\n@@ -1011,7 +1113,6 @@ public Point2D getP1()\n       return new Point2D.Double(x1, y1);\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s control\n      * point.\n@@ -1021,7 +1122,6 @@ public double getCtrlX()\n       return ctrlx;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s control\n      * point.\n@@ -1031,7 +1131,6 @@ public double getCtrlY()\n       return ctrly;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s control point.\n      */\n@@ -1040,7 +1139,6 @@ public Point2D getCtrlPt()\n       return new Point2D.Double(ctrlx, ctrly);\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s end\n      * point.\n@@ -1050,7 +1148,6 @@ public double getX2()\n       return x2;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s end\n      * point.\n@@ -1060,7 +1157,6 @@ public double getY2()\n       return y2;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s end point.\n      */\n@@ -1069,7 +1165,6 @@ public Point2D getP2()\n       return new Point2D.Double(x2, y2);\n     }\n \n-\n     /**\n      * Changes the geometry of the curve.\n      *\n@@ -1102,7 +1197,6 @@ public void setCurve(double x1, double y1, double cx, double cy,\n       this.y2 = y2;\n     }\n \n-\n     /**\n      * Determines the smallest rectangle that encloses the\n      * curve&#x2019;s start, end and control point. As the\n@@ -1123,7 +1217,6 @@ public Rectangle2D getBounds2D()\n     }\n   }\n \n-\n   /**\n    * A two-dimensional curve that is parameterized with a quadratic\n    * function and stores coordinate values in single-precision\n@@ -1134,45 +1227,38 @@ public Rectangle2D getBounds2D()\n    * @author Eric Blake (ebb9@email.byu.edu)\n    * @author Sascha Brawer (brawer@dandelis.ch)\n    */\n-  public static class Float\n-    extends QuadCurve2D\n+  public static class Float extends QuadCurve2D\n   {\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s start point.\n      */\n     public float x1;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s start point.\n      */\n     public float y1;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s control point.\n      */\n     public float ctrlx;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s control point.\n      */\n     public float ctrly;\n \n-\n     /**\n      * The <i>x</i> coordinate of the curve&#x2019;s end point.\n      */\n     public float x2;\n \n-\n     /**\n      * The <i>y</i> coordinate of the curve&#x2019;s end point.\n      */\n     public float y2;\n \n-\n     /**\n      * Constructs a new QuadCurve2D that stores its coordinate values\n      * in single-precision floating-point format. All points are\n@@ -1182,7 +1268,6 @@ public Float()\n     {\n     }\n \n-\n     /**\n      * Constructs a new QuadCurve2D that stores its coordinate values\n      * in single-precision floating-point format, specifying the\n@@ -1206,8 +1291,7 @@ public Float()\n      * @param y2 the <i>y</i> coordinate of the curve&#x2019;s end\n      * point.\n      */\n-    public Float(float x1, float y1, float cx, float cy,\n-                 float x2, float y2)\n+    public Float(float x1, float y1, float cx, float cy, float x2, float y2)\n     {\n       this.x1 = x1;\n       this.y1 = y1;\n@@ -1217,7 +1301,6 @@ public Float(float x1, float y1, float cx, float cy,\n       this.y2 = y2;\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s start\n      * point.\n@@ -1227,7 +1310,6 @@ public double getX1()\n       return x1;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s start\n      * point.\n@@ -1237,7 +1319,6 @@ public double getY1()\n       return y1;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s start point.\n      */\n@@ -1246,7 +1327,6 @@ public Point2D getP1()\n       return new Point2D.Float(x1, y1);\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s control\n      * point.\n@@ -1256,7 +1336,6 @@ public double getCtrlX()\n       return ctrlx;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s control\n      * point.\n@@ -1266,7 +1345,6 @@ public double getCtrlY()\n       return ctrly;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s control point.\n      */\n@@ -1275,7 +1353,6 @@ public Point2D getCtrlPt()\n       return new Point2D.Float(ctrlx, ctrly);\n     }\n \n-\n     /**\n      * Returns the <i>x</i> coordinate of the curve&#x2019;s end\n      * point.\n@@ -1285,7 +1362,6 @@ public double getX2()\n       return x2;\n     }\n \n-\n     /**\n      * Returns the <i>y</i> coordinate of the curve&#x2019;s end\n      * point.\n@@ -1295,7 +1371,6 @@ public double getY2()\n       return y2;\n     }\n \n-\n     /**\n      * Returns the curve&#x2019;s end point.\n      */\n@@ -1304,7 +1379,6 @@ public Point2D getP2()\n       return new Point2D.Float(x2, y2);\n     }\n \n-\n     /**\n      * Changes the geometry of the curve, specifying coordinate values\n      * as double-precision floating-point numbers.\n@@ -1338,7 +1412,6 @@ public void setCurve(double x1, double y1, double cx, double cy,\n       this.y2 = (float) y2;\n     }\n \n-\n     /**\n      * Changes the geometry of the curve, specifying coordinate values\n      * as single-precision floating-point numbers.\n@@ -1361,8 +1434,8 @@ public void setCurve(double x1, double y1, double cx, double cy,\n      * @param y2 the <i>y</i> coordinate of the curve&#x2019;s new\n      * end point.\n      */\n-    public void setCurve(float x1, float y1, float cx, float cy,\n-                         float x2, float y2)\n+    public void setCurve(float x1, float y1, float cx, float cy, float x2,\n+                         float y2)\n     {\n       this.x1 = x1;\n       this.y1 = y1;\n@@ -1372,7 +1445,6 @@ public void setCurve(float x1, float y1, float cx, float cy,\n       this.y2 = y2;\n     }\n \n-\n     /**\n      * Determines the smallest rectangle that encloses the\n      * curve&#x2019;s start, end and control point. As the"}, {"sha": "3f004ed6bbc7e9dba7c1b079a5f64083c38b60f9", "filename": "libjava/java/awt/geom/RoundRectangle2D.java", "status": "modified", "additions": 176, "deletions": 170, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,5 +1,5 @@\n /* RoundRectangle2D.java -- represents a rectangle with rounded corners\n-   Copyright (C) 2000, 2002, 2003 Free Software Foundation\n+   Copyright (C) 2000, 2002, 2003, 2004 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -39,6 +39,7 @@\n \n import java.util.NoSuchElementException;\n \n+\n /** This class implements a rectangle with rounded corners.\n  * @author Tom Tromey <tromey@cygnus.com>\n  * @date December 3, 2000\n@@ -60,12 +61,12 @@ public abstract class RoundRectangle2D extends RectangularShape\n    * @param arcHeight The arc height\n    */\n   public abstract void setRoundRect(double x, double y, double w, double h,\n-                                     double arcWidth, double arcHeight);\n+                                    double arcWidth, double arcHeight);\n \n   /** Create a RoundRectangle2D.  This is protected because this class\n    * is abstract and cannot be instantiated.\n    */\n-  protected  RoundRectangle2D()\n+  protected RoundRectangle2D()\n   {\n   }\n \n@@ -87,8 +88,11 @@ public boolean contains(double x, double y)\n     // Now check to see if the point is in range of an arc.\n     double dy = Math.min(Math.abs(my - y), Math.abs(my + mh - y));\n     double dx = Math.min(Math.abs(mx - x), Math.abs(mx + mw - x));\n-    double aw = getArcWidth();\n-    double ah = getArcHeight();\n+\n+    // The arc dimensions are that of the corresponding ellipse\n+    // thus a 90 degree segment is half of that.\n+    double aw = getArcWidth() / 2.0;\n+    double ah = getArcHeight() / 2.0;\n     if (dx > aw || dy > ah)\n       return true;\n \n@@ -112,8 +116,8 @@ public boolean contains(double x, double y, double w, double h)\n   {\n     // We have to check all four points here (for ordinary rectangles\n     // we can just check opposing corners).\n-    return (contains(x, y) && contains(x + w, h)\n-            && contains(x, y + h) && contains(x + w, y + h));\n+    return (contains(x, y) && contains(x, y + h) && contains(x + w, y + h)\n+           && contains(x + w, y));\n   }\n \n   /** Return a new path iterator which iterates over this rectangle.\n@@ -128,154 +132,161 @@ public PathIterator getPathIterator(final AffineTransform at)\n     final double arcwidth = getArcWidth();\n     final double archeight = getArcHeight();\n     return new PathIterator()\n-    {\n-      /** We iterate clockwise around the rectangle, starting in the\n-       * upper left.  This variable tracks our current point, which\n-       * can be on either side of a given corner.  */\n-      private int current = 0;\n-\n-      /** Child path iterator, used for corners.  */\n-      private PathIterator corner;\n-\n-      /** This is used when rendering the corners.  We re-use the arc\n-       * for each corner.  */\n-      private Arc2D arc = new Arc2D.Double();\n-\n-      /** Temporary array used by getPoint.  */\n-      private double[] temp = new double[2];\n-\n-      public int getWindingRule()\n       {\n-\treturn WIND_NON_ZERO;\n-      }\n-\n-      public boolean isDone()\n-      {\n-\treturn current > 9;\n-      }\n-\n-      private void getPoint(int val)\n-      {\n-\tswitch (val)\n-\t  {\n-\t  case 0:\n-\t  case 8:\n-\t    temp[0] = minx;\n-\t    temp[1] = miny + archeight;\n-\t    break;\n-\t  case 1:\n-\t    temp[0] = minx + arcwidth;\n-\t    temp[1] = miny;\n-\t    break;\n-\t  case 2:\n-\t    temp[0] = maxx - arcwidth;\n-\t    temp[1] = maxy;\n-\t    break;\n-\t  case 3:\n-\t    temp[0] = maxx;\n-\t    temp[1] = miny + archeight;\n-\t    break;\n-\t  case 4:\n-\t    temp[0] = maxx;\n-\t    temp[1] = maxy - archeight;\n-\t    break;\n-\t  case 5:\n-\t    temp[0] = maxx - arcwidth;\n-\t    temp[1] = maxy;\n-\t    break;\n-\t  case 6:\n-\t    temp[0] = minx + arcwidth;\n-\t    temp[1] = maxy;\n-\t    break;\n-\t  case 7:\n-\t    temp[0] = minx;\n-\t    temp[1] = maxy - archeight;\n-\t    break;\n-\t  }\n-      }\n-\n-      public void next()\n-      {\n-\tif (current >= 8)\n-\t  ++current;\n-\telse if (corner != null)\n-\t  {\n-\t    // We're iterating through the corner.  Work on the child\n-\t    // iterator; if it finishes, reset and move to the next\n-\t    // point along the rectangle.\n-\t    corner.next();\n-\t    if (corner.isDone())\n-\t      {\n-\t\tcorner = null;\n-\t\t++current;\n-\t      }\n-\t  }\n-\telse\n-\t  {\n-\t    // Make an arc between this point on the rectangle and\n-\t    // the next one, and then iterate over this arc.\n-\t    getPoint(current);\n-\t    double x1 = temp[0];\n-\t    double y1 = temp[1];\n-\t    getPoint(current + 1);\n-\t    arc.setFrameFromDiagonal(x1, y1, temp[0], temp[1]);\n-\t    arc.setAngles(x1, y1, temp[0], temp[1]);\n-\t    corner = arc.getPathIterator(at);\n-\t  }\n-      }\n-\n-      public int currentSegment(float[] coords)\n-      {\n-\tif (corner != null)\n-\t  {\n-\t    int r = corner.currentSegment(coords);\n-\t    if (r == SEG_MOVETO)\n-\t      r = SEG_LINETO;\n-\t    return r;\n-\t  }\n-\n-\tif (current < 9)\n-\t  {\n-\t    getPoint(current);\n-\t    coords[0] = (float) temp[0];\n-\t    coords[1] = (float) temp[1];\n-\t  }\n-\telse if (current == 9)\n-\t  return SEG_CLOSE;\n-\telse\n-\t  throw new NoSuchElementException(\"rect iterator out of bounds\");\n-\n-\tif (at != null)\n-\t  at.transform(coords, 0, coords, 0, 1);\n-\treturn current == 0 ? SEG_MOVETO : SEG_LINETO;\n-      }\n-\n-      public int currentSegment(double[] coords)\n-      {\n-\tif (corner != null)\n-\t  {\n-\t    int r = corner.currentSegment(coords);\n-\t    if (r == SEG_MOVETO)\n-\t      r = SEG_LINETO;\n-\t    return r;\n-\t  }\n-\n-\tif (current < 9)\n-\t  {\n-\t    getPoint(current);\n-\t    coords[0] = temp[0];\n-\t    coords[1] = temp[1];\n-\t  }\n-\telse if (current == 9)\n-\t  return SEG_CLOSE;\n-\telse\n-\t  throw new NoSuchElementException(\"rect iterator out of bounds\");\n-\n-\tif (at != null)\n-\t  at.transform(coords, 0, coords, 0, 1);\n-\treturn current == 0 ? SEG_MOVETO : SEG_LINETO;\n-      }\n-    };\n+\t/** We iterate counterclockwise around the rectangle, starting in the\n+\t * upper right.  This variable tracks our current point, which\n+\t * can be on either side of a given corner.  */\n+\tprivate int current = 0;\n+\n+\t/** Child path iterator, used for corners.  */\n+\tprivate PathIterator corner;\n+\n+\t/** This is used when rendering the corners.  We re-use the arc\n+\t * for each corner.  */\n+\tprivate Arc2D arc = new Arc2D.Double();\n+\n+\t/** Temporary array used by getPoint.  */\n+\tprivate double[] temp = new double[2];\n+\n+\tpublic int getWindingRule()\n+\t{\n+\t  return WIND_NON_ZERO;\n+\t}\n+\n+\tpublic boolean isDone()\n+\t{\n+\t  return current > 9;\n+\t}\n+\n+\tprivate void getPoint(int val)\n+\t{\n+\t  switch (val)\n+\t    {\n+\t    case 0:\n+\t    case 8:\n+\t      temp[0] = maxx;\n+\t      temp[1] = miny + archeight;\n+\t      break;\n+\t    case 7:\n+\t      temp[0] = maxx;\n+\t      temp[1] = maxy - archeight;\n+\t      break;\n+\t    case 6:\n+\t      temp[0] = maxx - arcwidth;\n+\t      temp[1] = maxy;\n+\t      break;\n+\t    case 5:\n+\t      temp[0] = minx + arcwidth;\n+\t      temp[1] = maxy;\n+\t      break;\n+\t    case 4:\n+\t      temp[0] = minx;\n+\t      temp[1] = maxy - archeight;\n+\t      break;\n+\t    case 3:\n+\t      temp[0] = minx;\n+\t      temp[1] = miny + archeight;\n+\t      break;\n+\t    case 2:\n+\t      temp[0] = minx + arcwidth;\n+\t      temp[1] = miny;\n+\t      break;\n+\t    case 1:\n+\t      temp[0] = maxx - arcwidth;\n+\t      temp[1] = miny;\n+\t      break;\n+\t    }\n+\t}\n+\n+\tpublic void next()\n+\t{\n+\t  if (current >= 8)\n+\t    ++current;\n+\t  else if (corner != null)\n+\t    {\n+\t      // We're iterating through the corner.  Work on the child\n+\t      // iterator; if it finishes, reset and move to the next\n+\t      // point along the rectangle.\n+\t      corner.next();\n+\t      if (corner.isDone())\n+\t        {\n+\t\t  corner = null;\n+\t\t  ++current;\n+\t        }\n+\t    }\n+\t  else\n+\t    {\n+\t      // Make an arc between this point on the rectangle and\n+\t      // the next one, and then iterate over this arc.\n+\t      getPoint(current);\n+\t      double x1 = temp[0];\n+\t      double y1 = temp[1];\n+\t      getPoint(current + 1);\n+\t      Rectangle2D.Double r = new Rectangle2D.Double(Math.min(x1,\n+\t                                                             temp[0]),\n+\t                                                    Math.min(y1,\n+\t                                                             temp[1]),\n+\t                                                    Math.abs(x1\n+\t                                                             - temp[0]),\n+\t                                                    Math.abs(y1\n+\t                                                             - temp[1]));\n+\t      arc.setArc(r, (current >> 1) * 90.0, 90.0, Arc2D.OPEN);\n+\t      corner = arc.getPathIterator(at);\n+\t    }\n+\t}\n+\n+\tpublic int currentSegment(float[] coords)\n+\t{\n+\t  if (corner != null)\n+\t    {\n+\t      int r = corner.currentSegment(coords);\n+\t      if (r == SEG_MOVETO)\n+\t\tr = SEG_LINETO;\n+\t      return r;\n+\t    }\n+\n+\t  if (current < 9)\n+\t    {\n+\t      getPoint(current);\n+\t      coords[0] = (float) temp[0];\n+\t      coords[1] = (float) temp[1];\n+\t    }\n+\t  else if (current == 9)\n+\t    return SEG_CLOSE;\n+\t  else\n+\t    throw new NoSuchElementException(\"rect iterator out of bounds\");\n+\n+\t  if (at != null)\n+\t    at.transform(coords, 0, coords, 0, 1);\n+\t  return current == 0 ? SEG_MOVETO : SEG_LINETO;\n+\t}\n+\n+\tpublic int currentSegment(double[] coords)\n+\t{\n+\t  if (corner != null)\n+\t    {\n+\t      int r = corner.currentSegment(coords);\n+\t      if (r == SEG_MOVETO)\n+\t\tr = SEG_LINETO;\n+\t      return r;\n+\t    }\n+\n+\t  if (current < 9)\n+\t    {\n+\t      getPoint(current);\n+\t      coords[0] = temp[0];\n+\t      coords[1] = temp[1];\n+\t    }\n+\t  else if (current == 9)\n+\t    return SEG_CLOSE;\n+\t  else\n+\t    throw new NoSuchElementException(\"rect iterator out of bounds\");\n+\n+\t  if (at != null)\n+\t    at.transform(coords, 0, coords, 0, 1);\n+\t  return current == 0 ? SEG_MOVETO : SEG_LINETO;\n+\t}\n+      };\n   }\n \n   /** Return true if the given rectangle intersects this shape.\n@@ -286,14 +297,9 @@ else if (current == 9)\n    */\n   public boolean intersects(double x, double y, double w, double h)\n   {\n-    // Here we can use the same code we use for an ordinary rectangle.\n-    double mx = getX();\n-    double mw = getWidth();\n-    if (x < mx || x >= mx + mw || x + w < mx || x + w >= mx + mw)\n-      return false;\n-    double my = getY();\n-    double mh = getHeight();\n-    return y >= my && y < my + mh && y + h >= my && y + h < my + mh;\n+    // Check if any corner is within the rectangle\n+    return (contains(x, y) || contains(x, y + h) || contains(x + w, y + h)\n+           || contains(x + w, y));\n   }\n \n   /** Set the boundary of this round rectangle.\n@@ -315,7 +321,7 @@ public void setFrame(double x, double y, double w, double h)\n   public void setRoundRect(RoundRectangle2D rr)\n   {\n     setRoundRect(rr.getX(), rr.getY(), rr.getWidth(), rr.getHeight(),\n-                  rr.getArcWidth(), rr.getArcHeight());\n+                 rr.getArcWidth(), rr.getArcHeight());\n   }\n \n   /** A subclass of RoundRectangle which keeps its parameters as\n@@ -353,8 +359,8 @@ public Double()\n      * @param arcWidth The arc width\n      * @param arcHeight The arc height\n      */\n-    public Double(double x, double y, double w, double h,\n-                   double arcWidth, double arcHeight)\n+    public Double(double x, double y, double w, double h, double arcWidth,\n+                  double arcHeight)\n     {\n       this.x = x;\n       this.y = y;\n@@ -405,7 +411,7 @@ public boolean isEmpty()\n     }\n \n     public void setRoundRect(double x, double y, double w, double h,\n-                              double arcWidth, double arcHeight)\n+                             double arcWidth, double arcHeight)\n     {\n       this.x = x;\n       this.y = y;\n@@ -451,8 +457,8 @@ public Float()\n      * @param arcWidth The arc width\n      * @param arcHeight The arc height\n      */\n-    public Float(float x, float y, float w, float h,\n-                  float arcWidth, float arcHeight)\n+    public Float(float x, float y, float w, float h, float arcWidth,\n+                 float arcHeight)\n     {\n       this.x = x;\n       this.y = y;\n@@ -503,7 +509,7 @@ public boolean isEmpty()\n     }\n \n     public void setRoundRect(float x, float y, float w, float h,\n-                              float arcWidth, float arcHeight)\n+                             float arcWidth, float arcHeight)\n     {\n       this.x = x;\n       this.y = y;\n@@ -514,7 +520,7 @@ public void setRoundRect(float x, float y, float w, float h,\n     }\n \n     public void setRoundRect(double x, double y, double w, double h,\n-                              double arcWidth, double arcHeight)\n+                             double arcWidth, double arcHeight)\n     {\n       this.x = (float) x;\n       this.y = (float) y;"}, {"sha": "3ac43cf25b646c12bdb88b2245e419b7c0deb054", "filename": "libjava/java/awt/image/DirectColorModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -60,7 +60,6 @@ public class DirectColorModel extends PackedColorModel\n    * @param rmask the bits describing the red component of a pixel\n    * @param gmask the bits describing the green component of a pixel\n    * @param bmask the bits describing the blue component of a pixel \n-   * @param amask the bits describing the alpha component of a pixel \n    */\n   public DirectColorModel(int pixelBits, int rmask, int gmask, int bmask)\n   {\n@@ -82,6 +81,7 @@ public DirectColorModel(int pixelBits, int rmask, int gmask, int bmask)\n    * @param rmask the bits describing the red component of a pixel\n    * @param gmask the bits describing the green component of a pixel\n    * @param bmask the bits describing the blue component of a pixel \n+   * @param amask the bits describing the alpha component of a pixel \n    */\n   public DirectColorModel(int pixelBits,\n \t\t\t  int rmask, int gmask, int bmask, int amask)"}, {"sha": "4898f9ed82b56c5cd15a0ca297caa9771586de4f", "filename": "libjava/java/awt/image/Kernel.java", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fimage%2FKernel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fimage%2FKernel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FKernel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -117,7 +117,7 @@ public final float[] getKernelData(float[] data)\n     throws IllegalArgumentException\n   {\n     if (data == null)\n-\treturn (float[])this.data.clone();\n+      return (float[])this.data.clone();\n \n     if (data.length < this.data.length)\n       throw new IllegalArgumentException();\n@@ -131,6 +131,13 @@ public final float[] getKernelData(float[] data)\n    */\n   public Object clone()\n   {\n-    return new Kernel(width, height, data);\n+    try\n+      {\n+\treturn super.clone();\n+      }\n+    catch (CloneNotSupportedException e)\n+      {\n+        throw (Error) new InternalError().initCause(e); // Impossible\n+      }\n   }\n }"}, {"sha": "6018c41b363d7422a414c8ca358505bc62a85a39", "filename": "libjava/java/awt/peer/MenuBarPeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fpeer%2FMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjava%2Fawt%2Fpeer%2FMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FMenuBarPeer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -43,7 +43,6 @@\n public interface MenuBarPeer extends MenuComponentPeer\n {\n   void addHelpMenu(Menu menu);\n-  void addMenu(Menu menu);\n   void delMenu(int index);\n } // interface MenuBarPeer \n "}, {"sha": "11ab1983ec66e9f44e6df3b4b0a466eec5fbb2b6", "filename": "libjava/javax/swing/AbstractButton.java", "status": "modified", "additions": 91, "deletions": 47, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractButton.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -51,7 +51,6 @@\n import java.awt.event.ItemListener;\n import java.beans.PropertyChangeEvent;\n import java.beans.PropertyChangeListener;\n-import java.util.EventListener;\n \n import javax.accessibility.AccessibleAction;\n import javax.accessibility.AccessibleIcon;\n@@ -214,24 +213,28 @@ public abstract class AbstractButton extends JComponent\n   Action action;\n \n   /** The button's current state. */\n-  ButtonModel model;\n+  protected ButtonModel model;\n \n   /** The margin between the button's border and its label. */\n   Insets margin;\n \n-  /** a hint to the look and feel class, suggesting which character in the\n+  /** A hint to the look and feel class, suggesting which character in the\n    * button's label should be underlined when drawing the label. */\n   int mnemonicIndex;\n \n   /** Listener the button uses to receive ActionEvents from its model.  */\n-  ActionListener actionListener;\n+  protected ActionListener actionListener;\n \n   /** Listener the button uses to receive ItemEvents from its model.  */\n-  ItemListener itemListener;\n+  protected ItemListener itemListener;\n \n   /** Listener the button uses to receive ChangeEvents from its model.  */  \n-  ChangeListener changeListener;\n+  protected ChangeListener changeListener;\n \n+  /** The time in miliseconds in which clicks get coalesced into a single\n+   * <code>ActionEvent</code>. */\n+  long multiClickThreshhold;\n+  \n   /** Listener the button uses to receive PropertyChangeEvents from its\n       Action. */\n   PropertyChangeListener actionPropertyChangeListener;\n@@ -296,9 +299,9 @@ public abstract class AbstractButton extends JComponent\n   /** Fired in a PropertyChangeEvent when the \"verticalTextPosition\" property changes. */\n   public static final String VERTICAL_TEXT_POSITION_CHANGED_PROPERTY = \"verticalTextPosition\";\n \n-    /**\n+  /**\n    * A Java Accessibility extension of the AbstractButton.\n-     */\n+   */\n   protected abstract class AccessibleAbstractButton\n     extends AccessibleJComponent implements AccessibleAction, AccessibleValue,\n                                             AccessibleText\n@@ -430,7 +433,7 @@ public int getSelectionEnd()\n     }\n \n     public String getSelectedText()\n-  {\n+    {\n       return null; // TODO\n     }\n \n@@ -440,33 +443,6 @@ private Rectangle getTextRectangle()\n     }\n     }\n \n-  /**\n-   * Helper class used to subscribe to FocusEvents received by the button.\n-   */\n-  private class ButtonFocusListener implements FocusListener\n-    {\n-    /**\n-     * Possibly repaint the model in response to loss of focus.\n-     *\n-     * @param event The loss-of-focus event\n-     */\n-    public void focusLost(FocusEvent event)\n-        {\n-      if (AbstractButton.this.isFocusPainted())\n-        AbstractButton.this.repaint();\n-    }\n-\n-    /**\n-     * Possibly repaint the button in response to acquisition of focus.\n-     *\n-     * @param event The gained-focus event\n-     */\n-    public void focusGained(FocusEvent event)\n-    {\n-      if (AbstractButton.this.isFocusPainted())\n-        AbstractButton.this.repaint();\n-    }\n-  }\n \n   /**\n    * Creates a new AbstractButton object.\n@@ -549,12 +525,12 @@ protected void init(String text, Icon icon)\n     borderPainted = true;\n     contentAreaFilled = true;\n \n-    iconTextGap = 4;\n+    focusPainted = true;\n+    setFocusable(true);\n \n     setAlignmentX(LEFT_ALIGNMENT);\n     setAlignmentY(CENTER_ALIGNMENT);\n \n-    addFocusListener(new ButtonFocusListener());\n     setDisplayedMnemonicIndex(-1);    \n  }\n  \n@@ -601,6 +577,18 @@ public void removeActionListener(ActionListener l)\n     listenerList.remove(ActionListener.class, l);\n   }\n \n+  /**\n+   * Returns all added <code>ActionListener</code> objects.\n+   * \n+   * @return an array of listeners\n+   * \n+   * @since 1.4\n+   */\n+  public ActionListener[] getActionListeners()\n+  {\n+    return (ActionListener[]) listenerList.getListeners(ActionListener.class);\n+  }\n+\n   /**\n    * Adds an ItemListener to the button's listener list. When the button's\n    * model changes state (between any of ARMED, ENABLED, PRESSED, ROLLOVER\n@@ -624,6 +612,18 @@ public void removeItemListener(ItemListener l)\n     listenerList.remove(ItemListener.class, l);\n   }\n \n+  /**\n+   * Returns all added <code>ItemListener</code> objects.\n+   * \n+   * @return an array of listeners\n+   * \n+   * @since 1.4\n+   */\n+  public ItemListener[] getItemListeners()\n+  {\n+    return (ItemListener[]) listenerList.getListeners(ItemListener.class);\n+  }\n+\n   /**\n    * Adds a ChangeListener to the button's listener list. When the button's\n    * model changes any of its (non-bound) properties, these listeners will be\n@@ -646,6 +646,18 @@ public void removeChangeListener(ChangeListener l)\n     listenerList.remove(ChangeListener.class, l);\n   }\n \n+  /**\n+   * Returns all added <code>ChangeListener</code> objects.\n+   * \n+   * @return an array of listeners\n+   * \n+   * @since 1.4\n+   */\n+  public ChangeListener[] getChangeListeners()\n+  {\n+    return (ChangeListener[]) listenerList.getListeners(ChangeListener.class);\n+  }\n+\n   /**\n    * Calls {@link ItemListener.itemStateChanged} on each ItemListener in\n    * the button's listener list.\n@@ -655,9 +667,10 @@ public void removeChangeListener(ChangeListener l)\n   public void fireItemStateChanged(ItemEvent e)\n   {\n     e.setSource(this);\n-    EventListener[] ll = listenerList.getListeners(ItemListener.class);\n-    for (int i = 0; i < ll.length; i++)\n-      ((ItemListener)ll[i]).itemStateChanged(e);\n+    ItemListener[] listeners = getItemListeners();\n+ \n+    for (int i = 0; i < listeners.length; i++)\n+      listeners[i].itemStateChanged(e);\n   }\n \n   /**\n@@ -669,9 +682,10 @@ public void fireItemStateChanged(ItemEvent e)\n   public void fireActionPerformed(ActionEvent e)\n   {\n     e.setSource(this);\n-    EventListener[] ll = listenerList.getListeners(ActionListener.class);\n-    for (int i = 0; i < ll.length; i++)\n-      ((ActionListener)ll[i]).actionPerformed(e);\n+    ActionListener[] listeners = getActionListeners();\n+    \n+    for (int i = 0; i < listeners.length; i++)\n+      listeners[i].actionPerformed(e);\n   }\n \n   /**\n@@ -683,9 +697,10 @@ public void fireActionPerformed(ActionEvent e)\n    */\n   public void fireStateChanged(ChangeEvent e)\n   {\n-    EventListener[] ll = listenerList.getListeners(ChangeListener.class);\n-    for (int i = 0; i < ll.length; i++)\n-      ((ChangeListener)ll[i]).stateChanged(changeEvent);\n+    ChangeListener[] listeners = getChangeListeners();\n+\n+    for (int i = 0; i < listeners.length; i++)\n+      listeners[i].stateChanged(changeEvent);\n   }\n \n   /**\n@@ -1879,4 +1894,33 @@ public ButtonUI getUI()\n   public void updateUI()\n   {\n   }\n+\n+  /**\n+   * Returns the current time in milliseconds in which clicks gets coalesced\n+   * into a single <code>ActionEvent</code>.\n+   *\n+   * @return the time in milliseconds\n+   * \n+   * @since 1.4\n+   */\n+  public long getMultiClickThreshhold()\n+  {\n+    return multiClickThreshhold;\n+  }\n+\n+  /**\n+   * Sets the time in milliseconds in which clicks gets coalesced into a single\n+   * <code>ActionEvent</code>.\n+   *\n+   * @param threshhold the time in milliseconds\n+   * \n+   * @since 1.4\n+   */\n+  public void setMultiClickThreshhold(long threshhold)\n+  {\n+    if (threshhold < 0)\n+      throw new IllegalArgumentException();\n+\n+    multiClickThreshhold = threshhold;\n+  }\n }"}, {"sha": "98615914683b34d0a365207154290bf1017a707c", "filename": "libjava/javax/swing/ActionMap.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FActionMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FActionMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FActionMap.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -86,8 +86,8 @@ public Action get(Object key)\n   {\n     Object result = actionMap.get(key);\n \n-    if (result == null)\n-\t\t\tresult = parent.get(key);\n+    if (result == null && parent != null)\n+      result = parent.get(key);\n \n \t\treturn (Action) result;\n   }"}, {"sha": "26588a564572ad8a2fb2a7c74d3a0ab314d72d29", "filename": "libjava/javax/swing/Box.java", "status": "modified", "additions": 104, "deletions": 11, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBox.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -47,7 +47,11 @@\n import java.awt.AWTError;\n \n /**\n- * Needs some work I guess....\n+ * A component that uses a {@link BoxLayout} as Layout Manager.\n+ *\n+ * In addition to that, this class provides a set of static methods for\n+ * creating some filler components ('struts' and 'glue') for use in\n+ * containers that are laid out using BoxLayout.\n  *\n  * @author Ronald Veldema (rveldema@cs.vu.nl)\n  */\n@@ -69,7 +73,10 @@ public AccessibleRole getAccessibleRole()\n       return null;\n     }\n   }\n-  \n+\n+  /**\n+   * A component that servers as a filler in BoxLayout controlled containers.\n+   */\n   public static class Filler extends JComponent implements Accessible\n   {\n     private static final long serialVersionUID = -1204263191910183998L;\n@@ -93,11 +100,25 @@ public AccessibleRole getAccessibleRole()\n     \n     private transient Dimension min, pref, max;\n     \n+    /**\n+     * Creates a new instance of Filler.\n+     *\n+     * @param min the minimum size of the filler.\n+     * @param pref the preferred size of the filler.\n+     * @param max the maximum size of the filler.\n+     */\n     public Filler(Dimension min, Dimension pref, Dimension max)\n     {\n       changeShape(min, pref, max);\n     }\n     \n+    /**\n+     * Changes the dimensions of this Filler.\n+     *\n+     * @param min the new minimum size of the filler.\n+     * @param pref the new preferred size of the filler.\n+     * @param max the new maximum size of the filler.\n+     */\n     public void changeShape(Dimension min, Dimension pref, Dimension max)\n     {\n       this.min = min;\n@@ -113,65 +134,137 @@ public AccessibleContext getAccessibleContext()\n       return accessibleContext;\n     }\n     \n+    /**\n+     * Returns the maximum size of this Filler.\n+     *\n+     * @return the maximum size of this Filler.\n+     */\n     public Dimension getMaximumSize()\n     {\n       return max;\n     }\n     \n+    /**\n+     * Returns the minimum size of this Filler.\n+     *\n+     * @return the minimum size of this Filler.\n+     */\n     public Dimension getMinimumSize()\n     {\n       return min;\n     }\n     \n+    /**\n+     * Returns the preferred size of this Filler.\n+     *\n+     * @return the preferred size of this Filler.\n+     */\n     public Dimension getPreferredSize()\n     {\n       return pref;\n     }\n   }\n   \n+  /**\n+   * Creates a new Box component, that lays out its children according\n+   * to the <code>axis</code> parameter.\n+   *\n+   * @param axis the orientation of the BoxLayout.\n+   *\n+   * @see BoxLayout#X_AXIS\n+   * @see BoxLayout#Y_AXIS\n+   * @see BoxLayout#LINE_AXIS\n+   * @see BoxLayout#PAGE_AXIS\n+   */\n   public Box(int axis)\n   {\n-    setLayout(new BoxLayout(this, axis));\t\n+    super.setLayout(new BoxLayout(this, axis));\t\n   }\n   \n+  /**\n+   * Creates a filler component which acts as glue between components.\n+   * It does not take space unless some extra space is available. If extra\n+   * space is available, this component can expand in both X and Y directions.\n+   *\n+   * @return a glue-like filler component.\n+   */\n   public static Component createGlue()\n   {\n-    return null;\n+    Filler glue = new Filler(new Dimension(0,0), new Dimension(0,0),\n+                             new Dimension(Integer.MAX_VALUE,Integer.MAX_VALUE)\n+                             );\n+    return glue;\n   }\n   \n   public static Box createHorizontalBox()\n   {\n-    return null;\n+    return new Box(BoxLayout.X_AXIS);\n   }\n   \n+  /**\n+   * Creates a filler component which acts as glue between components.\n+   * It does not take space unless some extra space is available. If extra\n+   * space is available, this component can expand in the X direction.\n+   *\n+   * @return a glue-like filler component.\n+   */\n   public static Component createHorizontalGlue()\n   {\n-    return null;\n+    return createGlue();\n   }\n   \n+  /**\n+   * Creates a filler component which acts as strut between components.\n+   * It will fill exactly the specified horizontal size.\n+   *\n+   * @param width the width of this strut in pixels.\n+   *\n+   * @return a strut-like filler component.\n+   */\n   public static Component createHorizontalStrut(int width)\n   {\n-    return null;\n+    Filler strut = new Filler(new Dimension(width, 0),\n+                              new Dimension(width, 0),\n+                              new Dimension(width, Integer.MAX_VALUE));\n+    return strut;\n   }\n   \n   public static Component createRigidArea(Dimension d)\n   {\n-    return null;\n+    return new Filler(d, d, d);\n   }\n   \n   public static Box createVerticalBox()\n   {\n-    return null;\n+    return new Box(BoxLayout.Y_AXIS);\n   }\n   \n+  /**\n+   * Creates a filler component which acts as glue between components.\n+   * It does not take space unless some extra space is available. If extra\n+   * space is available, this component can expand in the Y direction.\n+   *\n+   * @return a glue-like filler component.\n+   */\n   public static Component createVerticalGlue()\n   {\n-    return null;\n+    return createGlue();\n   }\n   \n+  /**\n+   * Creates a filler component which acts as strut between components.\n+   * It will fill exactly the specified vertical size.\n+   *\n+   * @param height the height of this strut in pixels.\n+   *\n+   * @return a strut-like filler component.\n+   */\n   public static Component createVerticalStrut(int height)\n   {\n-    return null;\n+    Filler strut = new Filler(new Dimension(0, height),\n+                              new Dimension(0, height),\n+                              new Dimension(Integer.MAX_VALUE, height));\n+    return strut;\n   }\n   \n   public void setLayout(LayoutManager l)"}, {"sha": "7b12602a9ff6fd65a9cd7e11f296523aba73350d", "filename": "libjava/javax/swing/BoxLayout.java", "status": "modified", "additions": 163, "deletions": 66, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FBoxLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FBoxLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBoxLayout.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -42,15 +42,11 @@\n import java.awt.ComponentOrientation;\n import java.awt.Container;\n import java.awt.Dimension;\n-import java.awt.GridLayout;\n import java.awt.LayoutManager2;\n import java.io.Serializable;\n \n-\n /**\n  * A layout for swing components.\n- * This implementation delegates its methods to\n- * java.awt.GridLayout to do its work.\n  *\n  * @author Ronald Veldema (rveldema@cs.vu.nl)\n  */\n@@ -86,11 +82,6 @@ public class BoxLayout implements LayoutManager2, Serializable\n    */\n   private Container container;\n   \n-  /*\n-   * Internal layout.\n-   */\n-  private GridLayout grid;\n-\n   /*\n    * Current type of component layouting. Defaults to X_AXIS.\n    */\n@@ -108,75 +99,41 @@ public BoxLayout(Container container, int way)\n   {\n     int width = 0;\n     int height = 0;\n-    ComponentOrientation orientation = container.getComponentOrientation();\n-\n     this.container = container;\n     this.way = way;\n-\n-    switch (way)\n-      {\n-      case X_AXIS:\n-\twidth = 1;\n-\tbreak;\n-      case Y_AXIS:\n-\theight = 1;\n-\tbreak;\n-      case LINE_AXIS:\n-\tif (orientation.isHorizontal())\n-          height = 1;\n-\telse\n-\t  width = 1;\n-\tbreak;\n-      case PAGE_AXIS:\n-\tif (!orientation.isHorizontal())\n-          height = 1;\n-\telse\n-\t  width = 1;\n-\tbreak;\n-      default:\n-\tthrow new AWTError(\"Invalid value for way\");\n-      }\n-\n-    grid = new GridLayout(width, height);\n   }\n \n   /**\n-   * Adds a component to the layout.\n+   * Adds a component to the layout. Not used in BoxLayout.\n    *\n    * @param name The name of the component to add.\n    * @param component the component to add to the layout.\n    */\n   public void addLayoutComponent(String name, Component component)\n   {\n-    if (way == X_AXIS\n-        || (way == LINE_AXIS\n-            && component.getComponentOrientation().isHorizontal())\n-        || (way == PAGE_AXIS\n-            && !component.getComponentOrientation().isHorizontal()))\n-      grid.setColumns(grid.getColumns() + 1);\n-    else\n-      grid.setRows(grid.getRows() + 1);\n   }\n \n   /**\n-   * Removes a component from the layout.\n+   * Removes a component from the layout. Not used in BoxLayout.\n    *\n    * @param component The component to remove from the layout.\n    */\n   public void removeLayoutComponent(Component component)\n   {\n-    grid.removeLayoutComponent(component);\n-\n-    if (way == X_AXIS\n-        || (way == LINE_AXIS\n-            && component.getComponentOrientation().isHorizontal())\n-        || (way == PAGE_AXIS\n-            && !component.getComponentOrientation().isHorizontal()))\n-      grid.setColumns(grid.getColumns() - 1);\n-    else\n-      grid.setRows(grid.getRows() - 1);\n   }\n \n+  private boolean isHorizontalIn(Container parent)\n+  {\n+    ComponentOrientation orientation = parent.getComponentOrientation();\n+    return this.way == X_AXIS \n+      || (this.way == LINE_AXIS \n+          && orientation.isHorizontal())\n+      || (this.way == PAGE_AXIS\n+          && (!orientation.isHorizontal()));\n+  }\n+\n+  \n+\n   /**\n    * Returns the preferred size of the layout.\n    *\n@@ -188,8 +145,38 @@ public Dimension preferredLayoutSize(Container parent)\n   {\n     if (parent != container)\n       throw new AWTError(\"invalid parent\");\n+\n+    int x = 0;\n+    int y = 0;\n+\n+    Component[] children = parent.getComponents();\n+\n+    if (isHorizontalIn(parent))\n+      {        \n+        // sum up preferred widths of components, find maximum of preferred\n+        // heights\n+        for (int index = 0; index < children.length; index++)\n+          {\n+            Component comp = children[index];\n+            Dimension sz = comp.getPreferredSize();\n+            x += sz.width;\n+            y = Math.max(y, sz.height);\n+          }\n+      } \n+    else \n+      {        \n+        // sum up preferred heights of components, find maximum of\n+        //  preferred widths\n+        for (int index = 0; index < children.length; index++)\n+          {\n+            Component comp = children[index];\n+            Dimension sz = comp.getPreferredSize();\n+            y += sz.height;\n+            x = Math.max(x, sz.width);\n+          }\n+      }\n     \n-    return grid.preferredLayoutSize(parent);\n+    return new Dimension(x, y);\n   }\n \n   /**\n@@ -203,8 +190,38 @@ public Dimension minimumLayoutSize(Container parent)\n   {\n     if (parent != container)\n       throw new AWTError(\"invalid parent\");\n+\n+    int x = 0;\n+    int y = 0;\n+\n+    Component[] children = parent.getComponents();\n+\n+    if (isHorizontalIn(parent))\n+      {\n+        // sum up preferred widths of components, find maximum of preferred\n+        // heights\n+        for (int index = 0; index < children.length; index++)\n+          {\n+            Component comp = children[index];\n+            Dimension sz = comp.getMinimumSize();\n+            x += sz.width;\n+            y = Math.max(y, sz.height);\n+          }\n+      }\n+    else\n+      {\n+        // sum up preferred heights of components, find maximum of\n+        //  preferred widths\n+        for (int index = 0; index < children.length; index++)\n+          {\n+            Component comp = children[index];\n+            Dimension sz = comp.getMinimumSize();\n+            y += sz.height;\n+            x = Math.max(x, sz.width);\n+          }\n+      }\n     \n-    return grid.minimumLayoutSize(parent);\n+    return new Dimension(x, y);\n   }\n \n   /**\n@@ -216,19 +233,69 @@ public void layoutContainer(Container parent)\n   {\n     if (parent != container)\n       throw new AWTError(\"invalid parent\");\n-    \n-    grid.layoutContainer(parent);\n-  }\n \n+    Dimension size = parent.getSize();\n+\n+    Component[] children = parent.getComponents();\n+\n+    if (isHorizontalIn(parent))\n+      {\n+        int x = 0;\n+        for (int index = 0; index < children.length; index++)\n+          {\n+            Component comp = children[index];\n+            Dimension sz = comp.getPreferredSize();\n+            int width = sz.width;\n+            int height = sz.height;\n+            int cy = 0;\n+            if (height > size.height)\n+              {\n+                height = size.height;\n+              }\n+            else\n+              {\n+                cy = (int) ((size.height - height) * comp.getAlignmentY());\n+              }\n+            \n+            comp.setSize(width, height);\n+            comp.setLocation(x, cy);\n+            x = x + width;            \n+          }\n+      }\n+    else\n+      {\n+        int y = 0;        \n+        for (int index = 0; index < children.length; index++)\n+          {\n+            Component comp = children[index];\n+            Dimension sz = comp.getPreferredSize();\n+            int width = sz.width;\n+            int height = sz.height;\n+            int cx = 0;\n+            if (width > size.width)\n+              {\n+                width = size.width;\n+              }\n+            else\n+              {\n+                cx = (int) ((size.width - width) * comp.getAlignmentX());\n+              }\n+            \n+            comp.setSize(width, height);\n+            comp.setLocation(cx, y);\n+            y = y + height;            \n+          }\n+      }    \n+  }\n+  \n   /**\n-   * Adds a component to the layout.\n+   * Adds a component to the layout. Not used in BoxLayout\n    *\n    * @param child The component to add to the layout.\n    * @param constraints The constraints for the component in the layout.\n    */\n   public void addLayoutComponent(Component child, Object constraints)\n   {\n-    addLayoutComponent(\"\", child);\n   }\n \n   /**\n@@ -284,7 +351,37 @@ public Dimension maximumLayoutSize(Container parent)\n   {\n     if (parent != container)\n       throw new AWTError(\"invalid parent\");\n-    \n-    return preferredLayoutSize(parent);\n+\n+    int x = 0;\n+    int y = 0;\n+\n+    Component[] children = parent.getComponents();\n+\n+    if (isHorizontalIn(parent))\n+      {\n+        \n+        // sum up preferred widths of components, find maximum of preferred\n+        // heights\n+        for (int index = 0; index < children.length; index++)\n+          {\n+            Component comp = children[index];\n+            Dimension sz = comp.getMaximumSize();\n+            x += sz.width;\n+            y = Math.max(y, sz.height);\n+          }\n+      }\n+    else\n+      {\n+        // sum up preferred heights of components, find maximum of\n+        //  preferred widths\n+        for (int index = 0; index < children.length; index++)\n+          {\n+            Component comp = children[index];\n+            Dimension sz = comp.getMaximumSize();\n+            y += sz.height;\n+            x = Math.max(x, sz.width);\n+          }\n+      } \n+    return new Dimension(x, y);\n   }\n }"}, {"sha": "5f6a28d86e8a82e8dfd00b5d9afadd684c00dfc2", "filename": "libjava/javax/swing/ButtonGroup.java", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FButtonGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FButtonGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FButtonGroup.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -42,19 +42,18 @@\n import java.util.Vector;\n \n \n-public class ButtonGroup\n-  implements Serializable\n+/**\n+ * DOCUMENT ME!\n+ */\n+public class ButtonGroup implements Serializable\n {\n+  /** DOCUMENT ME! */\n   private static final long serialVersionUID = 4259076101881721375L;\n \n-  /**\n-   * The buttons added to this button group.\n-   */\n+  /** The buttons added to this button group. */\n   protected Vector buttons = new Vector();\n \n-  /**\n-   * The currently selected button model.\n-   */\n+  /** The currently selected button model. */\n   ButtonModel sel;\n \n   /**\n@@ -99,17 +98,24 @@ public Enumeration getElements()\n   /**\n    * Returns the currently selected button model.\n    *\n-   * @return the currently selected button model,\n-   * null if none was selected yet\n+   * @return the currently selected button model, null if none was selected\n+   *         yet\n    */\n   public ButtonModel getSelection()\n   {\n     return sel;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param m DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   */\n   AbstractButton FindButton(ButtonModel m)\n   {\n-    for (int i = 0;i < buttons.size(); i++)\n+    for (int i = 0; i < buttons.size(); i++)\n       {\n \tAbstractButton a = (AbstractButton) buttons.get(i);\n \tif (a.getModel() == m)\n@@ -119,46 +125,40 @@ AbstractButton FindButton(ButtonModel m)\n   }\n \n   /**\n-   * Sets the currently selected button model. Only one button of a group\n-   * can be selected at a time.\n+   * Sets the currently selected button model. Only one button of a group can\n+   * be selected at a time.\n    *\n    * @param m the model to select\n    * @param b true if this button is to be selected, false otherwise\n    */\n   public void setSelected(ButtonModel m, boolean b)\n   {\n-    if ((m == sel) && (b == true))\n-      {\n-\t// clicked on same item twice.\n-\tSystem.out.println(\"PRESSED TWICE:\" + m + \", sel=\" + sel);\n-\treturn;\n-      }\n+    if ((sel != m || b) && (! b || sel == m))\n+      return;\n \n-    if (sel != null)\n+    if (b && sel != m)\n       {\n-\tSystem.out.println(\"DESELECTING: \" + sel);\n-\tsel.setSelected(! b);\n-\n-\tAbstractButton but = FindButton(sel);\n-\tif (but != null)\n-\t  {\n-\t    System.out.println(\"REPAINT-REQUEST: \" + but.text);\n-\t    //but.revalidate();\n-\t    but.repaint();\n-\t  }\n+\tButtonModel old = sel;\n+\tsel = m;\n+\n+\tif (old != null)\n+\t  old.setSelected(false);\n+\tAbstractButton button = FindButton(old);\n+\tif (button != null)\n+\t  button.repaint();\n       }\n-    else\n-      System.out.println(\"NO SELECTION YET\");\n-\n-    sel = m;\n+    else if (! b && sel == m)\n+      m.setSelected(true);\n   }\n \n   /**\n-   * Checks if the given <code>ButtonModel</code> is selected\n-   * in this button group.\n+   * Checks if the given <code>ButtonModel</code> is selected in this button\n+   * group.\n+   *\n+   * @param m DOCUMENT ME!\n    *\n-   * @return true of given <code>ButtonModel</code> is selected,\n-   * false otherwise\n+   * @return true of given <code>ButtonModel</code> is selected, false\n+   *         otherwise\n    */\n   public boolean isSelected(ButtonModel m)\n   {"}, {"sha": "30813175a52ddee9fc371ee2beaa1470f9a74cf2", "filename": "libjava/javax/swing/ComboBoxEditor.java", "status": "modified", "additions": 51, "deletions": 44, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FComboBoxEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FComboBoxEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FComboBoxEditor.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -42,49 +42,56 @@\n \n /**\n  * ComboBoxEditor\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ *\n+ * @author Andrew Selkirk\n+ * @author Olga Rodimina\n+ * @version 1.0\n  */\n-public interface ComboBoxEditor {\n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * getEditorComponent\n-\t * @returns Component\n-\t */\n-\tComponent getEditorComponent();\n-\n-\t/**\n-\t * setItem\n-\t * @param item TODO\n-\t */\n-\tvoid setItem(Object item);\n-\n-\t/**\n-\t * getItem\n-\t * @returns Object\n-\t */\n-\tObject getItem();\n-\n-\t/**\n-\t * selectAll\n-\t */\n-\tvoid selectAll();\n-\n-\t/**\n-\t * addActionListener\n-\t * @param listener TODO\n-\t */\n-\tvoid addActionListener(ActionListener listener);\n-\n-\t/**\n-\t * removeActionListener\n-\t * @param listener TODO\n-\t */\n-\tvoid removeActionListener(ActionListener listener);\n-\n-\n+public interface ComboBoxEditor\n+{\n+  /**\n+   * This method returns component that will be used by the combo box to\n+   * display/edit currently selected item in the combo box.\n+   *\n+   * @return Component that will be used by the combo box to display/edit\n+   *         currently selected item\n+   */\n+  Component getEditorComponent();\n+\n+  /**\n+   * Sets item that should be editted when any editting operation is performed\n+   * by the user. The value is always equal to the currently selected value\n+   * in the combo box. Thus, whenever a different value is selected from the\n+   * combo box list then this method should be called to change editting item\n+   * to the new selected item.\n+   *\n+   * @param selectedItem item that is currently selected in the combo box\n+   */\n+  void setItem(Object item);\n+\n+  /**\n+   * This method returns item that is currently editable.\n+   *\n+   * @return Item in the combo box that is currently editable\n+   */\n+  Object getItem();\n+\n+  /**\n+   * selectAll\n+   */\n+  void selectAll();\n+\n+  /**\n+   * This method adds specified ActionListener to this ComboBoxEditor.\n+   *\n+   * @param listener\n+   */\n+  void addActionListener(ActionListener listener);\n+\n+  /**\n+   * This method removes given ActionListener from this ComboBoxEditor.\n+   *\n+   * @param listener TODO\n+   */\n+  void removeActionListener(ActionListener listener);\n } // ComboBoxEditor"}, {"sha": "c3b59bda6300e6818ba0b0df5fe42967f5704538", "filename": "libjava/javax/swing/ComboBoxModel.java", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FComboBoxModel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -37,28 +37,32 @@\n \n package javax.swing;\n \n+\n /**\n- * ComboBoxModel\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ * ComboBoxModel is a data model for JComboBox. This model keeps\n+ * track of elements contained in the JComboBox as well as the current\n+ * combo box selection. Whenever selection in the JComboBox changes, the\n+ * ComboBoxModel should fire ListDataEvents to ComboBox's ListDataListeners.\n+ *\n+ * @author        Andrew Selkirk\n+ * @version        1.0\n  */\n-public interface ComboBoxModel extends ListModel {\n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * setSelectedItem\n-\t * @param item TODO\n-\t */\n-\tvoid setSelectedItem(Object item);\n-\n-\t/**\n-\t * getSelectedItem\n-\t * @returns Object\n-\t */\n-\tObject getSelectedItem();\n-\n+public interface ComboBoxModel extends ListModel\n+{\n+  /**\n+   * This method sets the selected item in the combo box. Class\n+   * implementing this interface should fire ListDataEvents to\n+   * all registered ListDataListeners to indicated that the\n+   * selection has changed.\n+   *\n+   * @param item item in the combo box that should be selected\n+   */\n+  void setSelectedItem(Object item);\n \n+  /**\n+   * The method returns currently selected item in the combo box\n+   *\n+   * @returns item that is currently selected in the combo box.\n+   */\n+  Object getSelectedItem();\n } // ComboBoxModel"}, {"sha": "4c7c24772f96a50b1281780120c10d22eff5fcd5", "filename": "libjava/javax/swing/DefaultButtonModel.java", "status": "modified", "additions": 142, "deletions": 125, "changes": 267, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,4 +1,4 @@\n-/* DefaultButtonModel.java -- \n+/* DefaultButtonModel.java --\n    Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -44,87 +44,103 @@\n import java.awt.event.KeyEvent;\n import java.io.Serializable;\n import java.util.EventListener;\n-\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ChangeListener;\n import javax.swing.event.EventListenerList;\n \n+\n /**\n  * The purpose of this class is to model the dynamic state of an abstract\n  * button. The concrete button type holding this state may be a a \"toggle\"\n  * button (checkbox, radio button) or a \"push\" button (menu button, button).\n- * \n- * If the model is disabled, only the \"selected\" property can be changed.\n- * An attempt to change the \"armed\", \"rollover\" or \"pressed\" properties \n- * while the model is disabled will be blocked.\n- *\n- * Any successful (non-blocked) change to the model's properties will\n- * trigger the firing of a ChangeEvent.\n- *\n- * Any change to the \"selected\" property will trigger the firing of an\n- * ItemEvent in addition to ChangeEvent. This is true whether the model is\n- * enabled or not.\n- *\n- * One other state change is special: the transition from \"enabled, armed\n- * and pressd\" to \"enabled, armed and not-pressed\". This is considered the\n- * \"trailing edge\" of a successful mouse click, and therefore fires an \n- * ActionEvent in addition to a ChangeEvent.\n+ * If the model is disabled, only the \"selected\" property can be changed. An\n+ * attempt to change the \"armed\", \"rollover\" or \"pressed\" properties  while\n+ * the model is disabled will be blocked. Any successful (non-blocked) change\n+ * to the model's properties will trigger the firing of a ChangeEvent. Any\n+ * change to the \"selected\" property will trigger the firing of an ItemEvent\n+ * in addition to ChangeEvent. This is true whether the model is enabled or\n+ * not. One other state change is special: the transition from \"enabled,\n+ * armed and pressd\" to \"enabled, armed and not-pressed\". This is considered\n+ * the \"trailing edge\" of a successful mouse click, and therefore fires an\n+ * ActionEvent in addition to a ChangeEvent. In all other respects this class\n+ * is just a container of boolean flags.\n  *\n- * In all other respects this class is just a container of boolean flags.\n- *\n- * @author Graydon Hoare (graydon@redhat.com)\n+ * @author Graydon Hoare (graydon_at_redhat.com)\n  */\n public class DefaultButtonModel implements ButtonModel, Serializable\n {\n+  /** DOCUMENT ME! */\n   static final long serialVersionUID = -5342609566534980231L;\n \n-  /** Indicates that the button is <em>partially</em> committed to being\n-   pressed, but not entirely. This usually happens when a user has pressed\n-   but not yet released the mouse button. */\n+  /**\n+   * Indicates that the button is <em>partially</em> committed to being\n+   * pressed, but not entirely. This usually happens when a user has pressed\n+   * but not yet released the mouse button.\n+   */\n   public static final int ARMED = 1;\n \n-  /** State constant indicating that the button is enabled. Buttons cannot\n-   be pressed or selected unless they are enabled. */\n+  /**\n+   * State constant indicating that the button is enabled. Buttons cannot be\n+   * pressed or selected unless they are enabled.\n+   */\n   public static final int ENABLED = 8;\n \n-  /** State constant indicating that the user is holding down the button.\n-   When this transitions from true to false, an ActionEvent may be fired,\n-   depending on the value of the \"armed\" property.*/\n+  /**\n+   * State constant indicating that the user is holding down the button. When\n+   * this transitions from true to false, an ActionEvent may be fired,\n+   * depending on the value of the \"armed\" property.\n+   */\n   public static final int PRESSED = 4;\n \n-  /** State constant indicating that the mouse is currently positioned over\n-      the button. */\n+  /**\n+   * State constant indicating that the mouse is currently positioned over the\n+   * button.\n+   */\n   public static final int ROLLOVER = 16;\n \n-  /** State constant indicating that the button is selected. This constant\n-      is only meaningful for toggle-type buttons (radio buttons,\n-      checkboxes). */\n+  /**\n+   * State constant indicating that the button is selected. This constant is\n+   * only meaningful for toggle-type buttons (radio buttons, checkboxes).\n+   */\n   public static final int SELECTED = 2;\n \n-  /** Represents the \"state properties\" (armed, enabled, pressed, rollover\n-      and selected) by a bitwise combination of integer constants. */\n+  /**\n+   * Represents the \"state properties\" (armed, enabled, pressed, rollover and\n+   * selected) by a bitwise combination of integer constants.\n+   */\n   protected int stateMask = ENABLED;\n \n-  /** List of ItemListeners, ChangeListeners, and ActionListeners\n-      registered on this model. */\n-  protected EventListenerList listenerList = new EventListenerList();;\n+  /**\n+   * List of ItemListeners, ChangeListeners, and ActionListeners registered on\n+   * this model.\n+   */\n+  protected EventListenerList listenerList = new EventListenerList();\n+  ;\n \n-  /** The single ChangeEvent this model (re)uses to call its\n-      ChangeListeners. */\n+  /** The single ChangeEvent this model (re)uses to call its ChangeListeners. */\n   protected ChangeEvent changeEvent = new ChangeEvent(this);\n \n-  /** The group this model belongs to. Only one button in a group may be\n-      selected at any given time. */\n+  /**\n+   * The group this model belongs to. Only one button in a group may be\n+   * selected at any given time.\n+   */\n   protected ButtonGroup group;\n-  \n-  /** The key code (one of {@link java.awt.event.KeyEvent} VK_*) used to\n-      press this button via a keyboard interface. */\n+\n+  /**\n+   * The key code (one of {@link java.awt.event.KeyEvent} VK_) used to press\n+   * this button via a keyboard interface.\n+   */\n   protected int mnemonic = KeyEvent.VK_UNDEFINED;\n \n-  /** The string used as the \"command\" property of any ActionEvent this\n-      model sends. */\n+  /**\n+   * The string used as the \"command\" property of any ActionEvent this model\n+   * sends.\n+   */\n   protected String actionCommand;\n \n+  /**\n+   * Creates a new DefaultButtonModel object.\n+   */\n   public DefaultButtonModel()\n   {\n   }\n@@ -135,10 +151,10 @@ public DefaultButtonModel()\n    *\n    * @return <code>null</code>\n    */\n-    public Object[] getSelectedObjects()\n-    {\n-\treturn null;\n-    }\n+  public Object[] getSelectedObjects()\n+  {\n+    return null;\n+  }\n \n   /**\n    * Returns a specified class of listeners.\n@@ -151,21 +167,21 @@ public EventListener[] getListeners(Class listenerType)\n   {\n     return listenerList.getListeners(listenerType);\n   }\n-  \n+\n   /**\n-   * Add an ActionListener to the model. Usually only called to subscribe\n-   * an AbstractButton's listener to the model.\n+   * Add an ActionListener to the model. Usually only called to subscribe an\n+   * AbstractButton's listener to the model.\n    *\n    * @param l The listener to add\n    */\n   public void addActionListener(ActionListener l)\n   {\n     listenerList.add(ActionListener.class, l);\n   }\n-  \n+\n   /**\n-   * Remove an ActionListener to the model. Usually only called to\n-   * unsubscribe an AbstractButton's listener to the model.\n+   * Remove an ActionListener to the model. Usually only called to unsubscribe\n+   * an AbstractButton's listener to the model.\n    *\n    * @param l The listener to remove\n    */\n@@ -185,8 +201,8 @@ public ActionListener[] getActionListeners()\n   }\n \n   /**\n-   * Add an ItemListener to the model. Usually only called to subscribe\n-   * an AbstractButton's listener to the model.\n+   * Add an ItemListener to the model. Usually only called to subscribe an\n+   * AbstractButton's listener to the model.\n    *\n    * @param l The listener to add\n    */\n@@ -196,8 +212,8 @@ public void addItemListener(ItemListener l)\n   }\n \n   /**\n-   * Remove an ItemListener to the model. Usually only called to\n-   * unsubscribe an AbstractButton's listener to the model.\n+   * Remove an ItemListener to the model. Usually only called to unsubscribe\n+   * an AbstractButton's listener to the model.\n    *\n    * @param l The listener to remove\n    */\n@@ -217,8 +233,8 @@ public ItemListener[] getItemListeners()\n   }\n \n   /**\n-   * Add a ChangeListener to the model. Usually only called to subscribe\n-   * an AbstractButton's listener to the model.\n+   * Add a ChangeListener to the model. Usually only called to subscribe an\n+   * AbstractButton's listener to the model.\n    *\n    * @param l The listener to add\n    */\n@@ -228,8 +244,8 @@ public void addChangeListener(ChangeListener l)\n   }\n \n   /**\n-   * Remove a ChangeListener to the model. Usually only called to\n-   * unsubscribe an AbstractButton's listener to the model.\n+   * Remove a ChangeListener to the model. Usually only called to unsubscribe\n+   * an AbstractButton's listener to the model.\n    *\n    * @param l The listener to remove\n    */\n@@ -258,97 +274,99 @@ public ChangeListener[] getChangeListeners()\n   public void fireItemStateChanged(ItemEvent e)\n   {\n     ItemListener[] ll = getItemListeners();\n-    \n+\n     for (int i = 0; i < ll.length; i++)\n       ll[i].itemStateChanged(e);\n   }\n \n   /**\n    * Inform each ActionListener in the {@link listenerList} that an\n-   * ActionEvent has occurred. This happens in response to the any change\n-   * to the {@link stateMask} field which makes the enabled, armed and\n-   * pressed properties all simultaneously <code>true</code>.\n+   * ActionEvent has occurred. This happens in response to the any change to\n+   * the {@link stateMask} field which makes the enabled, armed and pressed\n+   * properties all simultaneously <code>true</code>.\n    *\n    * @param e The ActionEvent to fire\n    */\n   public void fireActionPerformed(ActionEvent e)\n   {\n     ActionListener[] ll = getActionListeners();\n-    \n+\n     for (int i = 0; i < ll.length; i++)\n       ll[i].actionPerformed(e);\n   }\n \n   /**\n-   * Inform each ChangeListener in the {@link listenerList} that a\n-   * ChangeEvent has occurred. This happens in response to the any change\n-   * to a property of the model.\n-   *\n-   * @param event The ChangeEvent to fire\n+   * Inform each ChangeListener in the {@link listenerList} that a ChangeEvent\n+   * has occurred. This happens in response to the any change to a property\n+   * of the model.\n    */\n   public void fireStateChanged()\n   {\n     ChangeListener[] ll = getChangeListeners();\n-    \n+\n     for (int i = 0; i < ll.length; i++)\n       ll[i].stateChanged(changeEvent);\n   }\n \n   /**\n-   * Helper method to fire a ChangeEvent with the model as the event's\n-   * source.\n+   * Helper method to fire a ChangeEvent with the model as the event's source.\n+   *\n+   * @param stateflag DOCUMENT ME!\n+   * @param b DOCUMENT ME!\n    */\n   protected void changeState(int stateflag, boolean b)\n-    {\n+  {\n     int oldstate = stateMask;\n     int newstate;\n \n     if (b)\n       newstate = oldstate | stateflag;\n     else\n-      newstate = oldstate & ~stateflag;\n+      newstate = oldstate & ~ stateflag;\n \n     if (oldstate == newstate)\n       return;\n \n-    if ((stateflag != SELECTED) \n-        && (stateflag != ENABLED)\n+    if ((stateflag != SELECTED) && (stateflag != ENABLED)\n         && (stateMask & ENABLED) == 0)\n       return;\n \n     stateMask = newstate;\n \n     fireStateChanged();\n \n-    if ((oldstate & SELECTED) == 0\n-        && (newstate & SELECTED) == SELECTED)\n-      fireItemStateChanged(new ItemEvent(this, ItemEvent.ITEM_STATE_CHANGED, \n-                                         null, ItemEvent.SELECTED));\n+    if ((oldstate & SELECTED) == 0 && (newstate & SELECTED) == SELECTED)\n+      {\n+\tfireItemStateChanged(new ItemEvent(this, ItemEvent.ITEM_STATE_CHANGED,\n+\t                                   null, ItemEvent.SELECTED));\n+        if (group != null)\n+          group.setSelected(this, true);\n+      }\n \n-    else if ((oldstate & SELECTED) == SELECTED\n-             && (newstate & SELECTED) == 0)\n-      fireItemStateChanged(new ItemEvent(this, ItemEvent.ITEM_STATE_CHANGED, \n-                                         null, ItemEvent.DESELECTED));\n-    \n-    else if (((oldstate & ARMED) == ARMED && (oldstate & PRESSED) == PRESSED)\n-             &&\n-             ((newstate & ARMED) == ARMED && (newstate & PRESSED) == 0))\n+    else if ((oldstate & SELECTED) == SELECTED && (newstate & SELECTED) == 0)\n       {\n-        fireActionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED,\n-                                            actionCommand));\n+\tfireItemStateChanged(new ItemEvent(this, ItemEvent.ITEM_STATE_CHANGED,\n+\t                                   null, ItemEvent.DESELECTED));\n+        if (group != null)\n+          group.setSelected(this, false);\n       }\n-    }\n-  \n+\n+    else if (((oldstate & ARMED) == ARMED && (oldstate & PRESSED) == PRESSED)\n+             && ((newstate & ARMED) == ARMED && (newstate & PRESSED) == 0))\n+      fireActionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED,\n+                                          actionCommand));\n+  }\n+\n   /**\n    * Get the value of the model's \"armed\" property.\n-   * \n-   * @return The current \"armed\" property \n+   *\n+   * @return The current \"armed\" property\n    */\n   public boolean isArmed()\n   {\n     return (stateMask & ARMED) == ARMED;\n   }\n-  \n+\n   /**\n    * Set the value of the model's \"armed\" property.\n    *\n@@ -365,9 +383,9 @@ public void setArmed(boolean a)\n    * @return The current \"enabled\" property.\n    */\n   public boolean isEnabled()\n-    {\n+  {\n     return (stateMask & ENABLED) == ENABLED;\n-    }\n+  }\n \n   /**\n    * Set the value of the model's \"enabled\" property.\n@@ -385,9 +403,9 @@ public void setEnabled(boolean e)\n    * @param p The new \"pressed\" property\n    */\n   public void setPressed(boolean p)\n-    {\t\n+  {\n     changeState(PRESSED, p);\n-    }\n+  }\n \n   /**\n    * Get the value of the model's \"pressed\" property.\n@@ -409,7 +427,6 @@ public void setRollover(boolean r)\n     changeState(ROLLOVER, r);\n   }\n \n-\n   /**\n    * Set the value of the model's \"selected\" property.\n    *\n@@ -436,17 +453,17 @@ public boolean isSelected()\n    * @return The current \"rollover\" property\n    */\n   public boolean isRollover()\n-    {\n+  {\n     return (stateMask & ROLLOVER) == ROLLOVER;\n-    }\n+  }\n \n   /**\n    * Get the value of the model's \"mnemonic\" property.\n    *\n    * @return The current \"mnemonic\" property\n    */\n   public int getMnemonic()\n-  { \n+  {\n     return mnemonic;\n   }\n \n@@ -459,27 +476,27 @@ public void setMnemonic(int key)\n   {\n     if (mnemonic != key)\n       {\n-        mnemonic = key;\n-        fireStateChanged();\n+\tmnemonic = key;\n+\tfireStateChanged();\n       }\n   }\n-  \n+\n   /**\n-   * Set the value of the model's \"actionCommand\" property. This property\n-   * is used as the \"command\" property of the {@link ActionEvent} fired\n-   * from the model.\n+   * Set the value of the model's \"actionCommand\" property. This property is\n+   * used as the \"command\" property of the {@link ActionEvent} fired from the\n+   * model.\n    *\n    * @param s The new \"actionCommand\" property.\n    */\n   public void setActionCommand(String s)\n   {\n     if (actionCommand != s)\n       {\n-        actionCommand = s;\n-        fireStateChanged();\n+\tactionCommand = s;\n+\tfireStateChanged();\n       }\n-  } \n-  \n+  }\n+\n   /**\n    * Returns the current value of the model's \"actionCommand\" property.\n    *\n@@ -491,9 +508,9 @@ public String getActionCommand()\n   }\n \n   /**\n-   * Set the value of the model's \"group\" property. The model is said to be\n-   * a member of the {@link ButtonGroup} held in its \"group\" property, and\n-   * only one model in a given group can have their \"selected\" property be\n+   * Set the value of the model's \"group\" property. The model is said to be a\n+   * member of the {@link ButtonGroup} held in its \"group\" property, and only\n+   * one model in a given group can have their \"selected\" property be\n    * <code>true</code> at a time.\n    *\n    * @param g The new \"group\" property\n@@ -502,8 +519,8 @@ public void setGroup(ButtonGroup g)\n   {\n     if (group != g)\n       {\n-        group = g;\n-        fireStateChanged();\n+\tgroup = g;\n+\tfireStateChanged();\n       }\n   }\n "}, {"sha": "a5546f2954ab3b92f8a24ebccd8c58f430610f3c", "filename": "libjava/javax/swing/DefaultComboBoxModel.java", "status": "modified", "additions": 181, "deletions": 136, "changes": 317, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FDefaultComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FDefaultComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultComboBoxModel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -38,146 +38,191 @@\n package javax.swing;\n \n import java.io.Serializable;\n+import java.util.Arrays;\n import java.util.Vector;\n \n+\n /**\n- * DefaultComboBoxModel\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ * DefaultComboBoxModel is a data model for JComboBox. This model keeps track\n+ * of elements contained in the JComboBox as well as the current combo box\n+ * selection. Whenever selection in the JComboBox changes, the ComboBoxModel\n+ * will fire ListDataEvents to ComboBox's ListDataListeners.\n+ *\n+ * @author Andrew Selkirk\n+ * @author Olga Rodimina\n+ * @version 1.0\n  */\n-public class DefaultComboBoxModel extends AbstractListModel \n-\t\timplements MutableComboBoxModel, Serializable\n+public class DefaultComboBoxModel extends AbstractListModel\n+  implements MutableComboBoxModel, Serializable\n {\n   static final long serialVersionUID = 6698657703676921904L;\n \n-\t//-------------------------------------------------------------\n-\t// Variables --------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * list\n-\t */\n-\tprivate Vector list;\n-\n-\t/**\n-\t * selectedItem\n-\t */\n-\tprivate Object selectedItem;\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Initialization ---------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * Constructor DefaultComboBoxModel\n-\t */\n-\tpublic DefaultComboBoxModel() {\n-\t\t// TODO\n-\t} // DefaultComboBoxModel()\n-\n-\t/**\n-\t * Constructor DefaultComboBoxModel\n-\t * @param items TODO\n-\t */\n-\tpublic DefaultComboBoxModel(Object[] items) {\n-\t\t// TODO\n-\t} // DefaultComboBoxModel()\n-\n-\t/**\n-\t * Constructor DefaultComboBoxModel\n-\t * @param vector TODO\n-\t */\n-\tpublic DefaultComboBoxModel(Vector vector) {\n-\t\t// TODO\n-\t} // DefaultComboBoxModel()\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * addElement\n-\t * @param object TODO\n-\t */\n-\tpublic void addElement(Object object) {\n-\t\t// TODO\n-\t} // addElement()\n-\n-\t/**\n-\t * removeElementAt\n-\t * @param index TODO\n-\t */\n-\tpublic void removeElementAt(int index) {\n-\t\t// TODO\n-\t} // removeElementAt()\n-\n-\t/**\n-\t * insertElementAt\n-\t * @param object TODO\n-\t * @param index TODO\n-\t */\n-\tpublic void insertElementAt(Object object, int index) {\n-\t\t// TODO\n-\t} // insertElementAt()\n-\n-\t/**\n-\t * removeElement\n-\t * @param object TODO\n-\t */\n-\tpublic void removeElement(Object object) {\n-\t\t// TODO\n-\t} // removeElement()\n-\n-\t/**\n-\t * removeAllElements\n-\t */\n-\tpublic void removeAllElements() {\n-\t\t// TODO\n-\t} // removeAllElements()\n-\n-\t/**\n-\t * getSize\n-\t * @returns int\n-\t */\n-\tpublic int getSize() {\n-\t\treturn 0; // TODO\n-\t} // getSize()\n-\n-\t/**\n-\t * setSelectedItem\n-\t * @param object TODO\n-\t */\n-\tpublic void setSelectedItem(Object object) {\n-\t\t// TODO\n-\t} // setSelectedItem()\n-\n-\t/**\n-\t * getSelectedItem\n-\t * @returns Object\n-\t */\n-\tpublic Object getSelectedItem() {\n-\t\treturn null; // TODO\n-\t} // getSelectedItem()\n-\n-\t/**\n-\t * getElementAt\n-\t * @param index TODO\n-\t * @returns Object\n-\t */\n-\tpublic Object getElementAt(int index) {\n-\t\treturn null; // TODO\n-\t} // getElementAt()\n-\n-\t/**\n-\t * getIndexOf\n-\t * @param object TODO\n-\t * @returns int\n-\t */\n-\tpublic int getIndexOf(Object object) {\n-\t\treturn 0; // TODO\n-\t} // getIndexOf()\n-\n-\n-} // DefaultComboBoxModel\n+  /**\n+   * List containing items in the combo box\n+   */\n+  private Vector list;\n+\n+  /**\n+   * Currently selected item in the combo box list\n+   */\n+  private Object selectedItem = null;\n+\n+  /**\n+   * Constructor DefaultComboBoxModel. Create empty JComboBox.\n+   */\n+  public DefaultComboBoxModel()\n+  {\n+    list = new Vector();\n+  }\n+\n+  /**\n+   * Constructs new DefaultComboBoxModel object and initializes its item list\n+   * to values in the given array.\n+   *\n+   * @param items array containing items of the combo box.\n+   */\n+  public DefaultComboBoxModel(Object[] items)\n+  {\n+    list = new Vector(Arrays.asList(items));\n+  }\n+\n+  /**\n+   * Consturcts new DefaultComboBoxModel object and initializes its item list\n+   * to values in the given vector.\n+   *\n+   * @param vector Vector containing items for this combo box.\n+   */\n+  public DefaultComboBoxModel(Vector vector)\n+  {\n+    this.list = vector;\n+  }\n+\n+  /**\n+   * This method adds element to the combo box list. It fires ListDataEvent\n+   * indicating that component was added to the combo box  to all of the\n+   * JComboBox's registered ListDataListeners.\n+   *\n+   * @param object item to add to the combo box list\n+   */\n+  public void addElement(Object object)\n+  {\n+    list.add(object);\n+    fireIntervalAdded(this, list.size(), list.size());\n+  }\n+\n+  /**\n+   * This method removes element at the specified index from the combo box\n+   * list. It fires ListDataEvent indicating that component was removed from\n+   * the combo box list to all of the JComboBox's registered\n+   * ListDataListeners.\n+   *\n+   * @param index index specifying location of the element to remove in the\n+   *        combo box list.\n+   */\n+  public void removeElementAt(int index)\n+  {\n+    list.remove(index);\n+    fireIntervalRemoved(this, index, index);\n+  }\n+\n+  /**\n+   * This method inserts given object to the combo box list at the specified\n+   * index. It fires ListDataEvent indicating that component was inserted to\n+   * the combo box list to all of the JComboBox's registered\n+   * ListDataListeners.\n+   *\n+   * @param object element to insert\n+   * @param index index specifing position in the list where given element\n+   *        should be inserted.\n+   */\n+  public void insertElementAt(Object object, int index)\n+  {\n+    list.insertElementAt(object, index);\n+    fireIntervalAdded(this, index, index);\n+  }\n+\n+  /**\n+   * Removes given object from the combo box list. It fires ListDataEvent\n+   * indicating that component was removed from the combo box list to all of\n+   * the JComboBox's registered ListDataListeners.\n+   *\n+   * @param object Element that will be removed from the combo box list\n+   */\n+  public void removeElement(Object object)\n+  {\n+    int index = getIndexOf(object);\n+    if (index != -1)\n+      removeElementAt(index);\n+  }\n+\n+  /**\n+   * Removes all the items from the JComboBox's item list. It fires\n+   * ListDataEvent indicating that all the elements were removed from the\n+   * combo box list to all of the JComboBox's registered ListDataListeners.\n+   */\n+  public void removeAllElements()\n+  {\n+    int listSize = getSize();\n+    list.clear();\n+    fireIntervalAdded(this, 0, listSize - 1);\n+  }\n+\n+  /**\n+   * Returns number of items in the combo box list\n+   *\n+   * @return number of items in the combo box list\n+   */\n+  public int getSize()\n+  {\n+    return list.size();\n+  }\n+\n+  /**\n+   * Selects given object in the combo box list. This method fires\n+   * ListDataEvent to all registered ListDataListeners of the JComboBox. The\n+   * start and end index of the event is set to -1 to indicate combo box's\n+   * selection has changed, and not its contents.\n+   *\n+   * @param object item to select in the JComboBox\n+   */\n+  public void setSelectedItem(Object object)\n+  {\n+    selectedItem = object;\n+    fireContentsChanged(this, -1, -1);\n+  }\n+\n+  /**\n+   * Returns currently selected item in the combo box list\n+   *\n+   * @return currently selected item in the combo box list\n+   */\n+  public Object getSelectedItem()\n+  {\n+    return selectedItem;\n+  }\n+\n+  /**\n+   * Returns element in the combo box list located at the given index\n+   *\n+   * @param index specifying location of the element in the list\n+   *\n+   * @return return element in the combo box list located at the given index\n+   */\n+  public Object getElementAt(int index)\n+  {\n+    return list.elementAt(index);\n+  }\n+\n+  /**\n+   * Returns index of the specified object in the combo box list.\n+   *\n+   * @param object element to look for in the combo box list .\n+   *\n+   * @return Index specifying position of the specified element in combo box\n+   *         list.\n+   */\n+  public int getIndexOf(Object object)\n+  {\n+    return list.indexOf(object);\n+  }\n+}"}, {"sha": "fe4b3d0704826b385a9eddfcf749dfeaebcae59a", "filename": "libjava/javax/swing/DefaultListCellRenderer.java", "status": "modified", "additions": 89, "deletions": 28, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -41,16 +41,18 @@\n import java.awt.Rectangle;\n import java.io.Serializable;\n import javax.swing.border.Border;\n+import javax.swing.border.EmptyBorder;\n \n \n /**\n- * DefaultListCellRenderer\n+ * DefaultListCellRenderer. This class is responsible for rendering  list\n+ * cells.\n  *\n  * @author Andrew Selkirk\n  * @version 1.0\n  */\n-public class DefaultListCellRenderer \n-  extends JLabel implements ListCellRenderer, Serializable\n+public class DefaultListCellRenderer extends JLabel implements ListCellRenderer,\n+                                                               Serializable\n {\n   static final long serialVersionUID = 7708947179685189462L;\n \n@@ -62,19 +64,22 @@ public UIResource()\n     }\n   }\n \n-  /** noFocusBorder */\n-  protected static Border noFocusBorder = null; // TODO\n+  /**\n+   * This border is used whenever renderer doesn't have a focus.\n+   */\n+  protected static Border noFocusBorder = new EmptyBorder(1, 1, 1, 1);\n \n   /**\n    * getListCellRendererComponent\n    *\n-   * @param list TODO\n-   * @param value TODO\n-   * @param index TODO\n-   * @param isSelected TODO\n-   * @param cellHasFocus TODO\n+   * @param list JList list for the 'value'\n+   * @param value object that should be rendered in the cell\n+   * @param index index of the cell\n+   * @param isSelected draw cell highlighted if isSelected is true\n+   * @param cellHasFocus draw focus rectangle around cell if the cell has\n+   *        focus\n    *\n-   * @return Component\n+   * @return Component that will be painted to the desired cell.\n    */\n   public Component getListCellRendererComponent(JList list, Object value,\n                                                 int index, boolean isSelected,\n@@ -86,31 +91,87 @@ public Component getListCellRendererComponent(JList list, Object value,\n \n     if (isSelected)\n       {\n-        setBackground(list.getSelectionBackground());\n-        setForeground(list.getSelectionForeground());\n+\tsetBackground(list.getSelectionBackground());\n+\tsetForeground(list.getSelectionForeground());\n       }\n     else\n       {\n-        setBackground(list.getBackground());\n-        setForeground(list.getForeground());\n+\tsetBackground(list.getBackground());\n+\tsetForeground(list.getForeground());\n       }\n \n     setEnabled(list.isEnabled());\n     setFont(list.getFont());\n+\n+    // Use focusCellHighlightBorder when renderer has focus and \n+    // noFocusBorder otherwise\n+    \n+    if (cellHasFocus)\n+      setBorder(UIManager.getBorder(\"List.focusCellHighlightBorder\"));\n+    else\n+      setBorder(noFocusBorder);\n+\n     return this;\n   }\n \n-  public void validate() {}\n-  public void revalidate() {}\n-  public void repaint(long tm, int x, int y, int w, int h) {}\n-  public void repaint(Rectangle rect) {}\n-  protected void firePropertyChange(String propertyName, Object oldValue, Object newValue){}\n-  public void firePropertyChange(String propertyName, byte oldValue, byte newValue) {}\n-  public void firePropertyChange(String propertyName, char oldValue, char newValue) {} \n-  public void firePropertyChange(String propertyName, short oldValue, short newValue) {}\n-  public void firePropertyChange(String propertyName, int oldValue, int newValue) {}\n-  public void firePropertyChange(String propertyName, long oldValue, long newValue) {}\n-  public void firePropertyChange(String propertyName, float oldValue, float newValue) {}\n-  public void firePropertyChange(String propertyName, double oldValue, double newValue) {}\n-  public void firePropertyChange(String propertyName, boolean oldValue, boolean newValue) {}\n+  public void validate()\n+  {\n+  }\n+\n+  public void revalidate()\n+  {\n+  }\n+\n+  public void repaint(long tm, int x, int y, int w, int h)\n+  {\n+  }\n+\n+  public void repaint(Rectangle rect)\n+  {\n+  }\n+\n+  protected void firePropertyChange(String propertyName, Object oldValue,\n+                                    Object newValue)\n+  {\n+  }\n+\n+  public void firePropertyChange(String propertyName, byte oldValue,\n+                                 byte newValue)\n+  {\n+  }\n+\n+  public void firePropertyChange(String propertyName, char oldValue,\n+                                 char newValue)\n+  {\n+  }\n+\n+  public void firePropertyChange(String propertyName, short oldValue,\n+                                 short newValue)\n+  {\n+  }\n+\n+  public void firePropertyChange(String propertyName, int oldValue,\n+                                 int newValue)\n+  {\n+  }\n+\n+  public void firePropertyChange(String propertyName, long oldValue,\n+                                 long newValue)\n+  {\n+  }\n+\n+  public void firePropertyChange(String propertyName, float oldValue,\n+                                 float newValue)\n+  {\n+  }\n+\n+  public void firePropertyChange(String propertyName, double oldValue,\n+                                 double newValue)\n+  {\n+  }\n+\n+  public void firePropertyChange(String propertyName, boolean oldValue,\n+                                 boolean newValue)\n+  {\n+  }\n }"}, {"sha": "4b8ddc355d37d5dc962869df5c74688df7ae8e0c", "filename": "libjava/javax/swing/DefaultListSelectionModel.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -264,7 +264,7 @@ public void setLeadSelectionIndex(int leadIndex)\n       { \n         end = i;\n       }\n-    fireSelectionValueChanged(beg, end, valueIsAdjusting);    \n+    fireValueChanged(beg, end, valueIsAdjusting);    \n   }\n \n   /**\n@@ -409,7 +409,7 @@ public void addSelectionInterval(int index0, int index1)\n     int hi = Math.max(index0, index1);\n \n     sel.set(lo, hi+1);\n-    fireSelectionValueChanged(lo, hi, valueIsAdjusting);\n+    fireValueChanged(lo, hi, valueIsAdjusting);\n   }\n \n \n@@ -429,7 +429,7 @@ public void removeSelectionInterval(int index0,\n     int lo = Math.min(index0, index1);\n     int hi = Math.max(index0, index1);\n     sel.clear(lo, hi+1); \n-    fireSelectionValueChanged(lo, hi, valueIsAdjusting);\n+    fireValueChanged(lo, hi, valueIsAdjusting);\n   }\n \n   /**\n@@ -439,7 +439,7 @@ public void clearSelection()\n   {\n     int sz = sel.size();\n     sel.clear();\n-    fireSelectionValueChanged(0, sz, valueIsAdjusting);\n+    fireValueChanged(0, sz, valueIsAdjusting);\n   }\n   \n   /**\n@@ -460,7 +460,7 @@ public void setSelectionInterval(int index0, int index1)\n     int lo = Math.min(index0, index1);\n     int hi = Math.max(index0, index1);\n     sel.set(lo, hi+1);\n-    fireSelectionValueChanged(lo, hi, valueIsAdjusting);\n+    fireValueChanged(lo, hi, valueIsAdjusting);\n   }\n \n   /**\n@@ -522,8 +522,8 @@ public void removeIndexInterval(int index0,\n    * @param isAdjusting Whether this change is part of a seqence of adjustments\n    * made to the selection, such as during interactive scrolling\n    */\n-  public void fireSelectionValueChanged(int firstIndex, int lastIndex,\n-                                        boolean isAdjusting)\n+  protected void fireValueChanged(int firstIndex, int lastIndex,\n+\t\t\t\t  boolean isAdjusting)\n   {\n     ListSelectionEvent evt = new ListSelectionEvent(this, firstIndex,\n                                                     lastIndex, isAdjusting);"}, {"sha": "c737ae4db95ec8c4da25451bc547380899308322", "filename": "libjava/javax/swing/InputMap.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FInputMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FInputMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FInputMap.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -89,9 +89,9 @@ public Object get(KeyStroke keystroke)\n   {\n     Object result = inputMap.get(keystroke);\n \n-    if (result == null)\n-\t\t\tresult = parent.get(keystroke);\n-\t\treturn result;\n+    if (result == null && parent != null)\n+      result = parent.get(keystroke);\n+    return result;\n   }\n \n \t/**"}, {"sha": "8490c0b91c0e942d126dfb61f8d1b11456b0daa4", "filename": "libjava/javax/swing/JCheckBox.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBox.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -114,7 +114,7 @@ public AccessibleContext getAccessibleContext()\n     }\n   \n   /**\n-   * Returns a string that specifies the name of the L&amp;F class\n+   * Returns a string that specifies the name of the Look and Feel class\n    * that renders this component.\n    */\n     public String getUIClassID()"}, {"sha": "6ba70ce99bafe63d9ce4a8d94da6f09f7bed3f8e", "filename": "libjava/javax/swing/JColorChooser.java", "status": "modified", "additions": 635, "deletions": 297, "changes": 932, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJColorChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJColorChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJColorChooser.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -35,326 +35,538 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package javax.swing;\n \n+import java.awt.AWTError;\n+import java.awt.BorderLayout;\n import java.awt.Color;\n import java.awt.Component;\n+import java.awt.Dialog;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.io.IOException;\n import java.io.ObjectOutputStream;\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n import javax.accessibility.AccessibleRole;\n import javax.swing.colorchooser.AbstractColorChooserPanel;\n+import javax.swing.colorchooser.ColorChooserComponentFactory;\n import javax.swing.colorchooser.ColorSelectionModel;\n+import javax.swing.colorchooser.DefaultColorSelectionModel;\n import javax.swing.plaf.ColorChooserUI;\n \n+\n /**\n- * JColorChooser\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ * The JColorChooser is a Swing widget that offers users different ways to\n+ * select a color. By default, three different panels are presented to the\n+ * user that are capable of changing the selected color. There are three ways\n+ * to utilize JColorChooser. The first is to build a JColorChooser and add it\n+ * to the content pane. The second is to use the createDialog method to\n+ * create a JDialog that holds a JColorChooser. The third is to show a\n+ * JColorChooser in a JDialog directly using the showDialog method.\n  */\n-public class JColorChooser extends JComponent implements Accessible {\n-\n+public class JColorChooser extends JComponent implements Accessible\n+{\n+  /** DOCUMENT ME! */\n   private static final long serialVersionUID = 9168066781620640889L;\n-  \n-\t//-------------------------------------------------------------\n-\t// Classes ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * AccessibleJColorChooser\n-\t */\n-\tprotected class AccessibleJColorChooser extends JComponent.AccessibleJComponent {\n-\n-\t  private static final long serialVersionUID = -2038297864782299082L;\n-  \n-\t\t//-------------------------------------------------------------\n-\t\t// Variables --------------------------------------------------\n-\t\t//-------------------------------------------------------------\n-\n-\n-\t\t//-------------------------------------------------------------\n-\t\t// Initialization ---------------------------------------------\n-\t\t//-------------------------------------------------------------\n-\n-\t\t/**\n-\t\t * Constructor AccessibleJColorChooser\n-\t\t * @param component TODO\n-\t\t */\n-\t  protected AccessibleJColorChooser()\n+\n+  /**\n+   * AccessibleJColorChooser\n+   */\n+  protected class AccessibleJColorChooser\n+    extends JComponent.AccessibleJComponent\n+  {\n+    /** DOCUMENT ME! */\n+    private static final long serialVersionUID = -2038297864782299082L;\n+\n+    /**\n+     * Constructor AccessibleJColorChooser\n+     */\n+    protected AccessibleJColorChooser()\n+    {\n+    }\n+\n+    /**\n+     * getAccessibleRole\n+     *\n+     * @return AccessibleRole\n+     */\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.COLOR_CHOOSER;\n+    } // getAccessibleRole()\n+  } // AccessibleJColorChooser\n+\n+  /** The model used with the JColorChooser. */\n+  private ColorSelectionModel selectionModel;\n+\n+  /** The preview panel associated with the JColorChooser. */\n+  private JComponent previewPanel;\n+\n+  /**\n+   * The set of AbstractColorChooserPanels associated with the JColorChooser.\n+   */\n+  private AbstractColorChooserPanel[] chooserPanels;\n+\n+  /** A Drag and Drop property. */\n+  private boolean dragEnabled;\n+\n+  /**\n+   * The property fired by the JColorChooser when the selectionModel property\n+   * changes.\n+   */\n+  public static final String SELECTION_MODEL_PROPERTY = \"selectionModel\";\n+\n+  /**\n+   * The property fired by the JColorChooser when the previewPanel property\n+   * changes.\n+   */\n+  public static final String PREVIEW_PANEL_PROPERTY = \"previewPanel\";\n+\n+  /**\n+   * The property fired by the JColorChooser when the chooserPanels property\n+   * changes.\n+   */\n+  public static final String CHOOSER_PANELS_PROPERTY = \"chooserPanels\";\n+\n+  /** accessibleContext */\n+  protected AccessibleContext accessibleContext;\n+\n+  /**\n+   * This method creates a new JColorChooser with the default initial color.\n+   */\n+  public JColorChooser()\n+  {\n+    this(new DefaultColorSelectionModel());\n+  } // JColorChooser()\n+\n+  /**\n+   * This method creates a new JColorChooser with the given initial color.\n+   *\n+   * @param initial The initial color.\n+   */\n+  public JColorChooser(Color initial)\n+  {\n+    this(new DefaultColorSelectionModel(initial));\n+  } // JColorChooser()\n+\n+  /**\n+   * This method creates a new JColorChooser with the given model. The model\n+   * will dictate what the initial color for the JColorChooser is.\n+   *\n+   * @param model The Model to use with the JColorChooser.\n+   */\n+  public JColorChooser(ColorSelectionModel model)\n+  {\n+    if (model == null)\n+      model = new DefaultColorSelectionModel();\n+    selectionModel = model;\n+    updateUI();\n+  } // JColorChooser()\n+\n+  /**\n+   * This method sets the current color for the JColorChooser.\n+   *\n+   * @param color The new color for the JColorChooser.\n+   */\n+  public void setColor(Color color)\n+  {\n+    if (color != null)\n+      selectionModel.setSelectedColor(color);\n+  } // setColor()\n+\n+  /**\n+   * This method sets the current color for the JColorChooser using RGB\n+   * values.\n+   *\n+   * @param r The red value.\n+   * @param g The green value.\n+   * @param b The blue value.\n+   */\n+  public void setColor(int r, int g, int b)\n+  {\n+    selectionModel.setSelectedColor(new Color(r, g, b));\n+  } // setColor()\n+\n+  /**\n+   * This method sets the current color for the JColorChooser using the\n+   * integer value. Bits 0-7 represent the blue value. Bits 8-15 represent\n+   * the green value. Bits 16-23 represent the red value.\n+   *\n+   * @param color The new current color of the JColorChooser.\n+   */\n+  public void setColor(int color)\n+  {\n+    setColor(new Color(color, false));\n+  } // setColor()\n+\n+  /**\n+   * This method shows a JColorChooser inside a JDialog. The JDialog will\n+   * block until it is hidden. The JDialog comes with three buttons: OK,\n+   * Cancel, and Reset. Pressing OK or Cancel hide the JDialog. Pressing\n+   * Reset will reset the JColorChooser to its initial value.\n+   *\n+   * @param component The Component that parents the JDialog.\n+   * @param title The title displayed in the JDialog.\n+   * @param initial The initial color.\n+   *\n+   * @return The selected color.\n+   */\n+  public static Color showDialog(Component component, String title,\n+                                 Color initial)\n+  {\n+    JColorChooser choose = new JColorChooser(initial);\n+\n+    JDialog dialog = createDialog(component, title, true, choose, null, null);\n+\n+    dialog.getContentPane().add(choose);\n+    dialog.pack();\n+    dialog.show();\n+\n+    return choose.getColor();\n+  } // showDialog()\n+\n+  /**\n+   * This is a helper method to make the given JDialog block until it is\n+   * hidden.\n+   *\n+   * @param dialog The JDialog to block.\n+   */\n+  private static void makeModal(JDialog dialog)\n+  {\n+    try\n+      {\n+\tsynchronized (dialog)\n \t  {\n+\t    while (dialog.isVisible())\n+\t      dialog.wait();\n \t  }\n+      }\n+    catch (InterruptedException e)\n+      {\n+      }\n+  }\n+\n+  /**\n+   * This is a helper method to find the first Frame or Dialog ancestor of the\n+   * given Component.\n+   *\n+   * @param c The Component to find ancestors for.\n+   *\n+   * @return A Frame or Dialog ancestor. Null if none are found.\n+   */\n+  private static Component findParent(Component c)\n+  {\n+    Component parent = SwingUtilities.getAncestorOfClass(Frame.class, c);\n+    if (parent != null)\n+      return parent;\n+    parent = SwingUtilities.getAncestorOfClass(Dialog.class, c);\n+    return parent;\n+  }\n+\n+  /**\n+   * This method will take the given JColorChooser and place it in a JDialog\n+   * with the given modal property. Three buttons are displayed in the\n+   * JDialog: OK, Cancel and Reset. If OK or Cancel are pressed, the JDialog\n+   * is hidden. If Reset is pressed, then the JColorChooser will take on its\n+   * default color value. The given okListener will be registered to the OK\n+   * button and the cancelListener will be registered to the Cancel button.\n+   * If the modal property is set, then the JDialog will block until it is\n+   * hidden.\n+   *\n+   * @param component The Component that will parent the JDialog.\n+   * @param title The title displayed in the JDialog.\n+   * @param modal The modal property.\n+   * @param chooserPane The JColorChooser to place in the JDialog.\n+   * @param okListener The ActionListener to register to the OK button.\n+   * @param cancelListener The ActionListener to register to the Cancel\n+   *        button.\n+   *\n+   * @return A JDialog with the JColorChooser inside of it.\n+   *\n+   * @throws AWTError If the component is not a suitable parent.\n+   */\n+  public static JDialog createDialog(Component component, String title,\n+                                     boolean modal, JColorChooser chooserPane,\n+                                     ActionListener okListener,\n+                                     ActionListener cancelListener)\n+  {\n+    Component parent = findParent(component);\n+    if (parent == null)\n+      throw new AWTError(\"No suitable parent found for Component.\");\n+    JDialog dialog;\n+    if (parent instanceof Frame)\n+      dialog = new ModalDialog((Frame) parent, title);\n+    else\n+      dialog = new ModalDialog((Dialog) parent, title);\n+    dialog.setModal(modal);\n+\n+    dialog.getContentPane().setLayout(new BorderLayout());\n+\n+    JPanel panel = new JPanel();\n+    panel.setLayout(new FlowLayout());\n+\n+    ActionListener al = new DefaultOKCancelListener(dialog);\n+\n+    JButton ok = new JButton(\"OK\");\n+    ok.addActionListener(okListener);\n+    ok.addActionListener(al);\n+\n+    JButton cancel = new JButton(\"Cancel\");\n+    cancel.addActionListener(cancelListener);\n+    cancel.addActionListener(al);\n+\n+    JButton reset = new JButton(\"Reset\");\n+    reset.addActionListener(new DefaultResetListener(chooserPane));\n+\n+    dialog.getContentPane().add(chooserPane, BorderLayout.NORTH);\n+\n+    panel.add(ok);\n+    panel.add(cancel);\n+    panel.add(reset);\n+\n+    dialog.getContentPane().add(panel, BorderLayout.SOUTH);\n+\n+    return dialog;\n+  } // createDialog()\n+\n+  /**\n+   * This method returns the UI Component used for this JColorChooser.\n+   *\n+   * @return The UI Component for this JColorChooser.\n+   */\n+  public ColorChooserUI getUI()\n+  {\n+    return (ColorChooserUI) ui;\n+  } // getUI()\n \n-\t\t/**\n-\t\t * getAccessibleRole\n-\t\t * @returns AccessibleRole\n-\t\t */\n-\t\tpublic AccessibleRole getAccessibleRole() {\n-\t\t\treturn AccessibleRole.COLOR_CHOOSER;\n-\t\t} // getAccessibleRole()\n-\n-\n-\t} // AccessibleJColorChooser\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Variables --------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * uiClassID\n-\t */\n-\tprivate static final String uiClassID = \"ColorChooserUI\";\n-\n-\t/**\n-\t * selectionModel\n-\t */\n-\tprivate ColorSelectionModel selectionModel;\n-\n-\t/**\n-\t * previewPanel\n-\t */\n-\tprivate JComponent previewPanel;\n-\n-\t/**\n-\t * chooserPanels\n-\t */\n-\tprivate AbstractColorChooserPanel[] chooserPanels;\n-\n-\t/**\n-\t * SELECTION_MODEL_PROPERTY\n-\t */\n-\tpublic static final String SELECTION_MODEL_PROPERTY = \"selectionModel\";\n-\n-\t/**\n-\t * PREVIEW_PANEL_PROPERTY\n-\t */\n-\tpublic static final String PREVIEW_PANEL_PROPERTY = \"previewPanel\";\n-\n-\t/**\n-\t * CHOOSER_PANELS_PROPERTY\n-\t */\n-\tpublic static final String CHOOSER_PANELS_PROPERTY = \"chooserPanels\";\n-\n-\t/**\n-\t * accessibleContext\n-\t */\n-\tprotected AccessibleContext accessibleContext;\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Initialization ---------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * Constructor JColorChooser\n-\t */\n-\tpublic JColorChooser() {\n-\t\t// TODO\n-\t} // JColorChooser()\n-\n-\t/**\n-\t * Constructor JColorChooser\n-\t * @param initial TODO\n-\t */\n-\tpublic JColorChooser(Color initial) {\n-\t\t// TODO\n-\t} // JColorChooser()\n-\n-\t/**\n-\t * Constructor JColorChooser\n-\t * @param model TODO\n-\t */\n-\tpublic JColorChooser(ColorSelectionModel model) {\n-\t\t// TODO\n-\t} // JColorChooser()\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * writeObject\n-\t * @param stream TODO\n-\t * @exception IOException TODO\n-\t */\n-\tprivate void writeObject(ObjectOutputStream stream) throws IOException {\n-\t\t// TODO\n-\t} // writeObject()\n-\n-\t/**\n-\t * setColor\n-\t * @param color TODO\n-\t */\n-\tpublic void setColor(Color color) {\n-\t\t// TODO\n-\t} // setColor()\n-\n-\t/**\n-\t * setColor\n-\t * @param r TODO\n-\t * @param g TODO\n-\t * @param b TODO\n-\t */\n-\tpublic void setColor(int r, int g, int b) {\n-\t\t// TODO\n-\t} // setColor()\n-\n-\t/**\n-\t * setColor\n-\t * @param color TODO\n-\t */\n-\tpublic void setColor(int color) {\n-\t\t// TODO\n-\t} // setColor()\n-\n-\t/**\n-\t * showDialog\n-\t * @param component TODO\n-\t * @param title TODO\n-\t * @param initial TODO\n-\t * @returns Color\n-\t */\n-\tpublic static Color showDialog(Component component, String title,\n-\t\t\tColor initial) {\n-\t\treturn null; // TODO\n-\t} // showDialog()\n-\n-\t/**\n-\t * createDialog\n-\t * @param component TODO\n-\t * @param title TODO\n-\t * @param modal TODO\n-\t * @param chooserPane TODO\n-\t * @param okListener TODO\n-\t * @param cancelListener TODO\n-\t * @returns JDialog\n-\t */\n-\tpublic static JDialog createDialog(Component component, String title,\n-\t\t\tboolean modal, JColorChooser chooserPane,\n-\t\t\tActionListener okListener, ActionListener cancelListener) {\n-\t\treturn null; // TODO\n-\t} // createDialog()\n-\n-\t/**\n-\t * getUI\n-\t * @returns ColorChooserUI\n-\t */\n-\tpublic ColorChooserUI getUI() {\n-\t\treturn (ColorChooserUI) ui;\n-\t} // getUI()\n-\n-\t/**\n-\t * setUI\n-\t * @param ui TODO\n-\t */\n-\tpublic void setUI(ColorChooserUI ui) {\n-\t\tsuper.setUI(ui);\n-\t} // setUI()\n-\n-\t/**\n-\t * updateUI\n-\t */\n-\tpublic void updateUI() {\n-\t\tsetUI((ColorChooserUI) UIManager.get(this));\n-\t\tinvalidate();\n-\t} // updateUI()\n-\n-\t/**\n-\t * getUIClassID\n-\t * @returns String\n-\t */\n-\tpublic String getUIClassID() {\n-\t\treturn uiClassID;\n-\t} // getUIClassID()\n-\n-\t/**\n-\t * getColor\n-\t * @returns Color\n-\t */\n-\tpublic Color getColor() {\n-\t\treturn null; // TODO\n-\t} // getColor()\n-\n-\t/**\n-\t * setPreviewPanel\n-\t * @param component TODO\n-\t */\n-\tpublic void setPreviewPanel(JComponent component) {\n-\t\t// TODO\n-\t} // setPreviewPanel()\n-\n-\t/**\n-\t * getPreviewPanel\n-\t * @returns JComponent\n-\t */\n-\tpublic JComponent getPreviewPanel() {\n-\t\treturn null; // TODO\n-\t} // getPreviewPanel()\n-\n-\t/**\n-\t * addChooserPanel\n-\t * @param panel TODO\n-\t */\n-\tpublic void addChooserPanel(AbstractColorChooserPanel panel) {\n-\t\t// TODO\n-\t} // addChooserPanel()\n-\n-\t/**\n-\t * removeChooserPanel\n-\t * @param panel TODO\n-\t * @returns AbstractColorChooserPanel\n-\t */\n-\tpublic AbstractColorChooserPanel removeChooserPanel(\n-\t\t\tAbstractColorChooserPanel panel) {\n-\t\treturn null; // TODO\n-\t} // removeChooserPanel()\n-\n-\t/**\n-\t * setChooserPanels\n-\t * @param panels TODO\n-\t */\n-\tpublic void setChooserPanels(AbstractColorChooserPanel[] panels) {\n-\t\t// TODO\n-\t} // setChooserPanels()\n-\n-\t/**\n-\t * getChooserPanels\n-\t * @returns AbstractColorChooserPanel[]\n-\t */\n-\tpublic AbstractColorChooserPanel[] getChooserPanels() {\n-\t\treturn null; // TODO\n-\t} // getChooserPanels()\n-\n-\t/**\n-\t * getSelectionModel\n-\t * @returns ColorSelectionModel\n-\t */\n-\tpublic ColorSelectionModel getSelectionModel() {\n-\t\treturn null; // TODO\n-\t} // getSelectionModel()\n-\n-\t/**\n-\t * setSelectionModel\n-\t * @param model TODO\n-\t */\n-\tpublic void setSelectionModel(ColorSelectionModel model) {\n-\t\t// TODO\n-\t} // setSelectionModel()\n-\n-\t/**\n-\t * paramString\n-\t * @returns String\n-\t */\n-\tprotected String paramString() {\n-\t\treturn null; // TODO\n-\t} // paramString()\n+  /**\n+   * This method sets the UI Component used for this JColorChooser.\n+   *\n+   * @param ui The UI Component to use with this JColorChooser.\n+   */\n+  public void setUI(ColorChooserUI ui)\n+  {\n+    super.setUI(ui);\n+  } // setUI()\n+\n+  /**\n+   * This method resets the UI Component property to the Look and Feel\n+   * default.\n+   */\n+  public void updateUI()\n+  {\n+    setUI((ColorChooserUI) UIManager.getUI(this));\n+    revalidate();\n+  } // updateUI()\n+\n+  /**\n+   * This method returns a String identifier for the UI Class to be used with\n+   * the JColorChooser.\n+   *\n+   * @return The String identifier for the UI Class.\n+   */\n+  public String getUIClassID()\n+  {\n+    return \"ColorChooserUI\";\n+  } // getUIClassID()\n+\n+  /**\n+   * This method returns the current color for the JColorChooser.\n+   *\n+   * @return The current color for the JColorChooser.\n+   */\n+  public Color getColor()\n+  {\n+    return selectionModel.getSelectedColor(); // TODO\n+  } // getColor()\n+\n+  /**\n+   * This method changes the previewPanel property for the JTabbedPane. The\n+   * previewPanel is responsible for indicating the current color of the\n+   * JColorChooser.\n+   *\n+   * @param component The Component that will act as the previewPanel.\n+   */\n+  public void setPreviewPanel(JComponent component)\n+  {\n+    if (component != previewPanel)\n+      {\n+\tJComponent old = previewPanel;\n+\tpreviewPanel = component;\n+\tfirePropertyChange(PREVIEW_PANEL_PROPERTY, old, previewPanel);\n+      }\n+  } // setPreviewPanel()\n+\n+  /**\n+   * This method returns the current previewPanel used with this\n+   * JColorChooser.\n+   *\n+   * @return The current previewPanel.\n+   */\n+  public JComponent getPreviewPanel()\n+  {\n+    return previewPanel; // TODO\n+  } // getPreviewPanel()\n+\n+  /**\n+   * This method adds the given AbstractColorChooserPanel to the list of the\n+   * JColorChooser's chooserPanels.\n+   *\n+   * @param panel The AbstractColorChooserPanel to add.\n+   */\n+  public void addChooserPanel(AbstractColorChooserPanel panel)\n+  {\n+    if (panel == null)\n+      return;\n+    AbstractColorChooserPanel[] old = chooserPanels;\n+    AbstractColorChooserPanel[] newPanels = new AbstractColorChooserPanel[(old == null)\n+                                                                          ? 1\n+                                                                          : old.length\n+                                                                          + 1];\n+    if (old != null)\n+      System.arraycopy(old, 0, newPanels, 0, old.length);\n+    newPanels[newPanels.length - 1] = panel;\n+    chooserPanels = newPanels;\n+    panel.installChooserPanel(this);\n+    firePropertyChange(CHOOSER_PANELS_PROPERTY, old, newPanels);\n+  } // addChooserPanel()\n+\n+  /**\n+   * This method removes the given AbstractColorChooserPanel from the\n+   * JColorChooser's list of chooserPanels.\n+   *\n+   * @param panel The AbstractColorChooserPanel to remove.\n+   *\n+   * @return The AbstractColorChooserPanel that was removed.\n+   */\n+  public AbstractColorChooserPanel removeChooserPanel(AbstractColorChooserPanel panel)\n+  {\n+    int index = -1;\n+    for (int i = 0; i < chooserPanels.length; i++)\n+      if (panel == chooserPanels[i])\n+        {\n+\t  index = i;\n+\t  break;\n+        }\n+\n+    if (index == -1)\n+      return null;\n+\n+    AbstractColorChooserPanel[] old = chooserPanels;\n+    if (chooserPanels.length == 1)\n+      chooserPanels = null;\n+    else\n+      {\n+\tAbstractColorChooserPanel[] newPanels = new AbstractColorChooserPanel[chooserPanels.length\n+\t                                        - 1];\n+\tSystem.arraycopy(chooserPanels, 0, newPanels, 0, index);\n+\tSystem.arraycopy(chooserPanels, index, newPanels, index - 1,\n+\t                 chooserPanels.length - index);\n+\tchooserPanels = newPanels;\n+      }\n+    panel.uninstallChooserPanel(this);\n+    firePropertyChange(CHOOSER_PANELS_PROPERTY, old, chooserPanels);\n+    return panel;\n+  }\n+\n+  /**\n+   * This method sets the chooserPanels property for this JColorChooser.\n+   *\n+   * @param panels The new set of AbstractColorChooserPanels to use.\n+   */\n+  public void setChooserPanels(AbstractColorChooserPanel[] panels)\n+  {\n+    if (panels != chooserPanels)\n+      {\n+\tif (chooserPanels != null)\n+\t  for (int i = 0; i < chooserPanels.length; i++)\n+\t    if (chooserPanels[i] != null)\n+\t      chooserPanels[i].uninstallChooserPanel(this);\n+\n+\tAbstractColorChooserPanel[] old = chooserPanels;\n+\tchooserPanels = panels;\n+\n+\tif (panels != null)\n+\t  for (int i = 0; i < panels.length; i++)\n+\t    if (panels[i] != null)\n+\t      panels[i].installChooserPanel(this);\n+\n+\tfirePropertyChange(CHOOSER_PANELS_PROPERTY, old, chooserPanels);\n+      }\n+  } // setChooserPanels()\n+\n+  /**\n+   * This method returns the AbstractColorChooserPanels used with this\n+   * JColorChooser.\n+   *\n+   * @return The AbstractColorChooserPanels used with this JColorChooser.\n+   */\n+  public AbstractColorChooserPanel[] getChooserPanels()\n+  {\n+    return chooserPanels;\n+  } // getChooserPanels()\n+\n+  /**\n+   * This method returns the ColorSelectionModel used with this JColorChooser.\n+   *\n+   * @return The ColorSelectionModel.\n+   */\n+  public ColorSelectionModel getSelectionModel()\n+  {\n+    return selectionModel;\n+  } // getSelectionModel()\n+\n+  /**\n+   * This method sets the ColorSelectionModel to be used with this\n+   * JColorChooser.\n+   *\n+   * @param model The ColorSelectionModel to be used with this JColorChooser.\n+   *\n+   * @throws AWTError If the given model is null.\n+   */\n+  public void setSelectionModel(ColorSelectionModel model)\n+  {\n+    if (model == null)\n+      throw new AWTError(\"ColorSelectionModel is not allowed to be null.\");\n+    selectionModel = model;\n+  } // setSelectionModel()\n+\n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   */\n+  public boolean getDragEnabled()\n+  {\n+    return dragEnabled;\n+  }\n+\n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param b DOCUMENT ME!\n+   */\n+  public void setDragEnabled(boolean b)\n+  {\n+    dragEnabled = b;\n+  }\n+\n+  /**\n+   * This method returns a String describing the JColorChooser.\n+   *\n+   * @return A String describing the JColorChooser.\n+   */\n+  protected String paramString()\n+  {\n+    return \"JColorChooser\";\n+  } // paramString()\n \n   /**\n    * getAccessibleContext\n+   *\n    * @return AccessibleContext\n    */\n   public AccessibleContext getAccessibleContext()\n@@ -364,4 +576,130 @@ public AccessibleContext getAccessibleContext()\n \n     return accessibleContext;\n   }\n+\n+  /**\n+   * A helper class that hides a JDialog when the action is performed.\n+   */\n+  static class DefaultOKCancelListener implements ActionListener\n+  {\n+    /** The JDialog to hide. */\n+    private JDialog dialog;\n+\n+    /**\n+     * Creates a new DefaultOKCancelListener with the given JDialog to hide.\n+     *\n+     * @param dialog The JDialog to hide.\n+     */\n+    public DefaultOKCancelListener(JDialog dialog)\n+    {\n+      super();\n+      this.dialog = dialog;\n+    }\n+\n+    /**\n+     * This method hides the JDialog when called.\n+     *\n+     * @param e The ActionEvent.\n+     */\n+    public void actionPerformed(ActionEvent e)\n+    {\n+      dialog.hide();\n+    }\n+  }\n+\n+  /**\n+   * This method resets the JColorChooser color to the initial color when the\n+   * action is performed.\n+   */\n+  static class DefaultResetListener implements ActionListener\n+  {\n+    /** The JColorChooser to reset. */\n+    private JColorChooser chooser;\n+\n+    /** The initial color. */\n+    private Color init;\n+\n+    /**\n+     * Creates a new DefaultResetListener with the given JColorChooser.\n+     *\n+     * @param chooser The JColorChooser to reset.\n+     */\n+    public DefaultResetListener(JColorChooser chooser)\n+    {\n+      super();\n+      this.chooser = chooser;\n+      init = chooser.getColor();\n+    }\n+\n+    /**\n+     * This method resets the JColorChooser to its initial color.\n+     *\n+     * @param e The ActionEvent.\n+     */\n+    public void actionPerformed(ActionEvent e)\n+    {\n+      chooser.setColor(init);\n+    }\n+  }\n+\n+  /**\n+   * This is a custom JDialog that will notify when it is hidden and the modal\n+   * property is set.\n+   */\n+  static class ModalDialog extends JDialog\n+  {\n+    /** The modal property. */\n+    private boolean modal;\n+\n+    /**\n+     * Creates a new ModalDialog object with the given parent and title.\n+     *\n+     * @param parent The parent of the JDialog.\n+     * @param title The title of the JDialog.\n+     */\n+    public ModalDialog(Frame parent, String title)\n+    {\n+      super(parent, title);\n+    }\n+\n+    /**\n+     * Creates a new ModalDialog object with the given parent and title.\n+     *\n+     * @param parent The parent of the JDialog.\n+     * @param title The title of the JDialog.\n+     */\n+    public ModalDialog(Dialog parent, String title)\n+    {\n+      super(parent, title);\n+    }\n+\n+    /**\n+     * This method sets the modal property.\n+     *\n+     * @param modal The modal property.\n+     */\n+    public void setModal(boolean modal)\n+    {\n+      this.modal = modal;\n+    }\n+\n+    /**\n+     * This method shows the ModalDialog.\n+     */\n+    public void show()\n+    {\n+      super.show();\n+      if (modal)\n+\tmakeModal(this);\n+    }\n+\n+    /**\n+     * This method hides the ModalDialog.\n+     */\n+    public synchronized void hide()\n+    {\n+      super.hide();\n+      notifyAll();\n+    }\n+  }\n }"}, {"sha": "9d480dc7c27ac10d4c515fe4e4a0b56924099ea0", "filename": "libjava/javax/swing/JComboBox.java", "status": "modified", "additions": 1047, "deletions": 744, "changes": 1791, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJComboBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJComboBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComboBox.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -35,836 +35,1139 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package javax.swing;\n \n+import java.awt.Component;\n+import java.awt.Dimension;\n import java.awt.ItemSelectable;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.awt.event.ItemEvent;\n import java.awt.event.ItemListener;\n import java.awt.event.KeyEvent;\n+import java.beans.PropertyChangeEvent;\n import java.beans.PropertyChangeListener;\n import java.io.IOException;\n import java.io.ObjectOutputStream;\n import java.util.Vector;\n-\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleAction;\n import javax.accessibility.AccessibleContext;\n import javax.accessibility.AccessibleRole;\n import javax.accessibility.AccessibleSelection;\n+import javax.swing.JComponent;\n import javax.swing.event.ListDataEvent;\n import javax.swing.event.ListDataListener;\n import javax.swing.event.PopupMenuListener;\n import javax.swing.plaf.ComboBoxUI;\n \n+\n /**\n- * JComboBox\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ * JComboBox. JComboBox is a container, that keeps track of elements added to\n+ * it by the user. JComboBox allows user to select any item in its list and\n+ * displays the selected item to the user. JComboBox also can show/hide popup\n+ * menu containing its list of item whenever the mouse is pressed over it.\n+ *\n+ * @author Andrew Selkirk\n+ * @author Olga Rodimina\n  */\n-public class JComboBox extends JComponent\n-  implements ItemSelectable, ListDataListener, ActionListener, Accessible\n+public class JComboBox extends JComponent implements ItemSelectable,\n+                                                     ListDataListener,\n+                                                     ActionListener,\n+                                                     Accessible\n {\n   private static final long serialVersionUID = 5654585963292734470L;\n \n   /**\n-   * AccessibleJComboBox\n+   * KeySelectionManager interface. Class implementing this interface are\n+   * responsible for matching key characters typed by the user with combo\n+   * box's items.\n    */\n-  protected class AccessibleJComboBox extends AccessibleJComponent \n-    implements AccessibleAction, AccessibleSelection\n+  public static interface KeySelectionManager\n   {\n-    private static final long serialVersionUID = 8217828307256675666L;\n+    int selectionForKey(char aKey, ComboBoxModel aModel);\n+  }\n+\n+  /**\n+   * Maximum number of rows that should be visible by default  in the\n+   * JComboBox's popup\n+   */\n+  public static final int DEFAULT_MAXIMUM_ROW_COUNT = 8;\n+\n+  /**\n+   * Fired in a PropertyChangeEvent when the 'editable' property changes.\n+   */\n+  public static final String EDITABLE_CHANGED_PROPERTY = \"editable\";\n+\n+  /**\n+   * Fired in a PropertyChangeEvent when the 'maximumRowCount' property\n+   * changes.\n+   */\n+  public static final String MAXIMUM_ROW_COUNT_CHANGED_PROPERTY = \"maximumRowCount\";\n+\n+  /**\n+   * Fired in a PropertyChangeEvent when the 'enabled' property changes.\n+   */\n+  public static final String ENABLED_CHANGED_PROPERTY = \"enabled\";\n+\n+  /**\n+   * Fired in a PropertyChangeEvent when the 'renderer' property changes.\n+   */\n+  public static final String RENDERER_CHANGED_PROPERTY = \"renderer\";\n+\n+  /**\n+   * Fired in a PropertyChangeEvent when the 'editor' property changes.\n+   */\n+  public static final String EDITOR_CHANGED_PROPERTY = \"editor\";\n+\n+  /**\n+   * Fired in a PropertyChangeEvent when the 'dataModel' property changes.\n+   */\n+  public static final String MODEL_CHANGED_PROPERTY = \"dataModel\";\n+\n+  /**\n+   * name for the UI delegate for this combo box.\n+   */\n+  private static final String uiClassID = \"ComboBoxUI\";\n+\n+  /**\n+   * dataModel used by JComboBox to keep track of its list data and currently\n+   * selected element in the list.\n+   */\n+  protected ComboBoxModel dataModel;\n+\n+  /**\n+   * Renderer renders(paints) every object in the combo box list in its\n+   * associated list cell. This ListCellRenderer is used only when  this\n+   * JComboBox is uneditable.\n+   */\n+  protected ListCellRenderer renderer;\n+\n+  /**\n+   * editor that is responsible for editting an object in a combo box list\n+   */\n+  protected ComboBoxEditor editor;\n+\n+  /**\n+   * Number of rows that will be visible in the JComboBox's popup.\n+   */\n+  protected int maximumRowCount;\n+\n+  /**\n+   * This field indicates if textfield of this JComboBox is editable or not.\n+   */\n+  protected boolean isEditable;\n+\n+  /**\n+   * This field is reference to the current selection of the combo box.\n+   */\n+  protected Object selectedItemReminder;\n+\n+  /**\n+   * keySelectionManager\n+   */\n+  protected KeySelectionManager keySelectionManager;\n+\n+  /**\n+   * This actionCommand is used in ActionEvent that is fired to JComboBox's\n+   * ActionListeneres.\n+   */\n+  protected String actionCommand;\n+\n+  /**\n+   * This property indicates if heavyweight popup or lightweight popup will be\n+   * used to diplay JComboBox's elements.\n+   */\n+  protected boolean lightWeightPopupEnabled;\n+\n+  /**\n+   * The action taken when new item is selected in the JComboBox\n+   */\n+  private Action action;\n+\n+  /**\n+   * since 1.4  If this field is set then comboBox's display area for the\n+   * selected item  will be set by default to this value.\n+   */\n+  private Object prototypeDisplayValue;\n+\n+  /**\n+   * Constructs JComboBox object with specified data model for it. The first\n+   * item in the specified data model is selected by default.\n+   *\n+   * @param model Data model that will be used by this JComboBox to keep track\n+   *        of its list of items.\n+   */\n+  public JComboBox(ComboBoxModel model)\n+  {\n+    setEditable(false);\n+    setEnabled(true);\n+    setMaximumRowCount(DEFAULT_MAXIMUM_ROW_COUNT);\n+    setModel(model);\n+    setActionCommand(\"comboBoxChanged\");\n+\n+    // by default set selected item to the first element in the combo box    \n+    if (getItemCount() != 0)\n+      setSelectedItem(getItemAt(0));\n+\n+    lightWeightPopupEnabled = true;\n+    isEditable = false;\n+\n+    updateUI();\n+  }\n+\n+  /**\n+   * Constructs JComboBox with specified list of items.\n+   *\n+   * @param itemArray array containing list of items for this JComboBox\n+   */\n+  public JComboBox(Object[] itemArray)\n+  {\n+    this(new DefaultComboBoxModel(itemArray));\n+  }\n+\n+  /**\n+   * Constructs JComboBox object with specified list of items.\n+   *\n+   * @param itemVector vector containing list of items for this JComboBox.\n+   */\n+  public JComboBox(Vector itemVector)\n+  {\n+    this(new DefaultComboBoxModel(itemVector));\n+  }\n+\n+  /**\n+   * Constructor. Creates new empty JComboBox. ComboBox's data model is set to\n+   * DefaultComboBoxModel.\n+   */\n+  public JComboBox()\n+  {\n+    this(new DefaultComboBoxModel());\n+  }\n+\n+  private void writeObject(ObjectOutputStream stream) throws IOException\n+  {\n+  }\n+\n+  /**\n+   * This method returns true JComboBox is editable and false otherwise\n+   *\n+   * @return boolean true if JComboBox is editable and false otherwise\n+   */\n+  public boolean isEditable()\n+  {\n+    return isEditable;\n+  }\n \n-    /**\n-     * Constructor AccessibleJComboBox\n-     * @param component TODO\n+  /*\n+   * This method adds ancestor listener to this JComboBox.\n+   */\n+  protected void installAncestorListener()\n+  {\n+    /* FIXME: Need to implement.\n+     *\n+     * Need to add ancestor listener to this JComboBox. This listener\n+     * should close combo box's popup list of items whenever it\n+     * receives an AncestorEvent.\n      */\n-    protected AccessibleJComboBox()\n-    {\n-    }\n+  }\n+\n+  /**\n+   * Set the \"UI\" property of the combo box, which is a look and feel class\n+   * responsible for handling comboBox's input events and painting it.\n+   *\n+   * @param ui The new \"UI\" property\n+   */\n+  public void setUI(ComboBoxUI ui)\n+  {\n+    super.setUI(ui);\n+  }\n+\n+  /**\n+   * This method sets this comboBox's UI to the UIManager's default for the\n+   * current look and feel.\n+   */\n+  public void updateUI()\n+  {\n+    setUI((ComboBoxUI) UIManager.getUI(this));\n+    invalidate();\n+  }\n+\n+  /**\n+   * This method returns the String identifier for the UI class to the used\n+   * with the JComboBox.\n+   *\n+   * @return The String identifier for the UI class.\n+   */\n+  public String getUIClassID()\n+  {\n+    return uiClassID;\n+  }\n+\n+  /**\n+   * This method returns the UI used to display the JComboBox.\n+   *\n+   * @return The UI used to display the JComboBox.\n+   */\n+  public ComboBoxUI getUI()\n+  {\n+    return (ComboBoxUI) ui;\n+  }\n+\n+  /**\n+   * Set the data model for this JComboBox. This un-registers all  listeners\n+   * associated with the current model, and re-registers them with the new\n+   * model.\n+   *\n+   * @param newDataModel The new data model for this JComboBox\n+   */\n+  public void setModel(ComboBoxModel newDataModel)\n+  {\n+    if (this.dataModel == newDataModel)\n+      return;\n+\n+    if (this.dataModel != null)\n+      // remove all listeners currently registered with the model.\n+      dataModel.removeListDataListener(this);\n+\n+    ComboBoxModel oldDataModel = this.dataModel;\n+    this.dataModel = newDataModel;\n+\n+    if (this.dataModel != null)\n+      // register all listeners with the new data model\n+      dataModel.addListDataListener(this);\n+\n+    firePropertyChange(MODEL_CHANGED_PROPERTY, oldDataModel, this.dataModel);\n+  }\n+\n+  /**\n+   * This method returns data model for this comboBox.\n+   *\n+   * @return ComboBoxModel containing items for this combo box.\n+   */\n+  public ComboBoxModel getModel()\n+  {\n+    return dataModel;\n+  }\n+\n+  /**\n+   * This method sets JComboBox's popup to be either lightweight or\n+   * heavyweight. If 'enabled' is true then lightweight popup is  used and\n+   * heavyweight otherwise. By default lightweight popup is  used to display\n+   * this JComboBox's elements.\n+   *\n+   * @param enabled indicates if lightweight popup or heavyweight popup should\n+   *        be used to display JComboBox's elements.\n+   */\n+  public void setLightWeightPopupEnabled(boolean enabled)\n+  {\n+    this.lightWeightPopupEnabled = enabled;\n+  }\n+\n+  /**\n+   * This method returns whether popup menu that is used to display list of\n+   * combo box's item is lightWeight or not.\n+   *\n+   * @return boolean true if popup menu is lightweight and false otherwise.\n+   */\n+  public boolean isLightWeightPopupEnabled()\n+  {\n+    return lightWeightPopupEnabled;\n+  }\n+\n+  /**\n+   * This method sets editability of the combo box. If combo box  is editable\n+   * the user can choose component from the combo box list by typing\n+   * component's name in the editor(JTextfield by default).  Otherwise if not\n+   * editable, the user should use the list to choose   the component. This\n+   * method fires PropertyChangeEvents to JComboBox's registered\n+   * PropertyChangeListeners to indicate that 'editable' property of the\n+   * JComboBox has changed.\n+   *\n+   * @param editable indicates if the JComboBox's textfield should be editable\n+   *        or not.\n+   */\n+  public void setEditable(boolean editable)\n+  {\n+    if (this.isEditable != editable)\n+      {\n+\tthis.isEditable = editable;\n+\tfirePropertyChange(EDITABLE_CHANGED_PROPERTY, ! isEditable, isEditable);\n+      }\n+  }\n+\n+  /**\n+   * Sets number of rows that should be visible in this JComboBox's popup. If\n+   * this JComboBox's popup has more elements that maximum number or rows\n+   * then popup will have a scroll pane to allow users to view other\n+   * elements.\n+   *\n+   * @param rowCount number of rows that will be visible in JComboBox's popup.\n+   */\n+  public void setMaximumRowCount(int rowCount)\n+  {\n+    if (maximumRowCount != rowCount)\n+      {\n+\tint oldMaximumRowCount = this.maximumRowCount;\n+\tthis.maximumRowCount = rowCount;\n+\tfirePropertyChange(MAXIMUM_ROW_COUNT_CHANGED_PROPERTY,\n+\t                   oldMaximumRowCount, this.maximumRowCount);\n+      }\n+  }\n+\n+  /**\n+   * This method returns number of rows visible in the JComboBox's list of\n+   * items.\n+   *\n+   * @return int maximun number of visible rows in the JComboBox's list.\n+   */\n+  public int getMaximumRowCount()\n+  {\n+    return maximumRowCount;\n+  }\n+\n+  /**\n+   * This method sets cell renderer for this JComboBox that will be used to\n+   * paint combo box's items. The Renderer should only be used only when\n+   * JComboBox is not editable.  In the case when JComboBox is editable  the\n+   * editor must be used.  This method also fires PropertyChangeEvent when\n+   * cellRendered for this JComboBox has changed.\n+   *\n+   * @param aRenderer cell renderer that will be used by this JComboBox to\n+   *        paint its elements.\n+   */\n+  public void setRenderer(ListCellRenderer aRenderer)\n+  {\n+    if (this.renderer != aRenderer)\n+      {\n+\tListCellRenderer oldRenderer = this.renderer;\n+\tthis.renderer = aRenderer;\n+\tfirePropertyChange(RENDERER_CHANGED_PROPERTY, oldRenderer,\n+\t                   this.renderer);\n+      }\n+  }\n+\n+  /**\n+   * This method returns renderer responsible for rendering selected item in\n+   * the combo box\n+   *\n+   * @return ListCellRenderer\n+   */\n+  public ListCellRenderer getRenderer()\n+  {\n+    return renderer;\n+  }\n+\n+  /**\n+   * Sets editor for this JComboBox\n+   *\n+   * @param newEditor ComboBoxEditor for this JComboBox. This method fires\n+   *        PropertyChangeEvent when 'editor' property is changed.\n+   */\n+  public void setEditor(ComboBoxEditor newEditor)\n+  {\n+    if (editor == newEditor)\n+      return;\n+\n+    if (editor != null)\n+      editor.removeActionListener(this);\n+\n+    ComboBoxEditor oldEditor = editor;\n+    editor = newEditor;\n+\n+    if (editor != null)\n+      editor.addActionListener(this);\n+\n+    firePropertyChange(EDITOR_CHANGED_PROPERTY, oldEditor, editor);\n+  }\n+\n+  /**\n+   * Returns editor component that is responsible for displaying/editting\n+   * selected item in the combo box.\n+   *\n+   * @return ComboBoxEditor\n+   */\n+  public ComboBoxEditor getEditor()\n+  {\n+    return editor;\n+  }\n+\n+  /**\n+   * Forces combo box to select given item\n+   *\n+   * @param item element in the combo box to select.\n+   */\n+  public void setSelectedItem(Object item)\n+  {\n+    dataModel.setSelectedItem(item);\n+  }\n+\n+  /**\n+   * Returns currently selected item in the combo box.\n+   *\n+   * @return element that is currently selected in this combo box.\n+   */\n+  public Object getSelectedItem()\n+  {\n+    Object item = dataModel.getSelectedItem();\n+\n+    if (item == null && getItemCount() != 0)\n+      item = getItemAt(0);\n+\n+    return item;\n+  }\n \n-\t\t/**\n-\t\t * getAccessibleChildrenCount\n-\t\t * @returns int\n-\t\t */\n-\t\tpublic int getAccessibleChildrenCount() {\n-\t\t\treturn 0; // TODO\n-\t\t} // getAccessibleChildrenCount()\n-\n-\t\t/**\n-\t\t * getAccessibleChild\n-\t\t * @param value0 TODO\n-\t\t * @returns Accessible\n-\t\t */\n-\t\tpublic Accessible getAccessibleChild(int value0) {\n-\t\t\treturn null; // TODO\n-\t\t} // getAccessibleChild()\n-\n-\t\t/**\n-\t\t * getAccessibleSelection\n-\t\t * @returns AccessibleSelection\n-\t\t */\n-\t\tpublic AccessibleSelection getAccessibleSelection() {\n-\t\t\treturn null; // TODO\n-\t\t} // getAccessibleSelection()\n-\n-\t\t/**\n-\t\t * getAccessibleSelection\n-\t\t * @param value0 TODO\n-\t\t * @returns Accessible\n-\t\t */\n-\t\tpublic Accessible getAccessibleSelection(int value0) {\n-\t\t\treturn null; // TODO\n-\t\t} // getAccessibleSelection()\n-\n-\t\t/**\n-\t\t * isAccessibleChildSelected\n-\t\t * @param value0 TODO\n-\t\t * @returns boolean\n-\t\t */\n-\t\tpublic boolean isAccessibleChildSelected(int value0) {\n-\t\t\treturn false; // TODO\n-\t\t} // isAccessibleChildSelected()\n-\n-\t\t/**\n-\t\t * getAccessibleRole\n-\t\t * @returns AccessibleRole\n-\t\t */\n-\t\tpublic AccessibleRole getAccessibleRole() {\n-\t\t\treturn AccessibleRole.COMBO_BOX;\n-\t\t} // getAccessibleRole()\n-\n-\t\t/**\n-\t\t * getAccessibleAction\n-\t\t * @returns AccessibleAction\n-\t\t */\n-\t\tpublic AccessibleAction getAccessibleAction() {\n-\t\t\treturn null; // TODO\n-\t\t} // getAccessibleAction()\n-\n-\t\t/**\n-\t\t * getAccessibleActionDescription\n-\t\t * @param value0 TODO\n-\t\t * @returns String\n-\t\t */\n-\t\tpublic String getAccessibleActionDescription(int value0) {\n-\t\t\treturn null; // TODO\n-\t\t} // getAccessibleActionDescription()\n-\n-\t\t/**\n-\t\t * getAccessibleActionCount\n-\t\t * @returns int\n-\t\t */\n-\t\tpublic int getAccessibleActionCount() {\n-\t\t\treturn 0; // TODO\n-\t\t} // getAccessibleActionCount()\n-\n-\t\t/**\n-\t\t * doAccessibleAction\n-\t\t * @param value0 TODO\n-\t\t * @returns boolean\n-\t\t */\n-\t\tpublic boolean doAccessibleAction(int value0) {\n-\t\t\treturn false; // TODO\n-\t\t} // doAccessibleAction()\n-\n-\t\t/**\n-\t\t * getAccessibleSelectionCount\n-\t\t * @returns int\n-\t\t */\n-\t\tpublic int getAccessibleSelectionCount() {\n-\t\t\treturn 0; // TODO\n-\t\t} // getAccessibleSelectionCount()\n-\n-\t\t/**\n-\t\t * addAccessibleSelection\n-\t\t * @param value0 TODO\n-\t\t */\n-\t\tpublic void addAccessibleSelection(int value0) {\n-\t\t\t// TODO\n-\t\t} // addAccessibleSelection()\n-\n-\t\t/**\n-\t\t * removeAccessibleSelection\n-\t\t * @param value0 TODO\n-\t\t */\n-\t\tpublic void removeAccessibleSelection(int value0) {\n-\t\t\t// TODO\n-\t\t} // removeAccessibleSelection()\n-\n-\t\t/**\n-\t\t * clearAccessibleSelection\n-\t\t */\n-\t\tpublic void clearAccessibleSelection() {\n-\t\t\t// TODO\n-\t\t} // clearAccessibleSelection()\n-\n-\t\t/**\n-\t\t * selectAllAccessibleSelection\n-\t\t */\n-\t\tpublic void selectAllAccessibleSelection() {\n-\t\t\t// TODO\n-\t\t} // selectAllAccessibleSelection()\n-\n-\n-\t} // AccessibleJComboBox\n-\n-\t/**\n-\t * KeySelectionManager\n-\t */\n-\tpublic static interface KeySelectionManager {\n-\n-\t\t//-------------------------------------------------------------\n-\t\t// Methods ----------------------------------------------------\n-\t\t//-------------------------------------------------------------\n-\n-\t\t/**\n-\t\t * selectionForKey\n-\t\t * @param value0 TODO\n-\t\t * @param value1 TODO\n-\t\t * @returns int\n-\t\t */\n-\t\tint selectionForKey(char value0, ComboBoxModel value1);\n-\n-\n-\t} // KeySelectionManager\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Variables --------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * uiClassID\n-\t */\n-\tprivate static final String uiClassID = \"ComboBoxUI\";\n-\n-\t/**\n-\t * dataModel\n-\t */\n-\tprotected ComboBoxModel dataModel;\n-\n-\t/**\n-\t * renderer\n-\t */\n-\tprotected ListCellRenderer renderer;\n-\n-\t/**\n-\t * editor\n-\t */\n-\tprotected ComboBoxEditor editor;\n-\n-\t/**\n-\t * maximumRowCount\n-\t */\n-\tprotected int maximumRowCount;\n-\n-\t/**\n-\t * isEditable\n-\t */\n-\tprotected boolean isEditable;\n-\n-\t/**\n-\t * selectedItemReminder\n-\t */\n-\tprotected Object selectedItemReminder;\n-\n-\t/**\n-\t * keySelectionManager\n-\t */\n-\tprotected JComboBox.KeySelectionManager keySelectionManager;\n-\n-\t/**\n-\t * actionCommand\n-\t */\n-\tprotected String actionCommand;\n-\n-\t/**\n-\t * lightWeightPopupEnabled\n-\t */\n-\tprotected boolean lightWeightPopupEnabled;\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Initialization ---------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * Constructor JComboBox\n-\t * @param value0 TODO\n-\t */\n-\tpublic JComboBox(ComboBoxModel value0) {\n-\t\t// TODO\n-\t} // JComboBox()\n-\n-\t/**\n-\t * Constructor JComboBox\n-\t * @param value0 TODO\n-\t */\n-\tpublic JComboBox(Object[] value0) {\n-\t\t// TODO\n-\t} // JComboBox()\n-\n-\t/**\n-\t * Constructor JComboBox\n-\t * @param value0 TODO\n-\t */\n-\tpublic JComboBox(Vector value0) {\n-\t\t// TODO\n-\t} // JComboBox()\n-\n-\t/**\n-\t * Constructor JComboBox\n-\t */\n-\tpublic JComboBox() {\n-\t\t// TODO\n-\t} // JComboBox()\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * writeObject\n-\t * @param stream TODO\n-\t * @exception IOException TODO\n-\t */\n-\tprivate void writeObject(ObjectOutputStream stream) throws IOException {\n-\t\t// TODO\n-\t} // writeObject()\n-\n-\t/**\n-\t * isEditable\n-\t * @returns boolean\n-\t */\n-\tpublic boolean isEditable() {\n-\t\treturn false; // TODO\n-\t} // isEditable()\n-\n-\t/**\n-\t * installAncestorListener\n-\t */\n-\tprotected void installAncestorListener() {\n-\t\t// TODO\n-\t} // installAncestorListener()\n-\n-\t/**\n-\t * setUI\n-\t * @param ui TODO\n-\t */\n-\tpublic void setUI(ComboBoxUI ui) {\n-\t\tsuper.setUI(ui);\n-\t} // setUI()\n-\n-\t/**\n-\t * updateUI\n-\t */\n-\tpublic void updateUI() {\n-\t\tsetUI((ComboBoxUI) UIManager.get(this));\n-\t\tinvalidate();\n-\t} // updateUI()\n-\n-\t/**\n-\t * getUIClassID\n-\t * @returns String\n-\t */\n-\tpublic String getUIClassID() {\n-\t\treturn uiClassID;\n-\t} // getUIClassID()\n-\n-\t/**\n-\t * getUI\n-\t * @returns ComboBoxUI\n-\t */\n-\tpublic ComboBoxUI getUI() {\n-\t\treturn (ComboBoxUI) ui;\n-\t} // getUI()\n-\n-\t/**\n-\t * setModel\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setModel(ComboBoxModel value0) {\n-\t\t// TODO\n-\t} // setModel()\n-\n-\t/**\n-\t * getModel\n-\t * @returns ComboBoxModel\n-\t */\n-\tpublic ComboBoxModel getModel() {\n-\t\treturn null; // TODO\n-\t} // getModel()\n-\n-\t/**\n-\t * setLightWeightPopupEnabled\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setLightWeightPopupEnabled(boolean value0) {\n-\t\t// TODO\n-\t} // setLightWeightPopupEnabled()\n-\n-\t/**\n-\t * isLightWeightPopupEnabled\n-\t * @returns boolean\n-\t */\n-\tpublic boolean isLightWeightPopupEnabled() {\n-\t\treturn false; // TODO\n-\t} // isLightWeightPopupEnabled()\n-\n-\t/**\n-\t * setEditable\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setEditable(boolean value0) {\n-\t\t// TODO\n-\t} // setEditable()\n-\n-\t/**\n-\t * setMaximumRowCount\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setMaximumRowCount(int value0) {\n-\t\t// TODO\n-\t} // setMaximumRowCount()\n-\n-\t/**\n-\t * getMaximumRowCount\n-\t * @returns int\n-\t */\n-\tpublic int getMaximumRowCount() {\n-\t\treturn 0; // TODO\n-\t} // getMaximumRowCount()\n-\n-\t/**\n-\t * setRenderer\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setRenderer(ListCellRenderer value0) {\n-\t\t// TODO\n-\t} // setRenderer()\n-\n-\t/**\n-\t * getRenderer\n-\t * @returns ListCellRenderer\n-\t */\n-\tpublic ListCellRenderer getRenderer() {\n-\t\treturn null; // TODO\n-\t} // getRenderer()\n-\n-\t/**\n-\t * setEditor\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setEditor(ComboBoxEditor value0) {\n-\t\t// TODO\n-\t} // setEditor()\n-\n-\t/**\n-\t * getEditor\n-\t * @returns ComboBoxEditor\n-\t */\n-\tpublic ComboBoxEditor getEditor() {\n-\t\treturn null; // TODO\n-\t} // getEditor()\n-\n-\t/**\n-\t * setSelectedItem\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setSelectedItem(Object value0) {\n-\t\t// TODO\n-\t} // setSelectedItem()\n-\n-\t/**\n-\t * getSelectedItem\n-\t * @returns Object\n-\t */\n-\tpublic Object getSelectedItem() {\n-\t\treturn null; // TODO\n-\t} // getSelectedItem()\n-\n-\t/**\n-\t * setSelectedIndex\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setSelectedIndex(int value0) {\n-\t\t// TODO\n-\t} // setSelectedIndex()\n-\n-\t/**\n-\t * getSelectedIndex\n-\t * @returns int\n-\t */\n-\tpublic int getSelectedIndex() {\n-\t\treturn 0; // TODO\n-\t} // getSelectedIndex()\n-\n-\t/**\n-\t * addItem\n-\t * @param value0 TODO\n-\t */\n-\tpublic void addItem(Object value0) {\n-\t\t// TODO\n-\t} // addItem()\n-\n-\t/**\n-\t * insertItemAt\n-\t * @param value0 TODO\n-\t * @param value1 TODO\n-\t */\n-\tpublic void insertItemAt(Object value0, int value1) {\n-\t\t// TODO\n-\t} // insertItemAt()\n-\n-\t/**\n-\t * removeItem\n-\t * @param value0 TODO\n-\t */\n-\tpublic void removeItem(Object value0) {\n-\t\t// TODO\n-\t} // removeItem()\n-\n-\t/**\n-\t * removeItemAt\n-\t * @param value0 TODO\n-\t */\n-\tpublic void removeItemAt(int value0) {\n-\t\t// TODO\n-\t} // removeItemAt()\n-\n-\t/**\n-\t * removeAllItems\n-\t */\n-\tpublic void removeAllItems() {\n-\t\t// TODO\n-\t} // removeAllItems()\n-\t\n-\t/**\n-\t * showPopup\n-\t */\n-\tpublic void showPopup() {\n-\t\t// TODO\n-\t} // showPopup()\n-\n-\t/**\n-\t * hidePopup\n-\t */\n-\tpublic void hidePopup() {\n-\t\t// TODO\n-\t} // hidePopup()\n-\n-\t/**\n-\t * setPopupVisible\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setPopupVisible(boolean value0) {\n-\t\t// TODO\n-\t} // setPopupVisible()\n-\n-\t/**\n-\t * isPopupVisible\n-\t * @returns boolean\n-\t */\n-\tpublic boolean isPopupVisible() {\n-\t\treturn false; // TODO\n-\t} // isPopupVisible()\n-\n-\t/**\n-\t * setActionCommand\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setActionCommand(String value0) {\n-\t\t// TODO\n-\t} // setActionCommand()\n-\n-\t/**\n-\t * getActionCommand\n-\t * @returns String\n-\t */\n-\tpublic String getActionCommand() {\n-\t\treturn null; // TODO\n-\t} // getActionCommand()\n-\n-\t/**\n-\t * setAction\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setAction(Action value0) {\n-\t\t// TODO\n-\t} // setAction()\n-\n-\t/**\n-\t * isListener\n-\t * @param value0 TODO\n-\t * @param value1 TODO\n-\t * @returns boolean\n-\t */\n-\tprivate boolean isListener(Class value0, ActionListener value1) {\n-\t\treturn false; // TODO\n-\t} // isListener()\n-\n-\t/**\n-\t * getAction\n-\t * @returns Action\n-\t */\n-\tpublic Action getAction() {\n-\t\treturn null; // TODO\n-\t} // getAction()\n-\n-\t/**\n-\t * configurePropertiesFromAction\n-\t * @param value0 TODO\n-\t */\n-\tprotected void configurePropertiesFromAction(Action value0) {\n-\t\t// TODO\n-\t} // configurePropertiesFromAction()\n-\n-\t/**\n-\t * createActionPropertyChangeListener\n-\t * @param value0 TODO\n-\t * @returns PropertyChangeListener\n-\t */\n-\tprotected PropertyChangeListener createActionPropertyChangeListener(Action value0) {\n-\t\treturn null; // TODO\n-\t} // createActionPropertyChangeListener()\n-\n-\t/**\n-\t * fireItemStateChanged\n-\t * @param value0 TODO\n-\t */\n-\tprotected void fireItemStateChanged(ItemEvent value0) {\n-\t\t// TODO\n-\t} // fireItemStateChanged()\n-\n-\t/**\n-\t * fireActionEvent\n-\t */\n-\tprotected void fireActionEvent() {\n-\t\t// TODO\n-\t} // fireActionEvent()\n-\n-\t/**\n-\t * selectedItemChanged\n-\t */\n-\tprotected void selectedItemChanged() {\n-\t\t// TODO\n-\t} // selectedItemChanged()\n-\n-\t/**\n-\t * getSelectedObjects\n-\t * @returns Object[]\n-\t */\n-\tpublic Object[] getSelectedObjects() {\n-\t\treturn null; // TODO\n-\t} // getSelectedObjects()\n-\n-\t/**\n-\t * actionPerformed\n-\t * @param value0 TODO\n-\t */\n-\tpublic void actionPerformed(ActionEvent value0) {\n-\t\t// TODO\n-\t} // actionPerformed()\n-\n-\t/**\n-\t * contentsChanged\n-\t * @param value0 TODO\n-\t */\n-\tpublic void contentsChanged(ListDataEvent value0) {\n-\t\t// TODO\n-\t} // contentsChanged()\n-\n-\t/**\n-\t * selectWithKeyChar\n-\t * @param value0 TODO\n-\t * @returns boolean\n-\t */\n-\tpublic boolean selectWithKeyChar(char value0) {\n-\t\treturn false; // TODO\n-\t} // selectWithKeyChar()\n-\n-\t/**\n-\t * intervalAdded\n-\t * @param value0 TODO\n-\t */\n-\tpublic void intervalAdded(ListDataEvent value0) {\n-\t\t// TODO\n-\t} // intervalAdded()\n-\n-\t/**\n-\t * intervalRemoved\n-\t * @param value0 TODO\n-\t */\n-\tpublic void intervalRemoved(ListDataEvent value0) {\n-\t\t// TODO\n-\t} // intervalRemoved()\n-\n-\t/**\n-\t * setEnabled\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setEnabled(boolean value0) {\n-\t\t// TODO\n-\t} // setEnabled()\n-\n-\t/**\n-\t * configureEditor\n-\t * @param value0 TODO\n-\t * @param value1 TODO\n-\t */\n-\tpublic void configureEditor(ComboBoxEditor value0, Object value1) {\n-\t\t// TODO\n-\t} // configureEditor()\n-\n-\t/**\n-\t * processKeyEvent\n-\t * @param value0 TODO\n-\t */\n-\tpublic void processKeyEvent(KeyEvent value0) {\n-\t\t// TODO\n-\t} // processKeyEvent()\n-\n-\t/**\n-\t * isFocusTraversable\n-\t * @returns boolean\n-         * @deprecated\n-\t */\n-\tpublic boolean isFocusTraversable() {\n-\t\treturn false; // TODO\n-\t} // isFocusTraversable()\n-\n-\t/**\n-\t * setKeySelectionManager\n-\t * @param value0 TODO\n-\t */\n-\tpublic void setKeySelectionManager(KeySelectionManager value0) {\n-\t\t// TODO\n-\t} // setKeySelectionManager()\n-\n-\t/**\n-\t * getKeySelectionManager\n-\t * @returns JComboBox.KeySelectionManager\n-\t */\n-\tpublic JComboBox.KeySelectionManager getKeySelectionManager() {\n-\t\treturn null; // TODO\n-\t} // getKeySelectionManager()\n-\n-\t/**\n-\t * getItemCount\n-\t * @returns int\n-\t */\n-\tpublic int getItemCount() {\n-\t\treturn 0; // TODO\n-\t} // getItemCount()\n-\n-\t/**\n-\t * getItemAt\n-\t * @param value0 TODO\n-\t * @returns Object\n-\t */\n-\tpublic Object getItemAt(int value0) {\n-\t\treturn null; // TODO\n-\t} // getItemAt()\n-\n-\t/**\n-\t * createDefaultKeySelectionManager\n-\t * @returns KeySelectionManager\n-\t */\n-\tprotected KeySelectionManager createDefaultKeySelectionManager() {\n-\t\treturn null; // TODO\n-\t} // createDefaultKeySelectionManager()\n-\n-\t/**\n-\t * paramString\n-\t * @returns String\n-\t */\n-\tprotected String paramString() {\n-\t\treturn null; // TODO\n-\t} // paramString()\n-\n-  /**\n-   * getAccessibleContext\n-   * @returns AccessibleContext\n+  /**\n+   * Forces JComboBox to select component located in the  given index in the\n+   * combo box.\n+   *\n+   * @param index index specifying location of the component that  should be\n+   *        selected.\n+   */\n+  public void setSelectedIndex(int index)\n+  {\n+    // FIXME: if index == -1 then nothing should be selected\n+    setSelectedItem(dataModel.getElementAt(index));\n+  }\n+\n+  /**\n+   * Returns index of the item that is currently selected  in the combo box.\n+   * If no item is currently selected, then -1 is returned.\n+   *\n+   * @return int index specifying location of the currently  selected item in\n+   *         the combo box or -1 if nothing is selected in the combo box.\n+   */\n+  public int getSelectedIndex()\n+  {\n+    Object selectedItem = getSelectedItem();\n+    if (selectedItem != null && (dataModel instanceof DefaultComboBoxModel))\n+      return ((DefaultComboBoxModel) dataModel).getIndexOf(selectedItem);\n+\n+    return -1;\n+  }\n+\n+  public Object getPrototypeDisplayValue()\n+  {\n+    return prototypeDisplayValue;\n+  }\n+\n+  public void setPrototypeDisplayValue(Object prototypeDisplayValue)\n+  {\n+    this.prototypeDisplayValue = prototypeDisplayValue;\n+  }\n+\n+  /**\n+   * This method adds given element to this JComboBox.\n+   *\n+   * @param element element to add\n+   */\n+  public void addItem(Object element)\n+  {\n+    ((MutableComboBoxModel) dataModel).addElement(element);\n+  }\n+\n+  /**\n+   * Inserts given element at the specified index to this JComboBox\n+   *\n+   * @param element element to insert\n+   * @param index position where to insert the element\n+   */\n+  public void insertItemAt(Object element, int index)\n+  {\n+    ((MutableComboBoxModel) dataModel).insertElementAt(element, index);\n+  }\n+\n+  /**\n+   * This method removes given element from this JComboBox.\n+   *\n+   * @param element element to remove\n    */\n+  public void removeItem(Object element)\n+  {\n+    ((MutableComboBoxModel) dataModel).removeElement(element);\n+  }\n+\n+  /**\n+   * This method remove element location in the specified index in the\n+   * JComboBox.\n+   *\n+   * @param index index specifying position of the element to remove\n+   */\n+  public void removeItemAt(int index)\n+  {\n+    ((MutableComboBoxModel) dataModel).removeElementAt(index);\n+  }\n+\n+  /**\n+   * This method removes all elements from this JComboBox.\n+   */\n+  public void removeAllItems()\n+  {\n+    if (dataModel instanceof DefaultComboBoxModel)\n+      ((DefaultComboBoxModel) dataModel).removeAllElements();\n+  }\n+\n+  /**\n+   * This method displays popup with list of combo box's items on the screen\n+   */\n+  public void showPopup()\n+  {\n+    setPopupVisible(true);\n+  }\n+\n+  /**\n+   * This method hides popup containing list of combo box's items\n+   */\n+  public void hidePopup()\n+  {\n+    setPopupVisible(false);\n+  }\n+\n+  /**\n+   * This method either displayes or hides the popup containing  list of combo\n+   * box's items.\n+   *\n+   * @param visible show popup if 'visible' is true and hide it otherwise\n+   */\n+  public void setPopupVisible(boolean visible)\n+  {\n+    getUI().setPopupVisible(this, visible);\n+  }\n+\n+  /**\n+   * Checks if popup is currently visible on the screen.\n+   *\n+   * @return boolean true if popup is visible and false otherwise\n+   */\n+  public boolean isPopupVisible()\n+  {\n+    return getUI().isPopupVisible(this);\n+  }\n+\n+  /**\n+   * This method sets actionCommand to the specified string. ActionEvent fired\n+   * to this JComboBox  registered ActionListeners will contain this\n+   * actionCommand.\n+   *\n+   * @param aCommand new action command for the JComboBox's ActionEvent\n+   */\n+  public void setActionCommand(String aCommand)\n+  {\n+    actionCommand = aCommand;\n+  }\n+\n+  /**\n+   * Returns actionCommand associated with the ActionEvent fired by the\n+   * JComboBox to its registered ActionListeners.\n+   *\n+   * @return String actionCommand for the ActionEvent\n+   */\n+  public String getActionCommand()\n+  {\n+    return actionCommand;\n+  }\n+\n+  /**\n+   * setAction\n+   *\n+   * @param a action to set\n+   */\n+  public void setAction(Action a)\n+  {\n+    Action old = action;\n+    action = a;\n+    configurePropertiesFromAction(action);\n+    if (action != null)\n+      // FIXME: remove from old action and add to new action \n+      // PropertyChangeListener to listen to changes in the action\n+      addActionListener(action);\n+  }\n+\n+  /**\n+   * This method returns Action that is invoked when selected item is changed\n+   * in the JComboBox.\n+   *\n+   * @return Action\n+   */\n+  public Action getAction()\n+  {\n+    return action;\n+  }\n+\n+  /**\n+   * Configure properties of the JComboBox by reading properties of specified\n+   * action. This method always sets the comboBox's \"enabled\" property to the\n+   * value of the Action's \"enabled\" property.\n+   *\n+   * @param a An Action to configure the combo box from\n+   */\n+  protected void configurePropertiesFromAction(Action a)\n+  {\n+    if (a == null)\n+      {\n+\tsetEnabled(true);\n+\tsetToolTipText(null);\n+      }\n+    else\n+      {\n+\tsetEnabled(a.isEnabled());\n+\tsetToolTipText((String) (a.getValue(Action.SHORT_DESCRIPTION)));\n+      }\n+  }\n+\n+  /**\n+   * Creates PropertyChangeListener to listen for the changes in comboBox's\n+   * action properties.\n+   *\n+   * @param action action to listen to for property changes\n+   *\n+   * @return $PropertyChangeListener$ Listener that listens to changes in\n+   *         action properties.\n+   */\n+  protected PropertyChangeListener createActionPropertyChangeListener(Action action)\n+  {\n+    return new PropertyChangeListener()\n+      {\n+\tpublic void propertyChange(PropertyChangeEvent e)\n+\t{\n+\t  Action act = (Action) (e.getSource());\n+\t  configurePropertiesFromAction(act);\n+\t}\n+      };\n+  }\n+\n+  /**\n+   * This method fires ItemEvent to this JComboBox's registered ItemListeners.\n+   * This method is invoked when currently selected item in this combo box\n+   * has changed.\n+   *\n+   * @param e the ItemEvent describing the change in the combo box's\n+   *        selection.\n+   */\n+  protected void fireItemStateChanged(ItemEvent e)\n+  {\n+    ItemListener[] ll = getItemListeners();\n+\n+    for (int i = 0; i < ll.length; i++)\n+      ll[i].itemStateChanged(e);\n+  }\n+\n+  /**\n+   * This method fires ActionEvent to this JComboBox's registered\n+   * ActionListeners. This method is invoked when user explicitly changes\n+   * currently selected item.\n+   */\n+  protected void fireActionEvent()\n+  {\n+    ActionListener[] ll = getActionListeners();\n+\n+    for (int i = 0; i < ll.length; i++)\n+      ll[i].actionPerformed(new ActionEvent(this,\n+                                            ActionEvent.ACTION_PERFORMED,\n+                                            actionCommand));\n+  }\n+\n+  /**\n+   * This method is invoked whenever selected item changes in the combo box's\n+   * data model. It fires ItemEvent and ActionEvent to all registered\n+   * ComboBox's ItemListeners and ActionListeners respectively, indicating\n+   * the change.\n+   */\n+  protected void selectedItemChanged()\n+  {\n+    // Fire ItemEvent to indicated that previously selected item is now\n+    // deselected        \n+    if (selectedItemReminder != null)\n+      fireItemStateChanged(new ItemEvent(this, ItemEvent.ITEM_STATE_CHANGED,\n+                                         selectedItemReminder,\n+                                         ItemEvent.DESELECTED));\n+\n+    // Fire ItemEvent to indicate that new item is selected    \n+    Object newSelection = getSelectedItem();\n+    fireItemStateChanged(new ItemEvent(this, ItemEvent.ITEM_STATE_CHANGED,\n+                                       newSelection, ItemEvent.SELECTED));\n+\n+    // Fire Action Event to JComboBox's registered listeners\t\t\t\t\t \t\t\t\t \n+    fireActionEvent();\n+\n+    selectedItemReminder = newSelection;\n+  }\n+\n+  /**\n+   * Returns Object array of size 1 containing currently selected element in\n+   * the JComboBox.\n+   *\n+   * @return Object[] Object array of size 1 containing currently selected\n+   *         element in the JComboBox.\n+   */\n+  public Object[] getSelectedObjects()\n+  {\n+    Object selectedObject = getSelectedItem();\n+    return new Object[] { selectedObject };\n+  }\n+\n+  /**\n+   * This method handles actionEvents fired by the ComboBoxEditor. It changes\n+   * this JComboBox's selection to the new value currently in the editor and\n+   * hides list of combo box items.\n+   *\n+   * @param e the ActionEvent\n+   */\n+  public void actionPerformed(ActionEvent e)\n+  {\n+    setSelectedItem(((ComboBoxEditor) e.getSource()).getItem());\n+    setPopupVisible(false);\n+  }\n+\n+  /**\n+   * This method selects item in this combo box that matches specified\n+   * specified keyChar and returns true if such item is found. Otherwise\n+   * false is returned.\n+   *\n+   * @param keyChar character indicating which item in the combo box should be\n+   *        selected.\n+   *\n+   * @return boolean true if item corresponding to the specified keyChar\n+   *         exists in the combo box. Otherwise false is returned.\n+   */\n+  public boolean selectWithKeyChar(char keyChar)\n+  {\n+    // FIXME: Need to implement\n+    return false;\n+  }\n+\n+  /**\n+   * The part of implementation of ListDataListener interface. This method is\n+   * invoked when some items where added to the JComboBox's data model.\n+   *\n+   * @param event ListDataEvent describing the change\n+   */\n+  public void intervalAdded(ListDataEvent event)\n+  {\n+    // FIXME: Need to implement\n+    repaint();\n+  }\n+\n+  /**\n+   * The part of implementation of ListDataListener interface. This method is\n+   * invoked when some items where removed from the JComboBox's data model.\n+   *\n+   * @param event ListDataEvent describing the change.\n+   */\n+  public void intervalRemoved(ListDataEvent event)\n+  {\n+    // FIXME: Need to implement\n+    repaint();\n+  }\n+\n+  /**\n+   * The part of implementation of ListDataListener interface. This method is\n+   * invoked when contents of the JComboBox's  data model changed.\n+   *\n+   * @param event ListDataEvent describing the change\n+   */\n+  public void contentsChanged(ListDataEvent event)\n+  {\n+    // if first and last index of the given ListDataEvent are both -1,\n+    // then it indicates that selected item in the combo box data model\n+    // have changed. \n+    if (event.getIndex0() == -1 && event.getIndex1() == -1)\n+      selectedItemChanged();\n+  }\n+\n+  /**\n+   * This method disables or enables JComboBox. If the JComboBox is enabled,\n+   * then user is able to make item choice, otherwise if JComboBox is\n+   * disabled then user is not able to make a selection.\n+   *\n+   * @param enabled if 'enabled' is true then enable JComboBox and disable it\n+   */\n+  public void setEnabled(boolean enabled)\n+  {\n+    boolean oldEnabled = super.isEnabled();\n+    if (enabled != oldEnabled)\n+      {\n+\tsuper.setEnabled(enabled);\n+\tfirePropertyChange(ENABLED_CHANGED_PROPERTY, oldEnabled,\n+\t                   (boolean) enabled);\n+      }\n+  }\n+\n+  /**\n+   * This method initializes specified ComboBoxEditor to display given item.\n+   *\n+   * @param anEditor ComboBoxEditor to initialize\n+   * @param anItem Item that should displayed in the specified editor\n+   */\n+  public void configureEditor(ComboBoxEditor anEditor, Object anItem)\n+  {\n+    anEditor.setItem(anItem);\n+  }\n+\n+  /**\n+   * This method hides  combo box's popup whenever TAB key is pressed.\n+   *\n+   * @param e The KeyEvent indicating which key was pressed.\n+   */\n+  public void processKeyEvent(KeyEvent e)\n+  {\n+  }\n+\n+  /**\n+   * This method always returns false to indicate that JComboBox  itself is\n+   * not focus traversable.\n+   *\n+   * @return false to indicate that JComboBox itself is not focus traversable.\n+   *\n+   * @deprecated\n+   */\n+  public boolean isFocusTraversable()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * setKeySelectionManager\n+   *\n+   * @param aManager\n+   */\n+  public void setKeySelectionManager(KeySelectionManager aManager)\n+  {\n+  }\n+\n+  /**\n+   * getKeySelectionManager\n+   *\n+   * @return JComboBox.KeySelectionManager\n+   */\n+  public KeySelectionManager getKeySelectionManager()\n+  {\n+    return null;\n+  }\n+\n+  /**\n+   * This method returns number of elements in this JComboBox\n+   *\n+   * @return int number of elements in this JComboBox\n+   */\n+  public int getItemCount()\n+  {\n+    return ((DefaultComboBoxModel) dataModel).getSize();\n+  }\n+\n+  /**\n+   * Returns elements located in the combo box at the given index.\n+   *\n+   * @param index index specifying location of the component to  return.\n+   *\n+   * @return component in the combo box that is located in  the given index.\n+   */\n+  public Object getItemAt(int index)\n+  {\n+    return ((MutableComboBoxModel) dataModel).getElementAt(index);\n+  }\n+\n+  /**\n+   * createDefaultKeySelectionManager\n+   *\n+   * @return KeySelectionManager\n+   */\n+  protected KeySelectionManager createDefaultKeySelectionManager()\n+  {\n+    return null;\n+  }\n+\n+  /**\n+   * A string that describes this JComboBox. Normally only used for debugging.\n+   *\n+   * @return A string describing this JComboBox\n+   */\n+  protected String paramString()\n+  {\n+    return \"JComboBox\";\n+  }\n+\n   public AccessibleContext getAccessibleContext()\n   {\n     if (accessibleContext == null)\n       accessibleContext = new AccessibleJComboBox();\n \n     return accessibleContext;\n   }\n-  \n+\n   /**\n-   * addActionListener\n-   * @param listener TODO\n+   * This methods adds specified ActionListener to this JComboBox.\n+   *\n+   * @param listener to add\n    */\n-  public void addActionListener (ActionListener listener)\n+  public void addActionListener(ActionListener listener)\n   {\n-    listenerList.add (ActionListener.class, listener);\n+    listenerList.add(ActionListener.class, listener);\n   }\n \n   /**\n-   * removeActionListener\n-   * @param listener TODO\n+   * This method removes specified ActionListener from this JComboBox.\n+   *\n+   * @param listener ActionListener\n    */\n-  public void removeActionListener (ActionListener listener)\n+  public void removeActionListener(ActionListener listener)\n   {\n-    listenerList.remove (ActionListener.class, listener);\n+    listenerList.remove(ActionListener.class, listener);\n   }\n \n   /**\n+   * This method returns array of ActionListeners that are registered with\n+   * this JComboBox.\n+   *\n    * @since 1.4\n    */\n   public ActionListener[] getActionListeners()\n   {\n-    return (ActionListener[]) getListeners (ActionListener.class);\n+    return (ActionListener[]) getListeners(ActionListener.class);\n   }\n \n   /**\n-   * addItemListener\n-   * @param listener TODO\n+   * This method registers given ItemListener with this JComboBox\n+   *\n+   * @param listener to remove\n    */\n   public void addItemListener(ItemListener listener)\n   {\n-    listenerList.add (ItemListener.class, listener);\n+    listenerList.add(ItemListener.class, listener);\n   }\n \n   /**\n-   * removeItemListener\n-   * @param listener TODO\n+   * This method unregisters given ItemListener from this JComboBox\n+   *\n+   * @param listener to remove\n    */\n   public void removeItemListener(ItemListener listener)\n   {\n-    listenerList.remove (ItemListener.class, listener);\n+    listenerList.remove(ItemListener.class, listener);\n   }\n \n   /**\n+   * This method returns array of ItemListeners that are registered with this\n+   * JComboBox.\n+   *\n    * @since 1.4\n    */\n   public ItemListener[] getItemListeners()\n   {\n-    return (ItemListener[]) getListeners (ItemListener.class);\n+    return (ItemListener[]) getListeners(ItemListener.class);\n   }\n \n-  public void addPopupMenuListener (PopupMenuListener listener)\n+  /**\n+   * Adds PopupMenuListener to combo box to listen to the events fired by the\n+   * combo box's popup menu containing its list of items\n+   *\n+   * @param listener to add\n+   */\n+  public void addPopupMenuListener(PopupMenuListener listener)\n   {\n-    listenerList.add (PopupMenuListener.class, listener);\n+    listenerList.add(PopupMenuListener.class, listener);\n   }\n \n-  public void removePopupMenuListener (PopupMenuListener listener)\n+  /**\n+   * Removes PopupMenuListener to combo box to listen to the events fired by\n+   * the combo box's popup menu containing its list of items\n+   *\n+   * @param listener to add\n+   */\n+  public void removePopupMenuListener(PopupMenuListener listener)\n   {\n-    listenerList.remove (PopupMenuListener.class, listener);\n+    listenerList.remove(PopupMenuListener.class, listener);\n   }\n \n   /**\n-   * @since 1.4\n+   * Returns array of PopupMenuListeners that are registered with  combo box.\n    */\n   public PopupMenuListener[] getPopupMenuListeners()\n   {\n-    return (PopupMenuListener[]) getListeners (PopupMenuListener.class);\n+    return (PopupMenuListener[]) getListeners(PopupMenuListener.class);\n+  }\n+\n+  /**\n+   * AccessibleJComboBox\n+   */\n+  protected class AccessibleJComboBox extends AccessibleJComponent\n+    implements AccessibleAction, AccessibleSelection\n+  {\n+    private static final long serialVersionUID = 8217828307256675666L;\n+\n+    protected AccessibleJComboBox()\n+    {\n+    }\n+\n+    public int getAccessibleChildrenCount()\n+    {\n+      return 0;\n+    }\n+\n+    public Accessible getAccessibleChild(int value0)\n+    {\n+      return null;\n+    }\n+\n+    public AccessibleSelection getAccessibleSelection()\n+    {\n+      return null;\n+    }\n+\n+    public Accessible getAccessibleSelection(int value0)\n+    {\n+      return null;\n+    }\n+\n+    public boolean isAccessibleChildSelected(int value0)\n+    {\n+      return false;\n+    }\n+\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.COMBO_BOX;\n+    }\n+\n+    public AccessibleAction getAccessibleAction()\n+    {\n+      return null;\n+    }\n+\n+    public String getAccessibleActionDescription(int value0)\n+    {\n+      return null;\n+    }\n+\n+    public int getAccessibleActionCount()\n+    {\n+      return 0;\n+    }\n+\n+    public boolean doAccessibleAction(int value0)\n+    {\n+      return false;\n+    }\n+\n+    public int getAccessibleSelectionCount()\n+    {\n+      return 0;\n+    }\n+\n+    public void addAccessibleSelection(int value0)\n+    {\n+    }\n+\n+    public void removeAccessibleSelection(int value0)\n+    {\n+    }\n+\n+    public void clearAccessibleSelection()\n+    {\n+    }\n+\n+    public void selectAllAccessibleSelection()\n+    {\n+    }\n   }\n }"}, {"sha": "eadf855a3edbee873cf0e7a1475c4db7d94178c3", "filename": "libjava/javax/swing/JComponent.java", "status": "modified", "additions": 261, "deletions": 47, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComponent.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -37,6 +37,7 @@\n \n package javax.swing;\n \n+import java.awt.AWTEvent;\n import java.awt.Color;\n import java.awt.Component;\n import java.awt.Container;\n@@ -48,11 +49,13 @@\n import java.awt.Insets;\n import java.awt.Point;\n import java.awt.Rectangle;\n+import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.awt.event.ContainerEvent;\n import java.awt.event.ContainerListener;\n import java.awt.event.FocusEvent;\n import java.awt.event.FocusListener;\n+import java.awt.event.KeyEvent;\n import java.awt.event.MouseEvent;\n import java.awt.geom.Rectangle2D;\n import java.awt.image.ImageObserver;\n@@ -192,22 +195,12 @@ public void removePropertyChangeListener(PropertyChangeListener listener) {}\n   Border border;\n \n   /** \n-   * A tooltip associated with this component. \n-   * \n-   * @see #setToolTip\n-   * @see #getToolTip\n-   * @see #toolTipText\n-   */\n-  JToolTip toolTip;\n-\n-  /** \n-   * The text to show in the tooltip associated with this component. \n+   * The text to show in the tooltip associated with this component.\n    * \n    * @see #setToolTipText\n    * @see #getToolTipText\n-   * @see #toolTip\n    */\n-  String toolTipText;\n+   String toolTipText;\n \n   /** \n    * <p>Whether to double buffer this component when painting. This flag\n@@ -325,6 +318,11 @@ public void removePropertyChangeListener(PropertyChangeListener listener) {}\n    * first client property.\n    */\n   private Hashtable clientProperties;\n+  \n+  private InputMap inputMap_whenFocused;\n+  private InputMap inputMap_whenAncestorOfFocused;\n+  private InputMap inputMap_whenInFocusedWindow;\n+  private ActionMap actionMap;\n \n   /** \n    * A lock held during recursive painting; this is used to serialize\n@@ -757,18 +755,6 @@ public AccessibleContext getAccessibleContext()\n     return null;\n   }\n \n-  /**\n-   * Get the ActionListener (typically an {@link Action} object) which is\n-   * associated with a particular keystroke. \n-   *\n-   * @param aKeyStroke The keystroke to retrieve the action of\n-   *\n-   * @return The action associated with the specified keystroke\n-   */\n-  public ActionListener getActionForKeyStroke(KeyStroke aKeyStroke)\n-  {\n-    return null;\n-  }\n \n   /**\n    * Get the value of the {@link #alignmentX} property.\n@@ -875,24 +861,6 @@ protected Graphics getComponentGraphics(Graphics g)\n     return g;\n   }\n \n-  /**\n-   * Return the condition that determines whether a registered action\n-   * occurs in response to the specified keystroke.\n-   *\n-   * @param aKeyStroke The keystroke to return the condition of\n-   *\n-   * @return One of the values {@link #UNDEFINED_CONDITION}, {@link\n-   * #WHEN_ANCESTOR_OF_FOCUSED_COMPONENT}, {@link #WHEN_FOCUSED}, or {@link\n-   * #WHEN_IN_FOCUSED_WINDOW}\n-   *\n-   * @see #registerKeyboardAction   \n-   * @see #unregisterKeyboardAction   \n-   * @see #resetKeyboardActiond\n-   */\n-  public int getConditionForKeyStroke(KeyStroke aKeyStroke)\n-  {\n-    return UNDEFINED_CONDITION;\n-  }\n \n   /**\n    * Get the value of the {@link #debugGraphicsOptions} property.\n@@ -1113,11 +1081,9 @@ public Dimension getSize(Dimension rv)\n    */\n   public JToolTip createToolTip()\n   {\n-    if (toolTip == null)\n-      {\n-\ttoolTip = new JToolTip();\n+\tJToolTip toolTip = new JToolTip();\n+\ttoolTip.setComponent(this);\n \ttoolTip.setTipText(toolTipText);\n-      }\n     \n     return toolTip;\n   }\n@@ -1145,7 +1111,22 @@ public Point getToolTipLocation(MouseEvent event)\n    */\n   public void setToolTipText(String text)\n   {\n+    if (text == null)\n+    {\n+      ToolTipManager.sharedInstance().unregisterComponent(this);\n+      toolTipText = null;\n+      return;\n+    }\n+\t\t\n+    // XXX: The tip text doesn't get updated unless you set it to null\n+    // and then to something not-null. This is consistent with the behaviour\n+    // of Sun's ToolTipManager.\n+\t\t\t\n+    String oldText = toolTipText;\n     toolTipText = text;\n+\t\t\n+    if (oldText == null)\n+      ToolTipManager.sharedInstance().registerComponent(this);\n   }\n \n   /**\n@@ -1172,7 +1153,7 @@ public String getToolTipText()\n    */\n   public String getToolTipText(MouseEvent event)\n   {\n-    return toolTipText;\n+    return getToolTipText();\n   }\n \n   /**\n@@ -1519,6 +1500,51 @@ public void registerKeyboardAction(ActionListener act,\n     registerKeyboardAction(act, null, stroke, cond);\n   }\n \n+  /* \n+   * There is some charmingly undocumented behavior sun seems to be using\n+   * to simulate the old register/unregister keyboard binding API. It's not\n+   * clear to me why this matters, but we shall endeavour to follow suit.\n+   *\n+   * Two main thing seem to be happening when you do registerKeyboardAction():\n+   * \n+   *  - no actionMap() entry gets created, just an entry in inputMap()\n+   *\n+   *  - the inputMap() entry is a proxy class which invokes the the\n+   *  binding's actionListener as a target, and which clobbers the command\n+   *  name sent in the ActionEvent, providing the binding command name\n+   *  instead.\n+   *\n+   * This much you can work out just by asking the input and action maps\n+   * what they contain after making bindings, and watching the event which\n+   * gets delivered to the recipient. Beyond that, it seems to be a\n+   * sun-private solution so I will only immitate it as much as it matters\n+   * to external observers.\n+   */\n+\n+  private static class ActionListenerProxy\n+    extends AbstractAction\n+  {\n+    ActionListener target;\n+    String bindingCommandName;\n+\n+    public ActionListenerProxy(ActionListener li, \n+                               String cmd)\n+    {\n+      target = li;\n+      bindingCommandName = cmd;\n+    }\n+\n+    public void actionPerformed(ActionEvent e)\n+    {\n+      ActionEvent derivedEvent = new ActionEvent(e.getSource(),\n+                                                 e.getID(),\n+                                                 bindingCommandName,\n+                                                 e.getModifiers());\n+      target.actionPerformed(derivedEvent);\n+    }\n+  }\n+\n+  \n   /**\n    * An obsolete method to register a keyboard action on this component.\n    * You should use <code>getInputMap</code> and <code>getActionMap</code>\n@@ -1543,8 +1569,185 @@ public void registerKeyboardAction(ActionListener act,\n                                      KeyStroke stroke, \n                                      int cond)\n   {\n+    getInputMap(cond).put(stroke, new ActionListenerProxy(act, cmd));\n+  }\n+\n+\n+\n+  public final void setInputMap(int condition, InputMap map)\n+  {\n+    enableEvents(AWTEvent.KEY_EVENT_MASK);\n+    switch (condition)\n+      {\n+      case WHEN_FOCUSED:\n+        inputMap_whenFocused = map;\n+        break;\n+\n+      case WHEN_ANCESTOR_OF_FOCUSED_COMPONENT:\n+        inputMap_whenAncestorOfFocused = map;\n+        break;\n+\n+      case WHEN_IN_FOCUSED_WINDOW:\n+        inputMap_whenInFocusedWindow = map;\n+        break;\n+        \n+      case UNDEFINED_CONDITION:\n+      default:\n+        throw new IllegalArgumentException();\n+      }\n+  }\n+\n+  public final InputMap getInputMap(int condition)\n+  {\n+    enableEvents(AWTEvent.KEY_EVENT_MASK);\n+    switch (condition)\n+      {\n+      case WHEN_FOCUSED:\n+        if (inputMap_whenFocused == null)\n+          inputMap_whenFocused = new InputMap();\n+        return inputMap_whenFocused;\n+\n+      case WHEN_ANCESTOR_OF_FOCUSED_COMPONENT:\n+        if (inputMap_whenAncestorOfFocused == null)\n+          inputMap_whenAncestorOfFocused = new InputMap();\n+        return inputMap_whenAncestorOfFocused;\n+\n+      case WHEN_IN_FOCUSED_WINDOW:\n+        if (inputMap_whenInFocusedWindow == null)\n+          inputMap_whenInFocusedWindow = new InputMap();\n+        return inputMap_whenInFocusedWindow;\n+\n+      case UNDEFINED_CONDITION:\n+      default:\n+        return null;\n+      }\n+  }\n+\n+  public final InputMap getInputMap()\n+  {\n+    return getInputMap(WHEN_FOCUSED);\n+  }\n+\n+  public final ActionMap getActionMap()\n+  {\n+    if (actionMap == null)\n+      actionMap = new ActionMap();\n+    return actionMap;\n+  }\n+\n+  public final void setActionMap(ActionMap map)\n+  {\n+    actionMap = map;\n   }\n \n+  /**\n+   * @deprecated As of 1.3 KeyStrokes can be registered with multiple\n+   * simultaneous conditions.\n+   *\n+   * Return the condition that determines whether a registered action\n+   * occurs in response to the specified keystroke.\n+   *\n+   * @param aKeyStroke The keystroke to return the condition of\n+   *\n+   * @return One of the values {@link #UNDEFINED_CONDITION}, {@link\n+   * #WHEN_ANCESTOR_OF_FOCUSED_COMPONENT}, {@link #WHEN_FOCUSED}, or {@link\n+   * #WHEN_IN_FOCUSED_WINDOW}\n+   *\n+   * @see #registerKeyboardAction   \n+   * @see #unregisterKeyboardAction   \n+   * @see #resetKeyboardActiond\n+   */\n+  public int getConditionForKeyStroke(KeyStroke ks)\n+  {\n+    if (inputMap_whenFocused != null \n+        && inputMap_whenFocused.get(ks) != null)\n+      return WHEN_FOCUSED;\n+    else if (inputMap_whenAncestorOfFocused != null \n+             && inputMap_whenAncestorOfFocused.get(ks) != null)\n+      return WHEN_ANCESTOR_OF_FOCUSED_COMPONENT;\n+    else if (inputMap_whenInFocusedWindow != null \n+             && inputMap_whenInFocusedWindow.get(ks) != null)\n+      return WHEN_IN_FOCUSED_WINDOW;\n+    else\n+      return UNDEFINED_CONDITION;\n+  }\n+\n+  /**\n+   * @deprecated Use {@link #getActionMap()}\n+   *\n+   * Get the ActionListener (typically an {@link Action} object) which is\n+   * associated with a particular keystroke. \n+   *\n+   * @param aKeyStroke The keystroke to retrieve the action of\n+   *\n+   * @return The action associated with the specified keystroke\n+   */\n+  public ActionListener getActionForKeyStroke(KeyStroke ks)\n+  {\n+    Object cmd = getInputMap().get(ks);\n+    if (cmd != null)\n+      {\n+        if (cmd instanceof ActionListenerProxy)\n+          return (ActionListenerProxy) cmd;\n+        else if (cmd instanceof String)\n+          return getActionMap().get(cmd);\n+      }\n+    return null;\n+  }\n+\n+  /**\n+   * A hook for subclasses which want to customize event processing.\n+   */\n+  protected void processComponentKeyEvent(KeyEvent e)\n+  {\n+  }\n+\n+  /**\n+   * Override the default key dispatch system from Component to hook into\n+   * the swing {@link InputMap} / {@link ActionMap} system.\n+   *\n+   * See <a\n+   * href=\"http://java.sun.com/products/jfc/tsc/special_report/kestrel/keybindings.html\">this\n+   * report</a> for more details, it's somewhat complex.\n+   */\n+  protected void processKeyEvent(KeyEvent e)\n+  {\n+    processComponentKeyEvent(e);\n+\n+    // FIXME: this needs to be elaborated significantly, to do all the\n+    // focus / ancestor / window searching for the various binding modes.\n+    if (! e.isConsumed() &&\n+        processKeyBinding(KeyStroke.getKeyStrokeForEvent(e), \n+                          e, WHEN_FOCUSED, e.getID() == KeyEvent.KEY_PRESSED))\n+      e.consume();\n+  }\n+\n+  protected boolean processKeyBinding(KeyStroke ks,\n+                                      KeyEvent e,\n+                                      int condition,\n+                                      boolean pressed)\n+  { \n+    if (isEnabled())\n+      {\n+        Action act = null;\n+        InputMap map = getInputMap(condition);\n+        if (map != null)\n+          {\n+            Object cmd = map.get(ks);\n+            if (cmd != null)\n+              {\n+                if (cmd instanceof ActionListenerProxy)\n+                  act = (Action) cmd;\n+                else \n+                  act = (Action) getActionMap().get(cmd);\n+              }\n+          }\n+        if (act != null && act.isEnabled())\n+          return SwingUtilities.notifyAction(act, ks, e, this, e.getModifiers());\n+      }\n+    return false;\n+  }\n+  \n   /**\n    * Remove a keyboard action registry.\n    *\n@@ -1568,6 +1771,14 @@ public void unregisterKeyboardAction(KeyStroke aKeyStroke)\n    */\n   public void resetKeyboardActions()\n   {\n+    if (inputMap_whenFocused != null)\n+      inputMap_whenFocused.clear();\n+    if (inputMap_whenAncestorOfFocused != null)\n+      inputMap_whenAncestorOfFocused.clear();\n+    if (inputMap_whenInFocusedWindow != null)\n+      inputMap_whenInFocusedWindow.clear();\n+    if (actionMap != null)\n+      actionMap.clear();\n   }\n \n \n@@ -1875,11 +2086,14 @@ protected void setUI(ComponentUI newUI)\n     if (ui != null)\n       ui.uninstallUI(this);\n \n+    ComponentUI oldUI = ui;\n     ui = newUI;\n \n     if (ui != null)\n       ui.installUI(this);\n \n+    firePropertyChange(\"UI\", oldUI, newUI);\n+    \n     revalidate();\n     repaint();\n   }"}, {"sha": "8074799a7ab9c89215072fcffd844365cf1897a0", "filename": "libjava/javax/swing/JFormattedTextField.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -135,7 +135,7 @@ public AbstractFormatterFactory ()\n   \n   public JFormattedTextField ()\n   {\n-    throw new InternalError (\"not implemented\");\n+    this((AbstractFormatterFactory) null);\n   }\n \n   public JFormattedTextField (Format format)\n@@ -150,7 +150,7 @@ public JFormattedTextField (AbstractFormatter formatter)\n \n   public JFormattedTextField (AbstractFormatterFactory factory)\n   {\n-    throw new InternalError (\"not implemented\");\n+    this(factory, null);\n   }\n \n   public JFormattedTextField (AbstractFormatterFactory factory, Object value)"}, {"sha": "652c965e545d1462dc94ad0e2dd1df64c0b091d9", "filename": "libjava/javax/swing/JLabel.java", "status": "modified", "additions": 98, "deletions": 96, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLabel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -38,8 +38,9 @@\n package javax.swing;\n \n import java.awt.Component;\n-import java.awt.Image;\n import java.awt.Font;\n+import java.awt.Image;\n+import java.awt.event.KeyEvent;\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n import javax.swing.Icon;\n@@ -48,7 +49,7 @@\n \n /**\n  * <p>\n- * A swing widget that displays a text message and/or an icon. \n+ * A swing widget that displays a text message and/or an icon.\n  * </p>\n  */\n public class JLabel extends JComponent implements Accessible, SwingConstants\n@@ -63,10 +64,10 @@ public class JLabel extends JComponent implements Accessible, SwingConstants\n   protected Component labelFor;\n \n   /** The label's text. */\n-  private transient String labelText;\n+  private transient String text;\n \n   /** Where the label will be positioned horizontally. */\n-  private transient int horizontalAlignment = CENTER;\n+  private transient int horizontalAlignment = LEADING;\n \n   /** Where the label text will be placed horizontally relative to the icon. */\n   private transient int horizontalTextPosition = TRAILING;\n@@ -78,16 +79,16 @@ public class JLabel extends JComponent implements Accessible, SwingConstants\n   private transient int verticalTextPosition = CENTER;\n \n   /** The icon painted when the label is enabled. */\n-  private transient Icon activeIcon;\n+  private transient Icon icon;\n \n   /** The icon painted when the label is disabled. */\n   private transient Icon disabledIcon;\n \n   /** The label's mnemnonic key. */\n-  private transient char mnemonicKey;\n+  private transient int displayedMnemonic = KeyEvent.VK_UNDEFINED;\n \n   /** The index of the menemonic character in the text. */\n-  private transient int underlinedChar = -1;\n+  private transient int displayedMnemonicIndex = -1;\n \n   /** The gap between the icon and the text. */\n   private transient int iconTextGap = 4;\n@@ -102,10 +103,11 @@ public class JLabel extends JComponent implements Accessible, SwingConstants\n    * changes.\n    */\n   public static final String DISPLAYED_MNEMONIC_CHANGED_PROPERTY = \"displayedMnemonic\";\n-  \n+\n   /**\n-   * Fired in a PropertyChangeEvent when the \"displayedMnemonicIndex\"\n-   * property changes. */\n+   * Fired in a PropertyChangeEvent when the \"displayedMnemonicIndex\" property\n+   * changes.\n+   */\n   public static final String DISPLAYED_MNEMONIC_INDEX_CHANGED_PROPERTY = \"displayedMnemonicIndex\";\n \n   /**\n@@ -145,17 +147,17 @@ public class JLabel extends JComponent implements Accessible, SwingConstants\n   public static final String VERTICAL_TEXT_POSITION_CHANGED_PROPERTY = \"verticalTextPosition\";\n \n   /**\n-   * Creates a new horizontally and vertically centered JLabel object with no text and no\n-   * icon.\n+   * Creates a new horizontally and vertically centered JLabel object with no\n+   * text and no icon.\n    */\n   public JLabel()\n   {\n     this(null, null, CENTER);\n   }\n \n   /**\n-   * Creates a new horizontally and vertically centered JLabel object with no text and the\n-   * given icon.\n+   * Creates a new horizontally and vertically centered JLabel object with no\n+   * text and the given icon.\n    *\n    * @param image The icon to use with the label.\n    */\n@@ -165,8 +167,9 @@ public JLabel(Icon image)\n   }\n \n   /**\n-   * Creates a new vertically centered JLabel object with no text and the given icon and\n-   * horizontal alignment. By default, the text is TRAILING the image.\n+   * Creates a new vertically centered JLabel object with no text and the\n+   * given icon and horizontal alignment. By default, the text is TRAILING\n+   * the image.\n    *\n    * @param image The icon to use with the label.\n    * @param horizontalAlignment The horizontal alignment of the label.\n@@ -177,8 +180,8 @@ public JLabel(Icon image, int horizontalAlignment)\n   }\n \n   /**\n-   * Creates a new horizontally and vertically centered JLabel object with no icon and the\n-   * given text.\n+   * Creates a new horizontally and vertically centered JLabel object with no\n+   * icon and the given text.\n    *\n    * @param text The text to use with the label.\n    */\n@@ -188,8 +191,8 @@ public JLabel(String text)\n   }\n \n   /**\n-   * Creates a new vertically centered JLabel object with no icon and the given text and\n-   * horizontal alignment.\n+   * Creates a new vertically centered JLabel object with no icon and the\n+   * given text and horizontal alignment.\n    *\n    * @param text The text to use with the label.\n    * @param horizontalAlignment The horizontal alignment of the label.\n@@ -200,17 +203,17 @@ public JLabel(String text, int horizontalAlignment)\n   }\n \n   /**\n-   * Creates a new vertically centered JLabel object with the given text, icon, and horizontal\n-   * alignment.\n+   * Creates a new vertically centered JLabel object with the given text,\n+   * icon, and horizontal alignment.\n    *\n    * @param text The text to use with the label.\n    * @param icon The icon to use with the label.\n    * @param horizontalAlignment The horizontal alignment of the label.\n    */\n   public JLabel(String text, Icon icon, int horizontalAlignment)\n   {\n-    labelText = text;\n-    activeIcon = icon;\n+    this.text = text;\n+    this.icon = icon;\n     this.horizontalAlignment = horizontalAlignment;\n     updateUI();\n   }\n@@ -273,24 +276,25 @@ protected String paramString()\n    */\n   public String getText()\n   {\n-    return labelText;\n+    return text;\n   }\n \n   /**\n    * This method changes the \"text\" property. The given text will be painted\n    * in the label.\n    *\n-   * @param text The label's text.\n+   * @param newText The label's text.\n    */\n-  public void setText(String text)\n+  public void setText(String newText)\n   {\n-    if (text != labelText)\n+    if (text != newText)\n       {\n-\tString oldText = labelText;\n-\tlabelText = text;\n-\tfirePropertyChange(TEXT_CHANGED_PROPERTY, oldText, labelText);\n-\tif (labelText != null && labelText.length() <= underlinedChar)\n-\t  setDisplayedMnemonicIndex(labelText.length() - 1);\n+\tString oldText = text;\n+\ttext = newText;\n+\tfirePropertyChange(TEXT_CHANGED_PROPERTY, oldText, newText);\n+\n+\tif (text != null && text.length() <= displayedMnemonicIndex)\n+\t  setDisplayedMnemonicIndex(text.length() - 1);\n       }\n   }\n \n@@ -302,54 +306,55 @@ public void setText(String text)\n    */\n   public Icon getIcon()\n   {\n-    return activeIcon;\n+    return icon;\n   }\n \n   /**\n    * This method changes the \"icon\" property. This icon (the active icon) will\n    * be the one displayed when the label is enabled.\n    *\n-   * @param icon The active icon.\n+   * @param newIcon The active icon.\n    */\n-  public void setIcon(Icon icon)\n+  public void setIcon(Icon newIcon)\n   {\n-    if (icon != activeIcon)\n+    if (icon != newIcon)\n       {\n-\tIcon oldIcon = activeIcon;\n-\tactiveIcon = icon;\n-\tfirePropertyChange(ICON_CHANGED_PROPERTY, oldIcon, activeIcon);\n+\tIcon oldIcon = icon;\n+\ticon = newIcon;\n+\tfirePropertyChange(ICON_CHANGED_PROPERTY, oldIcon, newIcon);\n       }\n   }\n \n   /**\n    * This method returns the disabled icon. The disabled icon is painted when\n-   * the label is disabled. If the disabled icon is null and the active icon is\n-   * an ImageIcon, this method returns a grayed version of the icon. The grayed \n-   * version of the icon becomes the disabledIcon.\n+   * the label is disabled. If the disabled icon is null and the active icon\n+   * is an ImageIcon, this method returns a grayed version of the icon. The\n+   * grayed  version of the icon becomes the disabledIcon.\n    *\n    * @return The disabled icon.\n    */\n   public Icon getDisabledIcon()\n   {\n-    if (disabledIcon == null && activeIcon instanceof ImageIcon)\n-      disabledIcon = new ImageIcon(GrayFilter.createDisabledImage(((ImageIcon) activeIcon).getImage()));\n+    if (disabledIcon == null && icon instanceof ImageIcon)\n+      disabledIcon = new ImageIcon(GrayFilter.createDisabledImage(((ImageIcon) icon)\n+                                                                  .getImage()));\n+\n     return disabledIcon;\n   }\n \n   /**\n    * This method changes the \"disabledIcon\" property. This icon (the disabled\n    * icon) will be the one displayed when the label is disabled.\n    *\n-   * @param disabledIcon The disabled icon.\n+   * @param newIcon The disabled icon.\n    */\n-  public void setDisabledIcon(Icon disabledIcon)\n+  public void setDisabledIcon(Icon newIcon)\n   {\n-    if (disabledIcon != this.disabledIcon)\n+    if (disabledIcon != newIcon)\n       {\n-\tIcon oldDisabledIcon = this.disabledIcon;\n-\tthis.disabledIcon = disabledIcon;\n-\tfirePropertyChange(DISABLED_ICON_CHANGED_PROPERTY, oldDisabledIcon,\n-\t                   this.disabledIcon);\n+\tIcon oldIcon = disabledIcon;\n+\tdisabledIcon = newIcon;\n+\tfirePropertyChange(DISABLED_ICON_CHANGED_PROPERTY, oldIcon, newIcon);\n       }\n   }\n \n@@ -358,31 +363,31 @@ public void setDisabledIcon(Icon disabledIcon)\n    * label is used as a label for another component, the label will give\n    * focus to that component when the mnemonic is activated.\n    *\n-   * @param key The keycode to use for the mnemonic.\n+   * @param mnemonic The keycode to use for the mnemonic.\n    */\n-  public void setDisplayedMnemonic(int key)\n+  public void setDisplayedMnemonic(int mnemonic)\n   {\n-    setDisplayedMnemonic((char) key);\n+    if (displayedMnemonic != mnemonic)\n+      {\n+\tfirePropertyChange(DISPLAYED_MNEMONIC_CHANGED_PROPERTY,\n+\t                   displayedMnemonic, mnemonic);\n+\tdisplayedMnemonic = mnemonic;\n+\n+\tif (text != null)\n+\t  setDisplayedMnemonicIndex(text.indexOf(mnemonic));\n+      }\n   }\n \n   /**\n    * This method sets the character that will be the mnemonic used. If the\n    * label is used as a label for another component, the label will give\n    * focus to that component when the mnemonic is activated.\n    *\n-   * @param aChar The character to use for the mnemonic.\n+   * @param mnemonic The character to use for the mnemonic.\n    */\n-  public void setDisplayedMnemonic(char aChar)\n+  public void setDisplayedMnemonic(char mnemonic)\n   {\n-    if (aChar != mnemonicKey)\n-      {\n-\tchar oldKey = mnemonicKey;\n-\tmnemonicKey = aChar;\n-\tfirePropertyChange(DISPLAYED_MNEMONIC_CHANGED_PROPERTY, oldKey,\n-\t                   mnemonicKey);\n-\tif (labelText != null)\n-\t  setDisplayedMnemonicIndex(labelText.indexOf(mnemonicKey));\n-      }\n+    setDisplayedMnemonic((int) mnemonic);\n   }\n \n   /**\n@@ -392,7 +397,7 @@ public void setDisplayedMnemonic(char aChar)\n    */\n   public int getDisplayedMnemonic()\n   {\n-    return (int) mnemonicKey;\n+    return (int) displayedMnemonic;\n   }\n \n   /**\n@@ -401,27 +406,26 @@ public int getDisplayedMnemonic()\n    * no mnemonic. If the index is less than -1 or if the index is equal to\n    * the length, this method will throw an IllegalArgumentException.\n    *\n-   * @param index The index of the character to underline.\n+   * @param newIndex The index of the character to underline.\n    *\n    * @throws IllegalArgumentException If index less than -1 or index equals\n    *         length.\n    */\n-  public void setDisplayedMnemonicIndex(int index)\n+  public void setDisplayedMnemonicIndex(int newIndex)\n                                  throws IllegalArgumentException\n   {\n-    if (index < -1 || labelText != null && index >= labelText.length())\n+    if (newIndex < -1 || (text != null && newIndex >= text.length()))\n       throw new IllegalArgumentException();\n-      \n-    if (labelText == null || labelText.charAt(index) != mnemonicKey)\n-      index = -1;\n-      \n-    if (index != underlinedChar)\n-    {\n-      int oldIndex = underlinedChar;  \n-      underlinedChar = index;\n-      firePropertyChange(DISPLAYED_MNEMONIC_INDEX_CHANGED_PROPERTY,\n-                         oldIndex, underlinedChar);\n-    }\n+\n+    if (text == null || text.charAt(newIndex) != displayedMnemonic)\n+      newIndex = -1;\n+\n+    if (newIndex != displayedMnemonicIndex)\n+      {\n+\tfirePropertyChange(DISPLAYED_MNEMONIC_INDEX_CHANGED_PROPERTY,\n+\t                   displayedMnemonicIndex, newIndex);\n+\tdisplayedMnemonicIndex = newIndex;\n+      }\n   }\n \n   /**\n@@ -432,7 +436,7 @@ public void setDisplayedMnemonicIndex(int index)\n    */\n   public int getDisplayedMnemonicIndex()\n   {\n-    return underlinedChar;\n+    return displayedMnemonicIndex;\n   }\n \n   /**\n@@ -490,16 +494,14 @@ public int getIconTextGap()\n    * This method changes the \"iconTextGap\" property. The iconTextGap\n    * determines how much space there is between the icon and the text.\n    *\n-   * @param iconTextGap The gap between the icon and the text.\n+   * @param newGap The gap between the icon and the text.\n    */\n-  public void setIconTextGap(int iconTextGap)\n+  public void setIconTextGap(int newGap)\n   {\n-    if (iconTextGap != this.iconTextGap)\n+    if (iconTextGap != newGap)\n       {\n-\tint oldIconTextGap = this.iconTextGap;\n-\tthis.iconTextGap = iconTextGap;\n-\tfirePropertyChange(ICON_TEXT_GAP_CHANGED_PROPERTY, oldIconTextGap,\n-\t                   iconTextGap);\n+\tfirePropertyChange(ICON_TEXT_GAP_CHANGED_PROPERTY, iconTextGap, newGap);\n+\ticonTextGap = newGap;\n       }\n   }\n \n@@ -632,11 +634,12 @@ public void setHorizontalTextPosition(int textPosition)\n   public boolean imageUpdate(Image img, int infoflags, int x, int y, int w,\n                              int h)\n   {\n-    Icon currIcon = (isEnabled()) ? activeIcon : disabledIcon;\n+    Icon currIcon = isEnabled() ? icon : disabledIcon;\n \n-    //Is this the correct way to check for image equality?\n+    // XXX: Is this the correct way to check for image equality?\n     if (currIcon != null && currIcon instanceof ImageIcon)\n       return (((ImageIcon) currIcon).getImage() == img);\n+\n     return false;\n   }\n \n@@ -664,15 +667,14 @@ public void setLabelFor(Component c)\n   {\n     if (c != labelFor)\n       {\n-\tComponent oldLabelFor = labelFor;\n+\tfirePropertyChange(LABEL_FOR_CHANGED_PROPERTY, labelFor, c);\n \tlabelFor = c;\n-\tfirePropertyChange(LABEL_FOR_CHANGED_PROPERTY, oldLabelFor, labelFor);\n       }\n   }\n-  \n+\n   /**\n-   * This method overrides setFont so that we can call for a repaint\n-   * after the font is changed.\n+   * This method overrides setFont so that we can call for a repaint after the\n+   * font is changed.\n    *\n    * @param f The font for this label.\n    */"}, {"sha": "a184e215a73d09a829e8b88b2525a61ce54068ce", "filename": "libjava/javax/swing/JLayeredPane.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLayeredPane.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -153,7 +153,7 @@ protected int[] layerToRange (Integer layer)\n         Map.Entry pair = (Map.Entry) i.next();\n         Integer layerNum = (Integer) pair.getKey ();\n         Integer layerSz = (Integer) pair.getValue ();\n-        if (layerNum == layer)\n+        if (layerNum.intValue() == layer.intValue())\n           {\n             ret[0] = ret[1] - layerSz.intValue ();\n             return ret;\n@@ -314,7 +314,7 @@ public void setPosition(Component c, int position)\n     int bot = range[1];\n     if (position == -1)\n \t    position = (bot - top) - 1;\n-    int targ = top + position;\n+    int targ = Math.min(top + position, bot-1);\n     int curr = -1;\n \n     Component[] comps = getComponents();\n@@ -539,7 +539,8 @@ public void setLayer(Component c,\n                        int layer,\n                        int position)\n   {\n-    componentToLayer.put (c, getObjectForLayer (layer));\n+    remove(c);\n+    add(c, getObjectForLayer (layer));\n     setPosition(c, position);\n     revalidate();\n     repaint();"}, {"sha": "b7638810c0b6fe3e11db74f31ee53982c5982178", "filename": "libjava/javax/swing/JList.java", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJList.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -588,6 +588,28 @@ public int getFirstVisibleIndex()\n     return getUI().locationToIndex(this, r.getLocation());      \n   }\n \n+\n+  /**\n+   * Returns index of the cell to which specified location is closest to\n+   * @param location for which to look for in the list\n+   * \n+   * @return index of the cell to which specified location is closest to.\n+   */\n+   public int locationToIndex(Point location) {\n+     return getUI().locationToIndex(this, location);      \n+   }\n+\n+  /**\n+   * Returns location of the cell located at the specified index in the list.\n+   * @param index of the cell for which location will be determined\n+   * \n+   * @return location of the cell located at the specified index in the list.\n+   */\n+   public Point indexToLocation(int index){\n+   \t//FIXME: Need to implement.\n+\treturn null;\n+   }\n+\n   /**\n    * Returns the list index of the lower right or lower left corner of the\n    * {@link #visibleRect} property, depending on the {@link"}, {"sha": "6bf2abc05567b001c84f582f4f35f862445a5562", "filename": "libjava/javax/swing/JMenuItem.java", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenuItem.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -313,7 +313,8 @@ public void processMouseEvent(MouseEvent event, MenuElement[] path,\n                                 MenuSelectionManager manager)\n   {\n     // Fire MenuDragMouseEvents if mouse is being dragged.\n-    boolean dragged = (event.getModifiers() & InputEvent.BUTTON1_MASK) != 0;\n+    boolean dragged\n+      = (event.getModifiersEx() & InputEvent.BUTTON1_DOWN_MASK) != 0;\n     if (dragged)\n       processMenuDragMouseEvent(createMenuDragMouseEvent(event, path, manager));\n \n@@ -335,11 +336,11 @@ public void processMouseEvent(MouseEvent event, MenuElement[] path,\n \t  setArmed(false);\n \tbreak;\n       case MouseEvent.MOUSE_PRESSED:\n-\t    if ((event.getModifiers() & InputEvent.BUTTON1_MASK) != 0)\n-\t      {\n-\t\tmodel.setArmed(true);\n-\t\tmodel.setPressed(true);\n-\t      }\n+\tif ((event.getModifiersEx() & InputEvent.BUTTON1_DOWN_MASK) != 0)\n+\t  {\n+\t    model.setArmed(true);\n+\t    model.setPressed(true);\n+\t  }\n \tbreak;\n       case MouseEvent.MOUSE_RELEASED:\n \tbreak;\n@@ -588,6 +589,18 @@ public void removeMenuDragMouseListener(MenuDragMouseListener listener)\n     listenerList.remove(MenuDragMouseListener.class, listener);\n   }\n \n+  /**\n+   * Returns all added MenuDragMouseListener objects.\n+   *\n+   * @return an array of listeners\n+   *\n+   * @since 1.4\n+   */\n+  public MenuDragMouseListener[] getMenuDragMouseListeners()\n+  {\n+    return (MenuDragMouseListener[]) listenerList.getListeners(MenuDragMouseListener.class);\n+  }\n+\n   /**\n    * Adds an MenuKeyListener to this menu item.  This listener will be\n    * invoked when MenuKeyEvents will be fired by this menu item.\n@@ -609,6 +622,18 @@ public void removeMenuKeyListener(MenuKeyListener listener)\n     listenerList.remove(MenuKeyListener.class, listener);\n   }\n \n+  /**\n+   * Returns all added MenuKeyListener objects.\n+   *\n+   * @return an array of listeners\n+   *\n+   * @since 1.4\n+   */\n+  public MenuKeyListener[] getMenuKeyListeners()\n+  {\n+    return (MenuKeyListener[]) listenerList.getListeners(MenuKeyListener.class);\n+  }\n+\n   /**\n    * A string that describes this JMenuItem. Normally only used\n    * for debugging."}, {"sha": "d7d3e43f86fbe9d24ce95e7b1d8e5a9b01cb2e0b", "filename": "libjava/javax/swing/JPopupMenu.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPopupMenu.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -144,6 +144,9 @@ public class JPopupMenu extends JComponent implements Accessible, MenuElement\n   /* Location of the popup */\n   private Point popupLocation;\n \n+  /* Field indicating if popup menu is visible or not */\n+  private boolean visible = false;\n+  \n   /* Bound Property indicating visibility of the popup menu*/\n   public static final String VISIBLE_CHANGED_PROPERTY = \"visible\";\n \n@@ -564,7 +567,7 @@ public void pack()\n    */\n   public boolean isVisible()\n   {\n-    return super.isVisible();\n+    return visible;\n   }\n \n   /**\n@@ -577,7 +580,7 @@ public boolean isVisible()\n   public void setVisible(boolean visible)\n   {\n     boolean old = isVisible();\n-    super.setVisible(visible);\n+    this.visible = visible;\n     if (old != isVisible())\n       {\n \tfirePropertyChange(VISIBLE_CHANGED_PROPERTY, old, (boolean) isVisible());\n@@ -615,7 +618,7 @@ public void setVisible(boolean visible)\n \t\t                            .getLayeredPane();\n \t\tPoint p = new Point(popupLocation.x, popupLocation.y);\n \t\tSwingUtilities.convertPointFromScreen(p, layeredPane);\n-\t\tpopup.show(p.x, p.y, size.width, size.height);\n+\t\tpopup.show(p.x, p.y, size.width, size.height);  \n \t      }\n \t    else\n \t      {"}, {"sha": "b1f733acf9e7fb9b88278874836f06d347007269", "filename": "libjava/javax/swing/JRadioButton.java", "status": "modified", "additions": 39, "deletions": 25, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRadioButton.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -44,33 +44,47 @@ public class JRadioButton extends JToggleButton\n {\n   private static final long serialVersionUID = 7751949583255506856L;\n \n-    public JRadioButton()\n-    {\n-\tthis(null, null);\n-    }\n-    public JRadioButton(Action a)\n-    {\n-\tthis();\n-\tsetAction(a);\n-    }\n-\n-    public JRadioButton(Icon icon)\n-    { \n-\tthis(null, icon);\n-    }    \n+  public JRadioButton()\n+  {\n+    this(null, null);\n+  }\n+    \n+  public JRadioButton(Action a)\n+  {\n+    this();\n+    setAction(a);\n+  }\n+\n+  public JRadioButton(Icon icon)\n+  { \n+    this(null, icon);\n+  }    \n   \n-    public JRadioButton(String text)\n-    {\n-\tthis(text, null);\n-    }\n+  public JRadioButton(Icon icon, boolean selected)\n+  { \n+    this(null, icon, selected);\n+  }    \n+  \n+  public JRadioButton(String text)\n+  {\n+    this(text, null);\n+  }\n+\n+  public JRadioButton(String text, boolean selected)\n+  {\n+    this(text, null, selected);\n+  }\n       \n-    public JRadioButton(String text, Icon icon)\n-    {\n-\tsuper(text, icon);\n-        borderPainted = false;\n-        contentAreaFilled = false;\n-    }\n-\n+  public JRadioButton(String text, Icon icon)\n+  {\n+    super(text, icon);\n+    borderPainted = false;\n+    contentAreaFilled = false;\n+  }\n+      \n+  public JRadioButton(String text, Icon icon, boolean selected)\n+  {\n+  }\n     \n     public AccessibleContext getAccessibleContext()\n     {"}, {"sha": "798c48b4b72820b43a389e1eb158178415a23106", "filename": "libjava/javax/swing/JScrollPane.java", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJScrollPane.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -41,7 +41,6 @@\n import java.awt.Component;\n import java.awt.ComponentOrientation;\n import java.awt.Dimension;\n-import java.awt.LayoutManager;\n import java.awt.Insets;\n import java.awt.LayoutManager;\n import java.awt.Point;\n@@ -510,7 +509,8 @@ public void stateChanged(ChangeEvent event)\n           else\n             {\n               // otherwise we got a change update from either the VSB or\n-              // HSB model, and we need to update the viewport position to\n+              // HSB model, and we need to update the viewport positions of\n+              // both the main viewport and any row or column headers to\n               // match.\n \n               int xpos = 0;\n@@ -527,6 +527,20 @@ public void stateChanged(ChangeEvent event)\n               if (vp != null\n                   && vp.getViewPosition() != pt)\n                 vp.setViewPosition(pt);\n+\n+              pt.x = 0;\n+\n+              if (rowHeader != null \n+                  && rowHeader.getViewPosition() != pt)\n+                rowHeader.setViewPosition(pt);\n+              \n+              pt.x = xpos;\n+              pt.y = 0;\n+\n+              if (columnHeader != null \n+                  && columnHeader.getViewPosition() != pt)\n+                columnHeader.setViewPosition(pt);\n+\n             }\n         }\n       };"}, {"sha": "0f3fbce8b707e080f5fb0b0e3e95ca446c519324", "filename": "libjava/javax/swing/JTabbedPane.java", "status": "modified", "additions": 67, "deletions": 68, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTabbedPane.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -44,7 +44,6 @@\n import java.awt.event.MouseEvent;\n import java.io.Serializable;\n import java.util.Vector;\n-\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n import javax.accessibility.AccessibleRole;\n@@ -79,12 +78,11 @@ public class JTabbedPane extends JComponent implements Serializable,\n   protected class AccessibleJTabbedPane extends JComponent.AccessibleJComponent\n     implements AccessibleSelection, ChangeListener\n   {\n+    /** DOCUMENT ME! */\n     private static final long serialVersionUID = 7610530885966830483L;\n-    \n+\n     /**\n      * Creates a new AccessibleJTabbedPane object.\n-     *\n-     * @param c DOCUMENT ME!\n      */\n     public AccessibleJTabbedPane()\n     {\n@@ -226,12 +224,16 @@ public void selectAllAccessibleSelection()\n    */\n   protected class ModelListener implements ChangeListener, Serializable\n   {\n+    /** DOCUMENT ME! */\n     private static final long serialVersionUID = 497359819958114132L;\n \n+    /**\n+     * Creates a new ModelListener object.\n+     */\n     protected ModelListener()\n     {\n     }\n-    \n+\n     /**\n      * This method is called whenever the model  is changed.\n      *\n@@ -387,7 +389,8 @@ public String getTitle()\n       return title;\n     }\n \n-  private static final long serialVersionUID = 1614381073220130939L;\n+    /** DOCUMENT ME! */\n+    private static final long serialVersionUID = 1614381073220130939L;\n \n     /**\n      * This method sets the title of the tab.\n@@ -398,7 +401,7 @@ public void setTitle(String text)\n     {\n       title = text;\n       if (title != null && title.length() <= underlinedChar)\n-        setDisplayedMnemonicIndex(title.length() - 1);      \n+\tsetDisplayedMnemonicIndex(title.length() - 1);\n     }\n \n     /**\n@@ -817,16 +820,21 @@ public int getSelectedIndex()\n    * This method checks the index.\n    *\n    * @param index The index to check.\n+   * @param start DOCUMENT ME!\n+   * @param end DOCUMENT ME!\n+   *\n+   * @throws IndexOutOfBoundsException DOCUMENT ME!\n    */\n   private void checkIndex(int index, int start, int end)\n   {\n     if (index < start || index >= end)\n-      throw new IndexOutOfBoundsException(\"Index < \" + start + \" || Index >= \" + end);\n+      throw new IndexOutOfBoundsException(\"Index < \" + start + \" || Index >= \"\n+                                          + end);\n   }\n \n   /**\n-   * This method sets the selected index. This method\n-   * will hide the old component and show the new component.\n+   * This method sets the selected index. This method will hide the old\n+   * component and show the new component.\n    *\n    * @param index The index to set it at.\n    */\n@@ -839,7 +847,7 @@ public void setSelectedIndex(int index)\n \t  getSelectedComponent().hide();\n \tif (index != -1 && getComponentAt(index) != null)\n \t  getComponentAt(index).show();\n-        model.setSelectedIndex(index);\t  \n+\tmodel.setSelectedIndex(index);\n       }\n   }\n \n@@ -867,8 +875,8 @@ public void setSelectedComponent(Component c)\n   }\n \n   /**\n-   * This method inserts tabs into JTabbedPane. This includes\n-   * adding the component to the JTabbedPane and hiding it.\n+   * This method inserts tabs into JTabbedPane. This includes adding the\n+   * component to the JTabbedPane and hiding it.\n    *\n    * @param title The title of the tab.\n    * @param icon The tab's icon.\n@@ -885,11 +893,11 @@ public void insertTab(String title, Icon icon, Component component,\n     // Hide the component so we don't see it. Do it before we parent it\n     // so we don't trigger a repaint.\n     if (component != null)\n-    {\n-      component.hide();\n-      super.add(component);\n-    }\n-    \n+      {\n+\tcomponent.hide();\n+\tsuper.add(component);\n+      }\n+\n     if (getSelectedIndex() == -1)\n       setSelectedIndex(0);\n \n@@ -934,15 +942,14 @@ public void addTab(String title, Component component)\n   }\n \n   /**\n-   * This method adds a tab to the JTabbedPane.\n-   * The title of the tab is the Component's name.\n-   * If the Component is an instance of UIResource, it doesn't\n-   * add the tab and instead add the component directly to the\n+   * This method adds a tab to the JTabbedPane. The title of the tab is the\n+   * Component's name. If the Component is an instance of UIResource, it\n+   * doesn't add the tab and instead add the component directly to the\n    * JTabbedPane.\n    *\n    * @param component The associated component.\n    *\n-   * @return The Component that was added.  \n+   * @return The Component that was added.\n    */\n   public Component add(Component component)\n   {\n@@ -954,17 +961,16 @@ public Component add(Component component)\n   }\n \n   /**\n-   * This method adds a tab to the JTabbedPane.\n-   * If the Component is an instance of UIResource, it doesn't\n-   * add the tab and instead add the component directly to the\n-   * JTabbedPane.\n+   * This method adds a tab to the JTabbedPane. If the Component is an\n+   * instance of UIResource, it doesn't add the tab and instead add the\n+   * component directly to the JTabbedPane.\n    *\n    * @param title The title of the tab.\n    * @param component The associated component.\n    *\n    * @return The Component that was added.\n    */\n-   public Component add(String title, Component component)\n+  public Component add(String title, Component component)\n   {\n     if (component instanceof UIResource)\n       super.add(component);\n@@ -974,10 +980,9 @@ public Component add(String title, Component component)\n   }\n \n   /**\n-   * This method adds a tab to the JTabbedPane.\n-   * If the Component is an instance of UIResource, it doesn't\n-   * add the tab and instead add the component directly to the\n-   * JTabbedPane.\n+   * This method adds a tab to the JTabbedPane. If the Component is an\n+   * instance of UIResource, it doesn't add the tab and instead add the\n+   * component directly to the JTabbedPane.\n    *\n    * @param component The associated component.\n    * @param index The index to insert the tab at.\n@@ -994,12 +999,11 @@ public Component add(Component component, int index)\n   }\n \n   /**\n-   * This method adds a tab to the JTabbedPane.\n-   * If the Component is an instance of UIResource, it doesn't\n-   * add the tab and instead add the component directly to the\n-   * JTabbedPane. If the constraints object is an icon, it\n-   * will be used as the tab's icon. If the constraints object\n-   * is a string, we will use it as the title.\n+   * This method adds a tab to the JTabbedPane. If the Component is an\n+   * instance of UIResource, it doesn't add the tab and instead add the\n+   * component directly to the JTabbedPane. If the constraints object is an\n+   * icon, it will be used as the tab's icon. If the constraints object is a\n+   * string, we will use it as the title.\n    *\n    * @param component The associated component.\n    * @param constraints The constraints object.\n@@ -1010,12 +1014,11 @@ public void add(Component component, Object constraints)\n   }\n \n   /**\n-   * This method adds a tab to the JTabbedPane.\n-   * If the Component is an instance of UIResource, it doesn't\n-   * add the tab and instead add the component directly to the\n-   * JTabbedPane. If the constraints object is an icon, it\n-   * will be used as the tab's icon. If the constraints object\n-   * is a string, we will use it as the title.\n+   * This method adds a tab to the JTabbedPane. If the Component is an\n+   * instance of UIResource, it doesn't add the tab and instead add the\n+   * component directly to the JTabbedPane. If the constraints object is an\n+   * icon, it will be used as the tab's icon. If the constraints object is a\n+   * string, we will use it as the title.\n    *\n    * @param component The associated component.\n    * @param constraints The constraints object.\n@@ -1037,27 +1040,25 @@ public void add(Component component, Object constraints, int index)\n   }\n \n   /**\n-   * The tab and it's associated component are removed. After\n-   * the component has been removed from the JTabbedPane, it's\n-   * set visible to ensure that it can be seen.\n+   * The tab and it's associated component are removed. After the component\n+   * has been removed from the JTabbedPane, it's set visible to ensure that\n+   * it can be seen.\n    *\n    * @param index The index of the tab to remove.\n-   *\n-   * @throws IndexOutOfBoundsException If the index is not in range.\n    */\n   public void removeTabAt(int index)\n   {\n     checkIndex(index, 0, tabs.size());\n     Component c = getComponentAt(index);\n-    super.remove(c);\n+    super.remove(index);\n     c.show();\n     tabs.remove(index);\n   }\n \n   /**\n-   * This method removes the component from the JTabbedPane. After\n-   * the component has been removed from the JTabbedPane, it's \n-   * set visible to ensure that it can be seen.\n+   * This method removes the component from the JTabbedPane. After the\n+   * component has been removed from the JTabbedPane, it's  set visible to\n+   * ensure that it can be seen.\n    *\n    * @param component The Component to remove.\n    */\n@@ -1071,8 +1072,8 @@ public void remove(Component component)\n   }\n \n   /**\n-   * This method removes the tab and component from the JTabbedPane.\n-   * It simply calls removeTabAt(int index).\n+   * This method removes the tab and component from the JTabbedPane. It simply\n+   * calls removeTabAt(int index).\n    *\n    * @param index The index of the tab to remove.\n    */\n@@ -1082,8 +1083,8 @@ public void remove(int index)\n   }\n \n   /**\n-   * This method removes all tabs and associated components\n-   * from the JTabbedPane.\n+   * This method removes all tabs and associated components from the\n+   * JTabbedPane.\n    */\n   public void removeAll()\n   {\n@@ -1102,8 +1103,7 @@ public int getTabCount()\n   }\n \n   /**\n-   * This method returns the number of runs used \n-   * to paint the JTabbedPane.\n+   * This method returns the number of runs used  to paint the JTabbedPane.\n    *\n    * @return The number of runs.\n    */\n@@ -1204,8 +1204,8 @@ public Component getComponentAt(int index)\n   }\n \n   /**\n-   * This method returns whether this tab is enabled.\n-   * Disabled tabs cannot be selected.\n+   * This method returns whether this tab is enabled. Disabled tabs cannot be\n+   * selected.\n    *\n    * @param index The index of the tab.\n    *\n@@ -1244,8 +1244,7 @@ public int getDisplayedMnemonicIndexAt(int tabIndex)\n   }\n \n   /**\n-   * This method returns the bounds of the tab given\n-   * the index.\n+   * This method returns the bounds of the tab given the index.\n    *\n    * @param index The index of the tab.\n    *\n@@ -1441,9 +1440,9 @@ public int indexOfComponent(Component component)\n   }\n \n   /**\n-   * This method returns a tab index given an (x,y) location. The origin\n-   * of the (x,y) pair will be the JTabbedPane's top left position. The \n-   * tab returned will be the one that contains the point. This method is \n+   * This method returns a tab index given an (x,y) location. The origin of\n+   * the (x,y) pair will be the JTabbedPane's top left position. The  tab\n+   * returned will be the one that contains the point. This method is\n    * delegated to the UI.\n    *\n    * @param x The x coordinate of the point.\n@@ -1470,8 +1469,8 @@ public String getToolTipText(MouseEvent event)\n   }\n \n   /**\n-   * This method returns a string representation of this JTabbedPane. It\n-   * is mainly used for debugging purposes.\n+   * This method returns a string representation of this JTabbedPane. It is\n+   * mainly used for debugging purposes.\n    *\n    * @return A string representation of this JTabbedPane.\n    */"}, {"sha": "4a81e0400cd8a52f1e84ff0d37708ab6ce415694", "filename": "libjava/javax/swing/JTable.java", "status": "modified", "additions": 1289, "deletions": 121, "changes": 1410, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTable.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -39,12 +39,14 @@\n package javax.swing;\n \n import java.awt.Color;\n+import java.awt.Component;\n import java.awt.Dimension;\n import java.awt.Rectangle;\n import java.util.Vector;\n import java.util.Hashtable;\n \n import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n import javax.swing.event.CellEditorListener;\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ListSelectionEvent;\n@@ -53,11 +55,14 @@\n import javax.swing.event.TableColumnModelListener;\n import javax.swing.event.TableModelEvent;\n import javax.swing.event.TableModelListener;\n+import javax.swing.plaf.TableUI;\n import javax.swing.table.DefaultTableColumnModel;\n+import javax.swing.table.DefaultTableCellRenderer;\n import javax.swing.table.DefaultTableModel;\n import javax.swing.table.JTableHeader;\n import javax.swing.table.TableCellEditor;\n import javax.swing.table.TableCellRenderer;\n+import javax.swing.table.TableColumn;\n import javax.swing.table.TableColumnModel;\n import javax.swing.table.TableModel;\n \n@@ -66,34 +71,259 @@ public class JTable extends JComponent\n              ListSelectionListener, CellEditorListener, Accessible\n {\n   private static final long serialVersionUID = 3876025080382781659L;\n-  \n-  public static final int AUTO_RESIZE_ALL_COLUMNS = 4;\n-  public static final int AUTO_RESIZE_LAST_COLUMN = 3;\n-  public static final int AUTO_RESIZE_NEXT_COLUMN = 1;\n+\n+\n+  /**\n+   * When resizing columns, do not automatically change any columns. In this\n+   * case the table should be enclosed in a {@link JScrollPane} in order to\n+   * accomodate cases in which the table size exceeds its visible area.\n+   */\n   public static final int AUTO_RESIZE_OFF = 0;\n+\n+  /**\n+   * When resizing column <code>i</code>, automatically change only the\n+   * single column <code>i+1</code> to provide or absorb excess space\n+   * requirements.\n+   */\n+  public static final int AUTO_RESIZE_NEXT_COLUMN = 1;\n+\n+  /**\n+   * When resizing column <code>i</code> in a table of <code>n</code>\n+   * columns, automatically change all columns in the range <code>[i+1,\n+   * n)</code>, uniformly, to provide or absorb excess space requirements.\n+   */\n   public static final int AUTO_RESIZE_SUBSEQUENT_COLUMNS = 2;\n   \n-  protected boolean autoCreateColumnsFromModel;\n-  protected int autoResizeMode;\n-  protected TableCellEditor cellEditor;\n-  protected boolean cellSelectionEnabled;\n-  protected TableColumnModel columnModel;\n-  protected TableModel dataModel;\n+  /**\n+   * When resizing column <code>i</code> in a table of <code>n</code>\n+   * columns, automatically change all columns in the range <code>[0,\n+   * n)</code> (with the exception of column i) uniformly, to provide or\n+   * absorb excess space requirements.\n+   */\n+  public static final int AUTO_RESIZE_ALL_COLUMNS = 4;\n+\n+  /**\n+   * When resizing column <code>i</code> in a table of <code>n</code>\n+   * columns, automatically change column <code>n-1</code> (the last column\n+   * in the table) to provide or absorb excess space requirements.\n+   */\n+  public static final int AUTO_RESIZE_LAST_COLUMN = 3;\n+\n+\n+  /**\n+   * A table mapping {@link java.lang.Class} objects to \n+   * {@link TableCellEditor} objects. This table is consulted by the \n+   * \n+   */\n   protected Hashtable defaultEditorsByColumnClass;\n   protected Hashtable defaultRenderersByColumnClass;\n   protected int editingColumn;\n   protected int editingRow;\n-  protected Color gridColor;\n-  protected Dimension preferredViewportSize;\n+\n+  /**\n+   * Whether or not the table should automatically compute a matching\n+   * {@link TableColumnModel} and assign it to the {@link #columnModel}\n+   * property when the {@link #dataModel} property is changed. \n+   *\n+   * @see #setModel()\n+   * @see #createColumnsFromModel()\n+   * @see #setColumnModel()\n+   * @see #setAutoCreateColumnsFromModel()\n+   * @see #getAutoCreateColumnsFromModel()\n+   */\n+  protected boolean autoCreateColumnsFromModel;\n+\n+  /**\n+   * A numeric code specifying the resizing behavior of the table. Must be\n+   * one of {@link #AUTO_RESIZE_ALL_COLUMNS} (the default), {@link\n+   * #AUTO_RESIZE_LAST_COLUMN}, {@link #AUTO_RESIZE_NEXT_COLUMN}, {@link\n+   * #AUTO_RESIZE_SUBSEQUENT_COLUMNS}, or {@link #AUTO_RESIZE_OFF}.\n+   * \n+   * @see #doLayout()\n+   * @see #setAutoResizeMode()\n+   * @see #getAutoResizeMode()\n+   */\n+  protected int autoResizeMode;\n+\n+  /**\n+   * The height in pixels of any row of the table. All rows in a table are\n+   * of uniform height. This differs from column width, which varies on a\n+   * per-column basis, and is stored in the individual columns of the\n+   * {@link #columnModel}.\n+   * \n+   * @see #getRowHeight()\n+   * @see #setRowHeight()\n+   * @see TableColumn#getWidth()\n+   * @see TableColumn#setWidth()\n+   */\n   protected int rowHeight;\n+\n+  /**\n+   * The height in pixels of the gap left between any two rows of the table. \n+   * \n+   * @see #setRowMargin()\n+   * @see #getRowHeight()\n+   * @see #getInterCellSpacing()\n+   * @see #setInterCellSpacing()\n+   * @see TableColumnModel#getColumnMargin()\n+   * @see TableColumnModel#setColumnMargin()\n+   */\n   protected int rowMargin;\n+\n+  /**\n+   * Whether or not the table should allow row selection. If the table\n+   * allows both row <em>and</em> column selection, it is said to allow\n+   * \"cell selection\". Previous versions of the JDK supported cell\n+   * selection as an independent concept, but it is now represented solely\n+   * in terms of simultaneous row and column selection.\n+   *\n+   * @see TableColumnModel#columnSelectionAllowed()\n+   * @see #setRowSelectionAllowed()\n+   * @see #getRowSelectionAllowed()\n+   * @see #getCellSelectionEnabled()\n+   * @see #setCellSelectionEnabled()\n+   */\n   protected boolean rowSelectionAllowed;\n-  protected Color selectionBackground;\n-  protected Color selectionForeground;\n+\n+  /**\n+   * @deprecated Use {@link #rowSelectionAllowed}, {@link\n+   * #columnSelectionAllowed}, or the combined methods {@link\n+   * getCellSelectionEnabled} and {@link setCellSelectionEnabled}.\n+   */\n+  protected boolean cellSelectionEnabled;\n+  \n+  /**\n+   * The model for data stored in the table. Confusingly, the published API\n+   * requires that this field be called <code>dataModel</code>, despite its\n+   * property name. The table listens to its model as a {@link\n+   * TableModelListener}.\n+   *\n+   * @see #tableChanged()\n+   * @see TableModel#addTableModelListener()\n+   */\n+  protected TableModel dataModel;\n+\n+  /**\n+   * <p>A model of various aspects of the columns of the table, <em>not\n+   * including</em> the data stored in them. The {@link TableColumnModel}\n+   * is principally concerned with holding a set of {@link TableColumn}\n+   * objects, each of which describes the display parameters of a column\n+   * and the numeric index of the column from the data model which the\n+   * column is presenting.</p>\n+   *\n+   * <p>The TableColumnModel also contains a {@link ListSelectionModel} which\n+   * indicates which columns are currently selected. This selection model\n+   * works in combination with the {@link selectionModel} of the table\n+   * itself to specify a <em>table selection</em>: a combination of row and\n+   * column selections.</p>\n+   *\n+   * <p>Most application programmers do not need to work with this property\n+   * at all: setting {@link #autoCreateColumnsFromModel} will construct the\n+   * columnModel automatically, and the table acts as a facade for most of\n+   * the interesting properties of the columnModel anyways.</p>\n+   * \n+   * @see #setColumnModel()\n+   * @see #getColumnModel()\n+   */\n+  protected TableColumnModel columnModel;\n+\n+  /**\n+   * A model of the rows of this table which are currently selected. This\n+   * model is used in combination with the column selection model held as a\n+   * member of the {@link columnModel} property, to represent the rows and\n+   * columns (or both: cells) of the table which are currently selected.\n+   *\n+   * @see #rowSelectionAllowed\n+   * @see #setSelectionModel()\n+   * @see #getSelectionModel()\n+   * @see TableColumnModel#getSelectionModel()\n+   * @see ListSelectionModel#addListSelectionListener()   \n+   */\n   protected ListSelectionModel selectionModel;\n+\n+  /**\n+   * The accessibleContext property.\n+   */\n+  protected AccessibleContext accessibleContext;\n+\n+  /**\n+   * The current cell editor. \n+   */\n+  protected TableCellEditor cellEditor;\n+\n+  /**\n+   * Whether or not drag-and-drop is enabled on this table.\n+   *\n+   * @see #setDragEnabled()\n+   * @see #getDragEnabled()\n+   */\n+  protected boolean dragEnabled;\n+\n+  /**\n+   * The color to paint the grid lines of the table, when either {@link\n+   * #showHorizontalLines} or {@link #showVerticalLines} is set.\n+   *\n+   * @see #setGridColor()\n+   * @see #getGridColor()\n+   */\n+  protected Color gridColor;\n+\n+  /**\n+   * The size this table would prefer its viewport assume, if it is\n+   * contained in a {@link JScrollPane}.\n+   *\n+   * @see #setPreferredScrollableViewportSize()\n+   * @see #getPreferredScrollableViewportSize()\n+   */\n+  protected Dimension preferredScrollableViewportSize;\n+\n+  /**\n+   * The color to paint the background of selected cells. Fires a property\n+   * change event with name {@link #SELECTION_BACKGROUND_CHANGED_PROPERTY}\n+   * when its value changes.\n+   *\n+   * @see #setSelectionBackground()\n+   * @see #getSelectionBackground()\n+   */\n+  Color selectionBackground;\n+\n+  /**\n+   * The name carried in property change events when the {@link\n+   * #selectionBackground} property changes.\n+   */\n+  private static final String SELECTION_BACKGROUND_CHANGED_PROPERTY = \"selectionBackground\";\n+\n+  /**\n+   * The color to paint the foreground of selected cells. Fires a property\n+   * change event with name {@link #SELECTION_FOREGROUND_CHANGED_PROPERTY}\n+   * when its value changes.\n+   *\n+   * @see #setSelectionForeground()\n+   * @see #getSelectionForeground()\n+   */\n+  Color selectionForeground;\n+\n+  /**\n+   * The name carried in property change events when the\n+   * {@link #selectionForeground} property changes.\n+   */\n+  private static final String SELECTION_FOREGROUND_CHANGED_PROPERTY = \"selectionForeground\";\n+\n+  /**\n+   * The showHorizontalLines property.\n+   */\n   protected boolean showHorizontalLines;\n+\n+  /**\n+   * The showVerticalLines property.\n+   */\n   protected boolean showVerticalLines;\n+\n+  /**\n+   * The tableHeader property.\n+   */\n   protected JTableHeader tableHeader;\n+\n   \n   /**\n    * Creates a new <code>JTable</code> instance.\n@@ -156,8 +386,33 @@ public JTable (TableModel dm, TableColumnModel cm)\n   public JTable (TableModel dm, TableColumnModel cm, ListSelectionModel sm)\n   {\n     this.dataModel = dm == null ? createDefaultDataModel() : dm;\n-    this.columnModel = cm == null ? createDefaultColumnModel() : cm;\n-    this.selectionModel = sm == null ? createDefaultListSelectionModel() : sm;\n+    setSelectionModel(sm == null ? createDefaultListSelectionModel() : sm);\n+\n+    this.columnModel = cm;\n+    this.autoCreateColumnsFromModel = false;\n+    if (cm == null)\n+      {\n+        this.autoCreateColumnsFromModel = true;\n+        createColumnsFromModel();\n+      }\n+    this.columnModel.addColumnModelListener(this);\n+    \n+    this.defaultRenderersByColumnClass = new Hashtable();\n+    this.defaultEditorsByColumnClass = new Hashtable();\n+\n+    this.autoResizeMode = AUTO_RESIZE_ALL_COLUMNS;\n+    this.rowHeight = 16;\n+    this.rowMargin = 1;\n+    this.rowSelectionAllowed = true;\n+    // this.accessibleContext = new AccessibleJTable();\n+    this.cellEditor = null;\n+    this.dragEnabled = false;\n+    this.preferredScrollableViewportSize = new Dimension(450,400);\n+    this.showHorizontalLines = true;\n+    this.showVerticalLines = true;\n+    setInterCellSpacing(new Dimension(1,1));\n+    setTableHeader(new JTableHeader(columnModel));\n+    updateUI();\n   }\n \n   /**\n@@ -178,216 +433,1129 @@ public static JScrollPane createScrollPaneForTable(JTable table)\n   {\n     return new JScrollPane(table);\n   }\n-\n-  public void clearSelection()\n+ \n+  protected TableColumnModel createDefaultColumnModel()\n   {\n-    selectionModel.clearSelection();\n+    return new DefaultTableColumnModel();\n   }\n \n-  public void columnAdded (TableColumnModelEvent event)\n+  protected TableModel createDefaultDataModel()\n   {\n-    throw new Error (\"Not implemented\");\n+    return new DefaultTableModel();\n   }\n \n-  public void columnMarginChanged (ChangeEvent event)\n+  protected ListSelectionModel createDefaultListSelectionModel()\n   {\n-    throw new Error (\"Not implemented\");\n+    return new DefaultListSelectionModel();\n   }\n-  \n-  public void columnMoved (TableColumnModelEvent event)\n+\n+  private void createColumnsFromModel()\n   {\n-    throw new Error (\"Not implemented\");\n+    if (dataModel == null)\n+      return;\n+\n+    TableColumnModel cm = createDefaultColumnModel();\n+\n+    for (int i = 0; i < dataModel.getColumnCount(); ++i)\n+      {\n+        cm.addColumn(new TableColumn(i));\n+      }\n+    this.setColumnModel(cm);\n   }\n-  \n-  public void columnRemoved (TableColumnModelEvent event)\n+\n+  // listener support \n+\n+  public void columnAdded (TableColumnModelEvent event)\n   {\n-    throw new Error (\"Not implemented\");\n+    revalidate();\n+    repaint();\n   }\n-  \n-  public void columnSelectionChanged (ListSelectionEvent event)\n+\n+  public void columnMarginChanged (ChangeEvent event)\n   {\n-    throw new Error (\"Not implemented\");\n+    revalidate();\n+    repaint();\n   }\n- \n-  protected TableColumnModel createDefaultColumnModel()\n+\n+  public void columnMoved (TableColumnModelEvent event)\n   {\n-    return new DefaultTableColumnModel();\n+    revalidate();\n+    repaint();\n   }\n \n-  protected TableModel createDefaultDataModel()\n+  public void columnRemoved (TableColumnModelEvent event)\n   {\n-    return new DefaultTableModel();\n+    revalidate();\n+    repaint();\n   }\n-\n-  protected ListSelectionModel createDefaultListSelectionModel()\n+  \n+  public void columnSelectionChanged (ListSelectionEvent event)\n   {\n-    return new DefaultListSelectionModel();\n+    repaint();\n   }\n \n   public void editingCanceled (ChangeEvent event)\n   {\n-    throw new Error (\"Not implemented\");\n+    repaint();\n   }\n \n   public void editingStopped (ChangeEvent event)\n   {\n-    throw new Error (\"Not implemented\");\n+    repaint();\n   }\n \n-  public TableColumnModel getColumnModel ()\n-  {\n-    return columnModel;\n-  }\n-  \n-  public TableModel getModel()\n-  {\n-    return dataModel;\n-  }\n-  \n-  public Dimension getPreferredScrollableViewportSize ()\n+  public void tableChanged (TableModelEvent event)\n   {\n-    throw new Error (\"Not implemented\");\n+    repaint();\n   }\n \n-  public int getScrollableBlockIncrement (Rectangle visibleRect, int orientation, int direction)\n+  public void valueChanged (ListSelectionEvent event)\n   {\n-    throw new Error (\"Not implemented\");\n+    repaint();\n   }\n \n-  public boolean getScrollableTracksViewportHeight ()\n-  {\n-    throw new Error (\"Not implemented\");\n-  }\n-  \n-  public boolean getScrollableTracksViewportWidth ()\n+\n+  /** \n+   * Calculate the visible rectangle for a particular row and column. The\n+   * row and column are specified in visual terms; the column may not match\n+   * the {@link #dataModel} column.\n+   *\n+   * @param row the visible row to get the cell rectangle of\n+   *\n+   * @param column the visible column to get the cell rectangle of, which may\n+   * differ from the {@link #dataModel} column\n+   *\n+   * @param includeSpacing whether or not to include the cell margins in the\n+   * resulting cell. If <code>false</code>, the result will only contain the\n+   * inner area of the target cell, not including its margins.\n+   *\n+   * @return a rectangle enclosing the specified cell\n+   */\n+  public Rectangle getCellRect(int row,\n+                               int column,\n+                               boolean includeSpacing)\n   {\n-    throw new Error (\"Not implemented\");\n+    int height = getHeight();\n+    int width = columnModel.getColumn(column).getWidth();\n+    int x_gap = columnModel.getColumnMargin();\n+    int y_gap = rowMargin;\n+\n+    column = Math.max(0, Math.min(column, getColumnCount() - 1));\n+    row = Math.max(0, Math.min(row, getRowCount() - 1));\n+\n+    int x = 0;\n+    int y = (height + y_gap) * row;\n+\n+    for (int i = 0; i < column; ++i)\n+      {        \n+        x += columnModel.getColumn(i).getWidth();\n+        x += x_gap;\n+      }\n+\n+    if (includeSpacing)\n+      return new Rectangle(x, y, width, height);\n+    else\n+      return new Rectangle(x, y, width - x_gap, height - y_gap);\n   }\n \n-  public int getScrollableUnitIncrement (Rectangle visibleRect, int orientation, int direction)\n+  public void clearSelection()\n   {\n-    throw new Error (\"Not implemented\");\n+    selectionModel.clearSelection();\n   }\n \n+  /**\n+   * Get the value of the {@link #selectedRow} property by delegation to\n+   * the {@link ListSelectionModel#getMinSelectionIndex} method of the\n+   * {@link #selectionModel} field.\n+   *\n+   * @return The current value of the selectedRow property\n+   */\n   public int getSelectedRow ()\n   {\n     return selectionModel.getMinSelectionIndex();\n   }\n   \n-  public ListSelectionModel getSelectionModel ()\n+  /**\n+   * Get the value of the {@link #selectionModel} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public ListSelectionModel getSelectionModel()\n   {\n     if (! rowSelectionAllowed)\n       return null;\n \n     return selectionModel;\n   }\n-\n-  public void tableChanged (TableModelEvent event)\n+  \n+  public int getScrollableBlockIncrement(Rectangle visibleRect, int orientation, int direction)\n   {\n-    throw new Error (\"Not implemented\");\n+    if (orientation == SwingConstants.VERTICAL)\n+      return visibleRect.height * direction;\n+    else\n+      return visibleRect.width * direction;\n   }\n \n-  public void setModel (TableModel model)\n-  {\n-    if (model == null)\n-      throw new IllegalArgumentException();\n+  /**\n+   * Get the value of the {@link #scrollableTracksViewportHeight} property.\n+   *\n+   * @return The constant value <code>false</code>\n+   */\n \n-    // FIXME: Should we deregister from old model ?\n-    \n-    dataModel = model;\n-    dataModel.addTableModelListener(this);\n+  public boolean getScrollableTracksViewportHeight()\n+  {\n+    return false;\n   }\n+  \n+  /**\n+   * Get the value of the {@link #scrollableTracksViewportWidth} property.\n+   *\n+   * @return <code>true</code> unless the {@link autoResizeMode} prperty is\n+   * <code>AUTO_RESIZE_OFF</code>\n+   */\n \n-  public void setSelectionMode (int selectionMode)\n+  public boolean getScrollableTracksViewportWidth()\n   {\n-    throw new Error (\"Not implemented\");\n+    if (autoResizeMode == AUTO_RESIZE_OFF)\n+      return false;\n+    else\n+      return true;\n   }\n \n-  public void setSelectionModel (ListSelectionModel model)\n+  public int getScrollableUnitIncrement(Rectangle visibleRect, int orientation, int direction)\n   {\n-    if (model == null)\n-      throw new IllegalArgumentException();\n+    // FIXME: I don't exactly know what sun does here. in both cases they\n+    // pick values which do *not* simply expose the next cell in a given\n+    // scroll direction.\n \n-    // FIXME: Should we deregister from old model ?\n-    \n-    selectionModel = model;\n-    selectionModel.addListSelectionListener(this);\n+    if (orientation == SwingConstants.VERTICAL)\n+      return rowHeight;\n+    else\n+      {\n+        int sum = 0;\n+        for (int i = 0; i < getColumnCount(); ++i)\n+          sum += columnModel.getColumn(0).getWidth();\n+        return getColumnCount() == 0 ? 10 : sum / getColumnCount();\n+      }\n   }\n \n-  public void setShowGrid (boolean showGrid)\n+\n+  public TableCellEditor getCellEditor(int row, int column)\n   {\n-    throw new Error (\"Not implemented\");\n+    TableCellEditor editor = columnModel.getColumn(column).getCellEditor();\n+\n+    if (editor == null)\n+      editor = getDefaultEditor(dataModel.getColumnClass(column));\n+\n+    return editor;\n   }\n \n-  public void valueChanged (ListSelectionEvent event)\n+  public TableCellEditor getDefaultEditor(Class columnClass)\n   {\n-    throw new Error (\"Not implemented\");\n+    if (defaultEditorsByColumnClass.containsKey(columnClass))\n+      return (TableCellEditor) defaultEditorsByColumnClass.get(columnClass);\n+    else\n+      {\n+        TableCellEditor r = new DefaultCellEditor(new JTextField());\n+        defaultEditorsByColumnClass.put(columnClass, r);\n+        return r;\n+      }\n   }\n \n-  public JTableHeader getTableHeader()\n+\n+\n+  public TableCellRenderer getCellRenderer(int row, int column)\n   {\n-    return tableHeader;\n+    TableCellRenderer renderer =\n+      columnModel.getColumn(column).getCellRenderer();\n+    \n+    if (renderer == null)\n+      renderer = getDefaultRenderer(dataModel.getColumnClass(column));\n+    \n+    return renderer;\n   }\n \n-  public void setTableHeader(JTableHeader newHeader)\n+  public TableCellRenderer getDefaultRenderer(Class columnClass)\n   {\n-    tableHeader = newHeader;\n+    if (defaultRenderersByColumnClass.containsKey(columnClass))\n+      return (TableCellRenderer) defaultRenderersByColumnClass.get(columnClass);\n+    else\n+      {\n+        TableCellRenderer r = new DefaultTableCellRenderer();\n+        defaultRenderersByColumnClass.put(columnClass, r);\n+        return r;\n+      }\n   }\n \n-  public boolean getColumnSelectionAllowed()\n+  public int convertColumnIndexToModel(int vc)\n   {\n-    return columnModel.getColumnSelectionAllowed();\n+    if (vc < 0)\n+      return vc;\n+    else if (vc > getColumnCount())\n+      return -1;\n+    else\n+      return columnModel.getColumn(vc).getModelIndex();\n   }\n-  \n-  public void setColumnSelectionAllowed(boolean flag)\n+\n+  public int convertColumnIndexToView(int mc)\n   {\n-    columnModel.setColumnSelectionAllowed(flag);\n+    if (mc < 0)\n+      return mc;\n+    int ncols = getColumnCount();\n+    for (int vc = 0; vc < ncols; ++vc)\n+      {\n+        if (columnModel.getColumn(vc).getModelIndex() == mc)\n+          return vc;\n+      }\n+    return -1;\n   }\n \n-  public boolean getRowSelectionAllowed()\n+  public Component prepareRenderer(TableCellRenderer renderer,\n+                                   int row,\n+                                   int column)\n   {\n-    return rowSelectionAllowed;\n+    boolean rsa = getRowSelectionAllowed();\n+    boolean csa = getColumnSelectionAllowed();\n+    boolean rs = rsa ? getSelectionModel().isSelectedIndex(row) : false;\n+    boolean cs = csa ? columnModel.getSelectionModel().isSelectedIndex(column) : false;\n+    boolean isSelected = ((rsa && csa && rs && cs) \n+                          || (rsa && !csa && rs) \n+                          || (!rsa && csa && cs));\n+    \n+    return renderer.getTableCellRendererComponent(this,\n+                                                  dataModel.getValueAt(row, \n+                                                                       convertColumnIndexToView(column)),\n+                                                  isSelected,\n+                                                  false, // hasFocus\n+                                                  row, column);\n   }\n-  \n-  public void setRowSelectionAllowed(boolean flag)\n+\n+\n+  /**\n+   * Get the value of the {@link #autoCreateColumnsFromModel} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public boolean getAutoCreateColumnsFromModel()\n   {\n-    rowSelectionAllowed = flag;\n+    return autoCreateColumnsFromModel;\n   }\n \n+  /**\n+   * Get the value of the {@link #autoResizeMode} property.\n+   *\n+   * @return The current value of the property\n+   */\n   public int getAutoResizeMode()\n   {\n     return autoResizeMode;\n   }\n \n-  public void setAutoResizeMode(int mode)\n+  /**\n+   * Get the value of the {@link #rowHeight} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public int getRowHeight()\n   {\n-    autoResizeMode = mode;\n+    return rowHeight;\n   }\n \n-  public int getColumnCount()\n+  /**\n+   * Get the value of the {@link #rowMargin} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public int getRowMargin()\n   {\n-    return dataModel.getColumnCount();\n+    return rowMargin;\n   }\n \n-  public int getRowCount()\n+  /**\n+   * Get the value of the {@link #rowSelectionAllowed} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public boolean getRowSelectionAllowed()\n   {\n-    return dataModel.getRowCount();\n+    return rowSelectionAllowed;\n   }\n \n-  public TableCellRenderer getCellRenderer(int row, int column)\n+  /**\n+   * Get the value of the {@link #cellSelectionEnabled} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public boolean getCellSelectionEnabled()\n   {\n-    TableCellRenderer renderer =\n-      columnModel.getColumn(column).getCellRenderer();\n-    \n-    if (renderer == null)\n-      renderer = getDefaultRenderer(dataModel.getColumnClass(column));\n-    \n-    return renderer;\n+    return getColumnSelectionAllowed() && getRowSelectionAllowed();\n   }\n \n-  public TableCellRenderer getDefaultRenderer(Class columnClass)\n+  /**\n+   * Get the value of the {@link #dataModel} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public TableModel getModel()\n+  {\n+    return dataModel;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #columnCount} property by\n+   * delegation to the @{link #dataModel} field.\n+   *\n+   * @return The current value of the columnCount property\n+   */\n+  public int getColumnCount()\n+  {\n+    return dataModel.getColumnCount();\n+  }\n+\n+  /**\n+   * Get the value of the {@link #rowCount} property by\n+   * delegation to the @{link #dataModel} field.\n+   *\n+   * @return The current value of the rowCount property\n+   */\n+  public int getRowCount()\n+  {\n+    return dataModel.getRowCount();\n+  }\n+\n+  /**\n+   * Get the value of the {@link #columnModel} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public TableColumnModel getColumnModel()\n+  {\n+    return columnModel;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #selectedColumn} property by\n+   * delegation to the @{link #columnModel} field.\n+   *\n+   * @return The current value of the selectedColumn property\n+   */\n+  public int getSelectedColumn()\n+  {\n+    return columnModel.getSelectionModel().getMinSelectionIndex();\n+  }\n+\n+  private static int countSelections(ListSelectionModel lsm)\n+  {\n+    int lo = lsm.getMinSelectionIndex();\n+    int hi = lsm.getMaxSelectionIndex();\n+    int sum = 0;\n+    if (lo != -1 && hi != -1)\n+      {\n+        switch (lsm.getSelectionMode())\n+          {\n+          case ListSelectionModel.SINGLE_SELECTION:\n+            sum = 1;\n+            break;\n+            \n+          case ListSelectionModel.SINGLE_INTERVAL_SELECTION:\n+            sum = hi - lo;\n+            break;\n+            \n+          case ListSelectionModel.MULTIPLE_INTERVAL_SELECTION:        \n+            for (int i = lo; i < hi; ++i)\n+              if (lsm.isSelectedIndex(i))        \n+                ++sum;\n+            break;\n+          }\n+      }\n+    return sum;\n+  }\n+\n+  private static int[] getSelections(ListSelectionModel lsm)\n+  {\n+    int sz = countSelections(lsm);\n+    int [] ret = new int[sz];\n+\n+    int lo = lsm.getMinSelectionIndex();\n+    int hi = lsm.getMaxSelectionIndex();\n+    int j = 0;\n+    java.util.ArrayList ls = new java.util.ArrayList();\n+    if (lo != -1 && hi != -1)\n+      {\n+        switch (lsm.getSelectionMode())\n+          {\n+          case ListSelectionModel.SINGLE_SELECTION:\n+            ret[0] = lo;\n+            break;      \n+      \n+          case ListSelectionModel.SINGLE_INTERVAL_SELECTION:            \n+            for (int i = lo; i < hi; ++i)\n+              ret[j++] = i;\n+            break;\n+            \n+          case ListSelectionModel.MULTIPLE_INTERVAL_SELECTION:        \n+            for (int i = lo; i < hi; ++i)\n+              if (lsm.isSelectedIndex(i))        \n+                ret[j++] = i;\n+            break;\n+          }\n+      }\n+    return ret;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #selectedColumnCount} property by\n+   * delegation to the @{link #columnModel} field.\n+   *\n+   * @return The current value of the selectedColumnCount property\n+   */  \n+  public int getSelectedColumnCount()\n+  {\n+    return countSelections(columnModel.getSelectionModel());\n+  }\n+\n+  /**\n+   * Get the value of the {@link #selectedColumns} property by\n+   * delegation to the @{link #columnModel} field.\n+   *\n+   * @return The current value of the selectedColumns property\n+   */\n+  public int[] getSelectedColumns()\n+  {\n+    return getSelections(columnModel.getSelectionModel());\n+  }\n+\n+  /**\n+   * Get the value of the {@link #columnSelectionAllowed} property.\n+   *\n+   * @return The current value of the columnSelectionAllowed property\n+   */\n+  public boolean getColumnSelectionAllowed()\n+  {\n+    return getColumnModel().getColumnSelectionAllowed();\n+  }\n+\n+  /**\n+   * Get the value of the {@link #selectedRowCount} property by\n+   * delegation to the @{link #selectionModel} field.\n+   *\n+   * @return The current value of the selectedRowCount property\n+   */\n+  public int getSelectedRowCount()\n+  {\n+    return countSelections(selectionModel);\n+  }\n+\n+  /**\n+   * Get the value of the {@link #selectedRows} property by\n+   * delegation to the @{link #selectionModel} field.\n+   *\n+   * @return The current value of the selectedRows property\n+   */\n+  public int[] getSelectedRows()\n+  {\n+    return getSelections(selectionModel);\n+  }\n+\n+  /**\n+   * Get the value of the {@link #accessibleContext} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    return accessibleContext;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #cellEditor} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public TableCellEditor getCellEditor()\n+  {\n+    return cellEditor;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #dragEnabled} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public boolean getDragEnabled()\n+  {\n+    return dragEnabled;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #gridColor} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public Color getGridColor()\n+  {\n+    return gridColor;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #interCellSpacing} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public Dimension getInterCellSpacing()\n+  {\n+    return new Dimension(columnModel.getColumnMargin(), rowMargin);\n+  }\n+\n+  /**\n+   * Get the value of the {@link #preferredScrollableViewportSize} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public Dimension getPreferredScrollableViewportSize()\n+  {\n+    return preferredScrollableViewportSize;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #selectionBackground} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public Color getSelectionBackground()\n+  {\n+    return selectionBackground;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #selectionForeground} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public Color getSelectionForeground()\n+  {\n+    return selectionForeground;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #showHorizontalLines} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public boolean getShowHorizontalLines()\n+  {\n+    return showHorizontalLines;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #showVerticalLines} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public boolean getShowVerticalLines()\n+  {\n+    return showVerticalLines;\n+  }\n+\n+  /**\n+   * Get the value of the {@link #tableHeader} property.\n+   *\n+   * @return The current value of the property\n+   */\n+  public JTableHeader getTableHeader()\n+  {\n+    return tableHeader;\n+  }\n+\n+  /**\n+   * Set the value of the {@link #autoCreateColumnsFromModel} property.\n+   *\n+   * @param a The new value of the autoCreateColumnsFromModel property\n+   */ \n+  public void setAutoCreateColumnsFromModel(boolean a)\n+  {\n+    autoCreateColumnsFromModel = a;\n+  }\n+\n+  /**\n+   * Set the value of the {@link #autoResizeMode} property.\n+   *\n+   * @param a The new value of the autoResizeMode property\n+   */ \n+  public void setAutoResizeMode(int a)\n   {\n-    // FIXME:\n-    return null;\n+    autoResizeMode = a;\n+    revalidate();\n+    repaint();\n   }\n+\n+  /**\n+   * Set the value of the {@link #rowHeight} property.\n+   *\n+   * @param r The new value of the rowHeight property\n+   */ \n+  public void setRowHeight(int r)\n+  {\n+    rowHeight = r;\n+    revalidate();\n+    repaint();\n+  }\n+\n+  /**\n+   * Set the value of the {@link #rowMargin} property.\n+   *\n+   * @param r The new value of the rowMargin property\n+   */ \n+  public void setRowMargin(int r)\n+  {\n+    rowMargin = r;\n+    revalidate();\n+    repaint();\n+  }\n+\n+  /**\n+   * Set the value of the {@link #rowSelectionAllowed} property.\n+   *\n+   * @param r The new value of the rowSelectionAllowed property\n+   */ \n+  public void setRowSelectionAllowed(boolean r)\n+  {\n+    rowSelectionAllowed = r;\n+    repaint();\n+  }\n+\n+  /**\n+   * Set the value of the {@link #cellSelectionEnabled} property.\n+   *\n+   * @param c The new value of the cellSelectionEnabled property\n+   */ \n+  public void setCellSelectionEnabled(boolean c)\n+  {\n+    setColumnSelectionAllowed(c);\n+    setRowSelectionAllowed(c);\n+    // for backward-compatibility sake:\n+    cellSelectionEnabled = true;\n+  }\n+\n+  /**\n+   * <p>Set the value of the {@link #dataModel} property.</p>\n+   *\n+   * <p>Unregister <code>this</code> as a {@link TableModelListener} from\n+   * previous {@link #dataModel} and register it with new parameter\n+   * <code>m</code>.</p>\n+   *\n+   * @param m The new value of the model property\n+   */ \n+  public void setModel(TableModel m)\n+  {\n+    if (m == null)\n+      throw new IllegalArgumentException();\n+    TableModel tmp = dataModel;\n+    if (autoCreateColumnsFromModel)\n+      createColumnsFromModel();\n+    if (tmp != null)\n+      tmp.removeTableModelListener(this);\n+    if (m != null)\n+      m.addTableModelListener(this);\n+    dataModel = m;\n+    revalidate();\n+    repaint();\n+  }\n+\n+  /**\n+   * <p>Set the value of the {@link #columnModel} property.</p>\n+   *\n+   * <p>Unregister <code>this</code> as a {@link TableColumnModelListener}\n+   * from previous {@link #columnModel} and register it with new parameter\n+   * <code>c</code>.</p>\n+   *\n+   * @param c The new value of the columnModel property\n+   */ \n+  public void setColumnModel(TableColumnModel c)\n+  {\n+    if (c == null)\n+      throw new IllegalArgumentException();\n+    TableColumnModel tmp = columnModel;\n+    if (tmp != null)\n+      tmp.removeColumnModelListener(this);\n+    if (c != null)\n+      c.addColumnModelListener(this);\n+    columnModel = c;\n+    if (dataModel != null && columnModel != null)\n+      {\n+        int ncols = getColumnCount();\n+        for (int i = 0; i < ncols; ++i)\n+          columnModel.getColumn(i).setHeaderValue(dataModel.getColumnName(i));\n+      }\n+    revalidate();\n+    repaint();\n+  }\n+\n+  /**\n+   * Set the value of the {@link #columnSelectionAllowed} property.\n+   *\n+   * @param c The new value of the property\n+   */ \n+  public void setColumnSelectionAllowed(boolean c)\n+  {\n+    getColumnModel().setColumnSelectionAllowed(c);\n+    repaint();\n+  }\n+\n+  /**\n+   * <p>Set the value of the {@link #selectionModel} property.</p>\n+   *\n+   * <p>Unregister <code>this</code> as a {@link ListSelectionListener}\n+   * from previous {@link #selectionModel} and register it with new\n+   * parameter <code>s</code>.</p>\n+   *\n+   * @param s The new value of the selectionModel property\n+   */ \n+  public void setSelectionModel(ListSelectionModel s)\n+  {\n+    if (s == null)\n+      throw new IllegalArgumentException();\n+    ListSelectionModel tmp = selectionModel;\n+    if (tmp != null)\n+      tmp.removeListSelectionListener(this);\n+    if (s != null)\n+      s.addListSelectionListener(this);\n+    selectionModel = s;\n+  }\n+\n+  /**\n+   * Set the value of the {@link #selectionMode} property by\n+   * delegation to the {@link #selectionModel} field.\n+   *\n+   * @param s The new value of the property\n+   */ \n+  public void setSelectionMode(int s)\n+  {\n+    selectionModel.setSelectionMode(s);\n+    repaint();\n+  }\n+\n+  /**\n+   * <p>Set the value of the {@link #cellEditor} property.</p>\n+   *\n+   * <p>Unregister <code>this</code> as a {@link CellEditorListener} from\n+   * previous {@link #cellEditor} and register it with new parameter\n+   * <code>c</code>.</p>\n+   *\n+   * @param c The new value of the cellEditor property\n+   */ \n+  public void setCellEditor(TableCellEditor c)\n+  {\n+    TableCellEditor tmp = cellEditor;\n+    if (tmp != null)\n+      tmp.removeCellEditorListener(this);\n+    if (c != null)\n+      c.addCellEditorListener(this);\n+    cellEditor = c;\n+  }\n+\n+  /**\n+   * Set the value of the {@link #dragEnabled} property.\n+   *\n+   * @param d The new value of the dragEnabled property\n+   */ \n+  public void setDragEnabled(boolean d)\n+  {\n+    dragEnabled = d;\n+  }\n+\n+  /**\n+   * Set the value of the {@link #gridColor} property.\n+   *\n+   * @param g The new value of the gridColor property\n+   */ \n+  public void setGridColor(Color g)\n+  {\n+    gridColor = g;\n+    repaint();\n+  }\n+\n+  /**\n+   * Set the value of the {@link #interCellSpacing} property.\n+   *\n+   * @param i The new value of the interCellSpacing property\n+   */ \n+  public void setInterCellSpacing(Dimension i)\n+  {\n+    rowMargin = i.height;\n+    columnModel.setColumnMargin(i.width);\n+    repaint();\n+  }\n+\n+  /**\n+   * Set the value of the {@link #preferredScrollableViewportSize} property.\n+   *\n+   * @param p The new value of the preferredScrollableViewportSize property\n+   */ \n+  public void setPreferredScrollableViewportSize(Dimension p)\n+  {\n+    preferredScrollableViewportSize = p;\n+    revalidate();\n+    repaint();\n+  }\n+\n+  /**\n+   * <p>Set the value of the {@link #selectionBackground} property.</p>\n+   *\n+   * <p>Fire a PropertyChangeEvent with name {@link\n+   * #SELECTION_BACKGROUND_CHANGED_PROPERTY} to registered listeners, if\n+   * selectionBackground changed.</p>\n+   *\n+   * @param s The new value of the selectionBackground property\n+   */ \n+  public void setSelectionBackground(Color s)\n+  {\n+    Color tmp = selectionBackground;\n+    selectionBackground = s;\n+    if (((tmp == null && s != null)\n+         || (s == null && tmp != null)\n+         || (tmp != null && s != null && !tmp.equals(s))))\n+      firePropertyChange(SELECTION_BACKGROUND_CHANGED_PROPERTY, tmp, s);\n+    repaint();\n+  }\n+\n+  /**\n+   * <p>Set the value of the {@link #selectionForeground} property.</p>\n+   *\n+   * <p>Fire a PropertyChangeEvent with name {@link\n+   * SELECTION_FOREGROUND_CHANGED_PROPERTY} to registered listeners, if\n+   * selectionForeground changed.</p>\n+   *\n+   * @param s The new value of the selectionForeground property\n+   */ \n+  public void setSelectionForeground(Color s)\n+  {\n+    Color tmp = selectionForeground;\n+    selectionForeground = s;\n+    if (((tmp == null && s != null)\n+         || (s == null && tmp != null)\n+         || (tmp != null && s != null && !tmp.equals(s))))\n+      firePropertyChange(SELECTION_FOREGROUND_CHANGED_PROPERTY, tmp, s);\n+    repaint();\n+  }\n+\n+  /**\n+   * Set the value of the {@link #showGrid} property.\n+   *\n+   * @param s The new value of the showGrid property\n+   */ \n+  public void setShowGrid(boolean s)\n+  {\n+    setShowVerticalLines(s);\n+    setShowHorizontalLines(s);\n+  }\n+\n+  /**\n+   * Set the value of the {@link #showHorizontalLines} property.\n+   *\n+   * @param s The new value of the showHorizontalLines property\n+   */ \n+  public void setShowHorizontalLines(boolean s)\n+  {\n+    showHorizontalLines = s;\n+    repaint();\n+  }\n+\n+  /**\n+   * Set the value of the {@link #showVerticalLines} property.\n+   *\n+   * @param s The new value of the showVerticalLines property\n+   */ \n+  public void setShowVerticalLines(boolean s)\n+  {\n+    showVerticalLines = s;\n+    repaint();\n+  }\n+\n+  /**\n+   * Set the value of the {@link #tableHeader} property.\n+   *\n+   * @param t The new value of the tableHeader property\n+   */ \n+  public void setTableHeader(JTableHeader t)\n+  {\n+    if (tableHeader != null)\n+      tableHeader.setTable(null);\n+    tableHeader = t;\n+    if (tableHeader != null)\n+      tableHeader.setTable(this);\n+    revalidate();\n+    repaint();\n+  }\n+\n+  protected void configureEnclosingScrollPane()\n+  {\n+    JScrollPane jsp = (JScrollPane) SwingUtilities.getAncestorOfClass(JScrollPane.class, this);\n+    if (jsp != null && tableHeader != null)\n+      {\n+        jsp.setColumnHeaderView(tableHeader);\n+      }\n+  }\n+\n+  protected void unconfigureEnclosingScrollPane()\n+  {\n+    JScrollPane jsp = (JScrollPane) SwingUtilities.getAncestorOfClass(JScrollPane.class, this);\n+    if (jsp != null)\n+      {\n+        jsp.setColumnHeaderView(null);\n+      }    \n+  }\n+\n+\n+  public void addNotify()\n+  {\n+    super.addNotify();\n+    configureEnclosingScrollPane();\n+  }\n+\n+  public void removeNotify()\n+  {\n+    super.addNotify();\n+    unconfigureEnclosingScrollPane();\n+  }\n+\n+\n+  /**\n+   * Sun javadocs describe an unusual implementation of\n+   * <code>doLayout</code> which involves some private interfaces. We try\n+   * to implement the same algorithm as is documented, but using the\n+   * columnModel directly. We still use a private helper method, but it has\n+   * a simpler signature.\n+   */\n+\n+  private void distributeSpill(TableColumn[] cols, int spill)\n+  {\n+    int MIN = 0;\n+    int MAX = 0;\n+    int PREF = 0;\n+\n+    int[] min = new int[cols.length];\n+    int[] max = new int[cols.length];\n+    int[] pref = new int[cols.length];\n+\n+    for (int i = 0; i < cols.length; ++i)\n+      {\n+        pref[i] = cols[i].getPreferredWidth();\n+        min[i] = cols[i].getMinWidth();\n+        max[i] = cols[i].getMaxWidth();\n+        PREF += pref[i];\n+        MIN += min[i];\n+        MAX += max[i];\n+      }\n+\n+    for (int i = 0; i < cols.length; ++i)\n+      {\n+        int adj = 0;\n+        if (spill > 0)          \n+          adj = (spill * (pref[i] - min[i])) / (PREF - MIN);\n+        else\n+          adj = (spill * (max[i] - pref[i])) / (MAX - PREF);\n+        cols[i].setWidth(pref[i] + adj);        \n+      }    \n+  }\n+  \n+  public void doLayout()\n+  {\n+    TableColumn resizingColumn = null;\n+\n+    int ncols = getColumnCount();\n+    if (ncols < 1)\n+      return;\n+\n+    int[] pref = new int[ncols];\n+    int prefSum = 0;\n+    int rCol = -1;\n+\n+    if (tableHeader != null)\n+      resizingColumn = tableHeader.getResizingColumn();\n+\n+    for (int i = 0; i < ncols; ++i)\n+      {\n+        TableColumn col = columnModel.getColumn(i);\n+        int p = col.getWidth();\n+        pref[i] = p;\n+        prefSum += p;\n+        if (resizingColumn == col)\n+          rCol = i;\n+      }\n+\n+    int spill = prefSum - getWidth();\n+\n+    if (resizingColumn != null)\n+      {\n+        TableColumn col;\n+        TableColumn [] cols;\n+\n+        switch (getAutoResizeMode())\n+          {\n+          case AUTO_RESIZE_LAST_COLUMN:\n+            col = columnModel.getColumn(ncols-1);\n+            col.setWidth(col.getPreferredWidth() + spill);\n+            break;\n+            \n+          case AUTO_RESIZE_NEXT_COLUMN:\n+            col = columnModel.getColumn(ncols-1);\n+            col.setWidth(col.getPreferredWidth() + spill);\n+            break;\n+\n+          case AUTO_RESIZE_ALL_COLUMNS:\n+            cols = new TableColumn[ncols];\n+            for (int i = 0; i < ncols; ++i)\n+              cols[i] = columnModel.getColumn(i);\n+            distributeSpill(cols, spill);\n+            break;\n+\n+          case AUTO_RESIZE_SUBSEQUENT_COLUMNS:\n+            cols = new TableColumn[ncols];\n+            for (int i = rCol; i < ncols; ++i)\n+              cols[i] = columnModel.getColumn(i);\n+            distributeSpill(cols, spill);\n+            break;\n+\n+          case AUTO_RESIZE_OFF:\n+          default:\n+          }\n+      }\n+    else\n+      {\n+        TableColumn [] cols = new TableColumn[ncols];\n+        for (int i = 0; i < ncols; ++i)\n+          cols[i] = columnModel.getColumn(i);\n+        distributeSpill(cols, spill);        \n+      }\n+  }\n+  \n+  public void sizeColumnsToFit(boolean lastColumnOnly)\n+  {\n+    doLayout();\n+  }\n+\n+  public void sizeColumnsToFit(int resizingColumn)\n+  {\n+    doLayout();\n+  }\n+\n+\n+  public String getUIClassID()\n+  {\n+    return \"TableUI\";\n+  }\n+\n+  public TableUI getUI()\n+  {\n+    return (TableUI) ui;\n+  }\n+\n+  public void updateUI()\n+  {\n+    setUI((TableUI) UIManager.getUI(this));\n+    revalidate();\n+    repaint();\n+  }\n+\n }"}, {"sha": "4466f5ad5b30362d531a9f95ecb65be9b882f6f0", "filename": "libjava/javax/swing/JTextField.java", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTextField.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -137,9 +137,15 @@ public JTextField(String text, int columns)\n    */\n   public JTextField(Document doc, String text, int columns)\n   {\n+    if (columns < 0)\n+      throw new IllegalArgumentException();\n+    \n+    this.columns = columns;\n+    \n     setDocument(doc == null ? createDefaultModel() : doc);\n-    setText(text);\n-    setColumns(columns);\n+\n+    if (text != null)\n+      setText(text);\n   }\n \n   /**"}, {"sha": "daf9f0a21e5d3a5b7860742650fdfb2bd803f0bf", "filename": "libjava/javax/swing/JToolTip.java", "status": "modified", "additions": 141, "deletions": 6, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJToolTip.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJToolTip.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToolTip.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,4 +1,4 @@\n-/* JToolTip.java -- \n+/* JToolTip.java --\n    Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -35,25 +35,160 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package javax.swing;\n \n+import java.awt.AWTEvent;\n import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.swing.plaf.ToolTipUI;\n+\n \n+/**\n+ * This class is used to display ToolTips. ToolTips are small floating windows\n+ * that display text when the mouse comes to rest over a Component. ToolTips\n+ * are set for JComponents using JComponent.setToolTipText(String).\n+ */\n public class JToolTip extends JComponent implements Accessible\n {\n+  /** DOCUMENT ME! */\n   private static final long serialVersionUID = -1138929898906751643L;\n-  \n+\n+  /**\n+   * DOCUMENT ME!\n+   */\n+  protected class AccessibleJToolTip extends AccessibleJComponent\n+  {\n+    /**\n+     * Creates a new AccessibleJToolTip object.\n+     */\n+    protected AccessibleJToolTip()\n+    {\n+    }\n+\n+    /**\n+     * DOCUMENT ME!\n+     *\n+     * @return DOCUMENT ME!\n+     */\n+    public String getAccessibleDescription()\n+    {\n+      return null;\n+    }\n+\n+    /**\n+     * DOCUMENT ME!\n+     *\n+     * @return DOCUMENT ME!\n+     */\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return null;\n+    }\n+  }\n+\n+  /** The text to display in the JToolTip. */\n   String text;\n \n+  /** The JComponent this JToolTip is used for. */\n+  JComponent component;\n+\n+  /**\n+   * Creates a new JToolTip object.\n+   */\n   public JToolTip()\n   {\n+    disableEvents(AWTEvent.MOUSE_EVENT_MASK);\n+    updateUI();\n   }\n \n-  public void setTipText(String newText)\n+  /**\n+   * This method returns the text this JToolTip displays.\n+   *\n+   * @return The text that this JToolTip displays.\n+   */\n+  public String getTipText()\n   {\n-    this.text = newText;\n+    return text;\n+  }\n+\n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    return null;\n   }\n-}\n \n+  /**\n+   * This method returns the JComponent this JToolTip displays for.\n+   *\n+   * @return The JComponent this JToolTip displays for.\n+   */\n+  public JComponent getComponent()\n+  {\n+    return component;\n+  }\n \n+  /**\n+   * This method returns the UI responsible for displaying this JToolTip.\n+   *\n+   * @return The UI responsible for displaying this JToolTip.\n+   */\n+  public ToolTipUI getUI()\n+  {\n+    return (ToolTipUI) ui;\n+  }\n+\n+  /**\n+   * This method returns the String identifier for the UI class.\n+   *\n+   * @return The String identifier for the UI class.\n+   */\n+  public String getUIClassID()\n+  {\n+    return \"ToolTipUI\";\n+  }\n+\n+  /**\n+   * This method returns a debugging String describing the JToolTip.\n+   *\n+   * @return A debugging String describing the JToolTip.\n+   */\n+  protected String paramString()\n+  {\n+    return \"JToolTip\";\n+  }\n+\n+  /**\n+   * This method sets the JComponent that the JToolTip displays for.\n+   *\n+   * @param c The JComponent that the JToolTip displays for.\n+   */\n+  public void setComponent(JComponent c)\n+  {\n+    component = c;\n+  }\n+\n+  /**\n+   * This method sets the text that the JToolTip displays.\n+   *\n+   * @param tipText The text that the JToolTip displays.\n+   */\n+  public void setTipText(String tipText)\n+  {\n+    text = tipText;\n+  }\n+\n+  /**\n+   * This method resets the UI used to the Look and Feel default.\n+   */\n+  public void updateUI()\n+  {\n+    setUI((ToolTipUI) UIManager.getUI(this));\n+    revalidate();\n+    repaint();\n+  }\n+}"}, {"sha": "a36118371cec6224bee170268a3c818bd90c6f81", "filename": "libjava/javax/swing/JViewport.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJViewport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FJViewport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJViewport.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -249,8 +249,13 @@ public Component getView()\n \n   public void setView(Component v)\n   {\n-    add(v);\n-    fireStateChanged();\n+    while (getComponentCount() > 0)\n+      remove(0);\n+    if (v != null)\n+      {\n+        add(v);\n+        fireStateChanged();\n+      }\n   }\n \n   public void revalidate()"}, {"sha": "afdbae8300a8f7d331ff94c3b1bca81d7bf15b91", "filename": "libjava/javax/swing/KeyStroke.java", "status": "modified", "additions": 61, "deletions": 227, "changes": 288, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FKeyStroke.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -37,235 +37,69 @@\n \n package javax.swing;\n \n+import java.awt.AWTKeyStroke;\n import java.awt.event.KeyEvent;\n import java.io.Serializable;\n \n-/**\n- * KeyStroke\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n- */\n-public class KeyStroke implements Serializable\n+public class KeyStroke \n+  extends AWTKeyStroke\n+  implements Serializable\n {\n   static final long serialVersionUID = -9060180771037902530L;\n-\n-\t//-------------------------------------------------------------\n-\t// Variables --------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * keyChar\n-\t */\n-\tprivate\tchar\tkeyChar\t\t\t= 0;\n-\n-\t/**\n-\t * keyCode\n-\t */\n-\tprivate\tint\t\tkeyCode\t\t\t= 0;\n-\n-\t/**\n-\t * modifiers\n-\t */\n-\tprivate\tint\t\tmodifiers\t\t= 0;\n-\n-\t/**\n-\t * onKeyRelease\n-\t */\n-\tprivate\tboolean\tonKeyRelease\t= false;\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Initialization ---------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * Constructor KeyStroke\n-\t */\n-\tprivate KeyStroke() {\n-\t} // KeyStroke()\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * hashCode\n-\t * @returns int\n-\t */\n-\tpublic int hashCode() {\n-\t\treturn 0; // TODO\n-\t} // hashCode()\n-\n-\t/**\n-\t * equals\n-\t * @param object TODO\n-\t * @returns boolean\n-\t */\n-\tpublic boolean equals(Object object) {\n-\n-\t\t// Variables\n-\t\tKeyStroke\tkey;\n-\n-\t\tif (object instanceof KeyStroke) {\n-\t\t\tkey = (KeyStroke) object;\n-\t\t\tif (key.keyChar == keyChar &&\n-\t\t\t\tkey.keyCode == keyCode &&\n-\t\t\t\tkey.modifiers == modifiers &&\n-\t\t\t\tkey.onKeyRelease == onKeyRelease) {\n-\t\t\t\treturn true;\n-\t\t\t} // if\n-\t\t} // if\n-\t\treturn false;\n-\n-\t} // equals()\n-\n-\t/**\n-\t * toString\n-\t * @returns String\n-\t */\n-\tpublic String toString() {\n-\t\treturn null; // TODO\n-\t} // toString()\n-\n-\t/**\n-\t * getKeyStroke\n-\t * @param keyChar TODO\n-\t * @returns KeyStroke\n-\t */\n-\tpublic static KeyStroke getKeyStroke(char keyChar) {\n-\n-\t\t// Variables\n-\t\tKeyStroke\tkey;\n-\n-\t\tkey = new KeyStroke();\n-\t\tkey.keyChar = keyChar;\n-\t\treturn key;\n-\n-\t} // getKeyStroke()\n-\n-\t/**\n-\t * getKeyStroke - deprecated\n-\t * @param keyChar TODO\n-\t * @param onKeyRelease TODO\n-\t * @returns KeyStroke\n-\t * @deprecated Use getKeyStroke(char)\n-\t */\n-\tpublic static KeyStroke getKeyStroke(char keyChar, boolean onKeyRelease) {\n-\t\tKeyStroke key = getKeyStroke(keyChar);\n-\t\tkey.onKeyRelease = onKeyRelease;\n-\t\treturn key;\n-\t} // getKeyStroke()\n-\n-\t/**\n-\t * getKeyStroke\n-\t * @param keyChar TODO\n-\t * @param modifiers TODO\n-\t * @returns KeyStroke\n-\t */\n-\tpublic static KeyStroke getKeyStroke(Character keyChar, int modifiers) {\n-\t\tKeyStroke key = getKeyStroke(keyChar.charValue());\n-\t\tkey.modifiers = modifiers;\n-\t\treturn key;\n-\t} // getKeyStroke()\n-\n-\t/**\n-\t * getKeyStroke\n-\t * @param keyCode TODO\n-\t * @param modifiers TODO\n-\t * @param onKeyRelease TODO\n-\t * @returns KeyStroke\n-\t */\n-\tpublic static KeyStroke getKeyStroke(int keyCode, int modifiers, \n-\t\t\t\tboolean onKeyRelease) {\n-\n-\t\t// Variables\n-\t\tKeyStroke\tkey;\n-\n-\t\tkey = new KeyStroke();\n-\t\tkey.keyCode = keyCode;\n-\t\tkey.modifiers = modifiers;\n-\t\tkey.onKeyRelease = onKeyRelease;\n-\t\treturn key;\n-\n-\t} // getKeyStroke()\n-\n-\t/**\n-\t * getKeyStroke\n-\t * @param keyCode TODO\n-\t * @param modifiers TODO\n-\t * @returns KeyStroke\n-\t */\n-\tpublic static KeyStroke getKeyStroke(int keyCode, int modifiers) {\n-\t\treturn getKeyStroke(keyCode, modifiers, false);\n-\t} // getKeyStroke()\n-\n-\t/**\n-\t * getKeyStroke\n-\t * @param string TODO\n-\t * @returns KeyStroke\n-\t */\n-\tpublic static KeyStroke getKeyStroke(String string) {\n-\t\treturn null; // TODO\n-\t} // getKeyStroke()\n-\n-\t/**\n-\t * getKeyStrokeForEvent\n-\t * @param event TODO\n-\t * @returns KeyStroke\n-\t */\n-\tpublic static KeyStroke getKeyStrokeForEvent(KeyEvent event) {\n-\n-\t\t// Variables\n-\t\tint\teventID;\n-\t\tint\teventMod;\n-\n-\t\t// Get Event ID\n-\t\teventID = event.getID();\n-\t\teventMod = event.getModifiers();\n-\n-\t\t// Check for KEY_TYPED event\n-\t\tif (eventID == KeyEvent.KEY_TYPED) {\n-\t\t\treturn getKeyStroke(event.getKeyChar(), eventMod);\n-\n-\t\t// KEY_PRESSED or KEY_RELEASED event\n-\t\t} else {\n-\t\t\treturn getKeyStroke(event.getKeyCode(), eventMod);\n-\t\t} // if\n-\n-\t} // getKeyStrokeForEvent()\n-\n-\t/**\n-\t * getKeyChar\n-\t * @returns char\n-\t */\n-\tpublic char getKeyChar() {\n-\t\treturn keyChar;\n-\t} // getKeyChar()\n-\n-\t/**\n-\t * getKeyCode\n-\t * @returns int\n-\t */\n-\tpublic int getKeyCode() {\n-\t\treturn keyCode;\n-\t} // getKeyCode()\n-\n-\t/**\n-\t * getModifiers\n-\t * @returns int\n-\t */\n-\tpublic int getModifiers() {\n-\t\treturn modifiers; // TODO\n-\t} // getModifiers()\n-\n-\t/**\n-\t * isOnKeyRelease\n-\t * @returns boolean\n-\t */\n-\tpublic boolean isOnKeyRelease() {\n-\t\treturn onKeyRelease;\n-\t} // isOnKeyRelease()\n-\n-\n-} // KeyStroke\n+  private KeyStroke() {\n+  }\n+  \n+  protected KeyStroke(char keyChar, int keyCode, int modifiers,\n+                      boolean onKeyRelease)\n+  {\n+    super(keyChar, keyCode, modifiers, onKeyRelease);\n+  }\n+\n+  static\n+  {\n+    AWTKeyStroke.registerSubclass(KeyStroke.class);\n+  }\n+\n+  public static KeyStroke getKeyStroke(char keyChar) \n+  {\n+    return (KeyStroke) getAWTKeyStroke(keyChar);\n+  }\n+\n+  /** \n+   * @deprecated Use {@link #getKeyStroke(char)}\n+   *\n+   * This method, unlike all the other factory methods on this object,\n+   * returns a non-cached, non-shared object. New code should not use it.\n+   */\n+  public static KeyStroke getKeyStroke(char keyChar, boolean onKeyRelease) \n+  {\n+    return new KeyStroke(keyChar, KeyEvent.VK_UNDEFINED, 0, onKeyRelease);\n+  }\n+\n+  public static KeyStroke getKeyStroke(Character keyChar, int modifiers) \n+  {\n+    return (KeyStroke) getAWTKeyStroke(keyChar, modifiers);\n+  }\n+\n+  public static KeyStroke getKeyStroke(int keyCode, int modifiers, \n+                                       boolean onKeyRelease) \n+  {\n+    return (KeyStroke) getAWTKeyStroke(keyCode, modifiers, onKeyRelease);\n+  }\n+\n+  public static KeyStroke getKeyStroke(int keyCode, int modifiers) \n+  {\n+    return (KeyStroke) getAWTKeyStroke(keyCode, modifiers);\n+  }\n+\n+  public static KeyStroke getKeyStroke(String str) \n+  {\n+    return (KeyStroke) getAWTKeyStroke(str);\n+  }\n+\n+  public static KeyStroke getKeyStrokeForEvent(KeyEvent event) \n+  {\n+    return (KeyStroke) getAWTKeyStrokeForEvent(event);\n+  }\n+\n+}"}, {"sha": "2c0f4149d6a6f56cfe902fbce8802d162f3058fa", "filename": "libjava/javax/swing/MutableComboBoxModel.java", "status": "modified", "additions": 38, "deletions": 32, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FMutableComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FMutableComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FMutableComboBoxModel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -38,40 +38,46 @@\n package javax.swing;\n \n /**\n- * MutableComboBoxModel\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ * MutableComboBoxModel is interface for data model that keeps track of the\n+ * components data and provides methods to insert and remove elements from\n+ * it. The Classes implementing this interface should  fire appropriate\n+ * events indicating the undergoing change in the data model.\n+ *\n+ * @author Andrew Selkirk\n+ * @author Olga Rodimina\n+ * @version 1.0\n  */\n-public interface MutableComboBoxModel extends ComboBoxModel {\n+public interface MutableComboBoxModel extends ComboBoxModel\n+{\n+  /**\n+   * This method adds given object to its data model.\n+   *\n+   * @param object element to add to the data model.\n+   */\n+  void addElement(Object object);\n \n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * addElement\n-\t * @param object TODO\n-\t */\n-\tvoid addElement(Object object);\n-\n-\t/**\n-\t * removeElementAt\n-\t * @param index TODO\n-\t */\n-\tvoid removeElementAt(int index);\n-\n-\t/**\n-\t * insertElementAt\n-\t * @param object TODO\n-\t * @param index TODO\n-\t */\n-\tvoid insertElementAt(Object object, int index);\n-\n-\t/**\n-\t * removeElement\n-\t * @param object TODO\n-\t */\n-\tvoid removeElement(Object object);\n+  /**\n+   * This method removes elements located at the given index in the data\n+   * model.\n+   *\n+   * @param index index specifying location of the element to remove.\n+   */\n+  void removeElementAt(int index);\n \n+  /**\n+   * This method inserts givent element to the data model, at the specified\n+   * index.\n+   *\n+   * @param object element to insert\n+   * @param index index specifying the position in the data model where the\n+   *        given element should be inserted.\n+   */\n+  void insertElementAt(Object object, int index);\n \n+  /**\n+   * This method removes given element from the data model\n+   *\n+   * @param element to remove.\n+   */\n+  void removeElement(Object object);\n } // MutableComboBoxModel"}, {"sha": "8910bf58301ca39e6e94fbd0e86519dd0dddb9fc", "filename": "libjava/javax/swing/RepaintManager.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRepaintManager.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -431,6 +431,9 @@ public void paintDirtyRegions()\n         if (damaged.width == 0 || damaged.height == 0)\n           continue;\n         JRootPane root = comp.getRootPane();\n+        // If the component has no root, no repainting will occur.\n+        if (root == null)\n+          continue;\n         Rectangle rootDamage = SwingUtilities.convertRectangle(comp, damaged, root);\n         if (! roots.containsKey(root))\n           {\n@@ -450,7 +453,7 @@ public void paintDirtyRegions()\n         Map.Entry ent = (Map.Entry) i.next();\n         JRootPane root = (JRootPane) ent.getKey();\n         Rectangle rect = (Rectangle) ent.getValue();\n-        root.paintImmediately(rect);                \n+        root.paintImmediately(rect);                \t\n       }\n   }\n "}, {"sha": "1103f3f8b64a524f4d91b9b80fe35e6913945b90", "filename": "libjava/javax/swing/ScrollPaneLayout.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -82,6 +82,8 @@ public ScrollPaneLayout() {\n \n   public void syncWithScrollPane(JScrollPane scrollPane) {\n     viewport = scrollPane.getViewport();\n+    rowHead = scrollPane.getRowHeader();\n+    colHead = scrollPane.getColumnHeader();\n     vsb = scrollPane.getVerticalScrollBar();\n     hsb = scrollPane.getHorizontalScrollBar();\n     vsbPolicy = scrollPane.getVerticalScrollBarPolicy();\n@@ -389,12 +391,12 @@ public void layoutContainer(Container parent)\n             y4 = scrollPaneBounds.y + scrollPaneBounds.height;\n             \n             if (colHead != null)\n-              y2 = colHead.getPreferredSize().height;\n+              y2 = y1 + colHead.getPreferredSize().height;\n             else\n               y2 = y1;\n \n             if (rowHead != null)\n-              x2 = rowHead.getPreferredSize().width;\n+              x2 = x1 + rowHead.getPreferredSize().width;\n             else\n               x2 = x1;\n "}, {"sha": "731a7bc8df7e1942bce9e148bd98423d59ff750a", "filename": "libjava/javax/swing/SwingUtilities.java", "status": "modified", "additions": 107, "deletions": 4, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FSwingUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FSwingUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSwingUtilities.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -51,9 +51,13 @@\n import java.awt.Shape;\n import java.awt.Toolkit;\n import java.awt.Window;\n+import java.awt.event.ActionEvent;\n import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n import java.awt.event.MouseEvent;\n import java.lang.reflect.InvocationTargetException;\n+import javax.swing.plaf.ActionMapUIResource;\n+import javax.swing.plaf.InputMapUIResource;\n \n \n /**\n@@ -441,7 +445,7 @@ public static MouseEvent convertMouseEvent(Component source,\n                                destination);\n \n     return new MouseEvent(destination, sourceEvent.getID(),\n-                          sourceEvent.getWhen(), sourceEvent.getModifiers(),\n+                          sourceEvent.getWhen(), sourceEvent.getModifiersEx(),\n                           newpt.x, newpt.y, sourceEvent.getClickCount(),\n                           sourceEvent.isPopupTrigger(), sourceEvent.getButton());\n   }\n@@ -863,7 +867,7 @@ static Frame getOwnerFrame()\n    */\n   public static boolean isLeftMouseButton(MouseEvent event)\n   {\n-    return ((event.getModifiers() & InputEvent.BUTTON1_DOWN_MASK)\n+    return ((event.getModifiersEx() & InputEvent.BUTTON1_DOWN_MASK)\n \t     == InputEvent.BUTTON1_DOWN_MASK);\n   }\n \n@@ -876,7 +880,7 @@ public static boolean isLeftMouseButton(MouseEvent event)\n    */\n   public static boolean isMiddleMouseButton(MouseEvent event)\n   {\n-    return ((event.getModifiers() & InputEvent.BUTTON2_DOWN_MASK)\n+    return ((event.getModifiersEx() & InputEvent.BUTTON2_DOWN_MASK)\n \t     == InputEvent.BUTTON2_DOWN_MASK);\n   }\n \n@@ -889,7 +893,7 @@ public static boolean isMiddleMouseButton(MouseEvent event)\n    */\n   public static boolean isRightMouseButton(MouseEvent event)\n   {\n-    return ((event.getModifiers() & InputEvent.BUTTON3_DOWN_MASK)\n+    return ((event.getModifiersEx() & InputEvent.BUTTON3_DOWN_MASK)\n \t     == InputEvent.BUTTON3_DOWN_MASK);\n   }\n   \n@@ -911,4 +915,103 @@ public boolean isShowing()\n       return true;\n     }\n   }\n+\n+  public static boolean notifyAction(Action action,\n+                                     KeyStroke ks,\n+                                     KeyEvent event,\n+                                     Object sender,\n+                                     int modifiers)\n+  {\n+    if (action != null && action.isEnabled())\n+      {\n+        String name = (String) action.getValue(Action.ACTION_COMMAND_KEY);\n+        if (name == null\n+            && event.getKeyChar() != KeyEvent.CHAR_UNDEFINED)\n+          name = new String(new char[] {event.getKeyChar()});\n+        action.actionPerformed(new ActionEvent(sender,\n+                                               ActionEvent.ACTION_PERFORMED,\n+                                               name, modifiers));\n+        return true;\n+      }\n+    return false;\n+  }\n+\n+  /**\n+   * <p>Change the shared, UI-managed {@link ActionMap} for a given\n+   * component. ActionMaps are arranged in a hierarchy, in order to\n+   * encourage sharing of common actions between components. The hierarchy\n+   * unfortunately places UI-managed ActionMaps at the <em>end</em> of the\n+   * parent-pointer chain, as illustrated:</p>\n+   *\n+   * <pre>\n+   *  [{@link javax.swing.JComponent#getActionMap()}] \n+   *          --&gt; [{@link javax.swing.ActionMap}] \n+   *     parent --&gt; [{@link javax.swing.text.KeymapActionMap}] \n+   *       parent --&gt; [{@link javax.swing.plaf.ActionMapUIResource}]\n+   * </pre>\n+   *\n+   * <p>Our goal with this method is to replace the first ActionMap along\n+   * this chain which is an instance of {@link ActionMapUIResource}, since\n+   * these are the ActionMaps which are supposed to be shared between\n+   * components.</p>\n+   *\n+   * <p>If the provided ActionMap is <code>null</code>, we interpret the\n+   * call as a request to remove the UI-managed ActionMap from the\n+   * component's ActionMap parent chain.</p>\n+   */\n+  public static void replaceUIActionMap(JComponent component, \n+                                        ActionMap uiActionMap)\n+  {\n+    ActionMap child = component.getActionMap();\n+    if (child == null)\n+      component.setActionMap(uiActionMap);\n+    else\n+      {\n+        while(child.getParent() != null\n+              && !(child.getParent() instanceof ActionMapUIResource))\n+          child = child.getParent();\n+        if (child != null)\n+          child.setParent(uiActionMap);\n+      }\n+  }\n+\n+  /**\n+   * <p>Change the shared, UI-managed {@link InputMap} for a given\n+   * component. InputMaps are arranged in a hierarchy, in order to\n+   * encourage sharing of common input mappings between components. The\n+   * hierarchy unfortunately places UI-managed InputMaps at the\n+   * <em>end</em> of the parent-pointer chain, as illustrated:</p>\n+   *\n+   * <pre>\n+   *  [{@link javax.swing.JComponent#getInputMap()}] \n+   *          --&gt; [{@link javax.swing.InputMap}] \n+   *     parent --&gt; [{@link javax.swing.text.KeymapWrapper}] \n+   *       parent --&gt; [{@link javax.swing.plaf.InputMapUIResource}]\n+   * </pre>\n+   *\n+   * <p>Our goal with this method is to replace the first InputMap along\n+   * this chain which is an instance of {@link InputMapUIResource}, since\n+   * these are the InputMaps which are supposed to be shared between\n+   * components.</p>\n+   *\n+   * <p>If the provided InputMap is <code>null</code>, we interpret the\n+   * call as a request to remove the UI-managed InputMap from the\n+   * component's InputMap parent chain.</p>\n+   */\n+  public static void replaceUIInputMap(JComponent component, \n+                                       int condition, \n+                                       InputMap uiInputMap)\n+  {\n+    InputMap child = component.getInputMap(condition);\n+    if (child == null)\n+      component.setInputMap(condition, uiInputMap);\n+    else\n+      {\n+        while(child.getParent() != null\n+              && !(child.getParent() instanceof InputMapUIResource))\n+          child = child.getParent();\n+        if (child != null)\n+          child.setParent(uiInputMap);\n+      }\n+  }\n }"}, {"sha": "529ad19348c5d50b2fd1b7f4761caae7b69ca764", "filename": "libjava/javax/swing/Timer.java", "status": "modified", "additions": 213, "deletions": 70, "changes": 283, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FTimer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FTimer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FTimer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1,4 +1,4 @@\n-/* Timer.java -- \n+/* Timer.java --\n    Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -35,102 +35,154 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package javax.swing;\n \n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.io.Serializable;\n import java.util.EventListener;\n-\n import javax.swing.event.EventListenerList;\n \n+\n+/**\n+ * DOCUMENT ME!\n+ */\n public class Timer implements Serializable\n {\n+  /** DOCUMENT ME! */\n   private static final long serialVersionUID = -1116180831621385484L;\n-  \n+\n+  /** DOCUMENT ME! */\n   protected EventListenerList listenerList = new EventListenerList();\n-  \n+\n   // This object manages a \"queue\" of virtual actionEvents, maintained as a\n   // simple long counter. When the timer expires, a new event is queued,\n   // and a dispatcher object is pushed into the system event queue. When\n   // the system thread runs the dispatcher, it will fire as many\n   // ActionEvents as have been queued, unless the timer is set to\n   // coalescing mode, in which case it will fire only one ActionEvent.\n \n+  /** DOCUMENT ME! */\n   private long queue;\n+\n+  /** DOCUMENT ME! */\n   private Object queueLock = new Object();\n+\n+  /** DOCUMENT ME! */\n+  private Waker waker;\n+\n+  /**\n+   * DOCUMENT ME!\n+   */\n   private void queueEvent()\n   {\n     synchronized (queueLock)\n       {\n-        queue++;\n-        if (queue == 1)\n-          SwingUtilities.invokeLater(new Runnable() { public void run() { drainEvents(); } });\n+\tqueue++;\n+\tif (queue == 1)\n+\t  SwingUtilities.invokeLater(new Runnable()\n+\t      {\n+\t\tpublic void run()\n+\t\t{\n+\t\t  drainEvents();\n+\t\t}\n+\t      });\n+\n       }\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   */\n   private void drainEvents()\n   {\n     synchronized (queueLock)\n       {\n-        if (isCoalesce())\n-          {\n-            if (queue > 0)\n-              fireActionPerformed();\n-          }\n-        else\n-          {\n-            while(queue > 0)\n-              {                  \n-                fireActionPerformed();\n-                queue--;\n-              }          \n-          }\n-        queue = 0;\n+\tif (isCoalesce())\n+\t  {\n+\t    if (queue > 0)\n+\t      fireActionPerformed();\n+\t  }\n+\telse\n+\t  {\n+\t    while (queue > 0)\n+\t      {\n+\t\tfireActionPerformed();\n+\t\tqueue--;\n+\t      }\n+\t  }\n+\tqueue = 0;\n       }\n   }\n-  \n \n   static boolean logTimers;\n+\n+  /** DOCUMENT ME! */\n   boolean coalesce = true;\n+\n+  /** DOCUMENT ME! */\n   boolean repeats = true;\n+\n+  /** DOCUMENT ME! */\n   boolean running;\n+\n+  /** DOCUMENT ME! */\n   int ticks;\n+\n+  /** DOCUMENT ME! */\n   int delay;\n+\n+  /** DOCUMENT ME! */\n   int initialDelay;\n-    \n-  private class Waker \n-    extends Thread\n+\n+  /**\n+   * DOCUMENT ME!\n+   */\n+  private class Waker extends Thread\n   {\n+    /**\n+     * DOCUMENT ME!\n+     */\n     public void run()\n     {\n       running = true;\n-      try \n+      try\n         {\n-\n-          sleep(initialDelay);\n-          \n-          while (running)\n-            {\n-              sleep(delay);\n-              queueEvent();\n-              \n-              if (logTimers)\n-                System.out.println(\"javax.swing.Timer -> clocktick\");\n-              \n-              if (! repeats)\n-                break;\n-            }\n-          running = false;\n-      } \n-      catch (Exception e) \n+\t  sleep(initialDelay);\n+\n+\t  while (running)\n+\t    {\n+\t      try\n+\t        {\n+\t\t  sleep(delay);\n+\t        }\n+\t      catch (InterruptedException e)\n+\t        {\n+\t\t  return;\n+\t        }\n+\t      queueEvent();\n+\n+\t      if (logTimers)\n+\t\tSystem.out.println(\"javax.swing.Timer -> clocktick\");\n+\n+\t      if (! repeats)\n+\t\tbreak;\n+\t    }\n+\t  running = false;\n+        }\n+      catch (Exception e)\n         {\n-          System.out.println(\"swing.Timer::\" + e);\n+//\t  System.out.println(\"swing.Timer::\" + e);\n         }\n     }\n   }\n \n+  /**\n+   * Creates a new Timer object.\n+   *\n+   * @param d DOCUMENT ME!\n+   * @param listener DOCUMENT ME!\n+   */\n   public Timer(int d, ActionListener listener)\n   {\n     delay = d;\n@@ -139,123 +191,214 @@ public Timer(int d, ActionListener listener)\n       addActionListener(listener);\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param c DOCUMENT ME!\n+   */\n   public void setCoalesce(boolean c)\n   {\n     coalesce = c;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   */\n   public boolean isCoalesce()\n   {\n     return coalesce;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param listener DOCUMENT ME!\n+   */\n   public void addActionListener(ActionListener listener)\n   {\n-    listenerList.add (ActionListener.class, listener);\n+    listenerList.add(ActionListener.class, listener);\n   }\n-  \n+\n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param listener DOCUMENT ME!\n+   */\n   public void removeActionListener(ActionListener listener)\n   {\n-    listenerList.remove (ActionListener.class, listener);\n+    listenerList.remove(ActionListener.class, listener);\n   }\n \n   /**\n+   * DOCUMENT ME!\n+   *\n+   * @param listenerType DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   *\n    * @since 1.3\n    */\n-  public EventListener[] getListeners (Class listenerType)\n+  public EventListener[] getListeners(Class listenerType)\n   {\n-    return listenerList.getListeners (listenerType);\n+    return listenerList.getListeners(listenerType);\n   }\n-  \n+\n   /**\n+   * DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   *\n    * @since 1.4\n    */\n-  public ActionListener[] getActionListeners ()\n+  public ActionListener[] getActionListeners()\n   {\n-    return (ActionListener[]) listenerList.getListeners (ActionListener.class);\n+    return (ActionListener[]) listenerList.getListeners(ActionListener.class);\n   }\n \n-  protected void fireActionPerformed (ActionEvent event)\n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param event DOCUMENT ME!\n+   */\n+  protected void fireActionPerformed(ActionEvent event)\n   {\n     ActionListener[] listeners = getActionListeners();\n-    \n+\n     for (int i = 0; i < listeners.length; i++)\n-      {\n-\tlisteners [i].actionPerformed (event);\n-      }\n+      listeners[i].actionPerformed(event);\n   }\n \n-  void fireActionPerformed ()\n+  /**\n+   * DOCUMENT ME!\n+   */\n+  void fireActionPerformed()\n   {\n-    fireActionPerformed (new ActionEvent (this, ticks++, \"Timer\"));\n+    fireActionPerformed(new ActionEvent(this, ticks++, \"Timer\"));\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param lt DOCUMENT ME!\n+   */\n   public static void setLogTimers(boolean lt)\n   {\n     logTimers = lt;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   */\n   public static boolean getLogTimers()\n   {\n     return logTimers;\n   }\n-    \n+\n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param d DOCUMENT ME!\n+   */\n   public void setDelay(int d)\n   {\n     delay = d;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   */\n   public int getDelay()\n   {\n     return delay;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param i DOCUMENT ME!\n+   */\n   public void setInitialDelay(int i)\n   {\n     initialDelay = i;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   */\n   public int getInitialDelay()\n   {\n     return initialDelay;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @param r DOCUMENT ME!\n+   */\n   public void setRepeats(boolean r)\n   {\n     repeats = r;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   */\n   public boolean isRepeats()\n   {\n     return repeats;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   *\n+   * @return DOCUMENT ME!\n+   */\n   public boolean isRunning()\n   {\n     return running;\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   */\n   public void start()\n   {\n     if (isRunning())\n-      {\n-\tSystem.err.println(\"attempt to start a running timer\");\n-\treturn;\n-      }\n-    new Waker().start();\n+      return;\n+    waker = new Waker();\n+    waker.start();\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   */\n   public void restart()\n   {\n-    synchronized (queueLock)\n-      {\n-        queue = 0;\n-      }\n+    stop();\n     start();\n   }\n \n+  /**\n+   * DOCUMENT ME!\n+   */\n   public void stop()\n   {\n     running = false;\n+    if (waker != null)\n+      waker.interrupt();\n+    synchronized (queueLock)\n+      {\n+\tqueue = 0;\n+      }\n   }\n }"}, {"sha": "3556ef005a637a892b4dcacc064ffbb7af7eed20", "filename": "libjava/javax/swing/ToolTipManager.java", "status": "modified", "additions": 489, "deletions": 196, "changes": 685, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FToolTipManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FToolTipManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FToolTipManager.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -37,315 +37,608 @@\n \n package javax.swing;\n \n+import java.awt.AWTEvent;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Insets;\n+import java.awt.LayoutManager;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.event.*;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.awt.event.MouseAdapter;\n import java.awt.event.MouseEvent;\n import java.awt.event.MouseMotionListener;\n+import javax.swing.JComponent;\n+import javax.swing.Popup;\n+import javax.swing.PopupFactory;\n+import javax.swing.SwingUtilities;\n+import javax.swing.Timer;\n \n \n /**\n- * ToolTipManager\n- * \n- * @author\tAndrew Selkirk\n+ * This class is responsible for the registration of JToolTips to Components\n+ * and for displaying them when appropriate.\n  */\n-public class ToolTipManager extends MouseAdapter\n-  implements MouseMotionListener\n+public class ToolTipManager extends MouseAdapter implements MouseMotionListener\n {\n-\t/**\n-\t * stillInsideTimerAction\n-\t */\n-  protected class stillInsideTimerAction\n-    implements ActionListener\n+  /**\n+   * This ActionListener is associated with the Timer that listens to whether\n+   * the JToolTip can be hidden after four seconds.\n+   */\n+  protected class stillInsideTimerAction implements ActionListener\n   {\n-\t\t/**\n-\t\t * Constructor stillInsideTimerAction\n-\t\t */\n+    /**\n+     * This method creates a new stillInsideTimerAction object.\n+     */\n     protected stillInsideTimerAction()\n     {\n-\t\t\t// TODO\n     }\n \n-\t\t/**\n-\t\t * actionPerformed\n-\t\t * @param event TODO\n-\t\t */\n+    /**\n+     * This method hides the JToolTip when the Timer has finished.\n+     *\n+     * @param event The ActionEvent.\n+     */\n     public void actionPerformed(ActionEvent event)\n     {\n-\t\t\t// TODO\n+      hideTip();\n     }\n   }\n \n-\t/**\n-\t * outsideTimerAction\n-\t */\n-  protected class outsideTimerAction\n-    implements ActionListener\n+  /**\n+   * This Actionlistener is associated with the Timer that listens to whether\n+   * the mouse cursor has re-entered the JComponent in time for an immediate\n+   * redisplay of the JToolTip.\n+   */\n+  protected class outsideTimerAction implements ActionListener\n   {\n-\t\t/**\n-\t\t * Constructor outsideTimerAction\n-\t\t */\n+    /**\n+     * This method creates a new outsideTimerAction object.\n+     */\n     protected outsideTimerAction()\n     {\n-\t\t\t// TODO\n     }\n \n-\t\t/**\n-\t\t * actionPerformed\n-\t\t * @param value0 TODO\n-\t\t */\n+    /**\n+     * This method is called when the Timer that listens to whether the mouse\n+     * cursor has re-entered the JComponent has run out.\n+     *\n+     * @param event The ActionEvent.\n+     */\n     public void actionPerformed(ActionEvent event)\n     {\n-\t\t\t// TODO\n     }\n   }\n \n-\t/**\n-\t * insideTimerAction\n-\t */\n-  protected class insideTimerAction\n-    implements ActionListener\n+  /**\n+   * This ActionListener is associated with the Timer that listens to whether\n+   * it is time for the JToolTip to be displayed after the mouse has entered\n+   * the JComponent.\n+   */\n+  protected class insideTimerAction implements ActionListener\n   {\n-\t\t/**\n-\t\t * Constructor insideTimerAction\n-\t\t */\n+    /**\n+     * This method creates a new insideTimerAction object.\n+     */\n     protected insideTimerAction()\n     {\n-\t\t\t// TODO\n     }\n \n-\t\t/**\n-\t\t * actionPerformed\n-\t\t * @param event TODO\n-\t\t */\n+    /**\n+     * This method displays the JToolTip when the Mouse has been still for the\n+     * delay.\n+     *\n+     * @param event The ActionEvent.\n+     */\n     public void actionPerformed(ActionEvent event)\n     {\n-\t\t\t// TODO\n+      showTip();\n+      if (insideTimer != null)\n+\tinsideTimer.start();\n     }\n   }\n \n-\t/**\n-\t * enterTimer\n-\t */\n-\tTimer enterTimer;\n-\n-\t/**\n-\t * exitTimer\n-\t */\n-\tTimer exitTimer;\n-\n-\t/**\n-\t * insideTimer\n-\t */\n-\tTimer insideTimer;\n-\n-\t/**\n-\t * toolTipText\n-\t */\n-\tString toolTipText;\n-\n-\t/**\n-\t * mouseEvent\n-\t */\n-\tMouseEvent mouseEvent;\n-\n-\t/**\n-\t * showImmediately\n-\t */\n-\tboolean showImmediately;\n-\n-\t/**\n-\t * tip\n-\t */\n-\tJToolTip tip;\n-\n-\t/**\n-\t * enabled\n-\t */\n-\tboolean enabled;\n-\n-\t/**\n-\t * timerEnter\n-\t */\n-\tprivate long timerEnter;\n-\n-\t/**\n-\t * lightWeightPopupEnabled\n-\t */\n-\tprotected boolean lightWeightPopupEnabled;\n-\n-\t/**\n-\t * heavyWeightPopupEnabled\n-\t */\n-\tprotected boolean heavyWeightPopupEnabled;\n-\n-\t/**\n-\t * Constructor ToolTipManager\n-\t */\n+  /**\n+   * The Timer that determines whether the Mouse has been still long enough\n+   * for the JToolTip to be displayed.\n+   */\n+  Timer enterTimer;\n+\n+  /**\n+   * The Timer that determines whether the Mouse has re-entered the JComponent\n+   * quickly enough for the JToolTip to be displayed immediately.\n+   */\n+  Timer exitTimer;\n+\n+  /**\n+   * The Timer that determines whether the JToolTip has been displayed long\n+   * enough for it to be hidden.\n+   */\n+  Timer insideTimer;\n+\n+  /** A global enabled setting for the ToolTipManager. */\n+  private transient boolean enabled = true;\n+\n+  /** lightWeightPopupEnabled */\n+  protected boolean lightWeightPopupEnabled = true;\n+\n+  /** heavyWeightPopupEnabled */\n+  protected boolean heavyWeightPopupEnabled = false;\n+\n+  /** The shared instance of the ToolTipManager. */\n+  private static ToolTipManager shared;\n+\n+  /** The current component the tooltip is being displayed for. */\n+  private static Component currentComponent;\n+\n+  /** The current tooltip. */\n+  private static JToolTip currentTip;\n+\n+  /** The last known position of the mouse cursor. */\n+  private static Point currentPoint;\n+\n+  /**\n+   * The panel that holds the tooltip when the tooltip is displayed fully\n+   * inside the current container.\n+   */\n+  private static Container containerPanel;\n+\n+  /**\n+   * The window used when the tooltip doesn't fit inside the current\n+   * container.\n+   */\n+  private static JWindow tooltipWindow;\n+\n+  /**\n+   * Creates a new ToolTipManager and sets up the timers.\n+   */\n   ToolTipManager()\n   {\n-\t\t// TODO\n+    enterTimer = new Timer(750, new insideTimerAction());\n+    enterTimer.setRepeats(false);\n+\n+    insideTimer = new Timer(4000, new stillInsideTimerAction());\n+    insideTimer.setRepeats(false);\n+\n+    exitTimer = new Timer(500, new outsideTimerAction());\n+    exitTimer.setRepeats(false);\n   }\n \n-\t/**\n-\t * sharedInstance\n-   * @return ToolTipManager\n-\t */\n+  /**\n+   * This method returns the shared instance of ToolTipManager used by all\n+   * JComponents.\n+   *\n+   * @return The shared instance of ToolTipManager.\n+   */\n   public static ToolTipManager sharedInstance()\n   {\n-\t\treturn null; // TODO\n+    if (shared == null)\n+      shared = new ToolTipManager();\n+\n+    return shared;\n   }\n \n-\t/**\n-\t * setEnabled\n-\t * @param enabled TODO\n-\t */\n+  /**\n+   * This method sets whether ToolTips are enabled or disabled for all\n+   * JComponents.\n+   *\n+   * @param enabled Whether ToolTips are enabled or disabled for all\n+   *        JComponents.\n+   */\n   public void setEnabled(boolean enabled)\n   {\n-\t\t// TODO\n+    if (! enabled)\n+      {\n+\tenterTimer.stop();\n+\texitTimer.stop();\n+\tinsideTimer.stop();\n+      }\n+\n+    this.enabled = enabled;\n   }\n \n-\t/**\n-\t * isEnabled\n-   * @return boolean\n-\t */\n+  /**\n+   * This method returns whether ToolTips are enabled.\n+   *\n+   * @return Whether ToolTips are enabled.\n+   */\n   public boolean isEnabled()\n   {\n-\t\treturn false; // TODO\n+    return enabled;\n   }\n \n-\t/**\n-\t * isLightWeightPopupEnabled\n-   * @return boolean\n-\t */\n+  /**\n+   * This method returns whether LightweightToolTips are enabled.\n+   *\n+   * @return Whether LighweightToolTips are enabled.\n+   */\n   public boolean isLightWeightPopupEnabled()\n   {\n-\t\treturn false; // TODO\n+    return lightWeightPopupEnabled;\n   }\n \n-\t/**\n-\t * setLightWeightPopupEnabled\n-\t * @param enabled TODO\n-\t */\n+  /**\n+   * This method sets whether LightweightToolTips are enabled. If you mix\n+   * Lightweight and Heavyweight components, you must set this to false to\n+   * ensure that the ToolTips popup above all other components.\n+   *\n+   * @param enabled Whether LightweightToolTips will be enabled.\n+   */\n   public void setLightWeightPopupEnabled(boolean enabled)\n   {\n-\t\t// TODO\n+    lightWeightPopupEnabled = enabled;\n+    heavyWeightPopupEnabled = ! enabled;\n   }\n \n-\t/**\n-\t * getInitialDelay\n-   * @return int\n-\t */\n+  /**\n+   * This method returns the initial delay before the ToolTip is shown when\n+   * the mouse enters a Component.\n+   *\n+   * @return The initial delay before the ToolTip is shown.\n+   */\n   public int getInitialDelay()\n   {\n-\t\treturn 0; // TODO\n+    return enterTimer.getDelay();\n   }\n \n-\t/**\n-\t * setInitialDelay\n-\t * @param delay TODO\n-\t */\n+  /**\n+   * This method sets the initial delay before the ToolTip is shown when the\n+   * mouse enters a Component.\n+   *\n+   * @param delay The initial delay before the ToolTip is shown.\n+   */\n   public void setInitialDelay(int delay)\n   {\n-\t\t// TODO\n+    enterTimer.setDelay(delay);\n   }\n \n-\t/**\n-\t * getDismissDelay\n-   * @return int\n-\t */\n+  /**\n+   * This method returns the time the ToolTip will be shown before being\n+   * hidden.\n+   *\n+   * @return The time the ToolTip will be shown before being hidden.\n+   */\n   public int getDismissDelay()\n   {\n-\t\treturn 0; // TODO\n+    return insideTimer.getDelay();\n   }\n \n-\t/**\n-\t * setDismissDelay\n-\t * @param delay TODO\n-\t */\n+  /**\n+   * This method sets the time the ToolTip will be shown before being hidden.\n+   *\n+   * @param delay The time the ToolTip will be shown before being hidden.\n+   */\n   public void setDismissDelay(int delay)\n   {\n-\t\t// TODO\n+    insideTimer.setDelay(delay);\n   }\n \n-\t/**\n-\t * getReshowDelay\n-   * @return int\n-\t */\n+  /**\n+   * This method returns the amount of delay where if the mouse re-enters a\n+   * Component, the tooltip will be shown immediately.\n+   *\n+   * @return The reshow delay.\n+   */\n   public int getReshowDelay()\n   {\n-\t\treturn 0; // TODO\n+    return exitTimer.getDelay();\n   }\n \n-\t/**\n-\t * setReshowDelay\n-\t * @param delay TODO\n-\t */\n+  /**\n+   * This method sets the amount of delay where if the mouse re-enters a\n+   * Component, the tooltip will be shown immediately.\n+   *\n+   * @param delay The reshow delay.\n+   */\n   public void setReshowDelay(int delay)\n   {\n-\t\t// TODO\n+    exitTimer.setDelay(delay);\n   }\n \n-\t/**\n-\t * registerComponent\n-\t * @param component TODO\n-\t */\n+  /**\n+   * This method registers a JComponent with the ToolTipManager.\n+   *\n+   * @param component The JComponent to register with the ToolTipManager.\n+   */\n   public void registerComponent(JComponent component)\n   {\n-\t\t// TODO\n+    component.addMouseListener(this);\n+    component.addMouseMotionListener(this);\n   }\n \n-\t/**\n-\t * unregisterComponent\n-\t * @param component TODO\n-\t */\n+  /**\n+   * This method unregisters a JComponent with the ToolTipManager.\n+   *\n+   * @param component The JComponent to unregister with the ToolTipManager.\n+   */\n   public void unregisterComponent(JComponent component)\n   {\n-\t\t// TODO\n+    component.removeMouseMotionListener(this);\n+    component.removeMouseListener(this);\n   }\n \n-\t/**\n-\t * mouseEntered\n-\t * @param event TODO\n-\t */\n+  /**\n+   * This method is called whenever the mouse enters a JComponent registered\n+   * with the ToolTipManager. When the mouse enters within the period of time\n+   * specified by the reshow delay, the tooltip will be displayed\n+   * immediately. Otherwise, it must wait for the initial delay before\n+   * displaying the tooltip.\n+   *\n+   * @param event The MouseEvent.\n+   */\n   public void mouseEntered(MouseEvent event)\n   {\n-\t\t// TODO\n+    if (currentComponent != null\n+        && getContentPaneDeepestComponent(event) == currentComponent)\n+      return;\n+    currentPoint = event.getPoint();\n+    currentComponent = (Component) event.getSource();\n+\n+    if (exitTimer.isRunning())\n+      {\n+\texitTimer.stop();\n+\tshowTip();\n+\tinsideTimer.start();\n+\treturn;\n+      }\n+\n+    // This should always be stopped unless we have just fake-exited.\n+    if (! enterTimer.isRunning())\n+      enterTimer.start();\n   }\n \n-\t/**\n-\t * mouseExited\n-\t * @param event TODO\n-\t */\n+  /**\n+   * This method is called when the mouse exits a JComponent registered with\n+   * the ToolTipManager. When the mouse exits, the tooltip should be hidden\n+   * immediately.\n+   *\n+   * @param event The MouseEvent.\n+   */\n   public void mouseExited(MouseEvent event)\n   {\n-\t\t// TODO\n+    if (getContentPaneDeepestComponent(event) == currentComponent)\n+      return;\n+\n+    currentPoint = event.getPoint();\n+    currentComponent = null;\n+    hideTip();\n+\n+    if (! enterTimer.isRunning() && insideTimer.isRunning())\n+      exitTimer.start();\n+    if (enterTimer.isRunning())\n+      enterTimer.stop();\n+    if (insideTimer.isRunning())\n+      insideTimer.stop();\n   }\n \n-\t/**\n-\t * mousePressed\n-\t * @param event TODO\n-\t */\n+  /**\n+   * This method is called when the mouse is pressed on a JComponent\n+   * registered with the ToolTipManager. When the mouse is pressed, the\n+   * tooltip (if it is shown) must be hidden immediately.\n+   *\n+   * @param event The MouseEvent.\n+   */\n   public void mousePressed(MouseEvent event)\n   {\n-\t\t// TODO\n+    currentPoint = event.getPoint();\n+    if (enterTimer.isRunning())\n+      enterTimer.restart();\n+    else if (insideTimer.isRunning())\n+      {\n+\tinsideTimer.stop();\n+\thideTip();\n+      }\n+    currentComponent.invalidate();\n+    currentComponent.validate();\n+    currentComponent.repaint();\n   }\n \n-\t/**\n-\t * mouseDragged\n-\t * @param event TODO\n-\t */\n+  /**\n+   * This method is called when the mouse is dragged in a JComponent\n+   * registered with the ToolTipManager.\n+   *\n+   * @param event The MouseEvent.\n+   */\n   public void mouseDragged(MouseEvent event)\n   {\n-\t\t// TODO\n+    currentPoint = event.getPoint();\n+    if (enterTimer.isRunning())\n+      enterTimer.restart();\n   }\n \n-\t/**\n-\t * mouseMoved\n-\t * @param event TODO\n-\t */\n+  /**\n+   * This method is called when the mouse is moved in a JComponent registered\n+   * with the ToolTipManager.\n+   *\n+   * @param event The MouseEvent.\n+   */\n   public void mouseMoved(MouseEvent event)\n   {\n-\t\t// TODO\n+    currentPoint = event.getPoint();\n+    if (currentTip != null)\n+      currentTip.setTipText(((JComponent) currentComponent).getToolTipText(event));\n+    if (enterTimer.isRunning())\n+      enterTimer.restart();\n+  }\n+\n+  /**\n+   * This method displays the ToolTip. It can figure out the method needed to\n+   * show it as well (whether to display it in heavyweight/lightweight panel\n+   * or a window.)\n+   */\n+  private void showTip()\n+  {\n+    if (! enabled)\n+      return;\n+\n+    if (currentTip == null\n+        || currentTip.getComponent() != currentComponent\n+        && currentComponent instanceof JComponent)\n+      currentTip = ((JComponent) currentComponent).createToolTip();\n+    Point p = currentPoint;\n+    Dimension dims = currentTip.getPreferredSize();\n+    if (canToolTipFit(currentTip))\n+      {\n+\tJLayeredPane pane = ((JRootPane) SwingUtilities.getAncestorOfClass(JRootPane.class,\n+\t                                                                   currentComponent))\n+\t                    .getLayeredPane();\n+\n+\t// This should never happen, but just in case.\n+\tif (pane == null)\n+\t  return;\n+\n+\tif (containerPanel != null)\n+\t  hideTip();\n+\tif (isLightWeightPopupEnabled())\n+\t  {\n+\t    containerPanel = new Panel();\n+\t    JRootPane root = new JRootPane();\n+\t    root.getContentPane().add(currentTip);\n+\t    containerPanel.add(root);\n+\t  }\n+\telse\n+\t  {\n+\t    containerPanel = new JPanel();\n+\t    containerPanel.add(currentTip);\n+\t  }\n+\tLayoutManager lm = containerPanel.getLayout();\n+\tif (lm instanceof FlowLayout)\n+\t  {\n+\t    FlowLayout fm = (FlowLayout) lm;\n+\t    fm.setVgap(0);\n+\t    fm.setHgap(0);\n+\t  }\n+\n+\tp = getGoodPoint(p, pane, currentTip, dims);\n+\n+\tpane.add(containerPanel);\n+\tcontainerPanel.setBounds(p.x, p.y, dims.width, dims.height);\n+\tcurrentTip.setBounds(0, 0, dims.width, dims.height);\n+\n+\tpane.revalidate();\n+\tpane.repaint();\n+      }\n+    else\n+      {\n+\tSwingUtilities.convertPointToScreen(p, currentComponent);\n+\ttooltipWindow = new JWindow();\n+\ttooltipWindow.getContentPane().add(currentTip);\n+\ttooltipWindow.setFocusable(false);\n+\ttooltipWindow.pack();\n+\ttooltipWindow.setBounds(p.x, p.y, dims.width, dims.height);\n+\ttooltipWindow.show();\n+      }\n+    currentTip.setVisible(true);\n+  }\n+\n+  /**\n+   * This method hides the ToolTip.\n+   */\n+  private void hideTip()\n+  {\n+    if (currentTip == null || ! currentTip.isVisible() || ! enabled)\n+      return;\n+    currentTip.setVisible(false);\n+    if (containerPanel != null)\n+      {\n+\tContainer parent = containerPanel.getParent();\n+\tif (parent == null)\n+\t  return;\n+\tparent.remove(containerPanel);\n+\tparent.invalidate();\n+\tparent.validate();\n+\tparent.repaint();\n+\n+\tparent = currentTip.getParent();\n+\tif (parent == null)\n+\t  return;\n+\tparent.remove(currentTip);\n+\n+\tcontainerPanel = null;\n+      }\n+    if (tooltipWindow != null)\n+      {\n+\ttooltipWindow.hide();\n+\ttooltipWindow.dispose();\n+\ttooltipWindow = null;\n+      }\n+  }\n+\n+  /**\n+   * This method returns a point in the LayeredPane where the ToolTip can be\n+   * shown. The point returned (if the ToolTip is to be displayed at the\n+   * preferred dimensions) will always place the ToolTip inside the\n+   * currentComponent if possible.\n+   *\n+   * @param p The last known good point for the mouse.\n+   * @param c The JLayeredPane in the first RootPaneContainer up from the\n+   *        currentComponent.\n+   * @param tip The ToolTip to display.\n+   * @param dims The ToolTip preferred dimensions (can be null).\n+   *\n+   * @return A good point to place the ToolTip.\n+   */\n+  private Point getGoodPoint(Point p, JLayeredPane c, JToolTip tip,\n+                             Dimension dims)\n+  {\n+    if (dims == null)\n+      dims = tip.getPreferredSize();\n+    Rectangle bounds = currentComponent.getBounds();\n+    if (p.x + dims.width > bounds.width)\n+      p.x = bounds.width - dims.width;\n+    if (p.y + dims.height > bounds.height)\n+      p.y = bounds.height - dims.height;\n+\n+    p = SwingUtilities.convertPoint(currentComponent, p, c);\n+    return p;\n+  }\n+\n+  /**\n+   * This method returns the deepest component in the content pane for the\n+   * first RootPaneContainer up from the currentComponent. This method is\n+   * used in conjunction with one of the mouseXXX methods.\n+   *\n+   * @param e The MouseEvent.\n+   *\n+   * @return The deepest component in the content pane.\n+   */\n+  private Component getContentPaneDeepestComponent(MouseEvent e)\n+  {\n+    Component source = (Component) e.getSource();\n+    Container parent = (Container) SwingUtilities.getAncestorOfClass(JRootPane.class,\n+                                                                     currentComponent);\n+    if (parent == null)\n+      return null;\n+    parent = ((JRootPane) parent).getContentPane();\n+    Point p = e.getPoint();\n+    p = SwingUtilities.convertPoint(source, p, parent);\n+    Component target = SwingUtilities.getDeepestComponentAt(parent, p.x, p.y);\n+    return target;\n+  }\n+\n+  /**\n+   * This method returns whether the ToolTip can fit in the first\n+   * RootPaneContainer up from the currentComponent.\n+   *\n+   * @param tip The ToolTip.\n+   *\n+   * @return Whether the ToolTip can fit.\n+   */\n+  private boolean canToolTipFit(JToolTip tip)\n+  {\n+    JRootPane root = (JRootPane) SwingUtilities.getAncestorOfClass(JRootPane.class,\n+                                                                   currentComponent);\n+    if (root == null)\n+      return false;\n+    Dimension pref = tip.getPreferredSize();\n+    Dimension rootSize = root.getSize();\n+    if (rootSize.width > pref.width && rootSize.height > pref.height)\n+      return true;\n+    return false;\n   }\n }"}, {"sha": "a600972aff31d5e7706b4f12daaf002c3976aa4b", "filename": "libjava/javax/swing/UIManager.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FUIManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2FUIManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIManager.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -278,7 +278,7 @@ public static String getSystemLookAndFeelClassName()\n   }\n \n   /**\n-   * Returns the L&amp;F object that renders the target component.\n+   * Returns the Look and Feel object that renders the target component.\n    */\n   public static ComponentUI getUI(JComponent target)\n   {"}, {"sha": "37d6276988e13a3f45077cfe7d5cb36aa52a4f84", "filename": "libjava/javax/swing/colorchooser/AbstractColorChooserPanel.java", "status": "modified", "additions": 108, "deletions": 82, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -35,7 +35,6 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package javax.swing.colorchooser;\n \n import java.awt.Color;\n@@ -44,92 +43,119 @@\n import javax.swing.JColorChooser;\n import javax.swing.JPanel;\n \n+\n /**\n  * AbstractColorChooserPanel\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ *\n+ * @author Andrew Selkirk\n+ * @version 1.0\n  */\n public abstract class AbstractColorChooserPanel extends JPanel\n {\n+  /** DOCUMENT ME! */\n   private static final long serialVersionUID = -977469671210173863L;\n \n-\t/**\n-\t * chooser\n-\t */\n-\tprivate JColorChooser chooser;\n-\n-\t/**\n-\t * Constructor AbstractColorChooserPanel\n-\t */\n-\tpublic AbstractColorChooserPanel() {\n-\t\t// TODO\n-\t} // AbstractColorChooserPanel()\n-\n-\t/**\n-\t * getDisplayName\n-\t * @returns String\n-\t */\n-\tpublic abstract String getDisplayName();\n-\n-\t/**\n-\t * updateChooser\n-\t */\n-\tpublic abstract void updateChooser();\n-\n-\t/**\n-\t * buildChooser\n-\t */\n-\tprotected abstract void buildChooser();\n-\n-\t/**\n-\t * getSmallDisplayIcon\n-\t * @returns Icon\n-\t */\n-\tpublic abstract Icon getSmallDisplayIcon();\n-\n-\t/**\n-\t * getLargeDisplayIcon\n-\t * @returns Icon\n-\t */\n-\tpublic abstract Icon getLargeDisplayIcon();\n-\n-\t/**\n-\t * installChooserPanel\n-\t * @param chooser TODO\n-\t */\n-\tpublic void installChooserPanel(JColorChooser chooser) {\n-\t\t// TODO\n-\t} // installChooserPanel()\n-\n-\t/**\n-\t * uninstallChooserPanel\n-\t * @param chooser TODO\n-\t */\n-\tpublic void uninstallChooserPanel(JColorChooser chooser) {\n-\t\t// TODO\n-\t} // uninstallChooserPanel()\n-\n-\t/**\n-\t * getColorSelectionModel\n-\t * @returns ColorSelectionModel\n-\t */\n-\tpublic ColorSelectionModel getColorSelectionModel() {\n-\t\treturn null; // TODO\n-\t} // getColorSelectionModel()\n-\n-\t/**\n-\t * getColorFromModel\n-\t * @returns Color\n-\t */\n-\tprotected Color getColorFromModel() {\n-\t\treturn null; // TODO\n-\t} // getColorFromModel()\n-\n-\t/**\n-\t * paint\n-\t * @param graphics TODO\n-\t */\n-\tpublic void paint(Graphics graphics) {\n-\t\t// TODO\n-\t} // paint()\n+  /** The chooser associated with this panel. */\n+  private JColorChooser chooser;\n+\n+  /**\n+   * This is the constructor for the AbstractColorChooserPanel.\n+   */\n+  public AbstractColorChooserPanel()\n+  {\n+  } // AbstractColorChooserPanel()\n+\n+  /**\n+   * This method returns the name displayed in the tab for this chooser panel.\n+   *\n+   * @return The name displayed in the JTabbedPane's tabs.\n+   */\n+  public abstract String getDisplayName();\n+\n+  /**\n+   * This method updates the chooser panel when the JColorChooser's color has\n+   * changed.\n+   */\n+  public abstract void updateChooser();\n+\n+  /**\n+   * This method constructs and does any initialization necessary for the\n+   * chooser panel.\n+   */\n+  protected abstract void buildChooser();\n+\n+  /**\n+   * This method sets the small icon used in the JTabbedPane for this chooser\n+   * panel.\n+   *\n+   * @return The small icon used in the JTabbedPane.\n+   */\n+  public abstract Icon getSmallDisplayIcon();\n+\n+  /**\n+   * This method sets the large icon useed in the jTabbedPane for this chooser\n+   * panel.\n+   *\n+   * @return The large icon.\n+   */\n+  public abstract Icon getLargeDisplayIcon();\n+\n+  /**\n+   * This method installs the chooser panel for the given JColorChooser.\n+   *\n+   * @param chooser The JColorChooser that will have this panel installed.\n+   */\n+  public void installChooserPanel(JColorChooser chooser)\n+  {\n+    this.chooser = chooser;\n+    buildChooser();\n+  } // installChooserPanel()\n+\n+  /**\n+   * This method removes the chooser panel from the given JColorChooser and\n+   * does any necessary clean up for the chooser panel.\n+   *\n+   * @param chooser The JColorChooser that is having this panel removed.\n+   */\n+  public void uninstallChooserPanel(JColorChooser chooser)\n+  {\n+    this.chooser = null;\n+  } // uninstallChooserPanel()\n+\n+  /**\n+   * This method returns the ColorSelectionModel for the JColorChooser\n+   * associated with this chooser panel.\n+   *\n+   * @return The ColorSelectionModel for the JColorChooser associated with\n+   *         this chooser panel.\n+   */\n+  public ColorSelectionModel getColorSelectionModel()\n+  {\n+    if (chooser != null)\n+      return chooser.getSelectionModel();\n+    return null;\n+  } // getColorSelectionModel()\n+\n+  /**\n+   * This method returns the current color stored in the model for this\n+   * chooser panel.\n+   *\n+   * @return The current color.\n+   */\n+  protected Color getColorFromModel()\n+  {\n+    if (chooser != null)\n+      return chooser.getColor();\n+    return null;\n+  } // getColorFromModel()\n+\n+  /**\n+   * This method paints the chooser panel.\n+   *\n+   * @param graphics The Graphics object to paint with.\n+   */\n+  public void paint(Graphics graphics)\n+  {\n+    super.paint(graphics);\n+  } // paint()\n } // AbstractColorChooserPanel"}, {"sha": "6e7ca33d752f03714daaf78a6a647728dbf9707b", "filename": "libjava/javax/swing/colorchooser/ColorChooserComponentFactory.java", "status": "modified", "additions": 40, "deletions": 38, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorChooserComponentFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorChooserComponentFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorChooserComponentFactory.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -35,49 +35,51 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package javax.swing.colorchooser;\n \n import javax.swing.JComponent;\n \n+\n /**\n  * ColorChooserComponentFactory\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ *\n+ * @author Andrew Selkirk\n+ * @version 1.0\n  */\n-public class ColorChooserComponentFactory {\n-\n-\t//-------------------------------------------------------------\n-\t// Initialization ---------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * Constructor ColorChooserComponentFactory\n-\t */\n-\tprivate ColorChooserComponentFactory() {\n-\t\t// TODO\n-\t} // ColorChooserComponentFactory()\n-\n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * getDefaultChooserPanels\n-\t * @returns AbstractColorChooserPanel[]\n-\t */\n-\tpublic static AbstractColorChooserPanel[] getDefaultChooserPanels() {\n-\t\treturn null; // TODO\n-\t} // getDefaultChooserPanels()\n-\n-\t/**\n-\t * getPreviewPanel\n-\t * @returns JComponent\n-\t */\n-\tpublic static JComponent getPreviewPanel() {\n-\t\treturn null; // TODO\n-\t} // getPreviewPanel()\n-\n-\n+public class ColorChooserComponentFactory\n+{\n+  /**\n+   * Constructor ColorChooserComponentFactory\n+   */\n+  private ColorChooserComponentFactory()\n+  {\n+  } // ColorChooserComponentFactory()\n+\n+  /**\n+   * This method returns the three default chooser panels to be used in\n+   * JColorChooser.\n+   *\n+   * @return The default chooser panels.\n+   */\n+  public static AbstractColorChooserPanel[] getDefaultChooserPanels()\n+  {\n+    AbstractColorChooserPanel[] values = \n+                                         {\n+                                           new DefaultSwatchChooserPanel(),\n+                                           new DefaultHSBChooserPanel(),\n+                                           new DefaultRGBChooserPanel()\n+                                         };\n+    return values;\n+  }\n+\n+  /**\n+   * This method returns the default preview panel to be used with\n+   * JColorChoosers.\n+   *\n+   * @return The default preview panel.\n+   */\n+  public static JComponent getPreviewPanel()\n+  {\n+    return new DefaultPreviewPanel();\n+  } // getPreviewPanel()\n } // ColorChooserComponentFactory"}, {"sha": "90145edced80867075220f78717f4a7d3e4a0db3", "filename": "libjava/javax/swing/colorchooser/DefaultColorSelectionModel.java", "status": "modified", "additions": 47, "deletions": 26, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultColorSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultColorSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultColorSelectionModel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -35,7 +35,6 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package javax.swing.colorchooser;\n \n import java.awt.Color;\n@@ -44,43 +43,55 @@\n import javax.swing.event.ChangeListener;\n import javax.swing.event.EventListenerList;\n \n+\n /**\n- * DefaultColorSelectionModel\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ * This is the default implementation of the ColorSelectionModel interface\n+ * that JColorChoosers use.\n+ *\n+ * @author Andrew Selkirk\n+ * @version 1.0\n  */\n-public class DefaultColorSelectionModel \n-  implements ColorSelectionModel, Serializable\n+public class DefaultColorSelectionModel implements ColorSelectionModel,\n+                                                   Serializable\n {\n+  /** DOCUMENT ME! */\n   private static final long serialVersionUID = -8117143602864778804L;\n \n+  /** The currently selected color. */\n   private Color selectedColor;\n \n-  protected transient ChangeEvent changeEvent = new ChangeEvent (this);\n-  protected EventListenerList listenerList = new EventListenerList ();\n+  /** The ChangeEvent fired to all ChangeListeners. */\n+  protected transient ChangeEvent changeEvent = new ChangeEvent(this);\n+\n+  /** The list of listeners. */\n+  protected EventListenerList listenerList = new EventListenerList();\n \n   /**\n-   * Creates a new color selection model.\n+   * Creates a new color selection model with the default white color.\n    */\n   public DefaultColorSelectionModel()\n   {\n-    this (Color.white);\n+    this(Color.white);\n   }\n \n   /**\n    * Creates a new color selection model with a given selected color.\n-   * \n-   * @param color The selected color.\n+   *\n+   * @param color The initial color.\n+   *\n+   * @throws Error If the color is null.\n    */\n-  public DefaultColorSelectionModel (Color color)\n+  public DefaultColorSelectionModel(Color color)\n   {\n     super();\n+    if (color == null)\n+      throw new Error(\"ColorSelectionModel cannot be set to have null color.\");\n     this.selectedColor = color;\n   }\n \n   /**\n    * Returns the selected color.\n-   * \n+   *\n    * @return The selected color.\n    */\n   public Color getSelectedColor()\n@@ -89,31 +100,41 @@ public Color getSelectedColor()\n   }\n \n   /**\n+   * This method sets the color.\n+   *\n    * @param color The color to set.\n+   *\n+   * @throws Error If the color is set.\n    */\n-  public void setSelectedColor (Color color)\n+  public void setSelectedColor(Color color)\n   {\n-    this.selectedColor = color;\n+    if (color == null)\n+      throw new Error(\"ColorSelectionModel cannot be set to have null color.\");\n+    if (color != selectedColor)\n+      {\n+\tthis.selectedColor = color;\n+\tfireStateChanged();\n+      }\n   }\n \n   /**\n    * Adds a listener to this model.\n-   * \n+   *\n    * @param listener The listener to add.\n    */\n-  public void addChangeListener (ChangeListener listener)\n+  public void addChangeListener(ChangeListener listener)\n   {\n-    listenerList.add (ChangeListener.class, listener);\n+    listenerList.add(ChangeListener.class, listener);\n   }\n \n   /**\n    * Removes a listener from this model.\n-   * \n+   *\n    * @param listener The listener to remove.\n    */\n-  public void removeChangeListener (ChangeListener listener)\n+  public void removeChangeListener(ChangeListener listener)\n   {\n-    listenerList.remove (ChangeListener.class, listener);\n+    listenerList.remove(ChangeListener.class, listener);\n   }\n \n   /**\n@@ -123,19 +144,19 @@ public void removeChangeListener (ChangeListener listener)\n    */\n   public ChangeListener[] getChangeListeners()\n   {\n-    return (ChangeListener[]) listenerList.getListeners (ChangeListener.class);\n+    return (ChangeListener[]) listenerList.getListeners(ChangeListener.class);\n   }\n \n   /**\n    * Calls all the <code>stateChanged()</code> method of all added\n-   * <code>ChangeListener</code> objects with <code>changeEvent</code>\n-   * as argument.\n+   * <code>ChangeListener</code> objects with <code>changeEvent</code> as\n+   * argument.\n    */\n   protected void fireStateChanged()\n   {\n     ChangeListener[] listeners = getChangeListeners();\n \n     for (int i = 0; i < listeners.length; i++)\n-      listeners [i].stateChanged (changeEvent);\n+      listeners[i].stateChanged(changeEvent);\n   }\n }"}, {"sha": "8354d06a0ce1d06a57c8469625116dab9fef6936", "filename": "libjava/javax/swing/plaf/basic/BasicArrowButton.java", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicArrowButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicArrowButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicArrowButton.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -163,7 +163,7 @@ public void paintIconImpl(Graphics g, int x, int y, Color arrowColor)\n \n   /** The color the arrow is painted in if disabled and the bottom and\n    * right edges of the button. */\n-  private transient Color shadow = Color.BLACK;\n+  private transient Color shadow = Color.gray;\n \n   /** The color the arrow is painted in if enabled and the bottom and\n    * right edges of the button. */\n@@ -350,30 +350,30 @@ private Polygon getArrow(int direction, int size)\n   {\n     Polygon arrow;\n     double dsize = (double) size;\n-\n+\t\t\n+\t\tint one = (int) (dsize * 1 / 10);\n     int two = (int) (dsize * 2 / 10);\n-    int three = (int) (dsize * 3 / 10);\n-    int five = (int) (dsize * 5 / 10);\n-    int seven = (int) (dsize * 7 / 10);\n+\t\tint five = (int) (dsize * 5 / 10);\n     int eight = (int) (dsize * 8 / 10);\n+\t\t\n     switch (direction)\n       {\n       case NORTH:\n-\tarrow = new Polygon(new int[] { two, five, eight },\n-\t                    new int[] { seven, three, seven }, 3);\n+\tarrow = new Polygon(new int[] { eight, five, one },\n+\t                    new int[] { eight, one, eight }, 3);\n \tbreak;\n       case SOUTH:\n-\tarrow = new Polygon(new int[] { two, five, eight },\n-\t                    new int[] { three, seven, three }, 3);\n+\tarrow = new Polygon(new int[] { eight, five, two },\n+\t                    new int[] { two, eight, two }, 3);\n \tbreak;\n       case EAST:\n       case RIGHT:\n-\tarrow = new Polygon(new int[] { three, seven, three },\n+\tarrow = new Polygon(new int[] { two, eight, two },\n \t                    new int[] { two, five, eight }, 3);\n \tbreak;\n       case WEST:\n       case LEFT:\n-\tarrow = new Polygon(new int[] { seven, three, seven },\n+\tarrow = new Polygon(new int[] { eight, two, eight },\n \t                    new int[] { two, five, eight }, 3);\n \tbreak;\n       default:"}, {"sha": "2b4be67697c5b318bfd55b0734f93194fdf6093f", "filename": "libjava/javax/swing/plaf/basic/BasicButtonListener.java", "status": "modified", "additions": 42, "deletions": 4, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonListener.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -37,6 +37,7 @@\n \n package javax.swing.plaf.basic;\n \n+import java.awt.event.ActionEvent;\n import java.awt.event.FocusEvent;\n import java.awt.event.FocusListener;\n import java.awt.event.InputEvent;\n@@ -46,6 +47,7 @@\n import java.beans.PropertyChangeEvent;\n import java.beans.PropertyChangeListener;\n \n+import javax.swing.AbstractAction;\n import javax.swing.AbstractButton;\n import javax.swing.ButtonModel;\n import javax.swing.JComponent;\n@@ -64,22 +66,58 @@ protected void checkOpacity(AbstractButton b)\n   }\n   public void focusGained(FocusEvent e) \n   {    \n+    if (e.getSource() instanceof AbstractButton)\n+      {\n+        AbstractButton button = (AbstractButton) e.getSource();\n+        if (button.isFocusPainted())\n+          button.repaint();   \n+      }\n   }\n-\n+  \n   public void focusLost(FocusEvent e)\n   {\n     if (e.getSource() instanceof AbstractButton)\n       {\n         AbstractButton button = (AbstractButton) e.getSource();\n         ButtonModel model = button.getModel();\n         model.setArmed(false);\n+\n+        if (button.isFocusPainted())\n+          button.repaint();   \n       }\n   }\n   public void installKeyboardActions(JComponent c)\n   {\n+    c.getActionMap().put(\"pressed\", \n+                         new AbstractAction() \n+                         {\n+                           public void actionPerformed(ActionEvent e)          \n+                           {\n+                             AbstractButton button = (AbstractButton) e.getSource();\n+                             ButtonModel model = button.getModel();\n+                             // It is important that these transitions happen in this order.\n+                             model.setArmed(true);\n+                             model.setPressed(true);\n+                           }\n+                         });\n+    \n+    c.getActionMap().put(\"released\", \n+                         new AbstractAction() \n+                         {\n+                           public void actionPerformed(ActionEvent e)          \n+                           {\n+                             AbstractButton button = (AbstractButton) e.getSource();\n+                             ButtonModel model = button.getModel();\n+                             // It is important that these transitions happen in this order.\n+                             model.setPressed(false);\n+                             model.setArmed(false);\n+                           }\n+                       });    \n   }\n   public void uninstallKeyboardActions(JComponent c)\n   {\n+    c.getActionMap().put(\"pressed\", null);\n+    c.getActionMap().put(\"released\", null);\n   }\n   public void stateChanged(ChangeEvent e)\n   {\n@@ -105,7 +143,7 @@ public void mousePressed(MouseEvent e)\n       {\n         AbstractButton button = (AbstractButton) e.getSource();\n         ButtonModel model = button.getModel();\n-        if ((e.getModifiers() & InputEvent.BUTTON1_MASK) != 0)\n+        if ((e.getModifiersEx() & InputEvent.BUTTON1_DOWN_MASK) != 0)\n           {\n             // It is important that these transitions happen in this order.\n             model.setArmed(true);\n@@ -128,7 +166,7 @@ public void mouseReleased(MouseEvent e)\n       {\n         AbstractButton button = (AbstractButton) e.getSource();\n         ButtonModel model = button.getModel();\n-        if ((e.getModifiers() & InputEvent.BUTTON1_MASK) != 0)\n+        if ((e.getModifiersEx() & InputEvent.BUTTON1_DOWN_MASK) != 0)\n           {\n             // It is important that these transitions happen in this order.\n             model.setPressed(false);\n@@ -156,7 +194,7 @@ public void mouseEntered(MouseEvent e)\n           model.setRollover(true);\n         \n         if (model.isPressed() \n-            && (e.getModifiers() & InputEvent.BUTTON1_MASK) != 0)\n+            && (e.getModifiersEx() & InputEvent.BUTTON1_DOWN_MASK) != 0)\n           model.setArmed(true);\n         else\n           model.setArmed(false);"}, {"sha": "df7ac4269f0c9cb6c0f715cd60bd8c13fdef320e", "filename": "libjava/javax/swing/plaf/basic/BasicButtonUI.java", "status": "modified", "additions": 41, "deletions": 22, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonUI.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -50,6 +50,7 @@\n import javax.swing.AbstractButton;\n import javax.swing.ButtonModel;\n import javax.swing.Icon;\n+import javax.swing.InputMap;\n import javax.swing.JComponent;\n import javax.swing.SwingUtilities;\n import javax.swing.UIDefaults;\n@@ -59,13 +60,21 @@\n \n public class BasicButtonUI extends ButtonUI\n {\n-  /** A constant used to pad out elements in the button's layout and\n-      preferred size calculations. */\n-  int defaultTextIconGap = 4;\n+  /**\n+   * A constant used to pad out elements in the button's layout and\n+   * preferred size calculations.\n+   */\n+  protected int defaultTextIconGap = 4;\n \n-  /** A constant added to the defaultTextIconGap to adjust the text\n-      within this particular button. */\n-  int defaultTextShiftOffset = 0;\n+  /**\n+   * A constant added to the defaultTextIconGap to adjust the text\n+   * within this particular button.\n+   */\n+  protected int defaultTextShiftOffset = 0;\n+\n+  private int textShiftOffset;\n+\n+  private Color focusColor;\n \n   /**\n    * Factory method to create an instance of BasicButtonUI for a given\n@@ -85,14 +94,32 @@ public int getDefaultTextIconGap(AbstractButton b)\n     return defaultTextIconGap;\n   }\n \n+  protected void clearTextShiftOffset()\n+  {\n+    textShiftOffset = 0;\n+  }\n+  \n+  protected int getTextShiftOffset()\n+  {\n+    return textShiftOffset;\n+  }\n+\n+  protected void setTextShiftOffset()\n+  {\n+    textShiftOffset = defaultTextShiftOffset;\n+  }\n+\n   protected void installDefaults(AbstractButton b)\n   {\n     UIDefaults defaults = UIManager.getLookAndFeelDefaults();\n+    focusColor = defaults.getColor(\"Button.focus\");\n     b.setForeground(defaults.getColor(\"Button.foreground\"));\n     b.setBackground(defaults.getColor(\"Button.background\"));\n     b.setMargin(defaults.getInsets(\"Button.margin\"));\n     b.setBorder(defaults.getBorder(\"Button.border\"));\n     b.setIconTextGap(defaults.getInt(\"Button.textIconGap\"));\n+    b.setInputMap(JComponent.WHEN_FOCUSED, \n+                  (InputMap) defaults.get(\"Button.focusInputMap\"));\n     b.setOpaque(true);\n   }\n \n@@ -133,10 +160,12 @@ public void uninstallListeners(AbstractButton b)\n \n   protected void installKeyboardActions(AbstractButton b)\n   {\n+    listener.installKeyboardActions(b);\n   }\n \n   protected void uninstallKeyboardActions(AbstractButton b)\n   {\n+    listener.uninstallKeyboardActions(b);\n   }\n \n   /**\n@@ -271,22 +300,12 @@ protected void paintFocus(Graphics g, AbstractButton b, Rectangle vr,\n   {\n     if (b.hasFocus() && b.isFocusPainted())\n       {\n-        Graphics2D g2 = (Graphics2D) g;\n-        Stroke saved_stroke = g2.getStroke();\n-        Color saved_color = g2.getColor();\n-        float dashes[] = new float[] {1.0f, 1.0f};        \n-        BasicStroke s = new BasicStroke(1.0f, \n-                                        BasicStroke.CAP_SQUARE, \n-                                        BasicStroke.JOIN_MITER,\n-                                        10, dashes, 0.0f);\n-        g2.setStroke(s);\n-        g2.setColor(Color.BLACK);\n-        g2.drawRect(vr.x + 2, \n-                    vr.y + 2, \n-                    vr.width - 4,\n-                    vr.height - 4);\n-        g2.setStroke(saved_stroke);\n-        g2.setColor(saved_color);\n+        Color saved_color = g.getColor();\n+        g.setColor(focusColor);\n+        Rectangle focusRect = ir.union(tr);\n+        g.drawRect(focusRect.x, focusRect.y,\n+                   focusRect.width, focusRect.height);\n+        g.setColor(saved_color);\n       }\n   }\n "}, {"sha": "7101d427dd3d1a95304ddaa17bbbcfdfa5b5d046", "filename": "libjava/javax/swing/plaf/basic/BasicInternalFrameUI.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicInternalFrameUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicInternalFrameUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicInternalFrameUI.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -765,7 +765,7 @@ private void acquireComponentForMouseEvent(MouseEvent me)\n \t                                         lastComponentEntered);\n \t  MouseEvent exited = new MouseEvent(lastComponentEntered,\n \t                                     MouseEvent.MOUSE_EXITED,\n-\t                                     me.getWhen(), me.getModifiers(),\n+\t                                     me.getWhen(), me.getModifiersEx(),\n \t                                     tp.x, tp.y, me.getClickCount(),\n \t                                     me.isPopupTrigger(),\n \t                                     me.getButton());\n@@ -787,7 +787,7 @@ private void acquireComponentForMouseEvent(MouseEvent me)\n \t      MouseEvent entered = new MouseEvent(lastComponentEntered,\n \t                                          MouseEvent.MOUSE_ENTERED,\n \t                                          me.getWhen(),\n-\t                                          me.getModifiers(), cp.x,\n+\t                                          me.getModifiersEx(), cp.x,\n \t                                          cp.y, me.getClickCount(),\n \t                                          me.isPopupTrigger(),\n \t                                          me.getButton());"}, {"sha": "689cd8f57afb7ef22c79ac0bb80fa0692599a5a5", "filename": "libjava/javax/swing/plaf/basic/BasicLookAndFeel.java", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLookAndFeel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -41,6 +41,7 @@\n import java.awt.Color;\n import java.awt.Dimension;\n import java.awt.Font;\n+import java.awt.event.InputEvent;\n import java.awt.event.KeyEvent;\n import java.io.Serializable;\n import java.util.Enumeration;\n@@ -131,6 +132,7 @@ protected void initClassDefaults(UIDefaults defaults)\n       \"SeparatorUI\", \"javax.swing.plaf.basic.BasicSeparatorUI\",\n       \"SliderUI\", \"javax.swing.plaf.basic.BasicSliderUI\",\n       \"SplitPaneUI\", \"javax.swing.plaf.basic.BasicSplitPaneUI\",\n+      \"SpinnerUI\", \"javax.swing.plaf.basic.BasicSpinnerUI\",\n       \"StandardDialogUI\", \"javax.swing.plaf.basic.BasicStandardDialogUI\",\n       \"TabbedPaneUI\", \"javax.swing.plaf.basic.BasicTabbedPaneUI\",\n       \"TableHeaderUI\", \"javax.swing.plaf.basic.BasicTableHeaderUI\",\n@@ -246,6 +248,7 @@ protected void initComponentDefaults(UIDefaults defaults)\n         \"SPACE\",  \"pressed\",\n         \"released SPACE\", \"released\"\n       }),\n+      \"Button.focus\", midPurple,\n       \"Button.font\", new FontUIResource(\"Dialog\", Font.PLAIN, 12),\n       \"Button.foreground\", new ColorUIResource(Color.black),\n       \"Button.highlight\", new ColorUIResource(Color.white),\n@@ -820,7 +823,14 @@ protected void initComponentDefaults(UIDefaults defaults)\n       \"TextField.keyBindings\", new JTextComponent.KeyBinding[] {\n         new JTextComponent.KeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,\n                                                              0),\n-                                      \"notify-field-accept\")},\n+                                      \"notify-field-accept\"),\n+        new JTextComponent.KeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_LEFT,\n+\t\t\t\t\t\t\t     InputEvent.SHIFT_DOWN_MASK),\n+\t\t\t\t\t\t\t     \"selection-backward\"),\n+        new JTextComponent.KeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT,\n+\t\t\t\t\t\t\t     InputEvent.SHIFT_DOWN_MASK),\n+\t\t\t\t\t\t\t     \"selection-forward\"),\n+          },\n       \"TextField.margin\", new InsetsUIResource(0, 0, 0, 0),\n       \"TextField.selectionBackground\", new ColorUIResource(lightPurple),\n       \"TextField.selectionForeground\", new ColorUIResource(Color.black),\n@@ -881,7 +891,7 @@ protected void initComponentDefaults(UIDefaults defaults)\n       \"ToolBar.font\", new FontUIResource(\"Dialog\", Font.PLAIN, 12),\n       \"ToolBar.foreground\", new ColorUIResource(Color.black),\n       \"ToolBar.separatorSize\", new DimensionUIResource(20, 20),\n-      \"ToolTip.background\", new ColorUIResource(Color.white),\n+      \"ToolTip.background\", new ColorUIResource(122, 178, 241),\n       \"ToolTip.border\", new BorderUIResource.LineBorderUIResource(Color.lightGray),\n       \"ToolTip.font\", new FontUIResource(\"SansSerif\", Font.PLAIN, 12),\n       \"ToolTip.foreground\", new ColorUIResource(Color.black),"}, {"sha": "35fb005b9b99557b6672f5290a1ae6da64d956cb", "filename": "libjava/javax/swing/plaf/basic/BasicPopupMenuUI.java", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicPopupMenuUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicPopupMenuUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicPopupMenuUI.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -163,6 +163,7 @@ public void installDefaults()\n     popupMenu.setBorder(defaults.getBorder(\"PopupMenu.border\"));\n     popupMenu.setFont(defaults.getFont(\"PopupMenu.font\"));\n     popupMenu.setForeground(defaults.getColor(\"PopupMenu.foreground\"));\n+    popupMenu.setOpaque(true);\n   }\n \n   /**\n@@ -228,11 +229,11 @@ protected void uninstallKeyboardActions()\n   }\n \n   /**\n-  * This method returns the minimum size of the JPopupMenu.\n+   * This method returns the minimum size of the JPopupMenu.\n    *\n-  * @param c The JComponent to find a size for.\n+   * @param c The JComponent to find a size for.\n    *\n-  * @return The minimum size.\n+   * @return The minimum size.\n    */\n   public Dimension getMinimumSize(JComponent c)\n   {\n@@ -264,13 +265,13 @@ public Dimension getMaximumSize(JComponent c)\n   }\n \n   /**\n-   * Return true if given mouse event is a platform popup trigger,\n-   * and false otherwise\n+   * Return true if given mouse event is a platform popup trigger, and false\n+   * otherwise\n    *\n    * @param e MouseEvent that is to be checked for popup trigger event\n    *\n-   * @return true if given mouse event is a platform popup trigger,\n-   * and false otherwise\n+   * @return true if given mouse event is a platform popup trigger, and false\n+   *         otherwise\n    */\n   public boolean isPopupTrigger(MouseEvent e)\n   {\n@@ -334,25 +335,25 @@ public void popupMenuWillBecomeVisible(PopupMenuEvent event)\n \t  path[0] = popupMenu;\n \t  Component[] comps = popupMenu.getComponents();\n \t  if (comps.length != 0 && comps[0] instanceof MenuElement)\n-\t    path[1] = (MenuElement) comps[0];\n-\t  manager.setSelectedPath(path);\n+\t    {\n+\t      path[1] = (MenuElement) comps[0];\n+\t      manager.setSelectedPath(path);\n+\t    }\n         }\n     }\n   }\n \n   /**\n-   * ComponentListener that listens to Component Events fired by the\n-   * top - level window to which popup menu belongs. If top-level\n-   * window was resized, moved or hidded then popup menu will\n-   * be hidded and selected path of current menu hierarchy will be set\n-   * to null.\n-   *\n+   * ComponentListener that listens to Component Events fired by the top -\n+   * level window to which popup menu belongs. If top-level window was\n+   * resized, moved or hidded then popup menu will be hidded and selected\n+   * path of current menu hierarchy will be set to null.\n    */\n   private class TopWindowListener implements ComponentListener\n   {\n     /**\n-     * This method is invoked when top-level window is resized.\n-     * This method closes current menu hierarchy.\n+     * This method is invoked when top-level window is resized. This method\n+     * closes current menu hierarchy.\n      *\n      * @param e The ComponentEvent\n      */\n@@ -363,8 +364,8 @@ public void componentResized(ComponentEvent e)\n     }\n \n     /**\n-     * This method is invoked when top-level window is moved.\n-     * This method closes current menu hierarchy.\n+     * This method is invoked when top-level window is moved. This method\n+     * closes current menu hierarchy.\n      *\n      * @param e The ComponentEvent\n      */\n@@ -375,8 +376,8 @@ public void componentMoved(ComponentEvent e)\n     }\n \n     /**\n-     * This method is invoked when top-level window is shown\n-     * This method does nothing by default.\n+     * This method is invoked when top-level window is shown This method does\n+     * nothing by default.\n      *\n      * @param e The ComponentEvent\n      */\n@@ -387,8 +388,8 @@ public void componentShown(ComponentEvent e)\n     }\n \n     /**\n-     * This method is invoked when top-level window is hidden\n-     * This method closes current menu hierarchy.\n+     * This method is invoked when top-level window is hidden This method\n+     * closes current menu hierarchy.\n      *\n      * @param e The ComponentEvent\n      */"}, {"sha": "b5c95cb68c3b92e42838012e476bb9cfa8ce4e50", "filename": "libjava/javax/swing/plaf/basic/BasicSliderUI.java", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSliderUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSliderUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSliderUI.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f", "patch": "@@ -1226,15 +1226,17 @@ protected int getWidthOfWidestLabel()\n     if (slider.getLabelTable() == null)\n       return 0;\n \n+    Dimension pref;\n     for (Enumeration list = slider.getLabelTable().elements();\n          list.hasMoreElements();)\n       {\n \tObject comp = list.nextElement();\n \tif (! (comp instanceof Component))\n \t  continue;\n \tlabel = (Component) comp;\n-\tif (label.getWidth() > widest)\n-\t  widest = label.getWidth();\n+\tpref = label.getPreferredSize();\n+\tif (pref != null && pref.width > widest)\n+\t  widest = pref.width;\n       }\n     return widest;\n   }\n@@ -1252,16 +1254,17 @@ protected int getHeightOfTallestLabel()\n \n     if (slider.getLabelTable() == null)\n       return 0;\n-\n+    Dimension pref;\n     for (Enumeration list = slider.getLabelTable().elements();\n          list.hasMoreElements();)\n       {\n \tObject comp = list.nextElement();\n \tif (! (comp instanceof Component))\n \t  continue;\n \tlabel = (Component) comp;\n-\tif (label.getHeight() > tallest)\n-\t  tallest = label.getHeight();\n+\tpref = label.getPreferredSize();\n+\tif (pref != null && pref.height > tallest)\n+\t  tallest = pref.height;\n       }\n     return tallest;\n   }"}, {"sha": "2ccf2fa5e08dd380412dc130a4b4d07a5d1a93e0", "filename": "libjava/javax/swing/plaf/basic/BasicTextUI.java", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTextUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTextUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTextUI.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "1dc6423ee7697da3574175f2505d09b4eb7d2b84", "filename": "libjava/javax/swing/plaf/basic/BasicToggleButtonUI.java", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicToggleButtonUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicToggleButtonUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicToggleButtonUI.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "99e447501a50c045818a1767bb88392b2fc7650d", "filename": "libjava/javax/swing/plaf/basic/BasicToolBarUI.java", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicToolBarUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicToolBarUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicToolBarUI.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "ef829886147d0e6a4c53821db2aab1be3819158c", "filename": "libjava/javax/swing/table/DefaultTableCellRenderer.java", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "d7a3c351938779936e9b3b3e013db6afcbc4173a", "filename": "libjava/javax/swing/table/DefaultTableColumnModel.java", "status": "modified", "additions": 145, "deletions": 113, "changes": 258, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableColumnModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableColumnModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableColumnModel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "8e111303c34f8ef74782859e2c25762428a8ac8b", "filename": "libjava/javax/swing/table/DefaultTableModel.java", "status": "modified", "additions": 384, "deletions": 442, "changes": 826, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "9e55647f42f167484b95c862bdc512b5a4ff30f9", "filename": "libjava/javax/swing/table/JTableHeader.java", "status": "modified", "additions": 521, "deletions": 11, "changes": 532, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FJTableHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FJTableHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FJTableHeader.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "02ef7f8009e376f860cf3b09c48098968cba5666", "filename": "libjava/javax/swing/table/TableColumn.java", "status": "modified", "additions": 39, "deletions": 49, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumn.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumn.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumn.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "a7c8c907e60fd3971a983da1086f73a11e027d52", "filename": "libjava/javax/swing/text/AbstractDocument.java", "status": "modified", "additions": 246, "deletions": 77, "changes": 323, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FAbstractDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FAbstractDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FAbstractDocument.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "3f38a4cd249744738a34ea72a9bba1c64bebe27b", "filename": "libjava/javax/swing/text/AttributeSet.java", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FAttributeSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FAttributeSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FAttributeSet.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "516f0726ba039ea259ba445944e250fd28459e31", "filename": "libjava/javax/swing/text/DefaultCaret.java", "status": "modified", "additions": 105, "deletions": 29, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultCaret.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultCaret.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultCaret.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "03d4ef3040ee4bd2f6e557d2637eadae7cd9fae5", "filename": "libjava/javax/swing/text/DefaultEditorKit.java", "status": "modified", "additions": 233, "deletions": 10, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultEditorKit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultEditorKit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultEditorKit.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "234fcad60ff4de899cf6bea7a87ec4c35c85a5c2", "filename": "libjava/javax/swing/text/DefaultHighlighter.java", "status": "modified", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultHighlighter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultHighlighter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultHighlighter.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "06514b73f14ce535c6d3fe0e02140763ee25c07e", "filename": "libjava/javax/swing/text/FieldView.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FFieldView.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FFieldView.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FFieldView.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "ea69f5d16d9539783898f7ae7d155dd33a6248ec", "filename": "libjava/javax/swing/text/JTextComponent.java", "status": "modified", "additions": 572, "deletions": 12, "changes": 584, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "3dd8fe448420255c23939c28a489b04e3a02ced1", "filename": "libjava/javax/swing/text/PlainView.java", "status": "modified", "additions": 85, "deletions": 15, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FPlainView.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FPlainView.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FPlainView.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "218768e05e2b64d78d0519e65e7c68f77ea65005", "filename": "libjava/javax/swing/text/Segment.java", "status": "modified", "additions": 96, "deletions": 47, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FSegment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FSegment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FSegment.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "029eed9c5e4065f90a38dd7c2d1caad90fc4ebd6", "filename": "libjava/javax/swing/text/TextAction.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FTextAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FTextAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FTextAction.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "730753a342bce900a4e8d91a6cefca59b705a1cb", "filename": "libjava/javax/swing/text/View.java", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FView.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjavax%2Fswing%2Ftext%2FView.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FView.java?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "c10b945ab6b8e296dcf67cf66395c7bef06322c8", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "a79ed5eb093c880f92d796418463fa868987e160", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c", "status": "modified", "additions": 105, "deletions": 12, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "e4d223c543da1f355cb6e563686f0b08eb13e8c2", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c", "status": "modified", "additions": 17, "deletions": 49, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "f58c289aa402b87fe2af6e43d3b6a9c651558920", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c", "status": "modified", "additions": 51, "deletions": 36, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkPixbufDecoder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkPixbufDecoder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkPixbufDecoder.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "08d38b5871d27165f36787e879a426c908a78042", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "4d5c8114cd73bea4dbf468fec3f2844d8383160e", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "128443121b2e25c1079cd9483be2d12fbc4fc0f6", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c", "status": "modified", "additions": 50, "deletions": 137, "changes": 187, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "8aaf0d26282c193fbdf58b0f05ec72c0e8878a0f", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c", "status": "modified", "additions": 92, "deletions": 158, "changes": 250, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "7cf405df9025fd24798c6143ad064d0da39ca5a9", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "594fcce4165e4556f73401a5bb52ca481a576beb", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkFileDialogPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkFileDialogPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkFileDialogPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "99107a1282c52cbc897681a7c62af726a18e76ea", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c", "status": "modified", "additions": 57, "deletions": 24, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "53c7351e6ecb754920f0bfb2690bdafd60744648", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuBarPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuBarPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuBarPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "5d5de6780a0b7c52343bc2a6c383ed9eaea9f5ff", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuItemPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuItemPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuItemPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "1ffe61b0c527cbc582bb1ff1c1d6076884220a0a", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c", "status": "modified", "additions": 18, "deletions": 22, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "771f2b81d75df6ee52f26451754d09aef539295c", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "2a6666a0d83e21f51c95380b78fbcbd985911d93", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "508893168b13bd676963c659e592effa7bc2487f", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c", "status": "modified", "additions": 116, "deletions": 1, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "ee79424475c10d9b3084cd88198f6a10e83636df", "filename": "libjava/jni/gtk-peer/gthread-jni.c", "status": "modified", "additions": 2369, "deletions": 284, "changes": 2653, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "90a252fa5c0ba5f3f3c51dbaf29946c6ada06082", "filename": "libjava/jni/gtk-peer/gthread-jni.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.h?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}, {"sha": "59d49cedadc232a619117c19d951629929fc9c13", "filename": "libjava/jni/gtk-peer/gtkpeer.h", "status": "modified", "additions": 36, "deletions": 7, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57579172585eae4fd6f57c0dbd55ea998ddfb63f/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h?ref=57579172585eae4fd6f57c0dbd55ea998ddfb63f"}]}