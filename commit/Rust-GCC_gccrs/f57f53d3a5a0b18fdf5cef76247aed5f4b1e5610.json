{"sha": "f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU3ZjUzZDNhNWEwYjE4ZmRmNWNlZjc2MjQ3YWVkNWY0YjFlNTYxMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-06-13T07:34:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-06-13T07:34:45Z"}, "message": "re PR middle-end/64516 (arm: wrong unaligned load generated)\n\n2016-06-13  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/64516\n\t* fold-const.c (fold_unary_loc): Preserve alignment when\n\tfolding a VIEW_CONVERT_EXPR into a MEM_REF.\n\n\t* gcc.dg/align-3.c: New testcase.\n\nFrom-SVN: r237355", "tree": {"sha": "67f378aa91a113aa2504bf2746b17d80db874e88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67f378aa91a113aa2504bf2746b17d80db874e88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f423253bd71fe25fc97e9aef002e33dd1619f0d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f423253bd71fe25fc97e9aef002e33dd1619f0d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f423253bd71fe25fc97e9aef002e33dd1619f0d4"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "690bd02469d2a51ba4a393c0ff1943043f3ce4f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610", "patch": "@@ -1,3 +1,9 @@\n+2016-06-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/64516\n+\t* fold-const.c (fold_unary_loc): Preserve alignment when\n+\tfolding a VIEW_CONVERT_EXPR into a MEM_REF.\n+\n 2016-06-13  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/71458"}, {"sha": "1a464ec8366126939b3e4fa65c2b5b701eaddd41", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610", "patch": "@@ -7975,6 +7975,8 @@ fold_unary_loc (location_t loc, enum tree_code code, tree type, tree op0)\n     case VIEW_CONVERT_EXPR:\n       if (TREE_CODE (op0) == MEM_REF)\n         {\n+\t  if (TYPE_ALIGN (TREE_TYPE (op0)) != TYPE_ALIGN (type))\n+\t    type = build_aligned_type (type, TYPE_ALIGN (TREE_TYPE (op0)));\n \t  tem = fold_build2_loc (loc, MEM_REF, type,\n \t\t\t\t TREE_OPERAND (op0, 0), TREE_OPERAND (op0, 1));\n \t  REF_REVERSE_STORAGE_ORDER (tem) = REF_REVERSE_STORAGE_ORDER (op0);"}, {"sha": "a596a54e2750335f8c3310250850d3dc744ce373", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610", "patch": "@@ -1,3 +1,8 @@\n+2016-06-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/64516\n+\t* gcc.dg/align-3.c: New testcase.\n+\n 2016-06-13  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.target/i386/pr71458.c: New test."}, {"sha": "5c97d5ac3cc3eee7d680832061faa7792210f664", "filename": "gcc/testsuite/gcc.dg/align-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610/gcc%2Ftestsuite%2Fgcc.dg%2Falign-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610/gcc%2Ftestsuite%2Fgcc.dg%2Falign-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falign-3.c?ref=f57f53d3a5a0b18fdf5cef76247aed5f4b1e5610", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-rtl-expand\" } */\n+\n+typedef struct { char a[2]; } __attribute__((__packed__)) TU2;\n+unsigned short get16_unaligned(const void *p) {\n+    unsigned short v;\n+    *(TU2 *)(void *)(&v) = *(const TU2 *)p;\n+    return v;\n+}\n+\n+/* { dg-final { scan-rtl-dump \"MEM\\[^\\n\\r\\]*A8\\\\\\]\" \"expand\" } } */"}]}