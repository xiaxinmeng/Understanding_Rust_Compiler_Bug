{"sha": "d09c0e9bfb662a3edb7beb1771bfc2f7983886b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA5YzBlOWJmYjY2MmEzZWRiN2JlYjE3NzFiZmMyZjc5ODM4ODZiOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-10-23T06:32:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-10-23T06:32:23Z"}, "message": "gimple-pretty-print.c (dump_ssaname_info): Always print \"# \" before the info, not after it.\n\n\t* gimple-pretty-print.c (dump_ssaname_info): Always print \"# \" before\n\tthe info, not after it.\n\t(gump_gimple_phi): Add COMMENT argument, if true, print \"# \" after\n\tdump_ssaname_info call.\n\t(pp_gimple_stmt_1): Adjust caller.\n\t(dump_phi_nodes): Likewise.  Don't print \"# \" here.\n\nFrom-SVN: r203947", "tree": {"sha": "0b7db1e166c65d7c4a1b20df4558a7a5ea22fdce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b7db1e166c65d7c4a1b20df4558a7a5ea22fdce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d09c0e9bfb662a3edb7beb1771bfc2f7983886b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d09c0e9bfb662a3edb7beb1771bfc2f7983886b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d09c0e9bfb662a3edb7beb1771bfc2f7983886b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d09c0e9bfb662a3edb7beb1771bfc2f7983886b8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d54e576483fe7a746ec6a9f5c4a42e743f27d13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d54e576483fe7a746ec6a9f5c4a42e743f27d13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d54e576483fe7a746ec6a9f5c4a42e743f27d13"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "f66d014497663f467c2a7c9369e1e9067abac9be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d09c0e9bfb662a3edb7beb1771bfc2f7983886b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d09c0e9bfb662a3edb7beb1771bfc2f7983886b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d09c0e9bfb662a3edb7beb1771bfc2f7983886b8", "patch": "@@ -1,3 +1,12 @@\n+2013-10-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gimple-pretty-print.c (dump_ssaname_info): Always print \"# \" before\n+\tthe info, not after it.\n+\t(gump_gimple_phi): Add COMMENT argument, if true, print \"# \" after\n+\tdump_ssaname_info call.\n+\t(pp_gimple_stmt_1): Adjust caller.\n+\t(dump_phi_nodes): Likewise.  Don't print \"# \" here.\n+\n 2013-10-22  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.h (TARGET_MISALIGNED_MOVE_STRING_PROLOGUES_EPILOGUES): New tuning flag."}, {"sha": "439851b5831c0f77a25441ca4911eeaa4c014fcd", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d09c0e9bfb662a3edb7beb1771bfc2f7983886b8/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d09c0e9bfb662a3edb7beb1771bfc2f7983886b8/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=d09c0e9bfb662a3edb7beb1771bfc2f7983886b8", "patch": "@@ -1714,15 +1714,14 @@ dump_ssaname_info (pretty_printer *buffer, tree node, int spc)\n     {\n       unsigned int align, misalign;\n       struct ptr_info_def *pi = SSA_NAME_PTR_INFO (node);\n-      pp_string (buffer, \"PT = \");\n+      pp_string (buffer, \"# PT = \");\n       pp_points_to_solution (buffer, &pi->pt);\n       newline_and_indent (buffer, spc);\n       if (get_ptr_info_alignment (pi, &align, &misalign))\n \t{\n \t  pp_printf (buffer, \"# ALIGN = %u, MISALIGN = %u\", align, misalign);\n \t  newline_and_indent (buffer, spc);\n \t}\n-      pp_string (buffer, \"# \");\n     }\n \n   if (!POINTER_TYPE_P (TREE_TYPE (node))\n@@ -1732,7 +1731,7 @@ dump_ssaname_info (pretty_printer *buffer, tree node, int spc)\n       value_range_type range_type = get_range_info (node, &min, &max);\n \n       if (range_type == VR_VARYING)\n-\tpp_printf (buffer, \"# RANGE  VR_VARYING\");\n+\tpp_printf (buffer, \"# RANGE VR_VARYING\");\n       else if (range_type == VR_RANGE || range_type == VR_ANTI_RANGE)\n \t{\n \t  pp_printf (buffer, \"# RANGE \");\n@@ -1749,17 +1748,21 @@ dump_ssaname_info (pretty_printer *buffer, tree node, int spc)\n \n /* Dump a PHI node PHI.  BUFFER, SPC and FLAGS are as in pp_gimple_stmt_1.\n    The caller is responsible for calling pp_flush on BUFFER to finalize\n-   pretty printer.  */\n+   pretty printer.  If COMMENT is true, print this after #.  */\n \n static void\n-dump_gimple_phi (pretty_printer *buffer, gimple phi, int spc, int flags)\n+dump_gimple_phi (pretty_printer *buffer, gimple phi, int spc, bool comment,\n+\t\t int flags)\n {\n   size_t i;\n   tree lhs = gimple_phi_result (phi);\n \n   if (flags & TDF_ALIAS)\n     dump_ssaname_info (buffer, lhs, spc);\n \n+  if (comment)\n+    pp_string (buffer, \"# \");\n+\n   if (flags & TDF_RAW)\n     dump_gimple_fmt (buffer, spc, flags, \"%G <%T, \", phi,\n \t\t     gimple_phi_result (phi));\n@@ -2095,7 +2098,7 @@ pp_gimple_stmt_1 (pretty_printer *buffer, gimple gs, int spc, int flags)\n       break;\n \n     case GIMPLE_PHI:\n-      dump_gimple_phi (buffer, gs, spc, flags);\n+      dump_gimple_phi (buffer, gs, spc, false, flags);\n       break;\n \n     case GIMPLE_OMP_PARALLEL:\n@@ -2271,8 +2274,7 @@ dump_phi_nodes (pretty_printer *buffer, basic_block bb, int indent, int flags)\n       if (!virtual_operand_p (gimple_phi_result (phi)) || (flags & TDF_VOPS))\n         {\n           INDENT (indent);\n-          pp_string (buffer, \"# \");\n-          dump_gimple_phi (buffer, phi, indent, flags);\n+\t  dump_gimple_phi (buffer, phi, indent, true, flags);\n           pp_newline (buffer);\n         }\n     }"}]}