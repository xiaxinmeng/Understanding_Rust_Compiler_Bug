{"sha": "564efbf40077c25623cdd6ce2f911c56b5b08f6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY0ZWZiZjQwMDc3YzI1NjIzY2RkNmNlMmY5MTFjNTZiNWIwOGY2Yw==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-09-06T00:52:18Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-09-06T07:45:06Z"}, "message": "Fix PR tree-optimization/63184: add simplification of (& + A) != (& + B)\n\nThese two testcases have been failing since GCC 5 but things\nhave improved such that adding a simplification to match.pd\nfor this case is easier than before.\nIn the end we have the following IR:\n....\n  _5 = &a[1] + _4;\n  _7 = &a + _13;\n  if (_5 != _7)\n\nSo we can fold the _5 != _7 into:\n(&a[1] - &a) + _4 != _13\n\nThe subtraction is folded into constant by ptr_difference_const.\nIn this case, the full expression gets folded into a constant\nand we are able to remove the if statement.\n\nOK? Bootstrapped and tested on aarch64-linux-gnu with no regressions.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/63184\n\t* match.pd: Add simplification of pointer_diff of two pointer_plus\n\twith addr_expr in the first operand of each pointer_plus.\n\tAdd simplificatoin of ne/eq of two pointer_plus with addr_expr\n\tin the first operand of each pointer_plus.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/63184\n\t* c-c++-common/pr19807-2.c: Enable for all targets and remove the xfail.\n\t* c-c++-common/pr19807-3.c: Likewise.", "tree": {"sha": "8bf0eedcb74c2c09f50af6cac6a39fff122e7e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bf0eedcb74c2c09f50af6cac6a39fff122e7e42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/564efbf40077c25623cdd6ce2f911c56b5b08f6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564efbf40077c25623cdd6ce2f911c56b5b08f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/564efbf40077c25623cdd6ce2f911c56b5b08f6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564efbf40077c25623cdd6ce2f911c56b5b08f6c/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "637dfcf43cfd2f01f4757abfd84d376d4011b0b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637dfcf43cfd2f01f4757abfd84d376d4011b0b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637dfcf43cfd2f01f4757abfd84d376d4011b0b2"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "cc7809dfe0fa80e5707c309d711ce9b9701e8727", "filename": "gcc/match.pd", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564efbf40077c25623cdd6ce2f911c56b5b08f6c/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564efbf40077c25623cdd6ce2f911c56b5b08f6c/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=564efbf40077c25623cdd6ce2f911c56b5b08f6c", "patch": "@@ -2063,6 +2063,21 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n    (if (ptr_difference_const (@0, @1, &diff))\n     { build_int_cst_type (type, diff); }))))\n \n+/* (&a+b) - (&a[1] + c) -> sizeof(a[0]) + (b - c) */\n+(simplify\n+ (pointer_diff (pointer_plus ADDR_EXPR@0 @1) (pointer_plus ADDR_EXPR@2 @3))\n+ (with { poly_int64 diff; }\n+   (if (ptr_difference_const (@0, @2, &diff))\n+    (plus { build_int_cst_type (type, diff); } (convert (minus @1 @3))))))\n+\n+/* (&a+b) !=/== (&a[1] + c) ->  sizeof(a[0]) + b !=/== c */\n+(for neeq (ne eq)\n+ (simplify\n+  (neeq (pointer_plus ADDR_EXPR@0 @1) (pointer_plus ADDR_EXPR@2 @3))\n+   (with { poly_int64 diff; tree inner_type = TREE_TYPE (@1);}\n+    (if (ptr_difference_const (@0, @2, &diff))\n+     (neeq (plus { build_int_cst_type (inner_type, diff); } @1) @3)))))\n+\n /* Canonicalize (T *)(ptr - ptr-cst) to &MEM[ptr + -ptr-cst].  */\n (simplify\n  (convert (pointer_diff @0 INTEGER_CST@1))"}, {"sha": "529b9c973223825e829d4fc7b7bbbe875ffb93a0", "filename": "gcc/testsuite/c-c++-common/pr19807-2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564efbf40077c25623cdd6ce2f911c56b5b08f6c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr19807-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564efbf40077c25623cdd6ce2f911c56b5b08f6c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr19807-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr19807-2.c?ref=564efbf40077c25623cdd6ce2f911c56b5b08f6c", "patch": "@@ -1,5 +1,4 @@\n-/* Some targets can optimize this on RTL.  */\n-/* { dg-do link { target { x86_64-*-* i?86-*-* } } } */\n+/* { dg-do link } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n \n extern void link_error(void);\n@@ -12,4 +11,4 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-not \"link_error\" \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-not \"link_error\" \"optimized\" } } */"}, {"sha": "31c88f3b8506f35280a370ff568c718dc995b444", "filename": "gcc/testsuite/c-c++-common/pr19807-3.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564efbf40077c25623cdd6ce2f911c56b5b08f6c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr19807-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564efbf40077c25623cdd6ce2f911c56b5b08f6c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr19807-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr19807-3.c?ref=564efbf40077c25623cdd6ce2f911c56b5b08f6c", "patch": "@@ -1,5 +1,4 @@\n-/* Some targets can optimize this on RTL.  */\n-/* { dg-do link { target { x86_64-*-* i?86-*-* } } } */\n+/* { dg-do link } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n \n extern void link_error(void);\n@@ -12,4 +11,4 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-not \"link_error\" \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-not \"link_error\" \"optimized\" } } */"}]}