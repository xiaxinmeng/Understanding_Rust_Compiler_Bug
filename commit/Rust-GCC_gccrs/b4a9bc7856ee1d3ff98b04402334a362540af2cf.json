{"sha": "b4a9bc7856ee1d3ff98b04402334a362540af2cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRhOWJjNzg1NmVlMWQzZmY5OGIwNDQwMjMzNGEzNjI1NDBhZjJjZg==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2021-07-17T23:12:18Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2021-07-28T04:24:25Z"}, "message": "Bind(c): Fix bugs in CFI_section\n\nCFI_section was incorrectly adjusting the base pointer for the result\narray twice in different ways.  It was also overwriting the array\ndimension info in the result descriptor before computing the base\naddress offset from the source descriptor, which caused problems if\nthe two descriptors are the same.  This patch fixes both problems and\nmakes the code simpler, too.\n\nA consequence of this patch is that the result array is now 0-based in\nall dimensions instead of starting at the numbering to match the first\nelement of the source array.  The Fortran standard only specifies the\nshape of the result array, not its lower bounds, so this is permitted\nand probably less confusing for users as well as implementors.\n\n2021-07-17  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tPR libfortran/101310\n\nlibgfortran/\n\t* runtime/ISO_Fortran_binding.c (CFI_section): Fix the base\n\taddress computation and simplify the code.\n\ngcc/testsuite/\n\t* gfortran.dg/ISO_Fortran_binding_1.c (section_c): Remove\n\tincorrect assertions.", "tree": {"sha": "deee059989f7a38c1199a3d63cfa3c1bb4530055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/deee059989f7a38c1199a3d63cfa3c1bb4530055"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4a9bc7856ee1d3ff98b04402334a362540af2cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4a9bc7856ee1d3ff98b04402334a362540af2cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4a9bc7856ee1d3ff98b04402334a362540af2cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4a9bc7856ee1d3ff98b04402334a362540af2cf/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3b350f1799a1c0f9e2ece5b817a537fe42f0d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b350f1799a1c0f9e2ece5b817a537fe42f0d2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b350f1799a1c0f9e2ece5b817a537fe42f0d2d"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "bb56ca0e04bc22fffbd102548f24346d0efa345f", "filename": "gcc/testsuite/gfortran.dg/ISO_Fortran_binding_1.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4a9bc7856ee1d3ff98b04402334a362540af2cf/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4a9bc7856ee1d3ff98b04402334a362540af2cf/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_1.c?ref=b4a9bc7856ee1d3ff98b04402334a362540af2cf", "patch": "@@ -142,11 +142,12 @@ float section_c(int *std_case, CFI_cdesc_t * source, int *low, int *str)\n \t\t\t  CFI_type_float, 0, 1, NULL);\n       if (ind) return -1.0;\n       ind = CFI_section((CFI_cdesc_t *)&section, source, lower, NULL, strides);\n-      assert (section.dim[0].lower_bound == lower[0]);\n       if (ind) return -2.0;\n \n       /* Sum over the section  */\n-      for (idx[0] = lower[0]; idx[0] < section.dim[0].extent + lower[0]; idx[0]++)\n+      for (idx[0] = section.dim[0].lower_bound;\n+\t   idx[0] < section.dim[0].extent + section.dim[0].lower_bound;\n+\t   idx[0]++)\n         ans += *(float*)CFI_address ((CFI_cdesc_t*)&section, idx);\n       return ans;\n     }\n@@ -164,11 +165,12 @@ float section_c(int *std_case, CFI_cdesc_t * source, int *low, int *str)\n       ind = CFI_section((CFI_cdesc_t *)&section, source,\n \t\t\tlower, upper, strides);\n       assert (section.rank == 1);\n-      assert (section.dim[0].lower_bound == lower[0]);\n       if (ind) return -2.0;\n \n       /* Sum over the section  */\n-      for (idx[0] = lower[0]; idx[0] < section.dim[0].extent + lower[0]; idx[0]++)\n+      for (idx[0] = section.dim[0].lower_bound;\n+\t   idx[0] < section.dim[0].extent + section.dim[0].lower_bound;\n+\t   idx[0]++)\n         ans += *(float*)CFI_address ((CFI_cdesc_t*)&section, idx);\n       return ans;\n     }"}, {"sha": "2830c4575fea52f073b1b7c129bced16fa41ec03", "filename": "libgfortran/runtime/ISO_Fortran_binding.c", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4a9bc7856ee1d3ff98b04402334a362540af2cf/libgfortran%2Fruntime%2FISO_Fortran_binding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4a9bc7856ee1d3ff98b04402334a362540af2cf/libgfortran%2Fruntime%2FISO_Fortran_binding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2FISO_Fortran_binding.c?ref=b4a9bc7856ee1d3ff98b04402334a362540af2cf", "patch": "@@ -689,29 +689,22 @@ int CFI_section (CFI_cdesc_t *result, const CFI_cdesc_t *source,\n \t}\n     }\n \n+  /* Set the base address.  We have to compute this first in the case\n+     where source == result, before we overwrite the dimension data.  */\n+  result->base_addr = CFI_address (source, lower);\n+\n   /* Set the appropriate dimension information that gives us access to the\n    * data. */\n-  int aux = 0;\n-  for (int i = 0; i < source->rank; i++)\n+  for (int i = 0, o = 0; i < source->rank; i++)\n     {\n       if (stride[i] == 0)\n-\t{\n-\t  aux++;\n-\t  /* Adjust 'lower' for the base address offset.  */\n-\t  lower[i] = lower[i] - source->dim[i].lower_bound;\n-\t  continue;\n-\t}\n-      int idx = i - aux;\n-      result->dim[idx].lower_bound = lower[i];\n-      result->dim[idx].extent = 1 + (upper[i] - lower[i])/stride[i];\n-      result->dim[idx].sm = stride[i] * source->dim[i].sm;\n-      /* Adjust 'lower' for the base address offset.  */\n-      lower[idx] = lower[idx] - source->dim[i].lower_bound;\n+\tcontinue;\n+      result->dim[o].lower_bound = 0;\n+      result->dim[o].extent = 1 + (upper[i] - lower[i])/stride[i];\n+      result->dim[o].sm = stride[i] * source->dim[i].sm;\n+      o++;\n     }\n \n-  /* Set the base address. */\n-  result->base_addr = CFI_address (source, lower);\n-\n   return CFI_SUCCESS;\n }\n "}]}