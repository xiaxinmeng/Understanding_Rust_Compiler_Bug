{"sha": "c3499f009df3741f02d8328c9ea9ad95b6bb2e39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM0OTlmMDA5ZGYzNzQxZjAyZDgzMjhjOWVhOWFkOTViNmJiMmUzOQ==", "commit": {"author": {"name": "Gavin Koch", "email": "gavin@cygnus.com", "date": "1998-01-27T17:22:43Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-01-27T17:22:43Z"}, "message": "Patch from Gavin to fix mips16 prologue/epilogue bugs.\n\n\t* mips/mips.c (mips_expand_prologue,mips_expand_epilogue):\n\tChange mode of registers used to add/sub from\n\thard_frame_pointer_rtx from word_mode to Pmode.\n\nFrom-SVN: r17511", "tree": {"sha": "dd33e073f8490143970ae270c8aca6c61a93b4b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd33e073f8490143970ae270c8aca6c61a93b4b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3499f009df3741f02d8328c9ea9ad95b6bb2e39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3499f009df3741f02d8328c9ea9ad95b6bb2e39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3499f009df3741f02d8328c9ea9ad95b6bb2e39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3499f009df3741f02d8328c9ea9ad95b6bb2e39/comments", "author": null, "committer": null, "parents": [{"sha": "56841f01ec38e019698d4b1d54367e79d313916a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56841f01ec38e019698d4b1d54367e79d313916a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56841f01ec38e019698d4b1d54367e79d313916a"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "41e441855fbceeaa77cb684310338fcfc111c266", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3499f009df3741f02d8328c9ea9ad95b6bb2e39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3499f009df3741f02d8328c9ea9ad95b6bb2e39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3499f009df3741f02d8328c9ea9ad95b6bb2e39", "patch": "@@ -1,3 +1,9 @@\n+Tue Jan 27 17:21:09 1998  Gavin Koch  (gavin@cygnus.com)\n+\n+\t* mips/mips.c (mips_expand_prologue,mips_expand_epilogue):\n+\tChange mode of registers used to add/sub from \n+\thard_frame_pointer_rtx from word_mode to Pmode.\n+\n Tue Jan 27 11:02:04 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* v850.h (ASM_OUTPUT_ALIGNED_BSS): Use\n@@ -174,7 +180,7 @@ Fri Jan 23 00:27:23 1998  John Carr  <jfc@mit.edu>\n \t* toplev.c (get_run_time): Call sysconf(_SC_CLK_TCK), when available,\n \tto get clock rate.\n \n-Fri Jan 23 00:19:36 1998  Gavin Kock  (gavin@cygnus.com)\n+Fri Jan 23 00:19:36 1998  Gavin Koch  (gavin@cygnus.com)\n \n \t* mips.md (muldi3_internal2): Reverse test for TARGET_MIPS16.\n "}, {"sha": "53beb4146b5aeed0a551e704c358e36b30c49e7f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3499f009df3741f02d8328c9ea9ad95b6bb2e39/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3499f009df3741f02d8328c9ea9ad95b6bb2e39/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=c3499f009df3741f02d8328c9ea9ad95b6bb2e39", "patch": "@@ -6502,7 +6502,7 @@ mips_expand_prologue ()\n \t  if (!frame_pointer_needed)\n \t    abort ();\n \n-\t  reg_rtx = gen_rtx (REG, word_mode, 3);\n+\t  reg_rtx = gen_rtx (REG, Pmode, 3);\n   \t  emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx);\n   \t  emit_move_insn (reg_rtx, tsize_rtx);\n   \t  if (TARGET_64BIT)\n@@ -6722,7 +6722,7 @@ mips_expand_epilogue ()\n                  add a register to $sp.  */\n \t      if (orig_tsize > 32767)\n \t\t{\n-\t\t  rtx g6_rtx = gen_rtx (REG, word_mode, GP_REG_FIRST + 6);\n+\t\t  rtx g6_rtx = gen_rtx (REG, Pmode, GP_REG_FIRST + 6);\n \n \t\t  emit_move_insn (g6_rtx, GEN_INT (tsize));\n \t\t  if (TARGET_LONG64)"}]}