{"sha": "3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "node_id": "C_kwDOANBUbNoAKDNhNzA1NTExNDhlZGQxNzc0ZDE0YmRjZTlhMmRkNGVhOWE5NTliMWY", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-14T13:56:12Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-15T13:42:04Z"}, "message": "RISC-V: Add vnmsac rv64 C api tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_m_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_m_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_m_rv64-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_mu_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_mu_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_mu_rv64-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_rv64-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_tu_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_tu_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_tu_rv64-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_tum_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_tum_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_tum_rv64-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_tumu_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_tumu_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsac_vx_tumu_rv64-3.c: New test.", "tree": {"sha": "acb8da7467032564bf19b5ffbbd0c98c0dcab372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acb8da7467032564bf19b5ffbbd0c98c0dcab372"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "496ae797c204bcaa8b18c7b9dc4bb60a6c941ebf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496ae797c204bcaa8b18c7b9dc4bb60a6c941ebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/496ae797c204bcaa8b18c7b9dc4bb60a6c941ebf"}], "stats": {"total": 5256, "additions": 5256, "deletions": 0}, "files": [{"sha": "f1832ad689c236679270d654119fa9393ea3f387", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_m_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_m_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_m_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_m_rv64-1.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_m(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_m(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_m(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_m(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_m(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_m(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_m(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_m(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_m(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_m(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_m(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_m(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_m(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_m(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_m(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_m(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_m(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_m(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_m(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_m(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_m(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_m(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_m(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_m(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_m(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_m(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_m(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_m(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_m(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_m(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_m(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_m(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_m(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_m(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_m(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_m(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_m(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_m(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_m(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_m(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_m(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_m(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_m(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_m(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_m(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "2742134ed2e277a410449301554976db83fc9457", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_m_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_m_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_m_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_m_rv64-2.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_m(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_m(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_m(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_m(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_m(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_m(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_m(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_m(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_m(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_m(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_m(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_m(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_m(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_m(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_m(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_m(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_m(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_m(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_m(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_m(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_m(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_m(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_m(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_m(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_m(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_m(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_m(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_m(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_m(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_m(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_m(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_m(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_m(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_m(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_m(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_m(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_m(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_m(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_m(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_m(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_m(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_m(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_m(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_m(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_m(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "fd0cff81e0035afe1c53b09cdd643646ef650422", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_m_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_m_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_m_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_m_rv64-3.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_m(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_m(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_m(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_m(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_m(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_m(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_m(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_m(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_m(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_m(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_m(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_m(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_m(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_m(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_m(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_m(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_m(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_m(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_m(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_m(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_m(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_m(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_m(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_m(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_m(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_m(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_m(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_m(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_m(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_m(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_m(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_m(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_m(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_m(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_m(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_m(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_m(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_m(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_m(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_m(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_m(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_m(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_m(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_m(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_m(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "d3019f788c49e35cd5a06d03319cd31b6bb26ace", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_mu_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_mu_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_mu_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_mu_rv64-1.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_mu(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_mu(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_mu(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_mu(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_mu(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_mu(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_mu(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_mu(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_mu(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_mu(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_mu(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_mu(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_mu(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_mu(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_mu(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_mu(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_mu(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_mu(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_mu(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_mu(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_mu(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_mu(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_mu(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_mu(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_mu(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_mu(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_mu(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_mu(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_mu(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_mu(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_mu(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_mu(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_mu(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_mu(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_mu(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_mu(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_mu(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_mu(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_mu(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_mu(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_mu(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_mu(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_mu(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_mu(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_mu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "6a7f15ef00f3bba62c07a4b1288013bb6298c728", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_mu_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_mu_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_mu_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_mu_rv64-2.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_mu(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_mu(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_mu(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_mu(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_mu(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_mu(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_mu(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_mu(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_mu(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_mu(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_mu(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_mu(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_mu(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_mu(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_mu(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_mu(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_mu(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_mu(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_mu(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_mu(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_mu(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_mu(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_mu(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_mu(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_mu(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_mu(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_mu(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_mu(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_mu(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_mu(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_mu(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_mu(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_mu(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_mu(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_mu(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_mu(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_mu(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_mu(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_mu(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_mu(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_mu(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_mu(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_mu(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_mu(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_mu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "5ab4c3bb810f537ad73d0f1557de277cea6e1bae", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_mu_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_mu_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_mu_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_mu_rv64-3.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_mu(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_mu(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_mu(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_mu(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_mu(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_mu(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_mu(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_mu(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_mu(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_mu(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_mu(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_mu(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_mu(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_mu(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_mu(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_mu(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_mu(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_mu(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_mu(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_mu(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_mu(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_mu(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_mu(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_mu(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_mu(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_mu(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_mu(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_mu(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_mu(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_mu(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_mu(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_mu(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_mu(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_mu(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_mu(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_mu(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_mu(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_mu(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_mu(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_mu(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_mu(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_mu(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_mu(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_mu(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_mu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "0918a0c3c65eeb075027ae4c8d7da63ef9f04df7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_rv64-1.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8(vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4(vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2(vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1(vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2(vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4(vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8(vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4(vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2(vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1(vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2(vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4(vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8(vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2(vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1(vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2(vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4(vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8(vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1(vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2(vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4(vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8(vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8(vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4(vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2(vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1(vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2(vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4(vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8(vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4(vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2(vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1(vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2(vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4(vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8(vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2(vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1(vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2(vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4(vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8(vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1(vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2(vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4(vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8(vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8(vd,rs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "95448583adb4d99a6688a63ab2454dcecb961ec0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_rv64-2.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8(vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4(vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2(vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1(vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2(vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4(vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8(vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4(vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2(vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1(vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2(vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4(vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8(vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2(vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1(vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2(vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4(vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8(vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8(vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1(vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1(vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2(vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2(vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4(vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4(vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8(vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8(vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4(vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2(vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1(vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2(vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4(vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8(vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4(vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2(vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1(vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2(vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4(vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8(vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2(vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1(vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2(vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4(vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8(vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1(vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2(vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4(vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8(vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8(vd,rs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "1f5cd959974d0f32150d4103fa536f39a06bed14", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_rv64-3.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8(vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4(vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2(vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1(vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2(vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4(vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8(vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4(vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2(vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1(vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2(vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4(vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8(vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2(vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1(vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2(vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4(vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8(vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8(vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1(vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1(vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2(vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2(vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4(vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4(vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8(vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8(vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4(vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2(vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1(vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2(vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4(vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8(vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4(vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2(vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1(vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2(vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4(vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8(vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2(vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1(vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2(vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4(vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8(vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1(vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2(vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4(vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8(vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8(vd,rs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "835b06612dc35074ed3a97fdf8c6408fa3a4f5d4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_tu_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tu_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tu_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tu_rv64-1.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_tu(vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_tu(vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_tu(vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_tu(vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_tu(vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_tu(vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_tu(vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_tu(vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_tu(vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_tu(vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_tu(vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_tu(vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_tu(vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_tu(vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_tu(vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_tu(vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_tu(vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_tu(vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_tu(vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_tu(vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_tu(vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_tu(vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_tu(vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_tu(vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_tu(vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_tu(vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_tu(vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_tu(vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_tu(vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_tu(vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_tu(vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_tu(vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_tu(vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_tu(vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_tu(vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_tu(vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_tu(vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_tu(vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_tu(vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_tu(vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_tu(vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_tu(vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_tu(vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_tu(vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_tu(vd,rs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "a051e6b24e81eb7cd77ee377e8df8b5810ead5a1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_tu_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tu_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tu_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tu_rv64-2.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_tu(vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_tu(vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_tu(vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_tu(vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_tu(vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_tu(vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_tu(vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_tu(vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_tu(vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_tu(vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_tu(vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_tu(vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_tu(vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_tu(vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_tu(vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_tu(vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_tu(vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_tu(vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_tu(vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_tu(vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_tu(vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_tu(vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_tu(vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_tu(vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_tu(vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_tu(vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_tu(vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_tu(vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_tu(vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_tu(vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_tu(vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_tu(vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_tu(vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_tu(vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_tu(vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_tu(vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_tu(vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_tu(vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_tu(vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_tu(vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_tu(vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_tu(vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_tu(vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_tu(vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_tu(vd,rs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "10e8afb397a3f3c3d4c6bad9e99d8a5777f8c754", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_tu_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tu_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tu_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tu_rv64-3.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_tu(vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_tu(vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_tu(vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_tu(vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_tu(vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_tu(vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_tu(vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_tu(vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_tu(vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_tu(vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_tu(vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_tu(vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_tu(vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_tu(vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_tu(vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_tu(vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_tu(vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_tu(vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_tu(vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_tu(vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_tu(vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_tu(vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_tu(vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_tu(vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_tu(vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_tu(vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_tu(vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_tu(vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_tu(vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_tu(vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_tu(vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_tu(vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_tu(vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_tu(vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_tu(vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_tu(vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_tu(vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_tu(vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_tu(vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_tu(vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_tu(vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_tu(vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_tu(vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_tu(vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_tu(vd,rs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "23ecbb94903cb8edd50a82f203badb497d3b6ed8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_tum_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tum_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tum_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tum_rv64-1.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_tum(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_tum(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_tum(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_tum(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_tum(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_tum(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_tum(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_tum(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_tum(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_tum(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_tum(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_tum(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_tum(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_tum(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_tum(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_tum(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_tum(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_tum(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_tum(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_tum(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_tum(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_tum(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_tum(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_tum(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_tum(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_tum(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_tum(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_tum(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_tum(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_tum(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_tum(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_tum(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_tum(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_tum(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_tum(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_tum(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_tum(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_tum(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_tum(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_tum(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_tum(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_tum(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_tum(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_tum(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_tum(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "64658131f0bfab1cbf36824ee3543f8f478d03b1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_tum_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tum_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tum_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tum_rv64-2.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_tum(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_tum(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_tum(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_tum(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_tum(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_tum(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_tum(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_tum(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_tum(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_tum(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_tum(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_tum(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_tum(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_tum(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_tum(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_tum(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_tum(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_tum(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_tum(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_tum(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_tum(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_tum(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_tum(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_tum(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_tum(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_tum(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_tum(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_tum(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_tum(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_tum(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_tum(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_tum(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_tum(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_tum(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_tum(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_tum(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_tum(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_tum(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_tum(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_tum(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_tum(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_tum(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_tum(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_tum(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_tum(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "92b5b87990b0209b64d91ceba616dc362f814d45", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_tum_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tum_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tum_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tum_rv64-3.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_tum(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_tum(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_tum(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_tum(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_tum(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_tum(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_tum(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_tum(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_tum(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_tum(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_tum(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_tum(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_tum(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_tum(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_tum(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_tum(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_tum(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_tum(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_tum(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_tum(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_tum(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_tum(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_tum(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_tum(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_tum(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_tum(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_tum(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_tum(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_tum(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_tum(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_tum(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_tum(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_tum(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_tum(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_tum(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_tum(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_tum(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_tum(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_tum(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_tum(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_tum(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_tum(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_tum(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_tum(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_tum(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "704a5b584ac49ae9565f29893d89acc764c900e8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_tumu_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tumu_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tumu_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tumu_rv64-1.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_tumu(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_tumu(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_tumu(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_tumu(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_tumu(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_tumu(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_tumu(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_tumu(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_tumu(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_tumu(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_tumu(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_tumu(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_tumu(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_tumu(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_tumu(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_tumu(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_tumu(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_tumu(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_tumu(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_tumu(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_tumu(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_tumu(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_tumu(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_tumu(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_tumu(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_tumu(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_tumu(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_tumu(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_tumu(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_tumu(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_tumu(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_tumu(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_tumu(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_tumu(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_tumu(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_tumu(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_tumu(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_tumu(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_tumu(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_tumu(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_tumu(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_tumu(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_tumu(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_tumu(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_tumu(mask,vd,rs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "1f83b4003f3174f3aa871c874aed0b24dd433381", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_tumu_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tumu_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tumu_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tumu_rv64-2.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_tumu(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_tumu(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_tumu(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_tumu(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_tumu(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_tumu(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_tumu(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_tumu(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_tumu(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_tumu(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_tumu(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_tumu(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_tumu(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_tumu(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_tumu(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_tumu(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_tumu(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_tumu(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_tumu(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_tumu(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_tumu(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_tumu(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_tumu(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_tumu(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_tumu(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_tumu(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_tumu(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_tumu(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_tumu(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_tumu(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_tumu(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_tumu(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_tumu(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_tumu(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_tumu(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_tumu(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_tumu(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_tumu(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_tumu(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_tumu(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_tumu(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_tumu(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_tumu(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_tumu(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_tumu(mask,vd,rs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "3a8e86a18a55688b45cc388f0f35f90cd9becaf3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsac_vx_tumu_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tumu_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70551148edd1774d14bdce9a2dd4ea9a959b1f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tumu_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vx_tumu_rv64-3.c?ref=3a70551148edd1774d14bdce9a2dd4ea9a959b1f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_vx_i8mf8_tumu(vbool64_t mask,vint8mf8_t vd,int8_t rs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_vx_i8mf4_tumu(vbool32_t mask,vint8mf4_t vd,int8_t rs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_vx_i8mf2_tumu(vbool16_t mask,vint8mf2_t vd,int8_t rs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8mf2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_vx_i8m1_tumu(vbool8_t mask,vint8m1_t vd,int8_t rs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m1_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_vx_i8m2_tumu(vbool4_t mask,vint8m2_t vd,int8_t rs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_vx_i8m4_tumu(vbool2_t mask,vint8m4_t vd,int8_t rs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_vx_i8m8_tumu(vbool1_t mask,vint8m8_t vd,int8_t rs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i8m8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_vx_i16mf4_tumu(vbool64_t mask,vint16mf4_t vd,int16_t rs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_vx_i16mf2_tumu(vbool32_t mask,vint16mf2_t vd,int16_t rs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16mf2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_vx_i16m1_tumu(vbool16_t mask,vint16m1_t vd,int16_t rs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m1_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_vx_i16m2_tumu(vbool8_t mask,vint16m2_t vd,int16_t rs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_vx_i16m4_tumu(vbool4_t mask,vint16m4_t vd,int16_t rs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_vx_i16m8_tumu(vbool2_t mask,vint16m8_t vd,int16_t rs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i16m8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_vx_i32mf2_tumu(vbool64_t mask,vint32mf2_t vd,int32_t rs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32mf2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_vx_i32m1_tumu(vbool32_t mask,vint32m1_t vd,int32_t rs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m1_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_vx_i32m2_tumu(vbool16_t mask,vint32m2_t vd,int32_t rs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_vx_i32m4_tumu(vbool8_t mask,vint32m4_t vd,int32_t rs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_vx_i32m8_tumu(vbool4_t mask,vint32m8_t vd,int32_t rs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i32m8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_vx_i64m1_tumu(vbool64_t mask,vint64m1_t vd,int64_t rs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m1_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_vx_i64m2_tumu(vbool32_t mask,vint64m2_t vd,int64_t rs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_vx_i64m4_tumu(vbool16_t mask,vint64m4_t vd,int64_t rs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_vx_i64m8_tumu(vbool8_t mask,vint64m8_t vd,int64_t rs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_i64m8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_vx_u8mf8_tumu(vbool64_t mask,vuint8mf8_t vd,uint8_t rs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_vx_u8mf4_tumu(vbool32_t mask,vuint8mf4_t vd,uint8_t rs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_vx_u8mf2_tumu(vbool16_t mask,vuint8mf2_t vd,uint8_t rs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8mf2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_vx_u8m1_tumu(vbool8_t mask,vuint8m1_t vd,uint8_t rs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m1_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_vx_u8m2_tumu(vbool4_t mask,vuint8m2_t vd,uint8_t rs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_vx_u8m4_tumu(vbool2_t mask,vuint8m4_t vd,uint8_t rs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_vx_u8m8_tumu(vbool1_t mask,vuint8m8_t vd,uint8_t rs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u8m8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_vx_u16mf4_tumu(vbool64_t mask,vuint16mf4_t vd,uint16_t rs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_vx_u16mf2_tumu(vbool32_t mask,vuint16mf2_t vd,uint16_t rs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16mf2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_vx_u16m1_tumu(vbool16_t mask,vuint16m1_t vd,uint16_t rs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m1_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_vx_u16m2_tumu(vbool8_t mask,vuint16m2_t vd,uint16_t rs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_vx_u16m4_tumu(vbool4_t mask,vuint16m4_t vd,uint16_t rs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_vx_u16m8_tumu(vbool2_t mask,vuint16m8_t vd,uint16_t rs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u16m8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_vx_u32mf2_tumu(vbool64_t mask,vuint32mf2_t vd,uint32_t rs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32mf2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_vx_u32m1_tumu(vbool32_t mask,vuint32m1_t vd,uint32_t rs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m1_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_vx_u32m2_tumu(vbool16_t mask,vuint32m2_t vd,uint32_t rs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_vx_u32m4_tumu(vbool8_t mask,vuint32m4_t vd,uint32_t rs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_vx_u32m8_tumu(vbool4_t mask,vuint32m8_t vd,uint32_t rs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u32m8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_vx_u64m1_tumu(vbool64_t mask,vuint64m1_t vd,uint64_t rs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m1_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_vx_u64m2_tumu(vbool32_t mask,vuint64m2_t vd,uint64_t rs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m2_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_vx_u64m4_tumu(vbool16_t mask,vuint64m4_t vd,uint64_t rs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m4_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_vx_u64m8_tumu(vbool8_t mask,vuint64m8_t vd,uint64_t rs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_vx_u64m8_tumu(mask,vd,rs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vx\\s+v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}]}