{"sha": "eb83419390c399dc12a359eae856a5963216a450", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4MzQxOTM5MGMzOTlkYzEyYTM1OWVhZTg1NmE1OTYzMjE2YTQ1MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-05-26T15:16:45Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-05-26T15:16:45Z"}, "message": "basic-block.h: Remove the prototype for merge_seq_blocks.\n\n\t* basic-block.h: Remove the prototype for merge_seq_blocks.\n\t* cfgcleanup.c (merge_seq_blocks): Remove.\n\nFrom-SVN: r125094", "tree": {"sha": "691997a71d38ce09adc119a49e9d096ec3b9cd78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691997a71d38ce09adc119a49e9d096ec3b9cd78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb83419390c399dc12a359eae856a5963216a450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb83419390c399dc12a359eae856a5963216a450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb83419390c399dc12a359eae856a5963216a450", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb83419390c399dc12a359eae856a5963216a450/comments", "author": null, "committer": null, "parents": [{"sha": "e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9"}], "stats": {"total": 31, "additions": 5, "deletions": 26}, "files": [{"sha": "d30b21b1028b4d3b0ad3200a156e82d730549b1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb83419390c399dc12a359eae856a5963216a450/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb83419390c399dc12a359eae856a5963216a450/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb83419390c399dc12a359eae856a5963216a450", "patch": "@@ -1,3 +1,8 @@\n+2007-05-26  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* basic-block.h: Remove the prototype for merge_seq_blocks.\n+\t* cfgcleanup.c (merge_seq_blocks): Remove.\n+\n 2007-05-26  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386-protos.h (ix86_expand_sse4_unpack): New."}, {"sha": "dd3bc1a2825e84ee8483d4b5edf5cb1ff783d8be", "filename": "gcc/basic-block.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb83419390c399dc12a359eae856a5963216a450/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb83419390c399dc12a359eae856a5963216a450/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=eb83419390c399dc12a359eae856a5963216a450", "patch": "@@ -919,7 +919,6 @@ extern void free_aux_for_edges (void);\n extern void find_basic_blocks (rtx);\n extern bool cleanup_cfg (int);\n extern bool delete_unreachable_blocks (void);\n-extern bool merge_seq_blocks (void);\n \n extern bool mark_dfs_back_edges (void);\n extern void set_edge_can_fallthru_flag (void);"}, {"sha": "54d2321d60e6d989f8c4c83eda1943f535f3a0f0", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb83419390c399dc12a359eae856a5963216a450/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb83419390c399dc12a359eae856a5963216a450/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=eb83419390c399dc12a359eae856a5963216a450", "patch": "@@ -2166,31 +2166,6 @@ delete_unreachable_blocks (void)\n     tidy_fallthru_edges ();\n   return changed;\n }\n-\n-/* Merges sequential blocks if possible.  */\n-\n-bool\n-merge_seq_blocks (void)\n-{\n-  basic_block bb;\n-  bool changed = false;\n-\n-  for (bb = ENTRY_BLOCK_PTR->next_bb; bb != EXIT_BLOCK_PTR; )\n-    {\n-      if (single_succ_p (bb)\n-\t  && can_merge_blocks_p (bb, single_succ (bb)))\n-\t{\n-\t  /* Merge the blocks and retry.  */\n-\t  merge_blocks (bb, single_succ (bb));\n-\t  changed = true;\n-\t  continue;\n-\t}\n-\n-      bb = bb->next_bb;\n-    }\n-\n-  return changed;\n-}\n \f\n /* Tidy the CFG by deleting unreachable code and whatnot.  */\n "}]}