{"sha": "d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcwYmQ3ZmZmMGRjOTFjMjJjZTdlMTE4YjkwZGM5MWJmYTFlOTM1YQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2004-05-05T06:52:56Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-05-05T06:52:56Z"}, "message": "Format.java: Cleaned up imports.\n\n2004-05-05  Tom Tromey  <tromey@redhat.com>\n\n\t* java/text/Format.java: Cleaned up imports.\n\t* java/text/DecimalFormat.java: Cleaned up imports.\n\t* java/security/SecureRandom.java: Cleaned up imports.\n\t(SecureRandom): Removed unused variable.\n\t* java/security/UnresolvedPermission.java: Cleaned up imports.\n\t* java/util/Date.java (parse): Removed unused variable.\n\t* java/util/ResourceBundle.java: Cleaned up imports.\n\t(getBundle): Removed unused variable.\n\t(tryBundle): Likewise.\n\t* java/util/regex/Pattern.java (Pattern): Removed unused constructor.\n\nFrom-SVN: r81503", "tree": {"sha": "ae1295a2cbf6b92797373cf8b0f3b4f994aac009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae1295a2cbf6b92797373cf8b0f3b4f994aac009"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/comments", "author": null, "committer": null, "parents": [{"sha": "b335a54914864ff4da3ddd7493487b75844dd1bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b335a54914864ff4da3ddd7493487b75844dd1bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b335a54914864ff4da3ddd7493487b75844dd1bb"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "20362a972c41ac6b611c3b144f1cc875ba733a3f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "patch": "@@ -1,3 +1,16 @@\n+2004-05-05  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/text/Format.java: Cleaned up imports.\n+\t* java/text/DecimalFormat.java: Cleaned up imports.\n+\t* java/security/SecureRandom.java: Cleaned up imports.\n+\t(SecureRandom): Removed unused variable.\n+\t* java/security/UnresolvedPermission.java: Cleaned up imports.\n+\t* java/util/Date.java (parse): Removed unused variable.\n+\t* java/util/ResourceBundle.java: Cleaned up imports.\n+\t(getBundle): Removed unused variable.\n+\t(tryBundle): Likewise.\n+\t* java/util/regex/Pattern.java (Pattern): Removed unused constructor.\n+\n 2004-05-05  Guilhem Lavaux <guilhem@kaffe.org>\n \n \t* java/text/SimpleDateFormat.java:"}, {"sha": "d7fda7ba744e262fcaee084a240c8a74bc9858f1", "filename": "libjava/java/security/SecureRandom.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Fsecurity%2FSecureRandom.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Fsecurity%2FSecureRandom.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecureRandom.java?ref=d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "patch": "@@ -37,12 +37,11 @@\n \n package java.security;\n \n-import java.io.Serializable;\n-import java.util.Random;\n-import java.util.Enumeration;\n-\n import gnu.java.security.Engine;\n \n+import java.util.Enumeration;\n+import java.util.Random;\n+\n /**\n  * An interface to a cryptographically secure pseudo-random number\n  * generator (PRNG). Random (or at least unguessable) numbers are used\n@@ -94,7 +93,7 @@ public SecureRandom()\n     String key;\n \n     String classname = null;\n-    int i, flag = 0;\n+    int i;\n     Enumeration e;\n     for (i = 0; i < p.length; i++)\n       {"}, {"sha": "7efb35582fc3e660a1165a2705cd4503f067c360", "filename": "libjava/java/security/UnresolvedPermission.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Fsecurity%2FUnresolvedPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Fsecurity%2FUnresolvedPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FUnresolvedPermission.java?ref=d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "patch": "@@ -37,7 +37,6 @@\n \n package java.security;\n \n-import java.io.Serializable;\n // All uses of Certificate in this file refer to the one in the listed\n // package, not this one.\n import java.security.cert.Certificate;"}, {"sha": "7bc389eb71e936b96501c06213e99d4402d76043", "filename": "libjava/java/text/Format.java", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Ftext%2FFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Ftext%2FFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FFormat.java?ref=d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "patch": "@@ -39,11 +39,6 @@\n package java.text;\n \n import gnu.java.text.FormatCharacterIterator;\n-\n-import java.util.Set;\n-import java.util.Map;\n-import java.util.HashSet;\n-import java.util.HashMap;\n import java.io.Serializable;\n \n /**"}, {"sha": "43ae96990825fdd14cf0701c1dac0f87b190e3fa", "filename": "libjava/java/util/Date.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Futil%2FDate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Futil%2FDate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FDate.java?ref=d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "patch": "@@ -460,7 +460,6 @@ else if ((num >= 70\n \t\t\tint curYear = 1900 + new Date().getYear();\n \t\t\tint firstYear = curYear - 80;\n \t\t\tyear = firstYear / 100 * 100 + num;\n-\t\t\tint yx = year;\n \t\t\tif (year < firstYear)\n \t\t\t  year += 100;\n \t\t      }"}, {"sha": "264152a8cb7f505903784ec1b730095b4af8e582", "filename": "libjava/java/util/ResourceBundle.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Futil%2FResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Futil%2FResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FResourceBundle.java?ref=d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "patch": "@@ -42,7 +42,6 @@\n import java.lang.ref.SoftReference;\n import java.io.InputStream;\n import java.io.IOException;\n-import gnu.classpath.Configuration;\n \n /**\n  * A resource bundle contains locale-specific data. If you need localized\n@@ -345,7 +344,6 @@ public static final ResourceBundle getBundle(String baseName,\n     else if (cache.containsKey(name))\n       {\n \tReference ref = (Reference) cache.get(name);\n-\tResourceBundle result = null;\n \t// If REF is null, that means that we added a `null' value to\n \t// the hash map.  That means we failed to find the bundle\n \t// previously, and we cached that fact.  The JDK does this, so\n@@ -440,7 +438,6 @@ private static final ResourceBundle tryBundle(String localizedName,\n     if (cache.containsKey(localizedName))\n       {\n \tReference ref = (Reference) cache.get(localizedName);\n-\tResourceBundle result = null;\n \t// If REF is null, that means that we added a `null' value to\n \t// the hash map.  That means we failed to find the bundle\n \t// previously, and we cached that fact.  The JDK does this, so"}, {"sha": "174bdae58788f7eadbd8999b6b2a307bca88a62c", "filename": "libjava/java/util/regex/Pattern.java", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Futil%2Fregex%2FPattern.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a/libjava%2Fjava%2Futil%2Fregex%2FPattern.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fregex%2FPattern.java?ref=d70bd7fff0dc91c22ce7e118b90dc91bfa1e935a", "patch": "@@ -67,12 +67,6 @@ public class Pattern implements Serializable\n \n   private final RE re;\n \n-  private Pattern (String regex)\n-    throws PatternSyntaxException\n-  {\n-    this (regex, 0);\n-  }\n-\n   private Pattern (String regex, int flags)\n     throws PatternSyntaxException\n   {"}]}