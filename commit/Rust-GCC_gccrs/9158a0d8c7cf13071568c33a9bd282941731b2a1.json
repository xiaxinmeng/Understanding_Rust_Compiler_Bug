{"sha": "9158a0d8c7cf13071568c33a9bd282941731b2a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE1OGEwZDhjN2NmMTMwNzE1NjhjMzNhOWJkMjgyOTQxNzMxYjJhMQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-09-15T15:57:31Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-09-15T15:57:31Z"}, "message": "The various TARGET_ASM_..._MAX_SKIP hooks take an insn\n\ngcc/ChangeLog:\n\t* config/rs6000/rs6000.c (rs6000_loop_align_max_skip): Strengthen\n\tparam \"label\" from rtx to rtx_insn *.\n\t* config/rx/rx.c (rx_max_skip_for_label): Likewise for param \"lab\"\n\tand local \"op\".\n\t* doc/tm.texi (TARGET_ASM_JUMP_ALIGN_MAX_SKIP): Autogenerated changes.\n\t(TARGET_ASM_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP): Likewise.\n\t(TARGET_ASM_LOOP_ALIGN_MAX_SKIP): Likewise.\n\t(TARGET_ASM_LABEL_ALIGN_MAX_SKIP): Likewise.\n\t* final.c (default_label_align_after_barrier_max_skip): Strengthen\n\tparam from rtx to rtx_insn *.\n\t(default_loop_align_max_skip): Likewise.\n\t(default_label_align_max_skip): Likewise.\n\t(default_jump_align_max_skip): Likewise.\n\t* target.def (label_align_after_barrier_max_skip): Likewise.\n\t(loop_align_max_skip): Likewise.\n\t(label_align_max_skip): Likewise.\n\t(jump_align_max_skip): Likewise.\n\t* targhooks.h (default_label_align_after_barrier_max_skip):\n\tLikewise.\n\t(default_loop_align_max_skip): Likewise.\n\t(default_label_align_max_skip): Likewise.\n\t(default_jump_align_max_skip): Likewise.\n\nFrom-SVN: r215270", "tree": {"sha": "6005975d27c2926c53af0691d59a5179467c366b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6005975d27c2926c53af0691d59a5179467c366b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9158a0d8c7cf13071568c33a9bd282941731b2a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9158a0d8c7cf13071568c33a9bd282941731b2a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9158a0d8c7cf13071568c33a9bd282941731b2a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9158a0d8c7cf13071568c33a9bd282941731b2a1/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e"}], "stats": {"total": 65, "additions": 45, "deletions": 20}, "files": [{"sha": "f7f010e46741853df2554ba3f763d4c120f083ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9158a0d8c7cf13071568c33a9bd282941731b2a1", "patch": "@@ -1,3 +1,28 @@\n+2014-09-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_loop_align_max_skip): Strengthen\n+\tparam \"label\" from rtx to rtx_insn *.\n+\t* config/rx/rx.c (rx_max_skip_for_label): Likewise for param \"lab\"\n+\tand local \"op\".\n+\t* doc/tm.texi (TARGET_ASM_JUMP_ALIGN_MAX_SKIP): Autogenerated changes.\n+\t(TARGET_ASM_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP): Likewise.\n+\t(TARGET_ASM_LOOP_ALIGN_MAX_SKIP): Likewise.\n+\t(TARGET_ASM_LABEL_ALIGN_MAX_SKIP): Likewise.\n+\t* final.c (default_label_align_after_barrier_max_skip): Strengthen\n+\tparam from rtx to rtx_insn *.\n+\t(default_loop_align_max_skip): Likewise.\n+\t(default_label_align_max_skip): Likewise.\n+\t(default_jump_align_max_skip): Likewise.\n+\t* target.def (label_align_after_barrier_max_skip): Likewise.\n+\t(loop_align_max_skip): Likewise.\n+\t(label_align_max_skip): Likewise.\n+\t(jump_align_max_skip): Likewise.\n+\t* targhooks.h (default_label_align_after_barrier_max_skip):\n+\tLikewise.\n+\t(default_loop_align_max_skip): Likewise.\n+\t(default_label_align_max_skip): Likewise.\n+\t(default_jump_align_max_skip): Likewise.\n+\n 2014-09-15  David Malcolm  <dmalcolm@redhat.com>\n \n \t* config/arc/arc.c (arc_can_follow_jump): Strengthen both params"}, {"sha": "eca7aec4fd1f6dd76a210261c2bd4201014e58ea", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9158a0d8c7cf13071568c33a9bd282941731b2a1", "patch": "@@ -4134,7 +4134,7 @@ rs6000_loop_align (rtx label)\n \n /* Implement TARGET_LOOP_ALIGN_MAX_SKIP. */\n static int\n-rs6000_loop_align_max_skip (rtx label)\n+rs6000_loop_align_max_skip (rtx_insn *label)\n {\n   return (1 << rs6000_loop_align (label)) - 1;\n }"}, {"sha": "e177facc7b837569eb6d0e817db2ea558769eef9", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=9158a0d8c7cf13071568c33a9bd282941731b2a1", "patch": "@@ -3207,15 +3207,15 @@ rx_align_for_label (rtx lab, int uses_threshold)\n }\n \n static int\n-rx_max_skip_for_label (rtx lab)\n+rx_max_skip_for_label (rtx_insn *lab)\n {\n   int opsize;\n-  rtx op;\n+  rtx_insn *op;\n \n   if (optimize_size)\n     return 0;\n \n-  if (lab == NULL_RTX)\n+  if (lab == NULL)\n     return 0;\n \n   op = lab;"}, {"sha": "396909f2619f1684736115537341b66face8c4cd", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=9158a0d8c7cf13071568c33a9bd282941731b2a1", "patch": "@@ -8871,7 +8871,7 @@ to set the variable @var{align_jumps} in the target's\n selection in @var{align_jumps} in a @code{JUMP_ALIGN} implementation.\n @end defmac\n \n-@deftypefn {Target Hook} int TARGET_ASM_JUMP_ALIGN_MAX_SKIP (rtx @var{label})\n+@deftypefn {Target Hook} int TARGET_ASM_JUMP_ALIGN_MAX_SKIP (rtx_insn *@var{label})\n The maximum number of bytes to skip before @var{label} when applying\n @code{JUMP_ALIGN}.  This works only if\n @code{ASM_OUTPUT_MAX_SKIP_ALIGN} is defined.\n@@ -8886,7 +8886,7 @@ to be done at such a time.  Most machine descriptions do not currently\n define the macro.\n @end defmac\n \n-@deftypefn {Target Hook} int TARGET_ASM_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP (rtx @var{label})\n+@deftypefn {Target Hook} int TARGET_ASM_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP (rtx_insn *@var{label})\n The maximum number of bytes to skip before @var{label} when applying\n @code{LABEL_ALIGN_AFTER_BARRIER}.  This works only if\n @code{ASM_OUTPUT_MAX_SKIP_ALIGN} is defined.\n@@ -8906,7 +8906,7 @@ to set the variable @code{align_loops} in the target's\n selection in @code{align_loops} in a @code{LOOP_ALIGN} implementation.\n @end defmac\n \n-@deftypefn {Target Hook} int TARGET_ASM_LOOP_ALIGN_MAX_SKIP (rtx @var{label})\n+@deftypefn {Target Hook} int TARGET_ASM_LOOP_ALIGN_MAX_SKIP (rtx_insn *@var{label})\n The maximum number of bytes to skip when applying @code{LOOP_ALIGN} to\n @var{label}.  This works only if @code{ASM_OUTPUT_MAX_SKIP_ALIGN} is\n defined.\n@@ -8923,7 +8923,7 @@ to set the variable @code{align_labels} in the target's\n selection in @code{align_labels} in a @code{LABEL_ALIGN} implementation.\n @end defmac\n \n-@deftypefn {Target Hook} int TARGET_ASM_LABEL_ALIGN_MAX_SKIP (rtx @var{label})\n+@deftypefn {Target Hook} int TARGET_ASM_LABEL_ALIGN_MAX_SKIP (rtx_insn *@var{label})\n The maximum number of bytes to skip when applying @code{LABEL_ALIGN}\n to @var{label}.  This works only if @code{ASM_OUTPUT_MAX_SKIP_ALIGN}\n is defined."}, {"sha": "d17b61b5506447c72bd61ef1c798abfe777872a4", "filename": "gcc/final.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=9158a0d8c7cf13071568c33a9bd282941731b2a1", "patch": "@@ -499,25 +499,25 @@ get_attr_min_length (rtx insn)\n #endif\n \n int\n-default_label_align_after_barrier_max_skip (rtx insn ATTRIBUTE_UNUSED)\n+default_label_align_after_barrier_max_skip (rtx_insn *insn ATTRIBUTE_UNUSED)\n {\n   return 0;\n }\n \n int\n-default_loop_align_max_skip (rtx insn ATTRIBUTE_UNUSED)\n+default_loop_align_max_skip (rtx_insn *insn ATTRIBUTE_UNUSED)\n {\n   return align_loops_max_skip;\n }\n \n int\n-default_label_align_max_skip (rtx insn ATTRIBUTE_UNUSED)\n+default_label_align_max_skip (rtx_insn *insn ATTRIBUTE_UNUSED)\n {\n   return align_labels_max_skip;\n }\n \n int\n-default_jump_align_max_skip (rtx insn ATTRIBUTE_UNUSED)\n+default_jump_align_max_skip (rtx_insn *insn ATTRIBUTE_UNUSED)\n {\n   return align_jumps_max_skip;\n }"}, {"sha": "ce11eae444dd413d7ae0f1a80be3bffab04776bb", "filename": "gcc/target.def", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=9158a0d8c7cf13071568c33a9bd282941731b2a1", "patch": "@@ -72,7 +72,7 @@ DEFHOOK\n  \"The maximum number of bytes to skip before @var{label} when applying\\n\\\n @code{LABEL_ALIGN_AFTER_BARRIER}.  This works only if\\n\\\n @code{ASM_OUTPUT_MAX_SKIP_ALIGN} is defined.\",\n- int, (rtx label),\n+ int, (rtx_insn *label),\n  default_label_align_after_barrier_max_skip)\n \n /* The maximum number of bytes to skip when applying\n@@ -82,7 +82,7 @@ DEFHOOK\n  \"The maximum number of bytes to skip when applying @code{LOOP_ALIGN} to\\n\\\n @var{label}.  This works only if @code{ASM_OUTPUT_MAX_SKIP_ALIGN} is\\n\\\n defined.\",\n- int, (rtx label),\n+ int, (rtx_insn *label),\n  default_loop_align_max_skip)\n \n /* The maximum number of bytes to skip when applying\n@@ -92,7 +92,7 @@ DEFHOOK\n  \"The maximum number of bytes to skip when applying @code{LABEL_ALIGN}\\n\\\n to @var{label}.  This works only if @code{ASM_OUTPUT_MAX_SKIP_ALIGN}\\n\\\n is defined.\",\n- int, (rtx label),\n+ int, (rtx_insn *label),\n  default_label_align_max_skip)\n \n /* The maximum number of bytes to skip when applying\n@@ -102,7 +102,7 @@ DEFHOOK\n  \"The maximum number of bytes to skip before @var{label} when applying\\n\\\n @code{JUMP_ALIGN}.  This works only if\\n\\\n @code{ASM_OUTPUT_MAX_SKIP_ALIGN} is defined.\",\n- int, (rtx label),\n+ int, (rtx_insn *label),\n  default_jump_align_max_skip)\n \n /* Try to output the assembler code for an integer object whose"}, {"sha": "dad9520c9109041f43875fe7759841251badacf1", "filename": "gcc/targhooks.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9158a0d8c7cf13071568c33a9bd282941731b2a1/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=9158a0d8c7cf13071568c33a9bd282941731b2a1", "patch": "@@ -189,10 +189,10 @@ extern enum unwind_info_type default_debug_unwind_info (void);\n \n extern void default_canonicalize_comparison (int *, rtx *, rtx *, bool);\n \n-extern int default_label_align_after_barrier_max_skip (rtx);\n-extern int default_loop_align_max_skip (rtx);\n-extern int default_label_align_max_skip (rtx);\n-extern int default_jump_align_max_skip (rtx);\n+extern int default_label_align_after_barrier_max_skip (rtx_insn *);\n+extern int default_loop_align_max_skip (rtx_insn *);\n+extern int default_label_align_max_skip (rtx_insn *);\n+extern int default_jump_align_max_skip (rtx_insn *);\n extern section * default_function_section(tree decl, enum node_frequency freq,\n \t\t\t\t\t  bool startup, bool exit);\n extern enum machine_mode default_dwarf_frame_reg_mode (int);"}]}