{"sha": "01f83b7d266452d45fd53c350a3feef719ecc136", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFmODNiN2QyNjY0NTJkNDVmZDUzYzM1MGEzZmVlZjcxOWVjYzEzNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-06-14T22:20:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-06-14T22:20:52Z"}, "message": "re PR libstdc++/53270 (Error when bootstrapping gcc on hppa2.0-unknown-linux-gcc)\n\n\tPR libstdc++/53270\n\t* include/ext/concurrence.h (__mutex, __recursive_mutex, __cond): Use\n\tNSDMI in C++11 mode.\n\t* include/ext/rope (_Refcount_Base): Likewise. Destroy mutex in\n\tdestructor when initialized by function.\n\nFrom-SVN: r188637", "tree": {"sha": "c2b8faaf7a39b649a2119c86c3f2ea46f55e9f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2b8faaf7a39b649a2119c86c3f2ea46f55e9f80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01f83b7d266452d45fd53c350a3feef719ecc136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f83b7d266452d45fd53c350a3feef719ecc136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01f83b7d266452d45fd53c350a3feef719ecc136", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f83b7d266452d45fd53c350a3feef719ecc136/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c8dd62a1b436cf821b32a15d9a2fe79ef3cdc16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c8dd62a1b436cf821b32a15d9a2fe79ef3cdc16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c8dd62a1b436cf821b32a15d9a2fe79ef3cdc16"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "24543a0b83cb602f494fc79a7ca0d11e86a64ec1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f83b7d266452d45fd53c350a3feef719ecc136/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f83b7d266452d45fd53c350a3feef719ecc136/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=01f83b7d266452d45fd53c350a3feef719ecc136", "patch": "@@ -1,3 +1,11 @@\n+2012-06-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/53270\n+\t* include/ext/concurrence.h (__mutex, __recursive_mutex, __cond): Use\n+\tNSDMI in C++11 mode.\n+\t* include/ext/rope (_Refcount_Base): Likewise. Destroy mutex in\n+\tdestructor when initialized by function.\n+\n 2012-06-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/53648"}, {"sha": "22c433bff33c9d03c50a364cba298197a6b5c1ae", "filename": "libstdc++-v3/include/ext/concurrence.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f83b7d266452d45fd53c350a3feef719ecc136/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f83b7d266452d45fd53c350a3feef719ecc136/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h?ref=01f83b7d266452d45fd53c350a3feef719ecc136", "patch": "@@ -143,7 +143,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   class __mutex \n   {\n   private:\n+#if __GTHREADS && defined __GTHREAD_MUTEX_INIT \\\n+    && defined __GXX_EXPERIMENTAL_CXX0X__\n+    __gthread_mutex_t _M_mutex = __GTHREAD_MUTEX_INIT;\n+#else\n     __gthread_mutex_t _M_mutex;\n+#endif\n \n     __mutex(const __mutex&);\n     __mutex& operator=(const __mutex&);\n@@ -155,8 +160,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       if (__gthread_active_p())\n \t{\n #if defined __GTHREAD_MUTEX_INIT\n+# ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t  __gthread_mutex_t __tmp = __GTHREAD_MUTEX_INIT;\n \t  _M_mutex = __tmp;\n+# endif\n #else\n \t  __GTHREAD_MUTEX_INIT_FUNCTION(&_M_mutex); \n #endif\n@@ -201,7 +208,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   class __recursive_mutex \n   {\n   private:\n+#if __GTHREADS && defined __GTHREAD_RECURSIVE_MUTEX_INIT \\\n+    && defined __GXX_EXPERIMENTAL_CXX0X__\n+    __gthread_recursive_mutex_t _M_mutex = __GTHREAD_RECURSIVE_MUTEX_INIT;\n+#else\n     __gthread_recursive_mutex_t _M_mutex;\n+#endif\n \n     __recursive_mutex(const __recursive_mutex&);\n     __recursive_mutex& operator=(const __recursive_mutex&);\n@@ -213,8 +225,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       if (__gthread_active_p())\n \t{\n #if defined __GTHREAD_RECURSIVE_MUTEX_INIT\n+# ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t  __gthread_recursive_mutex_t __tmp = __GTHREAD_RECURSIVE_MUTEX_INIT;\n \t  _M_mutex = __tmp;\n+# endif\n #else\n \t  __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION(&_M_mutex); \n #endif\n@@ -319,7 +333,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   class __cond\n   {\n   private:\n+#if __GTHREADS && defined __GTHREAD_COND_INIT \\\n+    && defined __GXX_EXPERIMENTAL_CXX0X__\n+    __gthread_cond_t _M_cond = __GTHREAD_COND_INIT;\n+#else\n     __gthread_cond_t _M_cond;\n+#endif\n \n     __cond(const __cond&);\n     __cond& operator=(const __cond&);\n@@ -331,8 +350,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       if (__gthread_active_p())\n \t{\n #if defined __GTHREAD_COND_INIT\n+# ifndef __GXX_EXPERIMENTAL_CXX0X__\n \t  __gthread_cond_t __tmp = __GTHREAD_COND_INIT;\n \t  _M_cond = __tmp;\n+# endif\n #else\n \t  __GTHREAD_COND_INIT_FUNCTION(&_M_cond);\n #endif"}, {"sha": "15cb423df68e87b7cb39ec3203613a60099b663e", "filename": "libstdc++-v3/include/ext/rope", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f83b7d266452d45fd53c350a3feef719ecc136/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f83b7d266452d45fd53c350a3feef719ecc136/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope?ref=01f83b7d266452d45fd53c350a3feef719ecc136", "patch": "@@ -458,20 +458,31 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     volatile _RC_t _M_ref_count;\n \n     // Constructor\n+#if defined __GTHREAD_MUTEX_INIT && defined __GXX_EXPERIMENTAL_CXX0X__\n+    __gthread_mutex_t _M_ref_count_lock = __GTHREAD_MUTEX_INIT;\n+#else\n     __gthread_mutex_t _M_ref_count_lock;\n+#endif\n \n     _Refcount_Base(_RC_t __n) : _M_ref_count(__n), _M_ref_count_lock()\n     {\n #ifdef __GTHREAD_MUTEX_INIT\n+# ifndef __GXX_EXPERIMENTAL_CXX0X__\n       __gthread_mutex_t __tmp = __GTHREAD_MUTEX_INIT;\n       _M_ref_count_lock = __tmp;\n+# endif\n #elif defined(__GTHREAD_MUTEX_INIT_FUNCTION)\n       __GTHREAD_MUTEX_INIT_FUNCTION (&_M_ref_count_lock);\n #else\n #error __GTHREAD_MUTEX_INIT or __GTHREAD_MUTEX_INIT_FUNCTION should be defined by gthr.h abstraction layer, report problem to libstdc++@gcc.gnu.org.\n #endif\n     }\n \n+#ifndef __GTHREAD_MUTEX_INIT\n+    ~_Refcount_Base()\n+    { __gthread_mutex_destroy(&_M_ref_count_lock); }\n+#endif\n+\n     void\n     _M_incr()\n     {"}]}