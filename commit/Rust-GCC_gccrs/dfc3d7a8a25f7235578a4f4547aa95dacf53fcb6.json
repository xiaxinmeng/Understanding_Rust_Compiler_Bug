{"sha": "dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZjM2Q3YThhMjVmNzIzNTU3OGE0ZjQ1NDdhYTk1ZGFjZjUzZmNiNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-11-19T08:49:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-11-19T08:49:59Z"}, "message": "re PR rtl-optimization/68376 (wrong code at -O1 and above on x86_64-linux-gnu)\n\n\tPR rtl-optimization/68376\n\t* ifcvt.c (noce_try_abs): Disable one_cmpl optimization if\n\tencountering x <= 0 ? ~x : x or x > 0 ? ~x : x.\n\n\t* gcc.c-torture/execute/pr68376-1.c: New test.\n\t* gcc.c-torture/execute/pr68376-2.c: New test.\n\nFrom-SVN: r230596", "tree": {"sha": "47232c094e52e451e75dcf381b4992ec2a034aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47232c094e52e451e75dcf381b4992ec2a034aae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb35ccb1efb2c91d1eab17fc4fb26c8b2f32ebeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb35ccb1efb2c91d1eab17fc4fb26c8b2f32ebeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb35ccb1efb2c91d1eab17fc4fb26c8b2f32ebeb"}], "stats": {"total": 120, "additions": 116, "deletions": 4}, "files": [{"sha": "5eb064668952422c956d49513e21f841af2abc47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6", "patch": "@@ -1,3 +1,9 @@\n+2015-11-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/68376\n+\t* ifcvt.c (noce_try_abs): Disable one_cmpl optimization if\n+\tencountering x <= 0 ? ~x : x or x > 0 ? ~x : x.\n+\n 2015-11-19  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/68117"}, {"sha": "eb5cae5a753924554f0c30e7714bf57498b068a1", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 41, "deletions": 4, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6", "patch": "@@ -2595,12 +2595,49 @@ noce_try_abs (struct noce_if_info *if_info)\n \n   /* Work around funny ideas get_condition has wrt canonicalization.\n      Note that these rtx constants are known to be CONST_INT, and\n-     therefore imply integer comparisons.  */\n+     therefore imply integer comparisons.\n+     The one_cmpl case is more complicated, as we want to handle\n+     only x < 0 ? ~x : x or x >= 0 ? ~x : x but not\n+     x <= 0 ? ~x : x or x > 0 ? ~x : x, as the latter two\n+     have different result for x == 0.  */\n   if (c == constm1_rtx && GET_CODE (cond) == GT)\n-    ;\n+    {\n+      if (one_cmpl && negate)\n+\treturn FALSE;\n+    }\n   else if (c == const1_rtx && GET_CODE (cond) == LT)\n-    ;\n-  else if (c != CONST0_RTX (GET_MODE (b)))\n+    {\n+      if (one_cmpl && !negate)\n+\treturn FALSE;\n+    }\n+  else if (c == CONST0_RTX (GET_MODE (b)))\n+    {\n+      if (one_cmpl)\n+\tswitch (GET_CODE (cond))\n+\t  {\n+\t  case GT:\n+\t    if (!negate)\n+\t      return FALSE;\n+\t    break;\n+\t  case GE:\n+\t    /* >= 0 is the same case as above > -1.  */\n+\t    if (negate)\n+\t      return FALSE;\n+\t    break;\n+\t  case LT:\n+\t    if (negate)\n+\t      return FALSE;\n+\t    break;\n+\t  case LE:\n+\t    /* <= 0 is the same case as above < 1.  */\n+\t    if (!negate)\n+\t      return FALSE;\n+\t    break;\n+\t  default:\n+\t    return FALSE;\n+\t  }\n+    }\n+  else\n     return FALSE;\n \n   /* Determine what sort of operation this is.  */"}, {"sha": "319d1f3a2d3eecb45d08cb352bda85de86757df8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6", "patch": "@@ -1,5 +1,9 @@\n 2015-11-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/68376\n+\t* gcc.c-torture/execute/pr68376-1.c: New test.\n+\t* gcc.c-torture/execute/pr68376-2.c: New test.\n+\n \tPR target/67770\n \t* gcc.target/i386/pr67770.c: New test.\n "}, {"sha": "cb52657646cb5ff0f71108d755d76b79724cefd6", "filename": "gcc/testsuite/gcc.c-torture/execute/pr68376-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68376-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68376-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68376-1.c?ref=dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6", "patch": "@@ -0,0 +1,24 @@\n+/* PR rtl-optimization/68376 */\n+\n+int a, b, c = 1;\n+signed char d;\n+\n+int\n+main ()\n+{\n+  for (; a < 1; a++)\n+    for (; b < 1; b++)\n+      {\n+\tsigned char e = ~d;\n+\tif (d < 1)\n+\t  e = d;\n+\td = e;\n+\tif (!c)\n+\t  __builtin_abort ();\n+      }\n+\n+  if (d != 0)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "884571a89233c8a0e01a0bfef1d74d5dd3b30511", "filename": "gcc/testsuite/gcc.c-torture/execute/pr68376-2.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68376-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68376-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68376-2.c?ref=dfc3d7a8a25f7235578a4f4547aa95dacf53fcb6", "patch": "@@ -0,0 +1,41 @@\n+/* PR rtl-optimization/68376 */\n+\n+extern void abort (void);\n+\n+__attribute__((noinline, noclone)) int\n+f1 (int x)\n+{\n+  return x < 0 ? ~x : x;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f2 (int x)\n+{\n+  return x < 0 ? x : ~x;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f3 (int x)\n+{\n+  return x <= 0 ? ~x : x;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f4 (int x)\n+{\n+  return x <= 0 ? x : ~x;\n+}\n+\n+int\n+main ()\n+{\n+  if (f1 (5) != 5 || f1 (-5) != 4 || f1 (0) != 0)\n+    abort ();\n+  if (f2 (5) != -6 || f2 (-5) != -5 || f2 (0) != -1)\n+    abort ();\n+  if (f3 (5) != 5 || f3 (-5) != 4 || f3 (0) != -1)\n+    abort ();\n+  if (f4 (5) != -6 || f4 (-5) != -5 || f4 (0) != 0)\n+    abort ();\n+  return 0;\n+}"}]}