{"sha": "1b248907583f1cf4e02ce4168ad35cf3fe7637ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIyNDg5MDc1ODNmMWNmNGUwMmNlNDE2OGFkMzVjZjNmZTc2MzdiYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-01-11T17:01:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-01-11T17:01:37Z"}, "message": "re PR tree-optimization/46076 (constant propagation and compile-time math no longer happening versus 4.4 and 4.5)\n\n2011-01-11  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46076\n\t* tree-ssa.c (useless_type_conversion_p): Conversions from\n\tunprototyped to empty argument list function types are useless.\n\n\t* gcc.dg/tree-ssa/pr46076.c: New testcase.\n\nFrom-SVN: r168665", "tree": {"sha": "ad4d13dcea7597523744fdf9b6ed3615f537edce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad4d13dcea7597523744fdf9b6ed3615f537edce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b248907583f1cf4e02ce4168ad35cf3fe7637ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b248907583f1cf4e02ce4168ad35cf3fe7637ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b248907583f1cf4e02ce4168ad35cf3fe7637ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b248907583f1cf4e02ce4168ad35cf3fe7637ba/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "403c753b6f6c7b3eba00b73686bf990e3dfedf1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403c753b6f6c7b3eba00b73686bf990e3dfedf1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/403c753b6f6c7b3eba00b73686bf990e3dfedf1e"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "9724eee777d8c24d5fdda98c93f14b3bd7d02f68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b248907583f1cf4e02ce4168ad35cf3fe7637ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b248907583f1cf4e02ce4168ad35cf3fe7637ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b248907583f1cf4e02ce4168ad35cf3fe7637ba", "patch": "@@ -1,3 +1,9 @@\n+2011-01-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46076\n+\t* tree-ssa.c (useless_type_conversion_p): Conversions from\n+\tunprototyped to empty argument list function types are useless.\n+\n 2011-01-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45235"}, {"sha": "adb6740e58a79b4911ed0250e0b1a011e3b9fce1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b248907583f1cf4e02ce4168ad35cf3fe7637ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b248907583f1cf4e02ce4168ad35cf3fe7637ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b248907583f1cf4e02ce4168ad35cf3fe7637ba", "patch": "@@ -1,3 +1,8 @@\n+2011-01-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46076\n+\t* gcc.dg/tree-ssa/pr46076.c: New testcase.\n+\n 2011-01-11  Jeff Law <law@redhat.com>\n \n \t* PR tree-optimization/47086"}, {"sha": "a2777a604b9b8627f274d8124660f7c68ec78d32", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr46076.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b248907583f1cf4e02ce4168ad35cf3fe7637ba/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr46076.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b248907583f1cf4e02ce4168ad35cf3fe7637ba/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr46076.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr46076.c?ref=1b248907583f1cf4e02ce4168ad35cf3fe7637ba", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do link } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void link_error (void);\n+\n+typedef unsigned char(*Calculable)(void);\n+\n+static unsigned char one() { return 1; }\n+static unsigned char two() { return 2; }\n+\n+static int\n+print(Calculable calculate)\n+{\n+  return calculate() + calculate() + 1;\n+}\n+\n+int\n+main()\n+{\n+  /* Make sure we perform indirect inlining of one and two and optimize\n+     the result to a constant.  */\n+  if (print(one) != 3)\n+    link_error ();\n+  if (print(two) != 5)\n+    link_error ();\n+  return 0;\n+}"}, {"sha": "aa797e22bec7bece2f89f8b2defe2fdb7e53b2b2", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b248907583f1cf4e02ce4168ad35cf3fe7637ba/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b248907583f1cf4e02ce4168ad35cf3fe7637ba/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=1b248907583f1cf4e02ce4168ad35cf3fe7637ba", "patch": "@@ -1410,6 +1410,11 @@ useless_type_conversion_p (tree outer_type, tree inner_type)\n       if (!prototype_p (outer_type))\n \treturn true;\n \n+      /* A conversion between unprototyped and empty argument list is ok.  */\n+      if (TYPE_ARG_TYPES (outer_type) == void_list_node\n+\t  && !prototype_p (inner_type))\n+\treturn true;\n+\n       /* If the unqualified argument types are compatible the conversion\n \t is useless.  */\n       if (TYPE_ARG_TYPES (outer_type) == TYPE_ARG_TYPES (inner_type))"}]}