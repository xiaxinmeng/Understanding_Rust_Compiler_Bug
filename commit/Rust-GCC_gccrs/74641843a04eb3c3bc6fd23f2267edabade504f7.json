{"sha": "74641843a04eb3c3bc6fd23f2267edabade504f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ2NDE4NDNhMDRlYjNjM2JjNmZkMjNmMjI2N2VkYWJhZGU1MDRmNw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "1998-11-03T08:00:15Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "1998-11-03T08:00:15Z"}, "message": "arm.c (add_constant): When taking the address of an item in the pool, get the mode of the item addressed.\n\n* arm.c (add_constant): When taking the address of an item in the\npool, get the mode of the item addressed.\n* arm.c (final_prescan_insn case INSN): If an insn doesn't\ncontain a SET or a PARALLEL, don't consider it for conditional\nexecution.\nRestore ABI compatibility for NetBSD.\n* arm/netbsd.h (DEFAULT_PCC_STRUCT_RETURN): Override setting in arm.h\n(RETURN_IN_MEMORY): Likewise.\n\nFrom-SVN: r23510", "tree": {"sha": "232ddb77253391f2655a8ade5521e9677b3185bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/232ddb77253391f2655a8ade5521e9677b3185bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74641843a04eb3c3bc6fd23f2267edabade504f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74641843a04eb3c3bc6fd23f2267edabade504f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74641843a04eb3c3bc6fd23f2267edabade504f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74641843a04eb3c3bc6fd23f2267edabade504f7/comments", "author": null, "committer": null, "parents": [{"sha": "566f153b895a8997bcb587ebbe2bc1d744890477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566f153b895a8997bcb587ebbe2bc1d744890477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/566f153b895a8997bcb587ebbe2bc1d744890477"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "4dd177d00edafe9405e6984b0946c943a05bb30f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74641843a04eb3c3bc6fd23f2267edabade504f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74641843a04eb3c3bc6fd23f2267edabade504f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74641843a04eb3c3bc6fd23f2267edabade504f7", "patch": "@@ -1,3 +1,17 @@\n+Tue Nov  3 07:51:43 1998  Richard Earnshaw (rearnsha@arm.com)\n+\n+\t* arm.c (add_constant): When taking the address of an item in the\n+\tpool, get the mode of the item addressed.\n+\n+\t* arm.c (final_prescan_insn case INSN): If an insn doesn't \n+\tcontain a SET or a PARALLEL, don't consider it for conditional\n+\texecution.\n+\n+\tRestore ABI compatibility for NetBSD.\n+\t* arm/netbsd.h (DEFAULT_PCC_STRUCT_RETURN): Override setting in\n+\tarm.h\n+\t(RETURN_IN_MEMORY): Likewise.\n+\n Mon Nov  2 11:46:17 1998  Doug Evans  <devans@canuck.cygnus.com>\n \n \t* m32r/m32r.c (m32r_expand_block_move): Fix byte count computations."}, {"sha": "7d0f5ca0fe1b8468f22be6171444ec9766b64e25", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74641843a04eb3c3bc6fd23f2267edabade504f7/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74641843a04eb3c3bc6fd23f2267edabade504f7/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=74641843a04eb3c3bc6fd23f2267edabade504f7", "patch": "@@ -3488,6 +3488,7 @@ add_constant (x, mode, address_only)\n   else if (GET_CODE (x) == SYMBOL_REF && CONSTANT_POOL_ADDRESS_P(x))\n     {\n       *address_only = 1;\n+      mode = get_pool_mode (x);\n       x = get_pool_constant (x);\n     }\n #ifndef AOF_ASSEMBLER\n@@ -5933,9 +5934,9 @@ final_prescan_insn (insn, opvec, noperands)\n \t      /* Instructions using or affecting the condition codes make it\n \t\t fail.  */\n \t      scanbody = PATTERN (this_insn);\n-\t      if ((GET_CODE (scanbody) == SET\n-\t\t   || GET_CODE (scanbody) == PARALLEL)\n-\t\t  && get_attr_conds (this_insn) != CONDS_NOCOND)\n+\t      if (! (GET_CODE (scanbody) == SET\n+\t\t     || GET_CODE (scanbody) == PARALLEL)\n+\t\t  || get_attr_conds (this_insn) != CONDS_NOCOND)\n \t\tfail = TRUE;\n \t      break;\n "}, {"sha": "c97cd02d7d17ab07dae7e72ba489c2e6efb1d60c", "filename": "gcc/config/arm/netbsd.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74641843a04eb3c3bc6fd23f2267edabade504f7/gcc%2Fconfig%2Farm%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74641843a04eb3c3bc6fd23f2267edabade504f7/gcc%2Fconfig%2Farm%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd.h?ref=74641843a04eb3c3bc6fd23f2267edabade504f7", "patch": "@@ -116,6 +116,15 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef TYPE_OPERAND_FMT\n #define TYPE_OPERAND_FMT \"%%%s\"\n \n+/* NetBSD uses the old PCC style aggregate returning conventions. */\n+#undef DEFAULT_PCC_STRUCT_RETURN\n+#define DEFAULT_PCC_STRUCT_RETURN 1\n+\n+/* Although not normally relevant (since by default, all aggregates\n+   are returned in memory) compiling some parts of libc requires\n+   non-APCS style struct returns.  */\n+#undef RETURN_IN_MEMORY\n+\n /* VERY BIG NOTE : Change of structure alignment for RiscBSD.\n    There are consequences you should be aware of...\n "}]}