{"sha": "c59a4d0fa63a385f9769bd24d7e19090d3dcd85c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU5YTRkMGZhNjNhMzg1Zjk3NjliZDI0ZDdlMTkwOTBkM2RjZDg1Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-06-07T05:49:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-06-07T05:49:44Z"}, "message": "compiler: Fix unsafe.Sizeof for named structs with named struct fields.\n\nFrom-SVN: r188295", "tree": {"sha": "83161edbd0e07b14980d8811a9ed7055a095ef5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83161edbd0e07b14980d8811a9ed7055a095ef5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c59a4d0fa63a385f9769bd24d7e19090d3dcd85c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59a4d0fa63a385f9769bd24d7e19090d3dcd85c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c59a4d0fa63a385f9769bd24d7e19090d3dcd85c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59a4d0fa63a385f9769bd24d7e19090d3dcd85c/comments", "author": null, "committer": null, "parents": [{"sha": "cba0366cac405bdcea5395f970718593a18ee456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba0366cac405bdcea5395f970718593a18ee456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba0366cac405bdcea5395f970718593a18ee456"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "c2e5ed8b9ed5240bde39fd175ada4860400c66a8", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59a4d0fa63a385f9769bd24d7e19090d3dcd85c/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59a4d0fa63a385f9769bd24d7e19090d3dcd85c/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=c59a4d0fa63a385f9769bd24d7e19090d3dcd85c", "patch": "@@ -7863,6 +7863,10 @@ Find_type_use::type(Type* type)\n bool\n Named_type::do_verify()\n {\n+  if (this->is_verified_)\n+    return true;\n+  this->is_verified_ = true;\n+\n   Find_type_use find(this);\n   Type::traverse(this->type_, &find);\n   if (find.found())\n@@ -7973,6 +7977,11 @@ Named_type::convert(Gogo* gogo)\n \n   this->create_placeholder(gogo);\n \n+  // If we are called to turn unsafe.Sizeof into a constant, we may\n+  // not have verified the type yet.  We have to make sure it is\n+  // verified, since that sets the list of dependencies.\n+  this->verify();\n+\n   // Convert all the dependencies.  If they refer indirectly back to\n   // this type, they will pick up the intermediate tree we just\n   // created."}, {"sha": "a542bf71738bdbfa2528ca2ab729277bb0685605", "filename": "gcc/go/gofrontend/types.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59a4d0fa63a385f9769bd24d7e19090d3dcd85c/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59a4d0fa63a385f9769bd24d7e19090d3dcd85c/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.h?ref=c59a4d0fa63a385f9769bd24d7e19090d3dcd85c", "patch": "@@ -2628,8 +2628,9 @@ class Named_type : public Type\n       interface_method_tables_(NULL), pointer_interface_method_tables_(NULL),\n       location_(location), named_btype_(NULL), dependencies_(),\n       is_visible_(true), is_error_(false), is_placeholder_(false),\n-      is_converted_(false), is_circular_(false), seen_(false),\n-      seen_in_compare_is_identity_(false), seen_in_get_backend_(false)\n+      is_converted_(false), is_circular_(false), is_verified_(false),\n+      seen_(false), seen_in_compare_is_identity_(false),\n+      seen_in_get_backend_(false)\n   { }\n \n   // Return the associated Named_object.  This holds the actual name.\n@@ -2908,6 +2909,8 @@ class Named_type : public Type\n   // Whether this is a pointer or function type which refers to the\n   // type itself.\n   bool is_circular_;\n+  // Whether this type has been verified.\n+  bool is_verified_;\n   // In a recursive operation such as has_hidden_fields, this flag is\n   // used to prevent infinite recursion when a type refers to itself.\n   // This is mutable because it is always reset to false when the"}]}