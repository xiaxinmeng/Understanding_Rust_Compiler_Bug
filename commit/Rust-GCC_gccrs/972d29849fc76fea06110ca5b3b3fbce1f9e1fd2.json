{"sha": "972d29849fc76fea06110ca5b3b3fbce1f9e1fd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcyZDI5ODQ5ZmM3NmZlYTA2MTEwY2E1YjNiM2ZiY2UxZjllMWZkMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-06-11T09:15:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-06-11T09:15:47Z"}, "message": "[Ada] Minor tweaks in Repinfo\n\n2018-06-11  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* repinfo.ads (Rep_Value): Use a single line.\n\t* repinfo.adb (Rep_Value): Likewise.\n\t(List_Attr): Do not use string concatenation.\n\nFrom-SVN: r261395", "tree": {"sha": "fa90243c40c65ae1b53fa4a392d3941596f4e893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa90243c40c65ae1b53fa4a392d3941596f4e893"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2/comments", "author": null, "committer": null, "parents": [{"sha": "b516a1a96b625e6b2b1d5c4f6b48573a8481e9ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b516a1a96b625e6b2b1d5c4f6b48573a8481e9ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b516a1a96b625e6b2b1d5c4f6b48573a8481e9ac"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "e2191200c1e0c32bb69e9337ae44db5d37b13007", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=972d29849fc76fea06110ca5b3b3fbce1f9e1fd2", "patch": "@@ -1,3 +1,9 @@\n+2018-06-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* repinfo.ads (Rep_Value): Use a single line.\n+\t* repinfo.adb (Rep_Value): Likewise.\n+\t(List_Attr): Do not use string concatenation.\n+\n 2018-06-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_unst.adb (Visit_Node): Check reference to formal parameter of"}, {"sha": "9b10a38a97d9ec95edd41419bee9c9f707ae6c2a", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=972d29849fc76fea06110ca5b3b3fbce1f9e1fd2", "patch": "@@ -1772,11 +1772,15 @@ package body Repinfo is\n       begin\n          if List_Representation_Info_To_JSON then\n             Write_Line (\",\");\n-            Write_Str (\"  \"\"\" & Attr_Name & \"\"\": \"\"System.\");\n+            Write_Str (\"  \"\"\");\n+            Write_Str (Attr_Name);\n+            Write_Str (\"\"\": \"\"System.\");\n          else\n             Write_Str (\"for \");\n             List_Name (Ent);\n-            Write_Str (\"'\" & Attr_Name & \" use System.\");\n+            Write_Char (''');\n+            Write_Str (Attr_Name);\n+            Write_Str (\" use System.\");\n          end if;\n \n          if Bytes_Big_Endian xor Is_Reversed then\n@@ -1962,10 +1966,8 @@ package body Repinfo is\n    -- Rep_Value --\n    ---------------\n \n-   function Rep_Value\n-     (Val : Node_Ref_Or_Val;\n-      D   : Discrim_List) return Uint\n-   is\n+   function Rep_Value (Val : Node_Ref_Or_Val; D : Discrim_List) return Uint is\n+\n       function B (Val : Boolean) return Uint;\n       --  Returns Uint_0 for False, Uint_1 for True\n "}, {"sha": "feda436dd3c5054a5f1615a8640d16dba2ebd068", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972d29849fc76fea06110ca5b3b3fbce1f9e1fd2/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=972d29849fc76fea06110ca5b3b3fbce1f9e1fd2", "patch": "@@ -379,9 +379,7 @@ package Repinfo is\n    type Discrim_List is array (Pos range <>) of Uint;\n    --  Type used to represent list of discriminant values\n \n-   function Rep_Value\n-     (Val : Node_Ref_Or_Val;\n-      D   : Discrim_List) return Uint;\n+   function Rep_Value (Val : Node_Ref_Or_Val; D : Discrim_List) return Uint;\n    --  Given the contents of a First_Bit_Position or Esize field containing\n    --  a node reference (i.e. a negative Uint value) and D, the list of\n    --  discriminant values, returns the interpreted value of this field."}]}