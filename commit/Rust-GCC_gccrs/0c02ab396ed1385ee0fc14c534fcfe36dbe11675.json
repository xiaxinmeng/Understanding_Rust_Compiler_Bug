{"sha": "0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMwMmFiMzk2ZWQxMzg1ZWUwZmMxNGM1MzRmY2ZlMzZkYmUxMTY3NQ==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2012-08-09T14:08:31Z"}, "committer": {"name": "Andrey Belevantsev", "email": "abel@gcc.gnu.org", "date": "2012-08-09T14:08:31Z"}, "message": "re PR rtl-optimization/53701 (ICE on ia64 (when building Allegro 4.4) in sel-sched)\n\n\n    PR rtl-optimization/53701\n    * sel-sched.c (vinsn_vec_has_expr_p): Clarify function comment.\n    Process not only expr's vinsns but all old vinsns from expr's\n    history of changes.\n    (update_and_record_unavailable_insns): Clarify comment.\n\n    * gcc.dg/pr53701.c: New test.\n\nFrom-SVN: r190253", "tree": {"sha": "a145593be9727c2b55c552211e1c27d86799eb93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a145593be9727c2b55c552211e1c27d86799eb93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c02ab396ed1385ee0fc14c534fcfe36dbe11675/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82ad0aaf6e6d671b8dab3fd9ae3b496f1c70aea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ad0aaf6e6d671b8dab3fd9ae3b496f1c70aea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ad0aaf6e6d671b8dab3fd9ae3b496f1c70aea7"}], "stats": {"total": 124, "additions": 104, "deletions": 20}, "files": [{"sha": "618cba07e7152bbea88cb6bca1f377fe59413db4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c02ab396ed1385ee0fc14c534fcfe36dbe11675/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c02ab396ed1385ee0fc14c534fcfe36dbe11675/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "patch": "@@ -1,3 +1,11 @@\n+2012-08-09  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/53701\n+\t* sel-sched.c (vinsn_vec_has_expr_p): Clarify function comment.\n+\tProcess not only expr's vinsns but all old vinsns from expr's\n+\thistory of changes.\n+\t(update_and_record_unavailable_insns): Clarify comment. \n+\n 2012-08-09  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* reload.c (find_valid_class_1): New static function."}, {"sha": "f0c6eafb6f329000a433d5db2a533c514f8a98af", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c02ab396ed1385ee0fc14c534fcfe36dbe11675/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c02ab396ed1385ee0fc14c534fcfe36dbe11675/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "patch": "@@ -3564,29 +3564,41 @@ process_use_exprs (av_set_t *av_ptr)\n   return NULL;\n }\n \n-/* Lookup EXPR in VINSN_VEC and return TRUE if found.  */\n+/* Lookup EXPR in VINSN_VEC and return TRUE if found.  Also check patterns from\n+   EXPR's history of changes.  */\n static bool\n vinsn_vec_has_expr_p (vinsn_vec_t vinsn_vec, expr_t expr)\n {\n-  vinsn_t vinsn;\n+  vinsn_t vinsn, expr_vinsn;\n   int n;\n+  unsigned i;\n \n-  FOR_EACH_VEC_ELT (vinsn_t, vinsn_vec, n, vinsn)\n-    if (VINSN_SEPARABLE_P (vinsn))\n-      {\n-        if (vinsn_equal_p (vinsn, EXPR_VINSN (expr)))\n-          return true;\n-      }\n-    else\n-      {\n-        /* For non-separable instructions, the blocking insn can have\n-           another pattern due to substitution, and we can't choose\n-           different register as in the above case.  Check all registers\n-           being written instead.  */\n-        if (bitmap_intersect_p (VINSN_REG_SETS (vinsn),\n-                                VINSN_REG_SETS (EXPR_VINSN (expr))))\n-          return true;\n-      }\n+  /* Start with checking expr itself and then proceed with all the old forms\n+     of expr taken from its history vector.  */\n+  for (i = 0, expr_vinsn = EXPR_VINSN (expr);\n+       expr_vinsn;\n+       expr_vinsn = (i < VEC_length (expr_history_def,\n+\t\t\t\t     EXPR_HISTORY_OF_CHANGES (expr))\n+\t\t     ? VEC_index (expr_history_def,\n+\t\t\t\t  EXPR_HISTORY_OF_CHANGES (expr),\n+\t\t\t\t  i++)->old_expr_vinsn\n+\t\t     : NULL))\n+    FOR_EACH_VEC_ELT (vinsn_t, vinsn_vec, n, vinsn)\n+      if (VINSN_SEPARABLE_P (vinsn))\n+\t{\n+\t  if (vinsn_equal_p (vinsn, expr_vinsn))\n+\t    return true;\n+\t}\n+      else\n+\t{\n+\t  /* For non-separable instructions, the blocking insn can have\n+\t     another pattern due to substitution, and we can't choose\n+\t     different register as in the above case.  Check all registers\n+\t     being written instead.  */\n+\t  if (bitmap_intersect_p (VINSN_REG_SETS (vinsn),\n+\t\t\t\t  VINSN_REG_SETS (expr_vinsn)))\n+\t    return true;\n+\t}\n \n   return false;\n }\n@@ -5694,8 +5706,8 @@ update_and_record_unavailable_insns (basic_block book_block)\n               || EXPR_TARGET_AVAILABLE (new_expr)\n \t\t != EXPR_TARGET_AVAILABLE (cur_expr))\n \t    /* Unfortunately, the below code could be also fired up on\n-\t       separable insns.\n-\t       FIXME: add an example of how this could happen.  */\n+\t       separable insns, e.g. when moving insns through the new\n+\t       speculation check as in PR 53701.  */\n             vinsn_vec_add (&vec_bookkeeping_blocked_vinsns, cur_expr);\n         }\n "}, {"sha": "1ac24cdb0b81f6fbc5f7a7871abe5ff7a7e68c10", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c02ab396ed1385ee0fc14c534fcfe36dbe11675/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c02ab396ed1385ee0fc14c534fcfe36dbe11675/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "patch": "@@ -1,3 +1,8 @@\n+2012-08-09  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/53701\n+\t* gcc.dg/pr53701.c: New test. \n+\n 2012-08-09  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* gcc.c-torture/compile/20120727-1.c: New test."}, {"sha": "2c8522381106119d0acedabeb4323eb99ca3cf65", "filename": "gcc/testsuite/gcc.dg/pr53701.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c02ab396ed1385ee0fc14c534fcfe36dbe11675/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53701.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c02ab396ed1385ee0fc14c534fcfe36dbe11675/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53701.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53701.c?ref=0c02ab396ed1385ee0fc14c534fcfe36dbe11675", "patch": "@@ -0,0 +1,59 @@\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O3 -fselective-scheduling2 -fsel-sched-pipelining\" } */\n+typedef unsigned short int uint16_t;\n+typedef unsigned long int uintptr_t;\n+typedef struct GFX_VTABLE\n+{\n+  int color_depth;\n+  unsigned char *line[];\n+}\n+BITMAP;\n+extern int _drawing_mode;\n+extern BITMAP *_drawing_pattern;\n+extern int _drawing_y_anchor;\n+extern unsigned int _drawing_x_mask;\n+extern unsigned int _drawing_y_mask;\n+extern uintptr_t bmp_write_line (BITMAP *, int);\n+  void\n+_linear_hline15 (BITMAP * dst, int dx1, int dy, int dx2, int color)\n+{\n+  int w;\n+  if (_drawing_mode == 0)\n+  {\n+    int x, curw;\n+    unsigned short *sline =\n+      (unsigned short *) (_drawing_pattern->\n+          line[((dy) -\n+            _drawing_y_anchor) & _drawing_y_mask]);\n+    unsigned short *s;\n+    unsigned short *d =\n+      ((unsigned short *) (bmp_write_line (dst, dy)) + (dx1));\n+    s = ((unsigned short *) (sline) + (x));\n+    if (_drawing_mode == 2)\n+    {\n+    }\n+    else if (_drawing_mode == 3)\n+    {\n+      do\n+      {\n+        w -= curw;\n+        do\n+        {\n+          unsigned long c = (*(s));\n+          if (!((unsigned long) (c) == 0x7C1F))\n+          {\n+            (*((uint16_t *) ((uintptr_t) (d))) = ((color)));\n+          }\n+          ((s)++);\n+        }\n+        while (--curw > 0);\n+        s = sline;\n+        curw =\n+          (((w) <\n+            ((int) _drawing_x_mask +\n+             1)) ? (w) : ((int) _drawing_x_mask + 1));\n+      }\n+      while (curw > 0);\n+    }\n+  }\n+}"}]}