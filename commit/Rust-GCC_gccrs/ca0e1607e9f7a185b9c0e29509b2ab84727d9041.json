{"sha": "ca0e1607e9f7a185b9c0e29509b2ab84727d9041", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EwZTE2MDdlOWY3YTE4NWI5YzBlMjk1MDliMmFiODQ3MjdkOTA0MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-29T07:15:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-29T07:15:13Z"}, "message": "re PR bootstrap/77768 (LTO/PGO -O3 bootstrap broken: tree-vrp.c:11053:0: internal compiler error: Segmentation fault)\n\n2016-09-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77768\n\t* tree-ssa-sccvn.c (visit_reference_op_store): Properly deal\n\twith stores to a place we know has a constant value.\n\nFrom-SVN: r240610", "tree": {"sha": "fa9ab167fc391898190ed762ac4ad67bdef24fbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa9ab167fc391898190ed762ac4ad67bdef24fbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca0e1607e9f7a185b9c0e29509b2ab84727d9041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0e1607e9f7a185b9c0e29509b2ab84727d9041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0e1607e9f7a185b9c0e29509b2ab84727d9041", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0e1607e9f7a185b9c0e29509b2ab84727d9041/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6748787813f8080f853766877f6933bc0823c19d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6748787813f8080f853766877f6933bc0823c19d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6748787813f8080f853766877f6933bc0823c19d"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "eac95464ee03bd04df7017eefcd7a90ff582636b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0e1607e9f7a185b9c0e29509b2ab84727d9041/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0e1607e9f7a185b9c0e29509b2ab84727d9041/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca0e1607e9f7a185b9c0e29509b2ab84727d9041", "patch": "@@ -1,3 +1,9 @@\n+2016-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77768\n+\t* tree-ssa-sccvn.c (visit_reference_op_store): Properly deal\n+\twith stores to a place we know has a constant value.\n+\n 2016-09-29  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/sysv4.opt (mgnu-attribute): New option."}, {"sha": "1653d7393dcafed7391c234119c7484eb7a215ca", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0e1607e9f7a185b9c0e29509b2ab84727d9041/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0e1607e9f7a185b9c0e29509b2ab84727d9041/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=ca0e1607e9f7a185b9c0e29509b2ab84727d9041", "patch": "@@ -3575,7 +3575,7 @@ visit_reference_op_store (tree lhs, tree op, gimple *stmt)\n {\n   bool changed = false;\n   vn_reference_t vnresult = NULL;\n-  tree result, assign;\n+  tree assign;\n   bool resultsame = false;\n   tree vuse = gimple_vuse (stmt);\n   tree vdef = gimple_vdef (stmt);\n@@ -3599,9 +3599,11 @@ visit_reference_op_store (tree lhs, tree op, gimple *stmt)\n      Otherwise, the vdefs for the store are used when inserting into\n      the table, since the store generates a new memory state.  */\n \n-  result = vn_reference_lookup (lhs, vuse, VN_NOWALK, &vnresult, false);\n-  if (result)\n+  vn_reference_lookup (lhs, vuse, VN_NOWALK, &vnresult, false);\n+  if (vnresult\n+      && vnresult->result)\n     {\n+      tree result = vnresult->result;\n       if (TREE_CODE (result) == SSA_NAME)\n \tresult = SSA_VAL (result);\n       resultsame = expressions_equal_p (result, op);\n@@ -3616,22 +3618,21 @@ visit_reference_op_store (tree lhs, tree op, gimple *stmt)\n \t}\n     }\n \n-  if ((!result || !resultsame)\n+  if (!resultsame)\n+    {\n       /* Only perform the following when being called from PRE\n \t which embeds tail merging.  */\n-      && default_vn_walk_kind == VN_WALK)\n-    {\n-      assign = build2 (MODIFY_EXPR, TREE_TYPE (lhs), lhs, op);\n-      vn_reference_lookup (assign, vuse, VN_NOWALK, &vnresult, false);\n-      if (vnresult)\n+      if (default_vn_walk_kind == VN_WALK)\n \t{\n-\t  VN_INFO (vdef)->use_processed = true;\n-\t  return set_ssa_val_to (vdef, vnresult->result_vdef);\n+\t  assign = build2 (MODIFY_EXPR, TREE_TYPE (lhs), lhs, op);\n+\t  vn_reference_lookup (assign, vuse, VN_NOWALK, &vnresult, false);\n+\t  if (vnresult)\n+\t    {\n+\t      VN_INFO (vdef)->use_processed = true;\n+\t      return set_ssa_val_to (vdef, vnresult->result_vdef);\n+\t    }\n \t}\n-    }\n \n-  if (!result || !resultsame)\n-    {\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \t{\n \t  fprintf (dump_file, \"No store match\\n\");\n@@ -3644,9 +3645,7 @@ visit_reference_op_store (tree lhs, tree op, gimple *stmt)\n       /* Have to set value numbers before insert, since insert is\n \t going to valueize the references in-place.  */\n       if (vdef)\n-\t{\n-\t  changed |= set_ssa_val_to (vdef, vdef);\n-\t}\n+\tchanged |= set_ssa_val_to (vdef, vdef);\n \n       /* Do not insert structure copies into the tables.  */\n       if (is_gimple_min_invariant (op)"}]}