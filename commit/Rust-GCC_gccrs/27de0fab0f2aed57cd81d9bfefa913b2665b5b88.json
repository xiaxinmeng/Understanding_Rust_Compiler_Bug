{"sha": "27de0fab0f2aed57cd81d9bfefa913b2665b5b88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdkZTBmYWIwZjJhZWQ1N2NkODFkOWJmZWZhOTEzYjI2NjViNWI4OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-02-02T08:55:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-02-02T08:55:44Z"}, "message": "re PR c++/14179 (out of memory while parsing array with many initializers)\n\n2017-02-02  Richard Biener  <rguenther@suse.de>\n\n\tPR cp/14179\n\t* cp-gimplify.c (cp_fold): When folding a CONSTRUCTOR copy\n\tit lazily on the first changed element only and copy it\n\tfully upfront, only storing changed elements.\n\nFrom-SVN: r245118", "tree": {"sha": "f286389cb4d5499e9c0f5c378b920d0b8af7730e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f286389cb4d5499e9c0f5c378b920d0b8af7730e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27de0fab0f2aed57cd81d9bfefa913b2665b5b88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27de0fab0f2aed57cd81d9bfefa913b2665b5b88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27de0fab0f2aed57cd81d9bfefa913b2665b5b88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27de0fab0f2aed57cd81d9bfefa913b2665b5b88/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8d58893e4b12de87af384ec2bc45342e0238ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d58893e4b12de87af384ec2bc45342e0238ce8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8d58893e4b12de87af384ec2bc45342e0238ce8"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "96136af87eb282b284af2b54f8f5e25a6be6293c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27de0fab0f2aed57cd81d9bfefa913b2665b5b88/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27de0fab0f2aed57cd81d9bfefa913b2665b5b88/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=27de0fab0f2aed57cd81d9bfefa913b2665b5b88", "patch": "@@ -1,3 +1,10 @@\n+2017-02-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR cp/14179\n+\t* cp-gimplify.c (cp_fold): When folding a CONSTRUCTOR copy\n+\tit lazily on the first changed element only and copy it\n+\tfully upfront, only storing changed elements.\n+\n 2017-02-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/69637"}, {"sha": "3eec9400fb04aaaf5d81bbf5d3bb48a9a515bcf7", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27de0fab0f2aed57cd81d9bfefa913b2665b5b88/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27de0fab0f2aed57cd81d9bfefa913b2665b5b88/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=27de0fab0f2aed57cd81d9bfefa913b2665b5b88", "patch": "@@ -2358,30 +2358,26 @@ cp_fold (tree x)\n       {\n \tunsigned i;\n \tconstructor_elt *p;\n-\tbool changed = false;\n \tvec<constructor_elt, va_gc> *elts = CONSTRUCTOR_ELTS (x);\n \tvec<constructor_elt, va_gc> *nelts = NULL;\n-\tvec_safe_reserve (nelts, vec_safe_length (elts));\n \tFOR_EACH_VEC_SAFE_ELT (elts, i, p)\n \t  {\n \t    tree op = cp_fold (p->value);\n-\t    constructor_elt e = { p->index, op };\n-\t    nelts->quick_push (e);\n \t    if (op != p->value)\n \t      {\n \t\tif (op == error_mark_node)\n \t\t  {\n \t\t    x = error_mark_node;\n-\t\t    changed = false;\n+\t\t    vec_free (nelts);\n \t\t    break;\n \t\t  }\n-\t\tchanged = true;\n+\t\tif (nelts == NULL)\n+\t\t  nelts = elts->copy ();\n+\t\t(*nelts)[i].value = op;\n \t      }\n \t  }\n-\tif (changed)\n+\tif (nelts)\n \t  x = build_constructor (TREE_TYPE (x), nelts);\n-\telse\n-\t  vec_free (nelts);\n \tbreak;\n       }\n     case TREE_VEC:"}]}