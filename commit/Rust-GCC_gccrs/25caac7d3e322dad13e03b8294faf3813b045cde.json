{"sha": "25caac7d3e322dad13e03b8294faf3813b045cde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVjYWFjN2QzZTMyMmRhZDEzZTAzYjgyOTRmYWYzODEzYjA0NWNkZQ==", "commit": {"author": {"name": "Nathan C. Myers", "email": "ncm@cantrip.org", "date": "2000-05-17T21:52:10Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-05-17T21:52:10Z"}, "message": "It appears that gcc-2.96 supports the keyword \"and\" now.\n\n\n2000-05-16  Nathan C. Myers  <ncm@cantrip.org>\n\n        It appears that gcc-2.96 supports the keyword \"and\" now.\n\t* bits/std_ciso646.h: remove.\n\t* std/ciso646: gut.\n\t* testsuite/17_intro/header_ciso646.c: enable testing.\n\t* src/Makefile.am, src/Makefile.in: remove mention of\n\tbits/std_ciso646.h\n\nFrom-SVN: r33968", "tree": {"sha": "1120df1f4630e03c01ffd97714c145432e2d9601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1120df1f4630e03c01ffd97714c145432e2d9601"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25caac7d3e322dad13e03b8294faf3813b045cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25caac7d3e322dad13e03b8294faf3813b045cde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25caac7d3e322dad13e03b8294faf3813b045cde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25caac7d3e322dad13e03b8294faf3813b045cde/comments", "author": {"login": "ncm", "id": 215047, "node_id": "MDQ6VXNlcjIxNTA0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/215047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncm", "html_url": "https://github.com/ncm", "followers_url": "https://api.github.com/users/ncm/followers", "following_url": "https://api.github.com/users/ncm/following{/other_user}", "gists_url": "https://api.github.com/users/ncm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncm/subscriptions", "organizations_url": "https://api.github.com/users/ncm/orgs", "repos_url": "https://api.github.com/users/ncm/repos", "events_url": "https://api.github.com/users/ncm/events{/privacy}", "received_events_url": "https://api.github.com/users/ncm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "811e551b361a843f2b4eb9fbc29fdd6cd4112001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/811e551b361a843f2b4eb9fbc29fdd6cd4112001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/811e551b361a843f2b4eb9fbc29fdd6cd4112001"}], "stats": {"total": 71, "additions": 0, "deletions": 71}, "files": [{"sha": "4f8935a7001660c536add7d3433c9512296228f6", "filename": "libstdc++-v3/bits/std_ciso646.h", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811e551b361a843f2b4eb9fbc29fdd6cd4112001/libstdc%2B%2B-v3%2Fbits%2Fstd_ciso646.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811e551b361a843f2b4eb9fbc29fdd6cd4112001/libstdc%2B%2B-v3%2Fbits%2Fstd_ciso646.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_ciso646.h?ref=811e551b361a843f2b4eb9fbc29fdd6cd4112001", "patch": "@@ -1,71 +0,0 @@\n-// ciso646 -*- C++ -*-\n-\n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: <ciso646>\n-//\n-\n-#ifndef _CPP_ISO646\n-#define _CPP_ISO646\t1\n-\n-namespace std {\n-\n-  // 2.11 Keywords\n-  // alternative representations\n-  // and, and_eq, bitand, bitor, compl, not, not_eq, or, or_eq, xor, xor_eq\n-\n-#ifndef __cplusplus\n-#define and\t&&\n-#define and_eq\t&=\n-#define bitand\t&\n-#define bitor\t|\n-#define compl\t~\n-#define not\t!\n-#define not_eq\t!=\n-#define or\t||\n-#define or_eq\t|=\n-#define xor\t^\n-#define xor_eq\t^=\n-#endif\n-\n-#if 0\n-  template<typename _T1, typename _T2>\n-    inline bool\n-    operator and(const _T1& __lhs, const _T2& __rhs) \n-    { return (static_cast<bool>(__lhs) && static_cast<bool>(__rhs)); }\n-\n-  template<typename _T1, typename _T2>\n-    inline bool\n-    operator or(const _T1& __lhs, const _T2& __rhs) \n-    { return (static_cast<bool>(__lhs) || static_cast<bool>(__rhs)); }\n-#endif\n-\n-} // namespace std\n-\n-#endif // _CPP_ISO646"}]}