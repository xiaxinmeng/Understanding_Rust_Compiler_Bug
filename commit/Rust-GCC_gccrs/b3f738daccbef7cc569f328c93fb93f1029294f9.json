{"sha": "b3f738daccbef7cc569f328c93fb93f1029294f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNmNzM4ZGFjY2JlZjdjYzU2OWYzMjhjOTNmYjkzZjEwMjkyOTRmOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-05-05T11:50:03Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-05-05T11:50:03Z"}, "message": "decl2.c (start_objects): Don't let static constructors and destructors get inlined.\n\n\t* decl2.c (start_objects): Don't let static constructors and\n\tdestructors get inlined.\n\t* parse.y (nested_name_specifier): Make sure ordinary types are\n\tcomplete, just like template types.\n\t* parse.c: Regenerated.\n\t* pt.c (check_explicit_specialization): Improve error messages.\n\nFrom-SVN: r26780", "tree": {"sha": "9ece9ffaa86e2b05923eb4f447fc6b3868f484ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ece9ffaa86e2b05923eb4f447fc6b3868f484ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3f738daccbef7cc569f328c93fb93f1029294f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f738daccbef7cc569f328c93fb93f1029294f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f738daccbef7cc569f328c93fb93f1029294f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f738daccbef7cc569f328c93fb93f1029294f9/comments", "author": null, "committer": null, "parents": [{"sha": "14caa62fcb42ea2b2c2598155b940e097644d824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14caa62fcb42ea2b2c2598155b940e097644d824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14caa62fcb42ea2b2c2598155b940e097644d824"}], "stats": {"total": 501, "additions": 274, "deletions": 227}, "files": [{"sha": "be5b930e553c6d082f7cfe53d57139c377e848b2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b3f738daccbef7cc569f328c93fb93f1029294f9", "patch": "@@ -1,3 +1,14 @@\n+1999-05-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl2.c (start_objects): Don't let static constructors and\n+\tdestructors get inlined.\n+\n+\t* parse.y (nested_name_specifier): Make sure ordinary types are\n+\tcomplete, just like template types.\n+\t* parse.c: Regenerated.\n+\n+\t* pt.c (check_explicit_specialization): Improve error messages.\n+\n 1999-05-04  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* typeck.c (string_conv_p): Use same_type_p to check whether we"}, {"sha": "90e1dca6c646fca223196e34b9ecad04645d3f4e", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=b3f738daccbef7cc569f328c93fb93f1029294f9", "patch": "@@ -2918,6 +2918,13 @@ start_objects (method_type, initp)\n   clear_last_expr ();\n   push_momentary ();\n   expand_start_bindings (0);\n+\n+  /* We cannot allow these functions to be elided, even if they do not\n+     have external linkage.  And, there's no point in deferring\n+     copmilation of thes functions; they're all going to have to be\n+     out anyhow.  */\n+  current_function_cannot_inline\n+    = \"static constructors and destructors cannot be inlined\";\n }\n \n /* Finish the process of running a particular set of global constructors"}, {"sha": "f5285b3a885558fe35a01634ac68c2bb1c88d828", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 224, "deletions": 223, "changes": 447, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=b3f738daccbef7cc569f328c93fb93f1029294f9", "patch": "@@ -709,30 +709,30 @@ static const short yyrline[] = { 0,\n   2854,  2856,  2858,  2860,  2864,  2867,  2870,  2872,  2874,  2876,\n   2880,  2883,  2886,  2888,  2890,  2892,  2894,  2901,  2905,  2910,\n   2914,  2919,  2921,  2925,  2928,  2930,  2933,  2935,  2936,  2939,\n-  2941,  2943,  2949,  2959,  2965,  2971,  2985,  2987,  2991,  3005,\n-  3007,  3009,  3013,  3019,  3032,  3034,  3038,  3051,  3057,  3059,\n-  3060,  3061,  3069,  3074,  3083,  3084,  3088,  3091,  3097,  3103,\n-  3106,  3108,  3110,  3112,  3116,  3120,  3124,  3127,  3131,  3133,\n-  3142,  3145,  3147,  3149,  3151,  3153,  3155,  3157,  3159,  3163,\n-  3167,  3171,  3175,  3176,  3178,  3180,  3182,  3184,  3186,  3188,\n-  3190,  3192,  3200,  3202,  3203,  3204,  3207,  3213,  3215,  3220,\n-  3222,  3225,  3239,  3242,  3245,  3249,  3252,  3259,  3261,  3264,\n-  3266,  3268,  3271,  3274,  3277,  3280,  3282,  3285,  3289,  3291,\n-  3297,  3299,  3300,  3302,  3307,  3309,  3311,  3313,  3315,  3318,\n-  3319,  3321,  3324,  3325,  3328,  3328,  3331,  3331,  3334,  3334,\n-  3336,  3338,  3340,  3342,  3348,  3354,  3357,  3360,  3366,  3368,\n-  3370,  3374,  3376,  3377,  3378,  3380,  3383,  3390,  3395,  3401,\n-  3405,  3407,  3410,  3412,  3415,  3419,  3421,  3424,  3426,  3429,\n-  3446,  3452,  3460,  3462,  3464,  3468,  3471,  3472,  3480,  3484,\n-  3488,  3491,  3492,  3498,  3501,  3504,  3506,  3510,  3515,  3518,\n-  3528,  3533,  3534,  3541,  3544,  3547,  3549,  3552,  3554,  3564,\n-  3578,  3582,  3585,  3587,  3591,  3595,  3598,  3601,  3603,  3607,\n-  3609,  3616,  3623,  3626,  3630,  3634,  3638,  3644,  3648,  3653,\n-  3655,  3658,  3663,  3669,  3680,  3683,  3685,  3689,  3694,  3696,\n-  3703,  3706,  3708,  3710,  3716,  3721,  3724,  3726,  3728,  3730,\n-  3732,  3734,  3736,  3738,  3740,  3742,  3744,  3746,  3748,  3750,\n-  3752,  3754,  3756,  3758,  3760,  3762,  3764,  3766,  3768,  3770,\n-  3772,  3774,  3776,  3778,  3780,  3782,  3784,  3786,  3789,  3791\n+  2941,  2943,  2949,  2960,  2966,  2972,  2986,  2988,  2992,  3006,\n+  3008,  3010,  3014,  3020,  3033,  3035,  3039,  3052,  3058,  3060,\n+  3061,  3062,  3070,  3075,  3084,  3085,  3089,  3092,  3098,  3104,\n+  3107,  3109,  3111,  3113,  3117,  3121,  3125,  3128,  3132,  3134,\n+  3143,  3146,  3148,  3150,  3152,  3154,  3156,  3158,  3160,  3164,\n+  3168,  3172,  3176,  3177,  3179,  3181,  3183,  3185,  3187,  3189,\n+  3191,  3193,  3201,  3203,  3204,  3205,  3208,  3214,  3216,  3221,\n+  3223,  3226,  3240,  3243,  3246,  3250,  3253,  3260,  3262,  3265,\n+  3267,  3269,  3272,  3275,  3278,  3281,  3283,  3286,  3290,  3292,\n+  3298,  3300,  3301,  3303,  3308,  3310,  3312,  3314,  3316,  3319,\n+  3320,  3322,  3325,  3326,  3329,  3329,  3332,  3332,  3335,  3335,\n+  3337,  3339,  3341,  3343,  3349,  3355,  3358,  3361,  3367,  3369,\n+  3371,  3375,  3377,  3378,  3379,  3381,  3384,  3391,  3396,  3402,\n+  3406,  3408,  3411,  3413,  3416,  3420,  3422,  3425,  3427,  3430,\n+  3447,  3453,  3461,  3463,  3465,  3469,  3472,  3473,  3481,  3485,\n+  3489,  3492,  3493,  3499,  3502,  3505,  3507,  3511,  3516,  3519,\n+  3529,  3534,  3535,  3542,  3545,  3548,  3550,  3553,  3555,  3565,\n+  3579,  3583,  3586,  3588,  3592,  3596,  3599,  3602,  3604,  3608,\n+  3610,  3617,  3624,  3627,  3631,  3635,  3639,  3645,  3649,  3654,\n+  3656,  3659,  3664,  3670,  3681,  3684,  3686,  3690,  3695,  3697,\n+  3704,  3707,  3709,  3711,  3717,  3722,  3725,  3727,  3729,  3731,\n+  3733,  3735,  3737,  3739,  3741,  3743,  3745,  3747,  3749,  3751,\n+  3753,  3755,  3757,  3759,  3761,  3763,  3765,  3767,  3769,  3771,\n+  3773,  3775,  3777,  3779,  3781,  3783,  3785,  3787,  3790,  3792\n };\n #endif\n \n@@ -7216,35 +7216,36 @@ case 643:\n \t\t      yyval.ttype = lastiddecl;\n \t\t      maybe_note_name_used_in_class (yyvsp[-1].ttype, yyval.ttype);\n \t\t    }\n-\t\t  got_scope = yyval.ttype = TYPE_MAIN_VARIANT (TREE_TYPE (yyval.ttype));\n+\t\t  got_scope = yyval.ttype =\n+\t\t    complete_type (TYPE_MAIN_VARIANT (TREE_TYPE (yyval.ttype)));\n \t\t;\n     break;}\n case 644:\n-#line 2960 \"parse.y\"\n+#line 2961 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 645:\n-#line 2966 \"parse.y\"\n+#line 2967 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 646:\n-#line 2972 \"parse.y\"\n+#line 2973 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 648:\n-#line 2988 \"parse.y\"\n+#line 2989 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 649:\n-#line 2993 \"parse.y\"\n+#line 2994 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7259,26 +7260,26 @@ case 649:\n \t\t;\n     break;}\n case 650:\n-#line 3006 \"parse.y\"\n+#line 3007 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 651:\n-#line 3008 \"parse.y\"\n+#line 3009 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 652:\n-#line 3010 \"parse.y\"\n+#line 3011 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 653:\n-#line 3015 \"parse.y\"\n+#line 3016 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 654:\n-#line 3020 \"parse.y\"\n+#line 3021 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7293,15 +7294,15 @@ case 654:\n \t\t;\n     break;}\n case 655:\n-#line 3033 \"parse.y\"\n+#line 3034 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 656:\n-#line 3035 \"parse.y\"\n+#line 3036 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 657:\n-#line 3040 \"parse.y\"\n+#line 3041 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -7315,31 +7316,31 @@ case 657:\n \t\t;\n     break;}\n case 658:\n-#line 3052 \"parse.y\"\n+#line 3053 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 659:\n-#line 3058 \"parse.y\"\n+#line 3059 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 662:\n-#line 3062 \"parse.y\"\n+#line 3063 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 663:\n-#line 3071 \"parse.y\"\n+#line 3072 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 664:\n-#line 3076 \"parse.y\"\n+#line 3077 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7349,156 +7350,156 @@ case 664:\n \t\t;\n     break;}\n case 666:\n-#line 3085 \"parse.y\"\n+#line 3086 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 667:\n-#line 3090 \"parse.y\"\n+#line 3091 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 668:\n-#line 3092 \"parse.y\"\n+#line 3093 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 669:\n-#line 3099 \"parse.y\"\n+#line 3100 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 670:\n-#line 3105 \"parse.y\"\n+#line 3106 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 671:\n-#line 3107 \"parse.y\"\n+#line 3108 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 672:\n-#line 3109 \"parse.y\"\n+#line 3110 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 673:\n-#line 3111 \"parse.y\"\n+#line 3112 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 674:\n-#line 3113 \"parse.y\"\n+#line 3114 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 675:\n-#line 3117 \"parse.y\"\n+#line 3118 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 677:\n-#line 3126 \"parse.y\"\n+#line 3127 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 678:\n-#line 3128 \"parse.y\"\n+#line 3129 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 680:\n-#line 3134 \"parse.y\"\n+#line 3135 \"parse.y\"\n {\n \t\t  /* Provide support for '(' attributes '*' declarator ')'\n \t\t     etc */\n \t\t  yyval.ttype = decl_tree_cons (yyvsp[-1].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 681:\n-#line 3144 \"parse.y\"\n+#line 3145 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 682:\n-#line 3146 \"parse.y\"\n+#line 3147 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 683:\n-#line 3148 \"parse.y\"\n+#line 3149 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 684:\n-#line 3150 \"parse.y\"\n+#line 3151 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 685:\n-#line 3152 \"parse.y\"\n+#line 3153 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 686:\n-#line 3154 \"parse.y\"\n+#line 3155 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 687:\n-#line 3156 \"parse.y\"\n+#line 3157 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 688:\n-#line 3158 \"parse.y\"\n+#line 3159 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 689:\n-#line 3160 \"parse.y\"\n+#line 3161 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 690:\n-#line 3164 \"parse.y\"\n+#line 3165 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 692:\n-#line 3173 \"parse.y\"\n+#line 3174 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 694:\n-#line 3177 \"parse.y\"\n+#line 3178 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 695:\n-#line 3179 \"parse.y\"\n+#line 3180 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 696:\n-#line 3181 \"parse.y\"\n+#line 3182 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 697:\n-#line 3183 \"parse.y\"\n+#line 3184 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 698:\n-#line 3185 \"parse.y\"\n+#line 3186 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 699:\n-#line 3187 \"parse.y\"\n+#line 3188 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 700:\n-#line 3189 \"parse.y\"\n+#line 3190 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 701:\n-#line 3191 \"parse.y\"\n+#line 3192 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 702:\n-#line 3193 \"parse.y\"\n+#line 3194 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 709:\n-#line 3216 \"parse.y\"\n+#line 3217 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 712:\n-#line 3227 \"parse.y\"\n+#line 3228 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7509,266 +7510,266 @@ case 712:\n \t\t;\n     break;}\n case 713:\n-#line 3241 \"parse.y\"\n+#line 3242 \"parse.y\"\n {;\n     break;}\n case 715:\n-#line 3247 \"parse.y\"\n+#line 3248 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 716:\n-#line 3249 \"parse.y\"\n+#line 3250 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 717:\n-#line 3254 \"parse.y\"\n+#line 3255 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 718:\n-#line 3259 \"parse.y\"\n+#line 3260 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 719:\n-#line 3261 \"parse.y\"\n+#line 3262 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 721:\n-#line 3266 \"parse.y\"\n+#line 3267 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 722:\n-#line 3268 \"parse.y\"\n+#line 3269 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 723:\n-#line 3273 \"parse.y\"\n+#line 3274 \"parse.y\"\n {;\n     break;}\n case 725:\n-#line 3279 \"parse.y\"\n+#line 3280 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 726:\n-#line 3281 \"parse.y\"\n+#line 3282 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 727:\n-#line 3283 \"parse.y\"\n+#line 3284 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 728:\n-#line 3285 \"parse.y\"\n+#line 3286 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 729:\n-#line 3290 \"parse.y\"\n+#line 3291 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 730:\n-#line 3292 \"parse.y\"\n+#line 3293 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 731:\n-#line 3297 \"parse.y\"\n+#line 3298 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 732:\n-#line 3299 \"parse.y\"\n+#line 3300 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 733:\n-#line 3301 \"parse.y\"\n+#line 3302 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 734:\n-#line 3303 \"parse.y\"\n+#line 3304 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 735:\n-#line 3308 \"parse.y\"\n+#line 3309 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 736:\n-#line 3310 \"parse.y\"\n+#line 3311 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 737:\n-#line 3312 \"parse.y\"\n+#line 3313 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 738:\n-#line 3314 \"parse.y\"\n+#line 3315 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 739:\n-#line 3316 \"parse.y\"\n+#line 3317 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 740:\n-#line 3318 \"parse.y\"\n+#line 3319 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 741:\n-#line 3320 \"parse.y\"\n+#line 3321 \"parse.y\"\n { begin_switch_stmt (); ;\n     break;}\n case 742:\n-#line 3322 \"parse.y\"\n+#line 3323 \"parse.y\"\n { yyval.ttype = finish_switch_cond (yyvsp[-1].ttype); ;\n     break;}\n case 743:\n-#line 3324 \"parse.y\"\n+#line 3325 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 744:\n-#line 3326 \"parse.y\"\n+#line 3327 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 746:\n-#line 3329 \"parse.y\"\n+#line 3330 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 748:\n-#line 3332 \"parse.y\"\n+#line 3333 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 750:\n-#line 3335 \"parse.y\"\n+#line 3336 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 751:\n-#line 3337 \"parse.y\"\n+#line 3338 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 752:\n-#line 3339 \"parse.y\"\n+#line 3340 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 753:\n-#line 3341 \"parse.y\"\n+#line 3342 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 754:\n-#line 3343 \"parse.y\"\n+#line 3344 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 755:\n-#line 3349 \"parse.y\"\n+#line 3350 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 756:\n-#line 3355 \"parse.y\"\n+#line 3356 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 757:\n-#line 3359 \"parse.y\"\n+#line 3360 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 758:\n-#line 3361 \"parse.y\"\n+#line 3362 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 759:\n-#line 3367 \"parse.y\"\n+#line 3368 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 760:\n-#line 3369 \"parse.y\"\n+#line 3370 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 761:\n-#line 3371 \"parse.y\"\n+#line 3372 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 762:\n-#line 3375 \"parse.y\"\n+#line 3376 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 765:\n-#line 3379 \"parse.y\"\n+#line 3380 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 767:\n-#line 3385 \"parse.y\"\n+#line 3386 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 768:\n-#line 3391 \"parse.y\"\n+#line 3392 \"parse.y\"\n { \n                   expand_start_all_catch (); \n                 ;\n     break;}\n case 769:\n-#line 3395 \"parse.y\"\n+#line 3396 \"parse.y\"\n {\n \t\t  expand_end_all_catch ();\n \t\t  yyval.itype = yyvsp[-3].itype;\n \t\t;\n     break;}\n case 770:\n-#line 3403 \"parse.y\"\n+#line 3404 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 771:\n-#line 3405 \"parse.y\"\n+#line 3406 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 772:\n-#line 3407 \"parse.y\"\n+#line 3408 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 775:\n-#line 3417 \"parse.y\"\n+#line 3418 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 776:\n-#line 3419 \"parse.y\"\n+#line 3420 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 777:\n-#line 3421 \"parse.y\"\n+#line 3422 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 780:\n-#line 3431 \"parse.y\"\n+#line 3432 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 781:\n-#line 3447 \"parse.y\"\n+#line 3448 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 782:\n-#line 3454 \"parse.y\"\n+#line 3455 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7777,98 +7778,98 @@ case 782:\n \t\t;\n     break;}\n case 783:\n-#line 3461 \"parse.y\"\n+#line 3462 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 784:\n-#line 3463 \"parse.y\"\n+#line 3464 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 785:\n-#line 3465 \"parse.y\"\n+#line 3466 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 786:\n-#line 3470 \"parse.y\"\n+#line 3471 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 788:\n-#line 3473 \"parse.y\"\n+#line 3474 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 789:\n-#line 3482 \"parse.y\"\n+#line 3483 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 790:\n-#line 3485 \"parse.y\"\n+#line 3486 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 791:\n-#line 3490 \"parse.y\"\n+#line 3491 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 793:\n-#line 3493 \"parse.y\"\n+#line 3494 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 794:\n-#line 3500 \"parse.y\"\n+#line 3501 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 797:\n-#line 3507 \"parse.y\"\n+#line 3508 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 798:\n-#line 3512 \"parse.y\"\n+#line 3513 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 799:\n-#line 3517 \"parse.y\"\n+#line 3518 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 800:\n-#line 3519 \"parse.y\"\n+#line 3520 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 801:\n-#line 3530 \"parse.y\"\n+#line 3531 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 803:\n-#line 3535 \"parse.y\"\n+#line 3536 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 804:\n-#line 3543 \"parse.y\"\n+#line 3544 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 805:\n-#line 3545 \"parse.y\"\n+#line 3546 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 806:\n-#line 3548 \"parse.y\"\n+#line 3549 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 807:\n-#line 3550 \"parse.y\"\n+#line 3551 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 808:\n-#line 3553 \"parse.y\"\n+#line 3554 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 809:\n-#line 3555 \"parse.y\"\n+#line 3556 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7880,7 +7881,7 @@ case 809:\n \t\t;\n     break;}\n case 810:\n-#line 3565 \"parse.y\"\n+#line 3566 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7893,99 +7894,99 @@ case 810:\n \t\t;\n     break;}\n case 811:\n-#line 3580 \"parse.y\"\n+#line 3581 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 812:\n-#line 3582 \"parse.y\"\n+#line 3583 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 815:\n-#line 3593 \"parse.y\"\n+#line 3594 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 816:\n-#line 3596 \"parse.y\"\n+#line 3597 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 817:\n-#line 3599 \"parse.y\"\n+#line 3600 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 818:\n-#line 3602 \"parse.y\"\n+#line 3603 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 819:\n-#line 3604 \"parse.y\"\n+#line 3605 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 821:\n-#line 3610 \"parse.y\"\n+#line 3611 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 822:\n-#line 3620 \"parse.y\"\n+#line 3621 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 823:\n-#line 3624 \"parse.y\"\n+#line 3625 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 824:\n-#line 3627 \"parse.y\"\n+#line 3628 \"parse.y\"\n { yyval.ftype.t = build_tree_list (build_decl_list (NULL_TREE, yyvsp[-1].ftype.t),\n \t\t\t\t\t  yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 825:\n-#line 3631 \"parse.y\"\n+#line 3632 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 826:\n-#line 3635 \"parse.y\"\n+#line 3636 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 827:\n-#line 3639 \"parse.y\"\n+#line 3640 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 828:\n-#line 3646 \"parse.y\"\n+#line 3647 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 829:\n-#line 3649 \"parse.y\"\n+#line 3650 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 832:\n-#line 3660 \"parse.y\"\n+#line 3661 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 833:\n-#line 3665 \"parse.y\"\n+#line 3666 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 834:\n-#line 3670 \"parse.y\"\n+#line 3671 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7996,188 +7997,188 @@ case 834:\n \t\t;\n     break;}\n case 835:\n-#line 3682 \"parse.y\"\n+#line 3683 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 836:\n-#line 3684 \"parse.y\"\n+#line 3685 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 837:\n-#line 3686 \"parse.y\"\n+#line 3687 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 838:\n-#line 3691 \"parse.y\"\n+#line 3692 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 840:\n-#line 3697 \"parse.y\"\n+#line 3698 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 841:\n-#line 3705 \"parse.y\"\n+#line 3706 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 842:\n-#line 3707 \"parse.y\"\n+#line 3708 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 843:\n-#line 3709 \"parse.y\"\n+#line 3710 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 844:\n-#line 3711 \"parse.y\"\n+#line 3712 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 845:\n-#line 3718 \"parse.y\"\n+#line 3719 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 846:\n-#line 3723 \"parse.y\"\n+#line 3724 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 847:\n-#line 3725 \"parse.y\"\n+#line 3726 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 848:\n-#line 3727 \"parse.y\"\n+#line 3728 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 849:\n-#line 3729 \"parse.y\"\n+#line 3730 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 850:\n-#line 3731 \"parse.y\"\n+#line 3732 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 851:\n-#line 3733 \"parse.y\"\n+#line 3734 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 852:\n-#line 3735 \"parse.y\"\n+#line 3736 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 853:\n-#line 3737 \"parse.y\"\n+#line 3738 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 854:\n-#line 3739 \"parse.y\"\n+#line 3740 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 855:\n-#line 3741 \"parse.y\"\n+#line 3742 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 856:\n-#line 3743 \"parse.y\"\n+#line 3744 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 857:\n-#line 3745 \"parse.y\"\n+#line 3746 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 858:\n-#line 3747 \"parse.y\"\n+#line 3748 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 859:\n-#line 3749 \"parse.y\"\n+#line 3750 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 860:\n-#line 3751 \"parse.y\"\n+#line 3752 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 861:\n-#line 3753 \"parse.y\"\n+#line 3754 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 862:\n-#line 3755 \"parse.y\"\n+#line 3756 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 863:\n-#line 3757 \"parse.y\"\n+#line 3758 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 864:\n-#line 3759 \"parse.y\"\n+#line 3760 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 865:\n-#line 3761 \"parse.y\"\n+#line 3762 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 866:\n-#line 3763 \"parse.y\"\n+#line 3764 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 867:\n-#line 3765 \"parse.y\"\n+#line 3766 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 868:\n-#line 3767 \"parse.y\"\n+#line 3768 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 869:\n-#line 3769 \"parse.y\"\n+#line 3770 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 870:\n-#line 3771 \"parse.y\"\n+#line 3772 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 871:\n-#line 3773 \"parse.y\"\n+#line 3774 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 872:\n-#line 3775 \"parse.y\"\n+#line 3776 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 873:\n-#line 3777 \"parse.y\"\n+#line 3778 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 874:\n-#line 3779 \"parse.y\"\n+#line 3780 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 875:\n-#line 3781 \"parse.y\"\n+#line 3782 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 876:\n-#line 3783 \"parse.y\"\n+#line 3784 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 877:\n-#line 3785 \"parse.y\"\n+#line 3786 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 878:\n-#line 3787 \"parse.y\"\n+#line 3788 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 879:\n-#line 3790 \"parse.y\"\n+#line 3791 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 880:\n-#line 3792 \"parse.y\"\n+#line 3793 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8378,7 +8379,7 @@ case 880:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3795 \"parse.y\"\n+#line 3796 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "677730ca33641040940f8441f15f799a18426944", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=b3f738daccbef7cc569f328c93fb93f1029294f9", "patch": "@@ -2954,7 +2954,8 @@ nested_name_specifier_1:\n \t\t      $$ = lastiddecl;\n \t\t      maybe_note_name_used_in_class ($1, $$);\n \t\t    }\n-\t\t  got_scope = $$ = TYPE_MAIN_VARIANT (TREE_TYPE ($$));\n+\t\t  got_scope = $$ =\n+\t\t    complete_type (TYPE_MAIN_VARIANT (TREE_TYPE ($$)));\n \t\t}\n \t| SELFNAME SCOPE\n \t\t{"}, {"sha": "6731621081309a907732bd961c36ee9435b14e99", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b3f738daccbef7cc569f328c93fb93f1029294f9", "patch": "@@ -1429,9 +1429,8 @@ check_explicit_specialization (declarator, decl, template_count, flags)\n \t      \n \t  if (fns == NULL_TREE) \n \t    {\n-\t      cp_error (\"no member function `%s' declared in `%T'\",\n-\t\t\tIDENTIFIER_POINTER (name),\n-\t\t\tctype);\n+\t      cp_error (\"no member function `%D' declared in `%T'\",\n+\t\t\tname, ctype);\n \t      return error_mark_node;\n \t    }\n \t  else"}, {"sha": "1213a5c56223164d4f209a2e18f3ee5e851da6ab", "filename": "gcc/testsuite/g++.old-deja/g++.other/init13.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit13.C?ref=b3f738daccbef7cc569f328c93fb93f1029294f9", "patch": "@@ -0,0 +1,13 @@\n+// Build don't run:\n+// Special g++ Options: -O3\n+// Origin: Gabriel Dos_Reis <Gabriel.Dos_Reis@sophia.inria.fr>\n+\n+void f() {}\n+\n+struct X {\n+    ~X() { f (); }\n+};\n+\n+X x;\n+\n+int main () {}"}, {"sha": "ce52b4e5ceaa520d480e7a99460d7571d1b1d14b", "filename": "gcc/testsuite/g++.old-deja/g++.pt/nested2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnested2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f738daccbef7cc569f328c93fb93f1029294f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnested2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnested2.C?ref=b3f738daccbef7cc569f328c93fb93f1029294f9", "patch": "@@ -0,0 +1,15 @@\n+// Build don't link:\n+// Origin: Mathias Doreille <Mathias.Doreille@imag.fr>\n+\n+template<class T>\n+struct  a {\n+  struct b {\n+    T operator()();\n+  };\n+};\n+\n+\n+template<class T>\n+T a<T>::b::operator()() { return T(0); }\n+\n+template<> int a<int>::b::operator()() { return 1; }"}]}