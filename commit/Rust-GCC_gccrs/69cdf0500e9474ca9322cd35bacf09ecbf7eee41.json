{"sha": "69cdf0500e9474ca9322cd35bacf09ecbf7eee41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjljZGYwNTAwZTk0NzRjYTkzMjJjZDM1YmFjZjA5ZWNiZjdlZWU0MQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-02-06T19:37:24Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-02-06T19:37:24Z"}, "message": "re PR other/7549 (gcc3.1: Documentation glitches in info-files)\n\n\tPR other/7549\n\t* doc/invoke.texi: Mention for each option included in -Wall that\n\tit is included in -Wall.\n\t* doc/gcc.texi: Update copyright and last modification date.\n\nFrom-SVN: r94682", "tree": {"sha": "e0256a22d242666b355aaa8b793f8d53da3a0df9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0256a22d242666b355aaa8b793f8d53da3a0df9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69cdf0500e9474ca9322cd35bacf09ecbf7eee41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69cdf0500e9474ca9322cd35bacf09ecbf7eee41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69cdf0500e9474ca9322cd35bacf09ecbf7eee41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69cdf0500e9474ca9322cd35bacf09ecbf7eee41/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3520b7452c46c56f64697dcdad55160cdf947d39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3520b7452c46c56f64697dcdad55160cdf947d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3520b7452c46c56f64697dcdad55160cdf947d39"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "ec56bf52c5494baf571dca76cfcd644204967add", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69cdf0500e9474ca9322cd35bacf09ecbf7eee41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69cdf0500e9474ca9322cd35bacf09ecbf7eee41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69cdf0500e9474ca9322cd35bacf09ecbf7eee41", "patch": "@@ -1,3 +1,10 @@\n+2005-02-06  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR other/7549\n+\t* doc/invoke.texi: Mention for each option included in -Wall that\n+\tit is included in -Wall.\n+\t* doc/gcc.texi: Update copyright and last modification date.\n+\n 2005-02-06  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-ssa-loop-ivopts.c (rewrite_use_nonlinear_expr): Do not add"}, {"sha": "413340cc6ad0e30b6dcf111bc05902cd48b9657d", "filename": "gcc/doc/gcc.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69cdf0500e9474ca9322cd35bacf09ecbf7eee41/gcc%2Fdoc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69cdf0500e9474ca9322cd35bacf09ecbf7eee41/gcc%2Fdoc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.texi?ref=69cdf0500e9474ca9322cd35bacf09ecbf7eee41", "patch": "@@ -41,7 +41,7 @@\n \n @copying\n Copyright @copyright{} 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2 or\n@@ -79,7 +79,7 @@ This file documents the use of the GNU compilers.\n @sp 2\n @center by Richard M. Stallman and the GCC Developer Community\n @sp 3\n-@center Last updated 23 May 2004\n+@center Last updated 6 February 2005\n @sp 1\n \n @center for GCC @value{version-GCC}"}, {"sha": "47d793abfe332048bc45098fa6cf5de7ff253f57", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69cdf0500e9474ca9322cd35bacf09ecbf7eee41/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69cdf0500e9474ca9322cd35bacf09ecbf7eee41/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=69cdf0500e9474ca9322cd35bacf09ecbf7eee41", "patch": "@@ -2166,11 +2166,13 @@ Inhibit warning messages about the use of @samp{#import}.\n Warn if an array subscript has type @code{char}.  This is a common cause\n of error, as programmers often forget that this type is signed on some\n machines.\n+This warning is enabled by @option{-Wall}.\n \n @item -Wcomment\n @opindex Wcomment\n Warn whenever a comment-start sequence @samp{/*} appears in a @samp{/*}\n comment, or whenever a Backslash-Newline appears in a @samp{//} comment.\n+This warning is enabled by @option{-Wall}.\n \n @item -Wfatal-errors\n @opindex Wfatal-errors\n@@ -2291,6 +2293,7 @@ int f()\n @item -Wimplicit-int\n @opindex Wimplicit-int\n Warn when a declaration does not specify a type.\n+This warning is enabled by @option{-Wall}.\n \n @item -Wimplicit-function-declaration\n @itemx -Werror-implicit-function-declaration\n@@ -2299,16 +2302,19 @@ Warn when a declaration does not specify a type.\n Give a warning (or error) whenever a function is used before being\n declared.  The form @option{-Wno-error-implicit-function-declaration}\n is not supported.\n+This warning is enabled by @option{-Wall} (as a warning, not an error).\n \n @item -Wimplicit\n @opindex Wimplicit\n Same as @option{-Wimplicit-int} and @option{-Wimplicit-function-declaration}.\n+This warning is enabled by @option{-Wall}.\n \n @item -Wmain\n @opindex Wmain\n Warn if the type of @samp{main} is suspicious.  @samp{main} should be a\n function with external linkage, returning int, taking either zero\n arguments, two, or three arguments of appropriate types.\n+This warning is enabled by @option{-Wall}.\n \n @item -Wmissing-braces\n @opindex Wmissing-braces\n@@ -2321,6 +2327,8 @@ int a[2][2] = @{ 0, 1, 2, 3 @};\n int b[2][2] = @{ @{ 0, 1 @}, @{ 2, 3 @} @};\n @end smallexample\n \n+This warning is enabled by @option{-Wall}.\n+\n @item -Wmissing-include-dirs @r{(C, C++, Objective-C and Objective-C++ only)}\n @opindex Wmissing-include-dirs\n Warn if a user-supplied include directory does not exist.\n@@ -2377,6 +2385,8 @@ the enclosing @code{if}.  The resulting code would look like this:\n @end group\n @end smallexample\n \n+This warning is enabled by @option{-Wall}.\n+\n @item -Wsequence-point\n @opindex Wsequence-point\n Warn about code that may have undefined semantics because of violations\n@@ -2423,6 +2433,8 @@ Links to discussions of the problem, including proposed formal\n definitions, may be found on the GCC readings page, at\n @w{@uref{http://gcc.gnu.org/readings.html}}.\n \n+This warning is enabled by @option{-Wall}.\n+\n @item -Wreturn-type\n @opindex Wreturn-type\n Warn whenever a function is defined with a return-type that defaults to\n@@ -2439,13 +2451,16 @@ For C++, a function without return type always produces a diagnostic\n message, even when @option{-Wno-return-type} is specified.  The only\n exceptions are @samp{main} and functions defined in system headers.\n \n+This warning is enabled by @option{-Wall}.\n+\n @item -Wswitch\n @opindex Wswitch\n Warn whenever a @code{switch} statement has an index of enumerated type\n and lacks a @code{case} for one or more of the named codes of that\n enumeration.  (The presence of a @code{default} label prevents this\n warning.)  @code{case} labels outside the enumeration range also\n provoke warnings when this option is used.\n+This warning is enabled by @option{-Wall}.\n \n @item -Wswitch-default\n @opindex Wswitch-switch\n@@ -2463,15 +2478,18 @@ provoke warnings when this option is used.\n @opindex Wtrigraphs\n Warn if any trigraphs are encountered that might change the meaning of\n the program (trigraphs within comments are not warned about).\n+This warning is enabled by @option{-Wall}.\n \n @item -Wunused-function\n @opindex Wunused-function\n Warn whenever a static function is declared but not defined or a\n non\\-inline static function is unused.\n+This warning is enabled by @option{-Wall}.\n \n @item -Wunused-label\n @opindex Wunused-label\n Warn whenever a label is declared but not used.\n+This warning is enabled by @option{-Wall}.\n \n To suppress this warning use the @samp{unused} attribute\n (@pxref{Variable Attributes}).\n@@ -2487,13 +2505,15 @@ To suppress this warning use the @samp{unused} attribute\n @opindex Wunused-variable\n Warn whenever a local variable or non-constant static variable is unused\n aside from its declaration\n+This warning is enabled by @option{-Wall}.\n \n To suppress this warning use the @samp{unused} attribute\n (@pxref{Variable Attributes}).\n \n @item -Wunused-value\n @opindex Wunused-value\n Warn whenever a statement computes a result that is explicitly not used.\n+This warning is enabled by @option{-Wall}.\n \n To suppress this warning cast the expression to @samp{void}.\n \n@@ -2583,6 +2603,8 @@ Some spurious warnings can be avoided if you declare all the functions\n you use that never return as @code{noreturn}.  @xref{Function\n Attributes}.\n \n+This warning is enabled by @option{-Wall}.\n+\n @item -Wunknown-pragmas\n @opindex Wunknown-pragmas\n @cindex warning for unknown pragmas"}]}