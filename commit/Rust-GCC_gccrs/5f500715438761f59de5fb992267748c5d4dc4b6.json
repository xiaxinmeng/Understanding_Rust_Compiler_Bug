{"sha": "5f500715438761f59de5fb992267748c5d4dc4b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY1MDA3MTU0Mzg3NjFmNTlkZTVmYjk5MjI2Nzc0OGM1ZDRkYzRiNg==", "commit": {"author": {"name": "Paul A. Clarke", "email": "pc@us.ibm.com", "date": "2021-07-06T22:31:21Z"}, "committer": {"name": "Paul A. Clarke", "email": "pc@us.ibm.com", "date": "2021-07-30T21:53:39Z"}, "message": "rs6000: Add support for SSE4.1 \"floor\" intrinsics\n\n2021-07-30  Paul A. Clarke  <pc@us.ibm.com>\n\ngcc\n\t* config/rs6000/smmintrin.h (_mm_floor_pd, _mm_floor_ps,\n\t_mm_floor_sd, _mm_floor_ss): New.", "tree": {"sha": "13de55c4b6d3f21bcdbbc0f14a7ba90b4a4bf34a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13de55c4b6d3f21bcdbbc0f14a7ba90b4a4bf34a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f500715438761f59de5fb992267748c5d4dc4b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f500715438761f59de5fb992267748c5d4dc4b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f500715438761f59de5fb992267748c5d4dc4b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f500715438761f59de5fb992267748c5d4dc4b6/comments", "author": {"login": "ThinkOpenly", "id": 12301795, "node_id": "MDQ6VXNlcjEyMzAxNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/12301795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkOpenly", "html_url": "https://github.com/ThinkOpenly", "followers_url": "https://api.github.com/users/ThinkOpenly/followers", "following_url": "https://api.github.com/users/ThinkOpenly/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkOpenly/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkOpenly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkOpenly/subscriptions", "organizations_url": "https://api.github.com/users/ThinkOpenly/orgs", "repos_url": "https://api.github.com/users/ThinkOpenly/repos", "events_url": "https://api.github.com/users/ThinkOpenly/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkOpenly/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThinkOpenly", "id": 12301795, "node_id": "MDQ6VXNlcjEyMzAxNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/12301795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkOpenly", "html_url": "https://github.com/ThinkOpenly", "followers_url": "https://api.github.com/users/ThinkOpenly/followers", "following_url": "https://api.github.com/users/ThinkOpenly/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkOpenly/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkOpenly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkOpenly/subscriptions", "organizations_url": "https://api.github.com/users/ThinkOpenly/orgs", "repos_url": "https://api.github.com/users/ThinkOpenly/repos", "events_url": "https://api.github.com/users/ThinkOpenly/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkOpenly/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d656a3d3ce88d402a14e8c120f1b0e78a3979deb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d656a3d3ce88d402a14e8c120f1b0e78a3979deb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d656a3d3ce88d402a14e8c120f1b0e78a3979deb"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "0145b9229a6767b05cfd4c003fcf43ebaa6e6aec", "filename": "gcc/config/rs6000/smmintrin.h", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f500715438761f59de5fb992267748c5d4dc4b6/gcc%2Fconfig%2Frs6000%2Fsmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f500715438761f59de5fb992267748c5d4dc4b6/gcc%2Fconfig%2Frs6000%2Fsmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsmmintrin.h?ref=5f500715438761f59de5fb992267748c5d4dc4b6", "patch": "@@ -248,6 +248,22 @@ _mm_ceil_sd (__m128d __A, __m128d __B)\n   return (__m128d) __r;\n }\n \n+__inline __m128d\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_floor_pd (__m128d __A)\n+{\n+  return (__m128d) vec_floor ((__v2df) __A);\n+}\n+\n+__inline __m128d\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_floor_sd (__m128d __A, __m128d __B)\n+{\n+  __v2df __r = vec_floor ((__v2df) __B);\n+  __r[1] = ((__v2df) __A)[1];\n+  return (__m128d) __r;\n+}\n+\n __inline __m128\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_ceil_ps (__m128 __A)\n@@ -264,4 +280,20 @@ _mm_ceil_ss (__m128 __A, __m128 __B)\n   return __r;\n }\n \n+__inline __m128\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_floor_ps (__m128 __A)\n+{\n+  return (__m128) vec_floor ((__v4sf) __A);\n+}\n+\n+__inline __m128\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_floor_ss (__m128 __A, __m128 __B)\n+{\n+  __v4sf __r = (__v4sf) __A;\n+  __r[0] = __builtin_floor (((__v4sf) __B)[0]);\n+  return __r;\n+}\n+\n #endif"}]}