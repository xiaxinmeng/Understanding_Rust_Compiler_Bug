{"sha": "b7a0332ccd21c04a37535c97f04abc4bc28fb321", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdhMDMzMmNjZDIxYzA0YTM3NTM1Yzk3ZjA0YWJjNGJjMjhmYjMyMQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-06-20T19:15:58Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-06-20T19:15:58Z"}, "message": "[objective-c/c++, testsuite] Fix stubify tests for -fnext-runtime.\n\nThese tests were broken in the first place, and more broken following\nthe change to drop pic symbol stubs unless the linker needs them.\n\nFixed to work for x86 as well as powerpc and amended the options to\nforce pic symbol stubs on.\n\ngcc/testsuite/\n\n2019-06-20  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* obj-c++.dg/stubify-1.mm: Adjust options and scan-asm checks.\n\t* obj-c++.dg/stubify-2.mm: Likewise.\n\t* objc.dg/stubify-1.m: Likewise.\n\t* objc.dg/stubify-2.m: Likewise.\n\nFrom-SVN: r272518", "tree": {"sha": "75fcf28505119a6c8e5854919e350681c5501d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75fcf28505119a6c8e5854919e350681c5501d40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7a0332ccd21c04a37535c97f04abc4bc28fb321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7a0332ccd21c04a37535c97f04abc4bc28fb321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7a0332ccd21c04a37535c97f04abc4bc28fb321", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7a0332ccd21c04a37535c97f04abc4bc28fb321/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91bed1a15a6dfb891b9658532b49f9488b5537f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91bed1a15a6dfb891b9658532b49f9488b5537f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91bed1a15a6dfb891b9658532b49f9488b5537f4"}], "stats": {"total": 53, "additions": 36, "deletions": 17}, "files": [{"sha": "a3c2205da53dd1c44eba58dd953640fcfd023818", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7a0332ccd21c04a37535c97f04abc4bc28fb321", "patch": "@@ -1,3 +1,10 @@\n+2019-06-20  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* obj-c++.dg/stubify-1.mm: Adjust options and scan-asm checks.\n+\t* obj-c++.dg/stubify-2.mm: Likewise.\n+\t* objc.dg/stubify-1.m: Likewise.\n+\t* objc.dg/stubify-2.m: Likewise.\n+\n 2019-06-20  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/87512"}, {"sha": "b82167e5e7c689e67adcf69d4e1e95ab2fa66f0d", "filename": "gcc/testsuite/obj-c++.dg/stubify-1.mm", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-1.mm?ref=b7a0332ccd21c04a37535c97f04abc4bc28fb321", "patch": "@@ -4,7 +4,7 @@\n /* { dg-do compile { target *-*-darwin* } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-options \"-Os -mdynamic-no-pic -fno-exceptions -mmacosx-version-min=10.4\" } */\n+/* { dg-options \"-Os -mdynamic-no-pic -fno-exceptions -mmacosx-version-min=10.4 -mpic-symbol-stubs\" } */\n \n typedef struct objc_object { } *id ;\n int x = 41 ;\n@@ -32,8 +32,8 @@ - (void)willEndCloseSheet:(void *)sheet returnCode:(int)returnCode contextInfo:(\n }\n @end\n \n-/* { dg-final { scan-assembler-not \"\\(bl|call\\)\\[ \\t\\]+_objc_msgSend\\n\" } } */\n-/* { dg-final { scan-assembler     \"\\(bl|call\\)\\[ \\t\\]+L_objc_msgSend\\\\\\$stub\\n\" } } */\n-/* { dg-final { scan-assembler-not \"\\(bl|call\\)\\[ \\t\\]+_bogonic\\n\" } } */\n-/* { dg-final { scan-assembler     \"\\(bl|call\\)\\[ \\t\\]+L_bogonic\\\\\\$stub\\n\" } } */\n-/* { dg-final { scan-assembler-not \"\\\\\\$non_lazy_ptr\" } } */\n+/* { dg-final { scan-assembler-not {(bl|call)[ \\t]+_objc_msgSend\\n} } } */\n+/* { dg-final { scan-assembler     {(bl|call)[ \\t]+L_objc_msgSend\\$stub\\n} } } */\n+/* { dg-final { scan-assembler-not {(bl|call)[ \\t]+_bogonic\\n} } } */\n+/* { dg-final { scan-assembler     {(bl|call)[ \\t]+L_bogonic\\$stub\\n} } } */\n+/* { dg-final { scan-assembler-not {\\$non_lazy_ptr} } } */"}, {"sha": "ee8e342c5f59ea71adc8fac076c9e26616e5d1c7", "filename": "gcc/testsuite/obj-c++.dg/stubify-2.mm", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-2.mm?ref=b7a0332ccd21c04a37535c97f04abc4bc28fb321", "patch": "@@ -4,7 +4,7 @@\n /* { dg-do compile { target *-*-darwin* } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-options \"-mdynamic-no-pic -fdump-rtl-jump -mmacosx-version-min=10.4\" } */\n+/* { dg-options \"-mdynamic-no-pic -fdump-rtl-jump -mmacosx-version-min=10.4 -mpic-symbol-stubs\" } */\n \n typedef struct objc_object { } *id ;\n int x = 41 ;\n@@ -30,4 +30,10 @@ - (void)willEndCloseSheet:(void *)sheet returnCode:(int)returnCode contextInfo:(\n \n /* Any symbol_ref of an un-stubified objc_msgSend is an error; look\n    for \"objc_msgSend\" in quotes, without the $stub suffix. */\n-/* { dg-final {  scan-rtl-dump-not \"symbol_ref.*\\\"objc_msgSend\\\"\" \"jump\" } } */\n+/* { dg-final {  scan-rtl-dump-not {symbol_ref.*\"objc_msgSend\"} \"jump\" { target powerpc*-*-darwin* } } } */\n+\n+/* { dg-final { scan-assembler-not {(bl|call)[ \\t]+_objc_msgSend\\n} } } */\n+/* { dg-final { scan-assembler     {(bl|call)[ \\t]+L_objc_msgSend\\$stub\\n} } } */\n+/* { dg-final { scan-assembler-not {(bl|call)[ \\t]+_Z7bogoniciii\\n} } } */\n+/* { dg-final { scan-assembler     {(bl|call)[ \\t]+L__Z7bogoniciii\\$stub\\n} } } */\n+/* { dg-final { scan-assembler-not {\\$non_lazy_ptr} } } */"}, {"sha": "1e160a162deb402d378744b10889bd2be1171093", "filename": "gcc/testsuite/objc.dg/stubify-1.m", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-1.m?ref=b7a0332ccd21c04a37535c97f04abc4bc28fb321", "patch": "@@ -4,7 +4,7 @@\n /* { dg-do compile { target *-*-darwin* } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-options \"-Os -mdynamic-no-pic -mmacosx-version-min=10.4\" } */\n+/* { dg-options \"-Os -mdynamic-no-pic -mmacosx-version-min=10.4 -mpic-symbol-stubs\" } */\n \n typedef struct objc_object { } *id ;\n int x = 41 ;\n@@ -28,8 +28,8 @@ - (void)willEndCloseSheet:(void *)sheet returnCode:(int)returnCode contextInfo:(\n }\n @end\n \n-/* { dg-final { scan-assembler-not \"\\(bl|call\\)\\[ \\t\\]+_objc_msgSend\\n\" } } */\n-/* { dg-final { scan-assembler     \"\\(bl|call\\)\\[ \\t\\]+L_objc_msgSend\\\\\\$stub\\n\" } } */\n-/* { dg-final { scan-assembler-not \"\\(bl|call\\)\\[ \\t\\]+_bogonic\\n\" } } */\n-/* { dg-final { scan-assembler     \"\\(bl|call\\)\\[ \\t\\]+L_bogonic\\\\\\$stub\\n\" } } */\n-/* { dg-final { scan-assembler-not \"\\\\\\$non_lazy_ptr\" } } */\n+/* { dg-final { scan-assembler-not {(bl|call)[ \\t]+_objc_msgSend\\n} } } */\n+/* { dg-final { scan-assembler     {(bl|call)[ \\t]+L_objc_msgSend\\$stub\\n} } } */\n+/* { dg-final { scan-assembler-not {(bl|call)[ \\t]+_bogonic\\n} } } */\n+/* { dg-final { scan-assembler     {(bl|call)[ \\t]+L_bogonic\\$stub\\n} } } */\n+/* { dg-final { scan-assembler-not {\\$non_lazy_ptr} } } */"}, {"sha": "1f53b9ccb7251fc4f41226ada9d566d34203d6cd", "filename": "gcc/testsuite/objc.dg/stubify-2.m", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a0332ccd21c04a37535c97f04abc4bc28fb321/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-2.m?ref=b7a0332ccd21c04a37535c97f04abc4bc28fb321", "patch": "@@ -1,10 +1,10 @@\n /* All calls must be properly stubified, m32 only.  */\n /* Testcase extracted from TextEdit:Document.m.  */\n \n-/* { dg-do compile { target powerpc*-*-darwin* } } */\n+/* { dg-do compile { target *-*-darwin* } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-options \"-mdynamic-no-pic -fdump-rtl-jump -mmacosx-version-min=10.4\" } */\n+/* { dg-options \"-mdynamic-no-pic -fdump-rtl-jump -mmacosx-version-min=10.4 -mpic-symbol-stubs\" } */\n \n typedef struct objc_object { } *id ;\n int x = 41 ;\n@@ -30,4 +30,10 @@ - (void)willEndCloseSheet:(void *)sheet returnCode:(int)returnCode contextInfo:(\n \n /* Any symbol_ref of an un-stubified objc_msgSend is an error; look\n    for \"objc_msgSend\" in quotes, without the $stub suffix.  */\n-/* { dg-final { scan-rtl-dump-not \"symbol_ref.*\\\"objc_msgSend\\\"\" \"jump\" } } */\n+/* { dg-final { scan-rtl-dump-not {symbol_ref.*\"objc_msgSend\"} \"jump\" { target powerpc*-*-darwin* } } } */\n+\n+/* { dg-final { scan-assembler-not {(bl|call)[ \\t]+_objc_msgSend\\n} } } */\n+/* { dg-final { scan-assembler     {(bl|call)[ \\t]+L_objc_msgSend\\$stub\\n} } } */\n+/* { dg-final { scan-assembler-not {(bl|call)[ \\t]+_bogonic\\n} } } */\n+/* { dg-final { scan-assembler     {(bl|call)[ \\t]+L_bogonic\\$stub\\n} } } */\n+/* { dg-final { scan-assembler-not {\\$non_lazy_ptr} } } */"}]}