{"sha": "512854fe89a2b18e6c9a474a7dc69679a70b93da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEyODU0ZmU4OWEyYjE4ZTZjOWE0NzRhN2RjNjk2NzlhNzBiOTNkYQ==", "commit": {"author": {"name": "Alan Hayward", "email": "alan.hayward@arm.com", "date": "2015-10-26T11:55:45Z"}, "committer": {"name": "Alan Hayward", "email": "alahay01@gcc.gnu.org", "date": "2015-10-26T11:55:45Z"}, "message": "tree-vect-loop.c (vect_create_epilog_for_reduction): Fix VEC_COND_EXPR types.\n\n2015-10-26  Alan Hayward <alan.hayward@arm.com>\n\n\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Fix\n\tVEC_COND_EXPR types.\n\nFrom-SVN: r229346", "tree": {"sha": "79f4e929f2838be46c9966ae414a51cca9470f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79f4e929f2838be46c9966ae414a51cca9470f41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/512854fe89a2b18e6c9a474a7dc69679a70b93da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512854fe89a2b18e6c9a474a7dc69679a70b93da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/512854fe89a2b18e6c9a474a7dc69679a70b93da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512854fe89a2b18e6c9a474a7dc69679a70b93da/comments", "author": {"login": "a74nh", "id": 4146708, "node_id": "MDQ6VXNlcjQxNDY3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a74nh", "html_url": "https://github.com/a74nh", "followers_url": "https://api.github.com/users/a74nh/followers", "following_url": "https://api.github.com/users/a74nh/following{/other_user}", "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}", "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions", "organizations_url": "https://api.github.com/users/a74nh/orgs", "repos_url": "https://api.github.com/users/a74nh/repos", "events_url": "https://api.github.com/users/a74nh/events{/privacy}", "received_events_url": "https://api.github.com/users/a74nh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aafc151a206edfc9352ea637ec2f2bdb39003135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafc151a206edfc9352ea637ec2f2bdb39003135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aafc151a206edfc9352ea637ec2f2bdb39003135"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "2438005dec925fb9123ab9c4ad5337462ea7c3a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512854fe89a2b18e6c9a474a7dc69679a70b93da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512854fe89a2b18e6c9a474a7dc69679a70b93da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=512854fe89a2b18e6c9a474a7dc69679a70b93da", "patch": "@@ -1,3 +1,8 @@\n+2015-10-26  Alan Hayward <alan.hayward@arm.com>\n+\n+\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Fix\n+\tVEC_COND_EXPR types.\n+\n 2015-10-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* auto-inc-dec.c (insert_move_insn_before): Delete."}, {"sha": "cc51597ce9695fb47f2fd635d22be5258d51d29b", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512854fe89a2b18e6c9a474a7dc69679a70b93da/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512854fe89a2b18e6c9a474a7dc69679a70b93da/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=512854fe89a2b18e6c9a474a7dc69679a70b93da", "patch": "@@ -4290,8 +4290,9 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs, gimple *stmt,\n       /* Get various versions of the type of the vector of indexes.  */\n       tree index_vec_type = TREE_TYPE (induction_index);\n       gcc_checking_assert (TYPE_UNSIGNED (index_vec_type));\n-      tree index_vec_type_signed = signed_type_for (index_vec_type);\n       tree index_scalar_type = TREE_TYPE (index_vec_type);\n+      tree index_vec_cmp_type = build_same_sized_truth_vector_type\n+\t(index_vec_type);\n \n       /* Get an unsigned integer version of the type of the data vector.  */\n       int scalar_precision = GET_MODE_PRECISION (TYPE_MODE (scalar_type));\n@@ -4336,7 +4337,7 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs, gimple *stmt,\n \n       /* Compare the max index vector to the vector of found indexes to find\n \t the position of the max value.  */\n-      tree vec_compare = make_ssa_name (index_vec_type_signed);\n+      tree vec_compare = make_ssa_name (index_vec_cmp_type);\n       gimple *vec_compare_stmt = gimple_build_assign (vec_compare, EQ_EXPR,\n \t\t\t\t\t\t      induction_index,\n \t\t\t\t\t\t      max_index_vec);"}]}