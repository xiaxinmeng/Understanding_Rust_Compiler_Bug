{"sha": "2477c234e2d89f875e19d4b6d112b7c321b46a55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3N2MyMzRlMmQ4OWY4NzVlMTlkNGI2ZDExMmI3YzMyMWI0NmE1NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-12-17T08:46:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-17T08:46:16Z"}, "message": "expr.c (convert_modes): For SUBREG_PROMOTED_VAR_P use SUBREG_REG (x) instead of x as last gen_lowpart...\n\n\t* expr.c (convert_modes): For SUBREG_PROMOTED_VAR_P use SUBREG_REG (x)\n\tinstead of x as last gen_lowpart argument.\n\nFrom-SVN: r206040", "tree": {"sha": "f92bb1a3fc127f78ad307e0ca9da5c8aac5a2d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f92bb1a3fc127f78ad307e0ca9da5c8aac5a2d7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2477c234e2d89f875e19d4b6d112b7c321b46a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2477c234e2d89f875e19d4b6d112b7c321b46a55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2477c234e2d89f875e19d4b6d112b7c321b46a55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2477c234e2d89f875e19d4b6d112b7c321b46a55/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ede59e4c72ec83a3382e5ca5f4779c819977a8c"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "639ec9bf197267aaa430169222aae8b7d2014cbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2477c234e2d89f875e19d4b6d112b7c321b46a55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2477c234e2d89f875e19d4b6d112b7c321b46a55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2477c234e2d89f875e19d4b6d112b7c321b46a55", "patch": "@@ -1,3 +1,8 @@\n+2013-12-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (convert_modes): For SUBREG_PROMOTED_VAR_P use SUBREG_REG (x)\n+\tinstead of x as last gen_lowpart argument.\n+\n 2013-12-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* predict.h (PROB_LIKELY): Fix the value."}, {"sha": "1c5658923bdc412cb3a0e6e3abe217d811ba8bfa", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2477c234e2d89f875e19d4b6d112b7c321b46a55/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2477c234e2d89f875e19d4b6d112b7c321b46a55/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=2477c234e2d89f875e19d4b6d112b7c321b46a55", "patch": "@@ -719,7 +719,7 @@ convert_modes (enum machine_mode mode, enum machine_mode oldmode, rtx x, int uns\n   if (GET_CODE (x) == SUBREG && SUBREG_PROMOTED_VAR_P (x)\n       && GET_MODE_SIZE (GET_MODE (SUBREG_REG (x))) >= GET_MODE_SIZE (mode)\n       && SUBREG_PROMOTED_UNSIGNED_P (x) == unsignedp)\n-    x = gen_lowpart (mode, x);\n+    x = gen_lowpart (mode, SUBREG_REG (x));\n \n   if (GET_MODE (x) != VOIDmode)\n     oldmode = GET_MODE (x);"}]}