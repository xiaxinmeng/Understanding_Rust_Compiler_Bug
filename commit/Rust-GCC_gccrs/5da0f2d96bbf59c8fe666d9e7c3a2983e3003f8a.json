{"sha": "5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRhMGYyZDk2YmJmNTljOGZlNjY2ZDllN2MzYTI5ODNlMzAwM2Y4YQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2009-11-30T09:31:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T09:31:28Z"}, "message": "s-commun.adb, [...]: New internal support unit...\n\n2009-11-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-commun.adb, s-commun.ads: New internal support unit,\n\tallowing code sharing between GNAT.Sockets and\n\tGNAT.Serial_Communication.\n\t* g-sercom.ads, g-sercom-mingw.adb, g-sercom-linux.adb,\n\tg-socket.adb (GNAT.Sockets.Last_Index): Move to System.Communication.\n\t(GNAT.Serial_Communication.Read): Handle correctly the case where no\n\tdata was read, and Buffer'First = Stream_Element_Offset'First.\n\t* Makefile.rtl: Add entry for s-commun\n\t* g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.adb,\n\tg-socthi-vxworks.ads, g-stseme.adb, g-socthi-mingw.ads,\n\tg-socthi.adb, g-socthi.ads (GNAT.Sockets.Thin.Socket_Error_Message):\n\tReimplement in terms of System.CRTL.strerror.\n\nFrom-SVN: r154758", "tree": {"sha": "9a67a2e2419bf357e4dd63ff87001bddf3abf00f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a67a2e2419bf357e4dd63ff87001bddf3abf00f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/comments", "author": null, "committer": null, "parents": [{"sha": "948bf10686a16b92f8c413bb3f1440f0f770b087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948bf10686a16b92f8c413bb3f1440f0f770b087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/948bf10686a16b92f8c413bb3f1440f0f770b087"}], "stats": {"total": 300, "additions": 206, "deletions": 94}, "files": [{"sha": "ec4250c813fda9eb408fcb5f101e0015119f7f7e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -1,3 +1,18 @@\n+2009-11-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-commun.adb, s-commun.ads: New internal support unit,\n+\tallowing code sharing between GNAT.Sockets and\n+\tGNAT.Serial_Communication.\n+\t* g-sercom.ads, g-sercom-mingw.adb, g-sercom-linux.adb,\n+\tg-socket.adb (GNAT.Sockets.Last_Index): Move to System.Communication.\n+\t(GNAT.Serial_Communication.Read): Handle correctly the case where no\n+\tdata was read, and Buffer'First = Stream_Element_Offset'First.\n+\t* Makefile.rtl: Add entry for s-commun\n+\t* g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.adb,\n+\tg-socthi-vxworks.ads, g-stseme.adb, g-socthi-mingw.ads,\n+\tg-socthi.adb, g-socthi.ads (GNAT.Sockets.Thin.Socket_Error_Message):\n+\tReimplement in terms of System.CRTL.strerror.\n+\n 2009-11-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (copy_type): Unshare the language-specific data"}, {"sha": "d03c67db4ca0867cff4e9c678f4e0e3ba699309e", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -421,6 +421,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-caun32$(objext) \\\n   s-caun64$(objext) \\\n   s-chepoo$(objext) \\\n+  s-commun$(objext) \\\n   s-conca2$(objext) \\\n   s-conca3$(objext) \\\n   s-conca4$(objext) \\"}, {"sha": "c25d5e8e44a1dbb4266fa1712f0e076b9768ce96", "filename": "gcc/ada/g-sercom-linux.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-sercom-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-sercom-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-linux.adb?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2007-2008, AdaCore                      --\n+--                    Copyright (C) 2007-2009, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,9 @@ with Ada.Streams;                use Ada.Streams;\n with Ada;                        use Ada;\n with Ada.Unchecked_Deallocation;\n \n-with System.CRTL; use System, System.CRTL;\n+with System;               use System;\n+with System.Communication; use System.Communication;\n+with System.CRTL;          use System.CRTL;\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n@@ -167,11 +169,10 @@ package body GNAT.Serial_Communications is\n       Res := read (Integer (Port.H.all), Buffer'Address, Len);\n \n       if Res = -1 then\n-         Last := 0;\n          Raise_Error (\"read failed\");\n-      else\n-         Last := Buffer'First + Stream_Element_Offset (Res) - 1;\n       end if;\n+\n+      Last := Last_Index (Buffer'First, C.int (Res));\n    end Read;\n \n    ---------"}, {"sha": "e5034115995a65e8493a6f6185b17e7e4556e437", "filename": "gcc/ada/g-sercom-mingw.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-sercom-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-sercom-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-mingw.adb?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2007-2008, AdaCore                      --\n+--                    Copyright (C) 2007-2009, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,11 @@\n \n with Ada.Unchecked_Deallocation; use Ada;\n with Ada.Streams;                use Ada.Streams;\n-with System.Win32.Ext;           use System, System.Win32, System.Win32.Ext;\n+\n+with System;               use System;\n+with System.Communication; use System.Communication;\n+with System.Win32;         use System.Win32;\n+with System.Win32.Ext;     use System.Win32.Ext;\n \n package body GNAT.Serial_Communications is\n \n@@ -158,7 +162,7 @@ package body GNAT.Serial_Communications is\n          Raise_Error (\"read error\");\n       end if;\n \n-      Last := Buffer'First - 1 + Stream_Element_Offset (Read_Last);\n+      Last := Last_Index (Buffer'First, C.int (Read_Last));\n    end Read;\n \n    ---------"}, {"sha": "5adeebe9b2d7e518fc03ddf04b8dcc472ed49543", "filename": "gcc/ada/g-sercom.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-sercom.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-sercom.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom.ads?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                    Copyright (C) 2007-2008, AdaCore                      --\n+--                    Copyright (C) 2007-2009, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -91,7 +91,9 @@ package GNAT.Serial_Communications is\n       Buffer : out Ada.Streams.Stream_Element_Array;\n       Last   : out Ada.Streams.Stream_Element_Offset);\n    --  Read a set of bytes, put result into Buffer and set Last accordingly.\n-   --  Last is set to 0 if no byte has been read.\n+   --  Last is set to Buffer'First - 1 if no byte has been read, unless\n+   --  Buffer'First = Stream_Element_Offset'First, in which case Last is\n+   --  set to Stream_Element_Offset'Last instead.\n \n    overriding procedure Write\n      (Port   : in out Serial_Port;"}, {"sha": "5cf623a160200f762984eb08e21b219b5b722ec1", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -46,7 +46,8 @@ with GNAT.Sockets.Linker_Options;\n pragma Warnings (Off, GNAT.Sockets.Linker_Options);\n --  Need to include pragma Linker_Options which is platform dependent\n \n-with System; use System;\n+with System;               use System;\n+with System.Communication; use System.Communication;\n \n package body GNAT.Sockets is\n \n@@ -249,14 +250,6 @@ package body GNAT.Sockets is\n    function Err_Code_Image (E : Integer) return String;\n    --  Return the value of E surrounded with brackets\n \n-   function Last_Index\n-     (First : Stream_Element_Offset;\n-      Count : C.int) return Stream_Element_Offset;\n-   --  Compute the Last OUT parameter for the various Receive_Socket\n-   --  subprograms: returns First + Count - 1, except for the case\n-   --  where First = Stream_Element_Offset'First and Res = 0, in which\n-   --  case Stream_Element_Offset'Last is returned instead.\n-\n    procedure Initialize (X : in out Sockets_Library_Controller);\n    procedure Finalize   (X : in out Sockets_Library_Controller);\n \n@@ -1416,22 +1409,6 @@ package body GNAT.Sockets is\n         and then Is_Socket_In_Set (Item.Set'Access, C.int (Socket)) /= 0;\n    end Is_Set;\n \n-   ----------------\n-   -- Last_Index --\n-   ----------------\n-\n-   function Last_Index\n-     (First : Stream_Element_Offset;\n-      Count : C.int) return Stream_Element_Offset\n-   is\n-   begin\n-      if First = Stream_Element_Offset'First and then Count = 0 then\n-         return Stream_Element_Offset'Last;\n-      else\n-         return First + Stream_Element_Offset (Count - 1);\n-      end if;\n-   end Last_Index;\n-\n    -------------------\n    -- Listen_Socket --\n    -------------------"}, {"sha": "6d851e17cb42a14cd692bbcdc76178f7179c7aa5", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -184,9 +184,6 @@ package GNAT.Sockets.Thin is\n       Typ      : C.int;\n       Protocol : C.int) return C.int;\n \n-   function C_Strerror\n-     (Errnum : C.int) return C.Strings.chars_ptr;\n-\n    function C_System\n      (Command : System.Address) return C.int;\n \n@@ -241,7 +238,6 @@ private\n    pragma Import (Stdcall, C_Setsockopt, \"setsockopt\");\n    pragma Import (Stdcall, C_Shutdown, \"shutdown\");\n    pragma Import (Stdcall, C_Socket, \"socket\");\n-   pragma Import (C, C_Strerror, \"strerror\");\n    pragma Import (C, C_System, \"_system\");\n    pragma Import (Stdcall, Socket_Errno, \"WSAGetLastError\");\n    pragma Import (Stdcall, Set_Socket_Errno, \"WSASetLastError\");"}, {"sha": "b9e23ecbfb5398fc9e42b535ab79e66974e8eab4", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -473,19 +473,6 @@ package body GNAT.Sockets.Thin is\n \n    function Socket_Error_Message\n      (Errno : Integer) return C.Strings.chars_ptr\n-   is\n-      use type Interfaces.C.Strings.chars_ptr;\n-\n-      C_Msg : C.Strings.chars_ptr;\n-\n-   begin\n-      C_Msg := C_Strerror (C.int (Errno));\n-\n-      if C_Msg = C.Strings.Null_Ptr then\n-         return Unknown_System_Error;\n-      else\n-         return C_Msg;\n-      end if;\n-   end Socket_Error_Message;\n+   is separate;\n \n end GNAT.Sockets.Thin;"}, {"sha": "a1bb487e1368b5193028d6bea2bc4bffedaec793", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -187,9 +187,6 @@ package GNAT.Sockets.Thin is\n       Typ      : C.int;\n       Protocol : C.int) return C.int;\n \n-   function C_Strerror\n-     (Errnum : C.int) return C.Strings.chars_ptr;\n-\n    function C_System\n      (Command : System.Address) return C.int;\n \n@@ -255,7 +252,6 @@ private\n    pragma Import (C, C_Select,        \"DECC$SELECT\");\n    pragma Import (C, C_Setsockopt,    \"DECC$SETSOCKOPT\");\n    pragma Import (C, C_Shutdown,      \"DECC$SHUTDOWN\");\n-   pragma Import (C, C_Strerror,      \"DECC$STRERROR\");\n    pragma Import (C, C_System,        \"DECC$SYSTEM\");\n \n    pragma Import (C, Nonreentrant_Gethostbyname, \"DECC$GETHOSTBYNAME\");"}, {"sha": "e6a8ee6064446a39dd2be5403f6ee8840c400714", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -489,20 +489,6 @@ package body GNAT.Sockets.Thin is\n \n    function Socket_Error_Message\n      (Errno : Integer) return C.Strings.chars_ptr\n-   is\n-      use type Interfaces.C.Strings.chars_ptr;\n-\n-      C_Msg : C.Strings.chars_ptr;\n-\n-   begin\n-      C_Msg := C_Strerror (C.int (Errno));\n-\n-      if C_Msg = C.Strings.Null_Ptr then\n-         return Unknown_System_Error;\n-\n-      else\n-         return C_Msg;\n-      end if;\n-   end Socket_Error_Message;\n+   is separate;\n \n end GNAT.Sockets.Thin;"}, {"sha": "4f92b3a8143570ec607ca7f053772af22f443e30", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -185,9 +185,6 @@ package GNAT.Sockets.Thin is\n       Typ      : C.int;\n       Protocol : C.int) return C.int;\n \n-   function C_Strerror\n-     (Errnum : C.int) return C.Strings.chars_ptr;\n-\n    function C_System\n      (Command : System.Address) return C.int;\n \n@@ -232,6 +229,5 @@ private\n    pragma Import (C, C_Select, \"select\");\n    pragma Import (C, C_Setsockopt, \"setsockopt\");\n    pragma Import (C, C_Shutdown, \"shutdown\");\n-   pragma Import (C, C_Strerror, \"strerror\");\n    pragma Import (C, C_System, \"system\");\n end GNAT.Sockets.Thin;"}, {"sha": "ca797631b08ad8e2a7370266eba4f4bef62ffe21", "filename": "gcc/ada/g-socthi.adb", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.adb?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -494,19 +494,6 @@ package body GNAT.Sockets.Thin is\n \n    function Socket_Error_Message\n      (Errno : Integer) return C.Strings.chars_ptr\n-   is\n-      use type Interfaces.C.Strings.chars_ptr;\n-\n-      C_Msg : C.Strings.chars_ptr;\n-\n-   begin\n-      C_Msg := C_Strerror (C.int (Errno));\n-\n-      if C_Msg = C.Strings.Null_Ptr then\n-         return Unknown_System_Error;\n-      else\n-         return C_Msg;\n-      end if;\n-   end Socket_Error_Message;\n+   is separate;\n \n end GNAT.Sockets.Thin;"}, {"sha": "1f103e89a746dffdc27f9da18aa50c97161796fc", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -186,9 +186,6 @@ package GNAT.Sockets.Thin is\n       Typ      : C.int;\n       Protocol : C.int) return C.int;\n \n-   function C_Strerror\n-     (Errnum : C.int) return C.Strings.chars_ptr;\n-\n    function C_System\n      (Command : System.Address) return C.int;\n \n@@ -257,7 +254,6 @@ private\n    pragma Import (C, C_Select, \"select\");\n    pragma Import (C, C_Setsockopt, \"setsockopt\");\n    pragma Import (C, C_Shutdown, \"shutdown\");\n-   pragma Import (C, C_Strerror, \"strerror\");\n    pragma Import (C, C_System, \"system\");\n \n    pragma Import (C, Nonreentrant_Gethostbyname, \"gethostbyname\");"}, {"sha": "b09af1d6fb8506888e0fd8e1a53cdac86f983f51", "filename": "gcc/ada/g-stseme.adb", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-stseme.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fg-stseme.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-stseme.adb?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -0,0 +1,64 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                  GNAT.SOCKETS.THIN.SOCKET_ERROR_MESSAGE                  --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--                     Copyright (C) 2007-2009, AdaCore                     --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the default implementation of this unit, using the standard C\n+--  library's strerror(3) function. It is used on all platforms except Windows,\n+--  since on that platform socket errno values are distinct from the system\n+--  ones: there is a specific variant of this function in g-socthi-mingw.adb.\n+\n+with Ada.Unchecked_Conversion;\n+with System.CRTL;\n+\n+separate (GNAT.Sockets.Thin)\n+function Socket_Error_Message\n+  (Errno : Integer) return C.Strings.chars_ptr\n+is\n+   use type Interfaces.C.Strings.chars_ptr;\n+\n+   pragma Warnings (Off);\n+   function To_Chars_Ptr is\n+     new Ada.Unchecked_Conversion\n+       (System.Address, Interfaces.C.Strings.chars_ptr);\n+   --  On VMS, the compiler warns because System.Address is 64 bits, but\n+   --  chars_ptr is 32 bits. It should be safe, though, because strerror\n+   --  will return a 32-bit pointer.\n+   pragma Warnings (On);\n+\n+   C_Msg : C.Strings.chars_ptr;\n+\n+begin\n+   C_Msg := To_Chars_Ptr (System.CRTL.strerror (Errno));\n+   if C_Msg = C.Strings.Null_Ptr then\n+      return Unknown_System_Error;\n+   else\n+      return C_Msg;\n+   end if;\n+end Socket_Error_Message;"}, {"sha": "79d74ecad5ae558b85ea23f3977f23ed74c7906b", "filename": "gcc/ada/s-commun.adb", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fs-commun.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fs-commun.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-commun.adb?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -0,0 +1,53 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                 S Y S T E M . C O M M U N I C A T I O N                  --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--                     Copyright (C) 2001-2009, AdaCore                     --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package body System.Communication is\n+\n+   subtype SEO is Ada.Streams.Stream_Element_Offset;\n+\n+   ----------------\n+   -- Last_Index --\n+   ----------------\n+\n+   function Last_Index\n+     (First : Ada.Streams.Stream_Element_Offset;\n+      Count : C.int) return Ada.Streams.Stream_Element_Offset\n+   is\n+      use type Ada.Streams.Stream_Element_Offset;\n+   begin\n+      if First = SEO'First and then Count = 0 then\n+         return SEO'Last;\n+      else\n+         return First + SEO (Count - 1);\n+      end if;\n+   end Last_Index;\n+\n+end System.Communication;"}, {"sha": "84f6665d21903e827d8dcb64ee61a5a31f54ca30", "filename": "gcc/ada/s-commun.ads", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fs-commun.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a/gcc%2Fada%2Fs-commun.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-commun.ads?ref=5da0f2d96bbf59c8fe666d9e7c3a2983e3003f8a", "patch": "@@ -0,0 +1,51 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                 S Y S T E M . C O M M U N I C A T I O N                  --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--                     Copyright (C) 2001-2009, AdaCore                     --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Common support unit for GNAT.Sockets and GNAT.Serial_Communication\n+\n+with Ada.Streams;\n+with Interfaces.C;\n+\n+package System.Communication is\n+\n+   package C renames Interfaces.C;\n+\n+   use type C.int;\n+\n+   function Last_Index\n+     (First : Ada.Streams.Stream_Element_Offset;\n+      Count : C.int) return Ada.Streams.Stream_Element_Offset;\n+   --  Compute the Last OUT parameter for the various Read / Receive\n+   --  subprograms: returns First + Count - 1, except for the case\n+   --  where First = Stream_Element_Offset'First and Res = 0, in which\n+   --  case Stream_Element_Offset'Last is returned instead.\n+\n+end System.Communication;"}]}