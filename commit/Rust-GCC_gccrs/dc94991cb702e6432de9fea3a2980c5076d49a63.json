{"sha": "dc94991cb702e6432de9fea3a2980c5076d49a63", "node_id": "C_kwDOANBUbNoAKGRjOTQ5OTFjYjcwMmU2NDMyZGU5ZmVhM2EyOTgwYzUwNzZkNDlhNjM", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-05-11T08:10:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-02T09:06:38Z"}, "message": "[Ada] Propagate Has_Inherit{able,ed}_Invariants to base types\n\nThe two flags apply to base types only like Has_Own_Invariants.\n\ngcc/ada/\n\n\t* sem_util.adb (Propagate_DIC_Attributes): Add ??? comment.\n\t(Propagate_Invariant_Attributes): Likewise.  Propagate the\n\tHas_Inheritable_Invariants and Has_Inherited_Invariants to\n\tthe base type of the target type.", "tree": {"sha": "0855daefcc11c50c6997aef32d2af7db8ff9f01d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0855daefcc11c50c6997aef32d2af7db8ff9f01d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc94991cb702e6432de9fea3a2980c5076d49a63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc94991cb702e6432de9fea3a2980c5076d49a63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc94991cb702e6432de9fea3a2980c5076d49a63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc94991cb702e6432de9fea3a2980c5076d49a63/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1ae37393be7f3fae1cbae075c8302f8d1847965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ae37393be7f3fae1cbae075c8302f8d1847965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ae37393be7f3fae1cbae075c8302f8d1847965"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "265c11afe1c98f44b188f15bd60d83c8b711d55a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc94991cb702e6432de9fea3a2980c5076d49a63/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc94991cb702e6432de9fea3a2980c5076d49a63/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=dc94991cb702e6432de9fea3a2980c5076d49a63", "patch": "@@ -27312,7 +27312,7 @@ package body Sem_Util is\n          --  The setting of the attributes is intentionally conservative. This\n          --  prevents accidental clobbering of enabled attributes. We need to\n          --  call Base_Type twice, because it is sometimes not set to an actual\n-         --  base type.\n+         --  base type???\n \n          if Has_Inherited_DIC (From_Typ) then\n             Set_Has_Inherited_DIC (Base_Type (Base_Type (Typ)));\n@@ -27362,14 +27362,14 @@ package body Sem_Util is\n          --  The setting of the attributes is intentionally conservative. This\n          --  prevents accidental clobbering of enabled attributes. We need to\n          --  call Base_Type twice, because it is sometimes not set to an actual\n-         --  base type.\n+         --  base type???\n \n          if Has_Inheritable_Invariants (From_Typ) then\n-            Set_Has_Inheritable_Invariants (Typ);\n+            Set_Has_Inheritable_Invariants (Base_Type (Base_Type (Typ)));\n          end if;\n \n          if Has_Inherited_Invariants (From_Typ) then\n-            Set_Has_Inherited_Invariants (Typ);\n+            Set_Has_Inherited_Invariants (Base_Type (Base_Type (Typ)));\n          end if;\n \n          if Has_Own_Invariants (From_Typ) then"}]}