{"sha": "e85cde9a936ffa92f183adec6b4757e7ed9961a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg1Y2RlOWE5MzZmZmE5MmYxODNhZGVjNmI0NzU3ZTdlZDk5NjFhNg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-09-30T18:50:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-30T18:50:56Z"}, "message": "h8300.h (INIT_TARGET_OPTABS): Use init_one_optab instead of generating RTL directly.\n\n        * h8300.h (INIT_TARGET_OPTABS): Use init_one_optab instead of\n        generating RTL directly.\n        * mips.h (INIT_TARGET_OPTABS): Likewise.\n        * mn10200.h (INIT_TARGET_OPTABS): Likewise.\n\nFrom-SVN: r29734", "tree": {"sha": "7111c8ba97b401117f93c61021f23d8600322a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7111c8ba97b401117f93c61021f23d8600322a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e85cde9a936ffa92f183adec6b4757e7ed9961a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e85cde9a936ffa92f183adec6b4757e7ed9961a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e85cde9a936ffa92f183adec6b4757e7ed9961a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e85cde9a936ffa92f183adec6b4757e7ed9961a6/comments", "author": null, "committer": null, "parents": [{"sha": "af3b4e599c01847d050f491fe3e88fc5ce801b71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af3b4e599c01847d050f491fe3e88fc5ce801b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af3b4e599c01847d050f491fe3e88fc5ce801b71"}], "stats": {"total": 71, "additions": 38, "deletions": 33}, "files": [{"sha": "a16904f7c19ca098fcec19073cd3ca42ffacb71f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e85cde9a936ffa92f183adec6b4757e7ed9961a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e85cde9a936ffa92f183adec6b4757e7ed9961a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e85cde9a936ffa92f183adec6b4757e7ed9961a6", "patch": "@@ -36,6 +36,11 @@ Thu Sep 30 00:13:27 1999  Dirk Zoller  <duz@rtsffm.com>\n \n Wed Sep 29 23:43:39 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* h8300.h (INIT_TARGET_OPTABS): Use init_one_optab instead of\n+\tgenerating RTL directly.\n+\t* mips.h (INIT_TARGET_OPTABS): Likewise.\n+\t* mn10200.h (INIT_TARGET_OPTABS): Likewise.\n+\n \t* expr.h (init_mov_optab): Delete declaration\n \n \t* h8300.c (WORD_REG_USED): Update to avoid useless register"}, {"sha": "d0617e54d5f49a2c64d6213af9691d3deba00ef8", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e85cde9a936ffa92f183adec6b4757e7ed9961a6/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e85cde9a936ffa92f183adec6b4757e7ed9961a6/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=e85cde9a936ffa92f183adec6b4757e7ed9961a6", "patch": "@@ -1388,15 +1388,15 @@ extern int handle_pragma ();\n #define INIT_TARGET_OPTABS \\\n   do { \\\n     smul_optab->handlers[(int) HImode].libfunc\t\t\\\n-      = gen_rtx_SYMBOL_REF (Pmode, MULHI3_LIBCALL);\t\\\n+      = init_one_libfunc (MULHI3_LIBCALL);\t\t\\\n     sdiv_optab->handlers[(int) HImode].libfunc\t\t\\\n-      = gen_rtx_SYMBOL_REF (Pmode, DIVHI3_LIBCALL);\t\\\n+      = init_one_libfunc (DIVHI3_LIBCALL);\t\t\\\n     udiv_optab->handlers[(int) HImode].libfunc\t\t\\\n-      = gen_rtx_SYMBOL_REF (Pmode, UDIVHI3_LIBCALL);\t\\\n+      = init_one_libfunc (UDIVHI3_LIBCALL);\t\t\\\n     smod_optab->handlers[(int) HImode].libfunc\t\t\\\n-      = gen_rtx_SYMBOL_REF (Pmode, MODHI3_LIBCALL);\t\\\n+      = init_one_libfunc (MODHI3_LIBCALL);\t\t\\\n     umod_optab->handlers[(int) HImode].libfunc\t\t\\\n-      = gen_rtx_SYMBOL_REF (Pmode, UMODHI3_LIBCALL);\t\\\n+      = init_one_libfunc (UMODHI3_LIBCALL);\t\t\\\n   } while (0)\n \n #define MOVE_RATIO 3"}, {"sha": "24af49e25da32cb7f3ce0af2d7ca450a9e3bd7d9", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e85cde9a936ffa92f183adec6b4757e7ed9961a6/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e85cde9a936ffa92f183adec6b4757e7ed9961a6/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=e85cde9a936ffa92f183adec6b4757e7ed9961a6", "patch": "@@ -4592,59 +4592,59 @@ do\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tadd_optab->handlers[(int) SFmode].libfunc =\t\t\t\\\n-\t  gen_rtx (SYMBOL_REF, Pmode, \"__mips16_addsf3\");\t\t\\\n+\t  init_one_libfunc (\"__mips16_addsf3\");\t\t\t\t\\\n \tsub_optab->handlers[(int) SFmode].libfunc =\t\t\t\\\n-\t  gen_rtx (SYMBOL_REF, Pmode, \"__mips16_subsf3\");\t\t\\\n+\t  init_one_libfunc (\"__mips16_subsf3\");\t\t\t\t\\\n \tsmul_optab->handlers[(int) SFmode].libfunc =\t\t\t\\\n-\t  gen_rtx (SYMBOL_REF, Pmode, \"__mips16_mulsf3\");\t\t\\\n+\t  init_one_libfunc (\"__mips16_mulsf3\");\t\t\t\t\\\n \tflodiv_optab->handlers[(int) SFmode].libfunc =\t\t\t\\\n-\t  gen_rtx (SYMBOL_REF, Pmode, \"__mips16_divsf3\");\t\t\\\n+\t  init_one_libfunc (\"__mips16_divsf3\");\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-\teqsf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__mips16_eqsf2\");\t\\\n-\tnesf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__mips16_nesf2\");\t\\\n-\tgtsf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__mips16_gtsf2\");\t\\\n-\tgesf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__mips16_gesf2\");\t\\\n-\tltsf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__mips16_ltsf2\");\t\\\n-\tlesf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__mips16_lesf2\");\t\\\n+\teqsf2_libfunc = init_one_libfunc (\"__mips16_eqsf2\");\t\t\\\n+\tnesf2_libfunc = init_one_libfunc (\"__mips16_nesf2\");\t\t\\\n+\tgtsf2_libfunc = init_one_libfunc (\"__mips16_gtsf2\");\t\t\\\n+\tgesf2_libfunc = init_one_libfunc (\"__mips16_gesf2\");\t\t\\\n+\tltsf2_libfunc = init_one_libfunc (\"__mips16_ltsf2\");\t\t\\\n+\tlesf2_libfunc = init_one_libfunc (\"__mips16_lesf2\");\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \tfloatsisf_libfunc =\t\t\t\t\t\t\\\n-\t  gen_rtx (SYMBOL_REF, Pmode, \"__mips16_floatsisf\");\t\t\\\n+\t  init_one_libfunc (\"__mips16_floatsisf\");\t\t\t\\\n \tfixsfsi_libfunc =\t\t\t\t\t\t\\\n-\t  gen_rtx (SYMBOL_REF, Pmode, \"__mips16_fixsfsi\");\t\t\\\n+\t  init_one_libfunc (\"__mips16_fixsfsi\");\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \tif (TARGET_DOUBLE_FLOAT)\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\t\\\n \t    add_optab->handlers[(int) DFmode].libfunc =\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_adddf3\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_adddf3\");\t\t\t\\\n \t    sub_optab->handlers[(int) DFmode].libfunc =\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_subdf3\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_subdf3\");\t\t\t\\\n \t    smul_optab->handlers[(int) DFmode].libfunc =\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_muldf3\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_muldf3\");\t\t\t\\\n \t    flodiv_optab->handlers[(int) DFmode].libfunc =\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_divdf3\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_divdf3\");\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \t    extendsfdf2_libfunc =\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_extendsfdf2\");\t\\\n+\t      init_one_libfunc (\"__mips16_extendsfdf2\");\t\t\\\n \t    truncdfsf2_libfunc =\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_truncdfsf2\");\t\\\n+\t      init_one_libfunc (\"__mips16_truncdfsf2\");\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \t    eqdf2_libfunc =\t\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_eqdf2\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_eqdf2\");\t\t\t\\\n \t    nedf2_libfunc =\t\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_nedf2\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_nedf2\");\t\t\t\\\n \t    gtdf2_libfunc =\t\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_gtdf2\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_gtdf2\");\t\t\t\\\n \t    gedf2_libfunc =\t\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_gedf2\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_gedf2\");\t\t\t\\\n \t    ltdf2_libfunc =\t\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_ltdf2\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_ltdf2\");\t\t\t\\\n \t    ledf2_libfunc =\t\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_ledf2\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_ledf2\");\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \t    floatsidf_libfunc =\t\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_floatsidf\");\t\\\n+\t      init_one_libfunc (\"__mips16_floatsidf\");\t\t\t\\\n \t    fixdfsi_libfunc =\t\t\t\t\t\t\\\n-\t      gen_rtx (SYMBOL_REF, Pmode, \"__mips16_fixdfsi\");\t\t\\\n+\t      init_one_libfunc (\"__mips16_fixdfsi\");\t\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t\\"}, {"sha": "1ade6f239577d2fe60b0ae2e78ae1a1a2692fb0d", "filename": "gcc/config/mn10200/mn10200.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e85cde9a936ffa92f183adec6b4757e7ed9961a6/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e85cde9a936ffa92f183adec6b4757e7ed9961a6/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.h?ref=e85cde9a936ffa92f183adec6b4757e7ed9961a6", "patch": "@@ -1051,9 +1051,9 @@ do { char dstr[30];\t\t\t\t\t\\\n #define INIT_TARGET_OPTABS \\\n   do { \\\n     sdiv_optab->handlers[(int) HImode].libfunc\t\t\\\n-      = gen_rtx_SYMBOL_REF (Pmode, DIVHI3_LIBCALL);\t\\\n+      = init_one_libfunc (DIVHI3_LIBCALL);\t\t\\\n     smod_optab->handlers[(int) HImode].libfunc\t\t\\\n-      = gen_rtx_SYMBOL_REF (Pmode, MODHI3_LIBCALL);\t\\\n+      = init_one_libfunc (MODHI3_LIBCALL);\t\t\\\n   } while (0)\n \n /* The assembler op to get a word.  */"}]}