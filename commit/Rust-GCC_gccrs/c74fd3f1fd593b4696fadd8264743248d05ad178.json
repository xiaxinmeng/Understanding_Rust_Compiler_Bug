{"sha": "c74fd3f1fd593b4696fadd8264743248d05ad178", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc0ZmQzZjFmZDU5M2I0Njk2ZmFkZDgyNjQ3NDMyNDhkMDVhZDE3OA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-07-08T14:33:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-07-08T14:33:20Z"}, "message": "re PR target/16430 (ICE when returning non-C aggregates larger than 16 bytes)\n\n\tPR target/16430\n\t* config/sparc/sparc.c (function_value): In 64-bit mode,\n\treturn the aggregates larger than 16 bytes like unions.\n\nFrom-SVN: r84289", "tree": {"sha": "c51aaaad405d8e5ce8b4debcdb4938aaff278119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c51aaaad405d8e5ce8b4debcdb4938aaff278119"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c74fd3f1fd593b4696fadd8264743248d05ad178", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74fd3f1fd593b4696fadd8264743248d05ad178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c74fd3f1fd593b4696fadd8264743248d05ad178", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74fd3f1fd593b4696fadd8264743248d05ad178/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d511ed5fc76892c3f5dca6b78a1b7254bc15bd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d511ed5fc76892c3f5dca6b78a1b7254bc15bd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d511ed5fc76892c3f5dca6b78a1b7254bc15bd1"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "8e24df935fdc44e1e4751e18ae1e1ded1c32641c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74fd3f1fd593b4696fadd8264743248d05ad178/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74fd3f1fd593b4696fadd8264743248d05ad178/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c74fd3f1fd593b4696fadd8264743248d05ad178", "patch": "@@ -1,3 +1,9 @@\n+2004-07-08  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/16430\n+\t* config/sparc/sparc.c (function_value): In 64-bit mode,\n+\treturn the aggregates larger than 16 bytes like unions.\n+\n 2004-07-08  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR target/16199"}, {"sha": "26c9e1e35f3e67c57eb76ede4a116434f2716cbe", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74fd3f1fd593b4696fadd8264743248d05ad178/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74fd3f1fd593b4696fadd8264743248d05ad178/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=c74fd3f1fd593b4696fadd8264743248d05ad178", "patch": "@@ -5750,6 +5750,18 @@ function_value (tree type, enum machine_mode mode, int incoming_p)\n \t    abort (); /* shouldn't get here */\n \n \t  mode = mode_for_size (bytes * BITS_PER_UNIT, MODE_INT, 0);\n+\n+\t  /* ??? We probably should have made the same ABI change in\n+\t     3.4.0 as the one we made for unions.   The latter was\n+\t     required by the SCD though, while the former is not\n+\t     specified, so we favored compatibility and efficiency.\n+\n+\t     Now we're stuck for aggregates larger than 16 bytes,\n+\t     because OImode vanished in the meantime.  Let's not\n+\t     try to be unduly clever, and simply follow the ABI\n+\t     for unions in that case.  */\n+\t  if (mode == BLKmode)\n+\t    return function_arg_union_value (bytes, mode, regbase);\n \t}\n       else if (GET_MODE_CLASS (mode) == MODE_INT\n \t       && GET_MODE_SIZE (mode) < UNITS_PER_WORD)"}]}