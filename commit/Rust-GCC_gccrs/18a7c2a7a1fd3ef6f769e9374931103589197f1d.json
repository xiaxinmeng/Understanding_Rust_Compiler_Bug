{"sha": "18a7c2a7a1fd3ef6f769e9374931103589197f1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThhN2MyYTdhMWZkM2VmNmY3NjllOTM3NDkzMTEwMzU4OTE5N2YxZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-01-05T20:30:40Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-01-05T20:30:40Z"}, "message": "sh.md (movdf): When splitting load into pair of registers...\n\n* config/sh/sh.md (movdf): When splitting load into pair of\nregisters, don't clobber the register used in the address too\nearly.\n\nFrom-SVN: r38722", "tree": {"sha": "cd3bd6b19e670bfdf72cd1a246f86955d72cf95f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd3bd6b19e670bfdf72cd1a246f86955d72cf95f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18a7c2a7a1fd3ef6f769e9374931103589197f1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a7c2a7a1fd3ef6f769e9374931103589197f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a7c2a7a1fd3ef6f769e9374931103589197f1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a7c2a7a1fd3ef6f769e9374931103589197f1d/comments", "author": null, "committer": null, "parents": [{"sha": "fcbd8ef220090816ab831029cf83dc50caa6a5b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcbd8ef220090816ab831029cf83dc50caa6a5b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcbd8ef220090816ab831029cf83dc50caa6a5b1"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "95d38f2de6a000bd8a4542230319ee6fdf8601c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a7c2a7a1fd3ef6f769e9374931103589197f1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a7c2a7a1fd3ef6f769e9374931103589197f1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18a7c2a7a1fd3ef6f769e9374931103589197f1d", "patch": "@@ -1,3 +1,9 @@\n+2001-01-05  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/sh/sh.md (movdf): When splitting load into pair of\n+\tregisters, don't clobber the register used in the address too\n+\tearly.\n+\n 2001-01-05  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* varasm.c (mark_constant_pool): Improve initial comments."}, {"sha": "cd8c6d04f94b918b1a7bb0e52505a4749d003ba3", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a7c2a7a1fd3ef6f769e9374931103589197f1d/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a7c2a7a1fd3ef6f769e9374931103589197f1d/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=18a7c2a7a1fd3ef6f769e9374931103589197f1d", "patch": "@@ -2745,15 +2745,29 @@\n \t    offset = 4;\n \t  mem = copy_rtx (mem);\n \t  PUT_MODE (mem, SImode);\n-\t  word0 = gen_rtx(SUBREG, SImode, regop, 0);\n-\t  emit_insn (store_p\n-\t\t     ? gen_movsi_ie (mem, word0) : gen_movsi_ie (word0, mem));\n-\t  emit_insn (gen_addsi3 (reg0, reg0, GEN_INT (offset)));\n-\t  mem = copy_rtx (mem);\n-\t  word1 = gen_rtx(SUBREG, SImode, regop, 1);\n-\t  emit_insn (store_p\n-\t\t     ? gen_movsi_ie (mem, word1) : gen_movsi_ie (word1, mem));\n-\t  emit_insn (gen_addsi3 (reg0, reg0, GEN_INT (-offset)));\n+\t  word0 = alter_subreg (gen_rtx (SUBREG, SImode, regop, 0));\n+\t  word1 = alter_subreg (gen_rtx (SUBREG, SImode, regop, 1));\n+\t  if (store_p || ! refers_to_regno_p (REGNO (word0),\n+\t\t\t\t\t      REGNO (word0) + 1, addr, 0))\n+\t    {\n+\t      emit_insn (store_p\n+\t\t\t ? gen_movsi_ie (mem, word0)\n+\t\t\t : gen_movsi_ie (word0, mem));\n+\t      emit_insn (gen_addsi3 (reg0, reg0, GEN_INT (offset)));\n+\t      mem = copy_rtx (mem);\n+\t      emit_insn (store_p\n+\t\t\t ? gen_movsi_ie (mem, word1)\n+\t\t\t : gen_movsi_ie (word1, mem));\n+\t      emit_insn (gen_addsi3 (reg0, reg0, GEN_INT (-offset)));\n+\t    }\n+\t  else\n+\t    {\n+\t      emit_insn (gen_addsi3 (reg0, reg0, GEN_INT (offset)));\n+\t      emit_insn (gen_movsi_ie (word1, mem));\n+\t      emit_insn (gen_addsi3 (reg0, reg0, GEN_INT (-offset)));\n+\t      mem = copy_rtx (mem);\n+\t      emit_insn (gen_movsi_ie (word0, mem));\n+\t    }\n \t  DONE;\n \t}\n     }"}]}