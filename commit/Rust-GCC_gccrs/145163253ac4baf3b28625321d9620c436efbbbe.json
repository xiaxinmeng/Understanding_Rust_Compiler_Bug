{"sha": "145163253ac4baf3b28625321d9620c436efbbbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ1MTYzMjUzYWM0YmFmM2IyODYyNTMyMWQ5NjIwYzQzNmVmYmJiZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-09-11T04:25:41Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-09-11T04:25:41Z"}, "message": "[multiple changes]\n\n\n2002-09-11  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/locale_facets.tcc (__convert_from_v): Remove.\n\t* config/locale/gnu/c_locale.h (__convert_from_v): Add.\n\t* config/locale/generic/c_locale.h (__convert_from_v): Add.\n\n2002-09-11  Paolo Carlini  <pcarlini@unitus.it>\n\n        * include/bits/locale_facets.tcc (__convert_from_v):\n        Use __uselocale instead of setlocale for glibc 2.3+.\n\nFrom-SVN: r57021", "tree": {"sha": "162f1f41a865e02d738b59722082ede902af05ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/162f1f41a865e02d738b59722082ede902af05ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/145163253ac4baf3b28625321d9620c436efbbbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/145163253ac4baf3b28625321d9620c436efbbbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/145163253ac4baf3b28625321d9620c436efbbbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/145163253ac4baf3b28625321d9620c436efbbbe/comments", "author": null, "committer": null, "parents": [{"sha": "38cca750247cbf7c5e232a33c51862f42134bc0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38cca750247cbf7c5e232a33c51862f42134bc0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38cca750247cbf7c5e232a33c51862f42134bc0e"}], "stats": {"total": 118, "additions": 78, "deletions": 40}, "files": [{"sha": "ba8ed4b5f6533524169f0f7be51d6f463ffc5c26", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145163253ac4baf3b28625321d9620c436efbbbe/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145163253ac4baf3b28625321d9620c436efbbbe/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=145163253ac4baf3b28625321d9620c436efbbbe", "patch": "@@ -1,3 +1,14 @@\n+2002-09-11  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/locale_facets.tcc (__convert_from_v): Remove.\n+\t* config/locale/gnu/c_locale.h (__convert_from_v): Add.\n+\t* config/locale/generic/c_locale.h (__convert_from_v): Add.\t\n+\n+2002-09-11  Paolo Carlini  <pcarlini@unitus.it>\n+\n+        * include/bits/locale_facets.tcc (__convert_from_v):\n+        Use __uselocale instead of setlocale for glibc 2.3+.\n+\n 2002-09-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/Makefile.am (sources): Edit."}, {"sha": "cb2bae8b5c5c65d8624efe7976cc9d70e07d0744", "filename": "libstdc++-v3/config/locale/generic/c_locale.h", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145163253ac4baf3b28625321d9620c436efbbbe/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145163253ac4baf3b28625321d9620c436efbbbe/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h?ref=145163253ac4baf3b28625321d9620c436efbbbe", "patch": "@@ -1,6 +1,6 @@\n // Wrapper for underlying C-language localization -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,4 +38,31 @@\n namespace std\n {\n   typedef int*\t\t\t__c_locale;\n+\n+  template<typename _Tv>\n+    int\n+    __convert_from_v(char* __out, const int __size, const char* __fmt,\n+\t\t     _Tv __v, const __c_locale&, int __prec = -1)\n+    {\n+      int __ret;\n+      char* __old = setlocale(LC_ALL, NULL);\n+      char* __sav = static_cast<char*>(malloc(strlen(__old) + 1));\n+      if (__sav)\n+        strcpy(__sav, __old);\n+      setlocale(LC_ALL, \"C\");\n+#ifdef _GLIBCPP_USE_C99\n+      if (__prec >= 0)\n+        __ret = snprintf(__out, __size, __fmt, __prec, __v);\n+      else\n+        __ret = snprintf(__out, __size, __fmt, __v);\n+#else\n+      if (__prec >= 0)\n+        __ret = sprintf(__out, __fmt, __prec, __v);\n+      else\n+        __ret = sprintf(__out, __fmt, __v);\n+#endif\n+      setlocale(LC_ALL, __sav);\n+      free(__sav);\n+      return __ret;\n+    }\n }"}, {"sha": "91a92e9aaed256e3bbf08b69cc8502f5349ec082", "filename": "libstdc++-v3/config/locale/gnu/c_locale.h", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145163253ac4baf3b28625321d9620c436efbbbe/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145163253ac4baf3b28625321d9620c436efbbbe/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h?ref=145163253ac4baf3b28625321d9620c436efbbbe", "patch": "@@ -1,6 +1,6 @@\n // Wrapper for underlying C-language localization -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,4 +43,41 @@\n namespace std\n {\n   typedef __locale_t\t\t__c_locale;\n+\n+  template<typename _Tv>\n+    int\n+    __convert_from_v(char* __out, const int __size, const char* __fmt,\n+\t\t     _Tv __v, const __c_locale& __cloc, int __prec = -1)\n+    {\n+      int __ret;\n+#if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n+      __c_locale __old = __uselocale(__cloc);\n+#else\n+      char* __old = setlocale(LC_ALL, NULL);\n+      char* __sav = static_cast<char*>(malloc(strlen(__old) + 1));\n+      if (__sav)\n+        strcpy(__sav, __old);\n+      setlocale(LC_ALL, \"C\");\n+#endif\n+\n+#ifdef _GLIBCPP_USE_C99\n+      if (__prec >= 0)\n+        __ret = snprintf(__out, __size, __fmt, __prec, __v);\n+      else\n+        __ret = snprintf(__out, __size, __fmt, __v);\n+#else\n+      if (__prec >= 0)\n+        __ret = sprintf(__out, __fmt, __prec, __v);\n+      else\n+        __ret = sprintf(__out, __fmt, __v);\n+#endif\n+\n+#if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n+      __uselocale(__old);\n+#else\n+      setlocale(LC_ALL, __sav);\n+      free(__sav);\n+#endif\n+      return __ret;\n+    }\n }"}, {"sha": "195d33ab040737347d167550d4cd25f19f66544b", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145163253ac4baf3b28625321d9620c436efbbbe/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145163253ac4baf3b28625321d9620c436efbbbe/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=145163253ac4baf3b28625321d9620c436efbbbe", "patch": "@@ -1969,47 +1969,10 @@ namespace std\n   // Convert numeric value of type _Tv to string and return length of string.\n   // If snprintf is available use it, otherwise fall back to the unsafe sprintf\n   // which, in general, can be dangerous and should be avoided.\n-#ifdef _GLIBCPP_USE_C99\n   template<typename _Tv>\n     int\n     __convert_from_v(char* __out, const int __size, const char* __fmt,\n-\t\t     _Tv __v, const __c_locale&, int __prec = -1)\n-    {\n-      int __ret;\n-      char* __old = setlocale(LC_ALL, NULL);\n-      char* __sav = static_cast<char*>(malloc(strlen(__old) + 1));\n-      if (__sav)\n-        strcpy(__sav, __old);\n-      setlocale(LC_ALL, \"C\");\n-      if (__prec >= 0)\n-        __ret = snprintf(__out, __size, __fmt, __prec, __v);\n-      else\n-        __ret = snprintf(__out, __size, __fmt, __v);\n-      setlocale(LC_ALL, __sav);\n-      free(__sav);\n-      return __ret;\n-    }\n-#else\n-  template<typename _Tv>\n-    int\n-    __convert_from_v(char* __out, const int, const char* __fmt, _Tv __v,\n-\t\t     const __c_locale&, int __prec = -1)\n-    {\n-      int __ret;\n-      char* __old = setlocale(LC_ALL, NULL);\n-      char* __sav = static_cast<char*>(malloc(strlen(__old) + 1));\n-      if (__sav)\n-        strcpy(__sav, __old);\n-      setlocale(LC_ALL, \"C\");\n-      if (__prec >= 0)\n-        __ret = sprintf(__out, __fmt, __prec, __v);\n-      else\n-        __ret = sprintf(__out, __fmt, __v);\n-      setlocale(LC_ALL, __sav);\n-      free(__sav);\n-      return __ret;\n-    }\n-#endif\n+\t\t     _Tv __v, const __c_locale&, int __prec = -1);\n \n   // Construct correctly padded string, as per 22.2.2.2.2\n   // Assumes "}]}