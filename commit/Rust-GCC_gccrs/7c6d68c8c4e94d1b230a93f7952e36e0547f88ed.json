{"sha": "7c6d68c8c4e94d1b230a93f7952e36e0547f88ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M2ZDY4YzhjNGU5NGQxYjIzMGE5M2Y3OTUyZTM2ZTA1NDdmODhlZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T23:10:00Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T23:10:00Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r891", "tree": {"sha": "366db63a3c07d13e66836a612f3ec47dc54327dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/366db63a3c07d13e66836a612f3ec47dc54327dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c6d68c8c4e94d1b230a93f7952e36e0547f88ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c6d68c8c4e94d1b230a93f7952e36e0547f88ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c6d68c8c4e94d1b230a93f7952e36e0547f88ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c6d68c8c4e94d1b230a93f7952e36e0547f88ed/comments", "author": null, "committer": null, "parents": [{"sha": "6336436e0657638a62683444a41c27a234f640df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6336436e0657638a62683444a41c27a234f640df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6336436e0657638a62683444a41c27a234f640df"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "e40e14d8269e8e940b950e161a94b0834e698a92", "filename": "gcc/config.sub", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c6d68c8c4e94d1b230a93f7952e36e0547f88ed/gcc%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c6d68c8c4e94d1b230a93f7952e36e0547f88ed/gcc%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.sub?ref=7c6d68c8c4e94d1b230a93f7952e36e0547f88ed", "patch": "@@ -78,15 +78,15 @@ case $basic_machine in\n \t# Recognize the basic CPU types with without company name.\n \t# Some are omitted here because they have special meanings below.\n \ttahoe | i[34]86 | i860 | m68k | m68000 | m88k | ns32k | arm | pyramid \\\n-\t\t| tron | a29k | 580 | i960 | h8300 | hppa1.0 | hppa1.1)\n+\t\t| tron | a29k | 580 | i960 | h8300 | hppa1.0 | hppa1.1 | we32)\n \t\tbasic_machine=$basic_machine-unknown\n \t\t;;\n \t# Recognize the basic CPU types with with company name.\n \tvax-* | tahoe-* | i[34]86-* | i860-* | m68k-* | m68000-* | m88k-* \\\n \t      | sparc-* | ns32k-* | fx80-* | arm-* | c[123]* \\\n \t      | mips-* | pyramid-* | tron-* | a29k-* | romp-* | rs6000-* \\\n \t      | none-* | 580-* | cray2-* | h8300-* | i960-* | xmp-* | ymp-* \\\n-\t      | hppa1.0-* | hppa1.1-*)\n+\t      | hppa1.0-* | hppa1.1-* | we32-*)\n \t\t;;\n \t# Recognize the various machine names and aliases which stand\n \t# for a CPU type and a company and sometimes even an OS.\n@@ -176,6 +176,9 @@ case $basic_machine in\n \t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n \t\tbasic_machine=m68000-att\n \t\t;;\n+\t3b*)\n+\t\tbasic_machine=we32-att\n+\t\t;;\n \tdelta | 3300 | motorola-3300 | motorola-delta \\\n \t      | 3300-motorola | delta-motorola)\n \t\tbasic_machine=m68k-motorola"}, {"sha": "da4849e7a162cd12c2daf15e0f11cf6da825f906", "filename": "gcc/varasm.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c6d68c8c4e94d1b230a93f7952e36e0547f88ed/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c6d68c8c4e94d1b230a93f7952e36e0547f88ed/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=7c6d68c8c4e94d1b230a93f7952e36e0547f88ed", "patch": "@@ -109,19 +109,6 @@ text_section ()\n     }\n }\n \n-/* Tell assembler to switch to read-only data section.  This is normally\n-   the text section.  */\n-\n-void\n-readonly_data_section ()\n-{\n-#ifdef READONLY_DATA_SECTION\n-  READONLY_DATA_SECTION ();\n-#else\n-  text_section ();\n-#endif\n-}\n-\n /* Tell assembler to switch to data section.  */\n \n void\n@@ -144,6 +131,19 @@ data_section ()\n     }\n }\n \n+/* Tell assembler to switch to read-only data section.  This is normally\n+   the text section.  */\n+\n+void\n+readonly_data_section ()\n+{\n+#ifdef READONLY_DATA_SECTION\n+  READONLY_DATA_SECTION ();  /* Note this can call data_section.  */\n+#else\n+  text_section ();\n+#endif\n+}\n+\n /* Determine if we're in the text section. */\n \n int"}]}