{"sha": "a2b709cc11de270599d1758f1d2c5a17e920c432", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJiNzA5Y2MxMWRlMjcwNTk5ZDE3NThmMWQyYzVhMTdlOTIwYzQzMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-09T18:20:33Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-09T18:20:33Z"}, "message": "bitmap.c (bitmap_and): Walk array forward.\n\n\t* bitmap.c (bitmap_and): Walk array forward.\n\t(bitmap_and_compl_into): Likewise.\n\t(bitmap_xor): Likewise.\n\t(bitmap_xor_into):  Likewise.\n\t(bitmap_equal_p): Likewise.\n\t(bitmap_intersect_p): Likewise.\n\t(bitmap_intersect_compl_p): Likewise.\n\t(bitmap_ior_and_into): Likewise.\n\t(bitmap_elt_copy): Likewise.\n\t(bitmap_and_compl): Likewise.\n\t(bitmap_elt_ior): Likewise.\n\nFrom-SVN: r160502", "tree": {"sha": "7f819d458483e9b129c6a2bdc7b91cd9a5bfeba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f819d458483e9b129c6a2bdc7b91cd9a5bfeba0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2b709cc11de270599d1758f1d2c5a17e920c432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b709cc11de270599d1758f1d2c5a17e920c432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2b709cc11de270599d1758f1d2c5a17e920c432", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b709cc11de270599d1758f1d2c5a17e920c432/comments", "author": null, "committer": null, "parents": [{"sha": "d2081406d207b56191aac9fec98fc52f842f51ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2081406d207b56191aac9fec98fc52f842f51ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2081406d207b56191aac9fec98fc52f842f51ee"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "8c322d00a3e03d241cb52209448f34814aee60ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b709cc11de270599d1758f1d2c5a17e920c432/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b709cc11de270599d1758f1d2c5a17e920c432/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2b709cc11de270599d1758f1d2c5a17e920c432", "patch": "@@ -1,3 +1,17 @@\n+2010-06-09  Jan Hubicka  <jh@suse.cz>\n+\n+\t* bitmap.c (bitmap_and): Walk array forward.\n+\t(bitmap_and_compl_into): Likewise.\n+\t(bitmap_xor): Likewise.\n+\t(bitmap_xor_into):  Likewise.\n+\t(bitmap_equal_p): Likewise.\n+\t(bitmap_intersect_p): Likewise.\n+\t(bitmap_intersect_compl_p): Likewise.\n+\t(bitmap_ior_and_into): Likewise.\n+\t(bitmap_elt_copy): Likewise.\n+\t(bitmap_and_compl): Likewise.\n+\t(bitmap_elt_ior): Likewise.\n+\n 2010-06-09  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \t* opts-common.c (prune_options): Ensure replacement argv array"}, {"sha": "87de65231f3caab83384faeef756befb85a8350f", "filename": "gcc/bitmap.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b709cc11de270599d1758f1d2c5a17e920c432/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b709cc11de270599d1758f1d2c5a17e920c432/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=a2b709cc11de270599d1758f1d2c5a17e920c432", "patch": "@@ -908,7 +908,7 @@ bitmap_and (bitmap dst, const_bitmap a, const_bitmap b)\n \t    dst_elt = bitmap_elt_insert_after (dst, dst_prev, a_elt->indx);\n \t  else\n \t    dst_elt->indx = a_elt->indx;\n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    {\n \t      BITMAP_WORD r = a_elt->bits[ix] & b_elt->bits[ix];\n \n@@ -960,7 +960,7 @@ bitmap_and_into (bitmap a, const_bitmap b)\n \t  unsigned ix;\n \t  BITMAP_WORD ior = 0;\n \n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    {\n \t      BITMAP_WORD r = a_elt->bits[ix] & b_elt->bits[ix];\n \n@@ -992,7 +992,7 @@ bitmap_elt_copy (bitmap dst, bitmap_element *dst_elt, bitmap_element *dst_prev,\n     {\n       unsigned ix;\n \n-      for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+      for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \tif (src_elt->bits[ix] != dst_elt->bits[ix])\n \t  {\n \t    dst_elt->bits[ix] = src_elt->bits[ix];\n@@ -1056,7 +1056,7 @@ bitmap_and_compl (bitmap dst, const_bitmap a, const_bitmap b)\n \n \t  if (!changed && dst_elt && dst_elt->indx == a_elt->indx)\n \t    {\n-\t      for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t      for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t\t{\n \t\t  BITMAP_WORD r = a_elt->bits[ix] & ~b_elt->bits[ix];\n \n@@ -1082,7 +1082,7 @@ bitmap_and_compl (bitmap dst, const_bitmap a, const_bitmap b)\n \t\t  new_element = false;\n \t\t}\n \n-\t      for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t      for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t\t{\n \t\t  BITMAP_WORD r = a_elt->bits[ix] & ~b_elt->bits[ix];\n \n@@ -1159,7 +1159,7 @@ bitmap_and_compl_into (bitmap a, const_bitmap b)\n \t  unsigned ix;\n \t  BITMAP_WORD ior = 0;\n \n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    {\n \t      BITMAP_WORD cleared = a_elt->bits[ix] & b_elt->bits[ix];\n \t      BITMAP_WORD r = a_elt->bits[ix] ^ cleared;\n@@ -1453,7 +1453,7 @@ bitmap_compl_and_into (bitmap a, const_bitmap b)\n \t  unsigned ix;\n \t  BITMAP_WORD ior = 0;\n \n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    {\n \t      BITMAP_WORD cleared = a_elt->bits[ix] & b_elt->bits[ix];\n \t      BITMAP_WORD r = b_elt->bits[ix] ^ cleared;\n@@ -1494,7 +1494,7 @@ bitmap_elt_ior (bitmap dst, bitmap_element *dst_elt, bitmap_element *dst_prev,\n \n       if (!changed && dst_elt && dst_elt->indx == a_elt->indx)\n \t{\n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    {\n \t      BITMAP_WORD r = a_elt->bits[ix] | b_elt->bits[ix];\n \t      if (r != dst_elt->bits[ix])\n@@ -1511,7 +1511,7 @@ bitmap_elt_ior (bitmap dst, bitmap_element *dst_elt, bitmap_element *dst_prev,\n \t    dst_elt = bitmap_elt_insert_after (dst, dst_prev, a_elt->indx);\n \t  else\n \t    dst_elt->indx = a_elt->indx;\n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    {\n \t      BITMAP_WORD r = a_elt->bits[ix] | b_elt->bits[ix];\n \t      dst_elt->bits[ix] = r;\n@@ -1650,7 +1650,7 @@ bitmap_xor (bitmap dst, const_bitmap a, const_bitmap b)\n \t    dst_elt = bitmap_elt_insert_after (dst, dst_prev, a_elt->indx);\n \t  else\n \t    dst_elt->indx = a_elt->indx;\n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    {\n \t      BITMAP_WORD r = a_elt->bits[ix] ^ b_elt->bits[ix];\n \n@@ -1735,7 +1735,7 @@ bitmap_xor_into (bitmap a, const_bitmap b)\n \t  BITMAP_WORD ior = 0;\n \t  bitmap_element *next = a_elt->next;\n \n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    {\n \t      BITMAP_WORD r = a_elt->bits[ix] ^ b_elt->bits[ix];\n \n@@ -1772,7 +1772,7 @@ bitmap_equal_p (const_bitmap a, const_bitmap b)\n     {\n       if (a_elt->indx != b_elt->indx)\n \treturn false;\n-      for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+      for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \tif (a_elt->bits[ix] != b_elt->bits[ix])\n \t  return false;\n     }\n@@ -1797,7 +1797,7 @@ bitmap_intersect_p (const_bitmap a, const_bitmap b)\n \tb_elt = b_elt->next;\n       else\n \t{\n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    if (a_elt->bits[ix] & b_elt->bits[ix])\n \t      return true;\n \t  a_elt = a_elt->next;\n@@ -1824,7 +1824,7 @@ bitmap_intersect_compl_p (const_bitmap a, const_bitmap b)\n \tb_elt = b_elt->next;\n       else\n \t{\n-\t  for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t    if (a_elt->bits[ix] & ~b_elt->bits[ix])\n \t      return true;\n \t  a_elt = a_elt->next;\n@@ -1880,7 +1880,7 @@ bitmap_ior_and_compl (bitmap dst, const_bitmap a, const_bitmap b, const_bitmap k\n \n \t  BITMAP_WORD ior = 0;\n \t  tmp_elt.indx = b_elt->indx;\n-          for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t  for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n             {\n               BITMAP_WORD r = b_elt->bits[ix] & ~kill_elt->bits[ix];\n               ior |= r;\n@@ -1998,7 +1998,7 @@ bitmap_ior_and_into (bitmap a, const_bitmap b, const_bitmap c)\n \n       overall = 0;\n       and_elt.indx = b_elt->indx;\n-      for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+      for (ix = 0; ix < BITMAP_ELEMENT_WORDS; ix++)\n \t{\n \t  and_elt.bits[ix] = b_elt->bits[ix] & c_elt->bits[ix];\n \t  overall |= and_elt.bits[ix];"}]}