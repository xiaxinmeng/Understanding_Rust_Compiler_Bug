{"sha": "8da9b4f73c2c878b48f45fa2ed47d8a9edd31262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRhOWI0ZjczYzJjODc4YjQ4ZjQ1ZmEyZWQ0N2Q4YTllZGQzMTI2Mg==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-08-24T10:09:33Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-08-24T10:33:02Z"}, "message": "Enable avx512 embedde broadcast for vpternlog.\n\ngcc/ChangeLog:\n\n\tPR target/101989\n\t* config/i386/sse.md (<avx512>_vternlog<mode><sd_maskz_name>):\n\tEnable avx512 embedded broadcast.\n\t(*<avx512>_vternlog<mode>_all): Ditto.\n\t(<avx512>_vternlog<mode>_mask): Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/101989\n\t* gcc.target/i386/pr101989-broadcast-1.c: New test.", "tree": {"sha": "9298162bed64007e0501197f201e0231f17cd95e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9298162bed64007e0501197f201e0231f17cd95e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8da9b4f73c2c878b48f45fa2ed47d8a9edd31262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da9b4f73c2c878b48f45fa2ed47d8a9edd31262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8da9b4f73c2c878b48f45fa2ed47d8a9edd31262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da9b4f73c2c878b48f45fa2ed47d8a9edd31262/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ddb30f941a44bd528904558673ab35394565f08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddb30f941a44bd528904558673ab35394565f08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ddb30f941a44bd528904558673ab35394565f08"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "03fc2df1fb0e9ba09b829cd1a4d17c33c9c9b24e", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da9b4f73c2c878b48f45fa2ed47d8a9edd31262/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da9b4f73c2c878b48f45fa2ed47d8a9edd31262/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=8da9b4f73c2c878b48f45fa2ed47d8a9edd31262", "patch": "@@ -10034,7 +10034,7 @@\n \t(unspec:VI48_AVX512VL\n \t  [(match_operand:VI48_AVX512VL 1 \"register_operand\" \"0\")\n \t   (match_operand:VI48_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI48_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n+\t   (match_operand:VI48_AVX512VL 3 \"bcst_vector_operand\" \"vmBr\")\n \t   (match_operand:SI 4 \"const_0_to_255_operand\")]\n \t  UNSPEC_VTERNLOG))]\n   \"TARGET_AVX512F\"\n@@ -10048,7 +10048,7 @@\n \t(unspec:V\n \t  [(match_operand:V 1 \"register_operand\" \"0\")\n \t   (match_operand:V 2 \"register_operand\" \"v\")\n-\t   (match_operand:V 3 \"nonimmediate_operand\" \"vm\")\n+\t   (match_operand:V 3 \"bcst_vector_operand\" \"vmBr\")\n \t   (match_operand:SI 4 \"const_0_to_255_operand\")]\n \t  UNSPEC_VTERNLOG))]\n   \"TARGET_AVX512F\"\n@@ -10281,7 +10281,7 @@\n \t  (unspec:VI48_AVX512VL\n \t    [(match_operand:VI48_AVX512VL 1 \"register_operand\" \"0\")\n \t     (match_operand:VI48_AVX512VL 2 \"register_operand\" \"v\")\n-\t     (match_operand:VI48_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n+\t     (match_operand:VI48_AVX512VL 3 \"bcst_vector_operand\" \"vmBr\")\n \t     (match_operand:SI 4 \"const_0_to_255_operand\")]\n \t    UNSPEC_VTERNLOG)\n \t  (match_dup 1)"}, {"sha": "d03d192915f6e7df70be39e25f5701f31fda0b02", "filename": "gcc/testsuite/gcc.target/i386/pr101989-broadcast-1.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da9b4f73c2c878b48f45fa2ed47d8a9edd31262/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101989-broadcast-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da9b4f73c2c878b48f45fa2ed47d8a9edd31262/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101989-broadcast-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101989-broadcast-1.c?ref=8da9b4f73c2c878b48f45fa2ed47d8a9edd31262", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512vl\" } */\n+/* { dg-final { scan-assembler-times \"vpternlog\" 4 } } */\n+/* { dg-final { scan-assembler-times \"\\\\\\{1to4\\\\\\}\" 4 } } */\n+#include<immintrin.h>\n+extern long long C;\n+__m256d\n+copysign2_pd(__m256d from, __m256d to) {\n+  __m256i a = _mm256_castpd_si256(from);\n+  __m256d avx_signbit = _mm256_castsi256_pd(_mm256_slli_epi64(_mm256_cmpeq_epi64(a, a), 63));\n+  /* (avx_signbit & from) | (~avx_signbit & to)  */\n+  return _mm256_or_pd(_mm256_and_pd(avx_signbit, from), _mm256_andnot_pd(avx_signbit, to));\n+}\n+\n+__m256i\n+mask_pternlog (__m256i A, __m256i B, __mmask8 U)\n+{\n+  return _mm256_mask_ternarylogic_epi64 (A, U, B, _mm256_set1_epi64x (C) ,202);\n+}\n+\n+__m256i\n+maskz_pternlog (__m256i A, __m256i B, __mmask8 U)\n+{\n+  return _mm256_maskz_ternarylogic_epi64 (U, A, B, _mm256_set1_epi64x (C) ,202);\n+}\n+\n+__m256i\n+none_pternlog (__m256i A, __m256i B)\n+{\n+  return _mm256_ternarylogic_epi64 (A, B, _mm256_set1_epi64x (C) ,202);\n+}"}]}