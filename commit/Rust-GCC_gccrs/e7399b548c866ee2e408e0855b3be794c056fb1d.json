{"sha": "e7399b548c866ee2e408e0855b3be794c056fb1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczOTliNTQ4Yzg2NmVlMmU0MDhlMDg1NWIzYmU3OTRjMDU2ZmIxZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-08T13:15:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-08T13:15:40Z"}, "message": "re PR ipa/92409 (r277920 causes ICE in gcc.dg/cast-function-1.c)\n\n2019-11-08  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/92409\n\t* tree-inline.c (declare_return_variable): Properly handle\n\ttype mismatches for the return slot.\n\nFrom-SVN: r277972", "tree": {"sha": "5e723a890f35d1b88c4a982785749464f8f68943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e723a890f35d1b88c4a982785749464f8f68943"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7399b548c866ee2e408e0855b3be794c056fb1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7399b548c866ee2e408e0855b3be794c056fb1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7399b548c866ee2e408e0855b3be794c056fb1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7399b548c866ee2e408e0855b3be794c056fb1d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03a05fd35a901a3104a7b54913aef7a357f84a2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a05fd35a901a3104a7b54913aef7a357f84a2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03a05fd35a901a3104a7b54913aef7a357f84a2f"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "89bb204088034dce9ad65bfcd8291e613ae5a6dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7399b548c866ee2e408e0855b3be794c056fb1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7399b548c866ee2e408e0855b3be794c056fb1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7399b548c866ee2e408e0855b3be794c056fb1d", "patch": "@@ -1,3 +1,9 @@\n+2019-11-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/92409\n+\t* tree-inline.c (declare_return_variable): Properly handle\n+\ttype mismatches for the return slot.\n+\n 2019-11-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/92095"}, {"sha": "63274f746796d26db105293d52ef8dc53280e3b0", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7399b548c866ee2e408e0855b3be794c056fb1d/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7399b548c866ee2e408e0855b3be794c056fb1d/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=e7399b548c866ee2e408e0855b3be794c056fb1d", "patch": "@@ -3593,7 +3593,9 @@ declare_return_variable (copy_body_data *id, tree return_slot, tree modify_dest,\n      vs. the call expression.  */\n   if (modify_dest)\n     caller_type = TREE_TYPE (modify_dest);\n-  else\n+  else if (return_slot)\n+    caller_type = TREE_TYPE (return_slot);\n+  else /* No LHS on the call.  */\n     caller_type = TREE_TYPE (TREE_TYPE (callee));\n \n   /* We don't need to do anything for functions that don't return anything.  */\n@@ -3634,6 +3636,10 @@ declare_return_variable (copy_body_data *id, tree return_slot, tree modify_dest,\n \t  && !DECL_GIMPLE_REG_P (result)\n \t  && DECL_P (var))\n \tDECL_GIMPLE_REG_P (var) = 0;\n+\n+      if (!useless_type_conversion_p (callee_type, caller_type))\n+\tvar = build1 (VIEW_CONVERT_EXPR, callee_type, var);\n+\n       use = NULL;\n       goto done;\n     }"}]}