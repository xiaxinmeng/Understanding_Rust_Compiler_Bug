{"sha": "4754d4e86afb974d0316a2b2793029f4407d762f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc1NGQ0ZTg2YWZiOTc0ZDAzMTZhMmIyNzkzMDI5ZjQ0MDdkNzYyZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2016-04-19T12:24:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-19T12:24:29Z"}, "message": "sem_util.adb (Copy_Node_With_Replacement): use Set_Comes_From_Source instead of directly manipulating internals of the...\n\n2016-04-19  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_util.adb (Copy_Node_With_Replacement):\n\tuse Set_Comes_From_Source instead of directly manipulating\n\tinternals of the node table.\n\t* sem_util.adb (Within_Scope): refactored to remove duplicated code.\n\t* sem_aux.adb (Get_Rep_Pragma,\n\tSubprogram_Body_Entity, Subprogram_Spec): declare variables that\n\tdo not change as constants and initialize them in the declaration.\n\t(Get_Rep_Pragma, Subprogram_Body_Entity, Subprogram_Spec): declare\n\tvariables that do not change as constants and initialize them\n\tin the declaration.\n\nFrom-SVN: r235193", "tree": {"sha": "8f0e05f309c4e50b8151595d415edaab3e212dd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f0e05f309c4e50b8151595d415edaab3e212dd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4754d4e86afb974d0316a2b2793029f4407d762f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4754d4e86afb974d0316a2b2793029f4407d762f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4754d4e86afb974d0316a2b2793029f4407d762f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4754d4e86afb974d0316a2b2793029f4407d762f/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87fd6836074fadc41833bf26686e99dbe574a638", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fd6836074fadc41833bf26686e99dbe574a638", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87fd6836074fadc41833bf26686e99dbe574a638"}], "stats": {"total": 58, "additions": 25, "deletions": 33}, "files": [{"sha": "a063ef4f68eeb0a56c539607e1a62123abb3bd5e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4754d4e86afb974d0316a2b2793029f4407d762f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4754d4e86afb974d0316a2b2793029f4407d762f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4754d4e86afb974d0316a2b2793029f4407d762f", "patch": "@@ -1,3 +1,16 @@\n+2016-04-19  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_util.adb (Copy_Node_With_Replacement):\n+\tuse Set_Comes_From_Source instead of directly manipulating\n+\tinternals of the node table.\n+\t* sem_util.adb (Within_Scope): refactored to remove duplicated code.\n+\t* sem_aux.adb (Get_Rep_Pragma,\n+\tSubprogram_Body_Entity, Subprogram_Spec): declare variables that\n+\tdo not change as constants and initialize them in the declaration.\n+\t(Get_Rep_Pragma, Subprogram_Body_Entity, Subprogram_Spec): declare\n+\tvariables that do not change as constants and initialize them\n+\tin the declaration.\n+\n 2016-04-19  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_res.adb (Resolve_Entry_Call): If the entry has"}, {"sha": "79a3b9996a0f94c158d1330c68e85d0f7b7d0636", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4754d4e86afb974d0316a2b2793029f4407d762f/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4754d4e86afb974d0316a2b2793029f4407d762f/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=4754d4e86afb974d0316a2b2793029f4407d762f", "patch": "@@ -611,11 +611,9 @@ package body Sem_Aux is\n       Nam           : Name_Id;\n       Check_Parents : Boolean := True) return Node_Id\n    is\n-      N : Node_Id;\n+      N : constant Node_Id := Get_Rep_Item (E, Nam, Check_Parents);\n \n    begin\n-      N := Get_Rep_Item (E, Nam, Check_Parents);\n-\n       if Present (N) and then Nkind (N) = N_Pragma then\n          return N;\n       end if;\n@@ -1381,12 +1379,10 @@ package body Sem_Aux is\n    -----------------------\n \n    function Number_Components (Typ : Entity_Id) return Nat is\n-      N    : Int;\n+      N    : Nat := 0;\n       Comp : Entity_Id;\n \n    begin\n-      N := 0;\n-\n       --  We do not call Einfo.First_Component_Or_Discriminant, as this\n       --  function does not skip completely hidden discriminants, which we\n       --  want to skip here.\n@@ -1410,12 +1406,10 @@ package body Sem_Aux is\n    --------------------------\n \n    function Number_Discriminants (Typ : Entity_Id) return Pos is\n-      N     : Int;\n-      Discr : Entity_Id;\n+      N     : Nat       := 0;\n+      Discr : Entity_Id := First_Discriminant (Typ);\n \n    begin\n-      N := 0;\n-      Discr := First_Discriminant (Typ);\n       while Present (Discr) loop\n          N := N + 1;\n          Discr := Next_Discriminant (Discr);\n@@ -1521,13 +1515,10 @@ package body Sem_Aux is\n    ----------------------------\n \n    function Subprogram_Body_Entity (E : Entity_Id) return Entity_Id is\n-      N : Node_Id;\n+      N : constant Node_Id := Parent (Subprogram_Specification (E));\n+      --  Declaration for E\n \n    begin\n-      --  Retrieve the declaration for E\n-\n-      N := Parent (Subprogram_Specification (E));\n-\n       --  If this declaration is not a subprogram body, then it must be a\n       --  subprogram declaration or body stub, from which we can retrieve the\n       --  entity for the corresponding subprogram body if any, or an abstract\n@@ -1550,13 +1541,10 @@ package body Sem_Aux is\n    ---------------------\n \n    function Subprogram_Spec (E : Entity_Id) return Node_Id is\n-      N : Node_Id;\n+      N : constant Node_Id := Parent (Subprogram_Specification (E));\n+      --  Declaration for E\n \n    begin\n-      --  Retrieve the declaration for E\n-\n-      N := Parent (Subprogram_Specification (E));\n-\n       --  This declaration is either subprogram declaration or a subprogram\n       --  body, in which case return Empty.\n "}, {"sha": "5aabd25c3fab7573a0254da09146bb3407e3a776", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4754d4e86afb974d0316a2b2793029f4407d762f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4754d4e86afb974d0316a2b2793029f4407d762f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4754d4e86afb974d0316a2b2793029f4407d762f", "patch": "@@ -15735,8 +15735,9 @@ package body Sem_Util is\n                --  a completely new node, so the Comes_From_Source flag\n                --  should be reset to the proper default value.\n \n-               Nodes.Table (New_Node).Comes_From_Source :=\n-                 Default_Node.Comes_From_Source;\n+               Set_Comes_From_Source (New_Node,\n+                                      Default_Node.Comes_From_Source);\n+\n             end if;\n \n             --  If the node is call and has named associations,\n@@ -20179,18 +20180,8 @@ package body Sem_Util is\n    ------------------\n \n    function Within_Scope (E : Entity_Id; S : Entity_Id) return Boolean is\n-      SE : Entity_Id;\n    begin\n-      SE := Scope (E);\n-      loop\n-         if SE = S then\n-            return True;\n-         elsif SE = Standard_Standard then\n-            return False;\n-         else\n-            SE := Scope (SE);\n-         end if;\n-      end loop;\n+      return Scope_Within_Or_Same (Scope (E), S);\n    end Within_Scope;\n \n    ----------------"}]}