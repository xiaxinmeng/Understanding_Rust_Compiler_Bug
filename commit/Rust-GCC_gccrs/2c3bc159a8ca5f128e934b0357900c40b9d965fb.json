{"sha": "2c3bc159a8ca5f128e934b0357900c40b9d965fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMzYmMxNTlhOGNhNWYxMjhlOTM0YjAzNTc5MDBjNDBiOWQ5NjVmYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-06-16T07:58:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-27T08:05:17Z"}, "message": "[Ada] Remove obsolete special case in Switch_View\n\ngcc/ada/\n\n\t* sem_ch12.adb (Instantiate_Package_Body): Add commentary for a\n\tnesting issue with parent handling and private view switching.\n\t(Switch_View): Do not skip specific private-dependent subtypes.", "tree": {"sha": "54eb7cf0343c811e07438d1b70e93d1cd8f0bceb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54eb7cf0343c811e07438d1b70e93d1cd8f0bceb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c3bc159a8ca5f128e934b0357900c40b9d965fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c3bc159a8ca5f128e934b0357900c40b9d965fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c3bc159a8ca5f128e934b0357900c40b9d965fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c3bc159a8ca5f128e934b0357900c40b9d965fb/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c893f4a5e0ec94d20bdc5786de3d91f2a13f668e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c893f4a5e0ec94d20bdc5786de3d91f2a13f668e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c893f4a5e0ec94d20bdc5786de3d91f2a13f668e"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "e09a7ac1e3fd34c2ff999427b85f85ccd64a2bbe", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c3bc159a8ca5f128e934b0357900c40b9d965fb/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c3bc159a8ca5f128e934b0357900c40b9d965fb/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=2c3bc159a8ca5f128e934b0357900c40b9d965fb", "patch": "@@ -12029,6 +12029,19 @@ package body Sem_Ch12 is\n          end if;\n \n          Restore_Hidden_Primitives (Vis_Prims_List);\n+\n+         --  Restore the private views that were made visible when the body of\n+         --  the instantiation was created. Note that, in the case where one of\n+         --  these private views is declared in the parent, there is a nesting\n+         --  issue with the calls to Install_Parent and Remove_Parent made in\n+         --  between above with In_Body set to True, because these calls also\n+         --  want to swap and restore this private view respectively. In this\n+         --  case, the call to Install_Parent does nothing, but the call to\n+         --  Remove_Parent does restore the private view, thus undercutting the\n+         --  call to Restore_Private_Views. That's OK under the condition that\n+         --  the two mechanisms swap exactly the same entities, in particular\n+         --  the private entities dependent on the primary private entities.\n+\n          Restore_Private_Views (Act_Decl_Id);\n \n          --  Remove the current unit from visibility if this is an instance\n@@ -16680,19 +16693,9 @@ package body Sem_Ch12 is\n       end if;\n \n       while Present (Priv_Elmt) loop\n-         Priv_Sub := (Node (Priv_Elmt));\n-\n-         --  We avoid flipping the subtype if the Etype of its full view is\n-         --  private because this would result in a malformed subtype. This\n-         --  occurs when the Etype of the subtype full view is the full view of\n-         --  the base type (and since the base types were just switched, the\n-         --  subtype is pointing to the wrong view). This is currently the case\n-         --  for tagged record types, access types (maybe more?) and needs to\n-         --  be resolved. ???\n-\n-         if Present (Full_View (Priv_Sub))\n-           and then not Is_Private_Type (Etype (Full_View (Priv_Sub)))\n-         then\n+         Priv_Sub := Node (Priv_Elmt);\n+\n+         if Present (Full_View (Priv_Sub)) then\n             Prepend_Elmt (Full_View (Priv_Sub), Exchanged_Views);\n             Exchange_Declarations (Priv_Sub);\n          end if;"}]}