{"sha": "b15341b8efe5498ec3e5637124317c0c3ea6e94f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE1MzQxYjhlZmU1NDk4ZWMzZTU2MzcxMjQzMTdjMGMzZWE2ZTk0Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-08-01T12:31:40Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-08-01T12:31:40Z"}, "message": "* decl.c, utils.c: Fix comment typos.\n\nFrom-SVN: r102630", "tree": {"sha": "2acb02e52515dad543043259c3f7efc7eefacb86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2acb02e52515dad543043259c3f7efc7eefacb86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b15341b8efe5498ec3e5637124317c0c3ea6e94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15341b8efe5498ec3e5637124317c0c3ea6e94f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b15341b8efe5498ec3e5637124317c0c3ea6e94f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15341b8efe5498ec3e5637124317c0c3ea6e94f/comments", "author": null, "committer": null, "parents": [{"sha": "5ded72541370aaeb3dd3d07c46ad16302df0329f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ded72541370aaeb3dd3d07c46ad16302df0329f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ded72541370aaeb3dd3d07c46ad16302df0329f"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "68df881057e10026f447d232ee6e6d052a7e39b9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15341b8efe5498ec3e5637124317c0c3ea6e94f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15341b8efe5498ec3e5637124317c0c3ea6e94f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b15341b8efe5498ec3e5637124317c0c3ea6e94f", "patch": "@@ -1,3 +1,7 @@\n+2005-08-01  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* decl.c, utils.c: Fix comment typos.\n+\n 2005-07-29  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* decl.c, init.c, initialize.c: Fix comment typos."}, {"sha": "65fa60f356da9d085823fb124ef7b288fc777f9a", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15341b8efe5498ec3e5637124317c0c3ea6e94f/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15341b8efe5498ec3e5637124317c0c3ea6e94f/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=b15341b8efe5498ec3e5637124317c0c3ea6e94f", "patch": "@@ -1100,7 +1100,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    SET_DECL_CONST_CORRESPONDING_VAR (gnu_decl, gnu_corr_var);\n \t  }\n \n-\t/* If this is declared in a block that contains an block with an\n+\t/* If this is declared in a block that contains a block with an\n \t   exception handler, we must force this variable in memory to\n \t   suppress an invalid optimization.  */\n \tif (Has_Nested_Block_With_Handler (Scope (gnat_entity))"}, {"sha": "1bf00075e5414d2f06ed397bf650bd9c52a15e09", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15341b8efe5498ec3e5637124317c0c3ea6e94f/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15341b8efe5498ec3e5637124317c0c3ea6e94f/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=b15341b8efe5498ec3e5637124317c0c3ea6e94f", "patch": "@@ -712,7 +712,7 @@ finish_record_type (tree record_type, tree fieldlist, bool has_rep,\n       tree this_ada_size = DECL_SIZE (field);\n \n       /* We need to make an XVE/XVU record if any field has variable size,\n-\t whether or not the record does.  For example, if we have an union,\n+\t whether or not the record does.  For example, if we have a union,\n \t it may be that all fields, rounded up to the alignment, have the\n \t same size, in which case we'll use that size.  But the debug\n \t output routines (except Dwarf2) won't be able to output the fields,\n@@ -826,7 +826,7 @@ write_record_type_debug_info (tree record_type)\n   for (field = fieldlist; field; field = TREE_CHAIN (field))\n     {\n       /* We need to make an XVE/XVU record if any field has variable size,\n-\t whether or not the record does.  For example, if we have an union,\n+\t whether or not the record does.  For example, if we have a union,\n \t it may be that all fields, rounded up to the alignment, have the\n \t same size, in which case we'll use that size.  But the debug\n \t output routines (except Dwarf2) won't be able to output the fields,"}]}