{"sha": "3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I1ZThlZTRmMWVjYzZkNDA3ZjM5MTY5NWY2NTk2MGJjYmQ2M2NmZg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-12-13T17:21:16Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-07-05T19:40:45Z"}, "message": "Darwin, configury : Allow for specification and detection of dsymutil.\n\nIn order to enable DWARF versions > 2 we need a sufficiently modern\nversion of dsymutil (in addition to the assembler / linker).  This\nallows the user to configure a different path from the installed one.\n\nIn addition, there are several sources of dsymutil so we differentiate\nthese in order to be get accurate version information.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/ChangeLog:\n\n\t* configure.ac: Handle --with-dsymutil in the same way as we\n\tdo for the assembler and linker.  (DEFAULT_DSYMUTIL): New.\n\tExtract the type and version for the dsymutil configured or\n\tfound by the default searches.\n\t* config.in: Regenerated.\n\t* configure: Regenerated.\n\t* collect2.c (do_dsymutil): Handle locating dsymutil in the\n\tsame way as for the assembler and  linker.\n\t* config/darwin.h (DSYMUTIL): Delete.\n\t* gcc.c: Report a configured dsymutil correctly.\n\t* exec-tool.in: Allow for dsymutil.\n\nChangeLog:\n\n\t* Makefile.def: Add dsymutil defs.\n\t* Makefile.in: Regenerated.\n\t* Makefile.tpl: Add dsymutil to flags.\n\t* configure: Regenerated.\n\t* configure.ac: Add dsymutil to target and build recipes.", "tree": {"sha": "56c6da96a8fef14fde6e9e57f9d06ae33c8b2e58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56c6da96a8fef14fde6e9e57f9d06ae33c8b2e58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be8749f939a933bca6de19d9cf1a510d5954c2fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8749f939a933bca6de19d9cf1a510d5954c2fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be8749f939a933bca6de19d9cf1a510d5954c2fa"}], "stats": {"total": 768, "additions": 757, "deletions": 11}, "files": [{"sha": "fbfdb6fee086aa6df47c790cda3c73e9814afe6a", "filename": "Makefile.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -291,6 +291,7 @@ flags_to_pass = { flag= CFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= CPPFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= CXXFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= DLLTOOL_FOR_TARGET ; };\n+flags_to_pass = { flag= DSYMUTIL_FOR_TARGET ; };\n flags_to_pass = { flag= FLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= GFORTRAN_FOR_TARGET ; };\n flags_to_pass = { flag= GOC_FOR_TARGET ; };"}, {"sha": "3809d177a99734484474161c153f5b46a454b35c", "filename": "Makefile.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -159,6 +159,7 @@ BUILD_EXPORTS = \\\n \tGDC=\"$(GDC_FOR_BUILD)\"; export GDC; \\\n \tGDCFLAGS=\"$(GDCFLAGS_FOR_BUILD)\"; export GDCFLAGS; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n+\tDSYMUTIL=\"$(DSYMUTIL_FOR_BUILD)\"; export DSYMUTIL; \\\n \tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"; export LDFLAGS; \\\n \tNM=\"$(NM_FOR_BUILD)\"; export NM; \\\n@@ -200,6 +201,7 @@ HOST_EXPORTS = \\\n \tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n \tCXX_FOR_BUILD=\"$(CXX_FOR_BUILD)\"; export CXX_FOR_BUILD; \\\n \tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n+\tDSYMUTIL=\"$(DSYMUTIL)\"; export DSYMUTIL; \\\n \tLD=\"$(LD)\"; export LD; \\\n \tLDFLAGS=\"$(STAGE1_LDFLAGS) $(LDFLAGS)\"; export LDFLAGS; \\\n \tNM=\"$(NM)\"; export NM; \\\n@@ -212,6 +214,7 @@ HOST_EXPORTS = \\\n \tREADELF=\"$(READELF)\"; export READELF; \\\n \tAR_FOR_TARGET=\"$(AR_FOR_TARGET)\"; export AR_FOR_TARGET; \\\n \tAS_FOR_TARGET=\"$(AS_FOR_TARGET)\"; export AS_FOR_TARGET; \\\n+\tDSYMUTIL_FOR_TARGET=\"$(DSYMUTIL_FOR_TARGET)\"; export DSYMUTIL_FOR_TARGET; \\\n \tGCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\"; export GCC_FOR_TARGET; \\\n \tLD_FOR_TARGET=\"$(LD_FOR_TARGET)\"; export LD_FOR_TARGET; \\\n \tNM_FOR_TARGET=\"$(NM_FOR_TARGET)\"; export NM_FOR_TARGET; \\\n@@ -294,6 +297,7 @@ BASE_TARGET_EXPORTS = \\\n \tGOC=\"$(GOC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GOC; \\\n \tGDC=\"$(GDC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GDC; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n+\tDSYMUTIL=\"$(DSYMUTIL_FOR_TARGET)\"; export DSYMUTIL; \\\n \tLD=\"$(COMPILER_LD_FOR_TARGET)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_TARGET)\"; export LDFLAGS; \\\n \tLIPO=\"$(LIPO_FOR_TARGET)\"; export LIPO; \\\n@@ -356,6 +360,7 @@ CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n CXXFLAGS_FOR_BUILD = @CXXFLAGS_FOR_BUILD@\n CXX_FOR_BUILD = @CXX_FOR_BUILD@\n DLLTOOL_FOR_BUILD = @DLLTOOL_FOR_BUILD@\n+DSYMUTIL_FOR_BUILD = @DSYMUTIL_FOR_BUILD@\n GFORTRAN_FOR_BUILD = @GFORTRAN_FOR_BUILD@\n GOC_FOR_BUILD = @GOC_FOR_BUILD@\n GDC_FOR_BUILD = @GDC_FOR_BUILD@\n@@ -406,6 +411,7 @@ AR_FLAGS = rc\n CC = @CC@\n CXX = @CXX@\n DLLTOOL = @DLLTOOL@\n+DSYMUTIL = @DSYMUTIL@\n LD = @LD@\n LIPO = @LIPO@\n NM = @NM@\n@@ -596,6 +602,7 @@ GFORTRAN_FOR_TARGET=$(STAGE_CC_WRAPPER) @GFORTRAN_FOR_TARGET@\n GOC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GOC_FOR_TARGET@\n GDC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GDC_FOR_TARGET@\n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n+DSYMUTIL_FOR_TARGET=@DSYMUTIL_FOR_TARGET@\n LD_FOR_TARGET=@LD_FOR_TARGET@\n \n LIPO_FOR_TARGET=@LIPO_FOR_TARGET@\n@@ -814,6 +821,7 @@ BASE_FLAGS_TO_PASS = \\\n \t\"CPPFLAGS_FOR_TARGET=$(CPPFLAGS_FOR_TARGET)\" \\\n \t\"CXXFLAGS_FOR_TARGET=$(CXXFLAGS_FOR_TARGET)\" \\\n \t\"DLLTOOL_FOR_TARGET=$(DLLTOOL_FOR_TARGET)\" \\\n+\t\"DSYMUTIL_FOR_TARGET=$(DSYMUTIL_FOR_TARGET)\" \\\n \t\"FLAGS_FOR_TARGET=$(FLAGS_FOR_TARGET)\" \\\n \t\"GFORTRAN_FOR_TARGET=$(GFORTRAN_FOR_TARGET)\" \\\n \t\"GOC_FOR_TARGET=$(GOC_FOR_TARGET)\" \\\n@@ -889,6 +897,7 @@ EXTRA_HOST_FLAGS = \\\n \t'CC=$(CC)' \\\n \t'CXX=$(CXX)' \\\n \t'DLLTOOL=$(DLLTOOL)' \\\n+\t'DSYMUTIL=$(DSYMUTIL)' \\\n \t'GFORTRAN=$(GFORTRAN)' \\\n \t'GOC=$(GOC)' \\\n \t'GDC=$(GDC)' \\\n@@ -947,6 +956,7 @@ EXTRA_TARGET_FLAGS = \\\n \t $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'CXXFLAGS=$$(CXXFLAGS_FOR_TARGET)' \\\n \t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\\n+\t'DSYMUTIL=$$(DSYMUTIL_FOR_TARGET)' \\\n \t'GFORTRAN=$$(GFORTRAN_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GOC=$$(GOC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GOCFLAGS=$$(GOCFLAGS_FOR_TARGET)' \\"}, {"sha": "bffd85bd68ee1846fdf54e1b10956abb750e2e59", "filename": "Makefile.tpl", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -162,6 +162,7 @@ BUILD_EXPORTS = \\\n \tGDC=\"$(GDC_FOR_BUILD)\"; export GDC; \\\n \tGDCFLAGS=\"$(GDCFLAGS_FOR_BUILD)\"; export GDCFLAGS; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n+\tDSYMUTIL=\"$(DSYMUTIL_FOR_BUILD)\"; export DSYMUTIL; \\\n \tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"; export LDFLAGS; \\\n \tNM=\"$(NM_FOR_BUILD)\"; export NM; \\\n@@ -203,6 +204,7 @@ HOST_EXPORTS = \\\n \tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n \tCXX_FOR_BUILD=\"$(CXX_FOR_BUILD)\"; export CXX_FOR_BUILD; \\\n \tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n+\tDSYMUTIL=\"$(DSYMUTIL)\"; export DSYMUTIL; \\\n \tLD=\"$(LD)\"; export LD; \\\n \tLDFLAGS=\"$(STAGE1_LDFLAGS) $(LDFLAGS)\"; export LDFLAGS; \\\n \tNM=\"$(NM)\"; export NM; \\\n@@ -215,6 +217,7 @@ HOST_EXPORTS = \\\n \tREADELF=\"$(READELF)\"; export READELF; \\\n \tAR_FOR_TARGET=\"$(AR_FOR_TARGET)\"; export AR_FOR_TARGET; \\\n \tAS_FOR_TARGET=\"$(AS_FOR_TARGET)\"; export AS_FOR_TARGET; \\\n+\tDSYMUTIL_FOR_TARGET=\"$(DSYMUTIL_FOR_TARGET)\"; export DSYMUTIL_FOR_TARGET; \\\n \tGCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\"; export GCC_FOR_TARGET; \\\n \tLD_FOR_TARGET=\"$(LD_FOR_TARGET)\"; export LD_FOR_TARGET; \\\n \tNM_FOR_TARGET=\"$(NM_FOR_TARGET)\"; export NM_FOR_TARGET; \\\n@@ -297,6 +300,7 @@ BASE_TARGET_EXPORTS = \\\n \tGOC=\"$(GOC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GOC; \\\n \tGDC=\"$(GDC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GDC; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n+\tDSYMUTIL=\"$(DSYMUTIL_FOR_TARGET)\"; export DSYMUTIL; \\\n \tLD=\"$(COMPILER_LD_FOR_TARGET)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_TARGET)\"; export LDFLAGS; \\\n \tLIPO=\"$(LIPO_FOR_TARGET)\"; export LIPO; \\\n@@ -359,6 +363,7 @@ CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n CXXFLAGS_FOR_BUILD = @CXXFLAGS_FOR_BUILD@\n CXX_FOR_BUILD = @CXX_FOR_BUILD@\n DLLTOOL_FOR_BUILD = @DLLTOOL_FOR_BUILD@\n+DSYMUTIL_FOR_BUILD = @DSYMUTIL_FOR_BUILD@\n GFORTRAN_FOR_BUILD = @GFORTRAN_FOR_BUILD@\n GOC_FOR_BUILD = @GOC_FOR_BUILD@\n GDC_FOR_BUILD = @GDC_FOR_BUILD@\n@@ -409,6 +414,7 @@ AR_FLAGS = rc\n CC = @CC@\n CXX = @CXX@\n DLLTOOL = @DLLTOOL@\n+DSYMUTIL = @DSYMUTIL@\n LD = @LD@\n LIPO = @LIPO@\n NM = @NM@\n@@ -519,6 +525,7 @@ GFORTRAN_FOR_TARGET=$(STAGE_CC_WRAPPER) @GFORTRAN_FOR_TARGET@\n GOC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GOC_FOR_TARGET@\n GDC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GDC_FOR_TARGET@\n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n+DSYMUTIL_FOR_TARGET=@DSYMUTIL_FOR_TARGET@\n LD_FOR_TARGET=@LD_FOR_TARGET@\n \n LIPO_FOR_TARGET=@LIPO_FOR_TARGET@\n@@ -644,6 +651,7 @@ EXTRA_HOST_FLAGS = \\\n \t'CC=$(CC)' \\\n \t'CXX=$(CXX)' \\\n \t'DLLTOOL=$(DLLTOOL)' \\\n+\t'DSYMUTIL=$(DSYMUTIL)' \\\n \t'GFORTRAN=$(GFORTRAN)' \\\n \t'GOC=$(GOC)' \\\n \t'GDC=$(GDC)' \\\n@@ -702,6 +710,7 @@ EXTRA_TARGET_FLAGS = \\\n \t $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'CXXFLAGS=$$(CXXFLAGS_FOR_TARGET)' \\\n \t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\\n+\t'DSYMUTIL=$$(DSYMUTIL_FOR_TARGET)' \\\n \t'GFORTRAN=$$(GFORTRAN_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GOC=$$(GOC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GOCFLAGS=$$(GOCFLAGS_FOR_TARGET)' \\"}, {"sha": "732d1870b3de5b69d621693c4252d984df6961be", "filename": "configure", "status": "modified", "additions": 413, "deletions": 0, "changes": 413, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -609,6 +609,7 @@ OBJCOPY_FOR_TARGET\n NM_FOR_TARGET\n LIPO_FOR_TARGET\n LD_FOR_TARGET\n+DSYMUTIL_FOR_TARGET\n DLLTOOL_FOR_TARGET\n AS_FOR_TARGET\n AR_FOR_TARGET\n@@ -629,6 +630,7 @@ RANLIB\n NM\n LIPO\n LD\n+DSYMUTIL\n DLLTOOL\n AS\n AR\n@@ -649,6 +651,7 @@ LDFLAGS_FOR_BUILD\n GDC_FOR_BUILD\n GOC_FOR_BUILD\n GFORTRAN_FOR_BUILD\n+DSYMUTIL_FOR_BUILD\n DLLTOOL_FOR_BUILD\n CXX_FOR_BUILD\n CXXFLAGS_FOR_BUILD\n@@ -854,6 +857,7 @@ target_configargs\n AR\n AS\n DLLTOOL\n+DSYMUTIL\n LD\n LIPO\n NM\n@@ -874,6 +878,7 @@ GDC_FOR_TARGET\n AR_FOR_TARGET\n AS_FOR_TARGET\n DLLTOOL_FOR_TARGET\n+DSYMUTIL_FOR_TARGET\n LD_FOR_TARGET\n LIPO_FOR_TARGET\n NM_FOR_TARGET\n@@ -1642,6 +1647,7 @@ Some influential environment variables:\n   AR          AR for the host\n   AS          AS for the host\n   DLLTOOL     DLLTOOL for the host\n+  DSYMUTIL    DSYMUTIL for the host\n   LD          LD for the host\n   LIPO        LIPO for the host\n   NM          NM for the host\n@@ -1671,6 +1677,8 @@ Some influential environment variables:\n               AS for the target\n   DLLTOOL_FOR_TARGET\n               DLLTOOL for the target\n+  DSYMUTIL_FOR_TARGET\n+              DSYMUTIL for the target\n   LD_FOR_TARGET\n               LD for the target\n   LIPO_FOR_TARGET\n@@ -4083,6 +4091,7 @@ if test \"${build}\" != \"${host}\" ; then\n   AS_FOR_BUILD=${AS_FOR_BUILD-as}\n   CC_FOR_BUILD=${CC_FOR_BUILD-gcc}\n   CXX_FOR_BUILD=${CXX_FOR_BUILD-g++}\n+  DSYMUTIL_FOR_BUILD=${DSYMUTIL_FOR_BUILD-dsymutil}\n   GFORTRAN_FOR_BUILD=${GFORTRAN_FOR_BUILD-gfortran}\n   GOC_FOR_BUILD=${GOC_FOR_BUILD-gccgo}\n   GDC_FOR_BUILD=${GDC_FOR_BUILD-gdc}\n@@ -4097,6 +4106,7 @@ else\n   AS_FOR_BUILD=\"\\$(AS)\"\n   CC_FOR_BUILD=\"\\$(CC)\"\n   CXX_FOR_BUILD=\"\\$(CXX)\"\n+  DSYMUTIL_FOR_BUILD=\"\\$(DSYMUTIL)\"\n   GFORTRAN_FOR_BUILD=\"\\$(GFORTRAN)\"\n   GOC_FOR_BUILD=\"\\$(GOC)\"\n   GDC_FOR_BUILD=\"\\$(GDC)\"\n@@ -10058,6 +10068,7 @@ done\n \n \n \n+\n # Generate default definitions for YACC, M4, LEX and other programs that run\n # on the build machine.  These are used if the Makefile can't locate these\n # programs in objdir.\n@@ -10890,6 +10901,147 @@ fi\n \n \n \n+if test -n \"$DSYMUTIL\"; then\n+  ac_cv_prog_DSYMUTIL=$DSYMUTIL\n+elif test -n \"$ac_cv_prog_DSYMUTIL\"; then\n+  DSYMUTIL=$ac_cv_prog_DSYMUTIL\n+fi\n+\n+if test -n \"$ac_cv_prog_DSYMUTIL\"; then\n+  for ncn_progname in dsymutil; do\n+    # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_DSYMUTIL+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$DSYMUTIL\"; then\n+  ac_cv_prog_DSYMUTIL=\"$DSYMUTIL\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_DSYMUTIL=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+DSYMUTIL=$ac_cv_prog_DSYMUTIL\n+if test -n \"$DSYMUTIL\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL\" >&5\n+$as_echo \"$DSYMUTIL\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  done\n+fi\n+\n+for ncn_progname in dsymutil; do\n+  if test -n \"$ncn_tool_prefix\"; then\n+    # Extract the first word of \"${ncn_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_DSYMUTIL+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$DSYMUTIL\"; then\n+  ac_cv_prog_DSYMUTIL=\"$DSYMUTIL\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_DSYMUTIL=\"${ncn_tool_prefix}${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+DSYMUTIL=$ac_cv_prog_DSYMUTIL\n+if test -n \"$DSYMUTIL\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL\" >&5\n+$as_echo \"$DSYMUTIL\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  fi\n+  if test -z \"$ac_cv_prog_DSYMUTIL\" && test $build = $host ; then\n+    # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_DSYMUTIL+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$DSYMUTIL\"; then\n+  ac_cv_prog_DSYMUTIL=\"$DSYMUTIL\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_DSYMUTIL=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+DSYMUTIL=$ac_cv_prog_DSYMUTIL\n+if test -n \"$DSYMUTIL\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL\" >&5\n+$as_echo \"$DSYMUTIL\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  fi\n+  test -n \"$ac_cv_prog_DSYMUTIL\" && break\n+done\n+\n+if test -z \"$ac_cv_prog_DSYMUTIL\" ; then\n+  set dummy dsymutil\n+  if test $build = $host ; then\n+    DSYMUTIL=\"$2\"\n+  else\n+    DSYMUTIL=\"${ncn_tool_prefix}$2\"\n+  fi\n+fi\n+\n+\n+\n if test -n \"$LD\"; then\n   ac_cv_prog_LD=$LD\n elif test -n \"$ac_cv_prog_LD\"; then\n@@ -14120,6 +14272,236 @@ fi\n \n \n \n+if test -z \"$ac_cv_path_DSYMUTIL_FOR_TARGET\" ; then\n+  if test -n \"$with_build_time_tools\"; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dsymutil in $with_build_time_tools\" >&5\n+$as_echo_n \"checking for dsymutil in $with_build_time_tools... \" >&6; }\n+    if test -x $with_build_time_tools/dsymutil; then\n+      DSYMUTIL_FOR_TARGET=`cd $with_build_time_tools && pwd`/dsymutil\n+      ac_cv_path_DSYMUTIL_FOR_TARGET=$DSYMUTIL_FOR_TARGET\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_DSYMUTIL_FOR_TARGET\" >&5\n+$as_echo \"$ac_cv_path_DSYMUTIL_FOR_TARGET\" >&6; }\n+    else\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+    fi\n+  elif test $build != $host && test $have_gcc_for_target = yes; then\n+    DSYMUTIL_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=dsymutil`\n+    test $DSYMUTIL_FOR_TARGET = dsymutil && DSYMUTIL_FOR_TARGET=\n+    test -n \"$DSYMUTIL_FOR_TARGET\" && ac_cv_path_DSYMUTIL_FOR_TARGET=$DSYMUTIL_FOR_TARGET\n+  fi\n+fi\n+if test -z \"$ac_cv_path_DSYMUTIL_FOR_TARGET\" && test -n \"$gcc_cv_tool_dirs\"; then\n+  # Extract the first word of \"dsymutil\", so it can be a program name with args.\n+set dummy dsymutil; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_path_DSYMUTIL_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  case $DSYMUTIL_FOR_TARGET in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_DSYMUTIL_FOR_TARGET=\"$DSYMUTIL_FOR_TARGET\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $gcc_cv_tool_dirs\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_DSYMUTIL_FOR_TARGET=\"$as_dir/$ac_word$ac_exec_ext\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+  ;;\n+esac\n+fi\n+DSYMUTIL_FOR_TARGET=$ac_cv_path_DSYMUTIL_FOR_TARGET\n+if test -n \"$DSYMUTIL_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL_FOR_TARGET\" >&5\n+$as_echo \"$DSYMUTIL_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+fi\n+if test -z \"$ac_cv_path_DSYMUTIL_FOR_TARGET\" ; then\n+\n+\n+if test -n \"$DSYMUTIL_FOR_TARGET\"; then\n+  ac_cv_prog_DSYMUTIL_FOR_TARGET=$DSYMUTIL_FOR_TARGET\n+elif test -n \"$ac_cv_prog_DSYMUTIL_FOR_TARGET\"; then\n+  DSYMUTIL_FOR_TARGET=$ac_cv_prog_DSYMUTIL_FOR_TARGET\n+fi\n+\n+if test -n \"$ac_cv_prog_DSYMUTIL_FOR_TARGET\"; then\n+  for ncn_progname in dsymutil; do\n+    # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_DSYMUTIL_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$DSYMUTIL_FOR_TARGET\"; then\n+  ac_cv_prog_DSYMUTIL_FOR_TARGET=\"$DSYMUTIL_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_DSYMUTIL_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+DSYMUTIL_FOR_TARGET=$ac_cv_prog_DSYMUTIL_FOR_TARGET\n+if test -n \"$DSYMUTIL_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL_FOR_TARGET\" >&5\n+$as_echo \"$DSYMUTIL_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_DSYMUTIL_FOR_TARGET\" && test -n \"$with_build_time_tools\"; then\n+  for ncn_progname in dsymutil; do\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools\" >&5\n+$as_echo_n \"checking for ${ncn_progname} in $with_build_time_tools... \" >&6; }\n+    if test -x $with_build_time_tools/${ncn_progname}; then\n+      ac_cv_prog_DSYMUTIL_FOR_TARGET=$with_build_time_tools/${ncn_progname}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+      break\n+    else\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+    fi\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_DSYMUTIL_FOR_TARGET\"; then\n+  for ncn_progname in dsymutil; do\n+    if test -n \"$ncn_target_tool_prefix\"; then\n+      # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_DSYMUTIL_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$DSYMUTIL_FOR_TARGET\"; then\n+  ac_cv_prog_DSYMUTIL_FOR_TARGET=\"$DSYMUTIL_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_DSYMUTIL_FOR_TARGET=\"${ncn_target_tool_prefix}${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+DSYMUTIL_FOR_TARGET=$ac_cv_prog_DSYMUTIL_FOR_TARGET\n+if test -n \"$DSYMUTIL_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL_FOR_TARGET\" >&5\n+$as_echo \"$DSYMUTIL_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    if test -z \"$ac_cv_prog_DSYMUTIL_FOR_TARGET\" && test $build = $target ; then\n+      # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_DSYMUTIL_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$DSYMUTIL_FOR_TARGET\"; then\n+  ac_cv_prog_DSYMUTIL_FOR_TARGET=\"$DSYMUTIL_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_DSYMUTIL_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+DSYMUTIL_FOR_TARGET=$ac_cv_prog_DSYMUTIL_FOR_TARGET\n+if test -n \"$DSYMUTIL_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL_FOR_TARGET\" >&5\n+$as_echo \"$DSYMUTIL_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    test -n \"$ac_cv_prog_DSYMUTIL_FOR_TARGET\" && break\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_DSYMUTIL_FOR_TARGET\" ; then\n+  set dummy dsymutil\n+  if test $build = $target ; then\n+    DSYMUTIL_FOR_TARGET=\"$2\"\n+  else\n+    DSYMUTIL_FOR_TARGET=\"${ncn_target_tool_prefix}$2\"\n+  fi\n+else\n+  DSYMUTIL_FOR_TARGET=\"$ac_cv_prog_DSYMUTIL_FOR_TARGET\"\n+fi\n+\n+else\n+  DSYMUTIL_FOR_TARGET=$ac_cv_path_DSYMUTIL_FOR_TARGET\n+fi\n+\n+\n+\n+\n if test -z \"$ac_cv_path_LD_FOR_TARGET\" ; then\n   if test -n \"$with_build_time_tools\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld in $with_build_time_tools\" >&5\n@@ -16908,6 +17290,37 @@ $as_echo \"pre-installed\" >&6; }\n   fi\n fi\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target dsymutil\" >&5\n+$as_echo_n \"checking where to find the target dsymutil... \" >&6; }\n+if test \"x${build}\" != \"x${host}\" ; then\n+  if expr \"x$DSYMUTIL_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $DSYMUTIL_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  else\n+    # Canadian cross, just use what we found\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+else\n+  if expr \"x$DSYMUTIL_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $DSYMUTIL_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  elif test \"x$target\" = \"x$host\"; then\n+    # We can use an host tool\n+    DSYMUTIL_FOR_TARGET='$(DSYMUTIL)'\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: host tool\" >&5\n+$as_echo \"host tool\" >&6; }\n+  else\n+    # We need a cross tool\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target gcc\" >&5\n $as_echo_n \"checking where to find the target gcc... \" >&6; }\n if test \"x${build}\" != \"x${host}\" ; then"}, {"sha": "041ee249bacffea9a63689234a68ef0ef29685a0", "filename": "configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -1335,6 +1335,7 @@ if test \"${build}\" != \"${host}\" ; then\n   AS_FOR_BUILD=${AS_FOR_BUILD-as}\n   CC_FOR_BUILD=${CC_FOR_BUILD-gcc}\n   CXX_FOR_BUILD=${CXX_FOR_BUILD-g++}\n+  DSYMUTIL_FOR_BUILD=${DSYMUTIL_FOR_BUILD-dsymutil}\n   GFORTRAN_FOR_BUILD=${GFORTRAN_FOR_BUILD-gfortran}\n   GOC_FOR_BUILD=${GOC_FOR_BUILD-gccgo}\n   GDC_FOR_BUILD=${GDC_FOR_BUILD-gdc}\n@@ -1349,6 +1350,7 @@ else\n   AS_FOR_BUILD=\"\\$(AS)\"\n   CC_FOR_BUILD=\"\\$(CC)\"\n   CXX_FOR_BUILD=\"\\$(CXX)\"\n+  DSYMUTIL_FOR_BUILD=\"\\$(DSYMUTIL)\"\n   GFORTRAN_FOR_BUILD=\"\\$(GFORTRAN)\"\n   GOC_FOR_BUILD=\"\\$(GOC)\"\n   GDC_FOR_BUILD=\"\\$(GDC)\"\n@@ -3380,6 +3382,7 @@ AC_SUBST(CFLAGS_FOR_BUILD)\n AC_SUBST(CXXFLAGS_FOR_BUILD)\n AC_SUBST(CXX_FOR_BUILD)\n AC_SUBST(DLLTOOL_FOR_BUILD)\n+AC_SUBST(DSYMUTIL_FOR_BUILD)\n AC_SUBST(GFORTRAN_FOR_BUILD)\n AC_SUBST(GOC_FOR_BUILD)\n AC_SUBST(GDC_FOR_BUILD)\n@@ -3459,6 +3462,7 @@ esac\n NCN_STRICT_CHECK_TOOLS(AR, ar)\n NCN_STRICT_CHECK_TOOLS(AS, as)\n NCN_STRICT_CHECK_TOOLS(DLLTOOL, dlltool)\n+NCN_STRICT_CHECK_TOOLS(DSYMUTIL, dsymutil)\n NCN_STRICT_CHECK_TOOLS(LD, ld)\n NCN_STRICT_CHECK_TOOLS(LIPO, lipo)\n NCN_STRICT_CHECK_TOOLS(NM, nm)\n@@ -3498,6 +3502,7 @@ NCN_STRICT_CHECK_TARGET_TOOLS(GDC_FOR_TARGET, gdc)\n ACX_CHECK_INSTALLED_TARGET_TOOL(AR_FOR_TARGET, ar)\n ACX_CHECK_INSTALLED_TARGET_TOOL(AS_FOR_TARGET, as)\n ACX_CHECK_INSTALLED_TARGET_TOOL(DLLTOOL_FOR_TARGET, dlltool)\n+ACX_CHECK_INSTALLED_TARGET_TOOL(DSYMUTIL_FOR_TARGET, dsymutil)\n ACX_CHECK_INSTALLED_TARGET_TOOL(LD_FOR_TARGET, ld)\n ACX_CHECK_INSTALLED_TARGET_TOOL(LIPO_FOR_TARGET, lipo)\n ACX_CHECK_INSTALLED_TARGET_TOOL(NM_FOR_TARGET, nm)\n@@ -3523,6 +3528,7 @@ GCC_TARGET_TOOL(c++ for libstdc++, RAW_CXX_FOR_TARGET, CXX,\n \t\t[gcc/xgcc -shared-libgcc -B$$r/$(HOST_SUBDIR)/gcc -nostdinc++ -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/libsupc++/.libs],\n \t\tc++)\n GCC_TARGET_TOOL(dlltool, DLLTOOL_FOR_TARGET, DLLTOOL, [binutils/dlltool])\n+GCC_TARGET_TOOL(dsymutil, DSYMUTIL_FOR_TARGET, DSYMUTIL)\n GCC_TARGET_TOOL(gcc, GCC_FOR_TARGET, , [gcc/xgcc -B$$r/$(HOST_SUBDIR)/gcc/])\n GCC_TARGET_TOOL(gfortran, GFORTRAN_FOR_TARGET, GFORTRAN,\n \t\t[gcc/gfortran -B$$r/$(HOST_SUBDIR)/gcc/], fortran)"}, {"sha": "07092c2733aee9865055555fe0fe745efe848bbb", "filename": "gcc/collect2.c", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -3040,15 +3040,49 @@ process_args (int *argcp, char **argv) {\n \n static void\n do_dsymutil (const char *output_file) {\n-  const char *dsymutil = DSYMUTIL + 1;\n+  const char *dsymutil = 0;\n   struct pex_obj *pex;\n-  char **real_argv = XCNEWVEC (char *, 3);\n+  char **real_argv = XCNEWVEC (char *, verbose ? 4 : 3);\n   const char ** argv = CONST_CAST2 (const char **, char **,\n \t\t\t\t    real_argv);\n+/* For cross-builds search the PATH using target-qualified name if we\n+   have not already found a suitable dsymutil.  In practice, all modern\n+   versions of dsymutil handle all supported archs, however the approach\n+   here is consistent with the way other installations work (and one can\n+   always symlink a multitarget dsymutil with a target-specific name).  */\n+  const char *dsname = \"dsymutil\";\n+#ifdef CROSS_DIRECTORY_STRUCTURE\n+  const char *qname = concat (target_machine, \"-\", dsname, NULL);\n+#else\n+  const char *qname = dsname;\n+#endif\n+#ifdef DEFAULT_DSYMUTIL\n+  /* Configured default takes priority.  */\n+  if (dsymutil == 0 && access (DEFAULT_DSYMUTIL, X_OK) == 0)\n+    dsymutil = DEFAULT_DSYMUTIL;\n+  if (dsymutil == 0)\n+#endif\n+#ifdef DSYMUTIL\n+  /* Followed by one supplied in the target header, somewhat like the\n+     REAL_XX_NAME used elsewhere.  */\n+    dsymutil = find_a_file (&cpath, DSYMUTIL, X_OK);\n+  if (dsymutil == 0)\n+    dsymutil = find_a_file (&path, DSYMUTIL, X_OK);\n+  if (dsymutil == 0)\n+#endif\n+    dsymutil = find_a_file (&cpath, dsname, X_OK);\n+  if (dsymutil == 0)\n+    dsymutil = find_a_file (&path, qname, X_OK);\n \n   argv[0] = dsymutil;\n   argv[1] = output_file;\n-  argv[2] = (char *) 0;\n+  if (verbose)\n+    {\n+      argv[2] = \"-v\";\n+      argv[3] = (char *) 0;\n+    }\n+  else\n+    argv[2] = (char *) 0;\n \n   pex = collect_execute (dsymutil, real_argv, NULL, NULL,\n \t\t\t PEX_LAST | PEX_SEARCH, false, NULL);"}, {"sha": "2abac530c64e82d7763fd896a3bfe25968aabd65", "filename": "gcc/config.in", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -55,6 +55,12 @@\n #endif\n \n \n+/* Define to enable the use of a default debug linker. */\n+#ifndef USED_FOR_TARGET\n+#undef DEFAULT_DSYMUTIL\n+#endif\n+\n+\n /* Define to enable the use of a default linker. */\n #ifndef USED_FOR_TARGET\n #undef DEFAULT_LINKER\n@@ -94,6 +100,12 @@\n #endif\n \n \n+/* Define to the dsymutil version. */\n+#ifndef USED_FOR_TARGET\n+#undef DSYMUTIL_VERSION\n+#endif\n+\n+\n /* Define 0/1 if static analyzer feature is enabled. */\n #ifndef USED_FOR_TARGET\n #undef ENABLE_ANALYZER"}, {"sha": "20d6b1e9c058dea88e032dfc781c93fb91468934", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -240,8 +240,6 @@ extern GTY(()) int darwin_ms_struct;\n     DARWIN_NOCOMPACT_UNWIND \\\n     \"}}}}}}} %<pie %<no-pie %<rdynamic %<X \"\n \n-#define DSYMUTIL \"\\ndsymutil\"\n-\n /* Spec that controls whether the debug linker is run automatically for\n    a link step.  This needs to be done if there is a source file on the\n    command line which will result in a temporary object (and debug is"}, {"sha": "a15f8b47202aad65127640733eba6a33c5080e42", "filename": "gcc/configure", "status": "modified", "additions": 162, "deletions": 4, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -723,6 +723,8 @@ thin_archive_support\n ld_soname_option\n ld_version_script_option\n libgcc_visibility\n+ORIGINAL_DSYMUTIL_FOR_TARGET\n+gcc_cv_dsymutil\n gcc_cv_otool\n gcc_cv_readelf\n gcc_cv_objdump\n@@ -946,6 +948,7 @@ enable_generated_files_in_srcdir\n with_gnu_ld\n with_ld\n with_demangler_in_ld\n+with_dsymutil\n with_gnu_as\n with_as\n enable_largefile\n@@ -1813,6 +1816,8 @@ Optional Packages:\n   --with-gnu-ld           arrange to work with GNU ld\n   --with-ld               arrange to use the specified ld (full pathname)\n   --with-demangler-in-ld  try to use demangler in GNU ld\n+  --with-dsymutil         arrange to use the specified dsymutil (full\n+                          pathname)\n   --with-gnu-as           arrange to work with GNU as\n   --with-as               arrange to use the specified as (full pathname)\n   --with-stabs            arrange to use stabs instead of host debug format\n@@ -3835,8 +3840,14 @@ fi\n \n \n case $target in\n-    *darwin*) ld64_flag=yes;; # Darwin can only use a ld64-compatible linker.\n-    *) ld64_flag=no;;\n+    *darwin*)\n+\tld64_flag=yes # Darwin can only use a ld64-compatible linker.\n+\tdsymutil_flag=yes # Darwin uses dsymutil to link debug.\n+\t;;\n+    *)\n+\tld64_flag=no\n+\tdsymutil_flag=no\n+\t;;\n esac\n \n # With pre-defined ld\n@@ -3886,6 +3897,40 @@ else\n fi\n \n \n+# Allow the user to specify a dsymutil executable (used on Darwin only, so far)\n+\n+# Check whether --with-dsymutil was given.\n+if test \"${with_dsymutil+set}\" = set; then :\n+  withval=$with_dsymutil; DEFAULT_DSYMUTIL=\"$with_dsymutil\"\n+fi\n+\n+\n+dsymutil_vers=\n+if test x\"${DEFAULT_DSYMUTIL+set}\" = x\"set\"; then\n+  if test ! -x \"$DEFAULT_DSYMUTIL\"; then\n+    as_fn_error $? \"cannot execute: $DEFAULT_DSYMUTIL: check --with-dsymutil or env. var. DEFAULT_DSYMUTIL\" \"$LINENO\" 5\n+  else\n+    if dsymutil_vers=`$DEFAULT_DSYMUTIL -v /dev/null 2>&1`; then\n+      dsymutil_flag=yes\n+    fi\n+  fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_DSYMUTIL \"$DEFAULT_DSYMUTIL\"\n+_ACEOF\n+\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether a default dsymutil was specified\" >&5\n+$as_echo_n \"checking whether a default dsymutil was specified... \" >&6; }\n+if test x\"${DEFAULT_DSYMUTIL+set}\" = x\"set\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes ($DEFAULT_DSYMUTIL)\" >&5\n+$as_echo \"yes ($DEFAULT_DSYMUTIL)\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n # ----------------------\n # Find default assembler\n # ----------------------\n@@ -19435,7 +19480,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19438 \"configure\"\n+#line 19483 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19541,7 +19586,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19544 \"configure\"\n+#line 19589 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -23439,6 +23484,71 @@ else\n $as_echo \"$gcc_cv_otool\" >&6; }\n fi\n \n+# Figure out the dsymutil we will use.\n+if ${gcc_cv_dsymutil+:} false; then :\n+\n+else\n+\n+if test -x \"$DEFAULT_DSYMUTIL\"; then\n+    gcc_cv_dsymutil=\"$DEFAULT_DSYMUTIL\"\n+elif test -x dsymutil$build_exeext; then\n+    gcc_cv_dsymutil=./dsymutil$build_exeext\n+elif ( set dummy $DSYMUTIL_FOR_TARGET; test -x $2 ); then\n+    gcc_cv_dsymutil=$DSYMUTIL_FOR_TARGET\n+elif ( set dummy $DSYMUTIL; test -x $2 ); then\n+    gcc_cv_dsymutil=$DSYMUTIL\n+else\n+    # Extract the first word of \"$DSYMUTIL_FOR_TARGET\", so it can be a program name with args.\n+set dummy $DSYMUTIL_FOR_TARGET; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_path_gcc_cv_dsymutil+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  case $gcc_cv_dsymutil in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_gcc_cv_dsymutil=\"$gcc_cv_dsymutil\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_gcc_cv_dsymutil=\"$as_dir/$ac_word$ac_exec_ext\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+  ;;\n+esac\n+fi\n+gcc_cv_dsymutil=$ac_cv_path_gcc_cv_dsymutil\n+if test -n \"$gcc_cv_dsymutil\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_dsymutil\" >&5\n+$as_echo \"$gcc_cv_dsymutil\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+fi\n+fi\n+\n+ORIGINAL_DSYMUTIL_FOR_TARGET=$gcc_cv_dsymutil\n+\n+case \"$ORIGINAL_DSYMUTIL_FOR_TARGET\" in\n+  ./dsymutil | ./dsymutil$build_exeext) ;;\n+  *) ac_config_files=\"$ac_config_files dsymutil:exec-tool.in\"\n+ ;;\n+esac\n+\n # Figure out what assembler alignment features are present.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler flags\" >&5\n $as_echo_n \"checking assembler flags... \" >&6; }\n@@ -30303,6 +30413,52 @@ _ACEOF\n \n fi\n \n+if test x\"$dsymutil_flag\" = x\"yes\"; then\n+\n+    # If the user specified a dsymutil path, then we will already have the\n+    # version string, otherwise, pick it up.\n+    if test x\"$gcc_cv_dsymutil\" = x; then\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: dsymutil is a required tool for this system, but not found\" >&5\n+$as_echo \"$as_me: WARNING: dsymutil is a required tool for this system, but not found\" >&2;}\n+        dsymutil_vers=\"tool unspecified\"\n+    elif test x\"$dsymutil_vers\" = x; then\n+\tdsymutil_vers=`$gcc_cv_dsymutil -v /dev/null 2>&1`\n+    fi\n+\n+    dsymutil_temp=`echo $dsymutil_vers | sed 1q`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking dsymutil version \\\"$dsymutil_temp\\\"\" >&5\n+$as_echo_n \"checking dsymutil version \\\"$dsymutil_temp\\\"... \" >&6; }\n+    if echo $dsymutil_temp | grep dwarfutils- > /dev/null; then\n+      dsymutil_kind=DWARFUTILS\n+      dsymutil_vers=`echo $dsymutil_temp | sed 's/.*dwarfutils-\\([0-9\\.]*\\).*/\\1/'`\n+    elif echo $dsymutil_temp | grep clang- > /dev/null; then\n+      dsymutil_kind=CLANG\n+      dsymutil_vers=`echo $dsymutil_temp | sed 's/.*clang-\\([0-9\\.]*\\).*/\\1/'`\n+    elif echo $dsymutil_temp | grep 'LLVM version ' > /dev/null; then\n+      dsymutil_kind=LLVM\n+      dsymutil_vers=`echo $dsymutil_temp | sed 's/.*LLVM\\ version\\ \\([0-9\\.]*\\).*/\\1/'`\n+    else\n+      dsymutil_kind=UNKNOWN\n+      dsymutil_vers=\"0.0\"\n+    fi\n+    dsymutil_major=`expr \"$dsymutil_vers\" : '\\([0-9]*\\)'`\n+    dsymutil_minor=`expr \"$dsymutil_vers\" : '[0-9]*\\.\\([0-9]*\\)'`\n+    dsymutil_tiny=`expr \"$dsymutil_vers\" : '[0-9]*\\.[0-9]*\\.\\([0-9]*\\)'`\n+    if test x\"${dsymutil_minor}\" = x; then\n+      dsymutil_minor=0\n+    fi\n+    if test x\"${dsymutil_tiny}\" = x; then\n+      dsymutil_tiny=0\n+    fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DSYMUTIL_VERSION $dsymutil_kind,${dsymutil_major},${dsymutil_minor},${dsymutil_tiny}\n+_ACEOF\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $dsymutil_vers : $dsymutil_kind ${dsymutil_major} ${dsymutil_minor} ${dsymutil_tiny} \" >&5\n+$as_echo \"$dsymutil_vers : $dsymutil_kind ${dsymutil_major} ${dsymutil_minor} ${dsymutil_tiny} \" >&6; }\n+fi\n+\n case $target_os in\n   win32 | pe | cygwin* | mingw32*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking broken PE linker dwarf5 support\" >&5\n@@ -33014,6 +33170,7 @@ do\n     \"as\") CONFIG_FILES=\"$CONFIG_FILES as:exec-tool.in\" ;;\n     \"collect-ld\") CONFIG_FILES=\"$CONFIG_FILES collect-ld:exec-tool.in\" ;;\n     \"nm\") CONFIG_FILES=\"$CONFIG_FILES nm:exec-tool.in\" ;;\n+    \"dsymutil\") CONFIG_FILES=\"$CONFIG_FILES dsymutil:exec-tool.in\" ;;\n     \"clearcap.map\") CONFIG_LINKS=\"$CONFIG_LINKS clearcap.map:${srcdir}/config/$clearcap_map\" ;;\n     \"$all_outputs\") CONFIG_FILES=\"$CONFIG_FILES $all_outputs\" ;;\n     \"default\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default\" ;;\n@@ -33648,6 +33805,7 @@ $as_echo \"$as_me: executing $ac_file commands\" >&6;}\n     \"as\":F) chmod +x as ;;\n     \"collect-ld\":F) chmod +x collect-ld ;;\n     \"nm\":F) chmod +x nm ;;\n+    \"dsymutil\":F) chmod +x dsymutil ;;\n     \"default\":C)\n case ${CONFIG_HEADERS} in\n   *auto-host.h:config.in*)"}, {"sha": "26da07325e7363d510a5d7b7d455fb6ea1dd0361", "filename": "gcc/configure.ac", "status": "modified", "additions": 94, "deletions": 2, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -316,8 +316,14 @@ gnu_ld_flag=\"$with_gnu_ld\",\n gnu_ld_flag=no)\n \n case $target in\n-    *darwin*) ld64_flag=yes;; # Darwin can only use a ld64-compatible linker.\n-    *) ld64_flag=no;;\n+    *darwin*)\n+\tld64_flag=yes # Darwin can only use a ld64-compatible linker.\n+\tdsymutil_flag=yes # Darwin uses dsymutil to link debug.\n+\t;;\n+    *)\n+\tld64_flag=no\n+\tdsymutil_flag=no\n+\t;;\n esac\n \n # With pre-defined ld\n@@ -353,6 +359,31 @@ AC_ARG_WITH(demangler-in-ld,\n demangler_in_ld=\"$with_demangler_in_ld\",\n demangler_in_ld=yes)\n \n+# Allow the user to specify a dsymutil executable (used on Darwin only, so far)\n+AC_ARG_WITH(dsymutil,\n+[AS_HELP_STRING([--with-dsymutil], [arrange to use the specified dsymutil (full pathname)])],\n+DEFAULT_DSYMUTIL=\"$with_dsymutil\")\n+\n+dsymutil_vers=\n+if test x\"${DEFAULT_DSYMUTIL+set}\" = x\"set\"; then\n+  if test ! -x \"$DEFAULT_DSYMUTIL\"; then\n+    AC_MSG_ERROR([cannot execute: $DEFAULT_DSYMUTIL: check --with-dsymutil or env. var. DEFAULT_DSYMUTIL])\n+  else\n+    if dsymutil_vers=`$DEFAULT_DSYMUTIL -v /dev/null 2>&1`; then\n+      dsymutil_flag=yes\n+    fi\n+  fi\n+  AC_DEFINE_UNQUOTED(DEFAULT_DSYMUTIL,\"$DEFAULT_DSYMUTIL\",\n+\t[Define to enable the use of a default debug linker.])\n+fi\n+\n+AC_MSG_CHECKING([whether a default dsymutil was specified])\n+if test x\"${DEFAULT_DSYMUTIL+set}\" = x\"set\"; then\n+  AC_MSG_RESULT([yes ($DEFAULT_DSYMUTIL)])\n+else\n+  AC_MSG_RESULT(no)\n+fi\n+\n # ----------------------\n # Find default assembler\n # ----------------------\n@@ -2852,6 +2883,27 @@ else\n \tAC_MSG_RESULT($gcc_cv_otool)\n fi\n \n+# Figure out the dsymutil we will use.\n+AS_VAR_SET_IF(gcc_cv_dsymutil,, [\n+if test -x \"$DEFAULT_DSYMUTIL\"; then\n+    gcc_cv_dsymutil=\"$DEFAULT_DSYMUTIL\"\n+elif test -x dsymutil$build_exeext; then\n+    gcc_cv_dsymutil=./dsymutil$build_exeext\n+elif ( set dummy $DSYMUTIL_FOR_TARGET; test -x $[2] ); then\n+    gcc_cv_dsymutil=$DSYMUTIL_FOR_TARGET\n+elif ( set dummy $DSYMUTIL; test -x $[2] ); then\n+    gcc_cv_dsymutil=$DSYMUTIL\n+else\n+    AC_PATH_PROG(gcc_cv_dsymutil, $DSYMUTIL_FOR_TARGET)\n+fi])\n+\n+ORIGINAL_DSYMUTIL_FOR_TARGET=$gcc_cv_dsymutil\n+AC_SUBST(ORIGINAL_DSYMUTIL_FOR_TARGET)\n+case \"$ORIGINAL_DSYMUTIL_FOR_TARGET\" in\n+  ./dsymutil | ./dsymutil$build_exeext) ;;\n+  *) AC_CONFIG_FILES(dsymutil:exec-tool.in, [chmod +x dsymutil]) ;;\n+esac \n+\n # Figure out what assembler alignment features are present.\n gcc_GAS_CHECK_FEATURE([.balign and .p2align], gcc_cv_as_balign_and_p2align,\n  [2,6,0],,\n@@ -6240,6 +6292,46 @@ if test x\"$ld64_flag\" = x\"yes\"; then\n   [Define to 1 if ld64 supports '-export_dynamic'.])\n fi\n \n+if test x\"$dsymutil_flag\" = x\"yes\"; then\n+\n+    # If the user specified a dsymutil path, then we will already have the\n+    # version string, otherwise, pick it up.\n+    if test x\"$gcc_cv_dsymutil\" = x; then\n+        AC_MSG_WARN([dsymutil is a required tool for this system, but not found])\n+        dsymutil_vers=\"tool unspecified\"\n+    elif test x\"$dsymutil_vers\" = x; then\n+\tdsymutil_vers=`$gcc_cv_dsymutil -v /dev/null 2>&1`\n+    fi\n+\n+    dsymutil_temp=`echo $dsymutil_vers | sed 1q`\n+    AC_MSG_CHECKING(dsymutil version \"$dsymutil_temp\")\n+    if echo $dsymutil_temp | grep dwarfutils- > /dev/null; then\n+      dsymutil_kind=DWARFUTILS\n+      dsymutil_vers=`echo $dsymutil_temp | sed 's/.*dwarfutils-\\([[0-9\\.]]*\\).*/\\1/'`\n+    elif echo $dsymutil_temp | grep clang- > /dev/null; then\n+      dsymutil_kind=CLANG\n+      dsymutil_vers=`echo $dsymutil_temp | sed 's/.*clang-\\([[0-9\\.]]*\\).*/\\1/'`\n+    elif echo $dsymutil_temp | grep 'LLVM version ' > /dev/null; then\n+      dsymutil_kind=LLVM\n+      dsymutil_vers=`echo $dsymutil_temp | sed 's/.*LLVM\\ version\\ \\([[0-9\\.]]*\\).*/\\1/'`\n+    else\n+      dsymutil_kind=UNKNOWN\n+      dsymutil_vers=\"0.0\"\n+    fi\n+    dsymutil_major=`expr \"$dsymutil_vers\" : '\\([[0-9]]*\\)'`\n+    dsymutil_minor=`expr \"$dsymutil_vers\" : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    dsymutil_tiny=`expr \"$dsymutil_vers\" : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    if test x\"${dsymutil_minor}\" = x; then\n+      dsymutil_minor=0\n+    fi\n+    if test x\"${dsymutil_tiny}\" = x; then\n+      dsymutil_tiny=0\n+    fi\n+    AC_DEFINE_UNQUOTED(DSYMUTIL_VERSION, [$dsymutil_kind,${dsymutil_major},${dsymutil_minor},${dsymutil_tiny}],\n+        [Define to the dsymutil version.])\n+    AC_MSG_RESULT($dsymutil_vers : $dsymutil_kind ${dsymutil_major} ${dsymutil_minor} ${dsymutil_tiny} )\n+fi\n+\n case $target_os in\n   win32 | pe | cygwin* | mingw32*)\n     AC_MSG_CHECKING(broken PE linker dwarf5 support)"}, {"sha": "c206a254d517d9b04f370a4a74f9d629a8cf1c3a", "filename": "gcc/exec-tool.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fexec-tool.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fexec-tool.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexec-tool.in?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -25,6 +25,7 @@ ORIGINAL_LD_BFD_FOR_TARGET=\"@ORIGINAL_LD_BFD_FOR_TARGET@\"\n ORIGINAL_LD_GOLD_FOR_TARGET=\"@ORIGINAL_LD_GOLD_FOR_TARGET@\"\n ORIGINAL_PLUGIN_LD_FOR_TARGET=\"@ORIGINAL_PLUGIN_LD_FOR_TARGET@\"\n ORIGINAL_NM_FOR_TARGET=\"@ORIGINAL_NM_FOR_TARGET@\"\n+ORIGINAL_DSYMUTIL_FOR_TARGET=\"@ORIGINAL_DSYMUTIL_FOR_TARGET@\"\n exeext=@host_exeext@\n fast_install=@enable_fast_install@\n objdir=@objdir@\n@@ -71,6 +72,13 @@ case \"$invoked\" in\n     prog=nm-new$exeext\n     dir=binutils\n     ;;\n+  dsymutil)\n+    original=$ORIGINAL_DSYMUTIL_FOR_TARGET\n+    # We do not build this in tree - but still want to be able to execute\n+    # a configured version from the build dir.\n+    prog=\n+    dir=\n+    ;;\n esac\n \n case \"$original\" in"}, {"sha": "36a88fc99b0eaad3c189a60e990747d1fe16f15c", "filename": "gcc/gcc.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5e8ee4f1ecc6d407f391695f65960bcbd63cff/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=3b5e8ee4f1ecc6d407f391695f65960bcbd63cff", "patch": "@@ -3062,6 +3062,11 @@ find_a_file (const struct path_prefix *pprefix, const char *name, int mode,\n     return xstrdup (DEFAULT_LINKER);\n #endif\n \n+#ifdef DEFAULT_DSYMUTIL\n+  if (! strcmp (name, \"dsymutil\") && access (DEFAULT_DSYMUTIL, mode) == 0)\n+    return xstrdup (DEFAULT_DSYMUTIL);\n+#endif\n+\n   /* Determine the filename to execute (special case for absolute paths).  */\n \n   if (IS_ABSOLUTE_PATH (name))"}]}