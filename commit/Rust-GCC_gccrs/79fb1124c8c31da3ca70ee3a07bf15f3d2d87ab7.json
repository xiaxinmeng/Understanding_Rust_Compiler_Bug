{"sha": "79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "node_id": "C_kwDOANBUbNoAKDc5ZmIxMTI0YzhjMzFkYTNjYTcwZWUzYTA3YmYxNWYzZDJkODdhYjc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-19T00:16:32Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-19T00:16:32Z"}, "message": "Daily bump.", "tree": {"sha": "9ffc603b9908229e1e7a3261f48efca08cc2efc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ffc603b9908229e1e7a3261f48efca08cc2efc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/comments", "author": null, "committer": null, "parents": [{"sha": "63d182fb86e47323ac50d9368845d712e1f7da89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d182fb86e47323ac50d9368845d712e1f7da89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d182fb86e47323ac50d9368845d712e1f7da89"}], "stats": {"total": 151, "additions": 150, "deletions": 1}, "files": [{"sha": "43b70ba734c6920af7c1c1f56d1ba384d613c313", "filename": "gcc/ChangeLog", "status": "modified", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "patch": "@@ -1,3 +1,115 @@\n+2022-07-18  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/106280\n+\t* value-relation.cc (dom_oracle::register_relation): Register\n+\ttransitives only when it is possible for there to be one.\n+\t(dom_oracle::set_one_relation): Return NULL if this is an\n+\texisting relation.\n+\n+2022-07-18  Maciej W. Rozycki  <macro@embecosm.com>\n+\n+\t* doc/invoke.texi (RISC-V Options): Add index references for\n+\t`mrelax' and `mriscv-attribute'.\n+\n+2022-07-18  Maciej W. Rozycki  <macro@embecosm.com>\n+\n+\t* doc/invoke.texi (Option Summary): Add missing second space\n+\taround `-mstack-protector-guard-reg='.\n+\n+2022-07-18  Maciej W. Rozycki  <macro@embecosm.com>\n+\n+\t* doc/invoke.texi (Option Summary): Fix `-mno-riscv-attribute'.\n+\t(RISC-V Options): Likewise, and `-mriscv-attribute'.\n+\n+2022-07-18  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* config/arc/arc-arch.h (arc_tune_attr): Add\n+\tARC_TUNE_ARCHS4X_REL31A variant.\n+\t* config/arc/arc.cc (arc_override_options): Tune options for\n+\trelease 310a.\n+\t(arc_sched_issue_rate): Use correct enum.\n+\t(arc600_corereg_hazard): Textual change.\n+\t(arc_hazard): Add release 310a tunning.\n+\t* config/arc/arc.md (tune): Update and take into consideration new\n+\ttune option.\n+\t(tune_dspmpy): Likewise.\n+\t(tune_store): New attribute.\n+\t* config/arc/arc.opt (mtune): New tune option.\n+\t* config/arc/arcHS4x.md (hs4x_brcc0, hs4x_brcc1): New cpu units.\n+\t(hs4x_brcc_op): New instruction rezervation.\n+\t(hs4x_data_store_1_op): Likewise.\n+\t* config/arc/arc-cpus.def (hs4x_rel31): New cpu variant.\n+\t* config/arc/arc-tables.opt: Regenerate.\n+\t* config/arc/t-multilib: Likewise.\n+\t* doc/invoke.texi (ARC): Update mcpu and tune sections.\n+\n+2022-07-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-loop-distribution.cc (loop_distribution::distribute_loop):\n+\tWhen computing cost-based merging do not disregard builtin\n+\tclassified partitions in some cases.\n+\n+2022-07-18  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/106253\n+\t* config/arm/arm-builtins.cc (arm_builtin_vectorized_function):\n+\tDelete.\n+\t* config/arm/arm-protos.h (arm_builtin_vectorized_function): Delete.\n+\t* config/arm/arm.cc (TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION):\n+\tDelete.\n+\t* config/arm/arm_neon_builtins.def (copysignf): Delete.\n+\t* config/arm/iterators.md (nvrint_pattern): New attribute.\n+\t* config/arm/neon.md (<NEON_VRINT:nvrint_pattern><VCVTF:mode>2):\n+\tNew pattern.\n+\t(l<NEON_VCVT:nvrint_pattern><su_optab><VCVTF:mode><v_cmp_result>2):\n+\tLikewise.\n+\t(neon_copysignf<mode>): Rename to...\n+\t(copysign<mode>3): ...this.\n+\n+2022-07-18  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* config/arc/arc.cc (arc_expand_epilogue): Adjust the frame\n+\tpointer first when in interrupts.\n+\n+2022-07-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-loop-distribution.cc (copy_loop_before): Add\n+\tthe ability to replace the original LC PHI defs.\n+\t(generate_loops_for_partition): Pass through a flag\n+\twhether to redirect original LC PHI defs.\n+\t(generate_code_for_partition): Likewise.\n+\t(loop_distribution::distribute_loop): Compute the partition\n+\tthat should provide the LC PHI defs for common reductions\n+\tand pass that down.\n+\n+2022-07-18  Richard Ball  <richard.ball@arm.com>\n+\n+\t* config/aarch64/aarch64.cc (aarch64_evpc_trn): Use std:swap.\n+\t(aarch64_evpc_uzp): Likewise.\n+\t(aarch64_evpc_zip): Likewise.\n+\n+2022-07-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR target/106231\n+\t* config/i386/i386.md (*ctzsidi2_<s>ext): New insn_and_split\n+\tto recognize any_extend:DI of ctz:SI which is implicitly extended.\n+\t(*ctzsidi2_<s>ext_falsedep): New define_insn to model a DImode\n+\textended ctz:SI that has preceding xor to break false dependency.\n+\n+2022-07-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* config/i386/predicates.md (x86_64_const_vector_operand):\n+\tCheck the operand's mode matches the specified mode argument.\n+\n+2022-07-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* config/i386/sse.md (kunpckhi): Add UNSPEC_MASKOP unspec.\n+\t(kunpcksi): Likewise, add UNSPEC_MASKOP unspec.\n+\t(kunpckdi): Likewise, add UNSPEC_MASKOP unspec.\n+\t(vec_pack_trunc_qi): Update to specify the now required\n+\tUNSPEC_MASKOP unspec.\n+\t(vec_pack_trunc_<mode>): Likewise.\n+\n 2022-07-16  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n \n \t* config/xtensa/xtensa.md"}, {"sha": "a394c7af9b5cae795f05823d9603e1b7854b07ce", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "patch": "@@ -1 +1 @@\n-20220718\n+20220719"}, {"sha": "36913da85cf944845430b5ef2aa34094214ec08e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "patch": "@@ -1,3 +1,24 @@\n+2022-07-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ldist-24.c: XFAIL.\n+\t* gcc.dg/tree-ssa/ldist-36.c: Adjust expected outcome.\n+\n+2022-07-18  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/106253\n+\t* gcc.target/arm/vect_unary_1.c: New test.\n+\t* gcc.target/arm/vect_binary_1.c: Likewise.\n+\n+2022-07-18  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* gcc.target/arc/interrupt-13.c: New file.\n+\n+2022-07-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR target/106231\n+\t* gcc.target/i386/pr106231-1.c: New test case.\n+\t* gcc.target/i386/pr106231-2.c: New test case.\n+\n 2022-07-15  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR target/85620"}, {"sha": "fcae8df1410c6df63e2fa457427b988fb5ad05ed", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "patch": "@@ -1,3 +1,9 @@\n+2022-07-18  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/lib2funcs.c (udivmodsi4): Update AND mask.\n+\t* config/arc/lib1funcs.S (umodsi3): Don't use it for RF16\n+\tconfigurations.\n+\n 2022-06-25  Jeff Law  <jeffreyalaw@gmail.com>\n \n \t* config.host: Removed tilegx and tilepro entries."}, {"sha": "eb1486fcee3c07408813a9f428b95f4cf0e8fd24", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "patch": "@@ -1,3 +1,13 @@\n+2022-07-18  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/bits/stl_algo.h\n+\t(__merge_adaptive): Adapt to merge only when buffer is large enough..\n+\t(__merge_adaptive_resize): New, adapt merge when buffer is too small.\n+\t(__inplace_merge): Adapt, use latter.\n+\t(__stable_sort_adaptive): Adapt to sort only when buffer is large enough.\n+\t(__stable_sort_adaptive_resize): New, adapt sort when buffer is too small.\n+\t(__stable_sort): Adapt, use latter.\n+\n 2022-07-15  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/104477"}]}