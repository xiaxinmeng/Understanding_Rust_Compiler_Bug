{"sha": "c0c2096fbada36fa26778bc02b32555150050d85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBjMjA5NmZiYWRhMzZmYTI2Nzc4YmMwMmIzMjU1NTE1MDA1MGQ4NQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2019-09-06T11:22:09Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2019-09-06T11:22:09Z"}, "message": "[C++ PATCH] Reserve a decl_lang bit\n\nhttps://gcc.gnu.org/ml/gcc-patches/2019-09/msg00365.html\n\tReserve TREE_LANG_FLAG_3 for modules.\n\tgcc/cp/\n\t* cp-tree.h (DECL_CONSTRUCTION_VTABLE_P): Delete.\n\t(DECL_NON_TRIVIALLY_INITIALIZED_P): Move to TREE_LANG_FLAG_6.\n\t* class.c (build_ctor_vtbl_group): Don't set\n\tDECL_CONSTRUCTION_VTABLE_P.\n\t* decl2.c (determine_visibility_from_class): Don't check\n\tDECL_CONSTRUCTION_VTABLE_P anymore.\n\nFrom-SVN: r275455", "tree": {"sha": "9de2b3615f95cdac2d35ed411cacf6ef5da7075d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9de2b3615f95cdac2d35ed411cacf6ef5da7075d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0c2096fbada36fa26778bc02b32555150050d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c2096fbada36fa26778bc02b32555150050d85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0c2096fbada36fa26778bc02b32555150050d85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c2096fbada36fa26778bc02b32555150050d85/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c086f8decdc190602fb66cfec8f3cff16328142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c086f8decdc190602fb66cfec8f3cff16328142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c086f8decdc190602fb66cfec8f3cff16328142"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "28285d9e182b03aa31fc8402392fe9f1b29353e8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0c2096fbada36fa26778bc02b32555150050d85/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0c2096fbada36fa26778bc02b32555150050d85/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c0c2096fbada36fa26778bc02b32555150050d85", "patch": "@@ -1,3 +1,14 @@\n+2019-09-06  Nathan Sidwell  <nathan@acm.org>\n+\n+\tReserve TREE_LANG_FLAG_3 for modules.\n+\tgcc/cp/\n+\t* cp-tree.h (DECL_CONSTRUCTION_VTABLE_P): Delete.\n+\t(DECL_NON_TRIVIALLY_INITIALIZED_P): Move to TREE_LANG_FLAG_6.\n+\t* class.c (build_ctor_vtbl_group): Don't set\n+\tDECL_CONSTRUCTION_VTABLE_P.\n+\t* decl2.c (determine_visibility_from_class): Don't check\n+\tDECL_CONSTRUCTION_VTABLE_P anymore.\n+\n 2019-09-06  Martin Liska  <mliska@suse.cz>\n \n \tPR c++/91125"}, {"sha": "20cfd10501adf96d7090d0776188a76341d57bd3", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0c2096fbada36fa26778bc02b32555150050d85/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0c2096fbada36fa26778bc02b32555150050d85/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=c0c2096fbada36fa26778bc02b32555150050d85", "patch": "@@ -9175,7 +9175,7 @@ build_ctor_vtbl_group (tree binfo, tree t)\n      constructing the addresses of secondary vtables in the\n      construction vtable group.  */\n   vtbl = build_vtable (t, id, ptr_type_node);\n-  DECL_CONSTRUCTION_VTABLE_P (vtbl) = 1;\n+\n   /* Don't export construction vtables from shared libraries.  Even on\n      targets that don't support hidden visibility, this tells\n      can_refer_decl_in_current_unit_p not to assume that it's safe to"}, {"sha": "60e0846020a05c57d2bb6a3ec57eaef9306d72ef", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0c2096fbada36fa26778bc02b32555150050d85/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0c2096fbada36fa26778bc02b32555150050d85/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c0c2096fbada36fa26778bc02b32555150050d85", "patch": "@@ -448,12 +448,12 @@ extern GTY(()) tree cp_global_trees[CPTI_MAX];\n       ICS_BAD_FLAG (in _CONV)\n       FN_TRY_BLOCK_P (in TRY_BLOCK)\n       BIND_EXPR_BODY_BLOCK (in BIND_EXPR)\n-      DECL_NONTRIVIALLY_INITIALIZED_P (in VAR_DECL)\n       CALL_EXPR_ORDERED_ARGS (in CALL_EXPR, AGGR_INIT_EXPR)\n       DECLTYPE_FOR_REF_CAPTURE (in DECLTYPE_TYPE)\n       CONSTRUCTOR_C99_COMPOUND_LITERAL (in CONSTRUCTOR)\n       OVL_NESTED_P (in OVERLOAD)\n       LAMBDA_EXPR_INSTANTIATED (in LAMBDA_EXPR)\n+      Reserved for DECL_MODULE_EXPORT (in DECL_)\n    4: IDENTIFIER_MARKED (IDENTIFIER_NODEs)\n       TREE_HAS_CONSTRUCTOR (in INDIRECT_REF, SAVE_EXPR, CONSTRUCTOR,\n \t  CALL_EXPR, or FIELD_DECL).\n@@ -466,8 +466,8 @@ extern GTY(()) tree cp_global_trees[CPTI_MAX];\n       CALL_EXPR_REVERSE_ARGS (in CALL_EXPR, AGGR_INIT_EXPR)\n       CONSTRUCTOR_PLACEHOLDER_BOUNDARY (in CONSTRUCTOR)\n    6: IDENTIFIER_REPO_CHOSEN (in IDENTIFIER_NODE)\n-      DECL_CONSTRUCTION_VTABLE_P (in VAR_DECL)\n       TYPE_MARKED_P (in _TYPE)\n+      DECL_NON_TRIVIALLY_INITIALIZED_P (in VAR_DECL)\n       RANGE_FOR_IVDEP (in RANGE_FOR_STMT)\n       CALL_EXPR_OPERATOR_SYNTAX (in CALL_EXPR, AGGR_INIT_EXPR)\n       CONSTRUCTOR_IS_DESIGNATED_INIT (in CONSTRUCTOR)\n@@ -3001,7 +3001,7 @@ struct GTY(()) lang_decl {\n /* Nonzero for a VAR_DECL iff an explicit initializer was provided\n    or a non-trivial constructor is called.  */\n #define DECL_NONTRIVIALLY_INITIALIZED_P(NODE)\t\\\n-   (TREE_LANG_FLAG_3 (VAR_DECL_CHECK (NODE)))\n+   (TREE_LANG_FLAG_6 (VAR_DECL_CHECK (NODE)))\n \n /* Nonzero for a VAR_DECL that was initialized with a\n    constant-expression.  */\n@@ -3270,12 +3270,6 @@ struct GTY(()) lang_decl {\n #define FUNCTION_RVALUE_QUALIFIED(NODE) \\\n   TREE_LANG_FLAG_5 (FUNC_OR_METHOD_CHECK (NODE))\n \n-/* Returns 1 iff VAR_DECL is a construction virtual table.\n-   DECL_VTABLE_OR_VTT_P will be true in this case and must be checked\n-   before using this macro.  */\n-#define DECL_CONSTRUCTION_VTABLE_P(NODE) \\\n-  TREE_LANG_FLAG_6 (VAR_DECL_CHECK (NODE))\n-\n /* 1 iff NODE is function-local, but for types.  */\n #define LOCAL_CLASS_P(NODE)\t\t\t\t\\\n   (decl_function_context (TYPE_MAIN_DECL (NODE)) != NULL_TREE)"}, {"sha": "8f935e8656d36289841fca0c230b9944ecbb72ff", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0c2096fbada36fa26778bc02b32555150050d85/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0c2096fbada36fa26778bc02b32555150050d85/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=c0c2096fbada36fa26778bc02b32555150050d85", "patch": "@@ -2713,13 +2713,8 @@ determine_visibility_from_class (tree decl, tree class_type)\n   /* Give the target a chance to override the visibility associated\n      with DECL.  */\n   if (VAR_P (decl)\n-      && (DECL_TINFO_P (decl)\n-\t  || (DECL_VTABLE_OR_VTT_P (decl)\n-\t      /* Construction virtual tables are not exported because\n-\t\t they cannot be referred to from other object files;\n-\t\t their name is not standardized by the ABI.  */\n-\t      && !DECL_CONSTRUCTION_VTABLE_P (decl)))\n       && TREE_PUBLIC (decl)\n+      && (DECL_TINFO_P (decl) || DECL_VTABLE_OR_VTT_P (decl))\n       && !DECL_REALLY_EXTERN (decl)\n       && !CLASSTYPE_VISIBILITY_SPECIFIED (class_type))\n     targetm.cxx.determine_class_data_visibility (decl);"}]}