{"sha": "f1526aaae77c8082ef42691d03254926f5104b64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE1MjZhYWFlNzdjODA4MmVmNDI2OTFkMDMyNTQ5MjZmNTEwNGI2NA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-06-25T18:24:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-06-25T18:24:51Z"}, "message": "re PR target/16176 (Miscompilation of unaligned data in MIPS backend (SB1 flavor))\n\n\tPR target/16176\n\t* config/mips/mips.c (mips_expand_unaligned_load): Use a temporary\n\tregister for the destination of the lwl or ldl.\n\nFrom-SVN: r83668", "tree": {"sha": "4761c6694179d05866b445599129f1c8450da5fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4761c6694179d05866b445599129f1c8450da5fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1526aaae77c8082ef42691d03254926f5104b64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1526aaae77c8082ef42691d03254926f5104b64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1526aaae77c8082ef42691d03254926f5104b64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1526aaae77c8082ef42691d03254926f5104b64/comments", "author": null, "committer": null, "parents": [{"sha": "2fbe90f22457f0a82c1d10ff5a918259c41859b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fbe90f22457f0a82c1d10ff5a918259c41859b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fbe90f22457f0a82c1d10ff5a918259c41859b1"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "7ac68fc7300460a9f42993c09d6551e01949e79c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1526aaae77c8082ef42691d03254926f5104b64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1526aaae77c8082ef42691d03254926f5104b64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1526aaae77c8082ef42691d03254926f5104b64", "patch": "@@ -1,3 +1,9 @@\n+2004-06-25  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\tPR target/16176\n+\t* config/mips/mips.c (mips_expand_unaligned_load): Use a temporary\n+\tregister for the destination of the lwl or ldl.\n+\n 2004-06-25  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* tree-cfg.c (verify_expr): Add macro CHECK_OK."}, {"sha": "ba78b522d48184fe7949a25b096a89cdcd347593", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1526aaae77c8082ef42691d03254926f5104b64/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1526aaae77c8082ef42691d03254926f5104b64/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=f1526aaae77c8082ef42691d03254926f5104b64", "patch": "@@ -4434,7 +4434,7 @@ mips_get_unaligned_mem (rtx *op, unsigned int width, int bitpos,\n bool\n mips_expand_unaligned_load (rtx dest, rtx src, unsigned int width, int bitpos)\n {\n-  rtx left, right;\n+  rtx left, right, temp;\n \n   /* If TARGET_64BIT, the destination of a 32-bit load will be a\n      paradoxical word_mode subreg.  This is the only case in which\n@@ -4453,17 +4453,16 @@ mips_expand_unaligned_load (rtx dest, rtx src, unsigned int width, int bitpos)\n   if (!mips_get_unaligned_mem (&src, width, bitpos, &left, &right))\n     return false;\n \n+  temp = gen_reg_rtx (GET_MODE (dest));\n   if (GET_MODE (dest) == DImode)\n     {\n-      emit_insn (gen_mov_ldl (dest, src, left));\n-      emit_insn (gen_mov_ldr (copy_rtx (dest), copy_rtx (src),\n-\t\t\t      right, copy_rtx (dest)));\n+      emit_insn (gen_mov_ldl (temp, src, left));\n+      emit_insn (gen_mov_ldr (dest, copy_rtx (src), right, temp));\n     }\n   else\n     {\n-      emit_insn (gen_mov_lwl (dest, src, left));\n-      emit_insn (gen_mov_lwr (copy_rtx (dest), copy_rtx (src),\n-\t\t\t      right, copy_rtx (dest)));\n+      emit_insn (gen_mov_lwl (temp, src, left));\n+      emit_insn (gen_mov_lwr (dest, copy_rtx (src), right, temp));\n     }\n   return true;\n }"}, {"sha": "49646705a99ad6cd81353511e8ada90ddbc1b944", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1526aaae77c8082ef42691d03254926f5104b64/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1526aaae77c8082ef42691d03254926f5104b64/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1526aaae77c8082ef42691d03254926f5104b64", "patch": "@@ -1,3 +1,7 @@\n+2004-06-25  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* gcc.c-torture/execute/20040625-1.c: New test.\n+\n 2004-06-25  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.fortran-torture/execute/der_init_3.f90: Fix syntax error."}, {"sha": "c426055db7265b58e41814b578e04b68515e12d5", "filename": "gcc/testsuite/gcc.c-torture/execute/20040625-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1526aaae77c8082ef42691d03254926f5104b64/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040625-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1526aaae77c8082ef42691d03254926f5104b64/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040625-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040625-1.c?ref=f1526aaae77c8082ef42691d03254926f5104b64", "patch": "@@ -0,0 +1,20 @@\n+/* From PR target/16176 */\n+struct __attribute__ ((packed)) s { struct s *next; };\n+\n+struct s * __attribute__ ((noinline))\n+maybe_next (struct s *s, int t)\n+{\n+  if (t)\n+    s = s->next;\n+  return s;\n+}\n+\n+int main ()\n+{\n+  struct s s1, s2;\n+\n+  s1.next = &s2;\n+  if (maybe_next (&s1, 1) != &s2)\n+    abort ();\n+  exit (0);\n+}"}]}