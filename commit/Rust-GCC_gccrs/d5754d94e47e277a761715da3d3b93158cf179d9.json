{"sha": "d5754d94e47e277a761715da3d3b93158cf179d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU3NTRkOTRlNDdlMjc3YTc2MTcxNWRhM2QzYjkzMTU4Y2YxNzlkOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-05-06T21:14:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-05-06T21:14:35Z"}, "message": "re PR c++/85659 (ICE with inline assembly inside virtual function)\n\n\tPR c++/85659\n\t* cfgexpand.c (expand_asm_stmt): Don't create a temporary if\n\tthe type is addressable.  Don't force op into register if it has\n\tBLKmode.\n\n\t* g++.dg/ext/asm14.C: New test.\n\t* g++.dg/ext/asm15.C: New test.\n\t* g++.dg/ext/asm16.C: New test.\n\nFrom-SVN: r259981", "tree": {"sha": "35adf5c4a8fa97f31b1ab2760eff5ca61a459d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35adf5c4a8fa97f31b1ab2760eff5ca61a459d81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5754d94e47e277a761715da3d3b93158cf179d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5754d94e47e277a761715da3d3b93158cf179d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5754d94e47e277a761715da3d3b93158cf179d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5754d94e47e277a761715da3d3b93158cf179d9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9856a8d08902b1c11a730217a97302a92965996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9856a8d08902b1c11a730217a97302a92965996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9856a8d08902b1c11a730217a97302a92965996"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "d4623313b164d3986a6395d8127cb82f96a8b7af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5754d94e47e277a761715da3d3b93158cf179d9", "patch": "@@ -1,3 +1,10 @@\n+2018-05-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/85659\n+\t* cfgexpand.c (expand_asm_stmt): Don't create a temporary if\n+\tthe type is addressable.  Don't force op into register if it has\n+\tBLKmode.\n+\n 2018-05-05  Roland McGrath  <mcgrathr@google.com>\n \n \tPR other/77609"}, {"sha": "ff2f4074df2867bb9ded0936d20ec30355f2f7a1", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=d5754d94e47e277a761715da3d3b93158cf179d9", "patch": "@@ -3044,14 +3044,14 @@ expand_asm_stmt (gasm *stmt)\n \n       generating_concat_p = 0;\n \n-      if ((TREE_CODE (val) == INDIRECT_REF\n-\t   && allows_mem)\n+      if ((TREE_CODE (val) == INDIRECT_REF && allows_mem)\n \t  || (DECL_P (val)\n \t      && (allows_mem || REG_P (DECL_RTL (val)))\n \t      && ! (REG_P (DECL_RTL (val))\n \t\t    && GET_MODE (DECL_RTL (val)) != TYPE_MODE (type)))\n \t  || ! allows_reg\n-\t  || is_inout)\n+\t  || is_inout\n+\t  || TREE_ADDRESSABLE (type))\n \t{\n \t  op = expand_expr (val, NULL_RTX, VOIDmode,\n \t\t\t    !allows_reg ? EXPAND_MEMORY : EXPAND_WRITE);\n@@ -3060,7 +3060,7 @@ expand_asm_stmt (gasm *stmt)\n \n \t  if (! allows_reg && !MEM_P (op))\n \t    error (\"output number %d not directly addressable\", i);\n-\t  if ((! allows_mem && MEM_P (op))\n+\t  if ((! allows_mem && MEM_P (op) && GET_MODE (op) != BLKmode)\n \t      || GET_CODE (op) == CONCAT)\n \t    {\n \t      rtx old_op = op;"}, {"sha": "ce19dfb6cf04b78f60f86a3806e4b310063749da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5754d94e47e277a761715da3d3b93158cf179d9", "patch": "@@ -1,3 +1,10 @@\n+2018-05-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/85659\n+\t* g++.dg/ext/asm14.C: New test.\n+\t* g++.dg/ext/asm15.C: New test.\n+\t* g++.dg/ext/asm16.C: New test.\n+\n 2018-05-06  Michael Eager  <eager@eagercon.com>\n \n \t* gcc.target/microblaze/others/picdtr.c: Correct option"}, {"sha": "f7f61aabd93d3406180debfe719651d946724274", "filename": "gcc/testsuite/g++.dg/ext/asm14.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm14.C?ref=d5754d94e47e277a761715da3d3b93158cf179d9", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/85659\n+// { dg-do compile }\n+\n+struct S { S (); ~S (); int s; };\n+\n+void\n+foo (S &s)\n+{\n+  __asm volatile (\"\" : \"+m,r\" (s) : : \"memory\");\n+}"}, {"sha": "c4946ddc5367019eb1e223226256fff4b06bfebe", "filename": "gcc/testsuite/g++.dg/ext/asm15.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm15.C?ref=d5754d94e47e277a761715da3d3b93158cf179d9", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/85659\n+// { dg-do compile }\n+\n+struct S { S (); ~S (); int s; };\n+\n+void\n+foo (S &s)\n+{\n+  __asm volatile (\"\" : \"+r\" (s) : : \"memory\");\t// { dg-error \"\" }\n+}"}, {"sha": "565cbb33e5f6cc8b605c99e16ec4120c68bf54cb", "filename": "gcc/testsuite/g++.dg/ext/asm16.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5754d94e47e277a761715da3d3b93158cf179d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm16.C?ref=d5754d94e47e277a761715da3d3b93158cf179d9", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/85659\n+// { dg-do compile }\n+\n+struct S { S (); ~S (); int s[64]; } s;\n+\n+void\n+foo ()\n+{\n+  __asm volatile (\"\" : \"=r\" (s) : : \"memory\");\t// { dg-error \"\" }\n+}"}]}