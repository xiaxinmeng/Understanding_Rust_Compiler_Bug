{"sha": "ff2f581b00ac6759f6366c16ef902c935163aa13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYyZjU4MWIwMGFjNjc1OWY2MzY2YzE2ZWY5MDJjOTM1MTYzYWExMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-03-02T16:18:25Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-03-02T16:18:25Z"}, "message": "re PR c++/51989 (std::deque::iterator recognised as container)\n\n/cp\n2012-03-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51989\n\t* typeck2.c (build_x_arrow): Take a tsubst_flags_t argument and\n\tpropagate it.\n\t* cp-tree.h (build_x_arrow): Adjust prototype.\n\t* pt.c (tsubst_copy_and_build): Adjust call.\n\t* parser.c (cp_parser_postfix_dot_deref_expression): Likewise.\n\n/testsuite\n2012-03-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51989\n\t* g++.dg/cpp0x/sfinae32.C: New.\n\nFrom-SVN: r184796", "tree": {"sha": "439173557b232012ba0a62b06779c1e702a93d2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/439173557b232012ba0a62b06779c1e702a93d2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff2f581b00ac6759f6366c16ef902c935163aa13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2f581b00ac6759f6366c16ef902c935163aa13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff2f581b00ac6759f6366c16ef902c935163aa13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2f581b00ac6759f6366c16ef902c935163aa13/comments", "author": null, "committer": null, "parents": [{"sha": "54e9d9449da9e5de74d9276ae2513cdc9367427d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e9d9449da9e5de74d9276ae2513cdc9367427d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e9d9449da9e5de74d9276ae2513cdc9367427d"}], "stats": {"total": 62, "additions": 50, "deletions": 12}, "files": [{"sha": "6d73ea813e22964239943d0bba749c3a3b588ea7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ff2f581b00ac6759f6366c16ef902c935163aa13", "patch": "@@ -1,3 +1,12 @@\n+2012-03-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51989\n+\t* typeck2.c (build_x_arrow): Take a tsubst_flags_t argument and\n+\tpropagate it.\n+\t* cp-tree.h (build_x_arrow): Adjust prototype.\n+\t* pt.c (tsubst_copy_and_build): Adjust call.\n+\t* parser.c (cp_parser_postfix_dot_deref_expression): Likewise.\n+\n 2012-03-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* name-lookup.c (binding_to_template_parms_of_scope_p): Clean up."}, {"sha": "71573ff0b37afcf6f97dd69dafac806c79afabb0", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=ff2f581b00ac6759f6366c16ef902c935163aa13", "patch": "@@ -5880,7 +5880,7 @@ extern void check_narrowing\t\t\t(tree, tree);\n extern tree digest_init\t\t\t\t(tree, tree, tsubst_flags_t);\n extern tree digest_init_flags\t\t\t(tree, tree, int);\n extern tree build_scoped_ref\t\t\t(tree, tree, tree *);\n-extern tree build_x_arrow\t\t\t(tree);\n+extern tree build_x_arrow\t\t\t(tree, tsubst_flags_t);\n extern tree build_m_component_ref\t\t(tree, tree);\n extern tree build_functional_cast\t\t(tree, tree, tsubst_flags_t);\n extern tree add_exception_specifier\t\t(tree, tree, int);"}, {"sha": "c6bd2906203b646f5d7fe65e5ce59451ecc1ec24", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=ff2f581b00ac6759f6366c16ef902c935163aa13", "patch": "@@ -5910,7 +5910,8 @@ cp_parser_postfix_dot_deref_expression (cp_parser *parser,\n \n   /* If this is a `->' operator, dereference the pointer.  */\n   if (token_type == CPP_DEREF)\n-    postfix_expression = build_x_arrow (postfix_expression);\n+    postfix_expression = build_x_arrow (postfix_expression,\n+\t\t\t\t\ttf_warning_or_error);\n   /* Check to see whether or not the expression is type-dependent.  */\n   dependent_p = type_dependent_expression_p (postfix_expression);\n   /* The identifier following the `->' or `.' is not qualified.  */"}, {"sha": "8f24d6180af0d9dccab6a9386dac10028e09d015", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ff2f581b00ac6759f6366c16ef902c935163aa13", "patch": "@@ -13691,7 +13691,7 @@ tsubst_copy_and_build (tree t,\n       /* Remember that there was a reference to this entity.  */\n       if (DECL_P (op1))\n \tmark_used (op1);\n-      return build_x_arrow (op1);\n+      return build_x_arrow (op1, complain);\n \n     case NEW_EXPR:\n       {"}, {"sha": "a2606f17abb7659383d3dc347da6eabad68c4e69", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=ff2f581b00ac6759f6366c16ef902c935163aa13", "patch": "@@ -1462,7 +1462,7 @@ build_scoped_ref (tree datum, tree basetype, tree* binfo_p)\n    delegation is detected.  */\n \n tree\n-build_x_arrow (tree expr)\n+build_x_arrow (tree expr, tsubst_flags_t complain)\n {\n   tree orig_expr = expr;\n   tree type = TREE_TYPE (expr);\n@@ -1486,7 +1486,7 @@ build_x_arrow (tree expr)\n \n       while ((expr = build_new_op (COMPONENT_REF, LOOKUP_NORMAL, expr,\n \t\t\t\t   NULL_TREE, NULL_TREE,\n-\t\t\t\t   &fn, tf_warning_or_error)))\n+\t\t\t\t   &fn, complain)))\n \t{\n \t  if (expr == error_mark_node)\n \t    return error_mark_node;\n@@ -1497,7 +1497,8 @@ build_x_arrow (tree expr)\n \n \t  if (vec_member (TREE_TYPE (expr), types_memoized))\n \t    {\n-\t      error (\"circular pointer delegation detected\");\n+\t      if (complain & tf_error)\n+\t\terror (\"circular pointer delegation detected\");\n \t      return error_mark_node;\n \t    }\n \n@@ -1510,7 +1511,8 @@ build_x_arrow (tree expr)\n \n       if (last_rval == NULL_TREE)\n \t{\n-\t  error (\"base operand of %<->%> has non-pointer type %qT\", type);\n+\t  if (complain & tf_error)\n+\t    error (\"base operand of %<->%> has non-pointer type %qT\", type);\n \t  return error_mark_node;\n \t}\n \n@@ -1530,13 +1532,16 @@ build_x_arrow (tree expr)\n \t  return expr;\n \t}\n \n-      return cp_build_indirect_ref (last_rval, RO_NULL, tf_warning_or_error);\n+      return cp_build_indirect_ref (last_rval, RO_NULL, complain);\n     }\n \n-  if (types_memoized)\n-    error (\"result of %<operator->()%> yields non-pointer result\");\n-  else\n-    error (\"base operand of %<->%> is not a pointer\");\n+  if (complain & tf_error)\n+    {\n+      if (types_memoized)\n+\terror (\"result of %<operator->()%> yields non-pointer result\");\n+      else\n+\terror (\"base operand of %<->%> is not a pointer\");\n+    }\n   return error_mark_node;\n }\n "}, {"sha": "9efc01be3b3b76d1c8befc9c7e8f49cd31bfe440", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ff2f581b00ac6759f6366c16ef902c935163aa13", "patch": "@@ -1,3 +1,8 @@\n+2012-03-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51989\n+\t* g++.dg/cpp0x/sfinae32.C: New.\n+\n 2012-03-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/52406"}, {"sha": "db3bf5a21fc94ed37e7ac154372501f825bf7e89", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae32.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2f581b00ac6759f6366c16ef902c935163aa13/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae32.C?ref=ff2f581b00ac6759f6366c16ef902c935163aa13", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/51989\n+// { dg-options -std=c++0x }\n+\n+template <typename T>\n+struct is_container\n+{\n+  template <typename U, typename V = decltype(((U*)0)->begin())>\n+  static char test(U* u);\n+\n+  template <typename U> static long test(...);\n+\n+  enum { value = sizeof test<T>(0) == 1 };\n+};\n+\n+int main()\n+{\n+  return is_container<void>::value;\n+}"}]}