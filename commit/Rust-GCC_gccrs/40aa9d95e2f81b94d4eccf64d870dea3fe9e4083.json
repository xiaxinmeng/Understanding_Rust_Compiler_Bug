{"sha": "40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBhYTlkOTVlMmY4MWI5NGQ0ZWNjZjY0ZDg3MGRlYTNmZTllNDA4Mw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2002-12-24T19:08:41Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2002-12-24T19:08:41Z"}, "message": "new1.C, [...]: Add tests previously added only to 3.1 or 3.2 branch.\n\n\t* g++.dg/init/new1.C, g++.dg/template/alignof1.C,\n\tgcc.c-torture/compile/20021015-1.c,\n\tgcc.c-torture/compile/20021015-2.c,\n\tgcc.c-torture/compile/20021123-1.c,\n\tgcc.c-torture/compile/20021123-2.c,\n\tgcc.c-torture/compile/20021123-3.c,\n\tgcc.c-torture/compile/20021123-4.c,\n\tgcc.c-torture/execute/20021024-1.c: Add tests previously added\n\tonly to 3.1 or 3.2 branch.\n\nFrom-SVN: r60479", "tree": {"sha": "bbf4446930559e86e23a947c37faf9c3a6df65e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbf4446930559e86e23a947c37faf9c3a6df65e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fbf9d4ad97b137255abe8d0960ad377d61f4838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fbf9d4ad97b137255abe8d0960ad377d61f4838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fbf9d4ad97b137255abe8d0960ad377d61f4838"}], "stats": {"total": 146, "additions": 146, "deletions": 0}, "files": [{"sha": "7771c26a1d51c0c7d3895929110032d729ce998b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -1,3 +1,15 @@\n+2002-12-24  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* g++.dg/init/new1.C, g++.dg/template/alignof1.C,\n+\tgcc.c-torture/compile/20021015-1.c,\n+\tgcc.c-torture/compile/20021015-2.c,\n+\tgcc.c-torture/compile/20021123-1.c,\n+\tgcc.c-torture/compile/20021123-2.c,\n+\tgcc.c-torture/compile/20021123-3.c,\n+\tgcc.c-torture/compile/20021123-4.c,\n+\tgcc.c-torture/execute/20021024-1.c: Add tests previously added\n+\tonly to 3.1 or 3.2 branch.\n+\n 2002-12-23  Mark Mitchell  <mark@codesourcery.com>\n \n \t* testsuite/gcc.dg/i386-bitfield3.c: New test."}, {"sha": "24b60d3c409971c0ce82a2d2feceb37db18748ac", "filename": "gcc/testsuite/g++.dg/init/new1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew1.C?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -0,0 +1,20 @@\n+// Origin: asharji@uwaterloo.ca\n+\n+// { dg-do compile }\n+// { dg-options \"-fvolatile\" }\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+class bar {\n+    int i;\n+  public :\n+    void * operator new ( size_t , void * storage );\n+};\n+\n+class foo {\n+    int storage[ 5 ];\n+  public:\n+    void mem ( ) {\n+        bar *s = new ( ( void * ) & storage ) bar;\n+    }\n+};"}, {"sha": "50a32183cfc74a702b71c127927c0767ffddef0b", "filename": "gcc/testsuite/g++.dg/template/alignof1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Falignof1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Falignof1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Falignof1.C?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -0,0 +1,13 @@\n+template<typename T>\n+int my_alignof()\n+{\n+    return __alignof__(T);\n+}\n+\n+template<typename>\n+struct X { };\n+\n+int main()\n+{\n+  return my_alignof<X<void> >();\n+}"}, {"sha": "789b8a8b176fa929c8c5ae42193c23e981568fd0", "filename": "gcc/testsuite/gcc.c-torture/compile/20021015-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021015-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021015-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021015-1.c?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/7370.  */\n+\n+int g (int *x, int *y);\n+\n+void f ()\n+{\n+  int x, y;\n+  char a[4000];\n+\n+  g (&x, &y);\n+  x = x/y + x;\n+}"}, {"sha": "6b158c5bdc8b1d10ed3958f216a0837b287ca931", "filename": "gcc/testsuite/gcc.c-torture/compile/20021015-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021015-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021015-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021015-2.c?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -0,0 +1,7 @@\n+/* PR target/8232.  */\n+\n+int f (char *p, char *q, int i)\n+{\n+  return bcmp (p, q, i);\n+}\n+"}, {"sha": "dd2aa7e09dd141c364b76462a32e483efb5f022d", "filename": "gcc/testsuite/gcc.c-torture/compile/20021123-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-1.c?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -0,0 +1,10 @@\n+/* PR c/8439 */\n+/* Verify that GCC properly handles null increments. */\n+\n+struct empty {\n+};\n+\n+void foo(struct empty *p)\n+{\n+   p++;\n+}"}, {"sha": "423f8ec1964b3a4fc0723bac61256f6d8dfad47f", "filename": "gcc/testsuite/gcc.c-torture/compile/20021123-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-2.c?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -0,0 +1,9 @@\n+/* PR c/8518 */\n+/* Contributed by Volker Reichelt. */\n+\n+/* Verify that GCC doesn't get confused by the\n+   redefinition of an extern inline function. */\n+\n+extern int inline foo () { return 0; }\n+extern int inline bar () { return 0; }\n+static int inline bar () { return foo(); }"}, {"sha": "51f0e257dfdd1971fd3e2d7517eaa3b50a1a2122", "filename": "gcc/testsuite/gcc.c-torture/compile/20021123-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-3.c?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -0,0 +1,9 @@\n+/* PR c/8518 */\n+/* Contributed by Volker Reichelt. */\n+\n+/* Verify that GCC doesn't get confused by the\n+   redefinition of an extern inline function. */\n+\n+extern int inline foo () { return 0; }\n+extern int inline bar () { return 0; }\n+static int bar () { return foo(); }"}, {"sha": "d4306b89b999f485385c2099818f8fc64a81bca5", "filename": "gcc/testsuite/gcc.c-torture/compile/20021123-4.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-4.c?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -0,0 +1,11 @@\n+/* PR c/8588 */\n+/* Contributed by Volker Reichelt. */\n+\n+/* Verify that GCC converts integer constants\n+   in shift operations. */\n+   \n+void foo()\n+{\n+  unsigned int i, j;\n+  j = (i >> 0xf0);\n+}"}, {"sha": "f7d98e929a26fbdd1b819caa1c287193379355bf", "filename": "gcc/testsuite/gcc.c-torture/execute/20021024-1.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021024-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aa9d95e2f81b94d4eccf64d870dea3fe9e4083/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021024-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021024-1.c?ref=40aa9d95e2f81b94d4eccf64d870dea3fe9e4083", "patch": "@@ -0,0 +1,43 @@\n+/* Origin: PR target/6981 from Mattias Engdegaard <mattias@virtutech.se>.  */\n+\n+void exit (int);\n+void abort (void);\n+\n+unsigned long long *cp, m;\n+\n+void foo (void)\n+{\n+}\n+\n+void bar (unsigned rop, unsigned long long *r)\n+{\n+  unsigned rs1, rs2, rd;\n+\n+top:\n+  rs2 = (rop >> 23) & 0x1ff;\n+  rs1 = (rop >> 9) & 0x1ff;\n+  rd = rop & 0x1ff;\n+\n+  *cp = 1;\n+  m = r[rs1] + r[rs2];\n+  *cp = 2;\n+  foo();\n+  if (!rd)\n+    goto top;\n+  r[rd] = 1;\n+}\n+\n+int main(void)\n+{\n+  static unsigned long long r[64];\n+  unsigned long long cr;\n+  cp = &cr;\n+\n+  r[4] = 47;\n+  r[8] = 11;\n+  bar((8 << 23) | (4 << 9) | 15, r);\n+\n+  if (m != 47 + 11)\n+    abort ();\n+  exit (0);\n+}"}]}