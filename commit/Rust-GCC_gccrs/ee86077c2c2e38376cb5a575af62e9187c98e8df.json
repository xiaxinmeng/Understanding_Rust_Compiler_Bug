{"sha": "ee86077c2c2e38376cb5a575af62e9187c98e8df", "node_id": "C_kwDOANBUbNoAKGVlODYwNzdjMmMyZTM4Mzc2Y2I1YTU3NWFmNjJlOTE4N2M5OGU4ZGY", "commit": {"author": {"name": "Jeff Law", "email": "jlaw@ventanamicro.com", "date": "2022-11-22T23:30:38Z"}, "committer": {"name": "Jeff Law", "email": "jlaw@ventanamicro.com", "date": "2022-11-22T23:35:26Z"}, "message": "Fix thinko in last patch\n\ngcc/\n\t* tree-ssa-dom.cc (record_edge_info): Fix thinko in last commit.", "tree": {"sha": "09db32de627d0c923f45fad0438f81b513c3c5de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09db32de627d0c923f45fad0438f81b513c3c5de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee86077c2c2e38376cb5a575af62e9187c98e8df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee86077c2c2e38376cb5a575af62e9187c98e8df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee86077c2c2e38376cb5a575af62e9187c98e8df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee86077c2c2e38376cb5a575af62e9187c98e8df/comments", "author": null, "committer": null, "parents": [{"sha": "a03b35a28db262546415e8f16829cbb027a75025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03b35a28db262546415e8f16829cbb027a75025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a03b35a28db262546415e8f16829cbb027a75025"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c9e52d1ee947959063ecca9c7c12ec1d729ca4ce", "filename": "gcc/tree-ssa-dom.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee86077c2c2e38376cb5a575af62e9187c98e8df/gcc%2Ftree-ssa-dom.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee86077c2c2e38376cb5a575af62e9187c98e8df/gcc%2Ftree-ssa-dom.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.cc?ref=ee86077c2c2e38376cb5a575af62e9187c98e8df", "patch": "@@ -676,7 +676,7 @@ record_edge_info (basic_block bb)\n \t\t     if it never traverses the backedge to begin with.  This\n \t\t     implies that any PHI nodes create equivalances that we\n \t\t     can attach to the loop exit edge.  */\n-\t\t  int bool\n+\t\t  bool alternative\n \t\t    = (EDGE_PRED (bb, 0)->flags & EDGE_DFS_BACK) ? 1 : 0;\n \n \t\t  gphi_iterator gsi;"}]}