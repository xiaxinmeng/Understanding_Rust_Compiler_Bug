{"sha": "1b19470d144f605f7e69086cfdf2fbf9a4650594", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIxOTQ3MGQxNDRmNjA1ZjdlNjkwODZjZmRmMmZiZjlhNDY1MDU5NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-03-01T13:32:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-03-01T13:32:13Z"}, "message": "re PR middle-end/70022 (ICE: in tree_to_shwi, at tree.c:7328 with out-of-bounds vector index)\n\n2016-03-01  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/70022\n\t* fold-const.c (fold_indirect_ref_1): Fix range checking for\n\tvector BIT_FIELD_REF extract.\n\n\t* gcc.dg/pr70022.c: New testcase.\n\nFrom-SVN: r233852", "tree": {"sha": "a1d47944d3ab4903f9a8a8260160bf5fd4385858", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1d47944d3ab4903f9a8a8260160bf5fd4385858"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b19470d144f605f7e69086cfdf2fbf9a4650594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b19470d144f605f7e69086cfdf2fbf9a4650594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b19470d144f605f7e69086cfdf2fbf9a4650594", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b19470d144f605f7e69086cfdf2fbf9a4650594/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "366298bddaa3e5571a5a8670e9bedb6fd1fc18fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366298bddaa3e5571a5a8670e9bedb6fd1fc18fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366298bddaa3e5571a5a8670e9bedb6fd1fc18fc"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "c210534796ce977619e4202e769d3362d7393ced", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b19470d144f605f7e69086cfdf2fbf9a4650594/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b19470d144f605f7e69086cfdf2fbf9a4650594/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b19470d144f605f7e69086cfdf2fbf9a4650594", "patch": "@@ -1,3 +1,9 @@\n+2016-03-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/70022\n+\t* fold-const.c (fold_indirect_ref_1): Fix range checking for\n+\tvector BIT_FIELD_REF extract.\n+\n 2016-03-01  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69994"}, {"sha": "21241db5a49c566924a98b59a886e173d496d609", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b19470d144f605f7e69086cfdf2fbf9a4650594/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b19470d144f605f7e69086cfdf2fbf9a4650594/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=1b19470d144f605f7e69086cfdf2fbf9a4650594", "patch": "@@ -14218,17 +14218,20 @@ fold_indirect_ref_1 (location_t loc, tree type, tree op0)\n \t  if (TREE_CODE (op00type) == VECTOR_TYPE\n \t      && type == TREE_TYPE (op00type))\n \t    {\n-\t      HOST_WIDE_INT offset = tree_to_shwi (op01);\n \t      tree part_width = TYPE_SIZE (type);\n-\t      unsigned HOST_WIDE_INT part_widthi = tree_to_shwi (part_width)/BITS_PER_UNIT;\n-\t      unsigned HOST_WIDE_INT indexi = offset * BITS_PER_UNIT;\n-\t      tree index = bitsize_int (indexi);\n-\n-\t      if (offset / part_widthi < TYPE_VECTOR_SUBPARTS (op00type))\n-\t\treturn fold_build3_loc (loc,\n-\t\t\t\t\tBIT_FIELD_REF, type, op00,\n-\t\t\t\t\tpart_width, index);\n-\n+\t      unsigned HOST_WIDE_INT max_offset\n+\t\t= (tree_to_uhwi (part_width) / BITS_PER_UNIT\n+\t\t   * TYPE_VECTOR_SUBPARTS (op00type));\n+\t      if (tree_int_cst_sign_bit (op01) == 0\n+\t\t  && compare_tree_int (op01, max_offset) == -1)\n+\t\t{\n+\t\t  unsigned HOST_WIDE_INT offset = tree_to_uhwi (op01);\n+\t\t  unsigned HOST_WIDE_INT indexi = offset * BITS_PER_UNIT;\n+\t\t  tree index = bitsize_int (indexi);\n+\t\t  return fold_build3_loc (loc,\n+\t\t\t\t\t  BIT_FIELD_REF, type, op00,\n+\t\t\t\t\t  part_width, index);\n+\t\t}\n \t    }\n \t  /* ((foo*)&complexfoo)[1] => __imag__ complexfoo */\n \t  else if (TREE_CODE (op00type) == COMPLEX_TYPE"}, {"sha": "50991821f2baef38c8887d74ad42343f75c79dc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b19470d144f605f7e69086cfdf2fbf9a4650594/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b19470d144f605f7e69086cfdf2fbf9a4650594/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b19470d144f605f7e69086cfdf2fbf9a4650594", "patch": "@@ -1,3 +1,8 @@\n+2016-03-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/70022\n+\t* gcc.dg/pr70022.c: New testcase.\n+\n 2016-03-01  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR tree-optimization/69956"}, {"sha": "c7e60b8f153496026ab635388dfa9351ee03e9da", "filename": "gcc/testsuite/gcc.dg/pr70022.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b19470d144f605f7e69086cfdf2fbf9a4650594/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70022.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b19470d144f605f7e69086cfdf2fbf9a4650594/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70022.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70022.c?ref=1b19470d144f605f7e69086cfdf2fbf9a4650594", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+\n+typedef int v4si __attribute__ ((vector_size (16)));\n+\n+int\n+foo (v4si v)\n+{\n+  return v[~0UL];\n+}"}]}