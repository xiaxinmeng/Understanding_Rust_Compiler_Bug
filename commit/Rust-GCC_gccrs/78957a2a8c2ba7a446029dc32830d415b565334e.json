{"sha": "78957a2a8c2ba7a446029dc32830d415b565334e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5NTdhMmE4YzJiYTdhNDQ2MDI5ZGMzMjgzMGQ0MTViNTY1MzM0ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-03-19T02:41:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-03-19T02:41:03Z"}, "message": "decl.c (store_bindings): Use free_binding_vecs.\n\n\t* decl.c (store_bindings): Use free_binding_vecs.\n\t(pop_from_top_level): Likewise.\n\nFrom-SVN: r18701", "tree": {"sha": "33202a7b44623f5035ed5e7b39632801841a9004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33202a7b44623f5035ed5e7b39632801841a9004"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78957a2a8c2ba7a446029dc32830d415b565334e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78957a2a8c2ba7a446029dc32830d415b565334e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78957a2a8c2ba7a446029dc32830d415b565334e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78957a2a8c2ba7a446029dc32830d415b565334e/comments", "author": null, "committer": null, "parents": [{"sha": "321c0828275afc28ac94cfe0f4f6ee50b4edad70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/321c0828275afc28ac94cfe0f4f6ee50b4edad70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/321c0828275afc28ac94cfe0f4f6ee50b4edad70"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "5c45847a8b16fd2ae616fa78678a80d1a4d4bc4c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78957a2a8c2ba7a446029dc32830d415b565334e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78957a2a8c2ba7a446029dc32830d415b565334e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=78957a2a8c2ba7a446029dc32830d415b565334e", "patch": "@@ -1,3 +1,8 @@\n+Thu Mar 19 02:27:48 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (store_bindings): Use free_binding_vecs.\n+\t(pop_from_top_level): Likewise.\n+\n Wed Mar 18 12:41:43 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (make_implicit_typename): Only change the type of a "}, {"sha": "09ad59ca170a65c868c96ea26383c4e84be29f3f", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78957a2a8c2ba7a446029dc32830d415b565334e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78957a2a8c2ba7a446029dc32830d415b565334e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=78957a2a8c2ba7a446029dc32830d415b565334e", "patch": "@@ -1897,6 +1897,11 @@ struct saved_scope {\n };\n static struct saved_scope *current_saved_scope;\n \n+/* A chain of the binding vecs created by store_bindings.  We create a\n+   whole bunch of these during compilation, on permanent_obstack, so we\n+   can't just throw them away.  */\n+static tree free_binding_vecs;\n+\n static tree\n store_bindings (names, old_bindings)\n      tree names, old_bindings;\n@@ -1919,8 +1924,15 @@ store_bindings (names, old_bindings)\n       for (t1 = old_bindings; t1; t1 = TREE_CHAIN (t1))\n \tif (TREE_VEC_ELT (t1, 0) == id)\n \t  goto skip_it;\n-\t    \n-      binding = make_tree_vec (4);\n+\n+      if (free_binding_vecs)\n+\t{\n+\t  binding = free_binding_vecs;\n+\t  free_binding_vecs = TREE_CHAIN (free_binding_vecs);\n+\t}\n+      else\n+\tbinding = make_tree_vec (4);\n+\n       if (id)\n \t{\n \t  my_friendly_assert (TREE_CODE (id) == IDENTIFIER_NODE, 135);\n@@ -2045,15 +2057,19 @@ pop_from_top_level ()\n \n   current_binding_level = s->old_binding_level;\n   current_saved_scope = s->prev;\n-  for (t = s->old_bindings; t; t = TREE_CHAIN (t))\n+  for (t = s->old_bindings; t; )\n     {\n+      tree save = t;\n       tree id = TREE_VEC_ELT (t, 0);\n       if (id)\n \t{\n \t  IDENTIFIER_TYPE_VALUE (id) = TREE_VEC_ELT (t, 1);\n \t  IDENTIFIER_LOCAL_VALUE (id) = TREE_VEC_ELT (t, 2);\n \t  IDENTIFIER_CLASS_VALUE (id) = TREE_VEC_ELT (t, 3);\n \t}\n+      t = TREE_CHAIN (t);\n+      TREE_CHAIN (save) = free_binding_vecs;\n+      free_binding_vecs = save;\n     }\n   current_class_name = s->class_name;\n   current_class_type = s->class_type;"}]}