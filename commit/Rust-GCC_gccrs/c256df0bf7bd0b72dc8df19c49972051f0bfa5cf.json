{"sha": "c256df0bf7bd0b72dc8df19c49972051f0bfa5cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI1NmRmMGJmN2JkMGI3MmRjOGRmMTljNDk5NzIwNTFmMGJmYTVjZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-30T11:19:15Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-30T11:19:15Z"}, "message": "(cse_insn): Properly set IN_MEMORY for SET_DEST.\n\nFrom-SVN: r9547", "tree": {"sha": "9e8b826628889d387e3016374a29e896ef6a086a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e8b826628889d387e3016374a29e896ef6a086a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c256df0bf7bd0b72dc8df19c49972051f0bfa5cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c256df0bf7bd0b72dc8df19c49972051f0bfa5cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c256df0bf7bd0b72dc8df19c49972051f0bfa5cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c256df0bf7bd0b72dc8df19c49972051f0bfa5cf/comments", "author": null, "committer": null, "parents": [{"sha": "abd23b66b4c3e345de19758ccf461d936cefe5eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd23b66b4c3e345de19758ccf461d936cefe5eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abd23b66b4c3e345de19758ccf461d936cefe5eb"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "a0c2d7444732e67a0bac65651a04071604b61c68", "filename": "gcc/cse.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c256df0bf7bd0b72dc8df19c49972051f0bfa5cf/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c256df0bf7bd0b72dc8df19c49972051f0bfa5cf/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=c256df0bf7bd0b72dc8df19c49972051f0bfa5cf", "patch": "@@ -7273,7 +7273,9 @@ cse_insn (insn, in_libcall_block)\n \n \telt = insert (dest, sets[i].src_elt,\n \t\t      sets[i].dest_hash, GET_MODE (dest));\n-\telt->in_memory = GET_CODE (sets[i].inner_dest) == MEM;\n+\telt->in_memory = (GET_CODE (sets[i].inner_dest) == MEM\n+\t\t\t  && ! RTX_UNCHANGING_P (sets[i].inner_dest));\n+\n \tif (elt->in_memory)\n \t  {\n \t    /* This implicitly assumes a whole struct"}]}