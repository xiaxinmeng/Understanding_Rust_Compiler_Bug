{"sha": "fbe10effb5ac008757b1e42530e53e59f601fd9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJlMTBlZmZiNWFjMDA4NzU3YjFlNDI1MzBlNTNlNTlmNjAxZmQ5ZA==", "commit": {"author": {"name": "Janis Johnson", "email": "janisjo@codesourcery.com", "date": "2013-01-16T18:49:57Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2013-01-16T18:49:57Z"}, "message": "re PR testsuite/54622 (gcc.dg/vect test failures for arm big-endian)\n\n\tPR testsuite/54622\n\t* lib/target-supports.exp (check_effective_target_vect_perm_byte,\n\tcheck_effective_target_vect_perm_short,\n\tcheck_effective_target_vect_widen_mult_qi_to_hi_pattern,\n\tcheck_effective_target_vect64): Return 0 for big-endian ARM.\n\t(check_effective_target_vect_widen_sum_qi_to_hi): Return 1 for ARM.\n\nFrom-SVN: r195249", "tree": {"sha": "2c3f2731aca8a0001a4b004092d5428f4b9726af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c3f2731aca8a0001a4b004092d5428f4b9726af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbe10effb5ac008757b1e42530e53e59f601fd9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe10effb5ac008757b1e42530e53e59f601fd9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe10effb5ac008757b1e42530e53e59f601fd9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe10effb5ac008757b1e42530e53e59f601fd9d/comments", "author": null, "committer": null, "parents": [{"sha": "98342895775bdb8f9b47c1f40555d7d91d6f9b7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98342895775bdb8f9b47c1f40555d7d91d6f9b7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98342895775bdb8f9b47c1f40555d7d91d6f9b7b"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "2e0da906dee3aa6acb9b8723f8f54d4f8be41788", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe10effb5ac008757b1e42530e53e59f601fd9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe10effb5ac008757b1e42530e53e59f601fd9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbe10effb5ac008757b1e42530e53e59f601fd9d", "patch": "@@ -1,5 +1,12 @@\n 2013-01-16  Janis Johnson  <janisjo@codesourcery.com>\n \n+\tPR testsuite/54622\n+\t* lib/target-supports.exp (check_effective_target_vect_perm_byte,\n+\tcheck_effective_target_vect_perm_short,\n+\tcheck_effective_target_vect_widen_mult_qi_to_hi_pattern,\n+\tcheck_effective_target_vect64): Return 0 for big-endian ARM.\n+\t(check_effective_target_vect_widen_sum_qi_to_hi): Return 1 for ARM.\n+\n \t* gcc.target/arm/neon-vld1_dupQ.c: Use types that match function\n \tprototypes.\n "}, {"sha": "abc90384d5fd8e8f36e41fb114e958f14850f3e1", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe10effb5ac008757b1e42530e53e59f601fd9d/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe10effb5ac008757b1e42530e53e59f601fd9d/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=fbe10effb5ac008757b1e42530e53e59f601fd9d", "patch": "@@ -3082,7 +3082,8 @@ proc check_effective_target_vect_perm_byte { } {\n         verbose \"check_effective_target_vect_perm_byte: using cached result\" 2\n     } else {\n         set et_vect_perm_byte_saved 0\n-        if { [is-effective-target arm_neon_ok]\n+        if { ([is-effective-target arm_neon_ok]\n+\t      && [is-effective-target arm_little_endian])\n \t     || [istarget aarch64*-*-*]\n \t     || [istarget powerpc*-*-*]\n              || [istarget spu-*-*] } {\n@@ -3105,7 +3106,8 @@ proc check_effective_target_vect_perm_short { } {\n         verbose \"check_effective_target_vect_perm_short: using cached result\" 2\n     } else {\n         set et_vect_perm_short_saved 0\n-        if { [is-effective-target arm_neon_ok]\n+        if { ([is-effective-target arm_neon_ok]\n+\t      && [is-effective-target arm_little_endian])\n \t     || [istarget aarch64*-*-*]\n \t     || [istarget powerpc*-*-*]\n              || [istarget spu-*-*] } {\n@@ -3175,6 +3177,7 @@ proc check_effective_target_vect_widen_sum_qi_to_hi { } {\n     } else {\n         set et_vect_widen_sum_qi_to_hi_saved 0\n \tif { [check_effective_target_vect_unpack] \n+\t     || [check_effective_target_arm_neon_ok]\n \t     || [istarget ia64-*-*] } {\n             set et_vect_widen_sum_qi_to_hi_saved 1\n \t}\n@@ -3282,7 +3285,9 @@ proc check_effective_target_vect_widen_mult_qi_to_hi_pattern { } {\n     } else {\n         set et_vect_widen_mult_qi_to_hi_pattern_saved 0\n         if { [istarget powerpc*-*-*]\n-              || ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok]) } {\n+              || ([istarget arm*-*-*]\n+\t\t  && [check_effective_target_arm_neon_ok]\n+\t\t  && [check_effective_target_arm_little_endian]) } {\n             set et_vect_widen_mult_qi_to_hi_pattern_saved 1\n         }\n     }\n@@ -3307,7 +3312,9 @@ proc check_effective_target_vect_widen_mult_hi_to_si_pattern { } {\n               || [istarget ia64-*-*]\n               || [istarget i?86-*-*]\n               || [istarget x86_64-*-*]\n-              || ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok]) } {\n+              || ([istarget arm*-*-*]\n+\t\t  && [check_effective_target_arm_neon_ok]\n+\t\t  && [check_effective_target_arm_little_endian]) } {\n             set et_vect_widen_mult_hi_to_si_pattern_saved 1\n         }\n     }\n@@ -3914,7 +3921,9 @@ proc check_effective_target_vect64 { } {\n         verbose \"check_effective_target_vect64: using cached result\" 2\n     } else {\n         set et_vect64_saved 0\n-        if { ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok]) } {\n+        if { ([istarget arm*-*-*]\n+\t      && [check_effective_target_arm_neon_ok]\n+\t      && [check_effective_target_arm_little_endian]) } {\n            set et_vect64_saved 1\n         }\n     }"}]}