{"sha": "164bbf701ff10ff44e272525e8f462ed3ff1cf43", "node_id": "C_kwDOANBUbNoAKDE2NGJiZjcwMWZmMTBmZjQ0ZTI3MjUyNWU4ZjQ2MmVkM2ZmMWNmNDM", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-02T17:47:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-02T17:49:42Z"}, "message": "tree-optimization/103029 - ensure vect loop versioning constraint on PHIs\n\nPHI nodes in vectorizer loop versioning need to maintain the same\norder of PHI arguments to not disturb SLP discovery.  The following\nadds an assertion and mitigation in case loop versioning breaks this\nwhich happens more often after the recent reorg.\n\n2021-11-02  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/103029\n\t* tree-vect-loop-manip.c (vect_loop_versioning): Ensure\n\tthe PHI nodes in the loop maintain their original operand\n\torder.", "tree": {"sha": "44863a3d09e9e8f5ea68165e9088a12a125d49e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44863a3d09e9e8f5ea68165e9088a12a125d49e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/164bbf701ff10ff44e272525e8f462ed3ff1cf43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164bbf701ff10ff44e272525e8f462ed3ff1cf43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/164bbf701ff10ff44e272525e8f462ed3ff1cf43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164bbf701ff10ff44e272525e8f462ed3ff1cf43/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f19791565d7ed31c2a895fc29b772c2c7ed390e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f19791565d7ed31c2a895fc29b772c2c7ed390e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f19791565d7ed31c2a895fc29b772c2c7ed390e8"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "f788deb3d72ccf93ddf48d42b4db4809af52c06b", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164bbf701ff10ff44e272525e8f462ed3ff1cf43/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164bbf701ff10ff44e272525e8f462ed3ff1cf43/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=164bbf701ff10ff44e272525e8f462ed3ff1cf43", "patch": "@@ -3562,12 +3562,29 @@ vect_loop_versioning (loop_vec_info loop_vinfo,\n \t\t\t \"applying loop versioning to outer loop %d\\n\",\n \t\t\t loop_to_version->num);\n \n+      unsigned orig_pe_idx = loop_preheader_edge (loop)->dest_idx;\n+\n       initialize_original_copy_tables ();\n       nloop = loop_version (loop_to_version, cond_expr, &condition_bb,\n \t\t\t    prob, prob.invert (), prob, prob.invert (), true);\n       gcc_assert (nloop);\n       nloop = get_loop_copy (loop);\n \n+      /* For cycle vectorization with SLP we rely on the PHI arguments\n+\t appearing in the same order as the SLP node operands which for the\n+\t loop PHI nodes means the preheader edge dest index needs to remain\n+\t the same for the analyzed loop which also becomes the vectorized one.\n+\t Make it so in case the state after versioning differs by redirecting\n+\t the first edge into the header to the same destination which moves\n+\t it last.  */\n+      if (loop_preheader_edge (loop)->dest_idx != orig_pe_idx)\n+\t{\n+\t  edge e = EDGE_PRED (loop->header, 0);\n+\t  ssa_redirect_edge (e, e->dest);\n+\t  flush_pending_stmts (e);\n+\t}\n+      gcc_assert (loop_preheader_edge (loop)->dest_idx == orig_pe_idx);\n+\n       /* Kill off IFN_LOOP_VECTORIZED_CALL in the copy, nobody will\n          reap those otherwise;  they also refer to the original\n \t loops.  */"}]}