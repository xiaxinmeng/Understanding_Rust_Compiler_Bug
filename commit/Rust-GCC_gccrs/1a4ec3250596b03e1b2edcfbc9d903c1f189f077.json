{"sha": "1a4ec3250596b03e1b2edcfbc9d903c1f189f077", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE0ZWMzMjUwNTk2YjAzZTFiMmVkY2ZiYzlkOTAzYzFmMTg5ZjA3Nw==", "commit": {"author": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2019-11-14T23:37:13Z"}, "committer": {"name": "Kwok Cheung Yeung", "email": "kcy@gcc.gnu.org", "date": "2019-11-14T23:37:13Z"}, "message": "Check suitability of spill register for mode\n\n2019-11-14  Kwok Cheung Yeung  <kcy@codesourcery.com>\n\n\tgcc/\n\t* lra-spills.c (assign_spill_hard_regs): Check that the spill\n\tregister is suitable for the mode.\n\nFrom-SVN: r278267", "tree": {"sha": "e398cece2b071a15efc81d1904e88af445b4bac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e398cece2b071a15efc81d1904e88af445b4bac3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a4ec3250596b03e1b2edcfbc9d903c1f189f077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4ec3250596b03e1b2edcfbc9d903c1f189f077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a4ec3250596b03e1b2edcfbc9d903c1f189f077", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4ec3250596b03e1b2edcfbc9d903c1f189f077/comments", "author": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f674b4a72ad737d04807cd3d6c8270acba2e460b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f674b4a72ad737d04807cd3d6c8270acba2e460b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f674b4a72ad737d04807cd3d6c8270acba2e460b"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "a811edbcc566875c3952d143c493b8c720dbdb04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4ec3250596b03e1b2edcfbc9d903c1f189f077/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4ec3250596b03e1b2edcfbc9d903c1f189f077/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a4ec3250596b03e1b2edcfbc9d903c1f189f077", "patch": "@@ -1,3 +1,8 @@\n+2019-11-14  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* lra-spills.c (assign_spill_hard_regs): Check that the spill\n+\tregister is suitable for the mode.\n+\n 2019-11-14  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* range-op.h (range_operator::fold_range): Return a bool."}, {"sha": "8fbd3a8a2f2ddb215bc380c81854fff77ba79351", "filename": "gcc/lra-spills.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4ec3250596b03e1b2edcfbc9d903c1f189f077/gcc%2Flra-spills.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4ec3250596b03e1b2edcfbc9d903c1f189f077/gcc%2Flra-spills.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-spills.c?ref=1a4ec3250596b03e1b2edcfbc9d903c1f189f077", "patch": "@@ -283,7 +283,8 @@ assign_spill_hard_regs (int *pseudo_regnos, int n)\n       for (k = 0; k < spill_class_size; k++)\n \t{\n \t  hard_regno = ira_class_hard_regs[spill_class][k];\n-\t  if (TEST_HARD_REG_BIT (eliminable_regset, hard_regno))\n+\t  if (TEST_HARD_REG_BIT (eliminable_regset, hard_regno)\n+\t      || !targetm.hard_regno_mode_ok (hard_regno, mode))\n \t    continue;\n \t  if (! overlaps_hard_reg_set_p (conflict_hard_regs, mode, hard_regno))\n \t    break;"}]}