{"sha": "ed4e2a178609194673c81a038034e16832a0a9be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ0ZTJhMTc4NjA5MTk0NjczYzgxYTAzODAzNGUxNjgzMmEwYTliZQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2018-06-27T09:54:40Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2018-06-27T09:54:40Z"}, "message": "[arm] Add support for Arm Cortex-A76\n\nThe Cortex-A76 is an Armv8.2-A processor with dotproduct and FP16 support.\nIt can be paired with the Cortex-A55 and hence the option\n-mcpu/-mtune=cortex-a76.cortex-a55 is also introduced.\n\nBootstrapped and tested on arm-none-linux-gnueabihf.\n\n\t* config/arm/arm-cpus.in (cortex-a76): New entry.\n\t(cortex-a76.cortex-a55): Likewise.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm-tune.md: Likewise.\n\t* config/arm/driver-arm.c (arm_cpu_table): Add Cortex-A76 entry.\n\t* doc/invoke.texi (ARM Options): Document cortex-a76 and\n\tcortex-a76.cortex-a55.\n\nFrom-SVN: r262179", "tree": {"sha": "d1fab69b7931685832d9ff8b37887631bfc3ccc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1fab69b7931685832d9ff8b37887631bfc3ccc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed4e2a178609194673c81a038034e16832a0a9be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4e2a178609194673c81a038034e16832a0a9be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed4e2a178609194673c81a038034e16832a0a9be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4e2a178609194673c81a038034e16832a0a9be/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d89fe63e58fb775fb4aa043e168b5025521d5a47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d89fe63e58fb775fb4aa043e168b5025521d5a47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d89fe63e58fb775fb4aa043e168b5025521d5a47"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "34a0e2507480d918f03a2fecaaad90157f591678", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed4e2a178609194673c81a038034e16832a0a9be", "patch": "@@ -1,3 +1,13 @@\n+2018-06-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm-cpus.in (cortex-a76): New entry.\n+\t(cortex-a76.cortex-a55): Likewise.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Likewise.\n+\t* config/arm/driver-arm.c (arm_cpu_table): Add Cortex-A76 entry.\n+\t* doc/invoke.texi (ARM Options): Document cortex-a76 and\n+\tcortex-a76.cortex-a55.\n+\n 2018-06-27 Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/85769"}, {"sha": "c2dacda3ad3e6c8c39dfca0e1b4e71ed35030feb", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=ed4e2a178609194673c81a038034e16832a0a9be", "patch": "@@ -1341,6 +1341,15 @@ begin cpu cortex-a75\n  costs cortex_a73\n end cpu cortex-a75\n \n+begin cpu cortex-a76\n+ cname cortexa76\n+ tune for cortex-a57\n+ tune flags LDSCHED\n+ architecture armv8.2-a+fp16+dotprod\n+ fpu neon-fp-armv8\n+ option crypto add FP_ARMv8 CRYPTO\n+ costs cortex_a57\n+end cpu cortex-a76\n \n # ARMv8.2 A-profile ARM DynamIQ big.LITTLE implementations\n begin cpu cortex-a75.cortex-a55\n@@ -1353,6 +1362,16 @@ begin cpu cortex-a75.cortex-a55\n  costs cortex_a73\n end cpu cortex-a75.cortex-a55\n \n+begin cpu cortex-a76.cortex-a55\n+ cname cortexa76cortexa55\n+ tune for cortex-a53\n+ tune flags LDSCHED\n+ architecture armv8.2-a+fp16+dotprod\n+ fpu neon-fp-armv8\n+ option crypto add FP_ARMv8 CRYPTO\n+ costs cortex_a57\n+end cpu cortex-a76.cortex-a55\n+\n # V8 M-profile implementations.\n begin cpu cortex-m23\n  cname cortexm23"}, {"sha": "eacee746a39912d04aa03c636f9a95e0e72ce43b", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=ed4e2a178609194673c81a038034e16832a0a9be", "patch": "@@ -279,9 +279,15 @@ Enum(processor_type) String(cortex-a55) Value( TARGET_CPU_cortexa55)\n EnumValue\n Enum(processor_type) String(cortex-a75) Value( TARGET_CPU_cortexa75)\n \n+EnumValue\n+Enum(processor_type) String(cortex-a76) Value( TARGET_CPU_cortexa76)\n+\n EnumValue\n Enum(processor_type) String(cortex-a75.cortex-a55) Value( TARGET_CPU_cortexa75cortexa55)\n \n+EnumValue\n+Enum(processor_type) String(cortex-a76.cortex-a55) Value( TARGET_CPU_cortexa76cortexa55)\n+\n EnumValue\n Enum(processor_type) String(cortex-m23) Value( TARGET_CPU_cortexm23)\n "}, {"sha": "f64c1ef176de6c31659cce35326de8393e9cd886", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=ed4e2a178609194673c81a038034e16832a0a9be", "patch": "@@ -49,6 +49,7 @@\n \tcortexa72,cortexa73,exynosm1,\n \txgene1,cortexa57cortexa53,cortexa72cortexa53,\n \tcortexa73cortexa35,cortexa73cortexa53,cortexa55,\n-\tcortexa75,cortexa75cortexa55,cortexm23,\n-\tcortexm33,cortexr52\"\n+\tcortexa75,cortexa76,cortexa75cortexa55,\n+\tcortexa76cortexa55,cortexm23,cortexm33,\n+\tcortexr52\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "356a5e664b6bb9489f98d3cfe54703f6aadf8ed4", "filename": "gcc/config/arm/driver-arm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fconfig%2Farm%2Fdriver-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fconfig%2Farm%2Fdriver-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fdriver-arm.c?ref=ed4e2a178609194673c81a038034e16832a0a9be", "patch": "@@ -56,6 +56,7 @@ static struct vendor_cpu arm_cpu_table[] = {\n     {\"0xd09\", \"armv8-a+crc\", \"cortex-a73\"},\n     {\"0xd05\", \"armv8.2-a+fp16+dotprod\", \"cortex-a55\"},\n     {\"0xd0a\", \"armv8.2-a+fp16+dotprod\", \"cortex-a75\"},\n+    {\"0xd0b\", \"armv8.2-a+fp16+dotprod\", \"cortex-a76\"},\n     {\"0xc14\", \"armv7-r\", \"cortex-r4\"},\n     {\"0xc15\", \"armv7-r\", \"cortex-r5\"},\n     {\"0xc17\", \"armv7-r\", \"cortex-r7\"},"}, {"sha": "d48f9b4957094ab607b25da9352c3916752bf570", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4e2a178609194673c81a038034e16832a0a9be/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ed4e2a178609194673c81a038034e16832a0a9be", "patch": "@@ -16207,8 +16207,8 @@ Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{cortex-a9}, @samp{cortex-a12}, @samp{cortex-a15}, @samp{cortex-a17},\n @samp{cortex-a32}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a55},\n @samp{cortex-a57}, @samp{cortex-a72}, @samp{cortex-a73}, @samp{cortex-a75},\n-@samp{cortex-r4}, @samp{cortex-r4f}, @samp{cortex-r5}, @samp{cortex-r7},\n-@samp{cortex-r8}, @samp{cortex-r52},\n+@samp{cortex-a76}, @samp{cortex-r4}, @samp{cortex-r4f}, @samp{cortex-r5},\n+@samp{cortex-r7}, @samp{cortex-r8}, @samp{cortex-r52},\n @samp{cortex-m33},\n @samp{cortex-m23},\n @samp{cortex-m7},\n@@ -16232,7 +16232,7 @@ of the code for a big.LITTLE system.  Permissible names are:\n @samp{cortex-a15.cortex-a7}, @samp{cortex-a17.cortex-a7},\n @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53},\n @samp{cortex-a72.cortex-a35}, @samp{cortex-a73.cortex-a53},\n-@samp{cortex-a75.cortex-a55}.\n+@samp{cortex-a75.cortex-a55}, @samp{cortex-a76.cortex-a55}.\n \n @option{-mtune=generic-@var{arch}} specifies that GCC should tune the\n performance for a blend of processors within architecture @var{arch}."}]}