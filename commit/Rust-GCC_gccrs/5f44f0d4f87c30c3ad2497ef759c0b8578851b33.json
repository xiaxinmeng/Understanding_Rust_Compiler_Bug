{"sha": "5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY0NGYwZDRmODdjMzBjM2FkMjQ5N2VmNzU5YzBiODU3ODg1MWIzMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-04-26T09:52:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-04-26T09:52:02Z"}, "message": "[multiple changes]\n\n2012-04-26  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.adb, einfo.ads, sem_res.adb, sem_ch4.adb,\n\tsem_eval.adb: Minor reformatting.\n\n2012-04-26  Thomas Quinot  <quinot@adacore.com>\n\n\t* freeze.adb: Minor change in error wording.\n\n2012-04-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* gnat_ugn.texi: Documentation on dimensional analysis.\n\n2012-04-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb, einfo.ads: Remove synthesized attribute\n\tProper_First_Index along with its associations in various nodes.\n\t(Proper_First_Index): Removed.\n\t* sem_ch4.adb (Analyze_Slice): Alphabetize constants. Add new\n\tlocal variable Index_Type. The index type of a string literal\n\tsubtype is that of the stored low bound.\n\t* sem_eval (Get_Static_Length): Remove the use of Proper_First_Index.\n\t* sem_res.adb (Resolve_Slice): Alphabetize constants. Add\n\tnew local variable Index_Type. The index type of a\n\tstring literal subtype is that of the stored low bound.\n\t(Set_String_Literal_Subtype): Code reformatting.\n\nFrom-SVN: r186868", "tree": {"sha": "3047c618a6473824d907d6a76aa05192d1052f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3047c618a6473824d907d6a76aa05192d1052f75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/comments", "author": null, "committer": null, "parents": [{"sha": "fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df"}], "stats": {"total": 323, "additions": 244, "deletions": 79}, "files": [{"sha": "cf0cac643e0c5415f404029c6d9cd0a9d53beb36", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -1,3 +1,30 @@\n+2012-04-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.adb, einfo.ads, sem_res.adb, sem_ch4.adb,\n+\tsem_eval.adb: Minor reformatting.\n+\n+2012-04-26  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* freeze.adb: Minor change in error wording.\n+\n+2012-04-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat_ugn.texi: Documentation on dimensional analysis.\n+\n+2012-04-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb, einfo.ads: Remove synthesized attribute\n+\tProper_First_Index along with its associations in various nodes.\n+\t(Proper_First_Index): Removed.\n+\t* sem_ch4.adb (Analyze_Slice): Alphabetize constants. Add new\n+\tlocal variable Index_Type. The index type of a string literal\n+\tsubtype is that of the stored low bound.\n+\t* sem_eval (Get_Static_Length): Remove the use of Proper_First_Index.\n+\t* sem_res.adb (Resolve_Slice): Alphabetize constants. Add\n+\tnew local variable Index_Type. The index type of a\n+\tstring literal subtype is that of the stored low bound.\n+\t(Set_String_Literal_Subtype): Code reformatting.\n+\n 2012-04-26  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_aggr.adb: Minor reformatting."}, {"sha": "0f597a1f9410a1c120b802f5c0877d2f2dfd0486", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -6456,26 +6456,6 @@ package body Einfo is\n                 and then Present (Prival_Link (Id)));\n    end Is_Prival;\n \n-   ------------------------\n-   -- Proper_First_Index --\n-   ------------------------\n-\n-   function Proper_First_Index (Id : E) return E is\n-      Typ : Entity_Id;\n-\n-   begin\n-      Typ := Id;\n-\n-      --  The First_Index field is always empty for string literals, use the\n-      --  base type instead.\n-\n-      if Ekind (Typ) = E_String_Literal_Subtype then\n-         Typ := Base_Type (Typ);\n-      end if;\n-\n-      return First_Index (Typ);\n-   end Proper_First_Index;\n-\n    ----------------------------\n    -- Is_Protected_Component --\n    ----------------------------"}, {"sha": "d07be8124cd4e3f8db5122d67f55964edd94a077", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -3393,11 +3393,6 @@ package Einfo is\n --       in the shadow entity, it points to the proper location in which to\n --       restore the private view saved in the shadow.\n \n---    Proper_First_Index (synthesized)\n---       Applies to array types and subtypes. Returns the First_Index of the\n---       type unless it is a string literal. In that case, the First_Index is\n---       obtained from the base type.\n-\n --    Protected_Formal (Node22)\n --       Present in formal parameters (in, in out and out parameters). Used\n --       only for formals of protected operations. References corresponding\n@@ -5031,7 +5026,6 @@ package Einfo is\n    --    Is_Constrained                      (Flag12)\n    --    Next_Index                          (synth)\n    --    Number_Dimensions                   (synth)\n-   --    Proper_First_Index                  (synth)\n    --    (plus type attributes)\n \n    --  E_Block\n@@ -5694,15 +5688,13 @@ package Einfo is\n    --    Is_Constrained                      (Flag12)\n    --    Next_Index                          (synth)\n    --    Number_Dimensions                   (synth)\n-   --    Proper_First_Index                  (synth)\n    --    (plus type attributes)\n \n    --  E_String_Literal_Subtype\n    --    String_Literal_Low_Bound            (Node15)\n    --    String_Literal_Length               (Uint16)\n    --    First_Index                         (Node17)   (always Empty)\n    --    Packed_Array_Type                   (Node23)\n-   --    Proper_First_Index                  (synth)\n    --    (plus type attributes)\n \n    --  E_Subprogram_Body\n@@ -6540,7 +6532,6 @@ package Einfo is\n    function Number_Formals                      (Id : E) return Pos;\n    function Parameter_Mode                      (Id : E) return Formal_Kind;\n    function Primitive_Operations                (Id : E) return L;\n-   function Proper_First_Index                  (Id : E) return E;\n    function Root_Type                           (Id : E) return E;\n    function Safe_Emax_Value                     (Id : E) return U;\n    function Safe_First_Value                    (Id : E) return R;"}, {"sha": "3091080a8d06e174dd4d5f3e6e9809cdef3b8144", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -157,9 +157,9 @@ package body Exp_Util is\n    --    1) controlled objects\n    --    2) library-level tagged types\n    --\n-   --  Flag Lib_Level should be set when the list comes from a construct at\n-   --  the library level. Flag Nested_Constructs should be set when any nested\n-   --  packages declared in L must be processed.\n+   --  Lib_Level is True when the list comes from a construct at the library\n+   --  level, and False otherwise. Nested_Constructs is True when any nested\n+   --  packages declared in L must be processed, and False otherwise.\n \n    -------------------------------------\n    -- Activate_Atomic_Synchronization --\n@@ -7042,8 +7042,10 @@ package body Exp_Util is\n      (N         : Node_Id;\n       Lib_Level : Boolean) return Boolean\n    is\n-      At_Lib_Level : constant Boolean := Lib_Level and then\n-                       Nkind_In (N, N_Package_Body, N_Package_Specification);\n+      At_Lib_Level : constant Boolean :=\n+                       Lib_Level\n+                         and then Nkind_In (N, N_Package_Body,\n+                                               N_Package_Specification);\n       --  N is at the library level if the top-most context is a package and\n       --  the path taken to reach N does not inlcude non-package constructs.\n \n@@ -7059,10 +7061,11 @@ package body Exp_Util is\n             return\n               Requires_Cleanup_Actions (Declarations (N), At_Lib_Level, True)\n                 or else\n-              (Present (Handled_Statement_Sequence (N))\n-                and then\n-              Requires_Cleanup_Actions (Statements\n-                (Handled_Statement_Sequence (N)), At_Lib_Level, True));\n+                  (Present (Handled_Statement_Sequence (N))\n+                    and then\n+                      Requires_Cleanup_Actions\n+                        (Statements (Handled_Statement_Sequence (N)),\n+                         At_Lib_Level, True));\n \n          when N_Package_Specification =>\n             return"}, {"sha": "e25d48e66df4ccdfe4cf1025520f4cbe240a8d39", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -753,8 +753,8 @@ package Exp_Util is\n    --    1) controlled objects\n    --    2) library-level tagged types\n    --\n-   --  The above cases require special actions on scope exit. Flag Lib_Level\n-   --  is used to track whether a construct is at the library level.\n+   --  These cases require special actions on scope exit. The flag Lib_Level\n+   --  is set True if the construct is at library level, and False otherwise.\n \n    function Safe_Unchecked_Type_Conversion (Exp : Node_Id) return Boolean;\n    --  Given the node for an N_Unchecked_Type_Conversion, return True if this"}, {"sha": "a4588bd9de21e782b8ce62dc00230a673b78aa4d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -2144,7 +2144,7 @@ package body Freeze is\n             Error_Msg_Sloc := Sloc (ADC);\n             Error_Msg_N\n               (\"scalar storage order for& specified# inconsistent with \"\n-               & \"its bit order\", Rec);\n+               & \"bit order\", Rec);\n          end if;\n \n          --  Deal with Bit_Order aspect specifying a non-default bit order"}, {"sha": "57cb020fb828b15c249c7fb60d489c99fde7d7b7", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -195,6 +195,7 @@ AdaCore@*\n * Verifying Properties Using gnatcheck::\n * Creating Sample Bodies Using gnatstub::\n * Creating Unit Tests Using gnattest::\n+* Performing Dimensionality Analysis in GNAT::\n * Generating Ada Bindings for C and C++ headers::\n * Other Utility Programs::\n * Running and Debugging Ada Programs::\n@@ -837,6 +838,12 @@ a utility that generates empty but compilable bodies for library units.\n @ref{Creating Unit Tests Using gnattest}, discusses @code{gnattest},\n a utility that generates unit testing templates for library units.\n \n+@item\n+@ref{Performing Dimensionality Analysis in GNAT}, describes the Ada 2012\n+facilities used in GNAT to declare dimensioned objects, and to verify that\n+uses of these objects are consistent with their given physical dimensions\n+(so that meters cannot be assigned to kilograms, and so on).\n+\n @item\n @ref{Generating Ada Bindings for C and C++ headers}, describes how to\n generate automatically Ada bindings from C and C++ headers.\n@@ -18512,6 +18519,152 @@ The tool currently does not support following features:\n \n @end itemize\n \n+@c *********************************\n+@node Performing Dimensionality Analysis in GNAT\n+@chapter Performing Dimensionality Analysis in GNAT\n+@noindent\n+The GNAT compiler now supports dimensionality checking. The user can\n+specify physical units for objects, and the compiler will verify that uses\n+of these objects are compatible with their dimensions, in a fashion that is\n+familiar to engineering practice. The dimensions of algebraic expressions\n+(including powers with static exponents) are computed from their consistuents.\n+\n+This feature depends on Ada 2012 aspect specifications, and is available from\n+version 7.0.1 of GNAT onwards. The GNAT-specific aspect Dimension_System allows\n+the user to define a system of units; the aspect Dimension then allows the user\n+to declare dimensioned quantities within a given system.\n+\n+The simplest way to impose dimensionality checking on a computation is to make\n+use of the package System.Dim.Mks, which is part of the GNAT library. This\n+package defines a floating-point type MKS_Type, for which a sequence of\n+dimension names are specified, together with their conventional abbreviations.\n+The following should be read together with the full specification of the\n+package, in file s-dimmks.ads.\n+\n+@smallexample @c ada\n+   type Mks_Type is new Long_Long_Float\n+     with\n+      Dimension_System => (\n+        (Meter,    'm'),\n+        (Kilogram, \"kg\"),\n+        (Second,   's'),\n+        (Ampere,   'A'),\n+        (Kelvin,   'K'),\n+        (Mole,     \"mol\"),\n+        (Candela,  \"cd\"));\n+@end smallexample\n+\n+@noindent\n+The package then defines a series of subtypes that correspond to these\n+conventional units. For example:\n+@smallexample @c ada\n+   subtype Length is Mks_Type\n+     with\n+      Dimension => ('m',\n+        Meter =>  1,\n+        others => 0);\n+@end smallexample\n+@noindent\n+and similarly for Mass, Time, Electric_Current, Thermodynamic_Temperature,\n+Amount_Of_Substance, and Luminous_Intensity (the standard set of units of\n+the SI system).\n+\n+The package also defines conventional names for values of each unit, for\n+example:\n+\n+@smallexample @c ada\n+   m   : constant Length                    := 1.0;\n+   kg  : constant Mass                      := 1.0;\n+   s   : constant Time                      := 1.0;\n+   A   : constant Electric_Current          := 1.0;\n+@end smallexample\n+\n+@noindent\n+as well as useful multiples of these units:\n+\n+@smallexample @c ada\n+   cm  : constant Length := 1.0E-02;\n+   g   : constant Mass   := 1.0E-03;\n+   min : constant Time   := 60.0;\n+   day : constant TIme   := 60.0 * 24.0 * min;\n+  ...\n+@end smallexample\n+\n+@noindent\n+The user can then define a derived unit by providing the aspect that\n+specifies its dimensions within the MKS system:\n+\n+@smallexample @c ada\n+  subtype Acceleration is Mks_Type\n+    with Dimension => (\"m/sec**2\", 1, 0, -2, others => 0);\n+@end smallexample\n+\n+@noindent\n+Here is a complete example of use:\n+\n+@smallexample @c ada\n+with System.Dim.MKS; use System.Dim.Mks;\n+with System.Dim.Mks_IO; use System.Dim.Mks_IO;\n+with Text_IO; use Text_IO;\n+procedure Free_Fall is\n+  subtype Acceleration is Mks_Type\n+    with Dimension => (\"m/sec**2\", 1, 0, -2, others => 0);\n+  G : constant acceleration := 9.81 * m / (s ** 2);\n+  T : Time := 10.0*s;\n+  Distance : Length;\n+begin\n+  Distance := 0.5 * G * T ** 2;\n+  Put (\"distance travelled in 10 seconds of free fall \");\n+  Put (Distance, Aft => 2, Exp => 0);\n+  Put_Line (\"\");\n+end Free_Fall;\n+@end smallexample\n+\n+@noindent\n+Execution of this program yields:\n+@smallexample\n+distance travelled in 10 seconds of free fall 490.50 m\n+@end smallexample\n+\n+@noindent\n+However, incorrect assignments such as:\n+\n+@smallexample @c ada\n+   Distance := 5.0;\n+   Distance := 5.0 * kg:\n+@end smallexample\n+\n+@noindent\n+are rejected with the following diagnoses:\n+\n+@smallexample\n+   Distance := 5.0;\n+      >>> dimensions mismatch in assignment\n+      >>> left-hand side has dimensions (1, 0, 0, 0, 0, 0, 0)\n+      >>> right-hand side is dimensionless\n+\n+   Distance := 5.0 * kg:\n+      >>> dimensions mismatch in assignment\n+      >>> left-hand side has dimensions  (1, 0, 0, 0, 0, 0, 0)\n+      >>> right-hand side has dimensions (0, 1, 0, 0, 0, 0, 0)\n+@end smallexample\n+\n+@noindent\n+The dimensions of an expression are properly displayed. If we add to the\n+program:\n+\n+@smallexample @c ada\n+      Put (\"Final velocity: \");\n+      Put (G * T, Aft =>2, Exp =>0);\n+      Put_Line (\"\");\n+@end smallexample\n+\n+@noindent\n+then the output includes:\n+@smallexample\n+     Final velocity: 98.10 m.s**(-1)\n+@end smallexample\n+\n @c *********************************\n @node Generating Ada Bindings for C and C++ headers\n @chapter Generating Ada Bindings for C and C++ headers"}, {"sha": "56866e4d824e609accd8c065cbb4a4be6feb8cf5", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -1096,22 +1096,22 @@ package body Prj.Nmsc is\n          Element  : Package_Element;\n \n          procedure Process_Binder (Arrays : Array_Id);\n-         --  Process the associate array attributes of package Binder\n+         --  Process the associated array attributes of package Binder\n \n          procedure Process_Builder (Attributes : Variable_Id);\n          --  Process the simple attributes of package Builder\n \n          procedure Process_Clean  (Arrays : Array_Id);\n-         --  Process the associate array attributes of package Clean\n+         --  Process the associated array attributes of package Clean\n \n          procedure Process_Compiler (Arrays : Array_Id);\n-         --  Process the associate array attributes of package Compiler\n+         --  Process the associated array attributes of package Compiler\n \n          procedure Process_Naming (Attributes : Variable_Id);\n          --  Process the simple attributes of package Naming\n \n          procedure Process_Naming (Arrays : Array_Id);\n-         --  Process the associate array attributes of package Naming\n+         --  Process the associated array attributes of package Naming\n \n          procedure Process_Linker (Attributes : Variable_Id);\n          --  Process the simple attributes of package Linker of a\n@@ -1238,7 +1238,7 @@ package body Prj.Nmsc is\n             List             : String_List_Id;\n \n          begin\n-            --  Process the associative array attribute of package Clean\n+            --  Process the associated array attributes of package Clean\n \n             Current_Array_Id := Arrays;\n             while Current_Array_Id /= No_Array loop\n@@ -1250,8 +1250,9 @@ package body Prj.Nmsc is\n \n                   --  Get the name of the language\n \n-                  Lang_Index := Get_Language_From_Name\n-                    (Project, Get_Name_String (Element.Index));\n+                  Lang_Index :=\n+                    Get_Language_From_Name\n+                      (Project, Get_Name_String (Element.Index));\n \n                   if Lang_Index /= No_Language_Index then\n                      case Current_Array.Name is\n@@ -1279,6 +1280,7 @@ package body Prj.Nmsc is\n                                    From_List => List,\n                                    In_Tree   => Data.Tree);\n                            end if;\n+\n                         when others =>\n                            null;\n                      end case;\n@@ -3291,8 +3293,8 @@ package body Prj.Nmsc is\n       if Project.Library then\n          Support_For_Libraries := Project.Config.Lib_Support;\n \n-         if not Project.Externally_Built and then\n-           Support_For_Libraries = Prj.None\n+         if not Project.Externally_Built\n+           and then Support_For_Libraries = Prj.None\n          then\n             Error_Msg\n               (Data.Flags,\n@@ -3481,8 +3483,8 @@ package body Prj.Nmsc is\n                   end if;\n \n                   if Project.Library_Kind /= Static then\n-                     if not Project.Externally_Built and then\n-                       Support_For_Libraries = Prj.Static_Only\n+                     if not Project.Externally_Built\n+                       and then Support_For_Libraries = Prj.Static_Only\n                      then\n                         Error_Msg\n                           (Data.Flags,"}, {"sha": "c1e386ecbe0451d938c26212656e7e492653827b", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -4440,9 +4440,10 @@ package body Sem_Ch4 is\n    -------------------\n \n    procedure Analyze_Slice (N : Node_Id) is\n-      P          : constant Node_Id := Prefix (N);\n       D          : constant Node_Id := Discrete_Range (N);\n+      P          : constant Node_Id := Prefix (N);\n       Array_Type : Entity_Id;\n+      Index_Type : Entity_Id;\n \n       procedure Analyze_Overloaded_Slice;\n       --  If the prefix is overloaded, select those interpretations that\n@@ -4513,13 +4514,18 @@ package body Sem_Ch4 is\n             Error_Msg_N\n               (\"type is not one-dimensional array in slice prefix\", N);\n \n-         elsif not\n-           Has_Compatible_Type (D, Etype (Proper_First_Index (Array_Type)))\n-         then\n-            Wrong_Type (D, Etype (Proper_First_Index (Array_Type)));\n-\n          else\n-            Set_Etype (N, Array_Type);\n+            if Ekind (Array_Type) = E_String_Literal_Subtype then\n+               Index_Type := Etype (String_Literal_Low_Bound (Array_Type));\n+            else\n+               Index_Type := Etype (First_Index (Array_Type));\n+            end if;\n+\n+            if not Has_Compatible_Type (D, Index_Type) then\n+               Wrong_Type (D, Index_Type);\n+            else\n+               Set_Etype (N, Array_Type);\n+            end if;\n          end if;\n       end if;\n    end Analyze_Slice;"}, {"sha": "27a0f629d20e0e5d567b55ed4bc0a075f06b8d00", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -554,7 +554,7 @@ package body Sem_Eval is\n                if Attribute_Name (N) = Name_First then\n                   return String_Literal_Low_Bound (Xtyp);\n \n-               else         -- Attribute_Name (N) = Name_Last\n+               else\n                   return Make_Integer_Literal (Sloc (N),\n                     Intval => Intval (String_Literal_Low_Bound (Xtyp))\n                                 + String_Literal_Length (Xtyp));\n@@ -2747,7 +2747,7 @@ package body Sem_Eval is\n \n                --  General case\n \n-               T := Etype (Proper_First_Index (Etype (Op)));\n+               T := Etype (First_Index (Etype (Op)));\n \n                --  The simple case, both bounds are known at compile time\n "}, {"sha": "5a3c6a46292a45bcd3c0a328e6087ae932fd7479", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f44f0d4f87c30c3ad2497ef759c0b8578851b33/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=5f44f0d4f87c30c3ad2497ef759c0b8578851b33", "patch": "@@ -8880,10 +8880,10 @@ package body Sem_Res is\n    -------------------\n \n    procedure Resolve_Slice (N : Node_Id; Typ : Entity_Id) is\n-      Name       : constant Node_Id := Prefix (N);\n       Drange     : constant Node_Id := Discrete_Range (N);\n+      Name       : constant Node_Id := Prefix (N);\n       Array_Type : Entity_Id        := Empty;\n-      Index      : Node_Id;\n+      Index_Type : Entity_Id;\n \n    begin\n       if Is_Overloaded (Name) then\n@@ -9003,8 +9003,13 @@ package body Sem_Res is\n       --  necessary. Else resolve the bounds, and apply needed checks.\n \n       if not Is_Entity_Name (Drange) then\n-         Index := Proper_First_Index (Array_Type);\n-         Resolve (Drange, Base_Type (Etype (Index)));\n+         if Ekind (Array_Type) = E_String_Literal_Subtype then\n+            Index_Type := Etype (String_Literal_Low_Bound (Array_Type));\n+         else\n+            Index_Type := Etype (First_Index (Array_Type));\n+         end if;\n+\n+         Resolve (Drange, Base_Type (Index_Type));\n \n          if Nkind (Drange) = N_Range then\n \n@@ -9026,7 +9031,7 @@ package body Sem_Res is\n                   and then Entity (Selector_Name (Prefix (N))) =\n                                          RTE_Record_Component (RE_Prims_Ptr))\n             then\n-               Apply_Range_Check (Drange, Etype (Index));\n+               Apply_Range_Check (Drange, Index_Type);\n             end if;\n          end if;\n       end if;\n@@ -10119,26 +10124,24 @@ package body Sem_Res is\n       Set_Is_Constrained (Subtype_Id);\n       Set_Etype          (N, Subtype_Id);\n \n-      if Is_OK_Static_Expression (Low_Bound) then\n-\n       --  The low bound is set from the low bound of the corresponding index\n       --  type. Note that we do not store the high bound in the string literal\n       --  subtype, but it can be deduced if necessary from the length and the\n       --  low bound.\n \n+      if Is_OK_Static_Expression (Low_Bound) then\n          Set_String_Literal_Low_Bound (Subtype_Id, Low_Bound);\n \n-      else\n-         --  If the lower bound is not static we create a range for the string\n-         --  literal, using the index type and the known length of the literal.\n-         --  The index type is not necessarily Positive, so the upper bound is\n-         --  computed as  T'Val (T'Pos (Low_Bound) + L - 1)\n+      --  If the lower bound is not static we create a range for the string\n+      --  literal, using the index type and the known length of the literal.\n+      --  The index type is not necessarily Positive, so the upper bound is\n+      --  computed as T'Val (T'Pos (Low_Bound) + L - 1).\n \n+      else\n          declare\n-            Index_List    : constant List_Id    := New_List;\n-            Index_Type    : constant Entity_Id := Etype (First_Index (Typ));\n-\n-            High_Bound : constant Node_Id :=\n+            Index_List : constant List_Id   := New_List;\n+            Index_Type : constant Entity_Id := Etype (First_Index (Typ));\n+            High_Bound : constant Node_Id   :=\n                            Make_Attribute_Reference (Loc,\n                              Attribute_Name => Name_Val,\n                              Prefix         =>\n@@ -10157,9 +10160,9 @@ package body Sem_Res is\n                                      String_Length (Strval (N)) - 1))));\n \n             Array_Subtype : Entity_Id;\n-            Index_Subtype : Entity_Id;\n             Drange        : Node_Id;\n             Index         : Node_Id;\n+            Index_Subtype : Entity_Id;\n \n          begin\n             if Is_Integer_Type (Index_Type) then\n@@ -10214,7 +10217,7 @@ package body Sem_Res is\n             Rewrite (N,\n               Make_Unchecked_Type_Conversion (Loc,\n                 Subtype_Mark => New_Occurrence_Of (Array_Subtype, Loc),\n-                Expression => Relocate_Node (N)));\n+                Expression   => Relocate_Node (N)));\n             Set_Etype (N, Array_Subtype);\n          end;\n       end if;"}]}