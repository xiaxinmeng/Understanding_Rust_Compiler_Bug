{"sha": "74fa958ec75a3573b763ffb154dfd4863eb14411", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRmYTk1OGVjNzVhMzU3M2I3NjNmZmIxNTRkZmQ0ODYzZWIxNDQxMQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-07-04T15:27:05Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-07-04T15:27:05Z"}, "message": "FirstThread.java, [...]: Removed.\n\n2004-07-04  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/gcj/runtime/FirstThread.java,\n\tgnu/gcj/runtime/natFirstThread.cc: Removed.\n\t* gnu/java/lang/MainThread.java,\n\tgnu/java/lang/natMainThread.cc: New files.\n\t* prims.cc (_Jv_RunMain): Use MainThread instead of FirstThread.\n\t* Makefile.am: Added new files and removed deleted ones.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r84085", "tree": {"sha": "fc4860ea95619b77ee5e79ab16d7b41b330c9e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc4860ea95619b77ee5e79ab16d7b41b330c9e59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74fa958ec75a3573b763ffb154dfd4863eb14411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74fa958ec75a3573b763ffb154dfd4863eb14411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74fa958ec75a3573b763ffb154dfd4863eb14411", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74fa958ec75a3573b763ffb154dfd4863eb14411/comments", "author": null, "committer": null, "parents": [{"sha": "c516c1ff9be00d5193f3928482e7cec720d3d717", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c516c1ff9be00d5193f3928482e7cec720d3d717", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c516c1ff9be00d5193f3928482e7cec720d3d717"}], "stats": {"total": 280, "additions": 160, "deletions": 120}, "files": [{"sha": "17c097b307ff200794eec51dbb917e21619e3a3a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=74fa958ec75a3573b763ffb154dfd4863eb14411", "patch": "@@ -1,3 +1,13 @@\n+2004-07-04  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/gcj/runtime/FirstThread.java,\n+\tgnu/gcj/runtime/natFirstThread.cc: Removed.\n+\t* gnu/java/lang/MainThread.java,\n+\tgnu/java/lang/natMainThread.cc: New files.\n+\t* prims.cc (_Jv_RunMain): Use MainThread instead of FirstThread.\n+\t* Makefile.am: Added new files and removed deleted ones.\n+\t* Makefile.in: Regenerated.\n+\n 2004-07-03  Mark Wielaard  <mark@klomp.org>\n             Anthony Green  <green@redhat.com>\n "}, {"sha": "9a2d8f4b8e15e4e324ffb8117afc7ca488eca6e2", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=74fa958ec75a3573b763ffb154dfd4863eb14411", "patch": "@@ -2266,7 +2266,6 @@ gnu/gcj/io/MimeTypes.java \\\n gnu/gcj/io/SimpleSHSStream.java\t\\\n gnu/gcj/runtime/FileDeleter.java \\\n gnu/gcj/runtime/FinalizerThread.java \\\n-gnu/gcj/runtime/FirstThread.java \\\n gnu/gcj/runtime/JNIWeakRef.java \\\n gnu/gcj/runtime/MethodRef.java \\\n gnu/gcj/runtime/NameFinder.java \\\n@@ -2283,6 +2282,7 @@ gnu/java/io/ObjectIdentityWrapper.java \\\n gnu/java/lang/ArrayHelper.java \\\n gnu/java/lang/ClassHelper.java \\\n gnu/java/lang/CharData.java \\\n+gnu/java/lang/MainThread.java \\\n gnu/java/lang/reflect/TypeSignature.java \\\n gnu/java/locale/Calendar.java \\\n gnu/java/locale/Calendar_de.java \\\n@@ -2939,13 +2939,13 @@ gnu/gcj/convert/natOutput_SJIS.cc \\\n gnu/gcj/io/natSimpleSHSStream.cc \\\n gnu/gcj/io/shs.cc \\\n gnu/gcj/runtime/natFinalizerThread.cc \\\n-gnu/gcj/runtime/natFirstThread.cc \\\n gnu/gcj/runtime/natNameFinder.cc \\\n gnu/gcj/runtime/natSharedLibLoader.cc \\\n gnu/gcj/runtime/natStackTrace.cc \\\n gnu/gcj/runtime/natStringBuffer.cc \\\n gnu/gcj/runtime/natVMClassLoader.cc \\\n gnu/java/awt/natEmbeddedWindow.cc \\\n+gnu/java/lang/natMainThread.cc \\\n gnu/java/net/natPlainDatagramSocketImpl.cc \\\n gnu/java/net/natPlainSocketImpl.cc \\\n gnu/java/net/protocol/core/natCoreInputStream.cc \\"}, {"sha": "894c853ac5e77f4362bc7cb8c37160278d63d8d6", "filename": "libjava/Makefile.in", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=74fa958ec75a3573b763ffb154dfd4863eb14411", "patch": "@@ -1938,7 +1938,6 @@ gnu/gcj/io/MimeTypes.java \\\n gnu/gcj/io/SimpleSHSStream.java\t\\\n gnu/gcj/runtime/FileDeleter.java \\\n gnu/gcj/runtime/FinalizerThread.java \\\n-gnu/gcj/runtime/FirstThread.java \\\n gnu/gcj/runtime/JNIWeakRef.java \\\n gnu/gcj/runtime/MethodRef.java \\\n gnu/gcj/runtime/NameFinder.java \\\n@@ -1955,6 +1954,7 @@ gnu/java/io/ObjectIdentityWrapper.java \\\n gnu/java/lang/ArrayHelper.java \\\n gnu/java/lang/ClassHelper.java \\\n gnu/java/lang/CharData.java \\\n+gnu/java/lang/MainThread.java \\\n gnu/java/lang/reflect/TypeSignature.java \\\n gnu/java/locale/Calendar.java \\\n gnu/java/locale/Calendar_de.java \\\n@@ -2610,13 +2610,13 @@ gnu/gcj/convert/natOutput_SJIS.cc \\\n gnu/gcj/io/natSimpleSHSStream.cc \\\n gnu/gcj/io/shs.cc \\\n gnu/gcj/runtime/natFinalizerThread.cc \\\n-gnu/gcj/runtime/natFirstThread.cc \\\n gnu/gcj/runtime/natNameFinder.cc \\\n gnu/gcj/runtime/natSharedLibLoader.cc \\\n gnu/gcj/runtime/natStackTrace.cc \\\n gnu/gcj/runtime/natStringBuffer.cc \\\n gnu/gcj/runtime/natVMClassLoader.cc \\\n gnu/java/awt/natEmbeddedWindow.cc \\\n+gnu/java/lang/natMainThread.cc \\\n gnu/java/net/natPlainDatagramSocketImpl.cc \\\n gnu/java/net/natPlainSocketImpl.cc \\\n gnu/java/net/protocol/core/natCoreInputStream.cc \\\n@@ -2794,10 +2794,10 @@ gnu/gcj/convert/natIconv.lo gnu/gcj/convert/natInput_EUCJIS.lo \\\n gnu/gcj/convert/natInput_SJIS.lo gnu/gcj/convert/natOutput_EUCJIS.lo \\\n gnu/gcj/convert/natOutput_SJIS.lo gnu/gcj/io/natSimpleSHSStream.lo \\\n gnu/gcj/io/shs.lo gnu/gcj/runtime/natFinalizerThread.lo \\\n-gnu/gcj/runtime/natFirstThread.lo gnu/gcj/runtime/natNameFinder.lo \\\n-gnu/gcj/runtime/natSharedLibLoader.lo gnu/gcj/runtime/natStackTrace.lo \\\n-gnu/gcj/runtime/natStringBuffer.lo gnu/gcj/runtime/natVMClassLoader.lo \\\n-gnu/java/awt/natEmbeddedWindow.lo \\\n+gnu/gcj/runtime/natNameFinder.lo gnu/gcj/runtime/natSharedLibLoader.lo \\\n+gnu/gcj/runtime/natStackTrace.lo gnu/gcj/runtime/natStringBuffer.lo \\\n+gnu/gcj/runtime/natVMClassLoader.lo gnu/java/awt/natEmbeddedWindow.lo \\\n+gnu/java/lang/natMainThread.lo \\\n gnu/java/net/natPlainDatagramSocketImpl.lo \\\n gnu/java/net/natPlainSocketImpl.lo \\\n gnu/java/net/protocol/core/natCoreInputStream.lo \\\n@@ -3115,14 +3115,13 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/io/natSimpleSHSStream.P .deps/gnu/gcj/io/shs.P \\\n .deps/gnu/gcj/natCore.P .deps/gnu/gcj/runtime/FileDeleter.P \\\n .deps/gnu/gcj/runtime/FinalizerThread.P \\\n-.deps/gnu/gcj/runtime/FirstThread.P .deps/gnu/gcj/runtime/JNIWeakRef.P \\\n-.deps/gnu/gcj/runtime/MethodRef.P .deps/gnu/gcj/runtime/NameFinder.P \\\n+.deps/gnu/gcj/runtime/JNIWeakRef.P .deps/gnu/gcj/runtime/MethodRef.P \\\n+.deps/gnu/gcj/runtime/NameFinder.P \\\n .deps/gnu/gcj/runtime/SharedLibHelper.P \\\n .deps/gnu/gcj/runtime/SharedLibLoader.P \\\n .deps/gnu/gcj/runtime/StackTrace.P .deps/gnu/gcj/runtime/StringBuffer.P \\\n .deps/gnu/gcj/runtime/VMClassLoader.P \\\n .deps/gnu/gcj/runtime/natFinalizerThread.P \\\n-.deps/gnu/gcj/runtime/natFirstThread.P \\\n .deps/gnu/gcj/runtime/natNameFinder.P \\\n .deps/gnu/gcj/runtime/natSharedLibLoader.P \\\n .deps/gnu/gcj/runtime/natStackTrace.P \\\n@@ -3228,7 +3227,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/io/NullOutputStream.P \\\n .deps/gnu/java/io/ObjectIdentityWrapper.P \\\n .deps/gnu/java/lang/ArrayHelper.P .deps/gnu/java/lang/CharData.P \\\n-.deps/gnu/java/lang/ClassHelper.P \\\n+.deps/gnu/java/lang/ClassHelper.P .deps/gnu/java/lang/MainThread.P \\\n+.deps/gnu/java/lang/natMainThread.P \\\n .deps/gnu/java/lang/reflect/TypeSignature.P \\\n .deps/gnu/java/locale/Calendar.P .deps/gnu/java/locale/Calendar_de.P \\\n .deps/gnu/java/locale/Calendar_en.P .deps/gnu/java/locale/Calendar_nl.P \\"}, {"sha": "9d4b435bba2f72e5a23f655349d2159cc949ad37", "filename": "libjava/gnu/gcj/runtime/FirstThread.java", "status": "removed", "additions": 0, "deletions": 98, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c516c1ff9be00d5193f3928482e7cec720d3d717/libjava%2Fgnu%2Fgcj%2Fruntime%2FFirstThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c516c1ff9be00d5193f3928482e7cec720d3d717/libjava%2Fgnu%2Fgcj%2Fruntime%2FFirstThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FFirstThread.java?ref=c516c1ff9be00d5193f3928482e7cec720d3d717", "patch": "@@ -1,98 +0,0 @@\n-// FirstThread.java - Implementation of very first thread.\n-\n-/* Copyright (C) 1998, 1999, 2000, 2001, 2003  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n-\n-package gnu.gcj.runtime;\n-\n-import java.util.jar.*;\n-\n-/**\n- * @author Tom Tromey <tromey@cygnus.com>\n- * @date August 24, 1998 \n- */\n-\n-final class FirstThread extends Thread\n-{\n-  public FirstThread (Class k, String[] args)\n-  {\n-    super (null, null, \"main\");\n-    klass = k;\n-    this.args = args;\n-  }\n-\n-  public FirstThread (String class_name, String[] args, boolean is_jar)\n-  {\n-    super (null, null, \"main\");\n-    klass_name = class_name;\n-    this.args = args;\n-    this.is_jar = is_jar;\n-  }\n-\n-  public void run()\n-  {\n-    if (is_jar)\n-      klass_name = getMain(klass_name);\n-\n-    if (klass == null)\n-      {\n-        try\n-\t  {\n-\t    klass = Class.forName(klass_name);\n-\t  }\n-\tcatch (ClassNotFoundException x)\n-\t  {\n-\t    throw new NoClassDefFoundError(klass_name);\n-\t  }\n-      }\n-\n-    call_main();\n-  }\n-\n-  private String getMain (String name)\n-  {\n-    String mainName = null;\n-    try\n-      {\n-\tJarFile j = new JarFile(name);\n-\tAttributes a = j.getManifest().getMainAttributes();\n-\tmainName = a.getValue(Attributes.Name.MAIN_CLASS);\n-      }\n-    catch (Exception e)\n-      {\n-\t// Ignore.\n-      }\n-\n-    if (mainName == null)\n-      {\n-\tSystem.err.println(\"Failed to load Main-Class manifest attribute from \"\n-\t\t\t   + name);\n-\tSystem.exit(1);\n-      }\n-    return mainName;\n-  }\n-\n-  private native void call_main ();\n-\n-  // Private data.\n-  private Class klass;\n-  private String klass_name;\n-  private Object args;\n-  private boolean is_jar;\n-\n-  // If the user links statically then we need to ensure that these\n-  // classes are linked in.  Otherwise bootstrapping fails.  These\n-  // classes are only referred to via Class.forName(), so we add an\n-  // explicit mention of them here.\n-  static final Class Kcert     = java.security.cert.Certificate.class;\n-  static final Class Kfile     = gnu.java.net.protocol.file.Handler.class;\n-  static final Class Khttp     = gnu.java.net.protocol.http.Handler.class;\n-  static final Class Kjar      = gnu.java.net.protocol.jar.Handler.class;\n-  static final Class Klocale   = gnu.java.locale.LocaleInformation.class;\n-  static final Class Kcalendar = gnu.java.locale.Calendar.class;\n-}"}, {"sha": "61751b2406933594df0c006f54a9e094b7dd40b8", "filename": "libjava/gnu/java/lang/MainThread.java", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2Fgnu%2Fjava%2Flang%2FMainThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2Fgnu%2Fjava%2Flang%2FMainThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Flang%2FMainThread.java?ref=74fa958ec75a3573b763ffb154dfd4863eb14411", "patch": "@@ -0,0 +1,128 @@\n+/* gnu.java.lang.MainThread\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.lang;\n+\n+import java.util.jar.*;\n+\n+/**\n+ * MainThread is a Thread which uses the main() method of some class.\n+ *\n+ * @author John Keiser\n+ * @author Tom Tromey (tromey@redhat.com)\n+ */\n+final class MainThread extends Thread\n+{\n+  // If the user links statically then we need to ensure that these\n+  // classes are linked in.  Otherwise bootstrapping fails.  These\n+  // classes are only referred to via Class.forName(), so we add an\n+  // explicit mention of them here.\n+  static final Class Kcert     = java.security.cert.Certificate.class;\n+  static final Class Kfile     = gnu.java.net.protocol.file.Handler.class;\n+  static final Class Khttp     = gnu.java.net.protocol.http.Handler.class;\n+  static final Class Kjar      = gnu.java.net.protocol.jar.Handler.class;\n+  static final Class Klocale   = gnu.java.locale.LocaleInformation.class;\n+  static final Class Kcalendar = gnu.java.locale.Calendar.class;\n+\n+  // Private data.\n+  private Class klass;\n+  private String klass_name;\n+  private Object args;\n+  private boolean is_jar;\n+\n+  public MainThread(Class k, String[] args)\n+  {\n+    super(null, null, \"main\");\n+    klass = k;\n+    this.args = args;\n+  }\n+\n+  public MainThread(String classname, String[] args, boolean is_jar)\n+  {\n+    super (null, null, \"main\");\n+    klass_name = classname;\n+    this.args = args;\n+    this.is_jar = is_jar;\n+  }\n+\n+  public void run()\n+  {\n+    if (is_jar)\n+      klass_name = getMain(klass_name);\n+\n+    if (klass == null)\n+      {\n+        try\n+\t  {\n+\t    klass = Class.forName(klass_name);\n+\t  }\n+\tcatch (ClassNotFoundException x)\n+\t  {\n+\t    throw new NoClassDefFoundError(klass_name);\n+\t  }\n+      }\n+\n+    call_main();\n+  }\n+\n+  private String getMain(String name)\n+  {\n+    String mainName = null;\n+    try\n+      {\n+\tJarFile j = new JarFile(name);\n+\tAttributes a = j.getManifest().getMainAttributes();\n+\tmainName = a.getValue(Attributes.Name.MAIN_CLASS);\n+      }\n+    catch (Exception e)\n+      {\n+\t// Ignore.\n+      }\n+\n+    if (mainName == null)\n+      {\n+\tSystem.err.println(\"Failed to load Main-Class manifest attribute from \"\n+\t\t\t   + name);\n+\tSystem.exit(1);\n+      }\n+    return mainName;\n+  }\n+\n+  private native void call_main();\n+}"}, {"sha": "7e8e4223dfece1e6be735ad5b1419f309524ce13", "filename": "libjava/gnu/java/lang/natMainThread.cc", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2Fgnu%2Fjava%2Flang%2FnatMainThread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2Fgnu%2Fjava%2Flang%2FnatMainThread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Flang%2FnatMainThread.cc?ref=74fa958ec75a3573b763ffb154dfd4863eb14411", "patch": "@@ -1,4 +1,4 @@\n-// natFirstThread.cc - Implementation of FirstThread native methods.\n+// natMainThread.cc - Implementation of MainThread native methods.\n \n /* Copyright (C) 1998, 1999, 2000, 2001, 2003  Free Software Foundation\n \n@@ -16,12 +16,12 @@ details.  */\n #include <gcj/cni.h>\n #include <jvm.h>\n \n-#include <gnu/gcj/runtime/FirstThread.h>\n+#include <gnu/java/lang/MainThread.h>\n \n typedef void main_func (jobject);\n \n void\n-gnu::gcj::runtime::FirstThread::call_main (void)\n+gnu::java::lang::MainThread::call_main (void)\n {\n   Utf8Const* main_signature = _Jv_makeUtf8Const (\"([Ljava.lang.String;)V\", 22);\n   Utf8Const* main_name = _Jv_makeUtf8Const (\"main\", 4);\n@@ -33,9 +33,9 @@ gnu::gcj::runtime::FirstThread::call_main (void)\n   const char *msg = NULL;\n   if (meth == NULL)\n     msg = \"no suitable method `main' in class\";\n-  else if (! java::lang::reflect::Modifier::isStatic(meth->accflags))\n+  else if (! ::java::lang::reflect::Modifier::isStatic(meth->accflags))\n     msg = \"`main' must be static\";\n-  else if (! java::lang::reflect::Modifier::isPublic(meth->accflags))\n+  else if (! ::java::lang::reflect::Modifier::isPublic(meth->accflags))\n     msg =  \"`main' must be public\";\n   if (msg != NULL)\n     {", "previous_filename": "libjava/gnu/gcj/runtime/natFirstThread.cc"}, {"sha": "93db746fc1eefaa450407e4bfdeb4406400fd119", "filename": "libjava/prims.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fa958ec75a3573b763ffb154dfd4863eb14411/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=74fa958ec75a3573b763ffb154dfd4863eb14411", "patch": "@@ -60,7 +60,7 @@ details.  */\n #include <java/lang/VirtualMachineError.h>\n #include <gnu/gcj/runtime/VMClassLoader.h>\n #include <gnu/gcj/runtime/FinalizerThread.h>\n-#include <gnu/gcj/runtime/FirstThread.h>\n+#include <gnu/java/lang/MainThread.h>\n \n #ifdef USE_LTDL\n #include <ltdl.h>\n@@ -1049,12 +1049,12 @@ _Jv_RunMain (jclass klass, const char *name, int argc, const char **argv,\n       arg_vec = JvConvertArgv (argc - 1, argv + 1);\n #endif\n \n-      using namespace gnu::gcj::runtime;\n+      using namespace gnu::java::lang;\n       if (klass)\n-\tmain_thread = new FirstThread (klass, arg_vec);\n+\tmain_thread = new MainThread (klass, arg_vec);\n       else\n-\tmain_thread = new FirstThread (JvNewStringLatin1 (name),\n-\t\t\t\t       arg_vec, is_jar);\n+\tmain_thread = new MainThread (JvNewStringLatin1 (name),\n+\t\t\t\t      arg_vec, is_jar);\n     }\n   catch (java::lang::Throwable *t)\n     {"}]}