{"sha": "ca3e4a2f2dba408a1706736ff1ec9cb8942edb38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EzZTRhMmYyZGJhNDA4YTE3MDY3MzZmZjFlYzljYjg5NDJlZGIzOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-18T00:49:34Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-18T00:49:34Z"}, "message": "(find_reloads_address): Redo last change: copy the mem\nin the same way it's usually done.\n\nFrom-SVN: r2503", "tree": {"sha": "db762797e3a7a47d9d0279d8dd5363b25947b535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db762797e3a7a47d9d0279d8dd5363b25947b535"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca3e4a2f2dba408a1706736ff1ec9cb8942edb38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca3e4a2f2dba408a1706736ff1ec9cb8942edb38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca3e4a2f2dba408a1706736ff1ec9cb8942edb38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca3e4a2f2dba408a1706736ff1ec9cb8942edb38/comments", "author": null, "committer": null, "parents": [{"sha": "4006fe4f1b0fcddfbae1ef7f6ab096266f94a961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4006fe4f1b0fcddfbae1ef7f6ab096266f94a961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4006fe4f1b0fcddfbae1ef7f6ab096266f94a961"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "f5afa5fc566bed104fbc87a97a2383e541c4185d", "filename": "gcc/reload.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca3e4a2f2dba408a1706736ff1ec9cb8942edb38/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca3e4a2f2dba408a1706736ff1ec9cb8942edb38/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=ca3e4a2f2dba408a1706736ff1ec9cb8942edb38", "patch": "@@ -3633,7 +3633,13 @@ find_reloads_address (mode, memrefloc, ad, loc, operand, ind_levels)\n       /* If tem was changed, then we must create a new memory reference to\n \t hold it and store it back into memrefloc.  */\n       if (tem != ad && memrefloc)\n-\t*memrefloc = gen_rtx (MEM, GET_MODE (*memrefloc), tem);\n+\t{\n+\t  rtx oldref = *memrefloc;\n+\t  *memrefloc = copy_rtx (*memrefloc);\n+\t  loc = &XEXP (*memrefloc, 0);\n+\t  if (operand == oldref)\n+\t    operand = *memrefloc;\n+\t}\n \n       /* Check similar cases as for indirect addresses as above except\n \t that we can allow pseudos and a MEM since they should have been"}]}