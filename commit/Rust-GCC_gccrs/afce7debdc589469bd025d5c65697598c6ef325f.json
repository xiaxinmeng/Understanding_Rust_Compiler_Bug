{"sha": "afce7debdc589469bd025d5c65697598c6ef325f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjZTdkZWJkYzU4OTQ2OWJkMDI1ZDVjNjU2OTc1OThjNmVmMzI1Zg==", "commit": {"author": {"name": "Tony Reix", "email": "tony.reix@atos.net", "date": "2017-07-28T18:52:13Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-07-28T18:52:13Z"}, "message": "* xcoff.c: Don't leak a file descriptor if an archive is malformed.\n\nFrom-SVN: r250684", "tree": {"sha": "18d647a6aca3006653df48d0d43c1e7bbadd21a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18d647a6aca3006653df48d0d43c1e7bbadd21a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afce7debdc589469bd025d5c65697598c6ef325f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afce7debdc589469bd025d5c65697598c6ef325f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afce7debdc589469bd025d5c65697598c6ef325f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afce7debdc589469bd025d5c65697598c6ef325f/comments", "author": {"login": "trex58", "id": 5690106, "node_id": "MDQ6VXNlcjU2OTAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5690106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trex58", "html_url": "https://github.com/trex58", "followers_url": "https://api.github.com/users/trex58/followers", "following_url": "https://api.github.com/users/trex58/following{/other_user}", "gists_url": "https://api.github.com/users/trex58/gists{/gist_id}", "starred_url": "https://api.github.com/users/trex58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trex58/subscriptions", "organizations_url": "https://api.github.com/users/trex58/orgs", "repos_url": "https://api.github.com/users/trex58/repos", "events_url": "https://api.github.com/users/trex58/events{/privacy}", "received_events_url": "https://api.github.com/users/trex58/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9761988fc78d16fe36fbb7f000c6b55e7fa83787", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9761988fc78d16fe36fbb7f000c6b55e7fa83787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9761988fc78d16fe36fbb7f000c6b55e7fa83787"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "313a4c61855e9b354178ef389c49d0c3335a81fc", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afce7debdc589469bd025d5c65697598c6ef325f/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afce7debdc589469bd025d5c65697598c6ef325f/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=afce7debdc589469bd025d5c65697598c6ef325f", "patch": "@@ -1,3 +1,7 @@\n+2017-07-28  Tony Reix  <tony.reix@atos.net>\n+\n+\t* xcoff.c: Don't leak a file descriptor if an archive is malformed.\n+\n 2017-07-28  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* fileline.c (fileline_initialize): Print pid_t as long."}, {"sha": "2faa9fdfa05b13ec1728eb9f8e04bb182fcd1289", "filename": "libbacktrace/xcoff.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afce7debdc589469bd025d5c65697598c6ef325f/libbacktrace%2Fxcoff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afce7debdc589469bd025d5c65697598c6ef325f/libbacktrace%2Fxcoff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fxcoff.c?ref=afce7debdc589469bd025d5c65697598c6ef325f", "patch": "@@ -1288,28 +1288,28 @@ xcoff_armem_add (struct backtrace_state *state, int descriptor,\n \n   if (!backtrace_get_view (state, descriptor, 0, sizeof (b_ar_fl_hdr),\n \t\t\t   error_callback, data, &view))\n-    return 0;\n+    goto fail;\n \n   memcpy (&fl_hdr, view.data, sizeof (b_ar_fl_hdr));\n \n   backtrace_release_view (state, &view, error_callback, data);\n \n   if (memcmp (fl_hdr.fl_magic, AIAMAGBIG, 8) != 0)\n-    return 0;\n+    goto fail;\n \n   memlen = strlen (member);\n \n   /* Read offset of first archive member.  */\n   if (!xcoff_parse_decimal (fl_hdr.fl_fstmoff, sizeof fl_hdr.fl_fstmoff, &off))\n-    return 0;\n+    goto fail;\n   while (off != 0)\n     {\n       /* Map archive member header and member name.  */\n \n       if (!backtrace_get_view (state, descriptor, off,\n \t\t\t       sizeof (b_ar_hdr) + memlen,\n \t\t\t       error_callback, data, &view))\n-\treturn 0;\n+\tbreak;\n \n       ar_hdr = (const b_ar_hdr *) view.data;\n \n@@ -1345,6 +1345,7 @@ xcoff_armem_add (struct backtrace_state *state, int descriptor,\n       backtrace_release_view (state, &view, error_callback, data);\n     }\n \n+ fail:\n   /* No matching member found.  */\n   backtrace_close (descriptor, error_callback, data);\n   return 0;"}]}