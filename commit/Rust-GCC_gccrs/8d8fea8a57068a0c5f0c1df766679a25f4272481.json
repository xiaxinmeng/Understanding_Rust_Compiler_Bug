{"sha": "8d8fea8a57068a0c5f0c1df766679a25f4272481", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ4ZmVhOGE1NzA2OGEwYzVmMGMxZGY3NjY2NzlhMjVmNDI3MjQ4MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-11-29T02:22:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-11-30T20:07:39Z"}, "message": "compiler: always use int context for index values\n\nFor golang/go#14844\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/273889", "tree": {"sha": "47eb514d19b2127fe8219778cbc704e2931908da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47eb514d19b2127fe8219778cbc704e2931908da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d8fea8a57068a0c5f0c1df766679a25f4272481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8fea8a57068a0c5f0c1df766679a25f4272481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d8fea8a57068a0c5f0c1df766679a25f4272481", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8fea8a57068a0c5f0c1df766679a25f4272481/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38f10841817a9fee28ee97c7115b6f4d24f5245d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f10841817a9fee28ee97c7115b6f4d24f5245d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38f10841817a9fee28ee97c7115b6f4d24f5245d"}], "stats": {"total": 51, "additions": 18, "deletions": 33}, "files": [{"sha": "698969fc8c8e28b4ba97d943d06ff63633250076", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d8fea8a57068a0c5f0c1df766679a25f4272481/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d8fea8a57068a0c5f0c1df766679a25f4272481/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=8d8fea8a57068a0c5f0c1df766679a25f4272481", "patch": "@@ -1,4 +1,4 @@\n-68b1c7659a6b25d537a4ff3365ab070fa6215b0b\n+af683486b4de5503b2b6d9ae974a2ab1eeb92290\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "d1546300d0e283252bd7f3e63ce27f0292e11e16", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 5, "deletions": 26, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d8fea8a57068a0c5f0c1df766679a25f4272481/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d8fea8a57068a0c5f0c1df766679a25f4272481/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=8d8fea8a57068a0c5f0c1df766679a25f4272481", "patch": "@@ -12802,24 +12802,11 @@ Array_index_expression::do_determine_type(const Type_context*)\n   this->array_->determine_type_no_context();\n \n   Type_context index_context(Type::lookup_integer_type(\"int\"), false);\n-  if (this->start_->is_constant())\n-    this->start_->determine_type(&index_context);\n-  else\n-    this->start_->determine_type_no_context();\n+  this->start_->determine_type(&index_context);\n   if (this->end_ != NULL)\n-    {\n-      if (this->end_->is_constant())\n-        this->end_->determine_type(&index_context);\n-      else\n-        this->end_->determine_type_no_context();\n-    }\n+    this->end_->determine_type(&index_context);\n   if (this->cap_ != NULL)\n-    {\n-      if (this->cap_->is_constant())\n-        this->cap_->determine_type(&index_context);\n-      else\n-        this->cap_->determine_type_no_context();\n-    }\n+    this->cap_->determine_type(&index_context);\n }\n \n // Check types of an array index.\n@@ -13488,17 +13475,9 @@ String_index_expression::do_determine_type(const Type_context*)\n   this->string_->determine_type_no_context();\n \n   Type_context index_context(Type::lookup_integer_type(\"int\"), false);\n-  if (this->start_->is_constant())\n-    this->start_->determine_type(&index_context);\n-  else\n-    this->start_->determine_type_no_context();\n+  this->start_->determine_type(&index_context);\n   if (this->end_ != NULL)\n-    {\n-      if (this->end_->is_constant())\n-        this->end_->determine_type(&index_context);\n-      else\n-        this->end_->determine_type_no_context();\n-    }\n+    this->end_->determine_type(&index_context);\n }\n \n // Check types of a string index."}, {"sha": "d6a6c38839f56076a9445e160192570d8bb997fb", "filename": "gcc/testsuite/go.test/test/shift1.go", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d8fea8a57068a0c5f0c1df766679a25f4272481/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fshift1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d8fea8a57068a0c5f0c1df766679a25f4272481/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fshift1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fshift1.go?ref=8d8fea8a57068a0c5f0c1df766679a25f4272481", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -18,13 +18,13 @@ func h(x float64) int     { return 0 }\n var (\n \ts uint    = 33\n \tu         = 1.0 << s // ERROR \"invalid operation|shift of non-integer operand\"\n-\tv float32 = 1 << s   // ERROR \"invalid\" \"as type float32\"\n+\tv float32 = 1 << s   // ERROR \"invalid\"\n )\n \n // non-constant shift expressions\n var (\n-\te1       = g(2.0 << s) // ERROR \"invalid|shift of non-integer operand\" \"as type interface\"\n-\tf1       = h(2 << s)   // ERROR \"invalid\" \"as type float64\"\n+\te1       = g(2.0 << s) // ERROR \"invalid|shift of non-integer operand\"\n+\tf1       = h(2 << s)   // ERROR \"invalid\"\n \tg1 int64 = 1.1 << s    // ERROR \"truncated\"\n )\n \n@@ -66,8 +66,15 @@ func _() {\n \t\tu2         = 1<<s != 1.0 // ERROR \"non-integer|float64\"\n \t\tv  float32 = 1 << s      // ERROR \"non-integer|float32\"\n \t\tw  int64   = 1.0 << 33   // 1.0<<33 is a constant shift expression\n+\n \t\t_, _, _, _, _, _, _, _, _, _ = j, k, m, n, o, u, u1, u2, v, w\n \t)\n+\n+\t// non constants arguments trigger a different path\n+\tf2 := 1.2\n+\ts2 := \"hi\"\n+\t_ = f2 << 2 // ERROR \"shift of type float64|non-integer\"\n+\t_ = s2 << 2 // ERROR \"shift of type string|non-integer\"\n }\n \n // shifts in comparisons w/ untyped operands\n@@ -146,8 +153,7 @@ func _() {\n \tvar a []int\n \t_ = a[1<<s]\n \t_ = a[1.]\n-\t// For now, the spec disallows these. We may revisit past Go 1.1.\n-\t_ = a[1.<<s]  // ERROR \"integer|shift of type float64\"\n+\t_ = a[1.<<s]\n \t_ = a[1.1<<s] // ERROR \"integer|shift of type float64\"\n \n \t_ = make([]int, 1)"}]}