{"sha": "7142ae779f48178dcdda1a76ba18aafa1a3940ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE0MmFlNzc5ZjQ4MTc4ZGNkZGExYTc2YmExOGFhZmExYTM5NDBjYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-01-09T22:01:48Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-01-09T22:01:48Z"}, "message": "re PR other/18720 (collect2 uses wrong search order if -brtl specified)\n\n        PR target/18720\n        * collect2.c (main): Set aixrtl_flag for -brtl option.\n        (resolve_lib_name): Search for .so file extension before .a\n        if aixrtl_flag set.\n\nFrom-SVN: r93119", "tree": {"sha": "277a654e1c4e433b49261f0f29c43cc4c0ecf829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/277a654e1c4e433b49261f0f29c43cc4c0ecf829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7142ae779f48178dcdda1a76ba18aafa1a3940ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7142ae779f48178dcdda1a76ba18aafa1a3940ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7142ae779f48178dcdda1a76ba18aafa1a3940ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7142ae779f48178dcdda1a76ba18aafa1a3940ca/comments", "author": null, "committer": null, "parents": [{"sha": "96b5a6c7f0232acca0f3501816ee340e59f4f711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96b5a6c7f0232acca0f3501816ee340e59f4f711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96b5a6c7f0232acca0f3501816ee340e59f4f711"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "e26229f441a3dc11702c8a13a56026068490a559", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7142ae779f48178dcdda1a76ba18aafa1a3940ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7142ae779f48178dcdda1a76ba18aafa1a3940ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7142ae779f48178dcdda1a76ba18aafa1a3940ca", "patch": "@@ -1,3 +1,10 @@\n+2005-01-09  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR target/18720\n+\t* collect2.c (main): Set aixrtl_flag for -brtl option.\n+\t(resolve_lib_name): Search for .so file extension before .a\n+\tif aixrtl_flag set.\n+\n 2005-01-09  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* tree-vectorizer.c (vect_enhance_data_refs_alignment): Add dump prints."}, {"sha": "999e670fc7c70e5eb9eebf19547036bb200c5740", "filename": "gcc/collect2.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7142ae779f48178dcdda1a76ba18aafa1a3940ca/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7142ae779f48178dcdda1a76ba18aafa1a3940ca/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=7142ae779f48178dcdda1a76ba18aafa1a3940ca", "patch": "@@ -185,6 +185,7 @@ static const char *demangle_flag;\n #ifdef COLLECT_EXPORT_LIST\n static int export_flag;                 /* true if -bE */\n static int aix64_flag;\t\t\t/* true if -b64 */\n+static int aixrtl_flag;\t\t\t/* true if -brtl */\n #endif\n \n int debug;\t\t\t\t/* true if -debug */\n@@ -242,7 +243,6 @@ static struct path_prefix cmdline_lib_dirs; /* directories specified with -L */\n static struct path_prefix libpath_lib_dirs; /* directories in LIBPATH */\n static struct path_prefix *libpaths[3] = {&cmdline_lib_dirs,\n \t\t\t\t\t  &libpath_lib_dirs, NULL};\n-static const char *const libexts[3] = {\"a\", \"so\", NULL};  /* possible library extensions */\n #endif\n \n static void handler (int);\n@@ -1087,6 +1087,8 @@ main (int argc, char **argv)\n                 export_flag = 1;\n \t      else if (arg[2] == '6' && arg[3] == '4')\n \t\taix64_flag = 1;\n+\t      else if (arg[2] == 'r' && arg[3] == 't' && arg[4] == 'l')\n+\t\taixrtl_flag = 1;\n \t      break;\n #endif\n \n@@ -2594,6 +2596,8 @@ resolve_lib_name (const char *name)\n {\n   char *lib_buf;\n   int i, j, l = 0;\n+  /* Library extensions for AIX dynamic linking.  */\n+  const char * const libexts[2] = {\"a\", \"so\"};\n \n   for (i = 0; libpaths[i]; i++)\n     if (libpaths[i]->max_len > l)\n@@ -2612,14 +2616,15 @@ resolve_lib_name (const char *name)\n \t  const char *p = \"\";\n \t  if (list->prefix[strlen(list->prefix)-1] != '/')\n \t    p = \"/\";\n-\t  for (j = 0; libexts[j]; j++)\n+\t  for (j = 0; j < 2; j++)\n \t    {\n \t      sprintf (lib_buf, \"%s%slib%s.%s\",\n-\t\t       list->prefix, p, name, libexts[j]);\n-if (debug) fprintf (stderr, \"searching for: %s\\n\", lib_buf);\n+\t\t       list->prefix, p, name,\n+\t\t       libexts[(j + aixrtl_flag) % 2]);\n+\t      if (debug) fprintf (stderr, \"searching for: %s\\n\", lib_buf);\n \t      if (file_exists (lib_buf))\n \t\t{\n-if (debug) fprintf (stderr, \"found: %s\\n\", lib_buf);\n+\t\t  if (debug) fprintf (stderr, \"found: %s\\n\", lib_buf);\n \t\t  return (lib_buf);\n \t\t}\n \t    }"}]}