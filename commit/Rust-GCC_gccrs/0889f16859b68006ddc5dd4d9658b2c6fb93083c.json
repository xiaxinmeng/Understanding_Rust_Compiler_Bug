{"sha": "0889f16859b68006ddc5dd4d9658b2c6fb93083c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg4OWYxNjg1OWI2ODAwNmRkYzVkZDRkOTY1OGIyYzZmYjkzMDgzYw==", "commit": {"author": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2018-01-23T21:42:52Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gcc.gnu.org", "date": "2018-01-23T21:42:52Z"}, "message": "libgcc: xtensa: fix NaN return from add/sub/mul/div helpers\n\nlibgcc/\n2018-01-23  Max Filippov  <jcmvbkbc@gmail.com>\n\n\t* config/xtensa/ieee754-df.S (__addsf3, __subsf3, __mulsf3)\n\t(__divsf3): Make NaN return value quiet.\n\t* config/xtensa/ieee754-sf.S (__adddf3, __subdf3, __muldf3)\n\t(__divdf3): Make NaN return value quiet.\n\nFrom-SVN: r257002", "tree": {"sha": "d72eb486a52b32abf575ffd91eb702ddc07e2ee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d72eb486a52b32abf575ffd91eb702ddc07e2ee7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0889f16859b68006ddc5dd4d9658b2c6fb93083c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0889f16859b68006ddc5dd4d9658b2c6fb93083c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0889f16859b68006ddc5dd4d9658b2c6fb93083c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0889f16859b68006ddc5dd4d9658b2c6fb93083c/comments", "author": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea070f267ce83116b86cf771d508d8420de8afe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea070f267ce83116b86cf771d508d8420de8afe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea070f267ce83116b86cf771d508d8420de8afe0"}], "stats": {"total": 112, "additions": 81, "deletions": 31}, "files": [{"sha": "778a455ca71b578927b1a96d019eb390906aa07c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0889f16859b68006ddc5dd4d9658b2c6fb93083c/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0889f16859b68006ddc5dd4d9658b2c6fb93083c/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0889f16859b68006ddc5dd4d9658b2c6fb93083c", "patch": "@@ -1,3 +1,10 @@\n+2018-01-23  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* config/xtensa/ieee754-df.S (__addsf3, __subsf3, __mulsf3)\n+\t(__divsf3): Make NaN return value quiet.\n+\t* config/xtensa/ieee754-sf.S (__adddf3, __subdf3, __muldf3)\n+\t(__divdf3): Make NaN return value quiet.\n+\n 2018-01-22  Sebastian Perta  <sebastian.perta@renesas.com>\n \n \t* config/rl78/anddi3.S: New assembly file."}, {"sha": "2662a66007519a70f44e293764a50e5d7d39d439", "filename": "libgcc/config/xtensa/ieee754-df.S", "status": "modified", "additions": 39, "deletions": 15, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0889f16859b68006ddc5dd4d9658b2c6fb93083c/libgcc%2Fconfig%2Fxtensa%2Fieee754-df.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0889f16859b68006ddc5dd4d9658b2c6fb93083c/libgcc%2Fconfig%2Fxtensa%2Fieee754-df.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Fieee754-df.S?ref=0889f16859b68006ddc5dd4d9658b2c6fb93083c", "patch": "@@ -64,17 +64,26 @@ __adddf3_aux:\n \n .Ladd_xnan_or_inf:\n \t/* If y is neither Infinity nor NaN, return x.  */\n-\tbnall\tyh, a6, 1f\n+\tbnall\tyh, a6, .Ladd_return_nan_or_inf\n \t/* If x is a NaN, return it.  Otherwise, return y.  */\n \tslli\ta7, xh, 12\n \tor\ta7, a7, xl\n-\tbeqz\ta7, .Ladd_ynan_or_inf\n-1:\tleaf_return\n+\tbnez\ta7, .Ladd_return_nan\n \n .Ladd_ynan_or_inf:\n \t/* Return y.  */\n \tmov\txh, yh\n \tmov\txl, yl\n+\n+.Ladd_return_nan_or_inf:\n+\tslli\ta7, xh, 12\n+\tor\ta7, a7, xl\n+\tbnez\ta7, .Ladd_return_nan\n+\tleaf_return\n+\n+.Ladd_return_nan:\n+\tmovi\ta4, 0x80000\t/* make it a quiet NaN */\n+\tor\txh, xh, a4\n \tleaf_return\n \n .Ladd_opposite_signs:\n@@ -319,17 +328,24 @@ __subdf3_aux:\n \n .Lsub_xnan_or_inf:\n \t/* If y is neither Infinity nor NaN, return x.  */\n-\tbnall\tyh, a6, 1f\n+\tbnall\tyh, a6, .Lsub_return_nan_or_inf\n+\n+.Lsub_return_nan:\n \t/* Both x and y are either NaN or Inf, so the result is NaN.  */\n \tmovi\ta4, 0x80000\t/* make it a quiet NaN */\n \tor\txh, xh, a4\n-1:\tleaf_return\n+\tleaf_return\n \n .Lsub_ynan_or_inf:\n \t/* Negate y and return it.  */\n \tslli\ta7, a6, 11\n \txor\txh, yh, a7\n \tmov\txl, yl\n+\n+.Lsub_return_nan_or_inf:\n+\tslli\ta7, xh, 12\n+\tor\ta7, a7, xl\n+\tbnez\ta7, .Lsub_return_nan\n \tleaf_return\n \n .Lsub_opposite_signs:\n@@ -692,10 +708,7 @@ __muldf3_aux:\n \t/* If y is zero, return NaN.  */\n \tbnez\tyl, 1f\n \tslli\ta8, yh, 1\n-\tbnez\ta8, 1f\n-\tmovi\ta4, 0x80000\t/* make it a quiet NaN */\n-\tor\txh, xh, a4\n-\tj\t.Lmul_done\n+\tbeqz\ta8, .Lmul_return_nan\n 1:\n \t/* If y is NaN, return y.  */\n \tbnall\tyh, a6, .Lmul_returnx\n@@ -708,6 +721,9 @@ __muldf3_aux:\n \tmov\txl, yl\n \n .Lmul_returnx:\n+\tslli\ta8, xh, 12\n+\tor\ta8, a8, xl\n+\tbnez\ta8, .Lmul_return_nan\n \t/* Set the sign bit and return.  */\n \textui\ta7, a7, 31, 1\n \tslli\txh, xh, 1\n@@ -720,8 +736,11 @@ __muldf3_aux:\n \tbnez\txl, .Lmul_returny\n \tslli\ta8, xh, 1\n \tbnez\ta8, .Lmul_returny\n-\tmovi\ta7, 0x80000\t/* make it a quiet NaN */\n-\tor\txh, yh, a7\n+\tmov\txh, yh\n+\n+.Lmul_return_nan:\n+\tmovi\ta4, 0x80000\t/* make it a quiet NaN */\n+\tor\txh, xh, a4\n \tj\t.Lmul_done\n \n \t.align\t4\n@@ -1370,10 +1389,11 @@ __divdf3_aux:\n \tslli\ta7, a7, 31\n \txor\txh, xh, a7\n \t/* If y is NaN or Inf, return NaN.  */\n-\tbnall\tyh, a6, 1f\n-\tmovi\ta4, 0x80000\t/* make it a quiet NaN */\n-\tor\txh, xh, a4\n-1:\tleaf_return\n+\tball\tyh, a6, .Ldiv_return_nan\n+\tslli\ta8, xh, 12\n+\tor\ta8, a8, xl\n+\tbnez\ta8, .Ldiv_return_nan\n+\tleaf_return\n \n .Ldiv_ynan_or_inf:\n \t/* If y is Infinity, return zero.  */\n@@ -1383,6 +1403,10 @@ __divdf3_aux:\n \t/* y is NaN; return it.  */\n \tmov\txh, yh\n \tmov\txl, yl\n+\n+.Ldiv_return_nan:\n+\tmovi\ta4, 0x80000\t/* make it a quiet NaN */\n+\tor\txh, xh, a4\n \tleaf_return\n \n .Ldiv_highequal1:"}, {"sha": "d48b230a75880d1b2d490834006a679edf13ea53", "filename": "libgcc/config/xtensa/ieee754-sf.S", "status": "modified", "additions": 35, "deletions": 16, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0889f16859b68006ddc5dd4d9658b2c6fb93083c/libgcc%2Fconfig%2Fxtensa%2Fieee754-sf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0889f16859b68006ddc5dd4d9658b2c6fb93083c/libgcc%2Fconfig%2Fxtensa%2Fieee754-sf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Fieee754-sf.S?ref=0889f16859b68006ddc5dd4d9658b2c6fb93083c", "patch": "@@ -64,15 +64,23 @@ __addsf3_aux:\n \n .Ladd_xnan_or_inf:\n \t/* If y is neither Infinity nor NaN, return x.  */\n-\tbnall\ta3, a6, 1f\n+\tbnall\ta3, a6, .Ladd_return_nan_or_inf\n \t/* If x is a NaN, return it.  Otherwise, return y.  */\n \tslli\ta7, a2, 9\n-\tbeqz\ta7, .Ladd_ynan_or_inf\n-1:\tleaf_return\n+\tbnez\ta7, .Ladd_return_nan\n \n .Ladd_ynan_or_inf:\n \t/* Return y.  */\n \tmov\ta2, a3\n+\n+.Ladd_return_nan_or_inf:\n+\tslli\ta7, a2, 9\n+\tbnez\ta7, .Ladd_return_nan\n+\tleaf_return\n+\n+.Ladd_return_nan:\n+\tmovi\ta6, 0x400000\t/* make it a quiet NaN */\n+\tor\ta2, a2, a6\n \tleaf_return\n \n .Ladd_opposite_signs:\n@@ -265,16 +273,22 @@ __subsf3_aux:\n \n .Lsub_xnan_or_inf:\n \t/* If y is neither Infinity nor NaN, return x.  */\n-\tbnall\ta3, a6, 1f\n+\tbnall\ta3, a6, .Lsub_return_nan_or_inf\n \t/* Both x and y are either NaN or Inf, so the result is NaN.  */\n+\n+.Lsub_return_nan:\n \tmovi\ta4, 0x400000\t/* make it a quiet NaN */\n \tor\ta2, a2, a4\n-1:\tleaf_return\n+\tleaf_return\n \n .Lsub_ynan_or_inf:\n \t/* Negate y and return it.  */\n \tslli\ta7, a6, 8\n \txor\ta2, a3, a7\n+\n+.Lsub_return_nan_or_inf:\n+\tslli\ta7, a2, 9\n+\tbnez\ta7, .Lsub_return_nan\n \tleaf_return\n \n .Lsub_opposite_signs:\n@@ -537,11 +551,7 @@ __mulsf3_aux:\n .Lmul_xnan_or_inf:\n \t/* If y is zero, return NaN.  */\n \tslli\ta8, a3, 1\n-\tbnez\ta8, 1f\n-\tmovi\ta4, 0x400000\t/* make it a quiet NaN */\n-\tor\ta2, a2, a4\n-\tj\t.Lmul_done\n-1:\n+\tbeqz\ta8, .Lmul_return_nan\n \t/* If y is NaN, return y.  */\n \tbnall\ta3, a6, .Lmul_returnx\n \tslli\ta8, a3, 9\n@@ -551,6 +561,8 @@ __mulsf3_aux:\n \tmov\ta2, a3\n \n .Lmul_returnx:\n+\tslli\ta8, a2, 9\n+\tbnez\ta8, .Lmul_return_nan\n \t/* Set the sign bit and return.  */\n \textui\ta7, a7, 31, 1\n \tslli\ta2, a2, 1\n@@ -562,8 +574,11 @@ __mulsf3_aux:\n \t/* If x is zero, return NaN.  */\n \tslli\ta8, a2, 1\n \tbnez\ta8, .Lmul_returny\n-\tmovi\ta7, 0x400000\t/* make it a quiet NaN */\n-\tor\ta2, a3, a7\n+\tmov\ta2, a3\n+\n+.Lmul_return_nan:\n+\tmovi\ta4, 0x400000\t/* make it a quiet NaN */\n+\tor\ta2, a2, a4\n \tj\t.Lmul_done\n \n \t.align\t4\n@@ -995,17 +1010,21 @@ __divsf3_aux:\n \tslli\ta7, a7, 31\n \txor\ta2, a2, a7\n \t/* If y is NaN or Inf, return NaN.  */\n-\tbnall\ta3, a6, 1f\n-\tmovi\ta4, 0x400000\t/* make it a quiet NaN */\n-\tor\ta2, a2, a4\n-1:\tleaf_return\n+\tball\ta3, a6, .Ldiv_return_nan\n+\tslli\ta7, a2, 9\n+\tbnez\ta7, .Ldiv_return_nan\n+\tleaf_return\n \n .Ldiv_ynan_or_inf:\n \t/* If y is Infinity, return zero.  */\n \tslli\ta8, a3, 9\n \tbeqz\ta8, .Ldiv_return_zero\n \t/* y is NaN; return it.  */\n \tmov\ta2, a3\n+\n+.Ldiv_return_nan:\n+\tmovi\ta4, 0x400000\t/* make it a quiet NaN */\n+\tor\ta2, a2, a4\n \tleaf_return\n \n \t.align\t4"}]}