{"sha": "6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA2MGVkY2JlMjRhYWE0NjdkNWJlNmZlMzViZDUyYTZlZWNjNzJiMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-05-02T11:33:06Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-05-02T11:33:06Z"}, "message": "Makefile.in (TREE_H): Replace location.h with input.h.\n\n\t* Makefile.in (TREE_H): Replace location.h with input.h.\n\t(GTFILES) Remove location.h\n\t(gt-lists.h): Replace gt-location.h with gt-input.h\n\t* input.h (input_filename, input_line): Remove variables.\n\t(location_s, location_t): Move from location.h.\n\t(input_location): New.\n\t(input_filename, input_line): New #defines.\n\t* location.h: Remove.\n\t* tree.h: Replace location.h with input.h.\n\t(input_filename, input_line): Remove.\n\t* diagnostic.h: Replace location.h with input.h.\n\t* gcc.h (input_filename, input_filename_length): Remove declarations.\n\t* toplev.c (input_filename, input_line): Remove.\n\t(input_location): Define.\n\t(push_srcloc, pop_srcloc): Adjust.\n\t* diagnostic.c (diagnostic_report_current_module): Adjust.\nf:\n\t* lex.c (ffelex_file_pop_): Adjust file_stack member use.\n\t(ffelex_file_push_): Likewise.\n\t(ffelex_hash_): Likewise.\njava:\n\t* lex.h (input_lineno): Remove declaration.\n\t* parse-scan.y: #include input.h.\n\t(input_filename): Remove declaration.\n\t(input_location): Add definition.\n\t(input_line): Remove definition.\n\nFrom-SVN: r66378", "tree": {"sha": "b2aeb7d7392849bc90e2ce9edf59756e4b8ede1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2aeb7d7392849bc90e2ce9edf59756e4b8ede1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/comments", "author": null, "committer": null, "parents": [{"sha": "ce61bf7ba759d99356b5fcdaa2bd6883395be016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce61bf7ba759d99356b5fcdaa2bd6883395be016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce61bf7ba759d99356b5fcdaa2bd6883395be016"}], "stats": {"total": 184, "additions": 85, "deletions": 99}, "files": [{"sha": "1509141d34f61fb1da1f7c9935befa7439eeb0cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -1,3 +1,22 @@\n+2003-05-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* Makefile.in (TREE_H): Replace location.h with input.h.\n+\t(GTFILES) Remove location.h\n+\t(gt-lists.h): Replace gt-location.h with gt-input.h\n+\t* input.h (input_filename, input_line): Remove variables.\n+\t(location_s, location_t): Move from location.h.\n+\t(input_location): New.\n+\t(input_filename, input_line): New #defines.\n+\t* location.h: Remove.\n+\t* tree.h: Replace location.h with input.h.\n+\t(input_filename, input_line): Remove.\n+\t* diagnostic.h: Replace location.h with input.h.\n+\t* gcc.h (input_filename, input_filename_length): Remove declarations.\n+\t* toplev.c (input_filename, input_line): Remove.\n+\t(input_location): Define.\n+\t(push_srcloc, pop_srcloc): Adjust.\n+\t* diagnostic.c (diagnostic_report_current_module): Adjust.\n+\n 2003-05-02  Nick Clifton  <nickc@redhat.com>\n \n \t* configure.in: Add xstormy16 to list of targets that has a nop"}, {"sha": "7847d9a9dc1ad78a09f87ab8d1fdc905294d583e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -633,7 +633,7 @@ RTL_BASE_H = rtl.h rtl.def $(MACHMODE_H)\n RTL_H = $(RTL_BASE_H) genrtl.h\n PARAMS_H = params.h params.def\n TREE_H = tree.h tree.def $(MACHMODE_H) tree-check.h version.h builtins.def \\\n-          location.h\n+          input.h\n BASIC_BLOCK_H = basic-block.h bitmap.h sbitmap.h varray.h $(PARTITION_H) \\\n           hard-reg-set.h\n COVERAGE_H = coverage.h gcov-io.h gcov-iov.h\n@@ -1968,12 +1968,12 @@ s-preds: genpreds$(build_exeext) $(srcdir)/move-if-change\n \t$(SHELL) $(srcdir)/move-if-change tmp-preds.h tm-preds.h\n \t$(STAMP) s-preds\n \n-GTFILES = $(srcdir)/location.h $(srcdir)/coretypes.h $(srcdir)/cpplib.h \\\n+GTFILES = $(srcdir)/input.h $(srcdir)/coretypes.h $(srcdir)/cpplib.h \\\n   $(host_xm_file_list) $(tm_file_list) $(HASHTAB_H) $(SPLAY_TREE_H) \\\n   $(srcdir)/bitmap.h $(srcdir)/coverage.c $(srcdir)/function.h  $(srcdir)/rtl.h \\\n   $(srcdir)/optabs.h $(srcdir)/tree.h $(srcdir)/libfuncs.h $(srcdir)/hashtable.h \\\n   $(srcdir)/real.h $(srcdir)/varray.h $(srcdir)/ssa.h $(srcdir)/insn-addr.h \\\n-  $(srcdir)/cselib.h $(srcdir)/basic-block.h $(srcdir)/location.h \\\n+  $(srcdir)/cselib.h $(srcdir)/basic-block.h \\\n   $(srcdir)/c-common.h $(srcdir)/c-tree.h \\\n   $(srcdir)/alias.c $(srcdir)/bitmap.c $(srcdir)/cselib.c $(srcdir)/cgraph.c \\\n   $(srcdir)/dbxout.c $(srcdir)/dwarf2out.c $(srcdir)/dwarf2asm.c \\\n@@ -1999,7 +1999,7 @@ gt-lists.h gt-alias.h gt-cselib.h gt-fold-const.h gt-gcse.h \\\n gt-expr.h gt-sdbout.h gt-optabs.h gt-bitmap.h \\\n gt-dwarf2out.h gt-ra-build.h gt-reg-stack.h gt-dwarf2asm.h \\\n gt-dbxout.h gt-c-common.h gt-c-decl.h gt-c-parse.h \\\n-gt-c-pragma.h gt-c-objc-common.h gtype-c.h gt-location.h \\\n+gt-c-pragma.h gt-c-objc-common.h gtype-c.h gt-input.h \\\n gt-stringpool.h : s-gtype ; @true\n \n gtyp-gen.h: Makefile"}, {"sha": "98c3bf0032cc11adc0e2c6b1939dcfc3ed7a1875", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -1383,11 +1383,11 @@ diagnostic_report_current_module (context)\n \tif (p == input_file_stack->next)\n \t  output_verbatim (&context->buffer,\n                            \"In file included from %s:%d\",\n-\t\t\t   p->name, p->line);\n+\t\t\t   p->location.file, p->location.line);\n \telse\n \t  output_verbatim (&context->buffer,\n                            \",\\n                 from %s:%d\",\n-\t\t\t   p->name, p->line);\n+\t\t\t   p->location.file, p->location.line);\n       output_verbatim (&context->buffer, \":\\n\");\n       diagnostic_set_last_module (context);\n     }"}, {"sha": "3f12a91798ac94e61be6ce6726158b03af6e78e6", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -23,7 +23,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define GCC_DIAGNOSTIC_H\n \n #include \"obstack.h\"\n-#include \"location.h\"\n+#include \"input.h\"\n \n /* The type of a text to be formatted according a format specification\n    along with a list of things.  */"}, {"sha": "6a5bc804734bec7310318a99d48249c87fb543b8", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -1,3 +1,9 @@\n+2003-05-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+ \t* lex.c (ffelex_file_pop_): Adjust file_stack member use.\n+\t(ffelex_file_push_): Likewise.\n+\t(ffelex_hash_): Likewise.\n+\n 2003-05-01  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* ansify.c (die_unless): Rename lineno to input_line."}, {"sha": "abdea332cef3ceed492eca14595f24a577a5c29a", "filename": "gcc/f/lex.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Ff%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Ff%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flex.c?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -796,15 +796,15 @@ ffelex_file_pop_ (const char *filename)\n       input_file_stack = p->next;\n       free (p);\n       input_file_stack_tick++;\n-      (*debug_hooks->end_source_file) (input_file_stack->line);\n+      (*debug_hooks->end_source_file) (input_file_stack->location.line);\n     }\n   else\n     error (\"#-lines for entering and leaving files don't match\");\n \n   /* Now that we've pushed or popped the input stack,\n      update the name in the top element.  */\n   if (input_file_stack)\n-    input_file_stack->name = filename;\n+    input_file_stack->location.file = filename;\n }\n \n static void\n@@ -813,9 +813,9 @@ ffelex_file_push_ (int old_lineno, const char *filename)\n   struct file_stack *p\n     = (struct file_stack *) xmalloc (sizeof (struct file_stack));\n \n-  input_file_stack->line = old_lineno;\n+  input_file_stack->location.line = old_lineno;\n   p->next = input_file_stack;\n-  p->name = filename;\n+  p->location.file = filename;\n   input_file_stack = p;\n   input_file_stack_tick++;\n \n@@ -824,7 +824,7 @@ ffelex_file_push_ (int old_lineno, const char *filename)\n   /* Now that we've pushed or popped the input stack,\n      update the name in the top element.  */\n   if (input_file_stack)\n-    input_file_stack->name = filename;\n+    input_file_stack->location.file = filename;\n }\n \n /* Prepare to finish a statement-in-progress by sending the current\n@@ -1260,7 +1260,7 @@ ffelex_hash_ (FILE *finput)\n \t    {\n \t      /* Update the name in the top element of input_file_stack.  */\n \t      if (input_file_stack)\n-\t\tinput_file_stack->name = input_filename;\n+\t\tinput_file_stack->location.file = input_filename;\n \n \t      if (token != NULL)\n \t\tffelex_token_kill (token);"}, {"sha": "e96a22089d6be0cdd96041125ff9074697f1df49", "filename": "gcc/gcc.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -1,5 +1,5 @@\n /* Header file for modules that link with gcc.c\n-   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -57,8 +57,6 @@ struct spec_function\n extern int do_spec PARAMS ((const char *));\n extern void record_temp_file PARAMS ((const char *, int, int));\n extern void fancy_abort PARAMS ((void)) ATTRIBUTE_NORETURN;\n-extern const char *input_filename;\n-extern size_t input_filename_length;\n extern void fatal PARAMS ((const char *, ...))\n      ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n extern void error PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;"}, {"sha": "6dd12521eefac2f6f32b10a1af9ba58742d23c65", "filename": "gcc/input.h", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Finput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Finput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.h?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -19,24 +19,32 @@ along with GCC; see the file COPYING.  If not, write to the Free\n Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n 02111-1307, USA.  */\n \n-/* Source file current line is coming from.  */\n-extern const char *input_filename;\n+#ifndef GCC_INPUT_H\n+#define GCC_INPUT_H\n \n-/* Top-level source file.  */\n-extern const char *main_input_filename;\n+/* The data structure used to record a location in a translation unit.  */\n+struct location_s GTY (())\n+{\n+  /* The name of the source file involved.  */     \n+  const char *file;\n \n-/* Line number in current source file.  */\n-extern int input_line;\n-\n-/* Stream for reading from input file.  */\n-extern FILE *finput;\n+  /* The line-location in the source file.  */\n+  int line;\n+};\n+typedef struct location_s location_t;\n \n struct file_stack\n-  {\n-    const char *name;\n-    struct file_stack *next;\n-    int line;\n-  };\n+{\n+  struct file_stack *next;\n+  location_t location;\n+};\n+\n+/* Top-level source file.  */\n+extern const char *main_input_filename;\n+\n+extern location_t input_location;\n+#define input_line (input_location.line)\n+#define input_filename (input_location.file)\n \n /* Stack of currently pending input files.\n    The line member is not accurate for the innermost file on the stack.  */\n@@ -47,3 +55,5 @@ extern int input_file_stack_tick;\n \n extern void push_srcloc PARAMS ((const char *name, int line));\n extern void pop_srcloc PARAMS ((void));\n+\n+#endif"}, {"sha": "546e6790522562f468fa6772005b74ee3d144df7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -1,3 +1,11 @@\n+2003-05-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* lex.h (input_lineno): Remove declaration.\n+\t* parse-scan.y: #include input.h.\n+\t(input_filename): Remove declaration.\n+\t(input_location): Add definition.\n+\t(input_line): Remove definition.\n+\n 2003-05-01  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* lex.h (lineno): Rename to ..."}, {"sha": "850ce6868ce9b3e62584bed39898255911003751", "filename": "gcc/java/lex.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fjava%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fjava%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.h?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -29,7 +29,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n /* Extern global variables declarations  */\n extern FILE *finput;\n-extern int   input_lineno;\n \n /* A Unicode character, as read from the input file  */\n typedef unsigned short unicode_t;"}, {"sha": "37d79d9240ba64c8f6f0836a6e2d263e5a9f8743", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -41,24 +41,25 @@ definitions and other extensions.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-\n+#include \"input.h\"\n #include \"obstack.h\"\n #include \"toplev.h\"\n \n-extern char *input_filename;\n extern FILE *finput, *out;\n+ \n+/* Current position in real source file.  */\n+\n+location_t input_location;\n \n /* Obstack for the lexer.  */\n struct obstack temporary_obstack;\n \n /* The current parser context.  */\n static struct parser_ctxt *ctxp;\n \n-/* Error and warning counts, current line number, because they're used\n-   elsewhere  */\n+/* Error and warning counts, because they're used elsewhere  */\n int java_error_count;\n int java_warning_count;\n-int input_line;\n \n /* Tweak default rules when necessary.  */\n static int absorber;"}, {"sha": "1864f29721be9e637d39dd57e6f3495c683a16a8", "filename": "gcc/location.h", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce61bf7ba759d99356b5fcdaa2bd6883395be016/gcc%2Flocation.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce61bf7ba759d99356b5fcdaa2bd6883395be016/gcc%2Flocation.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocation.h?ref=ce61bf7ba759d99356b5fcdaa2bd6883395be016", "patch": "@@ -1,38 +0,0 @@\n-/* Definition of location data type used in various part of GCC\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-   Contributed by Gabriel Dos Reis <gdr@codesourcery.com>\n-\n-This program is free software; you can redistribute it and/or modify it\n-under the terms of the GNU General Public License as published by the\n-Free Software Foundation; either version 2, or (at your option) any\n-later version.\n-\n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n-\n- In other words, you are welcome to use, share and improve this program.\n- You are forbidden to forbid anyone else to use, share and improve\n- what you give them.   Help stamp out software-hoarding!  */\n-\n-#ifndef GCC_LOCATION_H\n-#define GCC_LOCATION_H\n-\n-/* The data structure used to record a location in a translation unit.  */\n-struct location_s GTY (())\n-{\n-  /* The name of the source file involved.  */     \n-  const char *file;\n-\n-  /* The line-location in the source file.  */\n-  int line;\n-};\n-typedef struct location_s location_t;\n-\n-#endif\n-"}, {"sha": "fc25ca4f1d8beb662935c0085543f6609ef15c2d", "filename": "gcc/toplev.c", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -149,20 +149,15 @@ const char *progname;\n int save_argc;\n char **save_argv;\n \f\n-/* Name of current original source file (what was input to cpp).\n-   This comes from each #-command in the actual input.  */\n-\n-const char *input_filename;\n-\n /* Name of top-level original source file (what was input to cpp).\n    This comes from the #-command at the beginning of the actual input.\n    If there isn't any there, then this is the cc1 input file name.  */\n \n const char *main_input_filename;\n \n-/* Current line number in real source file.  */\n+/* Current position in real source file.  */\n \n-int input_line;\n+location_t input_location;\n \n /* Nonzero if it is unsafe to create any new pseudo registers.  */\n int no_new_pseudos;\n@@ -2147,14 +2142,12 @@ push_srcloc (file, line)\n   struct file_stack *fs;\n \n   if (input_file_stack)\n-    {\n-      input_file_stack->name = input_filename;\n-      input_file_stack->line = input_line;\n-    }\n+    input_file_stack->location = input_location;\n \n   fs = (struct file_stack *) xmalloc (sizeof (struct file_stack));\n-  fs->name = input_filename = file;\n-  fs->line = input_line = line;\n+  input_filename = file;\n+  input_line = line;\n+  fs->location = input_location;\n   fs->next = input_file_stack;\n   input_file_stack = fs;\n   input_file_stack_tick++;\n@@ -2175,10 +2168,7 @@ pop_srcloc ()\n   input_file_stack_tick++;\n \n   if (input_file_stack)\n-    {\n-      input_filename = input_file_stack->name;\n-      input_line = input_file_stack->line;\n-    }\n+    input_location = input_file_stack->location;\n   else\n     {\n       input_filename = NULL;"}, {"sha": "8c01ca169079a7975b46bce9b1ba18d5ed18de7a", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6060edcbe24aaa467d5be6fe35bd52a6eecc72b3/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=6060edcbe24aaa467d5be6fe35bd52a6eecc72b3", "patch": "@@ -24,7 +24,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"machmode.h\"\n #include \"version.h\"\n-#include \"location.h\"\n+#include \"input.h\"\n \n /* Codes of tree nodes */\n \n@@ -2778,13 +2778,6 @@ extern int real_zerop PARAMS ((tree));\n \f\n /* Declare commonly used variables for tree structure.  */\n \n-/* Points to the name of the input file from which the current input\n-   being parsed originally came (before it went into cpp).  */\n-extern const char *input_filename;\n-\n-/* Current line number in input file.  */\n-extern int input_line;\n-\n /* Nonzero means lvalues are limited to those valid in pedantic ANSI C.\n    Zero means allow extended lvalues.  */\n "}]}