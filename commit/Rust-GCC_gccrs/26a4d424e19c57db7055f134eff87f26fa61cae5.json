{"sha": "26a4d424e19c57db7055f134eff87f26fa61cae5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZhNGQ0MjRlMTljNTdkYjcwNTVmMTM0ZWZmODdmMjZmYTYxY2FlNQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-12-11T13:34:22Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-12-11T13:34:22Z"}, "message": "[ARM] Fix names of some rounding intrinsics, impement vrndx_f32 and vrndxq_f32\n\n\t* config/arm/arm_neon.h (vrndqn_f32): Rename to...\n\t(vrndnq_f32): ... this.\n\t(vrndqa_f32): Rename to...\n\t(vrndaq_f32): ... this.\n\t(vrndqp_f32): Rename to...\n\t(vrndpq_f32): ... this.\n\t(vrndqm_f32): Rename to...\n\t(vrndmq_f32): ... this.\n\t(vrndx_f32): New intrinsic.\n\t(vrndxq_f32): Likewise.\n\n\t* config/arm/arm_neon.h (vrndqn_f32): Rename to...\n\t(vrndnq_f32): ... this.\n\t(vrndqa_f32): Rename to...\n\t(vrndaq_f32): ... this.\n\t(vrndqp_f32): Rename to...\n\t(vrndpq_f32): ... this.\n\t(vrndqm_f32): Rename to...\n\t(vrndmq_f32): ... this.\n\t(vrndx_f32): New intrinsic.\n\t(vrndxq_f32): Likewise.\n\nFrom-SVN: r218622", "tree": {"sha": "05369d8118014cd0b575d6c9ac6c0bf3e926f033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05369d8118014cd0b575d6c9ac6c0bf3e926f033"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26a4d424e19c57db7055f134eff87f26fa61cae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a4d424e19c57db7055f134eff87f26fa61cae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a4d424e19c57db7055f134eff87f26fa61cae5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a4d424e19c57db7055f134eff87f26fa61cae5/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20bd649ae4d750de74647a354c856d05de2acb0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20bd649ae4d750de74647a354c856d05de2acb0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20bd649ae4d750de74647a354c856d05de2acb0c"}], "stats": {"total": 111, "additions": 95, "deletions": 16}, "files": [{"sha": "530147080b9e75059f2655776cd934738b201cb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26a4d424e19c57db7055f134eff87f26fa61cae5", "patch": "@@ -1,3 +1,16 @@\n+2014-12-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm_neon.h (vrndqn_f32): Rename to...\n+\t(vrndnq_f32): ... this.\n+\t(vrndqa_f32): Rename to...\n+\t(vrndaq_f32): ... this.\n+\t(vrndqp_f32): Rename to...\n+\t(vrndpq_f32): ... this.\n+\t(vrndqm_f32): Rename to...\n+\t(vrndmq_f32): ... this.\n+\t(vrndx_f32): New intrinsic.\n+\t(vrndxq_f32): Likewise.\n+\n 2014-12-11  Marek Polacek  <polacek@redhat.com>\n \n \t* fold-const.c (fold_negate_expr): Add ANY_INTEGRAL_TYPE_P check."}, {"sha": "377f8731ac6ff58a9016e973923f5a7576893fed", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=26a4d424e19c57db7055f134eff87f26fa61cae5", "patch": "@@ -1471,7 +1471,7 @@ vrndn_f32 (float32x2_t __a)\n #endif\n #if __ARM_ARCH >= 8\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n-vrndqn_f32 (float32x4_t __a)\n+vrndnq_f32 (float32x4_t __a)\n {\n   return (float32x4_t)__builtin_neon_vrintnv4sf (__a);\n }\n@@ -1487,7 +1487,7 @@ vrnda_f32 (float32x2_t __a)\n #endif\n #if __ARM_ARCH >= 8\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n-vrndqa_f32 (float32x4_t __a)\n+vrndaq_f32 (float32x4_t __a)\n {\n   return (float32x4_t)__builtin_neon_vrintav4sf (__a);\n }\n@@ -1503,7 +1503,7 @@ vrndp_f32 (float32x2_t __a)\n #endif\n #if __ARM_ARCH >= 8\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n-vrndqp_f32 (float32x4_t __a)\n+vrndpq_f32 (float32x4_t __a)\n {\n   return (float32x4_t)__builtin_neon_vrintpv4sf (__a);\n }\n@@ -1519,12 +1519,31 @@ vrndm_f32 (float32x2_t __a)\n #endif\n #if __ARM_ARCH >= 8\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n-vrndqm_f32 (float32x4_t __a)\n+vrndmq_f32 (float32x4_t __a)\n {\n   return (float32x4_t)__builtin_neon_vrintmv4sf (__a);\n }\n \n #endif\n+\n+#if __ARM_ARCH >= 8\n+__extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n+vrndx_f32 (float32x2_t __a)\n+{\n+  return (float32x2_t)__builtin_neon_vrintxv2sf (__a);\n+}\n+\n+#endif\n+\n+#if __ARM_ARCH >= 8\n+__extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n+vrndxq_f32 (float32x4_t __a)\n+{\n+  return (float32x4_t)__builtin_neon_vrintxv4sf (__a);\n+}\n+\n+#endif\n+\n #if __ARM_ARCH >= 8\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vrnd_f32 (float32x2_t __a)"}, {"sha": "0ab4b39befeabfa42a4150ea94a0d75780c3f8e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26a4d424e19c57db7055f134eff87f26fa61cae5", "patch": "@@ -1,3 +1,16 @@\n+2014-12-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm_neon.h (vrndqn_f32): Rename to...\n+\t(vrndnq_f32): ... this.\n+\t(vrndqa_f32): Rename to...\n+\t(vrndaq_f32): ... this.\n+\t(vrndqp_f32): Rename to...\n+\t(vrndpq_f32): ... this.\n+\t(vrndqm_f32): Rename to...\n+\t(vrndmq_f32): ... this.\n+\t(vrndx_f32): New intrinsic.\n+\t(vrndxq_f32): Likewise.\n+\n 2014-12-11  Kyrylo Tkachov  kyrylo.tkachov@arm.com\n \n \t* lib/target-utils.exp: New file."}, {"sha": "c1acb64e8e7e690404a4537ed61a1a1d0b085def", "filename": "gcc/testsuite/gcc.target/arm/neon/vrndaqf32.c", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndaqf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndaqf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndaqf32.c?ref=26a4d424e19c57db7055f134eff87f26fa61cae5", "patch": "@@ -1,4 +1,4 @@\n-/* Test the `vrndqaf32' ARM Neon intrinsic.  */\n+/* Test the `vrndaq_f32' ARM Neon intrinsic.  */\n /* This file was autogenerated by neon-testgen.  */\n \n /* { dg-do assemble } */\n@@ -8,12 +8,12 @@\n \n #include \"arm_neon.h\"\n \n-void test_vrndqaf32 (void)\n+void test_vrndaqf32 (void)\n {\n   float32x4_t out_float32x4_t;\n   float32x4_t arg0_float32x4_t;\n \n-  out_float32x4_t = vrndqa_f32 (arg0_float32x4_t);\n+  out_float32x4_t = vrndaq_f32 (arg0_float32x4_t);\n }\n \n /* { dg-final { scan-assembler \"vrinta\\.f32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+!?\\(\\[ \t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" } } */", "previous_filename": "gcc/testsuite/gcc.target/arm/neon/vrndqaf32.c"}, {"sha": "306d4f8b03b70130546f5dd3ed209fae52761bc3", "filename": "gcc/testsuite/gcc.target/arm/neon/vrndmqf32.c", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndmqf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndmqf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndmqf32.c?ref=26a4d424e19c57db7055f134eff87f26fa61cae5", "patch": "@@ -1,4 +1,4 @@\n-/* Test the `vrndqmf32' ARM Neon intrinsic.  */\n+/* Test the `vrndmq_f32' ARM Neon intrinsic.  */\n /* This file was autogenerated by neon-testgen.  */\n \n /* { dg-do assemble } */\n@@ -8,12 +8,12 @@\n \n #include \"arm_neon.h\"\n \n-void test_vrndqmf32 (void)\n+void test_vrndmqf32 (void)\n {\n   float32x4_t out_float32x4_t;\n   float32x4_t arg0_float32x4_t;\n \n-  out_float32x4_t = vrndqm_f32 (arg0_float32x4_t);\n+  out_float32x4_t = vrndmq_f32 (arg0_float32x4_t);\n }\n \n /* { dg-final { scan-assembler \"vrintm\\.f32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+!?\\(\\[ \t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" } } */", "previous_filename": "gcc/testsuite/gcc.target/arm/neon/vrndqmf32.c"}, {"sha": "0a70529bd6671fa46a0b627ff9df9a7eb844d166", "filename": "gcc/testsuite/gcc.target/arm/neon/vrndnqf32.c", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndnqf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndnqf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndnqf32.c?ref=26a4d424e19c57db7055f134eff87f26fa61cae5", "patch": "@@ -1,4 +1,4 @@\n-/* Test the `vrndqnf32' ARM Neon intrinsic.  */\n+/* Test the `vrndnq_f32' ARM Neon intrinsic.  */\n /* This file was autogenerated by neon-testgen.  */\n \n /* { dg-do assemble } */\n@@ -8,12 +8,12 @@\n \n #include \"arm_neon.h\"\n \n-void test_vrndqnf32 (void)\n+void test_vrndnqf32 (void)\n {\n   float32x4_t out_float32x4_t;\n   float32x4_t arg0_float32x4_t;\n \n-  out_float32x4_t = vrndqn_f32 (arg0_float32x4_t);\n+  out_float32x4_t = vrndnq_f32 (arg0_float32x4_t);\n }\n \n /* { dg-final { scan-assembler \"vrintn\\.f32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+!?\\(\\[ \t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" } } */", "previous_filename": "gcc/testsuite/gcc.target/arm/neon/vrndqnf32.c"}, {"sha": "723fee4e576d402140f9e3532aeff05f52e9d2a0", "filename": "gcc/testsuite/gcc.target/arm/neon/vrndpqf32.c", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndpqf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndpqf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvrndpqf32.c?ref=26a4d424e19c57db7055f134eff87f26fa61cae5", "patch": "@@ -1,4 +1,4 @@\n-/* Test the `vrndqpf32' ARM Neon intrinsic.  */\n+/* Test the `vrndpq_f32' ARM Neon intrinsic.  */\n /* This file was autogenerated by neon-testgen.  */\n \n /* { dg-do assemble } */\n@@ -8,12 +8,12 @@\n \n #include \"arm_neon.h\"\n \n-void test_vrndqpf32 (void)\n+void test_vrndpqf32 (void)\n {\n   float32x4_t out_float32x4_t;\n   float32x4_t arg0_float32x4_t;\n \n-  out_float32x4_t = vrndqp_f32 (arg0_float32x4_t);\n+  out_float32x4_t = vrndpq_f32 (arg0_float32x4_t);\n }\n \n /* { dg-final { scan-assembler \"vrintp\\.f32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+!?\\(\\[ \t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" } } */", "previous_filename": "gcc/testsuite/gcc.target/arm/neon/vrndqpf32.c"}, {"sha": "3d2f27fa6668b6b75bb347fe72f36b7a54fa1069", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-vrndx_f32_1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vrndx_f32_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vrndx_f32_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vrndx_f32_1.c?ref=26a4d424e19c57db7055f134eff87f26fa61cae5", "patch": "@@ -0,0 +1,17 @@\n+/* Test the `vrndx_f32' ARM Neon intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-options \"-save-temps -O2\" } */\n+/* { dg-add-options arm_v8_neon } */\n+\n+#include \"arm_neon.h\"\n+\n+float32x2_t\n+test_vrndx_f32 (float32x2_t in)\n+{\n+  return vrndx_f32 (in);\n+}\n+\n+/* { dg-final { scan-assembler \"vrintx\\.f32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "c89cb2482848d97e1a57a220115dcff36e40bb2c", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-vrndxq_f32_1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vrndxq_f32_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a4d424e19c57db7055f134eff87f26fa61cae5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vrndxq_f32_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vrndxq_f32_1.c?ref=26a4d424e19c57db7055f134eff87f26fa61cae5", "patch": "@@ -0,0 +1,17 @@\n+/* Test the `vrndxq_f32' ARM Neon intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-options \"-save-temps -O2\" } */\n+/* { dg-add-options arm_v8_neon } */\n+\n+#include \"arm_neon.h\"\n+\n+float32x4_t\n+test_vrndxq_f32 (float32x4_t in)\n+{\n+  return vrndxq_f32 (in);\n+}\n+\n+/* { dg-final { scan-assembler \"vrintx\\.f32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}]}