{"sha": "6377248ca02ac335ec847d74c4068ea0e9fe2b41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3NzI0OGNhMDJhYzMzNWVjODQ3ZDc0YzQwNjhlYTBlOWZlMmI0MQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-11-01T16:58:44Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-11-01T16:58:44Z"}, "message": "Makefile.in (GCC_CFLAGS): Add @WERROR@ for target files.\n\n2003-11-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n\n\t* Makefile.in (GCC_CFLAGS): Add @WERROR@ for target files.\n\nFrom-SVN: r73176", "tree": {"sha": "3b2a575d7646904983bafe8d13ffabdf1124cf2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b2a575d7646904983bafe8d13ffabdf1124cf2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6377248ca02ac335ec847d74c4068ea0e9fe2b41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6377248ca02ac335ec847d74c4068ea0e9fe2b41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6377248ca02ac335ec847d74c4068ea0e9fe2b41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6377248ca02ac335ec847d74c4068ea0e9fe2b41/comments", "author": null, "committer": null, "parents": [{"sha": "f218d8208f9cd06262d20bb649cb1e3ceade9f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f218d8208f9cd06262d20bb649cb1e3ceade9f00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f218d8208f9cd06262d20bb649cb1e3ceade9f00"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "ea48397219b7ca5b6776bf6bc69553b01d493000", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6377248ca02ac335ec847d74c4068ea0e9fe2b41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6377248ca02ac335ec847d74c4068ea0e9fe2b41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6377248ca02ac335ec847d74c4068ea0e9fe2b41", "patch": "@@ -1,3 +1,7 @@\n+2003-11-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (GCC_CFLAGS): Add @WERROR@ for target files.\n+\n 2003-11-01  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* config/rs6000/sysv4.h (EXTRA_SECTION_FUNCTIONS): Update to C90\n@@ -65,14 +69,14 @@\n \t* arm.h (CONDITIONAL_REGISTER_USAGE): Disable use of LR in Thumb\n \tcode.\n \n-2003-10-31  Andreas Jaeger  <aj@suse.de>, \n-            Zack Weinberg  <zack@codesourcery.com>            \n+2003-10-31  Andreas Jaeger  <aj@suse.de>,\n+            Zack Weinberg  <zack@codesourcery.com>\n \n \n         * crtstuff.c (__register_frame_info, __register_frame_info_bases)\n         (__deregister_frame_info, __deregister_frame_info_bases):\n         Constify void * argument.\n-        * unwind-dw2-fde.h (struct fde_vector): \n+        * unwind-dw2-fde.h (struct fde_vector):\n         Constify 'orig_data' and 'array' fields.\n         (__register_frame_info, __register_frame_info_bases)\n         (__deregister_frame_info, __deregister_frame_info_bases):\n@@ -93,7 +97,7 @@\n         Constify arguments, local variables, return values, and casts\n         of type fde *, fde **, struct dwarf_fde *, and struct dwarf_cie *.\n         Use const pointer types in sizeof expressions, for clarity.\n-        * unwind-dw2-fde-glibc.c \n+        * unwind-dw2-fde-glibc.c\n         (_Unwind_find_registered_FDE, _Unwind_find_FDE): Constify return value.\n         (struct unw_eh_callback_data): Constify 'ret' field.\n \n@@ -142,7 +146,7 @@\n \n 2003-10-31  Richard Earnshaw  <rearnsha@arm.com>\n \n-\t* ggc-page.c (ggc_pch_read): Wrap call to poison_pages in \n+\t* ggc-page.c (ggc_pch_read): Wrap call to poison_pages in\n \tENABLE_GC_CHECKING not in GGC_POISON.\n \n 2003-10-31  Nathanael Nerode  <neroden@gcc.gnu.org>"}, {"sha": "94627e20706d3e8dfb257f2d67134e2df4d23ede", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6377248ca02ac335ec847d74c4068ea0e9fe2b41/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6377248ca02ac335ec847d74c4068ea0e9fe2b41/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=6377248ca02ac335ec847d74c4068ea0e9fe2b41", "patch": "@@ -287,7 +287,7 @@ GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) ./xgcc -B./ -B$(build_tooldir)/bin/ -isyste\n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n # It also specifies -isystem ./include to find, e.g., stddef.h.\n-GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(LOOSE_WARN) -isystem ./include $(TCFLAGS)\n+GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(LOOSE_WARN) @WERROR@ -isystem ./include $(TCFLAGS)\n \n # ---------------------------------------------------\n # Programs which produce files for the target machine"}]}