{"sha": "2b0a62741e675068c13e81690758855846c88726", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIwYTYyNzQxZTY3NTA2OGMxM2U4MTY5MDc1ODg1NTg0NmM4ODcyNg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-03-13T19:58:20Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-03-13T19:58:20Z"}, "message": "PR c++/89686 - mixing init-capture and simple-capture in lambda.\n\n\t* parser.c (cp_parser_lambda_introducer): Give error when combining\n\tinit-capture and simple-capture.\n\n\t* g++.dg/cpp2a/lambda-pack-init2.C: New test.\n\nFrom-SVN: r269659", "tree": {"sha": "1e1bc193ff07c7fcfc6f2e62cf849a1f8756f39c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e1bc193ff07c7fcfc6f2e62cf849a1f8756f39c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b0a62741e675068c13e81690758855846c88726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b0a62741e675068c13e81690758855846c88726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b0a62741e675068c13e81690758855846c88726", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b0a62741e675068c13e81690758855846c88726/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84083a711ee6b84f42a6d33c45784d660cf4f514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84083a711ee6b84f42a6d33c45784d660cf4f514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84083a711ee6b84f42a6d33c45784d660cf4f514"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "fa0fdeae09f077228934a556314ea8c7662f799d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b0a62741e675068c13e81690758855846c88726/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b0a62741e675068c13e81690758855846c88726/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2b0a62741e675068c13e81690758855846c88726", "patch": "@@ -8,6 +8,10 @@\n \t(cp_parser_constructor_declarator_p): Add FLAGS parameter.  Pass it to\n \tcp_parser_type_specifier.\n \n+\tPR c++/89686 - mixing init-capture and simple-capture in lambda.\n+\t* parser.c (cp_parser_lambda_introducer): Give error when combining\n+\tinit-capture and simple-capture.\n+\n 2019-03-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/86521 - wrong overload resolution with ref-qualifiers."}, {"sha": "14da1a14501511127680ec5ba74c1834dae14788", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b0a62741e675068c13e81690758855846c88726/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b0a62741e675068c13e81690758855846c88726/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2b0a62741e675068c13e81690758855846c88726", "patch": "@@ -10609,12 +10609,13 @@ cp_parser_lambda_introducer (cp_parser* parser, tree lambda_expr)\n \t}\n \n       bool init_pack_expansion = false;\n+      location_t ellipsis_loc = UNKNOWN_LOCATION;\n       if (cp_lexer_next_token_is (parser->lexer, CPP_ELLIPSIS))\n \t{\n-\t  location_t loc = cp_lexer_peek_token (parser->lexer)->location;\n+\t  ellipsis_loc = cp_lexer_peek_token (parser->lexer)->location;\n \t  if (cxx_dialect < cxx2a)\n-\t    pedwarn (loc, 0, \"pack init-capture only available with \"\n-\t\t\t     \"%<-std=c++2a%> or %<-std=gnu++2a%>\");\n+\t    pedwarn (ellipsis_loc, 0, \"pack init-capture only available with \"\n+\t\t     \"%<-std=c++2a%> or %<-std=gnu++2a%>\");\n \t  cp_lexer_consume_token (parser->lexer);\n \t  init_pack_expansion = true;\n \t}\n@@ -10719,8 +10720,21 @@ cp_parser_lambda_introducer (cp_parser* parser, tree lambda_expr)\n \n \t  if (cp_lexer_next_token_is (parser->lexer, CPP_ELLIPSIS))\n \t    {\n+\t      location_t loc = cp_lexer_peek_token (parser->lexer)->location;\n \t      cp_lexer_consume_token (parser->lexer);\n \t      capture_init_expr = make_pack_expansion (capture_init_expr);\n+\t      if (init_pack_expansion)\n+\t\t{\n+\t\t  /* If what follows is an initializer, the second '...' is\n+\t\t     invalid.  But for cases like [...xs...], the first one\n+\t\t     is invalid.  */\n+\t\t  if (cp_lexer_next_token_is (parser->lexer, CPP_EQ)\n+\t\t      || cp_lexer_next_token_is (parser->lexer, CPP_OPEN_PAREN)\n+\t\t      || cp_lexer_next_token_is (parser->lexer, CPP_OPEN_BRACE))\n+\t\t    ellipsis_loc = loc;\n+\t\t  error_at (ellipsis_loc, \"too many %<...%> in lambda capture\");\n+\t\t  continue;\n+\t\t}\n \t    }\n \t}\n "}, {"sha": "ed025c922675af0928e01705cefc6ef259da3645", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b0a62741e675068c13e81690758855846c88726/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b0a62741e675068c13e81690758855846c88726/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b0a62741e675068c13e81690758855846c88726", "patch": "@@ -1,3 +1,8 @@\n+2019-03-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89686 - mixing init-capture and simple-capture in lambda.\n+\t* g++.dg/cpp2a/lambda-pack-init2.C: New test.\n+\n 2019-03-13  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/89601"}, {"sha": "55d689dbc6797a044a0adf889f1f2bed1856f0ed", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-pack-init2.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b0a62741e675068c13e81690758855846c88726/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-pack-init2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b0a62741e675068c13e81690758855846c88726/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-pack-init2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-pack-init2.C?ref=2b0a62741e675068c13e81690758855846c88726", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/89686\n+// { dg-do compile { target c++2a } }\n+\n+template <typename... Ts>\n+void foo(Ts... xs)\n+{\n+  int i = 10;\n+  [...xs...]{}(); // { dg-error \"4:too many ..... in lambda capture\" }\n+  [...xs...=xs]{}(); // { dg-error \"9:too many ..... in lambda capture|expected\" }\n+  [xs...]{}();\n+  [...xs=xs]{}();\n+\n+  [i, ...xs...]{}(); // { dg-error \"7:too many ..... in lambda capture\" }\n+  [i, ...xs...=xs]{}(); // { dg-error \"12:too many ..... in lambda capture|expected\" }\n+  [i, xs...]{}();\n+  [i, ...xs=xs]{}();\n+}\n+\n+int main()\n+{\n+ foo(0, 1, 2);\n+}"}]}