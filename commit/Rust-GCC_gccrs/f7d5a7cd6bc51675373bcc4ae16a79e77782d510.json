{"sha": "f7d5a7cd6bc51675373bcc4ae16a79e77782d510", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdkNWE3Y2Q2YmM1MTY3NTM3M2JjYzRhZTE2YTc5ZTc3NzgyZDUxMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-10-08T16:09:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-10-08T16:09:31Z"}, "message": "re PR c++/36816 ([c++0x] error deducing template argument taking the address of rvalue reference template)\n\n\tPR c++/36816\n\t* pt.c (maybe_adjust_types_for_deduction): Do rvalue ref adjustment\n\teven when DEDUCE_EXACT.\n\nFrom-SVN: r152565", "tree": {"sha": "c78f263f40e579ba20481d1405a9872356e70d8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c78f263f40e579ba20481d1405a9872356e70d8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7d5a7cd6bc51675373bcc4ae16a79e77782d510", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d5a7cd6bc51675373bcc4ae16a79e77782d510", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d5a7cd6bc51675373bcc4ae16a79e77782d510", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d5a7cd6bc51675373bcc4ae16a79e77782d510/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ccb05613cfd1d37ce6473244e28c56e75d1d0e66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb05613cfd1d37ce6473244e28c56e75d1d0e66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccb05613cfd1d37ce6473244e28c56e75d1d0e66"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "063db183eb37b1aec8a471b103b4518851bf1aab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d5a7cd6bc51675373bcc4ae16a79e77782d510/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d5a7cd6bc51675373bcc4ae16a79e77782d510/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f7d5a7cd6bc51675373bcc4ae16a79e77782d510", "patch": "@@ -1,5 +1,9 @@\n 2009-10-08  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/36816\n+\t* pt.c (maybe_adjust_types_for_deduction): Do rvalue ref adjustment\n+\teven when DEDUCE_EXACT.\n+\n \tPR c++/37177\n \t* pt.c (resolve_nondeduced_context): New.\n \t* cvt.c (convert_to_void): Call it."}, {"sha": "148adab2cbafd45dc8ac540b413af54255252b62", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d5a7cd6bc51675373bcc4ae16a79e77782d510/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d5a7cd6bc51675373bcc4ae16a79e77782d510/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f7d5a7cd6bc51675373bcc4ae16a79e77782d510", "patch": "@@ -12906,7 +12906,17 @@ maybe_adjust_types_for_deduction (unification_kind_t strict,\n       }\n \n     case DEDUCE_EXACT:\n-      /* There is nothing to do in this case.  */\n+      /* Core issue #873: Do the DR606 thing (see below) for these cases,\n+\t too, but here handle it by stripping the reference from PARM\n+\t rather than by adding it to ARG.  */\n+      if (TREE_CODE (*parm) == REFERENCE_TYPE\n+\t  && TYPE_REF_IS_RVALUE (*parm)\n+\t  && TREE_CODE (TREE_TYPE (*parm)) == TEMPLATE_TYPE_PARM\n+\t  && cp_type_quals (TREE_TYPE (*parm)) == TYPE_UNQUALIFIED\n+\t  && TREE_CODE (*arg) == REFERENCE_TYPE\n+\t  && !TYPE_REF_IS_RVALUE (*arg))\n+\t*parm = TREE_TYPE (*parm);\n+      /* Nothing else to do in this case.  */\n       return 0;\n \n     default:"}, {"sha": "2e0e705c157a0aa92a5ab216b9ee20466d35c9f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d5a7cd6bc51675373bcc4ae16a79e77782d510/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d5a7cd6bc51675373bcc4ae16a79e77782d510/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f7d5a7cd6bc51675373bcc4ae16a79e77782d510", "patch": "@@ -1,5 +1,7 @@\n 2009-10-08  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/rv-deduce.C: New.\n+\n \tPR c++/37177\n \t* g++.dg/cpp0x/variadic-throw.C: Adjust errors.\n \t* g++.dg/template/explicit-args2.C: New."}, {"sha": "043543631adc5b3e0c07a8a6608a8dfd2aecdcb9", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-deduce.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d5a7cd6bc51675373bcc4ae16a79e77782d510/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-deduce.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d5a7cd6bc51675373bcc4ae16a79e77782d510/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-deduce.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-deduce.C?ref=f7d5a7cd6bc51675373bcc4ae16a79e77782d510", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/36816, core issue 873\n+// { dg-options -std=c++0x }\n+\n+template <class T> void h (T&&) { }\n+\n+void (*pf)(int&)   = &h;\n+template <> void h(char&);\n+template void h(double&);"}]}