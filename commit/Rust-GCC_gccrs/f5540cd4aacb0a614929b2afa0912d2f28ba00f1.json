{"sha": "f5540cd4aacb0a614929b2afa0912d2f28ba00f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU1NDBjZDRhYWNiMGE2MTQ5MjliMmFmYTA5MTJkMmYyOGJhMDBmMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-17T01:44:03Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-17T01:44:03Z"}, "message": "flow.c (commit_one_edge_insertion): Be prepared for a return insn to be inserted on the edge with a normal jump.\n\n        * flow.c (commit_one_edge_insertion): Be prepared for a return\n        insn to be inserted on the edge with a normal jump.\n        * jump.c (jump_optimize_1): Don't look to create return isns.\n\n        * flow.c (flow_delete_insn): Don't adjust reference count of notes.\n        * jump.c (jump_optimize_1): Likewise.\n        (returnjump_p): Verify the argument is a JUMP_INSN.\n        * rtl.def (NOTE): Add 5th element for NOTE_INSN_DELETED_LABEL.\n\nFrom-SVN: r33950", "tree": {"sha": "d6bcb2f865cce1fba604f777cacacf150b20230e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6bcb2f865cce1fba604f777cacacf150b20230e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5540cd4aacb0a614929b2afa0912d2f28ba00f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5540cd4aacb0a614929b2afa0912d2f28ba00f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5540cd4aacb0a614929b2afa0912d2f28ba00f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5540cd4aacb0a614929b2afa0912d2f28ba00f1/comments", "author": null, "committer": null, "parents": [{"sha": "23568fa021aa71b8bab49c2b9fc0ed58f30b033d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23568fa021aa71b8bab49c2b9fc0ed58f30b033d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23568fa021aa71b8bab49c2b9fc0ed58f30b033d"}], "stats": {"total": 169, "additions": 91, "deletions": 78}, "files": [{"sha": "30504a9a29b49f25a6afcb49ba440f864bcb1dd5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 47, "deletions": 36, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5540cd4aacb0a614929b2afa0912d2f28ba00f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5540cd4aacb0a614929b2afa0912d2f28ba00f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5540cd4aacb0a614929b2afa0912d2f28ba00f1", "patch": "@@ -1,3 +1,14 @@\n+2000-05-16  Richard Henderson  <rth@cygnus.com>\n+\n+\t* flow.c (commit_one_edge_insertion): Be prepared for a return\n+\tinsn to be inserted on the edge with a normal jump.\n+\t* jump.c (jump_optimize_1): Don't look to create return isns.\n+\n+\t* flow.c (flow_delete_insn): Don't adjust reference count of notes.\n+\t* jump.c (jump_optimize_1): Likewise.\n+\t(returnjump_p): Verify the argument is a JUMP_INSN.\n+\t* rtl.def (NOTE): Add 5th element for NOTE_INSN_DELETED_LABEL.\n+\n 2000-05-16  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/m32r/m32r.c (small_insn_p): Use INSN_P() to replace\n@@ -307,23 +318,23 @@ Fri May 12 19:03:58 2000  Philippe De Muyter  <phdm@macqel.be>\n \n 2000-05-12  Zack Weinberg <zack@wolery.cumb.org>\n \n-        * fixinc/fixfixes.c (IO_use_fix, IO_defn_fix, CTRL_use_fix,\n-        CTRL_defn_fix): Delete.\n-        (fix_char_macro_defines, fix_char_macro_uses): Rename to\n-        char_macro_def_fix and char_macro_use_fix, respectively.  Put\n-        them into the FIXUP_TABLE.  Get the string to search for from\n-        a c_fix_arg.\n+\t* fixinc/fixfixes.c (IO_use_fix, IO_defn_fix, CTRL_use_fix,\n+\tCTRL_defn_fix): Delete.\n+\t(fix_char_macro_defines, fix_char_macro_uses): Rename to\n+\tchar_macro_def_fix and char_macro_use_fix, respectively.  Put\n+\tthem into the FIXUP_TABLE.  Get the string to search for from\n+\ta c_fix_arg.\n \n-        (format_write): New function.\n-        (format_fix): Use it.\n+\t(format_write): New function.\n+\t(format_fix): Use it.\n \n-        (FIX_PROC_HEAD): Constify text parameter.\n-        (machine_name_fix): Constify all char *s.\n-        * fixtests.c (skip_quote): Remove double static.\n+\t(FIX_PROC_HEAD): Constify text parameter.\n+\t(machine_name_fix): Constify all char *s.\n+\t* fixtests.c (skip_quote): Remove double static.\n \n-        * inclhack.def (io_def_quotes, io_use_quotes, ctrl_def_quotes,\n-        ctrl_use_quotes): Update for new scheme.\n-        * fixincl.x: Regenerate.\n+\t* inclhack.def (io_def_quotes, io_use_quotes, ctrl_def_quotes,\n+\tctrl_use_quotes): Update for new scheme.\n+\t* fixincl.x: Regenerate.\n \n 2000-05-12  Alexandre Oliva  <aoliva@cygnus.com>\n \n@@ -492,9 +503,9 @@ Wed 10 May 09:36:47 2000  Neil Booth  <NeilB@earthling.net>\n \n Wed 10 May 09:08:30 2000  Neil Booth  <NeilB@earthling.net>\n \n-        * cpplex.c (_cpp_lex_line): Maintain PREV_WHITESPACE flag\n-        when removing escaped newlines.  Reverse sense of test for\n-        escaped newline.\n+\t* cpplex.c (_cpp_lex_line): Maintain PREV_WHITESPACE flag\n+\twhen removing escaped newlines.  Reverse sense of test for\n+\tescaped newline.\n \n 2000-05-09  Richard Henderson  <rth@cygnus.com>\n \n@@ -1206,17 +1217,17 @@ Thu May  4 09:45:12 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \tMEM_COPY_ATTRIBUTES.\n \n 2000-05-03  Robert Lipe <robertlipe@usa.net>\n-        \n-        * configure.in (i[34567]86-*-isc*) [tmake_file]: Add t-i386bare\n-        to suppress libgcc1.\n-        (i[34567]86-*-sco3.2v5*) Likewise.\n-        (i[34567]86-*-sco3.2v4*) Likewise.\n-        (i[34567]86-*-sco) Likewise.\n-        (i[34567]86-*-solaris2) Likewise.\n-        (i[34567]86-*-sysv5*) Likewise.\n-        (i[34567]86-*-sysv4*) Likewise.\n-        (i[34567]86-*-udk*) Likewise.\n-        (i[34567]86-*-sysv*) Likewise.\n+\t\n+\t* configure.in (i[34567]86-*-isc*) [tmake_file]: Add t-i386bare\n+\tto suppress libgcc1.\n+\t(i[34567]86-*-sco3.2v5*) Likewise.\n+\t(i[34567]86-*-sco3.2v4*) Likewise.\n+\t(i[34567]86-*-sco) Likewise.\n+\t(i[34567]86-*-solaris2) Likewise.\n+\t(i[34567]86-*-sysv5*) Likewise.\n+\t(i[34567]86-*-sysv4*) Likewise.\n+\t(i[34567]86-*-udk*) Likewise.\n+\t(i[34567]86-*-sysv*) Likewise.\n \n 2000-05-03  Zack Weinberg  <zack@wolery.cumb.org>\n \n@@ -1242,14 +1253,14 @@ Thu May  4 09:45:12 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n Wed May  3 21:01:46 2000  Jason Eckhardt  <jle@cygnus.com>\n \n-        * bb-reorder.c (struct reorder_block_def): Member succ removed.\n-        (REORDER_BLOCK_SUCC): Removed.\n-        (enum reorder_skip_type): Removed.\n-        (skip_insns_between_block): Renamed to skip_insns_after_block.\n-        Removed second argument. Removed dead code and cleaned up.\n-        (make_reorder_chain): Removed use of REORDER_BLOCK_SUCC.\n-        (reorder_basic_blocks): Remove use of REORDER_SKIP_AFTER. Removed\n-        second parameter to skip_insns_after_block.\n+\t* bb-reorder.c (struct reorder_block_def): Member succ removed.\n+\t(REORDER_BLOCK_SUCC): Removed.\n+\t(enum reorder_skip_type): Removed.\n+\t(skip_insns_between_block): Renamed to skip_insns_after_block.\n+\tRemoved second argument. Removed dead code and cleaned up.\n+\t(make_reorder_chain): Removed use of REORDER_BLOCK_SUCC.\n+\t(reorder_basic_blocks): Remove use of REORDER_SKIP_AFTER. Removed\n+\tsecond parameter to skip_insns_after_block.\n \n Wed May  3 13:29:54 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n "}, {"sha": "e24822e8404522b71ee57fc72b166eccaac34867", "filename": "gcc/flow.c", "status": "modified", "additions": 32, "deletions": 28, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5540cd4aacb0a614929b2afa0912d2f28ba00f1/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5540cd4aacb0a614929b2afa0912d2f28ba00f1/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=f5540cd4aacb0a614929b2afa0912d2f28ba00f1", "patch": "@@ -1598,7 +1598,7 @@ static void\n commit_one_edge_insertion (e)\n      edge e;\n {\n-  rtx before = NULL_RTX, after = NULL_RTX, insns, tmp;\n+  rtx before = NULL_RTX, after = NULL_RTX, insns, tmp, last;\n   basic_block bb;\n \n   /* Pull the insns off the edge now since the edge might go away.  */\n@@ -1675,37 +1675,38 @@ commit_one_edge_insertion (e)\n       emit_insns_before (insns, before);\n       if (before == bb->head)\n \tbb->head = insns;\n+\n+      last = prev_nonnote_insn (before);\n     }\n   else\n     {\n-      rtx last = emit_insns_after (insns, after);\n+      last = emit_insns_after (insns, after);\n       if (after == bb->end)\n-\t{\n-\t  bb->end = last;\n+\tbb->end = last;\n+    }\n \n-\t  if (GET_CODE (last) == JUMP_INSN)\n-\t    {\n-\t      if (returnjump_p (last))\n-\t\t{\n-\t\t  /* ??? Remove all outgoing edges from BB and add one\n-\t\t     for EXIT.  This is not currently a problem because\n-\t\t     this only happens for the (single) epilogue, which\n-\t\t     already has a fallthru edge to EXIT.  */\n-\n-\t\t  e = bb->succ;\n-\t\t  if (e->dest != EXIT_BLOCK_PTR\n-\t\t      || e->succ_next != NULL\n-\t\t      || (e->flags & EDGE_FALLTHRU) == 0)\n-\t\t    abort ();\n-\t\t  e->flags &= ~EDGE_FALLTHRU;\n-\n-\t\t  emit_barrier_after (last);\n-\t\t}\n-\t      else\n-\t\tabort ();\n-\t    }\n-\t}\n+  if (returnjump_p (last))\n+    {\n+      /* ??? Remove all outgoing edges from BB and add one for EXIT. \n+         This is not currently a problem because this only happens\n+\t for the (single) epilogue, which already has a fallthru edge\n+\t to EXIT.  */\n+\n+      e = bb->succ;\n+      if (e->dest != EXIT_BLOCK_PTR\n+\t  || e->succ_next != NULL\n+\t  || (e->flags & EDGE_FALLTHRU) == 0)\n+\tabort ();\n+      e->flags &= ~EDGE_FALLTHRU;\n+\n+      emit_barrier_after (last);\n+      bb->end = last;\n+\n+      if (before)\n+\tflow_delete_insn (before);\n     }\n+  else if (GET_CODE (last) == JUMP_INSN)\n+    abort ();\n }\n \n /* Update the CFG for all queued instructions.  */\n@@ -2027,11 +2028,14 @@ flow_delete_insn (insn)\n \n   /* If deleting a jump, decrement the use count of the label.  Deleting\n      the label itself should happen in the normal course of block merging.  */\n-  if (GET_CODE (insn) == JUMP_INSN && JUMP_LABEL (insn))\n+  if (GET_CODE (insn) == JUMP_INSN\n+      && JUMP_LABEL (insn)\n+      && GET_CODE (JUMP_LABEL (insn)) == CODE_LABEL)\n     LABEL_NUSES (JUMP_LABEL (insn))--;\n \n   /* Also if deleting an insn that references a label.  */\n-  else if ((note = find_reg_note (insn, REG_LABEL, NULL_RTX)) != NULL_RTX)\n+  else if ((note = find_reg_note (insn, REG_LABEL, NULL_RTX)) != NULL_RTX\n+\t   && GET_CODE (XEXP (note, 0)) == CODE_LABEL)\n     LABEL_NUSES (XEXP (note, 0))--;\n \n   return next;"}, {"sha": "7f42235f4f7df13ffabba07fa8bc6b7d44a6e416", "filename": "gcc/jump.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5540cd4aacb0a614929b2afa0912d2f28ba00f1/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5540cd4aacb0a614929b2afa0912d2f28ba00f1/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=f5540cd4aacb0a614929b2afa0912d2f28ba00f1", "patch": "@@ -231,11 +231,13 @@ jump_optimize_1 (f, cross_jump, noop_moves, after_regscan,\n \n   mark_all_labels (f, cross_jump);\n \n-  /* Keep track of labels used from static data;\n-     they cannot ever be deleted.  */\n+  /* Keep track of labels used from static data; we don't track them\n+     closely enough to delete them here, so make sure their reference\n+     count doesn't drop to zero.  */\n \n   for (insn = forced_labels; insn; insn = XEXP (insn, 1))\n-    LABEL_NUSES (XEXP (insn, 0))++;\n+    if (GET_CODE (XEXP (insn, 0)) == CODE_LABEL)\n+      LABEL_NUSES (XEXP (insn, 0))++;\n \n   check_exception_handler_labels ();\n \n@@ -381,14 +383,6 @@ jump_optimize_1 (f, cross_jump, noop_moves, after_regscan,\n \t\t}\n \t    }\n \n-\t  /* If a jump references the end of the function, try to turn\n-\t     it into a RETURN insn, possibly a conditional one.  */\n-\t  if (JUMP_LABEL (insn) != 0\n-\t      && (next_active_insn (JUMP_LABEL (insn)) == 0\n-\t\t  || GET_CODE (PATTERN (next_active_insn (JUMP_LABEL (insn))))\n-\t\t      == RETURN))\n-\t    changed |= redirect_jump (insn, NULL_RTX);\n-\n \t  reallabelprev = prev_active_insn (JUMP_LABEL (insn));\n \n \t  /* Detect jump to following insn.  */\n@@ -2261,6 +2255,8 @@ int\n returnjump_p (insn)\n      rtx insn;\n {\n+  if (GET_CODE (insn) != JUMP_INSN)\n+    return 0;\n   return for_each_rtx (&PATTERN (insn), returnjump_p_1, NULL);\n }\n "}, {"sha": "1f628aac354e76ec49c5d3dc649a8db263a475cb", "filename": "gcc/rtl.def", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5540cd4aacb0a614929b2afa0912d2f28ba00f1/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5540cd4aacb0a614929b2afa0912d2f28ba00f1/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=f5540cd4aacb0a614929b2afa0912d2f28ba00f1", "patch": "@@ -421,9 +421,11 @@ DEF_RTL_EXPR(BARRIER, \"barrier\", \"iuu\", 'x')\n DEF_RTL_EXPR(CODE_LABEL, \"code_label\", \"iuu00iss\", 'x')\n      \n /* Say where in the code a source line starts, for symbol table's sake.\n-   Contains a filename and a line number.  Line numbers <= 0 are special;\n-   See enum note_insn in rtl.h.  */\n-DEF_RTL_EXPR(NOTE, \"note\", \"iuu0n\", 'x')\n+   Operand:\n+   3: filename, if line number > 0, note-specific data otherwise.\n+   4: line number if > 0, enum note_insn otherwise.\n+   5: unique number if line number == note_insn_deleted_label.  */\n+DEF_RTL_EXPR(NOTE, \"note\", \"iuu0ni\", 'x')\n \n /* ----------------------------------------------------------------------\n    Top level constituents of INSN, JUMP_INSN and CALL_INSN."}]}