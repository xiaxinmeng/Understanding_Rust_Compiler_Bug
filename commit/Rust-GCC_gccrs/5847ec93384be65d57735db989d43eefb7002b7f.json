{"sha": "5847ec93384be65d57735db989d43eefb7002b7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg0N2VjOTMzODRiZTY1ZDU3NzM1ZGI5ODlkNDNlZWZiNzAwMmI3Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-10-06T14:43:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-06T14:43:26Z"}, "message": "assign_neg.cc: Tidy dg- directives, for C++0x testing too.\n\n2011-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Tidy dg- directives,\n\tfor C++0x testing too.\n\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Likewise.\n\t* testsuite/ext/pb_ds/example/hash_resize_neg.cc: Likewise.\n\t* testsuite/24_iterators/istreambuf_iterator/requirements/\n\tbase_classes.cc: Adjust for C++0x testing.\n\t* testsuite/ext/codecvt/char-1.cc: Avoid warnings in C++0x mode.\n\t* testsuite/ext/codecvt/char-2.cc: Likewise.\n\t* testsuite/ext/codecvt/wchar_t.cc: Likewise.\n\nFrom-SVN: r179616", "tree": {"sha": "62299d4ca8b7caec31d7117f74948a4ec4d4a67c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62299d4ca8b7caec31d7117f74948a4ec4d4a67c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5847ec93384be65d57735db989d43eefb7002b7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5847ec93384be65d57735db989d43eefb7002b7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5847ec93384be65d57735db989d43eefb7002b7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5847ec93384be65d57735db989d43eefb7002b7f/comments", "author": null, "committer": null, "parents": [{"sha": "62371b9228c43790749be80ceff5d892f3b705f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62371b9228c43790749be80ceff5d892f3b705f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62371b9228c43790749be80ceff5d892f3b705f5"}], "stats": {"total": 116, "additions": 77, "deletions": 39}, "files": [{"sha": "1e35102b2012d4ddc1a93fc8af4ce680fac7fbb9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5847ec93384be65d57735db989d43eefb7002b7f", "patch": "@@ -1,3 +1,15 @@\n+2011-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Tidy dg- directives,\n+\tfor C++0x testing too.\n+\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Likewise.\n+\t* testsuite/ext/pb_ds/example/hash_resize_neg.cc: Likewise.\n+\t* testsuite/24_iterators/istreambuf_iterator/requirements/\n+\tbase_classes.cc: Adjust for C++0x testing.\n+\t* testsuite/ext/codecvt/char-1.cc: Avoid warnings in C++0x mode.\n+\t* testsuite/ext/codecvt/char-2.cc: Likewise.\n+\t* testsuite/ext/codecvt/wchar_t.cc: Likewise.\n+\n 2011-10-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/ext/pod_char_traits.h: Avoid warnings in C++0x mode"}, {"sha": "ce946f6a419ba997dbef44e170a01f0115451443", "filename": "libstdc++-v3/testsuite/24_iterators/istreambuf_iterator/requirements/base_classes.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2Frequirements%2Fbase_classes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2Frequirements%2Fbase_classes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2Frequirements%2Fbase_classes.cc?ref=5847ec93384be65d57735db989d43eefb7002b7f", "patch": "@@ -1,7 +1,8 @@\n // { dg-do compile }\n // 1999-06-28 bkoz\n \n-// Copyright (C) 1999, 2001, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2003, 2009, 2010, 2011\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,7 +32,14 @@ void test01()\n   // Check for required base class.\n   typedef istreambuf_iterator<char> test_iterator;\n   typedef char_traits<char>::off_type off_type;\n-  typedef iterator<input_iterator_tag, char, off_type, char*, char&> base_iterator;\n+\n+  typedef iterator<input_iterator_tag, char, off_type, char*,\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+    char>\n+#else\n+    char&>\n+#endif\n+    base_iterator;\n \n   istringstream isstream(\"this tag\");\n   test_iterator  r_it(isstream);"}, {"sha": "488e393d2a761f6dd2dd767dd1fd3a1b21c5f776", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/assign_neg.cc", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc?ref=5847ec93384be65d57735db989d43eefb7002b7f", "patch": "@@ -18,21 +18,18 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n #include <ios>\n \n // Library defect report\n //50.  Copy constructor and assignment operator of ios_base\n-class test_base : public std::ios_base { };\n+class test_base : public std::ios_base { }; // { dg-error \"within this context|deleted\" } \n \n void test01()\n {\n   // assign\n   test_base io1;\n   test_base io2;\n-  io1 = io2;\n+  io1 = io2; // { dg-error \"synthesized|deleted\" }\n }\n-// { dg-error \"synthesized\" \"\" { target *-*-* } 33 } \n-// { dg-error \"within this context\" \"\" { target *-*-* } 26 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 791 }\n-// { dg-error \"operator=\" \"\" { target *-*-* } 0 } \n+\n+// { dg-prune-output \"include\" }"}, {"sha": "22caadc649753a6de3a48d64d9195d91ccc50622", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/copy_neg.cc", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc?ref=5847ec93384be65d57735db989d43eefb7002b7f", "patch": "@@ -18,21 +18,18 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n #include <ios>\n \n // Library defect report\n //50.  Copy constructor and assignment operator of ios_base\n-struct test_base : public std::ios_base \n+struct test_base : public std::ios_base // { dg-error \"within this context|deleted\" }\n { };\n \n void test02()\n {\n   // copy ctor\n   test_base io1;\n-  test_base io2 = io1; \n+  test_base io2 = io1; // { dg-error \"synthesized|deleted\" } \n }\n-// { dg-error \"within this context\" \"\" { target *-*-* } 26 }\n-// { dg-error \"synthesized\" \"\" { target *-*-* } 33 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 788 } \n-// { dg-error \"copy constructor\" \"\" { target *-*-* } 0 } \n+\n+// { dg-prune-output \"include\" }"}, {"sha": "8e0d56f55a421637e1a38956d2046c65ba223583", "filename": "libstdc++-v3/testsuite/ext/codecvt/char-1.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-1.cc?ref=5847ec93384be65d57735db989d43eefb7002b7f", "patch": "@@ -4,6 +4,7 @@\n // 2000-08-22 Benjamin Kosnik <bkoz@cygnus.com>\n \n // Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// 2010, 2011\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -69,10 +70,14 @@ void test01()\n \n   char  i_lit_base[50] __attribute__((aligned(__alignof__(int_type)))) = \n   { \n-    0x00, 0x62, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x63, 0x00, 0x6b, 0x00, 0x20,\n-    0x00, 0x70, 0x00, 0x65, 0x00, 0x61, 0x00, 0x72, 0x00, 0x6c, 0x00, 0x20,\n-    0x00, 0x6a, 0x00, 0x61, 0x00, 0x73, 0x00, 0x6d, 0x00, 0x69, 0x00, 0x6e,\n-    0x00, 0x65, 0x00, 0x20, 0x00, 0x74, 0x00, 0x65, 0x00, 0x61, 0x00, 0xa0\n+    char(0x00), char(0x62), char(0x00), char(0x6c), char(0x00), char(0x61),\n+    char(0x00), char(0x63), char(0x00), char(0x6b), char(0x00), char(0x20),\n+    char(0x00), char(0x70), char(0x00), char(0x65), char(0x00), char(0x61),\n+    char(0x00), char(0x72), char(0x00), char(0x6c), char(0x00), char(0x20),\n+    char(0x00), char(0x6a), char(0x00), char(0x61), char(0x00), char(0x73),\n+    char(0x00), char(0x6d), char(0x00), char(0x69), char(0x00), char(0x6e),\n+    char(0x00), char(0x65), char(0x00), char(0x20), char(0x00), char(0x74),\n+    char(0x00), char(0x65), char(0x00), char(0x61), char(0x00), char(0xa0)\n   };\n   const int_type* \ti_lit = reinterpret_cast<int_type*>(i_lit_base);\n "}, {"sha": "81c42e25f061b108cbeb8b5e2c1d7afff1dad8c5", "filename": "libstdc++-v3/testsuite/ext/codecvt/char-2.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-2.cc?ref=5847ec93384be65d57735db989d43eefb7002b7f", "patch": "@@ -4,6 +4,7 @@\n // 2000-08-22 Benjamin Kosnik <bkoz@cygnus.com>\n \n // Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// 2010, 2011\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -69,10 +70,14 @@ void test02()\n \n   char  i_lit_base[50] __attribute__((aligned(__alignof__(int_type)))) = \n   { \n-    0x62, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x63, 0x00, 0x6b, 0x00, 0x20, 0x00,\n-    0x70, 0x00, 0x65, 0x00, 0x61, 0x00, 0x72, 0x00, 0x6c, 0x00, 0x20, 0x00,\n-    0x6a, 0x00, 0x61, 0x00, 0x73, 0x00, 0x6d, 0x00, 0x69, 0x00, 0x6e, 0x00,\n-    0x65, 0x00, 0x20, 0x00, 0x74, 0x00, 0x65, 0x00, 0x61, 0x00, 0xa0, 0x00\n+    char(0x62), char(0x00), char(0x6c), char(0x00), char(0x61), char(0x00),\n+    char(0x63), char(0x00), char(0x6b), char(0x00), char(0x20), char(0x00),\n+    char(0x70), char(0x00), char(0x65), char(0x00), char(0x61), char(0x00),\n+    char(0x72), char(0x00), char(0x6c), char(0x00), char(0x20), char(0x00),\n+    char(0x6a), char(0x00), char(0x61), char(0x00), char(0x73), char(0x00),\n+    char(0x6d), char(0x00), char(0x69), char(0x00), char(0x6e), char(0x00),\n+    char(0x65), char(0x00), char(0x20), char(0x00), char(0x74), char(0x00),\n+    char(0x65), char(0x00), char(0x61), char(0x00), char(0xa0), char(0x00)\n   };\n   const int_type* \ti_lit = reinterpret_cast<int_type*>(i_lit_base);\n "}, {"sha": "ae8e47be127367a6ad193b54406bb8da162a9600", "filename": "libstdc++-v3/testsuite/ext/codecvt/wchar_t.cc", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fwchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fwchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fwchar_t.cc?ref=5847ec93384be65d57735db989d43eefb7002b7f", "patch": "@@ -3,7 +3,8 @@\n \n // 2000-08-23 Benjamin Kosnik <bkoz@cygnus.com>\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2007, 2009 Free Software Foundation\n+// Copyright (C) 2000, 2001, 2002, 2003, 2007, 2009, 2010, 2011\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,23 +44,35 @@ void test01()\n   int \t\t\tsize = 23;\n   char  e_lit_base[96] __attribute__((aligned(__alignof__(ext_type)))) =\n   {\n-    0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x61,\n-    0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x20,\n-    0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x61,\n-    0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x20,\n-    0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x73,\n-    0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x6e,\n-    0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x74,\n-    0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0xa0     \n+    char(0x00), char(0x00), char(0x00), char(0x62), char(0x00), char(0x00),\n+    char(0x00), char(0x6c), char(0x00), char(0x00), char(0x00), char(0x61),\n+    char(0x00), char(0x00), char(0x00), char(0x63), char(0x00), char(0x00),\n+    char(0x00), char(0x6b), char(0x00), char(0x00), char(0x00), char(0x20),\n+    char(0x00), char(0x00), char(0x00), char(0x70), char(0x00), char(0x00),\n+    char(0x00), char(0x65), char(0x00), char(0x00), char(0x00), char(0x61),\n+    char(0x00), char(0x00), char(0x00), char(0x72), char(0x00), char(0x00),\n+    char(0x00), char(0x6c), char(0x00), char(0x00), char(0x00), char(0x20),\n+    char(0x00), char(0x00), char(0x00), char(0x6a), char(0x00), char(0x00),\n+    char(0x00), char(0x61), char(0x00), char(0x00), char(0x00), char(0x73),\n+    char(0x00), char(0x00), char(0x00), char(0x6d), char(0x00), char(0x00),\n+    char(0x00), char(0x69), char(0x00), char(0x00), char(0x00), char(0x6e),\n+    char(0x00), char(0x00), char(0x00), char(0x65), char(0x00), char(0x00),\n+    char(0x00), char(0x20), char(0x00), char(0x00), char(0x00), char(0x74),\n+    char(0x00), char(0x00), char(0x00), char(0x65), char(0x00), char(0x00),\n+    char(0x00), char(0x61), char(0x00), char(0x00), char(0x00), char(0xa0)     \n   };\n   const ext_type* \te_lit = reinterpret_cast<ext_type*>(e_lit_base);\n \n   char  i_lit_base[48] __attribute__((aligned(__alignof__(int_type)))) = \n   { \n-    0x00, 0x62, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x63, 0x00, 0x6b, 0x00, 0x20,\n-    0x00, 0x70, 0x00, 0x65, 0x00, 0x61, 0x00, 0x72, 0x00, 0x6c, 0x00, 0x20,\n-    0x00, 0x6a, 0x00, 0x61, 0x00, 0x73, 0x00, 0x6d, 0x00, 0x69, 0x00, 0x6e,\n-    0x00, 0x65, 0x00, 0x20, 0x00, 0x74, 0x00, 0x65, 0x00, 0x61, 0x00, 0xa0 \n+    char(0x00), char(0x62), char(0x00), char(0x6c), char(0x00), char(0x61),\n+    char(0x00), char(0x63), char(0x00), char(0x6b), char(0x00), char(0x20),\n+    char(0x00), char(0x70), char(0x00), char(0x65), char(0x00), char(0x61),\n+    char(0x00), char(0x72), char(0x00), char(0x6c), char(0x00), char(0x20),\n+    char(0x00), char(0x6a), char(0x00), char(0x61), char(0x00), char(0x73),\n+    char(0x00), char(0x6d), char(0x00), char(0x69), char(0x00), char(0x6e),\n+    char(0x00), char(0x65), char(0x00), char(0x20), char(0x00), char(0x74),\n+    char(0x00), char(0x65), char(0x00), char(0x61), char(0x00), char(0xa0) \n   };\n   const int_type* \ti_lit = reinterpret_cast<int_type*>(i_lit_base);\n "}, {"sha": "e4c922af4f2dfeb068e4fcc7bda3eff608904204", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_resize_neg.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847ec93384be65d57735db989d43eefb7002b7f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc?ref=5847ec93384be65d57735db989d43eefb7002b7f", "patch": "@@ -1,7 +1,8 @@\n // { dg-do compile }\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006, 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2009, 2010, 2011\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -60,4 +61,4 @@ int main()\n   h.resize(20); // { dg-error \"required from\" }\n }\n \n-// { dg-error \"invalid\" \"\" { target *-*-* } 187 } \n+// { dg-prune-output \"include\" }"}]}