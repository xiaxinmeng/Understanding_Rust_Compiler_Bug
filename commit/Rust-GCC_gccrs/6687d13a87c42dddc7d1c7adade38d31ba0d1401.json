{"sha": "6687d13a87c42dddc7d1c7adade38d31ba0d1401", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4N2QxM2E4N2M0MmRkZGM3ZDFjN2FkYWRlMzhkMzFiYTBkMTQwMQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-01-17T14:46:59Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-01-17T18:11:52Z"}, "message": "Rename acc_device_gcn to acc_device_radeon\n\n2020-01-17  Andrew Stubbs  <ams@codesourcery.com>\n\n\tlibgomp/\n\t* config/accel/openacc.f90 (openacc_kinds): Rename acc_device_gcn to\n\tacc_device_radeon.\n\t(openacc): Likewise.\n\t* openacc.f90 (openacc_kinds): Likewise.\n\t(openacc): Likewise.\n\t* openacc.h (acc_device_t): Likewise.\n\t* openacc_lib.h: Likewise.\n\t* testsuite/lib/libgomp.exp\n\t(check_effective_target_openacc_amdgcn_accel_present): Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-init-1.c\n\t(cb_compute_construct_end): Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c\n\t(cb_enqueue_launch_start): Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-parallel-1.c\n\t(cb_enter_data_end): Likewise.\n\t(cb_exit_data_start): Likewise.\n\t(cb_exit_data_end): Likewise.\n\t(cb_compute_construct_end): Likewise.\n\t(cb_enqueue_launch_start): Likewise.\n\t(cb_enqueue_launch_end): Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/asyncwait-nop-1.c\n\t(main): Likewise.", "tree": {"sha": "0b69051effa34310111cd194b1f6b82650ebebab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b69051effa34310111cd194b1f6b82650ebebab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6687d13a87c42dddc7d1c7adade38d31ba0d1401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6687d13a87c42dddc7d1c7adade38d31ba0d1401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6687d13a87c42dddc7d1c7adade38d31ba0d1401", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6687d13a87c42dddc7d1c7adade38d31ba0d1401/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ba6a850b597236832140bf57bf6083b6fab93f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba6a850b597236832140bf57bf6083b6fab93f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba6a850b597236832140bf57bf6083b6fab93f9"}], "stats": {"total": 59, "additions": 42, "deletions": 17}, "files": [{"sha": "24cbe04bd2f35d484ca55254bacec6cb36082ffc", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -1,3 +1,28 @@\n+2020-01-17  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/accel/openacc.f90 (openacc_kinds): Rename acc_device_gcn to\n+\tacc_device_radeon.\n+\t(openacc): Likewise.\n+\t* openacc.f90 (openacc_kinds): Likewise.\n+\t(openacc): Likewise.\n+\t* openacc.h (acc_device_t): Likewise.\n+\t* openacc_lib.h: Likewise.\n+\t* testsuite/lib/libgomp.exp\n+\t(check_effective_target_openacc_amdgcn_accel_present): Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-init-1.c\n+\t(cb_compute_construct_end): Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c\n+\t(cb_enqueue_launch_start): Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-parallel-1.c\n+\t(cb_enter_data_end): Likewise.\n+\t(cb_exit_data_start): Likewise.\n+\t(cb_exit_data_end): Likewise.\n+\t(cb_compute_construct_end): Likewise.\n+\t(cb_enqueue_launch_start): Likewise.\n+\t(cb_enqueue_launch_end): Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/asyncwait-nop-1.c\n+\t(main): Likewise.\n+\n 2020-01-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* libgomp-plugin.h (enum goacc_property): New.  Adjust all users"}, {"sha": "a8e5144349e132453ac954d7c611a2097099e608", "filename": "libgomp/config/accel/openacc.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Fconfig%2Faccel%2Fopenacc.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Fconfig%2Faccel%2Fopenacc.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Faccel%2Fopenacc.f90?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -50,7 +50,7 @@ module openacc_kinds\n   ! integer (acc_device_kind), parameter :: acc_device_host_nonshm = 3 removed.\n   integer (acc_device_kind), parameter :: acc_device_not_host = 4\n   integer (acc_device_kind), parameter :: acc_device_nvidia = 5\n-  integer (acc_device_kind), parameter :: acc_device_gcn = 8\n+  integer (acc_device_kind), parameter :: acc_device_radeon = 8\n \n end module openacc_kinds\n \n@@ -86,7 +86,7 @@ module openacc\n   ! From openacc_kinds\n   public :: acc_device_kind\n   public :: acc_device_none, acc_device_default, acc_device_host\n-  public :: acc_device_not_host, acc_device_nvidia, acc_device_gcn\n+  public :: acc_device_not_host, acc_device_nvidia, acc_device_radeon\n \n   public :: acc_on_device\n "}, {"sha": "e2639bf622ed6fa9ca00a784692dc1f007bad8e8", "filename": "libgomp/openacc.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Fopenacc.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Fopenacc.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc.f90?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -49,7 +49,7 @@ module openacc_kinds\n   ! integer (acc_device_kind), parameter :: acc_device_host_nonshm = 3 removed.\n   integer (acc_device_kind), parameter :: acc_device_not_host = 4\n   integer (acc_device_kind), parameter :: acc_device_nvidia = 5\n-  integer (acc_device_kind), parameter :: acc_device_gcn = 8\n+  integer (acc_device_kind), parameter :: acc_device_radeon = 8\n \n   integer, parameter :: acc_device_property = c_size_t\n \n@@ -767,7 +767,7 @@ module openacc\n   ! From openacc_kinds\n   public :: acc_device_kind\n   public :: acc_device_none, acc_device_default, acc_device_host\n-  public :: acc_device_not_host, acc_device_nvidia, acc_device_gcn\n+  public :: acc_device_not_host, acc_device_nvidia, acc_device_radeon\n \n   public :: acc_device_property\n   public :: acc_property_memory, acc_property_free_memory"}, {"sha": "61736463474823d513b2d75a912bfec02ed54e7c", "filename": "libgomp/openacc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Fopenacc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Fopenacc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc.h?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -56,7 +56,7 @@ typedef enum acc_device_t {\n   /* acc_device_host_nonshm = 3 removed.  */\n   acc_device_not_host = 4,\n   acc_device_nvidia = 5,\n-  acc_device_gcn = 8,\n+  acc_device_radeon = 8,\n   _ACC_device_hwm,\n   /* Ensure enumeration is layout compatible with int.  */\n   _ACC_highest = __INT_MAX__,"}, {"sha": "717f9b4ef08804ca0d336045888f730186740b10", "filename": "libgomp/openacc_lib.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Fopenacc_lib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Fopenacc_lib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc_lib.h?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -44,7 +44,7 @@\n !     removed.\n       integer (acc_device_kind), parameter :: acc_device_not_host = 4\n       integer (acc_device_kind), parameter :: acc_device_nvidia = 5\n-      integer (acc_device_kind), parameter :: acc_device_gcn = 8\n+      integer (acc_device_kind), parameter :: acc_device_radeon = 8\n \n       integer, parameter :: acc_handle_kind = 4\n "}, {"sha": "7e94527c7cae1ddcbf38020cb22301ccd6ea719b", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -489,7 +489,7 @@ proc check_effective_target_openacc_amdgcn_accel_present { } {\n     return [check_runtime openacc_amdgcn_accel_present {\n \t#include <openacc.h>\n \tint main () {\n-\treturn !(acc_get_num_devices (acc_device_gcn) > 0);\n+\treturn !(acc_get_num_devices (acc_device_radeon) > 0);\n \t}\n     } \"\" ]\n }"}, {"sha": "7d05f482f466591fc20aa9ad39ae34d3de097804", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_prof-init-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-init-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-init-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-init-1.c?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -224,7 +224,7 @@ static void cb_compute_construct_end (acc_prof_info *prof_info, acc_event_info *\n \n   if (acc_device_type == acc_device_host)\n     assert (api_info->device_api == acc_device_api_none);\n-  else if (acc_device_type == acc_device_gcn)\n+  else if (acc_device_type == acc_device_radeon)\n     assert (api_info->device_api == acc_device_api_other);\n   else\n     assert (api_info->device_api == acc_device_api_cuda);"}, {"sha": "ad33f72e2fb6b24658b54b01f83d60f5da02b6b5", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-kernels-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-kernels-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-kernels-1.c?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -106,7 +106,7 @@ static void cb_enqueue_launch_start (acc_prof_info *prof_info, acc_event_info *e\n     assert (event_info->launch_event.vector_length >= 1);\n   else if (acc_device_type == acc_device_nvidia) /* ... is special.  */\n     assert (event_info->launch_event.vector_length == 32);\n-  else if (acc_device_type == acc_device_gcn) /* ...and so is this.  */\n+  else if (acc_device_type == acc_device_radeon) /* ...and so is this.  */\n     assert (event_info->launch_event.vector_length == 64);\n   else\n     {\n@@ -120,7 +120,7 @@ static void cb_enqueue_launch_start (acc_prof_info *prof_info, acc_event_info *e\n \n   if (acc_device_type == acc_device_host)\n     assert (api_info->device_api == acc_device_api_none);\n-  else if (acc_device_type == acc_device_gcn)\n+  else if (acc_device_type == acc_device_radeon)\n     assert (api_info->device_api == acc_device_api_other);\n   else\n     assert (api_info->device_api == acc_device_api_cuda);"}, {"sha": "a5e9ab3f936fc5d32da46fc4d9c49b78d5faa13e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_prof-parallel-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-parallel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-parallel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-parallel-1.c?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -265,7 +265,7 @@ static void cb_enter_data_end (acc_prof_info *prof_info, acc_event_info *event_i\n \n   if (acc_device_type == acc_device_host)\n     assert (api_info->device_api == acc_device_api_none);\n-  else if (acc_device_type == acc_device_gcn)\n+  else if (acc_device_type == acc_device_radeon)\n     assert (api_info->device_api == acc_device_api_other);\n   else\n     assert (api_info->device_api == acc_device_api_cuda);\n@@ -321,7 +321,7 @@ static void cb_exit_data_start (acc_prof_info *prof_info, acc_event_info *event_\n \n   if (acc_device_type == acc_device_host)\n     assert (api_info->device_api == acc_device_api_none);\n-  else if (acc_device_type == acc_device_gcn)\n+  else if (acc_device_type == acc_device_radeon)\n     assert (api_info->device_api == acc_device_api_other);\n   else\n     assert (api_info->device_api == acc_device_api_cuda);\n@@ -375,7 +375,7 @@ static void cb_exit_data_end (acc_prof_info *prof_info, acc_event_info *event_in\n \n   if (acc_device_type == acc_device_host)\n     assert (api_info->device_api == acc_device_api_none);\n-  else if (acc_device_type == acc_device_gcn)\n+  else if (acc_device_type == acc_device_radeon)\n     assert (api_info->device_api == acc_device_api_other);\n   else\n     assert (api_info->device_api == acc_device_api_cuda);\n@@ -516,7 +516,7 @@ static void cb_compute_construct_end (acc_prof_info *prof_info, acc_event_info *\n \n   if (acc_device_type == acc_device_host)\n     assert (api_info->device_api == acc_device_api_none);\n-  else if (acc_device_type == acc_device_gcn)\n+  else if (acc_device_type == acc_device_radeon)\n     assert (api_info->device_api == acc_device_api_other);\n   else\n     assert (api_info->device_api == acc_device_api_cuda);\n@@ -581,7 +581,7 @@ static void cb_enqueue_launch_start (acc_prof_info *prof_info, acc_event_info *e\n \n   if (acc_device_type == acc_device_host)\n     assert (api_info->device_api == acc_device_api_none);\n-  else if (acc_device_type == acc_device_gcn)\n+  else if (acc_device_type == acc_device_radeon)\n     assert (api_info->device_api == acc_device_api_other);\n   else\n     assert (api_info->device_api == acc_device_api_cuda);\n@@ -647,7 +647,7 @@ static void cb_enqueue_launch_end (acc_prof_info *prof_info, acc_event_info *eve\n \n   if (acc_device_type == acc_device_host)\n     assert (api_info->device_api == acc_device_api_none);\n-  else if (acc_device_type == acc_device_gcn)\n+  else if (acc_device_type == acc_device_radeon)\n     assert (api_info->device_api == acc_device_api_other);\n   else\n     assert (api_info->device_api == acc_device_api_cuda);"}, {"sha": "754e015a280cc7bd94e38af1e0ba8c83652b7e2b", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/asyncwait-nop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fasyncwait-nop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6687d13a87c42dddc7d1c7adade38d31ba0d1401/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fasyncwait-nop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fasyncwait-nop-1.c?ref=6687d13a87c42dddc7d1c7adade38d31ba0d1401", "patch": "@@ -27,7 +27,7 @@ main ()\n #if defined ACC_DEVICE_TYPE_nvidia\n   d = acc_device_nvidia;\n #elif defined ACC_DEVICE_TYPE_gcn\n-  d = acc_device_gcn;\n+  d = acc_device_radeon;\n #elif defined ACC_DEVICE_TYPE_host\n   d = acc_device_host;\n #else"}]}