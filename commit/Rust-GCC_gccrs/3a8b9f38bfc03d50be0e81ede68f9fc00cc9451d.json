{"sha": "3a8b9f38bfc03d50be0e81ede68f9fc00cc9451d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E4YjlmMzhiZmMwM2Q1MGJlMGU4MWVkZTY4ZjlmYzAwY2M5NDUxZA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2005-03-15T15:58:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-15T15:58:36Z"}, "message": "checks.adb (Get_E_First_Or_Last): When the expression being retrieved is an N_Raise_Constraint_Error node...\n\n2005-03-08  Thomas Quinot  <quinot@adacore.com>\n\n\t* checks.adb (Get_E_First_Or_Last): When the expression being retrieved\n\tis an N_Raise_Constraint_Error node, create a new copy of it without\n\tgoing through a call to Duplicate_Subexpr.\n\nFrom-SVN: r96491", "tree": {"sha": "1aec1166ddef256ff7088739e1ab2fd2d869f0d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aec1166ddef256ff7088739e1ab2fd2d869f0d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a8b9f38bfc03d50be0e81ede68f9fc00cc9451d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8b9f38bfc03d50be0e81ede68f9fc00cc9451d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a8b9f38bfc03d50be0e81ede68f9fc00cc9451d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8b9f38bfc03d50be0e81ede68f9fc00cc9451d/comments", "author": null, "committer": null, "parents": [{"sha": "2ca2bc8b83f876989574ad3da8285ebf8a7728cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca2bc8b83f876989574ad3da8285ebf8a7728cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca2bc8b83f876989574ad3da8285ebf8a7728cd"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "1f66e3c43f4a837a248100f612c3ed16d74e945c", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8b9f38bfc03d50be0e81ede68f9fc00cc9451d/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8b9f38bfc03d50be0e81ede68f9fc00cc9451d/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=3a8b9f38bfc03d50be0e81ede68f9fc00cc9451d", "patch": "@@ -5775,7 +5775,17 @@ package body Checks is\n             return Get_Discriminal (E, Bound);\n \n          elsif Nkind (Bound) = N_Integer_Literal then\n-            return  Make_Integer_Literal (Loc, Intval (Bound));\n+            return Make_Integer_Literal (Loc, Intval (Bound));\n+\n+         --  Case of a bound that has been rewritten to an\n+         --  N_Raise_Constraint_Error node because it is an out-of-range\n+         --  value. We may not call Duplicate_Subexpr on this node because\n+         --  an N_Raise_Constraint_Error is not side effect free, and we may\n+         --  not assume that we are in the proper context to remove side\n+         --  effects on it at the point of reference.\n+\n+         elsif Nkind (Bound) = N_Raise_Constraint_Error then\n+            return New_Copy_Tree (Bound);\n \n          else\n             return Duplicate_Subexpr_No_Checks (Bound);"}]}