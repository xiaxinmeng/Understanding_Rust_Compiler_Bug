{"sha": "2d3f4bf73cdb878c0fee25b962b6a80113d5d80e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQzZjRiZjczY2RiODc4YzBmZWUyNWI5NjJiNmE4MDExM2Q1ZDgwZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-12-01T14:22:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-12-01T14:22:40Z"}, "message": "re PR ada/68590 (FAIL: gnat.dg/loop_optimization19.adb scan-tree-dump-not optimized \"Index_Check\")\n\n2015-12-01  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/68590\n\t* genmatch.c (struct capture_info): Add match_use_count.\n\t(capture_info::walk_match): Increment match_use_count.\n\t(dt_simplify::gen_1): For GENERIC, only wrap multi-use\n\treplacements in a save_expr if they occur more often than\n\tin the original expression.\n\nFrom-SVN: r231110", "tree": {"sha": "7f5958d775611ca021d5488bb35241a6a29cb6ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f5958d775611ca021d5488bb35241a6a29cb6ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d3f4bf73cdb878c0fee25b962b6a80113d5d80e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3f4bf73cdb878c0fee25b962b6a80113d5d80e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d3f4bf73cdb878c0fee25b962b6a80113d5d80e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3f4bf73cdb878c0fee25b962b6a80113d5d80e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb0d3b5e9b6847783c89cad56ea3d105de21c822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb0d3b5e9b6847783c89cad56ea3d105de21c822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb0d3b5e9b6847783c89cad56ea3d105de21c822"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "79d8d92700b53e0ee280d99e80bb6a23dc15b9f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3f4bf73cdb878c0fee25b962b6a80113d5d80e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3f4bf73cdb878c0fee25b962b6a80113d5d80e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d3f4bf73cdb878c0fee25b962b6a80113d5d80e", "patch": "@@ -1,3 +1,12 @@\n+2015-12-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/68590\n+\t* genmatch.c (struct capture_info): Add match_use_count.\n+\t(capture_info::walk_match): Increment match_use_count.\n+\t(dt_simplify::gen_1): For GENERIC, only wrap multi-use\n+\treplacements in a save_expr if they occur more often than\n+\tin the original expression.\n+\n 2015-12-01  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/68470"}, {"sha": "16a4f35a1c3c9201d87030070ee7903354fffc92", "filename": "gcc/genmatch.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3f4bf73cdb878c0fee25b962b6a80113d5d80e/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3f4bf73cdb878c0fee25b962b6a80113d5d80e/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=2d3f4bf73cdb878c0fee25b962b6a80113d5d80e", "patch": "@@ -1851,7 +1851,8 @@ struct capture_info\n       bool force_single_use;\n       bool cond_expr_cond_p;\n       unsigned long toplevel_msk;\n-      int result_use_count;\n+      unsigned match_use_count;\n+      unsigned result_use_count;\n       unsigned same_as;\n       capture *c;\n     };\n@@ -1901,6 +1902,7 @@ capture_info::walk_match (operand *o, unsigned toplevel_arg,\n   if (capture *c = dyn_cast <capture *> (o))\n     {\n       unsigned where = c->where;\n+      info[where].match_use_count++;\n       info[where].toplevel_msk |= 1 << toplevel_arg;\n       info[where].force_no_side_effects_p |= conditional_p;\n       info[where].cond_expr_cond_p |= cond_expr_cond_p;\n@@ -3106,13 +3108,16 @@ dt_simplify::gen_1 (FILE *f, int indent, bool gimple, operand *result)\n \t  else if (is_a <predicate_id *> (opr))\n \t    is_predicate = true;\n \t  /* Search for captures used multiple times in the result expression\n-\t     and dependent on TREE_SIDE_EFFECTS emit a SAVE_EXPR.  */\n+\t     and wrap them in a SAVE_EXPR.  Allow as many uses as in the\n+\t     original expression.  */\n \t  if (!is_predicate)\n \t    for (int i = 0; i < s->capture_max + 1; ++i)\n \t      {\n-\t\tif (cinfo.info[i].same_as != (unsigned)i)\n+\t\tif (cinfo.info[i].same_as != (unsigned)i\n+\t\t    || cinfo.info[i].cse_p)\n \t\t  continue;\n-\t\tif (cinfo.info[i].result_use_count > 1)\n+\t\tif (cinfo.info[i].result_use_count\n+\t\t    > cinfo.info[i].match_use_count)\n \t\t  fprintf_indent (f, indent,\n \t\t\t\t  \"captures[%d] = save_expr (captures[%d]);\\n\",\n \t\t\t\t  i, i);"}]}