{"sha": "73039f89508e969ed62afc147dbf43634b8530ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMwMzlmODk1MDhlOTY5ZWQ2MmFmYzE0N2RiZjQzNjM0Yjg1MzBlZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-06-11T22:08:46Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-06-11T22:08:46Z"}, "message": "2011-06-12  Tobias Burnus\n\n        PR fortran/49324\n        * trans-expr.c (gfc_trans_assignment_1): Tell\n        gfc_trans_scalar_assign to also deep-copy RHS nonvariables\n        with allocatable components.\n        * trans-array.c (gfc_conv_expr_descriptor): Ditto.\n\n2011-06-12  Tobias Burnus\n\n        PR fortran/49324\n        * gfortran.dg/alloc_comp_assign_11.f90: New.\n\nFrom-SVN: r174959", "tree": {"sha": "bf3e74879ca320489a77db39ed14056addde3126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf3e74879ca320489a77db39ed14056addde3126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73039f89508e969ed62afc147dbf43634b8530ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73039f89508e969ed62afc147dbf43634b8530ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73039f89508e969ed62afc147dbf43634b8530ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73039f89508e969ed62afc147dbf43634b8530ed/comments", "author": null, "committer": null, "parents": [{"sha": "c51b58dc1f298bc8255758a51e94d5b7478b56ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51b58dc1f298bc8255758a51e94d5b7478b56ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c51b58dc1f298bc8255758a51e94d5b7478b56ab"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "ad06808d1392af69294710a8df7a6650dbf19e88", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=73039f89508e969ed62afc147dbf43634b8530ed", "patch": "@@ -1,3 +1,11 @@\n+2011-06-12  Tobias Burnus\n+\n+\tPR fortran/49324\n+\t* trans-expr.c (gfc_trans_assignment_1): Tell\n+\tgfc_trans_scalar_assign to also deep-copy RHS nonvariables\n+\twith allocatable components.\n+\t* trans-array.c (gfc_conv_expr_descriptor): Ditto.\n+\n 2011-05-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* frontend-passes.c (optimize_assignment): Follow chains"}, {"sha": "baf9060fe6ba245759870be44eeb07fc59641ab8", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=73039f89508e969ed62afc147dbf43634b8530ed", "patch": "@@ -5808,7 +5808,8 @@ gfc_conv_expr_descriptor (gfc_se * se, gfc_expr * expr, gfc_ss * ss)\n \n       lse.string_length = rse.string_length;\n       tmp = gfc_trans_scalar_assign (&lse, &rse, expr->ts, true,\n-\t\t\t\t     expr->expr_type == EXPR_VARIABLE, true);\n+\t\t\t\t     expr->expr_type == EXPR_VARIABLE\n+\t\t\t\t     || expr->expr_type == EXPR_ARRAY, true);\n       gfc_add_expr_to_block (&block, tmp);\n \n       /* Finish the copying loops.  */"}, {"sha": "7383265783836cc88fcc50e58f96ae956983be70", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=73039f89508e969ed62afc147dbf43634b8530ed", "patch": "@@ -6155,8 +6155,8 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n \n   tmp = gfc_trans_scalar_assign (&lse, &rse, expr1->ts,\n \t\t\t\t l_is_temp || init_flag,\n-\t\t\t\t expr_is_variable (expr2) || scalar_to_array,\n-\t\t\t\t dealloc);\n+\t\t\t\t expr_is_variable (expr2) || scalar_to_array\n+\t\t\t\t || expr2->expr_type == EXPR_ARRAY, dealloc);\n   gfc_add_expr_to_block (&body, tmp);\n \n   if (lss == gfc_ss_terminator)"}, {"sha": "1440c9be6bc8f2eeebd9262bb0ee2ef9b4c6d0c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73039f89508e969ed62afc147dbf43634b8530ed", "patch": "@@ -1,3 +1,8 @@\n+2011-06-12  Tobias Burnus\n+\n+\tPR fortran/49324\n+\t* gfortran.dg/alloc_comp_assign_11.f90: New.\n+\n 2011-05-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* gfortran.dg/trim_optimize_7.f90:  New test."}, {"sha": "2d2b85b841f652755698e3869290f3f651e542a5", "filename": "gcc/testsuite/gfortran.dg/alloc_comp_assign_11.f90", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_assign_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73039f89508e969ed62afc147dbf43634b8530ed/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_assign_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_assign_11.f90?ref=73039f89508e969ed62afc147dbf43634b8530ed", "patch": "@@ -0,0 +1,41 @@\n+! { dg-do run }\n+!\n+! PR fortran/49324\n+!\n+! Check that with array constructors a deep copy is done\n+!\n+implicit none\n+type t\n+  integer, allocatable :: A(:)\n+end type t\n+\n+type(t) :: x, y\n+type(t), allocatable :: z(:), z2(:)\n+\n+allocate (x%A(2))\n+allocate (y%A(1))\n+x%A(:) = 11\n+y%A(:) = 22\n+\n+allocate (z(2))\n+\n+z = [ x, y ]\n+!print *, z(1)%a, z(2)%a, x%A, y%A\n+if (any (z(1)%a /= 11) .or. z(2)%a(1) /= 22 .or. any (x%A /= 11)  &\n+    .or. y%A(1) /= 22)  &\n+  call abort()\n+\n+x%A(:) = 444\n+y%A(:) = 555\n+\n+!print *, z(1)%a, z(2)%a, x%A, y%A\n+if (any (z(1)%a /= 11) .or. z(2)%a(1) /= 22 .or. any (x%A /= 444)  &\n+    .or. y%A(1) /= 555)  &\n+  call abort()\n+\n+z(:) = [ x, y ]\n+!print *, z(1)%a, z(2)%a, x%A, y%A\n+if (any (z(1)%a /= 444) .or. z(2)%a(1) /= 555 .or. any (x%A /= 444)  &\n+    .or. y%A(1) /= 555)  &\n+  call abort()\n+end"}]}