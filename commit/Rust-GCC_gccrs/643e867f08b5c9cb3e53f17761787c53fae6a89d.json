{"sha": "643e867f08b5c9cb3e53f17761787c53fae6a89d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQzZTg2N2YwOGI1YzljYjNlNTNmMTc3NjE3ODdjNTNmYWU2YTg5ZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-08-02T09:01:37Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-08-02T09:01:37Z"}, "message": "re PR target/47766 ([x32] -fstack-protector doesn't work)\n\n\tPR target/47766\n\t* doc/md.texi (stack_protect_set): The pattern moves ptr_mode value.\n\t(stack_protect_test): The pattern compares ptr_mode value.\n\nFrom-SVN: r177096", "tree": {"sha": "dfce53916e52f6fa83a496805848ed5e3a6d7c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfce53916e52f6fa83a496805848ed5e3a6d7c44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/643e867f08b5c9cb3e53f17761787c53fae6a89d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643e867f08b5c9cb3e53f17761787c53fae6a89d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/643e867f08b5c9cb3e53f17761787c53fae6a89d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643e867f08b5c9cb3e53f17761787c53fae6a89d/comments", "author": null, "committer": null, "parents": [{"sha": "eaba57fb0a6e78750c116ff716071f6f46a0db2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaba57fb0a6e78750c116ff716071f6f46a0db2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaba57fb0a6e78750c116ff716071f6f46a0db2c"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "55ba5b0660554526869c2423c8513b4def67c309", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643e867f08b5c9cb3e53f17761787c53fae6a89d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643e867f08b5c9cb3e53f17761787c53fae6a89d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=643e867f08b5c9cb3e53f17761787c53fae6a89d", "patch": "@@ -1,12 +1,17 @@\n+2011-08-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/47766\n+\t* doc/md.texi (stack_protect_set): The pattern moves ptr_mode value.\n+\t(stack_protect_test): The pattern compares ptr_mode value.\n+\n 2011-08-02  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_emit_prologue): Add REG_CFA_RESTORE\n \tnote for save_LR_around_toc_setup sequence.\n \n 2011-08-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n-\t* config/i386/lzcntintrin.h (__lzcnt64): Replace long with\n-\tlong long.\n+\t* config/i386/lzcntintrin.h (__lzcnt64): Replace long with long long.\n \n 2011-08-01  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Joseph Myers  <joseph@codesourcery.com>"}, {"sha": "3eae212ea3b1048067ffed7b90f208f8130f908b", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643e867f08b5c9cb3e53f17761787c53fae6a89d/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643e867f08b5c9cb3e53f17761787c53fae6a89d/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=643e867f08b5c9cb3e53f17761787c53fae6a89d", "patch": "@@ -5557,7 +5557,7 @@ will be emitted, followed by a store of the value to the memory operand.\n @cindex @code{stack_protect_set} instruction pattern\n @item @samp{stack_protect_set}\n \n-This pattern, if defined, moves a @code{Pmode} value from the memory\n+This pattern, if defined, moves a @code{ptr_mode} value from the memory\n in operand 1 to the memory in operand 0 without leaving the value in\n a register afterward.  This is to avoid leaking the value some place\n that an attacker might use to rewrite the stack guard slot after\n@@ -5568,7 +5568,7 @@ If this pattern is not defined, then a plain move pattern is generated.\n @cindex @code{stack_protect_test} instruction pattern\n @item @samp{stack_protect_test}\n \n-This pattern, if defined, compares a @code{Pmode} value from the\n+This pattern, if defined, compares a @code{ptr_mode} value from the\n memory in operand 1 with the memory in operand 0 without leaving the\n value in a register afterward and branches to operand 2 if the values\n weren't equal."}]}