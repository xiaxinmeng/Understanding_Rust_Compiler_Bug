{"sha": "7b3464eefed793556a367801d4c865f4c3423923", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IzNDY0ZWVmZWQ3OTM1NTZhMzY3ODAxZDRjODY1ZjRjMzQyMzkyMw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2003-03-17T03:47:16Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2003-03-17T03:47:16Z"}, "message": "linux64.h (TARGET_64BIT): Redefine.\n\n\t* config/rs6000/linux64.h (TARGET_64BIT): Redefine.\n\t(TARGET_RELOCATABLE, TARGET_EABI, TARGET_PROTOTYPE): Likewise.\n\t(SUBTARGET_SWITCHES, SUBTARGET_OPTIONS): Likewise.\n\t(SUBTARGET_OVERRIDE_OPTIONS, CPP_SYSV_SPEC): Likewise.\n\nFrom-SVN: r64462", "tree": {"sha": "e6da52917bd7e99619b54b1901d70f20bfc54e12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6da52917bd7e99619b54b1901d70f20bfc54e12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b3464eefed793556a367801d4c865f4c3423923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3464eefed793556a367801d4c865f4c3423923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3464eefed793556a367801d4c865f4c3423923", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3464eefed793556a367801d4c865f4c3423923/comments", "author": null, "committer": null, "parents": [{"sha": "2b7f1f8f41666dc1d921e759ca80a24846f745fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b7f1f8f41666dc1d921e759ca80a24846f745fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b7f1f8f41666dc1d921e759ca80a24846f745fe"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "45b693dec9a7c4dde22eaec97c3a3481934939a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3464eefed793556a367801d4c865f4c3423923/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3464eefed793556a367801d4c865f4c3423923/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b3464eefed793556a367801d4c865f4c3423923", "patch": "@@ -1,3 +1,10 @@\n+2003-03-17  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/linux64.h (TARGET_64BIT): Redefine.\n+\t(TARGET_RELOCATABLE, TARGET_EABI, TARGET_PROTOTYPE): Likewise.\n+\t(SUBTARGET_SWITCHES, SUBTARGET_OPTIONS): Likewise.\n+\t(SUBTARGET_OVERRIDE_OPTIONS, CPP_SYSV_SPEC): Likewise.\n+\n 2003-03-16  Richard Henderson  <rth@redhat.com>\n \n         * simplify-rtx (simplify_binary_operation): Don't abort for"}, {"sha": "14fa6ff8ff7a957a31be729fbb939a93ed204cd0", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3464eefed793556a367801d4c865f4c3423923/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3464eefed793556a367801d4c865f4c3423923/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=7b3464eefed793556a367801d4c865f4c3423923", "patch": "@@ -45,12 +45,58 @@ Boston, MA 02111-1307, USA.  */\n %{mlittle} %{mlittle-endian} %{mbig} %{mbig-endian} \\\n %{v:-V} %{Qy:} %{!Qn:-Qy} -a64 %(asm_cpu) %{Wa,*:%*}\"\n \n+/* This is always a 64 bit compiler.  */\n+#undef\tTARGET_64BIT\n+#define\tTARGET_64BIT\t\t1\n+\n /* 64-bit PowerPC Linux always has a TOC.  */\n #undef  TARGET_NO_TOC\n #define TARGET_NO_TOC\t\t0\n #undef  TARGET_TOC\n #define\tTARGET_TOC\t\t1\n \n+/* Some things from sysv4.h we don't do.  */\n+#undef\tTARGET_RELOCATABLE\n+#define\tTARGET_RELOCATABLE\t0\n+#undef\tTARGET_EABI\n+#define\tTARGET_EABI\t\t0\n+#undef\tTARGET_PROTOTYPE\n+#define\tTARGET_PROTOTYPE\t0\n+\n+/* Override sysv4.h.  */\n+#undef\tSUBTARGET_SWITCHES\n+#define SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n+  {\"bit-align\",\t-MASK_NO_BITFIELD_TYPE,\t\t\t\t\t\\\n+    N_(\"Align to the base type of the bit-field\") },\t\t\t\\\n+  {\"no-bit-align\",\t MASK_NO_BITFIELD_TYPE,\t\t\t\t\\\n+    N_(\"Don't align to the base type of the bit-field\") },\t\t\\\n+  {\"strict-align\",\t MASK_STRICT_ALIGN,\t\t\t\t\\\n+    N_(\"Don't assume that unaligned accesses are handled by the system\") }, \\\n+  {\"no-strict-align\",\t-MASK_STRICT_ALIGN,\t\t\t\t\\\n+    N_(\"Assume that unaligned accesses are handled by the system\") },\t\\\n+  {\"little-endian\",\t MASK_LITTLE_ENDIAN,\t\t\t\t\\\n+    N_(\"Produce little endian code\") },\t\t\t\t\t\\\n+  {\"little\",\t\t MASK_LITTLE_ENDIAN,\t\t\t\t\\\n+    N_(\"Produce little endian code\") },\t\t\t\t\t\\\n+  {\"big-endian\",\t-MASK_LITTLE_ENDIAN,\t\t\t\t\\\n+    N_(\"Produce big endian code\") },\t\t\t\t\t\\\n+  {\"big\",\t\t-MASK_LITTLE_ENDIAN,\t\t\t\t\\\n+    N_(\"Produce big endian code\") },\t\t\t\t\t\\\n+  {\"bit-word\",\t\t-MASK_NO_BITFIELD_WORD,\t\t\t\t\\\n+    N_(\"Allow bit-fields to cross word boundaries\") },\t\t\t\\\n+  {\"no-bit-word\",\t MASK_NO_BITFIELD_WORD,\t\t\t\t\\\n+    N_(\"Do not allow bit-fields to cross word boundaries\") },\t\t\\\n+  {\"regnames\",\t\t MASK_REGNAMES,\t\t\t\t\t\\\n+    N_(\"Use alternate register names\") },\t\t\t\t\\\n+  {\"no-regnames\",\t-MASK_REGNAMES,\t\t\t\t\t\\\n+    N_(\"Don't use alternate register names\") },\n+\n+#undef\tSUBTARGET_OPTIONS\n+#define\tSUBTARGET_OPTIONS\n+\n+#undef\tSUBTARGET_OVERRIDE_OPTIONS\n+#define\tSUBTARGET_OVERRIDE_OPTIONS {}\n+\n /* We use glibc _mcount for profiling.  */\n #define NO_PROFILE_COUNTERS 1\n #undef  PROFILE_BEFORE_PROLOGUE\n@@ -110,6 +156,10 @@ Boston, MA 02111-1307, USA.  */\n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n \n+/* Override sysv4.h  */\n+#undef\tCPP_SYSV_SPEC\n+#define\tCPP_SYSV_SPEC \"\"\n+\n #undef TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()            \\\n   do                                        \\"}]}