{"sha": "25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjViZTkxYWM3ZTEzY2U1YzJkZTYzOGI4YTVhMGM0MTkwZTVjYjBiZg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-07-24T13:23:05Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-07-24T13:23:05Z"}, "message": "PR 61876: Do not convert cast + __builtin_round into __builtin_lround unless -fno-math-errno is used.\n\n\tPR middle-end/61876\n\t* convert.c (convert_to_integer): Do not convert BUILT_IN_ROUND and cast\n\twhen flag_errno_math is on.\n\nFrom-SVN: r212989", "tree": {"sha": "212383aa1e943985b281020ae9726e957c8d9b30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/212383aa1e943985b281020ae9726e957c8d9b30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "472411664e6343a0b203e3b74740ff8a2686b625", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472411664e6343a0b203e3b74740ff8a2686b625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/472411664e6343a0b203e3b74740ff8a2686b625"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "96a8161787ddec3a2b0b863b580087a62c4f2ef2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf", "patch": "@@ -1,3 +1,9 @@\n+2014-07-24  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR middle-end/61876\n+\t* convert.c (convert_to_integer): Do not convert BUILT_IN_ROUND and cast\n+\twhen flag_errno_math is on.\n+\n 2014-07-24  Martin Liska  <mliska@suse.cz>\n \n \t* cgraph.h (varpool_node):"}, {"sha": "8dbf3cb07975981972ceb471e4ac02c74a26c6f7", "filename": "gcc/convert.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=25be91ac7e13ce5c2de638b8a5a0c4190e5cb0bf", "patch": "@@ -456,8 +456,8 @@ convert_to_integer (tree type, tree expr)\n \t  break;\n \n \tCASE_FLT_FN (BUILT_IN_ROUND):\n-\t  /* Only convert in ISO C99 mode.  */\n-\t  if (!targetm.libc_has_function (function_c99_misc))\n+\t  /* Only convert in ISO C99 mode and with -fno-math-errno.  */\n+\t  if (!targetm.libc_has_function (function_c99_misc) || flag_errno_math)\n \t    break;\n \t  if (outprec < TYPE_PRECISION (integer_type_node)\n \t      || (outprec == TYPE_PRECISION (integer_type_node)"}]}