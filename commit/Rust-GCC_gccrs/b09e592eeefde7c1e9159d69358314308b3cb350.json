{"sha": "b09e592eeefde7c1e9159d69358314308b3cb350", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA5ZTU5MmVlZWZkZTdjMWU5MTU5ZDY5MzU4MzE0MzA4YjNjYjM1MA==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2014-12-08T18:30:15Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2014-12-08T18:30:15Z"}, "message": "re PR ipa/64049 (r215898 caused wrong code at -O3)\n\n2014-12-08  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR ipa/64049\n        * ipa-polymorphic-call.c\n        (pa_polymorphic_call_context::ipa_polymorphic_call): Allow RESULT_DECL.\n\ntestsuite/ChangeLog:\n2014-12-08  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR ipa/64049\n        * g++.dg/ipa/pr64049.h: New.\n        * g++.dg/ipa/pr64049-1.C: New.\n        * g++.dg/ipa/pr64049-2.C: New.\n\nFrom-SVN: r218487", "tree": {"sha": "b0f400043660d79c135c8c83165009aa3336c15c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0f400043660d79c135c8c83165009aa3336c15c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b09e592eeefde7c1e9159d69358314308b3cb350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09e592eeefde7c1e9159d69358314308b3cb350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09e592eeefde7c1e9159d69358314308b3cb350", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09e592eeefde7c1e9159d69358314308b3cb350/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd8fc5ee0ded4801780f1998cd9025011abad152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8fc5ee0ded4801780f1998cd9025011abad152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd8fc5ee0ded4801780f1998cd9025011abad152"}], "stats": {"total": 129, "additions": 128, "deletions": 1}, "files": [{"sha": "edc26df8d153dba5dbeaf2a4db8db2150665615a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b09e592eeefde7c1e9159d69358314308b3cb350", "patch": "@@ -1,3 +1,9 @@\n+2014-12-08  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR ipa/64049\n+\t* ipa-polymorphic-call.c\n+\t(pa_polymorphic_call_context::ipa_polymorphic_call): Allow RESULT_DECL.\n+\n 2014-12-08  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* config/aarch64/aarch64.md (and_one_cmpl<mode>3_compare0_no_reuse):"}, {"sha": "bfd4bd4f0a537f45209b1df883c904c1a655556f", "filename": "gcc/ipa-polymorphic-call.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Fipa-polymorphic-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Fipa-polymorphic-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-polymorphic-call.c?ref=b09e592eeefde7c1e9159d69358314308b3cb350", "patch": "@@ -1047,7 +1047,8 @@ ipa_polymorphic_call_context::ipa_polymorphic_call_context (tree fndecl,\n \n   if (TREE_CODE (base_pointer) == SSA_NAME\n       && SSA_NAME_IS_DEFAULT_DEF (base_pointer)\n-      && TREE_CODE (SSA_NAME_VAR (base_pointer)) != PARM_DECL)\n+      && !(TREE_CODE (SSA_NAME_VAR (base_pointer)) == PARM_DECL\n+\t   || TREE_CODE (SSA_NAME_VAR (base_pointer)) == RESULT_DECL))\n     {\n       invalid = true;\n       if (instance)"}, {"sha": "f47cfccdfaf77553f8de8233c3be34e7c82555ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b09e592eeefde7c1e9159d69358314308b3cb350", "patch": "@@ -1,3 +1,10 @@\n+2014-12-08  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR ipa/64049\n+\t* g++.dg/ipa/pr64049.h: New.\n+\t* g++.dg/ipa/pr64049-1.C: New.\n+\t* g++.dg/ipa/pr64049-2.C: New.\n+\n 2014-12-08  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* gcc.target/aarch64/bics_3.c : New testcase."}, {"sha": "3b2d7b6b703695e50a67674ac6f78d5cdd061fff", "filename": "gcc/testsuite/g++.dg/ipa/pr64049-1.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64049-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64049-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64049-1.C?ref=b09e592eeefde7c1e9159d69358314308b3cb350", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-ipa-inline\" } */\n+\n+#include \"pr64049.h\"\n+\n+EnumStatusCode\n+ValueHelper::getLocalizedText (const ValueStruct* pValueStruct, LocalizedText& target)\n+{\n+\tif (pValueStruct && pValueStruct->dataType == 0 && pValueStruct->arrayType == 0)\n+\t{\n+\t\t_ASSERTION (pValueStruct->value.LocalizedText, \"Unexpected null pointer\");\n+\t\treturn LocalizedTextSet (target.getInternHandle (), pValueStruct->value.LocalizedText);\n+\t}\n+\telse\n+\t{\n+\t\treturn StatusCode::ERROR;\n+\t}\n+}\n+\n+LocalizedText\n+ValueHelper::getLocalizedText (const ValueStruct* pValueStruct)\n+{\n+\tLocalizedText returnValue;\n+\tEnumStatusCode status = getLocalizedText (pValueStruct, returnValue);\n+\t_ASSERTION (StatusCode::isSUCCEEDED (status), \"Conversion failed\");\n+\treturn returnValue;\n+}\n+\n+EnumStatusCode\n+LocalizedTextSet (LocalizedTextStruct* pTarget, LocalizedTextStruct* pSource)\n+{\n+\t__builtin_strcpy (pTarget->getT (), pSource->getT ());\n+\treturn StatusCode::SUCCESS;\n+}\n+\n+/* { dg-final { scan-ipa-dump-not \"__builtin_unreachable\" \"inline\" } } */\n+/* { dg-final { cleanup-ipa-dump \"inline\" } } */"}, {"sha": "94493753c8252f9aa7305dc9d73edb57bbf7ba08", "filename": "gcc/testsuite/g++.dg/ipa/pr64049-2.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64049-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64049-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64049-2.C?ref=b09e592eeefde7c1e9159d69358314308b3cb350", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 ${srcdir}/g++.dg/ipa/pr64049-1.C\" } */\n+\n+#include \"pr64049.h\"\n+\n+int\n+main ()\n+{\n+\tValueStruct v;\n+\tv.arrayType = 0;\n+\tv.dataType = 0;\n+\tv.value.LocalizedText = new LocalizedTextStruct (\"Localized Text\");\n+\tLocalizedText t = ValueHelper::getLocalizedText (&v);\n+\tif (__builtin_strcmp (t.getInternHandle ()->getT (), \"Localized Text\"))\n+\t\t__builtin_abort ();\n+\treturn 0;\n+}\n+\n+LocalizedTextStruct*\n+LocalizedText::getInternHandle ()\n+{\n+\treturn &t;\n+}"}, {"sha": "9e289993444ad9d338322d656b6bec2deb078d5c", "filename": "gcc/testsuite/g++.dg/ipa/pr64049.h", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64049.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09e592eeefde7c1e9159d69358314308b3cb350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64049.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64049.h?ref=b09e592eeefde7c1e9159d69358314308b3cb350", "patch": "@@ -0,0 +1,53 @@\n+#define _ASSERTION(expr, message) { if (!(expr)) __builtin_abort (); } (void)0\n+\n+typedef unsigned int EnumStatusCode;\n+\n+class StatusCode\n+{\n+public:\n+\tstatic const EnumStatusCode ERROR = 0x8000;\n+\tstatic const EnumStatusCode SUCCESS = 0x0000;\n+\tstatic bool isSUCCEEDED (EnumStatusCode res) { return (res == SUCCESS); }\n+};\n+\n+class LocalizedTextStruct\n+{\n+public:\n+\tLocalizedTextStruct () {}\n+\tLocalizedTextStruct (const char *val)\n+\t{\n+\t\t__builtin_strcpy (t, val);\n+\t}\n+\tchar *getT () { return t; }\n+private:\n+\tchar t[99];\n+};\n+\n+typedef union tagValueUnion\n+{\n+\tLocalizedTextStruct* LocalizedText;\n+} ValueStructUnion;\n+\n+typedef struct ValueStruct\n+{\n+\tunsigned char arrayType;\n+\tunsigned short dataType;\n+\tValueStructUnion value;\n+} ValueStruct;\n+\n+class LocalizedText\n+{\n+public:\n+\tvirtual LocalizedTextStruct* getInternHandle ();\n+private:\n+\tLocalizedTextStruct t;\n+};\n+\n+class ValueHelper\n+{\n+public:\n+\tstatic EnumStatusCode getLocalizedText (const ValueStruct* pValueStruct, LocalizedText& target);\n+\tstatic LocalizedText getLocalizedText (const ValueStruct* pValueStruct);\n+};\n+\n+EnumStatusCode LocalizedTextSet (LocalizedTextStruct* pTarget, LocalizedTextStruct* pSource);"}]}