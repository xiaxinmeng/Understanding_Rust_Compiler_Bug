{"sha": "7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E0ODlhMmI1NmNlYTg5MzJhMTFlODJkM2YzOGU0ZTM2OTJjN2VhZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:57:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:57:33Z"}, "message": "[multiple changes]\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* sem_attr.adb (Check_Formal_Restriction_On_Attribute): new procedure\n\tto issue an error in formal mode on attribute not supported in this mode\n\t(Analyze_Attribute): issue errors on standard attributes not supported\n\tin formal mode.\n\t* sem_ch3.adb (Modular_Type_Declaration): remove obsolete part of\n\tcomment, and issue error in formal mode on modulus which is not a power\n\tof 2.\n\t(Process_Range_Expr_In_Decl): issue error in formal mode on non-static\n\trange.\n\t* sem_ch8.adb (Find_Type): issue error in formal mode on 'Base in\n\tsubtype mark.\n\t* sem_res.adb (Resolve_Unary_Op): issue error in formal mode on unary\n\toperator on modular type (except 'not').\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Minor reformatting.\n\nFrom-SVN: r177118", "tree": {"sha": "1d033bc2b6a02567095e2cc5e92a6d0af8cabc1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d033bc2b6a02567095e2cc5e92a6d0af8cabc1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/comments", "author": null, "committer": null, "parents": [{"sha": "cb7fa356f01ab948150d228fac70a3e55575650d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7fa356f01ab948150d228fac70a3e55575650d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb7fa356f01ab948150d228fac70a3e55575650d"}], "stats": {"total": 109, "additions": 97, "deletions": 12}, "files": [{"sha": "81c84779a970cd3254ef27b604a5a90801ebd90d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "patch": "@@ -1,3 +1,23 @@\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_attr.adb (Check_Formal_Restriction_On_Attribute): new procedure\n+\tto issue an error in formal mode on attribute not supported in this mode\n+\t(Analyze_Attribute): issue errors on standard attributes not supported\n+\tin formal mode.\n+\t* sem_ch3.adb (Modular_Type_Declaration): remove obsolete part of\n+\tcomment, and issue error in formal mode on modulus which is not a power\n+\tof 2.\n+\t(Process_Range_Expr_In_Decl): issue error in formal mode on non-static\n+\trange.\n+\t* sem_ch8.adb (Find_Type): issue error in formal mode on 'Base in\n+\tsubtype mark.\n+\t* sem_res.adb (Resolve_Unary_Op): issue error in formal mode on unary\n+\toperator on modular type (except 'not').\n+\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Minor reformatting.\n+\n 2011-08-02  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-osinte-linux.ads: Minor comment update and reformatting."}, {"sha": "ce6745750c8e84667e58777461d3506835d2c463", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "patch": "@@ -9071,7 +9071,7 @@ passes the compiler in SPARK mode is rejected by the SPARK Examiner,\n e.g. due to the different visibility rules of the Examiner based on\n SPARK @code{inherit} annotations.\n \n-SPARK restriction can be useful in providing an initial filter for\n+This restriction can be useful in providing an initial filter for\n code developed using SPARK, or in examining legacy code to see how far\n it is from meeting SPARK restrictions.\n "}, {"sha": "a767a25dbe5934f078c33e0e5609cc7f9a542bfc", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 59, "deletions": 9, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "patch": "@@ -289,6 +289,9 @@ package body Sem_Attr is\n       --  Common processing for attributes Definite and Has_Discriminants.\n       --  Checks that prefix is generic indefinite formal type.\n \n+      procedure Check_Formal_Restriction_On_Attribute;\n+      --  Issue an error in formal mode because attribute N is allowed\n+\n       procedure Check_Integer_Type;\n       --  Verify that prefix of attribute N is an integer type\n \n@@ -565,14 +568,7 @@ package body Sem_Attr is\n       --  Start of processing for Analyze_Access_Attribute\n \n       begin\n-         --  Access attribute is not allowed in SPARK or ALFA\n-\n-         if Formal_Verification_Mode and then Comes_From_Source (N) then\n-            Error_Attr_P (\"|~~% attribute is not allowed\");\n-         end if;\n-\n-         --  Proceed with analysis\n-\n+         Check_Formal_Restriction_On_Attribute;\n          Check_E0;\n \n          if Nkind (P) = N_Character_Literal then\n@@ -1293,6 +1289,16 @@ package body Sem_Attr is\n          Check_E2;\n       end Check_Floating_Point_Type_2;\n \n+      -------------------------------------------\n+      -- Check_Formal_Restriction_On_Attribute --\n+      -------------------------------------------\n+\n+      procedure Check_Formal_Restriction_On_Attribute is\n+      begin\n+         Error_Msg_Name_1 := Aname;\n+         Check_Formal_Restriction (\"attribute % is not allowed\", P);\n+      end Check_Formal_Restriction_On_Attribute;\n+\n       ------------------------\n       -- Check_Integer_Type --\n       ------------------------\n@@ -2454,6 +2460,12 @@ package body Sem_Attr is\n               (\"?redundant attribute, & is its own base type\", N, Typ);\n          end if;\n \n+         if Nkind (Parent (N)) /= N_Attribute_Reference then\n+            Error_Msg_Name_1 := Aname;\n+            Check_Formal_Restriction\n+              (\"attribute% is only allowed as prefix of another attribute\", P);\n+         end if;\n+\n          Set_Etype (N, Base_Type (Entity (P)));\n          Set_Entity (N, Base_Type (Entity (P)));\n          Rewrite (N, New_Reference_To (Entity (N), Loc));\n@@ -3256,8 +3268,9 @@ package body Sem_Attr is\n \n       when Attribute_Image => Image :\n       begin\n-         Set_Etype (N, Standard_String);\n+         Check_Formal_Restriction_On_Attribute;\n          Check_Scalar_Type;\n+         Set_Etype (N, Standard_String);\n \n          if Is_Real_Type (P_Type) then\n             if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n@@ -3862,6 +3875,14 @@ package body Sem_Attr is\n       when Attribute_Pos =>\n          Check_Discrete_Type;\n          Check_E1;\n+\n+         if Is_Boolean_Type (P_Type) then\n+            Error_Msg_Name_1 := Aname;\n+            Error_Msg_Name_2 := Chars (P_Type);\n+            Check_Formal_Restriction\n+              (\"attribute% is not allowed for type%\", P);\n+         end if;\n+\n          Resolve (E1, P_Base_Type);\n          Set_Etype (N, Universal_Integer);\n \n@@ -3880,6 +3901,14 @@ package body Sem_Attr is\n       when Attribute_Pred =>\n          Check_Scalar_Type;\n          Check_E1;\n+\n+         if Is_Real_Type (P_Type) or else Is_Boolean_Type (P_Type) then\n+            Error_Msg_Name_1 := Aname;\n+            Error_Msg_Name_2 := Chars (P_Type);\n+            Check_Formal_Restriction\n+              (\"attribute% is not allowed for type%\", P);\n+         end if;\n+\n          Resolve (E1, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n@@ -4414,6 +4443,14 @@ package body Sem_Attr is\n       when Attribute_Succ =>\n          Check_Scalar_Type;\n          Check_E1;\n+\n+         if Is_Real_Type (P_Type) or else Is_Boolean_Type (P_Type) then\n+            Error_Msg_Name_1 := Aname;\n+            Error_Msg_Name_2 := Chars (P_Type);\n+            Check_Formal_Restriction\n+              (\"attribute% is not allowed for type%\", P);\n+         end if;\n+\n          Resolve (E1, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n@@ -4731,6 +4768,14 @@ package body Sem_Attr is\n       begin\n          Check_E1;\n          Check_Discrete_Type;\n+\n+         if Is_Boolean_Type (P_Type) then\n+            Error_Msg_Name_1 := Aname;\n+            Error_Msg_Name_2 := Chars (P_Type);\n+            Check_Formal_Restriction\n+              (\"attribute% is not allowed for type%\", P);\n+         end if;\n+\n          Resolve (E1, Any_Integer);\n          Set_Etype (N, P_Base_Type);\n \n@@ -4766,6 +4811,7 @@ package body Sem_Attr is\n \n       when Attribute_Value => Value :\n       begin\n+         Check_Formal_Restriction_On_Attribute;\n          Check_E1;\n          Check_Scalar_Type;\n \n@@ -4828,6 +4874,7 @@ package body Sem_Attr is\n \n       when Attribute_Wide_Image => Wide_Image :\n       begin\n+         Check_Formal_Restriction_On_Attribute;\n          Check_Scalar_Type;\n          Set_Etype (N, Standard_Wide_String);\n          Check_E1;\n@@ -4854,6 +4901,7 @@ package body Sem_Attr is\n \n       when Attribute_Wide_Value => Wide_Value :\n       begin\n+         Check_Formal_Restriction_On_Attribute;\n          Check_E1;\n          Check_Scalar_Type;\n \n@@ -4894,6 +4942,7 @@ package body Sem_Attr is\n       ----------------\n \n       when Attribute_Wide_Width =>\n+         Check_Formal_Restriction_On_Attribute;\n          Check_E0;\n          Check_Scalar_Type;\n          Set_Etype (N, Universal_Integer);\n@@ -4903,6 +4952,7 @@ package body Sem_Attr is\n       -----------\n \n       when Attribute_Width =>\n+         Check_Formal_Restriction_On_Attribute;\n          Check_E0;\n          Check_Scalar_Type;\n          Set_Etype (N, Universal_Integer);"}, {"sha": "fec4c900b709aa062c7daf9e0a5c6d3c76142682", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "patch": "@@ -584,8 +584,8 @@ package body Sem_Ch3 is\n    --  given kind of type (index constraint to an array type, for example).\n \n    procedure Modular_Type_Declaration (T : Entity_Id; Def : Node_Id);\n-   --  Create new modular type. Verify that modulus is in bounds and is\n-   --  a power of two (implementation restriction).\n+   --  Create new modular type. Verify that modulus is in bounds\n+   --  (implementation restriction).\n \n    procedure New_Concatenation_Op (Typ : Entity_Id);\n    --  Create an abbreviated declaration for an operator in order to\n@@ -16373,6 +16373,7 @@ package body Sem_Ch3 is\n          --  Non-binary case\n \n          elsif M_Val < 2 ** Bits then\n+            Check_Formal_Restriction (\"modulus should be a power of 2\", T);\n             Set_Non_Binary_Modulus (T);\n \n             if Bits > System_Max_Nonbinary_Modulus_Power then\n@@ -17768,6 +17769,10 @@ package body Sem_Ch3 is\n    begin\n       Analyze_And_Resolve (R, Base_Type (T));\n \n+      if not Is_Static_Range (R) then\n+         Check_Formal_Restriction (\"range should be static\", R);\n+      end if;\n+\n       if Nkind (R) = N_Range then\n          Lo := Low_Bound (R);\n          Hi := High_Bound (R);"}, {"sha": "5915ed21b1909268ddbde86faabf68b551065ccc", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "patch": "@@ -5827,6 +5827,10 @@ package body Sem_Ch8 is\n          --  Base attribute, not allowed in Ada 83\n \n          elsif Attribute_Name (N) = Name_Base then\n+            Error_Msg_Name_1 := Name_Base;\n+            Check_Formal_Restriction\n+              (\"attribute% is only allowed as prefix of another attribute\", N);\n+\n             if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n                Error_Msg_N\n                  (\"(Ada 83) Base attribute not allowed in subtype mark\", N);"}, {"sha": "34da37fa9f03c2f71659e88d3b0f8fd3b9876c21", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a489a2b56cea8932a11e82d3f38e4e3692c7ead/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=7a489a2b56cea8932a11e82d3f38e4e3692c7ead", "patch": "@@ -9292,6 +9292,12 @@ package body Sem_Res is\n       Hi    : Uint;\n \n    begin\n+      if Is_Modular_Integer_Type (Typ) and then Nkind (N) /= N_Op_Not then\n+         Error_Msg_Name_1 := Chars (Typ);\n+         Check_Formal_Restriction\n+           (\"unary operator not defined for modular type%\", N);\n+      end if;\n+\n       --  Deal with intrinsic unary operators\n \n       if Comes_From_Source (N)"}]}