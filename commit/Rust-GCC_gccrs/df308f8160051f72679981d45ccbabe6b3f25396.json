{"sha": "df308f8160051f72679981d45ccbabe6b3f25396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYzMDhmODE2MDA1MWY3MjY3OTk4MWQ0NWNjYmFiZTZiM2YyNTM5Ng==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-08-27T13:46:32Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-08-27T13:46:32Z"}, "message": "diagnostics: show an extra line of context in line-insertion fix-it hints (PR 87091)\n\nThis patch tweaks how we print line-insertion fix-it hints, so that\nthe line before the insertion point is also printed, to give the user\nmore context on the proposed change.\n\nFor example, it changes:\n\n  ../x86_64-pc-linux-gnu/libstdc++-v3/include/vector:87:22: note: message\n  +++ |+#include <vector>\n   74 | #endif\n  ....\n   87 |       using vector = std::vector<_Tp, polymorphic_allocator<_Tp>>;\n      |                      ^~~\n\nto:\n\n  ../x86_64-pc-linux-gnu/libstdc++-v3/include/vector:87:22: note: message\n   73 | # include <debug/vector>\n  +++ |+#include <vector>\n   74 | #endif\n  ....\n   87 |       using vector = std::vector<_Tp, polymorphic_allocator<_Tp>>;\n      |                      ^~~\n\ngcc/ChangeLog:\n\tPR 87091\n\t* diagnostic-show-locus.c (get_line_span_for_fixit_hint): Show the\n\tline above for line-insertion fix-it hints.\n\t(selftest::test_fixit_insert_containing_newline): Update the\n\texpected results, and add a test with line-numbering enabled.\n\ngcc/testsuite/ChangeLog:\n\tPR 87091\n\t* g++.dg/pr85523.C: Extend expected output to show line\n\tbefore line-insertion fix-it hint.\n\t* gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers.c\n\t(test_fixit_insert_newline): Add previous line to expected output.\n\t* gcc.dg/plugin/diagnostic-test-show-locus-bw.c: Likewise.\n\t* gcc.dg/plugin/diagnostic-test-show-locus-color.c: Likewise.\n\nFrom-SVN: r263884", "tree": {"sha": "28d1a7f90410f9f92679a6260c322d0dc2d61070", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28d1a7f90410f9f92679a6260c322d0dc2d61070"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df308f8160051f72679981d45ccbabe6b3f25396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df308f8160051f72679981d45ccbabe6b3f25396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df308f8160051f72679981d45ccbabe6b3f25396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df308f8160051f72679981d45ccbabe6b3f25396/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c3496bf898e9dfe12799ef6e31ae9b9211c63d"}], "stats": {"total": 67, "additions": 59, "deletions": 8}, "files": [{"sha": "f3ee5cf877304b8707c6122629cd286cb2298b2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df308f8160051f72679981d45ccbabe6b3f25396", "patch": "@@ -1,3 +1,11 @@\n+2018-08-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR 87091\n+\t* diagnostic-show-locus.c (get_line_span_for_fixit_hint): Show the\n+\tline above for line-insertion fix-it hints.\n+\t(selftest::test_fixit_insert_containing_newline): Update the\n+\texpected results, and add a test with line-numbering enabled.\n+\n 2018-08-27  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/86962"}, {"sha": "d305ada14566fe3ebd894b0c0555007fb9214162", "filename": "gcc/diagnostic-show-locus.c", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Fdiagnostic-show-locus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Fdiagnostic-show-locus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-show-locus.c?ref=df308f8160051f72679981d45ccbabe6b3f25396", "patch": "@@ -1159,7 +1159,16 @@ static line_span\n get_line_span_for_fixit_hint (const fixit_hint *hint)\n {\n   gcc_assert (hint);\n-  return line_span (LOCATION_LINE (hint->get_start_loc ()),\n+\n+  int start_line = LOCATION_LINE (hint->get_start_loc ());\n+\n+  /* For line-insertion fix-it hints, add the previous line to the\n+     span, to give the user more context on the proposed change.  */\n+  if (hint->ends_with_newline_p ())\n+    if (start_line > 1)\n+      start_line--;\n+\n+  return line_span (start_line,\n \t\t    LOCATION_LINE (hint->get_next_loc ()));\n }\n \n@@ -3479,13 +3488,31 @@ test_fixit_insert_containing_newline (const line_table_case &case_)\n   {\n     rich_location richloc (line_table, case_loc);\n     richloc.add_fixit_insert_before (line_start, \"      break;\\n\");\n-    test_diagnostic_context dc;\n-    diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n-    ASSERT_STREQ (\"\\n\"\n-\t\t  \"+      break;\\n\"\n-\t\t  \"     case 'b':\\n\"\n-\t\t  \"     ^~~~~~~~~\\n\",\n-\t\t  pp_formatted_text (dc.printer));\n+\n+    /* Without line numbers.  */\n+    {\n+      test_diagnostic_context dc;\n+      diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n+      ASSERT_STREQ (\"\\n\"\n+\t\t    \"       x = a;\\n\"\n+\t\t    \"+      break;\\n\"\n+\t\t    \"     case 'b':\\n\"\n+\t\t    \"     ^~~~~~~~~\\n\",\n+\t\t    pp_formatted_text (dc.printer));\n+    }\n+\n+    /* With line numbers.  */\n+    {\n+      test_diagnostic_context dc;\n+      dc.show_line_numbers_p = true;\n+      diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n+      ASSERT_STREQ (\"\\n\"\n+\t\t    \"2 |       x = a;\\n\"\n+\t\t    \"+ |+      break;\\n\"\n+\t\t    \"3 |     case 'b':\\n\"\n+\t\t    \"  |     ^~~~~~~~~\\n\",\n+\t\t    pp_formatted_text (dc.printer));\n+    }\n   }\n \n   /* Verify that attempts to add text with a newline fail when the"}, {"sha": "24e2047e268b715206bd40379f33c628b7715df6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df308f8160051f72679981d45ccbabe6b3f25396", "patch": "@@ -1,3 +1,13 @@\n+2018-08-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR 87091\n+\t* g++.dg/pr85523.C: Extend expected output to show line\n+\tbefore line-insertion fix-it hint.\n+\t* gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers.c\n+\t(test_fixit_insert_newline): Add previous line to expected output.\n+\t* gcc.dg/plugin/diagnostic-test-show-locus-bw.c: Likewise.\n+\t* gcc.dg/plugin/diagnostic-test-show-locus-color.c: Likewise.\n+\n 2018-08-27  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/86962"}, {"sha": "0ed16ff18cdd0437102bdc2f97a870105702ec3a", "filename": "gcc/testsuite/g++.dg/pr85523.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr85523.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr85523.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr85523.C?ref=df308f8160051f72679981d45ccbabe6b3f25396", "patch": "@@ -47,6 +47,7 @@ struct s5 {\n     i = z.i;\n   } // { dg-warning \"no return statement in function returning non-void\" }\n   /* { dg-begin-multiline-output \"\" }\n+     i = z.i;\n +    return *this;\n    }\n    ^\n@@ -63,6 +64,7 @@ struct s6 {\n     i = z.i;\n   } // { dg-warning \"no return statement in function returning non-void\" }\n   /* { dg-begin-multiline-output \"\" }\n+     i = z.i;\n +    return *this;\n    }\n    ^\n@@ -81,6 +83,7 @@ struct s7 {\n     i = z.i;\n   } // { dg-warning \"no return statement in function returning non-void\" }\n   /* { dg-begin-multiline-output \"\" }\n+     i = z.i;\n +    return *this;\n    }\n    ^"}, {"sha": "63e585528faae686918a765be2a87567388027c8", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers.c?ref=df308f8160051f72679981d45ccbabe6b3f25396", "patch": "@@ -111,6 +111,7 @@ void test_fixit_insert_newline (void)\n       x = b;\n     }\n /* { dg-begin-multiline-output \"\" }\n+109 |       x = a;\n +++ |+      break;\n 110 |     case 'b':\n     |     ^~~~~~~~"}, {"sha": "be6f103ba6a26054817b94ad127434fb41113a62", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-show-locus-bw.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw.c?ref=df308f8160051f72679981d45ccbabe6b3f25396", "patch": "@@ -332,6 +332,7 @@ void test_fixit_insert_newline (void)\n       x = b;\n     }\n /* { dg-begin-multiline-output \"\" }\n+       x = a;\n +      break;\n      case 'b':\n      ^~~~~~~~"}, {"sha": "7ae38019ffd45d4732e29856dccd48a4a0b84361", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-show-locus-color.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df308f8160051f72679981d45ccbabe6b3f25396/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-color.c?ref=df308f8160051f72679981d45ccbabe6b3f25396", "patch": "@@ -217,6 +217,7 @@ void test_fixit_insert_newline (void)\n       x = b;\n     }\n /* { dg-begin-multiline-output \"\" }\n+       x = a;\n +\u001b[32m\u001b[K      break;\u001b[m\u001b[K\n      \u001b[01;35m\u001b[Kcase 'b'\u001b[m\u001b[K:\n      \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K"}]}