{"sha": "4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI3MWU1Y2IwZDBkM2VmMWE4OGNmODIwYzNjMGMwMjg1NThmYmQ1NA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-08-14T11:24:18Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-08-14T11:24:18Z"}, "message": "re PR target/76342 (AVX512: _mm512_undefined_epi32() intrinsic missing (incorrectly named _mm512_undefined_si512))\n\n\tPR target/76342\n\t* config/i386/avx512fintrin.h (_mm512_undefined_epi32):\n\tRenamed from _mm512_undefined_si512.\n\t(_mm_undefined_si512): New definition.\n\ntestsuite/ChangeLog:\n\n\tPR target/76342\n\t* gcc.target/i386/pr76342.c: New test.\n\nFrom-SVN: r239453", "tree": {"sha": "b0d48f502c50d5284ab105826a35d91b2134cf1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0d48f502c50d5284ab105826a35d91b2134cf1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "deea3a21a812f202b8a6dd59004dea2eb947429c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deea3a21a812f202b8a6dd59004dea2eb947429c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deea3a21a812f202b8a6dd59004dea2eb947429c"}], "stats": {"total": 263, "additions": 142, "deletions": 121}, "files": [{"sha": "ac4732e336654430e9faee3125c228952a522801", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "patch": "@@ -1,3 +1,10 @@\n+2016-08-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/76342\n+\t* config/i386/avx512fintrin.h (_mm512_undefined_epi32):\n+\tRenamed from _mm512_undefined_si512.\n+\t(_mm_undefined_si512): New definition.\n+\n 2016-08-13  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-forwprop.c (pass_forwprop::execute): Propagate"}, {"sha": "16a381eefee7ca8429ad5108340c58457d22b590", "filename": "gcc/config/i386/avx512bwintrin.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h?ref=4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "patch": "@@ -270,9 +270,8 @@ __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_broadcastb_epi8 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pbroadcastb512_mask ((__v16qi) __A,\n-\t\t\t\t\t\t       (__v64qi)_mm512_undefined_si512(),\n-\t\t\t\t\t\t       (__mmask64) -\n-\t\t\t\t\t\t       1);\n+\t\t\t\t\t\t       (__v64qi)_mm512_undefined_epi32(),\n+\t\t\t\t\t\t       (__mmask64) -1);\n }\n \n extern __inline __m512i\n@@ -318,8 +317,8 @@ __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_broadcastw_epi16 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pbroadcastw512_mask ((__v8hi) __A,\n-\t\t\t\t\t\t       (__v32hi)_mm512_undefined_si512(),\n-\t\t\t\t\t\t       (__mmask32)-1);\n+\t\t\t\t\t\t       (__v32hi)_mm512_undefined_epi32(),\n+\t\t\t\t\t\t       (__mmask32) -1);\n }\n \n extern __inline __m512i"}, {"sha": "36377254031e7d02cad65174ec08710e3b35eb7b", "filename": "gcc/config/i386/avx512dqintrin.h", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h?ref=4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "patch": "@@ -72,9 +72,8 @@ _mm512_broadcast_i64x2 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_broadcasti64x2_512_mask ((__v2di)\n \t\t\t\t\t\t\t   __A,\n-\t\t\t\t\t\t\t   _mm512_undefined_si512(),\n-\t\t\t\t\t\t\t   (__mmask8) -\n-\t\t\t\t\t\t\t   1);\n+\t\t\t\t\t\t\t   _mm512_undefined_epi32(),\n+\t\t\t\t\t\t\t   (__mmask8) -1);\n }\n \n extern __inline __m512i\n@@ -133,9 +132,8 @@ _mm512_broadcast_i32x2 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_broadcasti32x2_512_mask ((__v4si)\n \t\t\t\t\t\t\t   __A,\n-\t\t\t\t\t\t\t   (__v16si)_mm512_undefined_si512(),\n-\t\t\t\t\t\t\t   (__mmask16)\n-\t\t\t\t\t\t\t   -1);\n+\t\t\t\t\t\t\t   (__v16si)_mm512_undefined_epi32(),\n+\t\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline __m512i\n@@ -194,9 +192,8 @@ _mm512_broadcast_i32x8 (__m256i __A)\n {\n   return (__m512i) __builtin_ia32_broadcasti32x8_512_mask ((__v8si)\n \t\t\t\t\t\t\t   __A,\n-\t\t\t\t\t\t\t   (__v16si)_mm512_undefined_si512(),\n-\t\t\t\t\t\t\t   (__mmask16)\n-\t\t\t\t\t\t\t   -1);\n+\t\t\t\t\t\t\t   (__v16si)_mm512_undefined_epi32(),\n+\t\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline __m512i"}, {"sha": "ec8aa77a3bdca09a9d12f2498c56098480ae8745", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 107, "deletions": 105, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "patch": "@@ -130,12 +130,14 @@ _mm512_undefined_pd (void)\n \n extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_undefined_si512 (void)\n+_mm512_undefined_epi32 (void)\n {\n   __m512i __Y = __Y;\n   return __Y;\n }\n \n+#define _mm512_undefined_si512 _mm512_undefined_epi32\n+\n extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_set1_epi8 (char __A)\n@@ -549,7 +551,7 @@ _mm512_sllv_epi32 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_psllv16si_mask ((__v16si) __X,\n \t\t\t\t\t\t  (__v16si) __Y,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -581,7 +583,7 @@ _mm512_srav_epi32 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_psrav16si_mask ((__v16si) __X,\n \t\t\t\t\t\t  (__v16si) __Y,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -613,7 +615,7 @@ _mm512_srlv_epi32 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_psrlv16si_mask ((__v16si) __X,\n \t\t\t\t\t\t  (__v16si) __Y,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -733,7 +735,7 @@ _mm512_srav_epi64 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_psrav8di_mask ((__v8di) __X,\n \t\t\t\t\t\t (__v8di) __Y,\n \t\t\t\t\t\t (__v8di)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask8) -1);\n }\n \n@@ -765,7 +767,7 @@ _mm512_srlv_epi64 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_psrlv8di_mask ((__v8di) __X,\n \t\t\t\t\t\t (__v8di) __Y,\n \t\t\t\t\t\t (__v8di)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask8) -1);\n }\n \n@@ -825,7 +827,7 @@ _mm512_mul_epi32 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_pmuldq512_mask ((__v16si) __X,\n \t\t\t\t\t\t  (__v16si) __Y,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -884,7 +886,7 @@ _mm512_mul_epu32 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_pmuludq512_mask ((__v16si) __X,\n \t\t\t\t\t\t   (__v16si) __Y,\n \t\t\t\t\t\t   (__v8di)\n-\t\t\t\t\t\t   _mm512_undefined_si512 (),\n+\t\t\t\t\t\t   _mm512_undefined_epi32 (),\n \t\t\t\t\t\t   (__mmask8) -1);\n }\n \n@@ -915,7 +917,7 @@ _mm512_slli_epi64 (__m512i __A, unsigned int __B)\n {\n   return (__m512i) __builtin_ia32_psllqi512_mask ((__v8di) __A, __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -941,7 +943,7 @@ _mm512_maskz_slli_epi64 (__mmask8 __U, __m512i __A, unsigned int __B)\n #else\n #define _mm512_slli_epi64(X, C)\t\t\t\t\t\t   \\\n   ((__m512i) __builtin_ia32_psllqi512_mask ((__v8di)(__m512i)(X), (int)(C),\\\n-    (__v8di)(__m512i)_mm512_undefined_si512 (),\\\n+    (__v8di)(__m512i)_mm512_undefined_epi32 (),\\\n     (__mmask8)-1))\n \n #define _mm512_mask_slli_epi64(W, U, X, C)\t\t\t\t   \\\n@@ -962,7 +964,7 @@ _mm512_sll_epi64 (__m512i __A, __m128i __B)\n   return (__m512i) __builtin_ia32_psllq512_mask ((__v8di) __A,\n \t\t\t\t\t\t (__v2di) __B,\n \t\t\t\t\t\t (__v8di)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask8) -1);\n }\n \n@@ -994,7 +996,7 @@ _mm512_srli_epi64 (__m512i __A, unsigned int __B)\n {\n   return (__m512i) __builtin_ia32_psrlqi512_mask ((__v8di) __A, __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -1020,7 +1022,7 @@ _mm512_maskz_srli_epi64 (__mmask8 __U, __m512i __A, unsigned int __B)\n #else\n #define _mm512_srli_epi64(X, C)\t\t\t\t\t\t   \\\n   ((__m512i) __builtin_ia32_psrlqi512_mask ((__v8di)(__m512i)(X), (int)(C),\\\n-    (__v8di)(__m512i)_mm512_undefined_si512 (),\\\n+    (__v8di)(__m512i)_mm512_undefined_epi32 (),\\\n     (__mmask8)-1))\n \n #define _mm512_mask_srli_epi64(W, U, X, C)\t\t\t\t   \\\n@@ -1041,7 +1043,7 @@ _mm512_srl_epi64 (__m512i __A, __m128i __B)\n   return (__m512i) __builtin_ia32_psrlq512_mask ((__v8di) __A,\n \t\t\t\t\t\t (__v2di) __B,\n \t\t\t\t\t\t (__v8di)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask8) -1);\n }\n \n@@ -1073,7 +1075,7 @@ _mm512_srai_epi64 (__m512i __A, unsigned int __B)\n {\n   return (__m512i) __builtin_ia32_psraqi512_mask ((__v8di) __A, __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -1099,7 +1101,7 @@ _mm512_maskz_srai_epi64 (__mmask8 __U, __m512i __A, unsigned int __B)\n #else\n #define _mm512_srai_epi64(X, C)\t\t\t\t\t\t   \\\n   ((__m512i) __builtin_ia32_psraqi512_mask ((__v8di)(__m512i)(X), (int)(C),\\\n-    (__v8di)(__m512i)_mm512_undefined_si512 (),\\\n+    (__v8di)(__m512i)_mm512_undefined_epi32 (),\\\n     (__mmask8)-1))\n \n #define _mm512_mask_srai_epi64(W, U, X, C)\t\t\t\t   \\\n@@ -1120,7 +1122,7 @@ _mm512_sra_epi64 (__m512i __A, __m128i __B)\n   return (__m512i) __builtin_ia32_psraq512_mask ((__v8di) __A,\n \t\t\t\t\t\t (__v2di) __B,\n \t\t\t\t\t\t (__v8di)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask8) -1);\n }\n \n@@ -1152,7 +1154,7 @@ _mm512_slli_epi32 (__m512i __A, unsigned int __B)\n {\n   return (__m512i) __builtin_ia32_pslldi512_mask ((__v16si) __A, __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -1178,7 +1180,7 @@ _mm512_maskz_slli_epi32 (__mmask16 __U, __m512i __A, unsigned int __B)\n #else\n #define _mm512_slli_epi32(X, C)\t\t\t\t\t\t    \\\n   ((__m512i) __builtin_ia32_pslldi512_mask ((__v16si)(__m512i)(X), (int)(C),\\\n-    (__v16si)(__m512i)_mm512_undefined_si512 (),\\\n+    (__v16si)(__m512i)_mm512_undefined_epi32 (),\\\n     (__mmask16)-1))\n \n #define _mm512_mask_slli_epi32(W, U, X, C)                                  \\\n@@ -1199,7 +1201,7 @@ _mm512_sll_epi32 (__m512i __A, __m128i __B)\n   return (__m512i) __builtin_ia32_pslld512_mask ((__v16si) __A,\n \t\t\t\t\t\t (__v4si) __B,\n \t\t\t\t\t\t (__v16si)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask16) -1);\n }\n \n@@ -1231,7 +1233,7 @@ _mm512_srli_epi32 (__m512i __A, unsigned int __B)\n {\n   return (__m512i) __builtin_ia32_psrldi512_mask ((__v16si) __A, __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -1257,7 +1259,7 @@ _mm512_maskz_srli_epi32 (__mmask16 __U, __m512i __A, unsigned int __B)\n #else\n #define _mm512_srli_epi32(X, C)\t\t\t\t\t\t    \\\n   ((__m512i) __builtin_ia32_psrldi512_mask ((__v16si)(__m512i)(X), (int)(C),\\\n-    (__v16si)(__m512i)_mm512_undefined_si512 (),\\\n+    (__v16si)(__m512i)_mm512_undefined_epi32 (),\\\n     (__mmask16)-1))\n \n #define _mm512_mask_srli_epi32(W, U, X, C)                                  \\\n@@ -1278,7 +1280,7 @@ _mm512_srl_epi32 (__m512i __A, __m128i __B)\n   return (__m512i) __builtin_ia32_psrld512_mask ((__v16si) __A,\n \t\t\t\t\t\t (__v4si) __B,\n \t\t\t\t\t\t (__v16si)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask16) -1);\n }\n \n@@ -1310,7 +1312,7 @@ _mm512_srai_epi32 (__m512i __A, unsigned int __B)\n {\n   return (__m512i) __builtin_ia32_psradi512_mask ((__v16si) __A, __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -1336,7 +1338,7 @@ _mm512_maskz_srai_epi32 (__mmask16 __U, __m512i __A, unsigned int __B)\n #else\n #define _mm512_srai_epi32(X, C)\t\t\t\t\t\t    \\\n   ((__m512i) __builtin_ia32_psradi512_mask ((__v16si)(__m512i)(X), (int)(C),\\\n-    (__v16si)(__m512i)_mm512_undefined_si512 (),\\\n+    (__v16si)(__m512i)_mm512_undefined_epi32 (),\\\n     (__mmask16)-1))\n \n #define _mm512_mask_srai_epi32(W, U, X, C)\t\t\t\t    \\\n@@ -1357,7 +1359,7 @@ _mm512_sra_epi32 (__m512i __A, __m128i __B)\n   return (__m512i) __builtin_ia32_psrad512_mask ((__v16si) __A,\n \t\t\t\t\t\t (__v4si) __B,\n \t\t\t\t\t\t (__v16si)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask16) -1);\n }\n \n@@ -1778,7 +1780,7 @@ _mm512_cvtepi8_epi32 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pmovsxbd512_mask ((__v16qi) __A,\n \t\t\t\t\t\t    (__v16si)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask16) -1);\n }\n \n@@ -1807,7 +1809,7 @@ _mm512_cvtepi8_epi64 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pmovsxbq512_mask ((__v16qi) __A,\n \t\t\t\t\t\t    (__v8di)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask8) -1);\n }\n \n@@ -1836,7 +1838,7 @@ _mm512_cvtepi16_epi32 (__m256i __A)\n {\n   return (__m512i) __builtin_ia32_pmovsxwd512_mask ((__v16hi) __A,\n \t\t\t\t\t\t    (__v16si)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask16) -1);\n }\n \n@@ -1865,7 +1867,7 @@ _mm512_cvtepi16_epi64 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pmovsxwq512_mask ((__v8hi) __A,\n \t\t\t\t\t\t    (__v8di)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask8) -1);\n }\n \n@@ -1894,7 +1896,7 @@ _mm512_cvtepi32_epi64 (__m256i __X)\n {\n   return (__m512i) __builtin_ia32_pmovsxdq512_mask ((__v8si) __X,\n \t\t\t\t\t\t    (__v8di)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask8) -1);\n }\n \n@@ -1923,7 +1925,7 @@ _mm512_cvtepu8_epi32 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pmovzxbd512_mask ((__v16qi) __A,\n \t\t\t\t\t\t    (__v16si)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask16) -1);\n }\n \n@@ -1952,7 +1954,7 @@ _mm512_cvtepu8_epi64 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pmovzxbq512_mask ((__v16qi) __A,\n \t\t\t\t\t\t    (__v8di)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask8) -1);\n }\n \n@@ -1981,7 +1983,7 @@ _mm512_cvtepu16_epi32 (__m256i __A)\n {\n   return (__m512i) __builtin_ia32_pmovzxwd512_mask ((__v16hi) __A,\n \t\t\t\t\t\t    (__v16si)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask16) -1);\n }\n \n@@ -2010,7 +2012,7 @@ _mm512_cvtepu16_epi64 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pmovzxwq512_mask ((__v8hi) __A,\n \t\t\t\t\t\t    (__v8di)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask8) -1);\n }\n \n@@ -2039,7 +2041,7 @@ _mm512_cvtepu32_epi64 (__m256i __X)\n {\n   return (__m512i) __builtin_ia32_pmovzxdq512_mask ((__v8si) __X,\n \t\t\t\t\t\t    (__v8di)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask8) -1);\n }\n \n@@ -3407,7 +3409,7 @@ _mm512_abs_epi64 (__m512i __A)\n {\n   return (__m512i) __builtin_ia32_pabsq512_mask ((__v8di) __A,\n \t\t\t\t\t\t (__v8di)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask8) -1);\n }\n \n@@ -3436,7 +3438,7 @@ _mm512_abs_epi32 (__m512i __A)\n {\n   return (__m512i) __builtin_ia32_pabsd512_mask ((__v16si) __A,\n \t\t\t\t\t\t (__v16si)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask16) -1);\n }\n \n@@ -3521,7 +3523,7 @@ _mm512_broadcastd_epi32 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pbroadcastd512 ((__v4si) __A,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -3549,7 +3551,7 @@ _mm512_set1_epi32 (int __A)\n {\n   return (__m512i) __builtin_ia32_pbroadcastd512_gpr_mask (__A,\n \t\t\t\t\t\t\t   (__v16si)\n-\t\t\t\t\t\t\t   _mm512_undefined_si512 (),\n+\t\t\t\t\t\t\t   _mm512_undefined_epi32 (),\n \t\t\t\t\t\t\t   (__mmask16)(-1));\n }\n \n@@ -3577,7 +3579,7 @@ _mm512_broadcastq_epi64 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_pbroadcastq512 ((__v2di) __A,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -3605,7 +3607,7 @@ _mm512_set1_epi64 (long long __A)\n {\n   return (__m512i) __builtin_ia32_pbroadcastq512_gpr_mask (__A,\n \t\t\t\t\t\t\t   (__v8di)\n-\t\t\t\t\t\t\t   _mm512_undefined_si512 (),\n+\t\t\t\t\t\t\t   _mm512_undefined_epi32 (),\n \t\t\t\t\t\t\t   (__mmask8)(-1));\n }\n \n@@ -3662,7 +3664,7 @@ _mm512_broadcast_i32x4 (__m128i __A)\n {\n   return (__m512i) __builtin_ia32_broadcasti32x4_512 ((__v4si) __A,\n \t\t\t\t\t\t      (__v16si)\n-\t\t\t\t\t\t      _mm512_undefined_si512 (),\n+\t\t\t\t\t\t      _mm512_undefined_epi32 (),\n \t\t\t\t\t\t      (__mmask16) -1);\n }\n \n@@ -3720,7 +3722,7 @@ _mm512_broadcast_i64x4 (__m256i __A)\n {\n   return (__m512i) __builtin_ia32_broadcasti64x4_512 ((__v4di) __A,\n \t\t\t\t\t\t      (__v8di)\n-\t\t\t\t\t\t      _mm512_undefined_si512 (),\n+\t\t\t\t\t\t      _mm512_undefined_epi32 (),\n \t\t\t\t\t\t      (__mmask8) -1);\n }\n \n@@ -3841,7 +3843,7 @@ _mm512_shuffle_epi32 (__m512i __A, _MM_PERM_ENUM __mask)\n   return (__m512i) __builtin_ia32_pshufd512_mask ((__v16si) __A,\n \t\t\t\t\t\t  __mask,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -3874,7 +3876,7 @@ _mm512_shuffle_i64x2 (__m512i __A, __m512i __B, const int __imm)\n   return (__m512i) __builtin_ia32_shuf_i64x2_mask ((__v8di) __A,\n \t\t\t\t\t\t   (__v8di) __B, __imm,\n \t\t\t\t\t\t   (__v8di)\n-\t\t\t\t\t\t   _mm512_undefined_si512 (),\n+\t\t\t\t\t\t   _mm512_undefined_epi32 (),\n \t\t\t\t\t\t   (__mmask8) -1);\n }\n \n@@ -3909,7 +3911,7 @@ _mm512_shuffle_i32x4 (__m512i __A, __m512i __B, const int __imm)\n \t\t\t\t\t\t   (__v16si) __B,\n \t\t\t\t\t\t   __imm,\n \t\t\t\t\t\t   (__v16si)\n-\t\t\t\t\t\t   _mm512_undefined_si512 (),\n+\t\t\t\t\t\t   _mm512_undefined_epi32 (),\n \t\t\t\t\t\t   (__mmask16) -1);\n }\n \n@@ -4009,7 +4011,7 @@ _mm512_maskz_shuffle_f32x4 (__mmask16 __U, __m512 __A, __m512 __B,\n #else\n #define _mm512_shuffle_epi32(X, C)                                      \\\n   ((__m512i)  __builtin_ia32_pshufd512_mask ((__v16si)(__m512i)(X), (int)(C),\\\n-    (__v16si)(__m512i)_mm512_undefined_si512 (),\\\n+    (__v16si)(__m512i)_mm512_undefined_epi32 (),\\\n     (__mmask16)-1))\n \n #define _mm512_mask_shuffle_epi32(W, U, X, C)                           \\\n@@ -4025,7 +4027,7 @@ _mm512_maskz_shuffle_f32x4 (__mmask16 __U, __m512 __A, __m512 __B,\n #define _mm512_shuffle_i64x2(X, Y, C)                                   \\\n   ((__m512i)  __builtin_ia32_shuf_i64x2_mask ((__v8di)(__m512i)(X),     \\\n       (__v8di)(__m512i)(Y), (int)(C),\\\n-    (__v8di)(__m512i)_mm512_undefined_si512 (),\\\n+    (__v8di)(__m512i)_mm512_undefined_epi32 (),\\\n     (__mmask8)-1))\n \n #define _mm512_mask_shuffle_i64x2(W, U, X, Y, C)                        \\\n@@ -4043,7 +4045,7 @@ _mm512_maskz_shuffle_f32x4 (__mmask16 __U, __m512 __A, __m512 __B,\n #define _mm512_shuffle_i32x4(X, Y, C)                                   \\\n   ((__m512i)  __builtin_ia32_shuf_i32x4_mask ((__v16si)(__m512i)(X),    \\\n       (__v16si)(__m512i)(Y), (int)(C),\\\n-    (__v16si)(__m512i)_mm512_undefined_si512 (),\\\n+    (__v16si)(__m512i)_mm512_undefined_epi32 (),\\\n     (__mmask16)-1))\n \n #define _mm512_mask_shuffle_i32x4(W, U, X, Y, C)                        \\\n@@ -4102,7 +4104,7 @@ _mm512_rolv_epi32 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_prolvd512_mask ((__v16si) __A,\n \t\t\t\t\t\t  (__v16si) __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -4134,7 +4136,7 @@ _mm512_rorv_epi32 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_prorvd512_mask ((__v16si) __A,\n \t\t\t\t\t\t  (__v16si) __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -4166,7 +4168,7 @@ _mm512_rolv_epi64 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_prolvq512_mask ((__v8di) __A,\n \t\t\t\t\t\t  (__v8di) __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -4198,7 +4200,7 @@ _mm512_rorv_epi64 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_prorvq512_mask ((__v8di) __A,\n \t\t\t\t\t\t  (__v8di) __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -4390,7 +4392,7 @@ _mm512_cvtt_roundps_epi32 (__m512 __A, const int __R)\n {\n   return (__m512i) __builtin_ia32_cvttps2dq512_mask ((__v16sf) __A,\n \t\t\t\t\t\t     (__v16si)\n-\t\t\t\t\t\t     _mm512_undefined_si512 (),\n+\t\t\t\t\t\t     _mm512_undefined_epi32 (),\n \t\t\t\t\t\t     (__mmask16) -1, __R);\n }\n \n@@ -4420,7 +4422,7 @@ _mm512_cvtt_roundps_epu32 (__m512 __A, const int __R)\n {\n   return (__m512i) __builtin_ia32_cvttps2udq512_mask ((__v16sf) __A,\n \t\t\t\t\t\t      (__v16si)\n-\t\t\t\t\t\t      _mm512_undefined_si512 (),\n+\t\t\t\t\t\t      _mm512_undefined_epi32 (),\n \t\t\t\t\t\t      (__mmask16) -1, __R);\n }\n \n@@ -4445,7 +4447,7 @@ _mm512_maskz_cvtt_roundps_epu32 (__mmask16 __U, __m512 __A, const int __R)\n }\n #else\n #define _mm512_cvtt_roundps_epi32(A, B)\t\t     \\\n-    ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)_mm512_undefined_si512 (), -1, B))\n+    ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)_mm512_undefined_epi32 (), -1, B))\n \n #define _mm512_mask_cvtt_roundps_epi32(W, U, A, B)   \\\n     ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)(W), U, B))\n@@ -4454,7 +4456,7 @@ _mm512_maskz_cvtt_roundps_epu32 (__mmask16 __U, __m512 __A, const int __R)\n     ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))\n \n #define _mm512_cvtt_roundps_epu32(A, B)\t\t     \\\n-    ((__m512i)__builtin_ia32_cvttps2udq512_mask(A, (__v16si)_mm512_undefined_si512 (), -1, B))\n+    ((__m512i)__builtin_ia32_cvttps2udq512_mask(A, (__v16si)_mm512_undefined_epi32 (), -1, B))\n \n #define _mm512_mask_cvtt_roundps_epu32(W, U, A, B)   \\\n     ((__m512i)__builtin_ia32_cvttps2udq512_mask(A, (__v16si)(W), U, B))\n@@ -4470,7 +4472,7 @@ _mm512_cvt_roundps_epi32 (__m512 __A, const int __R)\n {\n   return (__m512i) __builtin_ia32_cvtps2dq512_mask ((__v16sf) __A,\n \t\t\t\t\t\t    (__v16si)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask16) -1, __R);\n }\n \n@@ -4500,7 +4502,7 @@ _mm512_cvt_roundps_epu32 (__m512 __A, const int __R)\n {\n   return (__m512i) __builtin_ia32_cvtps2udq512_mask ((__v16sf) __A,\n \t\t\t\t\t\t     (__v16si)\n-\t\t\t\t\t\t     _mm512_undefined_si512 (),\n+\t\t\t\t\t\t     _mm512_undefined_epi32 (),\n \t\t\t\t\t\t     (__mmask16) -1, __R);\n }\n \n@@ -4525,7 +4527,7 @@ _mm512_maskz_cvt_roundps_epu32 (__mmask16 __U, __m512 __A, const int __R)\n }\n #else\n #define _mm512_cvt_roundps_epi32(A, B)\t\t    \\\n-    ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)_mm512_undefined_si512 (), -1, B))\n+    ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)_mm512_undefined_epi32 (), -1, B))\n \n #define _mm512_mask_cvt_roundps_epi32(W, U, A, B)   \\\n     ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)(W), U, B))\n@@ -4534,7 +4536,7 @@ _mm512_maskz_cvt_roundps_epu32 (__mmask16 __U, __m512 __A, const int __R)\n     ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))\n \n #define _mm512_cvt_roundps_epu32(A, B)\t\t    \\\n-    ((__m512i)__builtin_ia32_cvtps2udq512_mask(A, (__v16si)_mm512_undefined_si512 (), -1, B))\n+    ((__m512i)__builtin_ia32_cvtps2udq512_mask(A, (__v16si)_mm512_undefined_epi32 (), -1, B))\n \n #define _mm512_mask_cvt_roundps_epu32(W, U, A, B)   \\\n     ((__m512i)__builtin_ia32_cvtps2udq512_mask(A, (__v16si)(W), U, B))\n@@ -5555,7 +5557,7 @@ _mm512_inserti64x4 (__m512i __A, __m256i __B, const int __imm)\n \t\t\t\t\t\t    (__v4di) __B,\n \t\t\t\t\t\t    __imm,\n \t\t\t\t\t\t    (__v8di)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask8) -1);\n }\n \n@@ -5650,7 +5652,7 @@ _mm512_maskz_insertf64x4 (__mmask8 __U, __m512d __A, __m256d __B,\n #define _mm512_inserti64x4(X, Y, C)                                     \\\n   ((__m512i) __builtin_ia32_inserti64x4_mask ((__v8di)(__m512i) (X),    \\\n     (__v4di)(__m256i) (Y), (int) (C),\t\t\t\t\t\\\n-    (__v8di)(__m512i)_mm512_undefined_si512 (),\t\t\t\t\\\n+    (__v8di)(__m512i)_mm512_undefined_epi32 (),\t\t\t\t\\\n     (__mmask8)-1))\n \n #define _mm512_mask_inserti64x4(W, U, X, Y, C)                          \\\n@@ -6176,7 +6178,7 @@ _mm512_permutex_epi64 (__m512i __X, const int __I)\n {\n   return (__m512i) __builtin_ia32_permdi512_mask ((__v8di) __X, __I,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) (-1));\n }\n \n@@ -6247,7 +6249,7 @@ _mm512_maskz_permutex_pd (__mmask8 __U, __m512d __X, const int __M)\n   ((__m512i) __builtin_ia32_permdi512_mask ((__v8di)(__m512i)(X), \\\n \t\t\t\t\t    (int)(I),             \\\n \t\t\t\t\t    (__v8di)(__m512i)\t  \\\n-\t\t\t\t\t    (_mm512_undefined_si512 ()),\\\n+\t\t\t\t\t    (_mm512_undefined_epi32 ()),\\\n \t\t\t\t\t    (__mmask8)(-1)))\n \n #define _mm512_maskz_permutex_epi64(M, X, I)                 \\\n@@ -6282,7 +6284,7 @@ _mm512_permutexvar_epi64 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_permvardi512_mask ((__v8di) __Y,\n \t\t\t\t\t\t     (__v8di) __X,\n \t\t\t\t\t\t     (__v8di)\n-\t\t\t\t\t\t     _mm512_undefined_si512 (),\n+\t\t\t\t\t\t     _mm512_undefined_epi32 (),\n \t\t\t\t\t\t     (__mmask8) -1);\n }\n \n@@ -6315,7 +6317,7 @@ _mm512_permutexvar_epi32 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_permvarsi512_mask ((__v16si) __Y,\n \t\t\t\t\t\t     (__v16si) __X,\n \t\t\t\t\t\t     (__v16si)\n-\t\t\t\t\t\t     _mm512_undefined_si512 (),\n+\t\t\t\t\t\t     _mm512_undefined_epi32 (),\n \t\t\t\t\t\t     (__mmask16) -1);\n }\n \n@@ -6890,7 +6892,7 @@ _mm512_rol_epi32 (__m512i __A, const int __B)\n {\n   return (__m512i) __builtin_ia32_prold512_mask ((__v16si) __A, __B,\n \t\t\t\t\t\t (__v16si)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask16) -1);\n }\n \n@@ -6919,7 +6921,7 @@ _mm512_ror_epi32 (__m512i __A, int __B)\n {\n   return (__m512i) __builtin_ia32_prord512_mask ((__v16si) __A, __B,\n \t\t\t\t\t\t (__v16si)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask16) -1);\n }\n \n@@ -6948,7 +6950,7 @@ _mm512_rol_epi64 (__m512i __A, const int __B)\n {\n   return (__m512i) __builtin_ia32_prolq512_mask ((__v8di) __A, __B,\n \t\t\t\t\t\t (__v8di)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask8) -1);\n }\n \n@@ -6977,7 +6979,7 @@ _mm512_ror_epi64 (__m512i __A, int __B)\n {\n   return (__m512i) __builtin_ia32_prorq512_mask ((__v8di) __A, __B,\n \t\t\t\t\t\t (__v8di)\n-\t\t\t\t\t\t _mm512_undefined_si512 (),\n+\t\t\t\t\t\t _mm512_undefined_epi32 (),\n \t\t\t\t\t\t (__mmask8) -1);\n }\n \n@@ -7004,7 +7006,7 @@ _mm512_maskz_ror_epi64 (__mmask8 __U, __m512i __A, int __B)\n #define _mm512_rol_epi32(A, B)\t\t\t\t\t\t  \\\n     ((__m512i)__builtin_ia32_prold512_mask ((__v16si)(__m512i)(A),\t  \\\n \t\t\t\t\t    (int)(B),\t\t\t  \\\n-\t\t\t\t\t    (__v16si)_mm512_undefined_si512 (), \\\n+\t\t\t\t\t    (__v16si)_mm512_undefined_epi32 (), \\\n \t\t\t\t\t    (__mmask16)(-1)))\n #define _mm512_mask_rol_epi32(W, U, A, B)\t\t\t\t  \\\n     ((__m512i)__builtin_ia32_prold512_mask ((__v16si)(__m512i)(A),\t  \\\n@@ -7019,7 +7021,7 @@ _mm512_maskz_ror_epi64 (__mmask8 __U, __m512i __A, int __B)\n #define _mm512_ror_epi32(A, B)\t\t\t\t\t\t  \\\n     ((__m512i)__builtin_ia32_prord512_mask ((__v16si)(__m512i)(A),\t  \\\n \t\t\t\t\t    (int)(B),\t\t\t  \\\n-\t\t\t\t\t    (__v16si)_mm512_undefined_si512 (), \\\n+\t\t\t\t\t    (__v16si)_mm512_undefined_epi32 (), \\\n \t\t\t\t\t    (__mmask16)(-1)))\n #define _mm512_mask_ror_epi32(W, U, A, B)\t\t\t\t  \\\n     ((__m512i)__builtin_ia32_prord512_mask ((__v16si)(__m512i)(A),\t  \\\n@@ -7034,7 +7036,7 @@ _mm512_maskz_ror_epi64 (__mmask8 __U, __m512i __A, int __B)\n #define _mm512_rol_epi64(A, B)\t\t\t\t\t\t  \\\n     ((__m512i)__builtin_ia32_prolq512_mask ((__v8di)(__m512i)(A),\t  \\\n \t\t\t\t\t    (int)(B),\t\t\t  \\\n-\t\t\t\t\t    (__v8di)_mm512_undefined_si512 (),  \\\n+\t\t\t\t\t    (__v8di)_mm512_undefined_epi32 (),  \\\n \t\t\t\t\t    (__mmask8)(-1)))\n #define _mm512_mask_rol_epi64(W, U, A, B)\t\t\t\t  \\\n     ((__m512i)__builtin_ia32_prolq512_mask ((__v8di)(__m512i)(A),\t  \\\n@@ -7050,7 +7052,7 @@ _mm512_maskz_ror_epi64 (__mmask8 __U, __m512i __A, int __B)\n #define _mm512_ror_epi64(A, B)\t\t\t\t\t\t  \\\n     ((__m512i)__builtin_ia32_prorq512_mask ((__v8di)(__m512i)(A),\t  \\\n \t\t\t\t\t    (int)(B),\t\t\t  \\\n-\t\t\t\t\t    (__v8di)_mm512_undefined_si512 (),  \\\n+\t\t\t\t\t    (__v8di)_mm512_undefined_epi32 (),  \\\n \t\t\t\t\t    (__mmask8)(-1)))\n #define _mm512_mask_ror_epi64(W, U, A, B)\t\t\t\t  \\\n     ((__m512i)__builtin_ia32_prorq512_mask ((__v8di)(__m512i)(A),\t  \\\n@@ -7133,7 +7135,7 @@ _mm512_andnot_si512 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pandnd512_mask ((__v16si) __A,\n \t\t\t\t\t\t  (__v16si) __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -7144,7 +7146,7 @@ _mm512_andnot_epi32 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pandnd512_mask ((__v16si) __A,\n \t\t\t\t\t\t  (__v16si) __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -7176,7 +7178,7 @@ _mm512_andnot_epi64 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pandnq512_mask ((__v8di) __A,\n \t\t\t\t\t\t  (__v8di) __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -7274,7 +7276,7 @@ _mm512_unpackhi_epi32 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_punpckhdq512_mask ((__v16si) __A,\n \t\t\t\t\t\t     (__v16si) __B,\n \t\t\t\t\t\t     (__v16si)\n-\t\t\t\t\t\t     _mm512_undefined_si512 (),\n+\t\t\t\t\t\t     _mm512_undefined_epi32 (),\n \t\t\t\t\t\t     (__mmask16) -1);\n }\n \n@@ -7307,7 +7309,7 @@ _mm512_unpackhi_epi64 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_punpckhqdq512_mask ((__v8di) __A,\n \t\t\t\t\t\t      (__v8di) __B,\n \t\t\t\t\t\t      (__v8di)\n-\t\t\t\t\t\t      _mm512_undefined_si512 (),\n+\t\t\t\t\t\t      _mm512_undefined_epi32 (),\n \t\t\t\t\t\t      (__mmask8) -1);\n }\n \n@@ -7339,7 +7341,7 @@ _mm512_unpacklo_epi32 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_punpckldq512_mask ((__v16si) __A,\n \t\t\t\t\t\t     (__v16si) __B,\n \t\t\t\t\t\t     (__v16si)\n-\t\t\t\t\t\t     _mm512_undefined_si512 (),\n+\t\t\t\t\t\t     _mm512_undefined_epi32 (),\n \t\t\t\t\t\t     (__mmask16) -1);\n }\n \n@@ -7372,7 +7374,7 @@ _mm512_unpacklo_epi64 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_punpcklqdq512_mask ((__v8di) __A,\n \t\t\t\t\t\t      (__v8di) __B,\n \t\t\t\t\t\t      (__v8di)\n-\t\t\t\t\t\t      _mm512_undefined_si512 (),\n+\t\t\t\t\t\t      _mm512_undefined_epi32 (),\n \t\t\t\t\t\t      (__mmask8) -1);\n }\n \n@@ -8511,7 +8513,7 @@ _mm512_alignr_epi32 (__m512i __A, __m512i __B, const int __imm)\n   return (__m512i) __builtin_ia32_alignd512_mask ((__v16si) __A,\n \t\t\t\t\t\t  (__v16si) __B, __imm,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -8545,7 +8547,7 @@ _mm512_alignr_epi64 (__m512i __A, __m512i __B, const int __imm)\n   return (__m512i) __builtin_ia32_alignq512_mask ((__v8di) __A,\n \t\t\t\t\t\t  (__v8di) __B, __imm,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -8574,7 +8576,7 @@ _mm512_maskz_alignr_epi64 (__mmask8 __U, __m512i __A, __m512i __B,\n #else\n #define _mm512_alignr_epi32(X, Y, C)                                        \\\n     ((__m512i)__builtin_ia32_alignd512_mask ((__v16si)(__m512i)(X),         \\\n-        (__v16si)(__m512i)(Y), (int)(C), (__v16si)_mm512_undefined_si512 (),\\\n+        (__v16si)(__m512i)(Y), (int)(C), (__v16si)_mm512_undefined_epi32 (),\\\n         (__mmask16)-1))\n \n #define _mm512_mask_alignr_epi32(W, U, X, Y, C)                             \\\n@@ -8589,7 +8591,7 @@ _mm512_maskz_alignr_epi64 (__mmask8 __U, __m512i __A, __m512i __B,\n \n #define _mm512_alignr_epi64(X, Y, C)                                        \\\n     ((__m512i)__builtin_ia32_alignq512_mask ((__v8di)(__m512i)(X),          \\\n-        (__v8di)(__m512i)(Y), (int)(C), (__v8di)_mm512_undefined_si512 (),  \\\n+        (__v8di)(__m512i)(Y), (int)(C), (__v8di)_mm512_undefined_epi32 (),  \\\n \t(__mmask8)-1))\n \n #define _mm512_mask_alignr_epi64(W, U, X, Y, C)                             \\\n@@ -9305,7 +9307,7 @@ extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_i32gather_epi32 (__m512i __index, int const *__addr, int __scale)\n {\n-  __m512i v1_old = _mm512_undefined_si512 ();\n+  __m512i v1_old = _mm512_undefined_epi32 ();\n   __mmask16 mask = 0xFFFF;\n \n   return (__m512i) __builtin_ia32_gathersiv16si ((__v16si) v1_old,\n@@ -9329,7 +9331,7 @@ extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_i32gather_epi64 (__m256i __index, long long const *__addr, int __scale)\n {\n-  __m512i v1_old = _mm512_undefined_si512 ();\n+  __m512i v1_old = _mm512_undefined_epi32 ();\n   __mmask8 mask = 0xFF;\n \n   return (__m512i) __builtin_ia32_gathersiv8di ((__v8di) v1_old,\n@@ -9378,7 +9380,7 @@ extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_i64gather_epi64 (__m512i __index, long long const *__addr, int __scale)\n {\n-  __m512i v1_old = _mm512_undefined_si512 ();\n+  __m512i v1_old = _mm512_undefined_epi32 ();\n   __mmask8 mask = 0xFF;\n \n   return (__m512i) __builtin_ia32_gatherdiv8di ((__v8di) v1_old,\n@@ -9590,7 +9592,7 @@ _mm512_mask_i64scatter_epi64 (long long *__addr, __mmask8 __mask,\n \t\t\t\t\t (__mmask8)MASK, (int)SCALE)\n \n #define _mm512_i32gather_epi32(INDEX, ADDR, SCALE)\t\t\t\\\n-  (__m512i) __builtin_ia32_gathersiv16si ((__v16si)_mm512_undefined_si512 (),\t\\\n+  (__m512i) __builtin_ia32_gathersiv16si ((__v16si)_mm512_undefined_epi32 (),\t\\\n \t\t\t\t\t  (int const *)ADDR,\t\t\\\n \t\t\t\t\t  (__v16si)(__m512i)INDEX,\t\\\n \t\t\t\t\t  (__mmask16)0xFFFF, (int)SCALE)\n@@ -9602,7 +9604,7 @@ _mm512_mask_i64scatter_epi64 (long long *__addr, __mmask8 __mask,\n \t\t\t\t\t  (__mmask16)MASK, (int)SCALE)\n \n #define _mm512_i32gather_epi64(INDEX, ADDR, SCALE)\t\t\t\\\n-  (__m512i) __builtin_ia32_gathersiv8di ((__v8di)_mm512_undefined_si512 (),\t\\\n+  (__m512i) __builtin_ia32_gathersiv8di ((__v8di)_mm512_undefined_epi32 (),\t\\\n \t\t\t\t\t (long long const *)ADDR,\t\\\n \t\t\t\t\t (__v8si)(__m256i)INDEX,\t\\\n \t\t\t\t\t (__mmask8)0xFF, (int)SCALE)\n@@ -9626,7 +9628,7 @@ _mm512_mask_i64scatter_epi64 (long long *__addr, __mmask8 __mask,\n \t\t\t\t\t  (__mmask8)MASK, (int)SCALE)\n \n #define _mm512_i64gather_epi64(INDEX, ADDR, SCALE)\t\t\t\\\n-  (__m512i) __builtin_ia32_gatherdiv8di ((__v8di)_mm512_undefined_si512 (),\t\\\n+  (__m512i) __builtin_ia32_gatherdiv8di ((__v8di)_mm512_undefined_epi32 (),\t\\\n \t\t\t\t\t (long long const *)ADDR,\t\\\n \t\t\t\t\t (__v8di)(__m512i)INDEX,\t\\\n \t\t\t\t\t (__mmask8)0xFF, (int)SCALE)\n@@ -10122,7 +10124,7 @@ _mm512_max_epi64 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pmaxsq512_mask ((__v8di) __A,\n \t\t\t\t\t\t  (__v8di) __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -10153,7 +10155,7 @@ _mm512_min_epi64 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pminsq512_mask ((__v8di) __A,\n \t\t\t\t\t\t  (__v8di) __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -10184,7 +10186,7 @@ _mm512_max_epu64 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pmaxuq512_mask ((__v8di) __A,\n \t\t\t\t\t\t  (__v8di) __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -10215,7 +10217,7 @@ _mm512_min_epu64 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pminuq512_mask ((__v8di) __A,\n \t\t\t\t\t\t  (__v8di) __B,\n \t\t\t\t\t\t  (__v8di)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask8) -1);\n }\n \n@@ -10246,7 +10248,7 @@ _mm512_max_epi32 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pmaxsd512_mask ((__v16si) __A,\n \t\t\t\t\t\t  (__v16si) __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -10277,7 +10279,7 @@ _mm512_min_epi32 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pminsd512_mask ((__v16si) __A,\n \t\t\t\t\t\t  (__v16si) __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -10308,7 +10310,7 @@ _mm512_max_epu32 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pmaxud512_mask ((__v16si) __A,\n \t\t\t\t\t\t  (__v16si) __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -10339,7 +10341,7 @@ _mm512_min_epu32 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_pminud512_mask ((__v16si) __A,\n \t\t\t\t\t\t  (__v16si) __B,\n \t\t\t\t\t\t  (__v16si)\n-\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t  (__mmask16) -1);\n }\n \n@@ -11803,7 +11805,7 @@ _mm512_cvttps_epi32 (__m512 __A)\n {\n   return (__m512i) __builtin_ia32_cvttps2dq512_mask ((__v16sf) __A,\n \t\t\t\t\t\t     (__v16si)\n-\t\t\t\t\t\t     _mm512_undefined_si512 (),\n+\t\t\t\t\t\t     _mm512_undefined_epi32 (),\n \t\t\t\t\t\t     (__mmask16) -1,\n \t\t\t\t\t\t     _MM_FROUND_CUR_DIRECTION);\n }\n@@ -11835,7 +11837,7 @@ _mm512_cvttps_epu32 (__m512 __A)\n {\n   return (__m512i) __builtin_ia32_cvttps2udq512_mask ((__v16sf) __A,\n \t\t\t\t\t\t      (__v16si)\n-\t\t\t\t\t\t      _mm512_undefined_si512 (),\n+\t\t\t\t\t\t      _mm512_undefined_epi32 (),\n \t\t\t\t\t\t      (__mmask16) -1,\n \t\t\t\t\t\t      _MM_FROUND_CUR_DIRECTION);\n }\n@@ -11867,7 +11869,7 @@ _mm512_cvtps_epi32 (__m512 __A)\n {\n   return (__m512i) __builtin_ia32_cvtps2dq512_mask ((__v16sf) __A,\n \t\t\t\t\t\t    (__v16si)\n-\t\t\t\t\t\t    _mm512_undefined_si512 (),\n+\t\t\t\t\t\t    _mm512_undefined_epi32 (),\n \t\t\t\t\t\t    (__mmask16) -1,\n \t\t\t\t\t\t    _MM_FROUND_CUR_DIRECTION);\n }\n@@ -11899,7 +11901,7 @@ _mm512_cvtps_epu32 (__m512 __A)\n {\n   return (__m512i) __builtin_ia32_cvtps2udq512_mask ((__v16sf) __A,\n \t\t\t\t\t\t     (__v16si)\n-\t\t\t\t\t\t     _mm512_undefined_si512 (),\n+\t\t\t\t\t\t     _mm512_undefined_epi32 (),\n \t\t\t\t\t\t     (__mmask16) -1,\n \t\t\t\t\t\t     _MM_FROUND_CUR_DIRECTION);\n }"}, {"sha": "c74f6be4bd1aaa9fb014ba8588969b8b9d1dda54", "filename": "gcc/config/i386/avx512vbmiintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Fconfig%2Fi386%2Favx512vbmiintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Fconfig%2Fi386%2Favx512vbmiintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vbmiintrin.h?ref=4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "patch": "@@ -62,7 +62,7 @@ _mm512_multishift_epi64_epi8 (__m512i __X, __m512i __Y)\n   return (__m512i) __builtin_ia32_vpmultishiftqb512_mask ((__v64qi) __X,\n \t\t\t\t\t\t\t  (__v64qi) __Y,\n \t\t\t\t\t\t\t  (__v64qi)\n-\t\t\t\t\t\t\t  _mm512_undefined_si512 (),\n+\t\t\t\t\t\t\t  _mm512_undefined_epi32 (),\n \t\t\t\t\t\t\t  (__mmask64) -1);\n }\n \n@@ -73,7 +73,7 @@ _mm512_permutexvar_epi8 (__m512i __A, __m512i __B)\n   return (__m512i) __builtin_ia32_permvarqi512_mask ((__v64qi) __B,\n \t\t\t\t\t\t     (__v64qi) __A,\n \t\t\t\t\t\t     (__v64qi)\n-\t\t\t\t\t\t     _mm512_undefined_si512 (),\n+\t\t\t\t\t\t     _mm512_undefined_epi32 (),\n \t\t\t\t\t\t     (__mmask64) -1);\n }\n "}, {"sha": "4665ac7721130e19e91d962d172955f15ae02b39", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "patch": "@@ -1,3 +1,8 @@\n+2016-08-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/76342\n+\t* gcc.target/i386/pr76342.c: New test.\n+\n 2016-08-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/71512"}, {"sha": "d492b00c1aa1da5090847abeb9f28389fbb4195b", "filename": "gcc/testsuite/gcc.target/i386/pr76342.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr76342.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr76342.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr76342.c?ref=4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/76342 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f\" } */\n+\n+#include <immintrin.h>\n+\n+__m512i\n+test()\n+{\n+  return _mm512_undefined_epi32 ();\n+}"}]}