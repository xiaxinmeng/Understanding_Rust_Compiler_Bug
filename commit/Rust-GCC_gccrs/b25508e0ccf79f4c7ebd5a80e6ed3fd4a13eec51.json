{"sha": "b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI1NTA4ZTBjY2Y3OWY0YzdlYmQ1YTgwZTZlZDNmZDRhMTNlZWM1MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-09-12T14:03:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-09-12T14:03:21Z"}, "message": "re PR tree-optimization/87280 (ICE in set_ssa_val_to, at tree-ssa-sccvn.c:3647)\n\n2018-09-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87280\n\t* tree-ssa-sccvn.c (process_bb): Handle the case of executable\n\tedge but unreachable target.\n\t(do_rpo_vn): For conservatively handling a PHI only mark\n\tthe backedge executable but not the block reachable.\n\n\t* gcc.dg/torture/pr87280.c: New testcase.\n\nFrom-SVN: r264241", "tree": {"sha": "7eae8819344bcf260623c7f032db75d58362e79a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eae8819344bcf260623c7f032db75d58362e79a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72ced87475c02fc6d4211a9baa41a8c8bb14ab0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ced87475c02fc6d4211a9baa41a8c8bb14ab0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ced87475c02fc6d4211a9baa41a8c8bb14ab0c"}], "stats": {"total": 137, "additions": 118, "deletions": 19}, "files": [{"sha": "1da8d18c294cdf4d31dcce79c6bb2669efdb9681", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51", "patch": "@@ -1,3 +1,11 @@\n+2018-09-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87280\n+\t* tree-ssa-sccvn.c (process_bb): Handle the case of executable\n+\tedge but unreachable target.\n+\t(do_rpo_vn): For conservatively handling a PHI only mark\n+\tthe backedge executable but not the block reachable.\n+\n 2018-09-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87266"}, {"sha": "f1b9fe231dbeffe8530dc6c35e8ebd4266462e99", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51", "patch": "@@ -1,3 +1,8 @@\n+2018-09-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87280\n+\t* gcc.dg/torture/pr87280.c: New testcase.\n+\n 2018-09-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87266"}, {"sha": "c62e8be0c4dd4a33937cb29eb8af9c93f72742d7", "filename": "gcc/testsuite/gcc.dg/torture/pr87280.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87280.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87280.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87280.c?ref=b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51", "patch": "@@ -0,0 +1,61 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"--param rpo-vn-max-loop-depth=5\" } */\n+\n+int uc;\n+\n+void\n+j8 (int *xv, int f3)\n+{\n+  uc = 0;\n+  while (uc < 1)\n+    {\n+    }\n+\n+  if (*xv == 0)\n+    {\n+      int *o8 = xv;\n+\n+      if (0)\n+\t{\n+n3:\n+\t  *o8 = 0;\n+\t  while (*o8 < 1)\n+\t    {\n+h5:\n+\t      *o8 = 0;\n+\t    }\n+\t}\n+\n+      while (*xv < 1)\n+\tif (*xv == 0)\n+\t  goto h5;\n+\n+g5:\n+      ;\n+    }\n+\n+  *xv = 0;\n+  for (;;)\n+    {\n+      while (uc < 1)\n+\t{\n+\t}\n+\n+      while (f3 < 1)\n+\t{\n+\t  if (*xv == 0)\n+\t    goto n3;\n+\n+\t  while (f3 < 1)\n+\t    while (*xv < 1)\n+\t      while (*xv < 1)\n+\t\twhile (*xv < 1)\n+\t\t  while (*xv < 1)\n+\t\t    {\n+\t\t    }\n+\t}\n+\n+      if (*xv == 0)\n+\tgoto g5;\n+    }\n+}"}, {"sha": "2a837c268211ec388c0d92404c400cca03ec9d5d", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 44, "deletions": 19, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=b25508e0ccf79f4c7ebd5a80e6ed3fd4a13eec51", "patch": "@@ -5976,15 +5976,24 @@ process_bb (rpo_elim &avail, basic_block bb,\n     {\n       FOR_EACH_EDGE (e, ei, bb->succs)\n \t{\n-\t  if (e->flags & EDGE_EXECUTABLE)\n-\t    continue;\n-\t  if (dump_file && (dump_flags & TDF_DETAILS))\n-\t    fprintf (dump_file,\n-\t\t     \"marking outgoing edge %d -> %d executable\\n\",\n-\t\t     e->src->index, e->dest->index);\n-\t  gcc_checking_assert (iterate || !(e->flags & EDGE_DFS_BACK));\n-\t  e->flags |= EDGE_EXECUTABLE;\n-\t  e->dest->flags |= BB_EXECUTABLE;\n+\t  if (!(e->flags & EDGE_EXECUTABLE))\n+\t    {\n+\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\tfprintf (dump_file,\n+\t\t\t \"marking outgoing edge %d -> %d executable\\n\",\n+\t\t\t e->src->index, e->dest->index);\n+\t      gcc_checking_assert (iterate || !(e->flags & EDGE_DFS_BACK));\n+\t      e->flags |= EDGE_EXECUTABLE;\n+\t      e->dest->flags |= BB_EXECUTABLE;\n+\t    }\n+\t  else if (!(e->dest->flags & BB_EXECUTABLE))\n+\t    {\n+\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\tfprintf (dump_file,\n+\t\t\t \"marking destination block %d reachable\\n\",\n+\t\t\t e->dest->index);\n+\t      e->dest->flags |= BB_EXECUTABLE;\n+\t    }\n \t}\n     }\n   for (gimple_stmt_iterator gsi = gsi_start_bb (bb);\n@@ -6124,20 +6133,37 @@ process_bb (rpo_elim &avail, basic_block bb,\n \t      e->flags |= EDGE_EXECUTABLE;\n \t      e->dest->flags |= BB_EXECUTABLE;\n \t    }\n+\t  else if (!(e->dest->flags & BB_EXECUTABLE))\n+\t    {\n+\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\tfprintf (dump_file,\n+\t\t\t \"marking destination block %d reachable\\n\",\n+\t\t\t e->dest->index);\n+\t      e->dest->flags |= BB_EXECUTABLE;\n+\t    }\n \t}\n       else if (gsi_one_before_end_p (gsi))\n \t{\n \t  FOR_EACH_EDGE (e, ei, bb->succs)\n \t    {\n-\t      if (e->flags & EDGE_EXECUTABLE)\n-\t\tcontinue;\n-\t      if (dump_file && (dump_flags & TDF_DETAILS))\n-\t\tfprintf (dump_file,\n-\t\t\t \"marking outgoing edge %d -> %d executable\\n\",\n-\t\t\t e->src->index, e->dest->index);\n-\t      gcc_checking_assert (iterate || !(e->flags & EDGE_DFS_BACK));\n-\t      e->flags |= EDGE_EXECUTABLE;\n-\t      e->dest->flags |= BB_EXECUTABLE;\n+\t      if (!(e->flags & EDGE_EXECUTABLE))\n+\t\t{\n+\t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t    fprintf (dump_file,\n+\t\t\t     \"marking outgoing edge %d -> %d executable\\n\",\n+\t\t\t     e->src->index, e->dest->index);\n+\t\t  gcc_checking_assert (iterate || !(e->flags & EDGE_DFS_BACK));\n+\t\t  e->flags |= EDGE_EXECUTABLE;\n+\t\t  e->dest->flags |= BB_EXECUTABLE;\n+\t\t}\n+\t      else if (!(e->dest->flags & BB_EXECUTABLE))\n+\t\t{\n+\t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t    fprintf (dump_file,\n+\t\t\t     \"marking destination block %d reachable\\n\",\n+\t\t\t     e->dest->index);\n+\t\t  e->dest->flags |= BB_EXECUTABLE;\n+\t\t}\n \t    }\n \t}\n \n@@ -6399,7 +6425,6 @@ do_rpo_vn (function *fn, edge entry, bitmap exit_bbs,\n \t\tif (e->flags & EDGE_DFS_BACK)\n \t\t  {\n \t\t    e->flags |= EDGE_EXECUTABLE;\n-\t\t    e->dest->flags |= BB_EXECUTABLE;\n \t\t    /* There can be a non-latch backedge into the header\n \t\t       which is part of an outer irreducible region.  We\n \t\t       cannot avoid iterating this block then.  */"}]}