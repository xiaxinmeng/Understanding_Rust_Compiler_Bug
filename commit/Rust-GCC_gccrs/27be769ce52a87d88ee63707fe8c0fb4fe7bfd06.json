{"sha": "27be769ce52a87d88ee63707fe8c0fb4fe7bfd06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdiZTc2OWNlNTJhODdkODhlZTYzNzA3ZmU4YzBmYjRmZTdiZmQwNg==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2014-11-10T13:06:22Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2014-11-10T13:06:22Z"}, "message": "* config/avr/avr.h (CPLUSPLUS_CPP_SPEC): Define.\n\nFrom-SVN: r217286", "tree": {"sha": "c87c827087dbc9ea557b7541e3b92a8b659adc63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c87c827087dbc9ea557b7541e3b92a8b659adc63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7325afd46f225eedd88701cf6017d0bae2d2b3e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7325afd46f225eedd88701cf6017d0bae2d2b3e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7325afd46f225eedd88701cf6017d0bae2d2b3e1"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "a8ecaeaebb2a72a0425c02525237e4b76c1ff650", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27be769ce52a87d88ee63707fe8c0fb4fe7bfd06", "patch": "@@ -1,3 +1,7 @@\n+2014-11-10  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/avr/avr.h (CPLUSPLUS_CPP_SPEC): Define.\n+\n 2014-11-10  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/tree-ssa/ldist-19.c: ICF is disabled"}, {"sha": "e34ffa24f88cfbfd39a1c34bbb95e36810f26186", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=27be769ce52a87d88ee63707fe8c0fb4fe7bfd06", "patch": "@@ -495,6 +495,10 @@ typedef struct avr_args\n #define DRIVER_SELF_SPECS \" %{mmcu=*:-specs=device-specs/specs-%*%s %<mmcu=*} \"\n #define CPP_SPEC \"\"\n \n+/* We want cc1plus used as a preprocessor to pick up the cpp spec from the\n+   per-device spec files  */\n+#define CPLUSPLUS_CPP_SPEC \"%(cpp)\"\n+\n #define CC1_SPEC \"\"\n \n #define CC1PLUS_SPEC \"%{!frtti:-fno-rtti} \\"}]}