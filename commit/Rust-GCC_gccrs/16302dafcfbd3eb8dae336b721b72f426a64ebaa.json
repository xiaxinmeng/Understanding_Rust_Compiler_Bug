{"sha": "16302dafcfbd3eb8dae336b721b72f426a64ebaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYzMDJkYWZjZmJkM2ViOGRhZTMzNmI3MjFiNzJmNDI2YTY0ZWJhYQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-02-26T14:04:09Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-02-26T14:04:09Z"}, "message": "re PR c/34351 (Please get us the \"volatile register\" warning back)\n\n2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR 34351\n\t* doc/invoke.texi (-Wall): Add -Wvolatile-register-var.\n\t* c-opts.c (c_common_handle_option): Wall enables\n\tWvolatile-register-var.\n\t* common.opt: Move Wvolatile-register-var to...\n\t* c.opt: ...here.\ntestsuite/\n\t* gcc.dg/pr34351.c: New.\n\nFrom-SVN: r132675", "tree": {"sha": "537a82ef9fffaa1f7c267239541b7bf5a2b03a7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/537a82ef9fffaa1f7c267239541b7bf5a2b03a7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16302dafcfbd3eb8dae336b721b72f426a64ebaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16302dafcfbd3eb8dae336b721b72f426a64ebaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16302dafcfbd3eb8dae336b721b72f426a64ebaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16302dafcfbd3eb8dae336b721b72f426a64ebaa/comments", "author": null, "committer": null, "parents": [{"sha": "e8fc888de958caac184e708b40ef24df3507c943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8fc888de958caac184e708b40ef24df3507c943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8fc888de958caac184e708b40ef24df3507c943"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "4d11666e715e45326d2b6f1f95aee742bb115899", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16302dafcfbd3eb8dae336b721b72f426a64ebaa", "patch": "@@ -1,3 +1,12 @@\n+2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR 34351\n+\t* doc/invoke.texi (-Wall): Add -Wvolatile-register-var.\n+\t* c-opts.c (c_common_handle_option): Wall enables\n+\tWvolatile-register-var.\n+\t* common.opt: Move Wvolatile-register-var to...\n+\t* c.opt: ...here.\n+\t\n 2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \t* common.opt (Wlarger-than=): New."}, {"sha": "1a59ac4696476a54826d43c2a83f86f2d35796e5", "filename": "gcc/c-opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=16302dafcfbd3eb8dae336b721b72f426a64ebaa", "patch": "@@ -407,6 +407,7 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       if (warn_strict_overflow == -1)\n \twarn_strict_overflow = value;\n       warn_array_bounds = value;\n+      warn_volatile_register_var = value;\n \n       /* Only warn about unknown pragmas that are not in system\n \t headers.  */"}, {"sha": "d3f81b0e1c755fed783c584fc80c104cbe84d168", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=16302dafcfbd3eb8dae336b721b72f426a64ebaa", "patch": "@@ -465,6 +465,10 @@ Wvla\n C ObjC C++ ObjC++ Var(warn_vla) Init(-1) Warning\n Warn if a variable length array is used\n \n+Wvolatile-register-var\n+C ObjC C++ ObjC++ Var(warn_volatile_register_var) Warning\n+Warn when a register variable is declared volatile\n+\n Wwrite-strings\n C ObjC C++ ObjC++ Var(warn_write_strings) Warning\n In C++, nonzero means warn about deprecated conversion from string literals to `char *'.  In C, similar warning, except that the conversion is of course not deprecated by the ISO C standard."}, {"sha": "48a1f80c3e17c93f9a49e2f76d14d84f2fe44542", "filename": "gcc/common.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=16302dafcfbd3eb8dae336b721b72f426a64ebaa", "patch": "@@ -232,10 +232,6 @@ Wunused-variable\n Common Var(warn_unused_variable) Warning\n Warn when a variable is unused\n \n-Wvolatile-register-var\n-Common Var(warn_register_var) Warning\n-Warn when a register variable is declared volatile\n-\n Wcoverage-mismatch\n Common RejectNegative Var(warn_coverage_mismatch) Warning\n Warn instead of error in case profiles in -fprofile-use do not match"}, {"sha": "7e444c0370c1901ea84274957f26d742c58d189f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=16302dafcfbd3eb8dae336b721b72f426a64ebaa", "patch": "@@ -2683,6 +2683,7 @@ Options} and @ref{Objective-C and Objective-C++ Dialect Options}.\n -Wunused-label     @gol\n -Wunused-value     @gol\n -Wunused-variable  @gol\n+-Wvolatile-register-var @gol\n }\n \n Note that some warning flags are not implied by @option{-Wall}.  Some of\n@@ -4017,7 +4018,8 @@ the variable length array.\n @opindex Wno-volatile-register-var\n Warn if a register variable is declared volatile.  The volatile\n modifier does not inhibit all optimizations that may eliminate reads\n-and/or writes to register variables.\n+and/or writes to register variables.  This warning is enabled by\n+@option{-Wall}.\n \n @item -Wdisabled-optimization\n @opindex Wdisabled-optimization"}, {"sha": "ee8eea17bc5b6a4861af6fa02d46177ef3d10a46", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16302dafcfbd3eb8dae336b721b72f426a64ebaa", "patch": "@@ -1,3 +1,7 @@\n+2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\t\n+\t* gcc.dg/pr34351.c: New.\n+\t\n 2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \t* gcc.dg/Wlarger-than2.c: New."}, {"sha": "90dcfa1e5f780ccb17d1662cd24d48bd2be48389", "filename": "gcc/testsuite/gcc.dg/pr34351.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34351.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16302dafcfbd3eb8dae336b721b72f426a64ebaa/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34351.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34351.c?ref=16302dafcfbd3eb8dae336b721b72f426a64ebaa", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall\" } */\n+\n+register int * volatile x asm (\"r13\"); /* { dg-warning \"optimization may eliminate reads and/or writes to register variables\" } */"}]}