{"sha": "f8f0193b5b83f6e85d65015e79c803295baf5166", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhmMDE5M2I1YjgzZjZlODVkNjUwMTVlNzljODAzMjk1YmFmNTE2Ng==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-02T11:34:48Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-02T12:33:41Z"}, "message": "libstdc++: Value-initialize objects held by EBO helpers [PR 100863]\n\nThe allocator, hash function and equality function should all be\nvalue-initialized by the default constructor of an unordered container.\nDo it in the EBO helper, so we don't have to get it right in multiple\nplaces.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/100863\n\tPR libstdc++/65816\n\t* include/bits/hashtable_policy.h (_Hashtable_ebo_helper):\n\tValue-initialize subobject.\n\t* testsuite/23_containers/unordered_map/allocator/default_init.cc:\n\tRemove XFAIL.\n\t* testsuite/23_containers/unordered_set/allocator/default_init.cc:\n\tRemove XFAIL.", "tree": {"sha": "8657a3e30e0510caacd21163196d3098385b0e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8657a3e30e0510caacd21163196d3098385b0e23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8f0193b5b83f6e85d65015e79c803295baf5166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8f0193b5b83f6e85d65015e79c803295baf5166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8f0193b5b83f6e85d65015e79c803295baf5166", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8f0193b5b83f6e85d65015e79c803295baf5166/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81eab204a56dcd8acb1ca5d7df277437ca07b51a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81eab204a56dcd8acb1ca5d7df277437ca07b51a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81eab204a56dcd8acb1ca5d7df277437ca07b51a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2130c958262a2f23b7b3d3ae75afc605040e5387", "filename": "libstdc++-v3/include/bits/hashtable_policy.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8f0193b5b83f6e85d65015e79c803295baf5166/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8f0193b5b83f6e85d65015e79c803295baf5166/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h?ref=f8f0193b5b83f6e85d65015e79c803295baf5166", "patch": "@@ -1162,7 +1162,7 @@ namespace __detail\n     struct _Hashtable_ebo_helper<_Nm, _Tp, true>\n     : private _Tp\n     {\n-      _Hashtable_ebo_helper() = default;\n+      _Hashtable_ebo_helper() noexcept(noexcept(_Tp())) : _Tp() { }\n \n       template<typename _OtherTp>\n \t_Hashtable_ebo_helper(_OtherTp&& __tp)\n@@ -1188,7 +1188,7 @@ namespace __detail\n       _Tp& _M_get() { return _M_tp; }\n \n     private:\n-      _Tp _M_tp;\n+      _Tp _M_tp{};\n     };\n \n   /**\n@@ -1246,6 +1246,7 @@ namespace __detail\n       // We need the default constructor for the local iterators and _Hashtable\n       // default constructor.\n       _Hash_code_base() = default;\n+\n       _Hash_code_base(const _Hash& __hash) : __ebo_hash(__hash) { }\n \n       __hash_code\n@@ -1639,6 +1640,7 @@ namespace __detail\n \n     protected:\n       _Hashtable_base() = default;\n+\n       _Hashtable_base(const _Hash& __hash, const _Equal& __eq)\n       : __hash_code_base(__hash), _EqualEBO(__eq)\n       { }"}, {"sha": "12f1163951eddde28b0f578c99a192557895d476", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/allocator/default_init.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8f0193b5b83f6e85d65015e79c803295baf5166/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fdefault_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8f0193b5b83f6e85d65015e79c803295baf5166/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fdefault_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fdefault_init.cc?ref=f8f0193b5b83f6e85d65015e79c803295baf5166", "patch": "@@ -17,7 +17,6 @@\n \n // { dg-do run { target c++11 } }\n // { dg-options \"-O0\" }\n-// { dg-xfail-run-if \"PR c++/65816\" { *-*-* } }\n \n #include <unordered_map>\n #include <testsuite_hooks.h>"}, {"sha": "1ea6603024e136add5c4daa644d9b1fee23b1661", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/allocator/default_init.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8f0193b5b83f6e85d65015e79c803295baf5166/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fallocator%2Fdefault_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8f0193b5b83f6e85d65015e79c803295baf5166/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fallocator%2Fdefault_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fallocator%2Fdefault_init.cc?ref=f8f0193b5b83f6e85d65015e79c803295baf5166", "patch": "@@ -17,7 +17,6 @@\n \n // { dg-do run { target c++11 } }\n // { dg-options \"-O0\" }\n-// { dg-xfail-run-if \"PR c++/65816\" { *-*-* } }\n \n #include <unordered_set>\n #include <testsuite_hooks.h>"}]}