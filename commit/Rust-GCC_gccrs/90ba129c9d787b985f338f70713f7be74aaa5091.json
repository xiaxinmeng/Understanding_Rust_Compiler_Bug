{"sha": "90ba129c9d787b985f338f70713f7be74aaa5091", "node_id": "C_kwDOANBUbNoAKDkwYmExMjljOWQ3ODdiOTg1ZjMzOGY3MDcxM2Y3YmU3NGFhYTUwOTE", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-10-30T18:16:32Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-10-30T18:16:32Z"}, "message": "Fortran: remove descriptions of SHORT and LONG in intrinsic.texi\n\n2021-10-30  Manfred Schwarb  <manfred99@gmx.ch>\n\ngcc/fortran/ChangeLog:\n\n\t* intrinsic.texi: Remove entries for SHORT and LONG intrinsics.", "tree": {"sha": "14b41f6dbb21f0a5fded6a6f35dea85116184589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14b41f6dbb21f0a5fded6a6f35dea85116184589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90ba129c9d787b985f338f70713f7be74aaa5091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ba129c9d787b985f338f70713f7be74aaa5091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90ba129c9d787b985f338f70713f7be74aaa5091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ba129c9d787b985f338f70713f7be74aaa5091/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6888b7974b367c7f90705ffb4120ec1c7de90440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6888b7974b367c7f90705ffb4120ec1c7de90440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6888b7974b367c7f90705ffb4120ec1c7de90440"}], "stats": {"total": 50, "additions": 3, "deletions": 47}, "files": [{"sha": "6f7008a56584dcf1a9d0c2ca196d5956313b097c", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 3, "deletions": 47, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ba129c9d787b985f338f70713f7be74aaa5091/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ba129c9d787b985f338f70713f7be74aaa5091/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=90ba129c9d787b985f338f70713f7be74aaa5091", "patch": "@@ -218,10 +218,9 @@ Some basic guidelines for editing this document:\n * @code{LNBLNK}:        LNBLNK,    Index of the last non-blank character in a string\n * @code{LOC}:           LOC,       Returns the address of a variable\n * @code{LOG}:           LOG,       Logarithm function\n-* @code{LOG10}:         LOG10,     Base 10 logarithm function \n+* @code{LOG10}:         LOG10,     Base 10 logarithm function\n * @code{LOG_GAMMA}:     LOG_GAMMA, Logarithm of the Gamma function\n * @code{LOGICAL}:       LOGICAL,   Convert to logical type\n-* @code{LONG}:          LONG,      Convert to integer type\n * @code{LSHIFT}:        LSHIFT,    Left shift bits\n * @code{LSTAT}:         LSTAT,     Get file status\n * @code{LTIME}:         LTIME,     Convert time to local time info\n@@ -8372,7 +8371,6 @@ end program\n @node INT2\n @section @code{INT2} --- Convert to 16-bit integer type\n @fnindex INT2\n-@fnindex SHORT\n @cindex conversion, to integer\n \n @table @asis\n@@ -8381,8 +8379,6 @@ Convert to a @code{KIND=2} integer type. This is equivalent to the\n standard @code{INT} intrinsic with an optional argument of\n @code{KIND=2}, and is only included for backwards compatibility.\n \n-The @code{SHORT} intrinsic is equivalent to @code{INT2}.\n-\n @item @emph{Standard}:\n GNU extension\n \n@@ -8403,8 +8399,7 @@ The return value is a @code{INTEGER(2)} variable.\n \n @item @emph{See also}:\n @ref{INT}, @gol\n-@ref{INT8}, @gol\n-@ref{LONG}\n+@ref{INT8}\n @end table\n \n \n@@ -8440,8 +8435,7 @@ The return value is a @code{INTEGER(8)} variable.\n \n @item @emph{See also}:\n @ref{INT}, @gol\n-@ref{INT2}, @gol\n-@ref{LONG}\n+@ref{INT2}\n @end table\n \n \n@@ -9849,44 +9843,6 @@ kind corresponding to @var{KIND}, or of the default logical kind if\n \n \n \n-@node LONG\n-@section @code{LONG} --- Convert to integer type\n-@fnindex LONG\n-@cindex conversion, to integer\n-\n-@table @asis\n-@item @emph{Description}:\n-Convert to a @code{KIND=4} integer type, which is the same size as a C\n-@code{long} integer.  This is equivalent to the standard @code{INT}\n-intrinsic with an optional argument of @code{KIND=4}, and is only\n-included for backwards compatibility.\n-\n-@item @emph{Standard}:\n-GNU extension\n-\n-@item @emph{Class}:\n-Elemental function\n-\n-@item @emph{Syntax}:\n-@code{RESULT = LONG(A)}\n-\n-@item @emph{Arguments}:\n-@multitable @columnfractions .15 .70\n-@item @var{A}    @tab Shall be of type @code{INTEGER},\n-@code{REAL}, or @code{COMPLEX}.\n-@end multitable\n-\n-@item @emph{Return value}:\n-The return value is a @code{INTEGER(4)} variable.\n-\n-@item @emph{See also}:\n-@ref{INT}, @gol\n-@ref{INT2}, @gol\n-@ref{INT8}\n-@end table\n-\n-\n-\n @node LSHIFT\n @section @code{LSHIFT} --- Left shift bits\n @fnindex LSHIFT"}]}