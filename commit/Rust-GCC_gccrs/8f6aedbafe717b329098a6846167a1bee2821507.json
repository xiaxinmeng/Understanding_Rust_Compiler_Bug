{"sha": "8f6aedbafe717b329098a6846167a1bee2821507", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY2YWVkYmFmZTcxN2IzMjkwOThhNjg0NjE2N2ExYmVlMjgyMTUwNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-02-11T09:17:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-02-11T09:17:54Z"}, "message": "reload1.c (eliminate_regs_1): If insn is DEBUG_INSN, avoid any modifications outside of the DEBUG_INSN.\n\n\t* reload1.c (eliminate_regs_1): If insn is DEBUG_INSN, avoid any\n\tmodifications outside of the DEBUG_INSN.  Accept CLOBBERs inside\n\tof DEBUG_INSNs.\n\t(eliminate_regs_in_insn): Eliminate regs even in DEBUG_INSNs.\n\nFrom-SVN: r156693", "tree": {"sha": "e072b9fb483bdab98368db1fa8c73f104ce369a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e072b9fb483bdab98368db1fa8c73f104ce369a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f6aedbafe717b329098a6846167a1bee2821507", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f6aedbafe717b329098a6846167a1bee2821507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f6aedbafe717b329098a6846167a1bee2821507", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f6aedbafe717b329098a6846167a1bee2821507/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2d36740c2c8901e566dbbcc02ca5bbe51480fd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d36740c2c8901e566dbbcc02ca5bbe51480fd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d36740c2c8901e566dbbcc02ca5bbe51480fd7"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "77b133784a0eaaf5a1fdf1b7171145127e98cf12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f6aedbafe717b329098a6846167a1bee2821507/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f6aedbafe717b329098a6846167a1bee2821507/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f6aedbafe717b329098a6846167a1bee2821507", "patch": "@@ -1,5 +1,10 @@\n 2010-02-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* reload1.c (eliminate_regs_1): If insn is DEBUG_INSN, avoid any\n+\tmodifications outside of the DEBUG_INSN.  Accept CLOBBERs inside\n+\tof DEBUG_INSNs.\n+\t(eliminate_regs_in_insn): Eliminate regs even in DEBUG_INSNs.\n+\n \t* dwarf2out.c (mem_loc_descriptor) <case MEM>: Use DW_OP_deref_size\n \tif MEM's mode size isn't DWARF2_ADDR_SIZE.\n \t(mem_loc_descriptor) <do_scompare>: Allow also VOIDmode arguments."}, {"sha": "ee90f358d9e5dec21438e3364ec7f1d1b34f5303", "filename": "gcc/reload1.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f6aedbafe717b329098a6846167a1bee2821507/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f6aedbafe717b329098a6846167a1bee2821507/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=8f6aedbafe717b329098a6846167a1bee2821507", "patch": "@@ -1,6 +1,6 @@\n /* Reload pseudo regs into hard regs for insns that require hard regs.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -2570,7 +2570,7 @@ eliminate_regs_1 (rtx x, enum machine_mode mem_mode, rtx insn,\n       else if (reg_renumber && reg_renumber[regno] < 0\n \t       && reg_equiv_invariant && reg_equiv_invariant[regno])\n \t{\n-\t  if (may_use_invariant)\n+\t  if (may_use_invariant || (insn && DEBUG_INSN_P (insn)))\n \t    return eliminate_regs_1 (copy_rtx (reg_equiv_invariant[regno]),\n \t\t\t             mem_mode, insn, true);\n \t  /* There exists at least one use of REGNO that cannot be\n@@ -2685,9 +2685,11 @@ eliminate_regs_1 (rtx x, enum machine_mode mem_mode, rtx insn,\n \t  if (ep->from_rtx == XEXP (x, 0) && ep->can_eliminate)\n \t    {\n \t      if (! mem_mode\n-\t\t  /* Refs inside notes don't count for this purpose.  */\n+\t\t  /* Refs inside notes or in DEBUG_INSNs don't count for\n+\t\t     this purpose.  */\n \t\t  && ! (insn != 0 && (GET_CODE (insn) == EXPR_LIST\n-\t\t\t\t      || GET_CODE (insn) == INSN_LIST)))\n+\t\t\t\t      || GET_CODE (insn) == INSN_LIST\n+\t\t\t\t      || DEBUG_INSN_P (insn))))\n \t\tep->ref_outside_mem = 1;\n \n \t      return\n@@ -2863,6 +2865,9 @@ eliminate_regs_1 (rtx x, enum machine_mode mem_mode, rtx insn,\n       return x;\n \n     case CLOBBER:\n+      gcc_assert (insn && DEBUG_INSN_P (insn));\n+      break;\n+\n     case ASM_OPERANDS:\n     case SET:\n       gcc_unreachable ();\n@@ -3199,6 +3204,9 @@ eliminate_regs_in_insn (rtx insn, int replace)\n \t\t  || GET_CODE (PATTERN (insn)) == ADDR_DIFF_VEC\n \t\t  || GET_CODE (PATTERN (insn)) == ASM_INPUT\n \t\t  || DEBUG_INSN_P (insn));\n+      if (DEBUG_INSN_P (insn))\n+\tINSN_VAR_LOCATION_LOC (insn)\n+\t  = eliminate_regs (INSN_VAR_LOCATION_LOC (insn), VOIDmode, insn);\n       return 0;\n     }\n "}]}