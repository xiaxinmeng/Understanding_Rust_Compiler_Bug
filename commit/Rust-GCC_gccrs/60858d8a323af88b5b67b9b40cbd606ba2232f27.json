{"sha": "60858d8a323af88b5b67b9b40cbd606ba2232f27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA4NThkOGEzMjNhZjg4YjViNjdiOWI0MGNiZDYwNmJhMjIzMmYyNw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-11-09T17:17:57Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-11-09T17:17:57Z"}, "message": "configure.ac: Make more cross-compile friendly.\n\n2011-11-09  Tobias Burnus  <burnus@net-b.de>\n\n        * configure.ac: Make more cross-compile friendly.\n        * Makefile.in: Regenerate.\n        * aclocal.m4: Regenerate.\n        * config.h.in: Regenerate.\n        * configure: Regenerate.\n\nFrom-SVN: r181212", "tree": {"sha": "70456a49b9cecf45c2ccc1e666bdf289143a9bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70456a49b9cecf45c2ccc1e666bdf289143a9bcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60858d8a323af88b5b67b9b40cbd606ba2232f27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60858d8a323af88b5b67b9b40cbd606ba2232f27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60858d8a323af88b5b67b9b40cbd606ba2232f27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60858d8a323af88b5b67b9b40cbd606ba2232f27/comments", "author": null, "committer": null, "parents": [{"sha": "68126bad7bac641c40f6796f451093d07a1798b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68126bad7bac641c40f6796f451093d07a1798b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68126bad7bac641c40f6796f451093d07a1798b6"}], "stats": {"total": 217, "additions": 206, "deletions": 11}, "files": [{"sha": "59d1a564340b8c59ead6e03f1d7e86c4dcad869f", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=60858d8a323af88b5b67b9b40cbd606ba2232f27", "patch": "@@ -1,3 +1,11 @@\n+2011-11-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* configure.ac: Make more cross-compile friendly.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2011-11-09  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/46686\n@@ -20,9 +28,9 @@\n \n 2011-11-09  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        PR libfortran/50016\n-        * io/inquire.c (inquire_via_unit): Flush the unit and use ssize.\n-        * io/unix.c (buf_flush): Don't call _commit.\n+\tPR libfortran/50016\n+\t* io/inquire.c (inquire_via_unit): Flush the unit and use ssize.\n+\t* io/unix.c (buf_flush): Don't call _commit.\n \n 2011-11-08  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n@@ -36,9 +44,9 @@\n \n 2011-11-07  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        PR libfortran/45723\n-        * io/open.c (new_unit): Don't check file size before attempting\n-        seek.\n+\tPR libfortran/45723\n+\t* io/open.c (new_unit): Don't check file size before attempting\n+\tseek.\n \n 2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -538,9 +546,9 @@\n \n 2011-06-18  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        PR libfortran/49296\n-        * io/list_read.c (read_character): Accept EOF as a separator when\n-        reading string.\n+\tPR libfortran/49296\n+\t* io/list_read.c (read_character): Accept EOF as a separator when\n+\treading string.\n \n 2011-06-17  Daniel Carrera  <dcarrera@gmail.com>\n "}, {"sha": "540fdc6f456e868f08b26b4dbf3a5e956ef786dd", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=60858d8a323af88b5b67b9b40cbd606ba2232f27", "patch": "@@ -470,6 +470,7 @@ sysconfdir = @sysconfdir@\n target = @target@\n target_alias = @target_alias@\n target_cpu = @target_cpu@\n+target_noncanonical = @target_noncanonical@\n target_os = @target_os@\n target_subdir = @target_subdir@\n target_vendor = @target_vendor@"}, {"sha": "8673daa1a9d7d788aad4db25943230da0815944f", "filename": "libgfortran/aclocal.m4", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Faclocal.m4?ref=60858d8a323af88b5b67b9b40cbd606ba2232f27", "patch": "@@ -658,6 +658,41 @@ AC_MSG_RESULT([$_am_result])\n rm -f confinc confmf\n ])\n \n+# Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005, 2008\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 6\n+\n+# AM_PROG_CC_C_O\n+# --------------\n+# Like AC_PROG_CC_C_O, but changed for automake.\n+AC_DEFUN([AM_PROG_CC_C_O],\n+[AC_REQUIRE([AC_PROG_CC_C_O])dnl\n+AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\n+AC_REQUIRE_AUX_FILE([compile])dnl\n+# FIXME: we rely on the cache variable name because\n+# there is no other way.\n+set dummy $CC\n+am_cc=`echo $[2] | sed ['s/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/']`\n+eval am_t=\\$ac_cv_prog_cc_${am_cc}_c_o\n+if test \"$am_t\" != yes; then\n+   # Losing compiler, so override with the script.\n+   # FIXME: It is wrong to rewrite CC.\n+   # But if we don't then we get into trouble of one sort or another.\n+   # A longer-term fix would be to have automake use am__CC in this case,\n+   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n+   CC=\"$am_aux_dir/compile $CC\"\n+fi\n+dnl Make sure AC_PROG_CC is never called again, or it will override our\n+dnl setting of CC.\n+m4_define([AC_PROG_CC],\n+          [m4_fatal([AC_PROG_CC cannot be called after AM_PROG_CC_C_O])])\n+])\n+\n # Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-\n \n # Copyright (C) 1997, 1999, 2000, 2001, 2003, 2004, 2005, 2008"}, {"sha": "9333f64f8f0a4f398cce9c343fba5eeb104113f5", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=60858d8a323af88b5b67b9b40cbd606ba2232f27", "patch": "@@ -865,6 +865,9 @@\n    */\n #undef LT_OBJDIR\n \n+/* Define to 1 if your C compiler doesn't accept -c and -o together. */\n+#undef NO_MINUS_C_MINUS_O\n+\n /* Define to the address where bug reports for this package should be sent. */\n #undef PACKAGE_BUGREPORT\n "}, {"sha": "a8ac99afa25764ba6853baa942d9b50a98979614", "filename": "libgfortran/configure", "status": "modified", "additions": 142, "deletions": 2, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=60858d8a323af88b5b67b9b40cbd606ba2232f27", "patch": "@@ -691,6 +691,7 @@ am__isrc\n INSTALL_DATA\n INSTALL_SCRIPT\n INSTALL_PROGRAM\n+target_noncanonical\n target_os\n target_vendor\n target_cpu\n@@ -2840,8 +2841,12 @@ test -n \"$target_alias\" &&\n     NONENONEs,x,x, &&\n   program_prefix=${target_alias}-\n \n+\n+\n+\n target_alias=${target_alias-$host_alias}\n \n+\n # Sets up automake.  Must come after AC_CANONICAL_SYSTEM.  Each of the\n # following is magically included in AUTOMAKE_OPTIONS in each Makefile.am.\n #  1.9.6:  minimum required version\n@@ -4874,6 +4879,12 @@ esac\n # Create a spec file, so that compile/link tests don't fail\n test -f libgfortran.spec || touch libgfortran.spec\n \n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n # Check the compiler.\n # The same as in boehm-gc and libstdc++. Have to borrow it from there.\n # We must force CC to /not/ be precious variables; otherwise\n@@ -5551,6 +5562,135 @@ fi\n \n \n \n+\n+\n+if test \"x$CC\" != xcc; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC and cc understand -c and -o together\" >&5\n+$as_echo_n \"checking whether $CC and cc understand -c and -o together... \" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether cc understands -c and -o together\" >&5\n+$as_echo_n \"checking whether cc understands -c and -o together... \" >&6; }\n+fi\n+set dummy $CC; ac_cc=`$as_echo \"$2\" |\n+\t\t      sed 's/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/'`\n+if { as_var=ac_cv_prog_cc_${ac_cc}_c_o; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+# Make sure it works both with $CC and with simple cc.\n+# We do the test twice because some compilers refuse to overwrite an\n+# existing .o file with -o, though they will create one.\n+ac_try='$CC -c conftest.$ac_ext -o conftest2.$ac_objext >&5'\n+rm -f conftest2.*\n+if { { case \"(($ac_try\" in\n+  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n+  *) ac_try_echo=$ac_try;;\n+esac\n+eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n+$as_echo \"$ac_try_echo\"; } >&5\n+  (eval \"$ac_try\") 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; } &&\n+   test -f conftest2.$ac_objext && { { case \"(($ac_try\" in\n+  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n+  *) ac_try_echo=$ac_try;;\n+esac\n+eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n+$as_echo \"$ac_try_echo\"; } >&5\n+  (eval \"$ac_try\") 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; };\n+then\n+  eval ac_cv_prog_cc_${ac_cc}_c_o=yes\n+  if test \"x$CC\" != xcc; then\n+    # Test first that cc exists at all.\n+    if { ac_try='cc -c conftest.$ac_ext >&5'\n+  { { case \"(($ac_try\" in\n+  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n+  *) ac_try_echo=$ac_try;;\n+esac\n+eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n+$as_echo \"$ac_try_echo\"; } >&5\n+  (eval \"$ac_try\") 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }; then\n+      ac_try='cc -c conftest.$ac_ext -o conftest2.$ac_objext >&5'\n+      rm -f conftest2.*\n+      if { { case \"(($ac_try\" in\n+  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n+  *) ac_try_echo=$ac_try;;\n+esac\n+eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n+$as_echo \"$ac_try_echo\"; } >&5\n+  (eval \"$ac_try\") 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; } &&\n+\t test -f conftest2.$ac_objext && { { case \"(($ac_try\" in\n+  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n+  *) ac_try_echo=$ac_try;;\n+esac\n+eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n+$as_echo \"$ac_try_echo\"; } >&5\n+  (eval \"$ac_try\") 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; };\n+      then\n+\t# cc works too.\n+\t:\n+      else\n+\t# cc exists but doesn't like -o.\n+\teval ac_cv_prog_cc_${ac_cc}_c_o=no\n+      fi\n+    fi\n+  fi\n+else\n+  eval ac_cv_prog_cc_${ac_cc}_c_o=no\n+fi\n+rm -f core conftest*\n+\n+fi\n+if eval test \\$ac_cv_prog_cc_${ac_cc}_c_o = yes; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+\n+$as_echo \"#define NO_MINUS_C_MINUS_O 1\" >>confdefs.h\n+\n+fi\n+\n+# FIXME: we rely on the cache variable name because\n+# there is no other way.\n+set dummy $CC\n+am_cc=`echo $2 | sed 's/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/'`\n+eval am_t=\\$ac_cv_prog_cc_${am_cc}_c_o\n+if test \"$am_t\" != yes; then\n+   # Losing compiler, so override with the script.\n+   # FIXME: It is wrong to rewrite CC.\n+   # But if we don't then we get into trouble of one sort or another.\n+   # A longer-term fix would be to have automake use am__CC in this case,\n+   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n+   CC=\"$am_aux_dir/compile $CC\"\n+fi\n+\n+\n+\n # Add -Wall -fno-repack-arrays -fno-underscoring if we are using GCC.\n if test \"x$GCC\" = \"xyes\"; then\n   AM_FCFLAGS=\"-I . -Wall -Werror -fimplicit-none -fno-repack-arrays -fno-underscoring\"\n@@ -12114,7 +12254,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12117 \"configure\"\n+#line 12257 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12220,7 +12360,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12223 \"configure\"\n+#line 12363 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "a8b944df064df54c9e4680fb8622a939b6708e37", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60858d8a323af88b5b67b9b40cbd606ba2232f27/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=60858d8a323af88b5b67b9b40cbd606ba2232f27", "patch": "@@ -51,7 +51,10 @@ AC_SUBST(onestep)\n # Do not delete or change the following two lines.  For why, see\n # http://gcc.gnu.org/ml/libstdc++/2003-07/msg00451.html\n AC_CANONICAL_SYSTEM\n+ACX_NONCANONICAL_TARGET\n+\n target_alias=${target_alias-$host_alias}\n+AC_SUBST(target_alias)\n \n # Sets up automake.  Must come after AC_CANONICAL_SYSTEM.  Each of the\n # following is magically included in AUTOMAKE_OPTIONS in each Makefile.am.\n@@ -117,6 +120,7 @@ AC_SUBST(toolexeclibdir)\n # Create a spec file, so that compile/link tests don't fail\n test -f libgfortran.spec || touch libgfortran.spec\n \n+AC_LANG_C\n # Check the compiler.\n # The same as in boehm-gc and libstdc++. Have to borrow it from there.\n # We must force CC to /not/ be precious variables; otherwise\n@@ -128,6 +132,10 @@ m4_define([_AC_ARG_VAR_PRECIOUS],[])\n AC_PROG_CC\n m4_rename_force([real_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n \n+AC_SUBST(CFLAGS)\n+\n+AM_PROG_CC_C_O\n+\n # Add -Wall -fno-repack-arrays -fno-underscoring if we are using GCC.\n if test \"x$GCC\" = \"xyes\"; then\n   AM_FCFLAGS=\"-I . -Wall -Werror -fimplicit-none -fno-repack-arrays -fno-underscoring\""}]}