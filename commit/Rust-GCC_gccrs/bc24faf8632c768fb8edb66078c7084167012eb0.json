{"sha": "bc24faf8632c768fb8edb66078c7084167012eb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMyNGZhZjg2MzJjNzY4ZmI4ZWRiNjYwNzhjNzA4NDE2NzAxMmViMA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-03-04T01:00:16Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-03-04T01:00:16Z"}, "message": "Makefile.am: Use -bootclasspath, not -CLASSPATH.\n\n\t* Makefile.am: Use -bootclasspath, not -CLASSPATH.\n\t* Makefile.in: Rebuilt.\n\nFrom-SVN: r50270", "tree": {"sha": "85bc34633dedebd97c7a1dd6596084797c786419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85bc34633dedebd97c7a1dd6596084797c786419"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc24faf8632c768fb8edb66078c7084167012eb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc24faf8632c768fb8edb66078c7084167012eb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc24faf8632c768fb8edb66078c7084167012eb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc24faf8632c768fb8edb66078c7084167012eb0/comments", "author": null, "committer": null, "parents": [{"sha": "3b7d0e983034fed02da8fc9a2bd71b33ea684080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b7d0e983034fed02da8fc9a2bd71b33ea684080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b7d0e983034fed02da8fc9a2bd71b33ea684080"}], "stats": {"total": 109, "additions": 50, "deletions": 59}, "files": [{"sha": "ed0b35ce06de946aa358c458348839f23ef347e8", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc24faf8632c768fb8edb66078c7084167012eb0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc24faf8632c768fb8edb66078c7084167012eb0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bc24faf8632c768fb8edb66078c7084167012eb0", "patch": "@@ -1,3 +1,8 @@\n+2002-03-03  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* Makefile.am: Use -bootclasspath, not -CLASSPATH.\n+\t* Makefile.in: Rebuilt.\n+\n 2002-03-03 Mark Wielaard <mark@klomp.org>\n \n \t* java/util/Timer (TaskQueue.stop): set elements to zero.\n@@ -22,6 +27,7 @@\n \t* configure: Rebuilt.\n \t* configure.in (GCJVERSION): Removed.\n \n+>>>>>>> 1.1201\n 2002-02-26  Andreas Schwab  <schwab@suse.de>\n \n \t* acinclude.m4 (LIB_AC_PROG_CXX): Use glibjava_CXX instead of"}, {"sha": "bceb907421a49bad9a92aa953e40be6e53639075", "filename": "libjava/Makefile.am", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc24faf8632c768fb8edb66078c7084167012eb0/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc24faf8632c768fb8edb66078c7084167012eb0/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=bc24faf8632c768fb8edb66078c7084167012eb0", "patch": "@@ -69,7 +69,7 @@ endif # CANADIAN\n ## compiles.\n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8\n \n-GCJCOMPILE = $(LIBTOOL) --tag=GCJ --mode=compile $(GCJ_WITH_FLAGS) -fCLASSPATH=$(here) $(JC1FLAGS) -MD -MT $@ -MF $(@:.lo=.d) -c\n+GCJCOMPILE = $(LIBTOOL) --tag=GCJ --mode=compile $(GCJ_WITH_FLAGS) -fbootclasspath=$(here) $(JC1FLAGS) -MD -MT $@ -MF $(@:.lo=.d) -c\n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n \n@@ -186,8 +186,8 @@ libgcj.jar: $(built_java_source_files) $(java_source_files) $(x_java_source_file\n \t@set fnord $(MAKEFLAGS); amf=$$2; fail=no; \\\n \tjavac=\"$(JAVAC)\"; \\\n \tcat tmp-list | (while read f; do \\\n-\t  echo $$javac $(JCFLAGS) -CLASSPATH $(here):$(srcdir) -d $(here) $$f; \\\n-\t  $$javac $(JCFLAGS) -CLASSPATH $(here):$(srcdir) -d $(here) $$f \\\n+\t  echo $$javac $(JCFLAGS) -bootclasspath $(here):$(srcdir) -d $(here) $$f; \\\n+\t  $$javac $(JCFLAGS) -bootclasspath $(here):$(srcdir) -d $(here) $$f \\\n \t    || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes ;; *) exit 1;; esac; \\\n \tdone; \\\n \ttest \"$$fail\" = no)\n@@ -256,7 +256,7 @@ libgcjx.la: $(libgcjx_la_OBJECTS) $(libgcjx_la_DEPENDENCIES)\n \n .class.h:\n ## FIXME: GNU make specific.\n-\t$(GCJH) -CLASSPATH $(top_builddir) $(basename $<)\n+\t$(GCJH) -bootclasspath $(top_builddir) $(basename $<)\n \n ## Header files used when compiling some of the nat* files.\n ordinary_nat_headers = $(ordinary_java_source_files:.java=.h) \\\n@@ -272,13 +272,13 @@ x_nat_headers = $(x_java_source_files:.java=.h)\n $(ordinary_nat_headers) $(x_nat_headers): %.h: %.class\n \n java/lang/ClassLoader.h: java/lang/ClassLoader.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t\t-friend 'jclass _Jv_FindClass (_Jv_Utf8Const *name, java::lang::ClassLoader *loader);' \\\n \t\t-friend 'void _Jv_RunMain (jclass klass, const char *name, int argc, const char **argv, bool is_jar);' \\\n \t\t$(basename $<)\n \n java/lang/Thread.h: java/lang/Thread.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t\t-prepend 'class _Jv_JNIEnv;' \\\n \t\t-prepend '#define _JV_NOT_OWNER 1' \\\n \t\t-prepend '#define _JV_INTERRUPTED 2' \\\n@@ -291,7 +291,7 @@ java/lang/Thread.h: java/lang/Thread.class\n \t\t$(basename $<)\n \n java/lang/String.h: java/lang/String.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'jchar* _Jv_GetStringChars (jstring str);' \\\n \t    -friend 'jstring* _Jv_StringFindSlot (jchar*, jint, jint);' \\\n \t    -friend 'jstring* _Jv_StringGetSlot (jstring);' \\\n@@ -301,38 +301,38 @@ java/lang/String.h: java/lang/String.class\n \t    $(basename $<)\n \n java/lang/reflect/Constructor.h: java/lang/reflect/Constructor.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'jmethodID _Jv_FromReflectedConstructor (java::lang::reflect::Constructor *);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n \t    $(basename $<)\n \n java/lang/reflect/Field.h: java/lang/reflect/Field.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'jfieldID _Jv_FromReflectedField (java::lang::reflect::Field *);' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedField (_Jv_JNIEnv*, jclass, jfieldID, jboolean);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    $(basename $<)\n \n java/lang/reflect/Method.h: java/lang/reflect/Method.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'jmethodID _Jv_FromReflectedMethod (java::lang::reflect::Method *);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    -friend 'class java::io::ObjectInputStream;' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n \t    $(basename $<)\n \n gnu/gcj/runtime/VMClassLoader.h: gnu/gcj/runtime/VMClassLoader.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'class ::java::lang::ClassLoader;' \\\n \t    $(basename $<)\n \n java/io/ObjectInputStream$$GetField.h: java/io/ObjectInputStream.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t'java/io/ObjectInputStream$$GetField'\n \n java/io/ObjectOutputStream$$PutField.h: java/io/ObjectOutputStream.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t'java/io/ObjectOutputStream$$PutField'\n \n ## Headers we maintain by hand and which we want to install."}, {"sha": "a87668f9afca4a9be92c02dcf81e045b9c9ecca3", "filename": "libjava/Makefile.in", "status": "modified", "additions": 31, "deletions": 46, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc24faf8632c768fb8edb66078c7084167012eb0/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc24faf8632c768fb8edb66078c7084167012eb0/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=bc24faf8632c768fb8edb66078c7084167012eb0", "patch": "@@ -124,44 +124,32 @@ libgcj_basedir = @libgcj_basedir@\n mkinstalldirs = @mkinstalldirs@\n \n AUTOMAKE_OPTIONS = foreign\n-@TESTSUBDIR_TRUE@SUBDIRS = \\\n-@TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n-@TESTSUBDIR_FALSE@SUBDIRS = \\\n-@TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n-@USE_LIBDIR_TRUE@toolexeclibdir = \\\n-@USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = \\\n-@USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexecdir = \\\n-@USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n-@XLIB_AWT_TRUE@cond_x_ltlibrary = \\\n-@XLIB_AWT_TRUE@libgcjx.la\n-@XLIB_AWT_FALSE@cond_x_ltlibrary = \\\n+@TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n+@TESTSUBDIR_FALSE@SUBDIRS = @TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n+@USE_LIBDIR_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n+@XLIB_AWT_TRUE@cond_x_ltlibrary = @XLIB_AWT_TRUE@libgcjx.la\n+@XLIB_AWT_FALSE@cond_x_ltlibrary = \n \n toolexeclib_LTLIBRARIES = libgcj.la $(cond_x_ltlibrary)\n toolexeclib_DATA = libgcj.spec\n data_DATA = libgcj.jar\n \n secdir = $(libdir)/security\n \n-@NATIVE_TRUE@bin_PROGRAMS = \\\n-@NATIVE_TRUE@jv-convert gij rmic rmiregistry\n+@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij rmic rmiregistry\n \n bin_SCRIPTS = addr2name.awk\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = \\\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = \\\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@jar\n-@CANADIAN_FALSE@ZIP = \\\n-@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n-@CANADIAN_TRUE@GCJH = \\\n-@CANADIAN_TRUE@gcjh\n-@CANADIAN_FALSE@GCJH = \\\n-@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_FALSE@jar\n+@CANADIAN_FALSE@ZIP = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n+@CANADIAN_TRUE@GCJH = @CANADIAN_TRUE@gcjh\n+@CANADIAN_FALSE@GCJH = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n \n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8\n \n-GCJCOMPILE = $(LIBTOOL) --tag=GCJ --mode=compile $(GCJ_WITH_FLAGS) -fCLASSPATH=$(here) $(JC1FLAGS) -MD -MT $@ -MF $(@:.lo=.d) -c\n+GCJCOMPILE = $(LIBTOOL) --tag=GCJ --mode=compile $(GCJ_WITH_FLAGS) -fbootclasspath=$(here) $(JC1FLAGS) -MD -MT $@ -MF $(@:.lo=.d) -c\n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n \n@@ -177,10 +165,8 @@ AM_CXXFLAGS = -fno-rtti -fnon-call-exceptions \\\n \t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE \\\n \t-DPREFIX=\"\\\"$(prefix)\\\"\"\n \n-@USING_GCC_TRUE@AM_CFLAGS = \\\n-@USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n-@USING_GCC_FALSE@AM_CFLAGS = \\\n-@USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n+@USING_GCC_TRUE@AM_CFLAGS = @USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n+@USING_GCC_FALSE@AM_CFLAGS = @USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n \n JCFLAGS = -g\n JC1FLAGS = @LIBGCJ_JAVAFLAGS@ $(GCJFLAGS)\n@@ -254,8 +240,7 @@ extra_headers = java/lang/Object.h java/lang/Class.h\n \n NM = nm\n \n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = \\\n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n \n CONVERT_DIR = gnu/gcj/convert\n \n@@ -1735,7 +1720,7 @@ libgcj-test.spec.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -3034,7 +3019,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n@@ -3227,8 +3212,8 @@ libgcj.jar: $(built_java_source_files) $(java_source_files) $(x_java_source_file\n \t@set fnord $(MAKEFLAGS); amf=$$2; fail=no; \\\n \tjavac=\"$(JAVAC)\"; \\\n \tcat tmp-list | (while read f; do \\\n-\t  echo $$javac $(JCFLAGS) -CLASSPATH $(here):$(srcdir) -d $(here) $$f; \\\n-\t  $$javac $(JCFLAGS) -CLASSPATH $(here):$(srcdir) -d $(here) $$f \\\n+\t  echo $$javac $(JCFLAGS) -bootclasspath $(here):$(srcdir) -d $(here) $$f; \\\n+\t  $$javac $(JCFLAGS) -bootclasspath $(here):$(srcdir) -d $(here) $$f \\\n \t    || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes ;; *) exit 1;; esac; \\\n \tdone; \\\n \ttest \"$$fail\" = no)\n@@ -3275,18 +3260,18 @@ libgcjx.la: $(libgcjx_la_OBJECTS) $(libgcjx_la_DEPENDENCIES)\n \t-rpath $(toolexeclibdir) $(libgcjx_la_LDFLAGS) $(LIBS)\n \n .class.h:\n-\t$(GCJH) -CLASSPATH $(top_builddir) $(basename $<)\n+\t$(GCJH) -bootclasspath $(top_builddir) $(basename $<)\n \n $(ordinary_nat_headers) $(x_nat_headers): %.h: %.class\n \n java/lang/ClassLoader.h: java/lang/ClassLoader.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t\t-friend 'jclass _Jv_FindClass (_Jv_Utf8Const *name, java::lang::ClassLoader *loader);' \\\n \t\t-friend 'void _Jv_RunMain (jclass klass, const char *name, int argc, const char **argv, bool is_jar);' \\\n \t\t$(basename $<)\n \n java/lang/Thread.h: java/lang/Thread.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t\t-prepend 'class _Jv_JNIEnv;' \\\n \t\t-prepend '#define _JV_NOT_OWNER 1' \\\n \t\t-prepend '#define _JV_INTERRUPTED 2' \\\n@@ -3299,7 +3284,7 @@ java/lang/Thread.h: java/lang/Thread.class\n \t\t$(basename $<)\n \n java/lang/String.h: java/lang/String.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'jchar* _Jv_GetStringChars (jstring str);' \\\n \t    -friend 'jstring* _Jv_StringFindSlot (jchar*, jint, jint);' \\\n \t    -friend 'jstring* _Jv_StringGetSlot (jstring);' \\\n@@ -3309,38 +3294,38 @@ java/lang/String.h: java/lang/String.class\n \t    $(basename $<)\n \n java/lang/reflect/Constructor.h: java/lang/reflect/Constructor.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'jmethodID _Jv_FromReflectedConstructor (java::lang::reflect::Constructor *);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n \t    $(basename $<)\n \n java/lang/reflect/Field.h: java/lang/reflect/Field.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'jfieldID _Jv_FromReflectedField (java::lang::reflect::Field *);' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedField (_Jv_JNIEnv*, jclass, jfieldID, jboolean);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    $(basename $<)\n \n java/lang/reflect/Method.h: java/lang/reflect/Method.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'jmethodID _Jv_FromReflectedMethod (java::lang::reflect::Method *);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    -friend 'class java::io::ObjectInputStream;' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n \t    $(basename $<)\n \n gnu/gcj/runtime/VMClassLoader.h: gnu/gcj/runtime/VMClassLoader.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t    -friend 'class ::java::lang::ClassLoader;' \\\n \t    $(basename $<)\n \n java/io/ObjectInputStream$$GetField.h: java/io/ObjectInputStream.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t'java/io/ObjectInputStream$$GetField'\n \n java/io/ObjectOutputStream$$PutField.h: java/io/ObjectOutputStream.class\n-\t$(GCJH) -CLASSPATH $(top_builddir) \\\n+\t$(GCJH) -bootclasspath $(top_builddir) \\\n \t'java/io/ObjectOutputStream$$PutField'\n \n $(extra_headers):"}]}