{"sha": "fbb592407c9dd244b4cea086cbb90d7bd0bf60bb", "node_id": "C_kwDOANBUbNoAKGZiYjU5MjQwN2M5ZGQyNDRiNGNlYTA4NmNiYjkwZDdiZDBiZjYwYmI", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2022-01-04T09:26:23Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2022-01-04T09:26:23Z"}, "message": "libgomp: Fix GOMP_DEVICE_NUM_VAR stringification during offload image load\n\nIn the patch that implemented omp_get_device_num(), there was an error where\nthe stringification of GOMP_DEVICE_NUM_VAR, which is the macro expanding to\nthe actual symbol used, was erroneously using the STRINGX() macro in the\nlibgomp offload image symbol search, and expansion of the variable name\nstring through the additional layer of preprocessor symbol was not properly\nachieved.\n\nThis patch fixes this by changing to properly use XSTRING(), also from\ninclude/symcat.h.\n\nlibgomp/ChangeLog:\n\n\t* plugin/plugin-gcn.c (GOMP_OFFLOAD_load_image): Change uses of STRINGX\n\tinto XSTRING when looking for GOMP_DEVICE_NUM_VAR in offload image.\n\t* plugin/plugin-nvptx.c (GOMP_OFFLOAD_load_image): Likewise.", "tree": {"sha": "a81523145a067c65cf2697e2ec9e7012b1b46e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a81523145a067c65cf2697e2ec9e7012b1b46e3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbb592407c9dd244b4cea086cbb90d7bd0bf60bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb592407c9dd244b4cea086cbb90d7bd0bf60bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbb592407c9dd244b4cea086cbb90d7bd0bf60bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb592407c9dd244b4cea086cbb90d7bd0bf60bb/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a15451da14410bf2bd6ec8f5baba1014638c67a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a15451da14410bf2bd6ec8f5baba1014638c67a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a15451da14410bf2bd6ec8f5baba1014638c67a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d0f05b28bf3fad556002dd61bcb393799c99f73f", "filename": "libgomp/plugin/plugin-gcn.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb592407c9dd244b4cea086cbb90d7bd0bf60bb/libgomp%2Fplugin%2Fplugin-gcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb592407c9dd244b4cea086cbb90d7bd0bf60bb/libgomp%2Fplugin%2Fplugin-gcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-gcn.c?ref=fbb592407c9dd244b4cea086cbb90d7bd0bf60bb", "patch": "@@ -3401,12 +3401,12 @@ GOMP_OFFLOAD_load_image (int ord, unsigned version, const void *target_data,\n \t}\n     }\n \n-  GCN_DEBUG (\"Looking for variable %s\\n\", STRINGX (GOMP_DEVICE_NUM_VAR));\n+  GCN_DEBUG (\"Looking for variable %s\\n\", XSTRING (GOMP_DEVICE_NUM_VAR));\n \n   hsa_status_t status;\n   hsa_executable_symbol_t var_symbol;\n   status = hsa_fns.hsa_executable_get_symbol_fn (agent->executable, NULL,\n-\t\t\t\t\t\t STRINGX (GOMP_DEVICE_NUM_VAR),\n+\t\t\t\t\t\t XSTRING (GOMP_DEVICE_NUM_VAR),\n \t\t\t\t\t\t agent->id, 0, &var_symbol);\n   if (status == HSA_STATUS_SUCCESS)\n     {"}, {"sha": "b4f0a84d77a6a8bc8d0f9f2a4b86117e6bee171c", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb592407c9dd244b4cea086cbb90d7bd0bf60bb/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb592407c9dd244b4cea086cbb90d7bd0bf60bb/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=fbb592407c9dd244b4cea086cbb90d7bd0bf60bb", "patch": "@@ -1353,7 +1353,7 @@ GOMP_OFFLOAD_load_image (int ord, unsigned version, const void *target_data,\n   size_t device_num_varsize;\n   CUresult r = CUDA_CALL_NOCHECK (cuModuleGetGlobal, &device_num_varptr,\n \t\t\t\t  &device_num_varsize, module,\n-\t\t\t\t  STRINGX (GOMP_DEVICE_NUM_VAR));\n+\t\t\t\t  XSTRING (GOMP_DEVICE_NUM_VAR));\n   if (r == CUDA_SUCCESS)\n     {\n       targ_tbl->start = (uintptr_t) device_num_varptr;"}]}