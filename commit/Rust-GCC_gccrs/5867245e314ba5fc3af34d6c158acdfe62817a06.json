{"sha": "5867245e314ba5fc3af34d6c158acdfe62817a06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2NzI0NWUzMTRiYTVmYzNhZjM0ZDZjMTU4YWNkZmU2MjgxN2EwNg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-01-31T02:48:54Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-01-31T02:48:54Z"}, "message": "This commit was generated by cvs2svn to compensate for changes in r49361,\n\nwhich included commits to RCS files with non-trunk default branches.\n\nFrom-SVN: r49362", "tree": {"sha": "51bc6b3eca720b9efb7549530665860a9e9a33fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51bc6b3eca720b9efb7549530665860a9e9a33fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5867245e314ba5fc3af34d6c158acdfe62817a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5867245e314ba5fc3af34d6c158acdfe62817a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5867245e314ba5fc3af34d6c158acdfe62817a06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5867245e314ba5fc3af34d6c158acdfe62817a06/comments", "author": null, "committer": null, "parents": [{"sha": "c2206235fbbb85d5ccf75472ef9ec660ba2a89e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2206235fbbb85d5ccf75472ef9ec660ba2a89e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2206235fbbb85d5ccf75472ef9ec660ba2a89e7"}], "stats": {"total": 907, "additions": 555, "deletions": 352}, "files": [{"sha": "84a7dd3d63e33b4641069d31fafd0b02a7626092", "filename": "boehm-gc/Makefile.direct", "status": "modified", "additions": 29, "deletions": 15, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5867245e314ba5fc3af34d6c158acdfe62817a06/boehm-gc%2FMakefile.direct", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5867245e314ba5fc3af34d6c158acdfe62817a06/boehm-gc%2FMakefile.direct", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.direct?ref=5867245e314ba5fc3af34d6c158acdfe62817a06", "patch": "@@ -103,9 +103,9 @@ HOSTCFLAGS=$(CFLAGS)\n #   See gc_cpp.h for details.  No effect on the C part of the collector.\n #   This is defined implicitly in a few environments.  Must also be defined\n #   by clients that use gc_cpp.h.\n-# -DREDIRECT_MALLOC=X causes malloc, realloc, and free to be defined\n-#   as aliases for X, GC_realloc, and GC_free, respectively.\n-#   Calloc is redefined in terms of the new malloc.  X should\n+# -DREDIRECT_MALLOC=X causes malloc, realloc, and free to be\n+#   defined as aliases for X, GC_realloc, and GC_free, respectively.\n+#   Calloc and strdup are redefined in terms of the new malloc.  X should\n #   be either GC_malloc or GC_malloc_uncollectable, or\n #   GC_debug_malloc_replacement.  (The latter invokes GC_debug_malloc\n #   with dummy source location information, but still results in\n@@ -114,7 +114,9 @@ HOSTCFLAGS=$(CFLAGS)\n #   you don't want to (or can't) look at.  It may not work for\n #   existing code, but it often does.  Neither works on all platforms,\n #   since some ports use malloc or calloc to obtain system memory.\n-#   (Probably works for UNIX, and win32.)\n+#   (Probably works for UNIX, and win32.)  If you build with DBG_HDRS_ALL,\n+#   you should only use GC_debug_malloc_replacement as a malloc\n+#   replacement.\n # -DREDIRECT_REALLOC=X causes GC_realloc to be redirected to X.\n #   The canonical use is -DREDIRECT_REALLOC=GC_debug_realloc_replacement,\n #   together with -DREDIRECT_MALLOC=GC_debug_malloc_replacement to\n@@ -146,8 +148,8 @@ HOSTCFLAGS=$(CFLAGS)\n #   Works for Solaris and Irix.\n # -DUSE_MUNMAP causes memory to be returned to the OS under the right\n #   circumstances.  This currently disables VM-based incremental collection.\n-#   This is currently experimental, and works only under some Unix and\n-#   Linux versions.\n+#   This is currently experimental, and works only under some Unix,\n+#   Linux and Windows versions.\n # -DMMAP_STACKS (for Solaris threads) Use mmap from /dev/zero rather than\n #   GC_scratch_alloc() to get stack memory.\n # -DPRINT_BLACK_LIST Whenever a black list entry is added, i.e. whenever\n@@ -183,8 +185,12 @@ HOSTCFLAGS=$(CFLAGS)\n #   allocated through the debugging interface.  Affects the amount of\n #   information generated in leak reports.  Only matters on platforms\n #   on which we can quickly generate call stacks, currently Linux/(X86 & SPARC)\n-#   and Solaris/SPARC.  Turns on call chain saving on X86.  On X86, client\n+#   and Solaris/SPARC and platforms that provide execinfo.h.\n+#   Default is zero.  On X86, client\n #   code should NOT be compiled with -fomit-frame-pointer.\n+# -DSAVE_CALL_NARGS=<n> Set the number of functions arguments to be\n+#   saved with each call frame.  Default is zero.  Ignored if we\n+#   don't know how to retrieve arguments on the platform.\n # -DCHECKSUMS reports on erroneously clear dirty bits, and unexpectedly\n #   altered stubborn objects, at substantial performance cost.\n #   Use only for debugging of the incremental collector.\n@@ -219,6 +225,14 @@ HOSTCFLAGS=$(CFLAGS)\n #   These may otherwise alter its configuration, or turn off GC altogether.\n #   I don't know of a reason to disable this, except possibly if the\n #   resulting process runs as a privileged user?\n+# -DUSE_GLOBAL_ALLOC.  Win32 only.  Use GlobalAlloc instead of\n+#   VirtualAlloc to allocate the heap.  May be needed to work around\n+#   a Windows NT/2000 issue.  Incompatible with USE_MUNMAP.\n+#   See README.win32 for details.\n+# -DMAKE_BACK_GRAPH. Enable GC_PRINT_BACK_HEIGHT environment variable.\n+#   See README.environment for details.  Experimental. Limited platform\n+#   support.  Implies DBG_HDRS_ALL.  All allocation should be done using\n+#   the debug interface.\n # -DSTUBBORN_ALLOC allows allocation of \"hard to change\" objects, and thus\n #   makes incremental collection easier.  Was enabled by default until 6.0.\n #   Rarely used, to my knowledge.\n@@ -229,16 +243,16 @@ AR= ar\n RANLIB= ranlib\n \n \n-OBJS= alloc.o reclaim.o allchblk.o misc.o mach_dep.o os_dep.o mark_rts.o headers.o mark.o obj_map.o blacklst.o finalize.o new_hblk.o dbg_mlc.o malloc.o stubborn.o checksums.o solaris_threads.o irix_threads.o linux_threads.o typd_mlc.o ptr_chck.o mallocx.o solaris_pthreads.o gcj_mlc.o specific.o gc_dlopen.o\n+OBJS= alloc.o reclaim.o allchblk.o misc.o mach_dep.o os_dep.o mark_rts.o headers.o mark.o obj_map.o blacklst.o finalize.o new_hblk.o dbg_mlc.o malloc.o stubborn.o checksums.o solaris_threads.o irix_threads.o linux_threads.o typd_mlc.o ptr_chck.o mallocx.o solaris_pthreads.o gcj_mlc.o specific.o gc_dlopen.o backgraph.o\n \n-CSRCS= reclaim.c allchblk.c misc.c alloc.c mach_dep.c os_dep.c mark_rts.c headers.c mark.c obj_map.c pcr_interface.c blacklst.c finalize.c new_hblk.c real_malloc.c dyn_load.c dbg_mlc.c malloc.c stubborn.c checksums.c solaris_threads.c irix_threads.c linux_threads.c typd_mlc.c ptr_chck.c mallocx.c solaris_pthreads.c gcj_mlc.c specific.c gc_dlopen.c\n+CSRCS= reclaim.c allchblk.c misc.c alloc.c mach_dep.c os_dep.c mark_rts.c headers.c mark.c obj_map.c pcr_interface.c blacklst.c finalize.c new_hblk.c real_malloc.c dyn_load.c dbg_mlc.c malloc.c stubborn.c checksums.c solaris_threads.c irix_threads.c linux_threads.c typd_mlc.c ptr_chck.c mallocx.c solaris_pthreads.c gcj_mlc.c specific.c gc_dlopen.c backgraph.c\n \n CORD_SRCS=  cord/cordbscs.c cord/cordxtra.c cord/cordprnt.c cord/de.c cord/cordtest.c include/cord.h include/ec.h include/private/cord_pos.h cord/de_win.c cord/de_win.h cord/de_cmds.h cord/de_win.ICO cord/de_win.RC\n \n CORD_OBJS=  cord/cordbscs.o cord/cordxtra.o cord/cordprnt.o\n \n SRCS= $(CSRCS) mips_sgi_mach_dep.s rs6000_mach_dep.s alpha_mach_dep.s \\\n-    sparc_mach_dep.s include/gc.h include/gc_typed.h \\\n+    sparc_mach_dep.S include/gc.h include/gc_typed.h \\\n     include/private/gc_hdrs.h include/private/gc_priv.h \\\n     include/private/gcconfig.h include/private/gc_pmark.h \\\n     include/gc_inl.h include/gc_inline.h include/gc_mark.h \\\n@@ -262,7 +276,7 @@ DOC_FILES= README.QUICK doc/README.Mac doc/README.MacOSX doc/README.OS2 \\\n \tdoc/README.win32 doc/barrett_diagram doc/README \\\n         doc/README.contributors doc/README.changes doc/gc.man \\\n \tdoc/README.environment doc/tree.html doc/gcdescr.html \\\n-\tdoc/README.autoconf doc/README.macros\n+\tdoc/README.autoconf doc/README.macros doc/README.ews4800\n \n TESTS= tests/test.c tests/test_cpp.cc tests/trace_test.c \\\n \ttests/leak_test.c tests/thread_leak_test.c\n@@ -442,13 +456,13 @@ mach_dep.o: $(srcdir)/mach_dep.c $(srcdir)/mips_sgi_mach_dep.s $(srcdir)/mips_ul\n #\t./if_mach ALPHA \"\" $(AS) -o mach_dep.o $(srcdir)/alpha_mach_dep.s\n #\talpha_mach_dep.s assumes that pointers are not saved in fp registers.\n #\tGcc on a 21264 can spill pointers to fp registers.  Oops.\n-\t./if_mach SPARC SUNOS5 $(AS) -o mach_dep.o $(srcdir)/sparc_mach_dep.s\n+\t./if_mach SPARC SUNOS5 $(CC) -c -o mach_dep.o $(srcdir)/sparc_mach_dep.S\n \t./if_mach SPARC SUNOS4 $(AS) -o mach_dep.o $(srcdir)/sparc_sunos4_mach_dep.s\n \t./if_mach SPARC OPENBSD $(AS) -o mach_dep.o $(srcdir)/sparc_sunos4_mach_dep.s\n \t./if_mach SPARC NETBSD $(AS) -o mach_dep.o $(srcdir)/sparc_netbsd_mach_dep.s\n-\t./if_mach IA64 HPUX as $(AS_ABI_FLAG) -o ia64_save_regs_in_stack.o $(srcdir)/ia64_save_regs_in_stack.s\n-\t./if_mach IA64 HPUX $(CC) -c -o mach_dep1.o $(SPECIALCFLAGS) $(srcdir)/mach_dep.c\n-\t./if_mach IA64 HPUX ld -r -o mach_dep.o mach_dep1.o ia64_save_regs_in_stack.o\n+\t./if_mach IA64 \"\" as $(AS_ABI_FLAG) -o ia64_save_regs_in_stack.o $(srcdir)/ia64_save_regs_in_stack.s\n+\t./if_mach IA64 \"\" $(CC) -c -o mach_dep1.o $(SPECIALCFLAGS) $(srcdir)/mach_dep.c\n+\t./if_mach IA64 \"\" ld -r -o mach_dep.o mach_dep1.o ia64_save_regs_in_stack.o\n \t./if_not_there mach_dep.o $(CC) -c $(SPECIALCFLAGS) $(srcdir)/mach_dep.c\n \n mark_rts.o: $(srcdir)/mark_rts.c $(UTILS)"}, {"sha": "297e5c30f41b65e95341322c77994c4d1d447134", "filename": "boehm-gc/config.guess", "status": "modified", "additions": 524, "deletions": 337, "changes": 861, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5867245e314ba5fc3af34d6c158acdfe62817a06/boehm-gc%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5867245e314ba5fc3af34d6c158acdfe62817a06/boehm-gc%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfig.guess?ref=5867245e314ba5fc3af34d6c158acdfe62817a06", "patch": "@@ -1,8 +1,10 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999\n+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001\n #   Free Software Foundation, Inc.\n-#\n+\n+timestamp='2001-10-05'\n+\n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 2 of the License, or\n@@ -22,52 +24,195 @@\n # configuration script generated by Autoconf, you may include it under\n # the same distribution terms that you use for the rest of that program.\n \n-# Written by Per Bothner <bothner@cygnus.com>.\n-# The master version of this file is at the FSF in /home/gd/gnu/lib.\n-# Please send patches to <autoconf-patches@gnu.org>.\n+# Originally written by Per Bothner <bothner@cygnus.com>.\n+# Please send patches to <config-patches@gnu.org>.  Submit a context\n+# diff and a properly formatted ChangeLog entry.\n #\n # This script attempts to guess a canonical system name similar to\n # config.sub.  If it succeeds, it prints the system name on stdout, and\n # exits with 0.  Otherwise, it exits with 1.\n #\n # The plan is that this can be called by configure scripts if you\n-# don't specify an explicit system type (host/target name).\n-#\n-# Only a few systems have been added to this list; please add others\n-# (but try to keep the structure clean).\n-#\n+# don't specify an explicit build system type.\n \n-# Use $HOST_CC if defined. $CC may point to a cross-compiler\n-if test x\"$CC_FOR_BUILD\" = x; then\n-  if test x\"$HOST_CC\" != x; then\n-    CC_FOR_BUILD=\"$HOST_CC\"\n-  else\n-    if test x\"$CC\" != x; then\n-      CC_FOR_BUILD=\"$CC\"\n-    else\n-      CC_FOR_BUILD=cc\n-    fi\n-  fi\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n+\n+usage=\"\\\n+Usage: $0 [OPTION]\n+\n+Output the configuration name of the system \\`$me' is run on.\n+\n+Operation modes:\n+  -h, --help         print this help, then exit\n+  -t, --time-stamp   print date of last modification, then exit\n+  -v, --version      print version number, then exit\n+\n+Report bugs and patches to <config-patches@gnu.org>.\"\n+\n+version=\"\\\n+GNU config.guess ($timestamp)\n+\n+Originally written by Per Bothner.\n+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001\n+Free Software Foundation, Inc.\n+\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+help=\"\n+Try \\`$me --help' for more information.\"\n+\n+# Parse command line\n+while test $# -gt 0 ; do\n+  case $1 in\n+    --time-stamp | --time* | -t )\n+       echo \"$timestamp\" ; exit 0 ;;\n+    --version | -v )\n+       echo \"$version\" ; exit 0 ;;\n+    --help | --h* | -h )\n+       echo \"$usage\"; exit 0 ;;\n+    -- )     # Stop option processing\n+       shift; break ;;\n+    - )\t# Use stdin as input.\n+       break ;;\n+    -* )\n+       echo \"$me: invalid option $1$help\" >&2\n+       exit 1 ;;\n+    * )\n+       break ;;\n+  esac\n+done\n+\n+if test $# != 0; then\n+  echo \"$me: too many arguments$help\" >&2\n+  exit 1\n fi\n \n \n+dummy=dummy-$$\n+trap 'rm -f $dummy.c $dummy.o $dummy.rel $dummy; exit 1' 1 2 15\n+\n+# CC_FOR_BUILD -- compiler used by this script.\n+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n+# use `HOST_CC' if defined, but it is deprecated.\n+\n+set_cc_for_build='case $CC_FOR_BUILD,$HOST_CC,$CC in\n+ ,,)    echo \"int dummy(){}\" > $dummy.c ;\n+\tfor c in cc gcc c89 ; do\n+\t  ($c $dummy.c -c -o $dummy.o) >/dev/null 2>&1 ;\n+\t  if test $? = 0 ; then\n+\t     CC_FOR_BUILD=\"$c\"; break ;\n+\t  fi ;\n+\tdone ;\n+\trm -f $dummy.c $dummy.o $dummy.rel ;\n+\tif test x\"$CC_FOR_BUILD\" = x ; then\n+\t  CC_FOR_BUILD=no_compiler_found ;\n+\tfi\n+\t;;\n+ ,,*)   CC_FOR_BUILD=$CC ;;\n+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n+esac'\n+\n # This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n-# (ghazi@noc.rutgers.edu 8/24/94.)\n+# (ghazi@noc.rutgers.edu 1994-08-24)\n if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n \tPATH=$PATH:/.attbin ; export PATH\n fi\n \n UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n-UNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown\n+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\n UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n \n-dummy=dummy-$$\n-trap 'rm -f $dummy.c $dummy.o $dummy; exit 1' 1 2 15\n-\n # Note: order is significant - the case branches are not exclusive.\n \n case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n+    *:NetBSD:*:*)\n+\t# NetBSD (nbsd) targets should (where applicable) match one or\n+\t# more of the tupples: *-*-netbsdelf*, *-*-netbsdaout*,\n+\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n+\t# switched to ELF, *-*-netbsd* would select the old\n+\t# object file format.  This provides both forward\n+\t# compatibility and a consistent mechanism for selecting the\n+\t# object file format.\n+\t# Determine the machine/vendor (is the vendor relevant).\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    amiga) machine=m68k-unknown ;;\n+\t    arm32) machine=arm-unknown ;;\n+\t    atari*) machine=m68k-atari ;;\n+\t    sun3*) machine=m68k-sun ;;\n+\t    mac68k) machine=m68k-apple ;;\n+\t    macppc) machine=powerpc-apple ;;\n+\t    hp3[0-9][05]) machine=m68k-hp ;;\n+\t    ibmrt|romp-ibm) machine=romp-ibm ;;\n+\t    sparc*) machine=`uname -p`-unknown ;;\n+\t    *) machine=${UNAME_MACHINE}-unknown ;;\n+\tesac\n+\t# The Operating System including object format, if it has switched\n+\t# to ELF recently, or will in the future.\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    i386|sparc|amiga|arm*|hp300|mvme68k|vax|atari|luna68k|mac68k|news68k|next68k|pc532|sun3*|x68k)\n+\t\teval $set_cc_for_build\n+\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t\t| grep __ELF__ >/dev/null\n+\t\tthen\n+\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n+\t\t    # Return netbsd for either.  FIX?\n+\t\t    os=netbsd\n+\t\telse\n+\t\t    os=netbsdelf\n+\t\tfi\n+\t\t;;\n+\t    *)\n+\t        os=netbsd\n+\t\t;;\n+\tesac\n+\t# The OS release\n+\trelease=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n+\t# contains redundant information, the shorter form:\n+\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n+\techo \"${machine}-${os}${release}\"\n+\texit 0 ;;\n+    amiga:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    arc:OpenBSD:*:*)\n+\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    hp300:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mac68k:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    macppc:OpenBSD:*:*)\n+\techo powerpc-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mvme68k:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mvme88k:OpenBSD:*:*)\n+\techo m88k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mvmeppc:OpenBSD:*:*)\n+\techo powerpc-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    pmax:OpenBSD:*:*)\n+\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    sgi:OpenBSD:*:*)\n+\techo mipseb-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    sun3:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    wgrisc:OpenBSD:*:*)\n+\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:OpenBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n     alpha:OSF1:*:*)\n \tif test $UNAME_RELEASE = \"V4.0\"; then\n \t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n@@ -77,41 +222,55 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t# A Xn.n version is an unreleased experimental baselevel.\n \t# 1.2 uses \"1.2\" for uname -r.\n \tcat <<EOF >$dummy.s\n+\t.data\n+\\$Lformat:\n+\t.byte 37,100,45,37,120,10,0\t# \"%d-%x\\n\"\n+\n+\t.text\n \t.globl main\n+\t.align 4\n \t.ent main\n main:\n-\t.frame \\$30,0,\\$26,0\n-\t.prologue 0\n-\t.long 0x47e03d80 # implver $0\n-\tlda \\$2,259\n-\t.long 0x47e20c21 # amask $2,$1\n-\tsrl \\$1,8,\\$2\n-\tsll \\$2,2,\\$2\n-\tsll \\$0,3,\\$0\n-\taddl \\$1,\\$0,\\$0\n-\taddl \\$2,\\$0,\\$0\n-\tret \\$31,(\\$26),1\n+\t.frame \\$30,16,\\$26,0\n+\tldgp \\$29,0(\\$27)\n+\t.prologue 1\n+\t.long 0x47e03d80 # implver \\$0\n+\tlda \\$2,-1\n+\t.long 0x47e20c21 # amask \\$2,\\$1\n+\tlda \\$16,\\$Lformat\n+\tmov \\$0,\\$17\n+\tnot \\$1,\\$18\n+\tjsr \\$26,printf\n+\tldgp \\$29,0(\\$26)\n+\tmov 0,\\$16\n+\tjsr \\$26,exit\n \t.end main\n EOF\n+\teval $set_cc_for_build\n \t$CC_FOR_BUILD $dummy.s -o $dummy 2>/dev/null\n \tif test \"$?\" = 0 ; then\n-\t\t./$dummy\n-\t\tcase \"$?\" in\n-\t\t\t7)\n+\t\tcase `./$dummy` in\n+\t\t\t0-0)\n \t\t\t\tUNAME_MACHINE=\"alpha\"\n \t\t\t\t;;\n-\t\t\t15)\n+\t\t\t1-0)\n \t\t\t\tUNAME_MACHINE=\"alphaev5\"\n \t\t\t\t;;\n-\t\t\t14)\n+\t\t\t1-1)\n \t\t\t\tUNAME_MACHINE=\"alphaev56\"\n \t\t\t\t;;\n-\t\t\t10)\n+\t\t\t1-101)\n \t\t\t\tUNAME_MACHINE=\"alphapca56\"\n \t\t\t\t;;\n-\t\t\t16)\n+\t\t\t2-303)\n \t\t\t\tUNAME_MACHINE=\"alphaev6\"\n \t\t\t\t;;\n+\t\t\t2-307)\n+\t\t\t\tUNAME_MACHINE=\"alphaev67\"\n+\t\t\t\t;;\n+\t\t\t2-1307)\n+\t\t\t\tUNAME_MACHINE=\"alphaev68\"\n+\t\t\t\t;;\n \t\tesac\n \tfi\n \trm -f $dummy.s $dummy\n@@ -127,45 +286,18 @@ EOF\n \techo alpha-dec-winnt3.5\n \texit 0 ;;\n     Amiga*:UNIX_System_V:4.0:*)\n-\techo m68k-cbm-sysv4\n+\techo m68k-unknown-sysv4\n \texit 0;;\n-    amiga:NetBSD:*:*)\n-      echo m68k-cbm-netbsd${UNAME_RELEASE}\n-      exit 0 ;;\n-    amiga:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n     *:[Aa]miga[Oo][Ss]:*:*)\n \techo ${UNAME_MACHINE}-unknown-amigaos\n \texit 0 ;;\n-    arc64:OpenBSD:*:*)\n-\techo mips64el-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    arc:OpenBSD:*:*)\n-\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    hkmips:OpenBSD:*:*)\n-\techo mips-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    pmax:OpenBSD:*:*)\n-\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    sgi:OpenBSD:*:*)\n-\techo mips-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    wgrisc:OpenBSD:*:*)\n-\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n     *:OS/390:*:*)\n \techo i370-ibm-openedition\n \texit 0 ;;\n     arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n \techo arm-acorn-riscix${UNAME_RELEASE}\n \texit 0;;\n-    arm32:NetBSD:*:*)\n-\techo arm-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n-\texit 0 ;;\n-    SR2?01:HI-UX/MPP:*:*)\n+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n \techo hppa1.1-hitachi-hiuxmpp\n \texit 0;;\n     Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n@@ -221,15 +353,9 @@ EOF\n     aushp:SunOS:*:*)\n \techo sparc-auspex-sunos${UNAME_RELEASE}\n \texit 0 ;;\n-    atari*:NetBSD:*:*)\n-\techo m68k-atari-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    atari*:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n     # The situation for MiNT is a little confusing.  The machine name\n     # can be virtually everything (everything which is not\n-    # \"atarist\" or \"atariste\" at least should have a processor \n+    # \"atarist\" or \"atariste\" at least should have a processor\n     # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n     # to the lowercase version \"mint\" (or \"freemint\").  Finally\n     # the system name \"TOS\" denotes a system which is actually not\n@@ -253,30 +379,9 @@ EOF\n     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n         echo m68k-unknown-mint${UNAME_RELEASE}\n         exit 0 ;;\n-    sun3*:NetBSD:*:*)\n-\techo m68k-sun-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    sun3*:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mac68k:NetBSD:*:*)\n-\techo m68k-apple-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mac68k:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mvme68k:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mvme88k:OpenBSD:*:*)\n-\techo m88k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n     powerpc:machten:*:*)\n \techo powerpc-apple-machten${UNAME_RELEASE}\n \texit 0 ;;\n-    macppc:NetBSD:*:*)\n-        echo powerpc-apple-netbsd${UNAME_RELEASE}\n-        exit 0 ;;\n     RISC*:Mach:*:*)\n \techo mips-dec-mach_bsd4.3\n \texit 0 ;;\n@@ -290,8 +395,10 @@ EOF\n \techo clipper-intergraph-clix${UNAME_RELEASE}\n \texit 0 ;;\n     mips:*:*:UMIPS | mips:*:*:RISCos)\n+\teval $set_cc_for_build\n \tsed 's/^\t//' << EOF >$dummy.c\n #ifdef __cplusplus\n+#include <stdio.h>  /* for printf() prototype */\n \tint main (int argc, char *argv[]) {\n #else\n \tint main (argc, argv) int argc; char *argv[]; {\n@@ -312,10 +419,13 @@ EOF\n EOF\n \t$CC_FOR_BUILD $dummy.c -o $dummy \\\n \t  && ./$dummy `echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` \\\n-\t  && rm $dummy.c $dummy && exit 0\n+\t  && rm -f $dummy.c $dummy && exit 0\n \trm -f $dummy.c $dummy\n \techo mips-mips-riscos${UNAME_RELEASE}\n \texit 0 ;;\n+    Motorola:PowerMAX_OS:*:*)\n+\techo powerpc-motorola-powermax\n+\texit 0 ;;\n     Night_Hawk:Power_UNIX:*:*)\n \techo powerpc-harris-powerunix\n \texit 0 ;;\n@@ -331,7 +441,7 @@ EOF\n     AViiON:dgux:*:*)\n         # DG/UX returns AViiON for all architectures\n         UNAME_PROCESSOR=`/usr/bin/uname -p`\n-\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110]\n+\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]\n \tthen\n \t    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \\\n \t       [ ${TARGET_BINARY_INTERFACE}x = x ]\n@@ -363,11 +473,20 @@ EOF\n     ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n \techo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id\n \texit 0 ;;              # Note that: echo \"'`uname -s`'\" gives 'AIX '\n-    i?86:AIX:*:*)\n+    i*86:AIX:*:*)\n \techo i386-ibm-aix\n \texit 0 ;;\n+    ia64:AIX:*:*)\n+\tif [ -x /usr/bin/oslevel ] ; then\n+\t\tIBM_REV=`/usr/bin/oslevel`\n+\telse\n+\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n+\tfi\n+\techo ${UNAME_MACHINE}-ibm-aix${IBM_REV}\n+\texit 0 ;;\n     *:AIX:2:3)\n \tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\teval $set_cc_for_build\n \t\tsed 's/^\t\t//' << EOF >$dummy.c\n \t\t#include <sys/systemcfg.h>\n \n@@ -379,7 +498,7 @@ EOF\n \t\t\texit(0);\n \t\t\t}\n EOF\n-\t\t$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0\n+\t\t$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm -f $dummy.c $dummy && exit 0\n \t\trm -f $dummy.c $dummy\n \t\techo rs6000-ibm-aix3.2.5\n \telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n@@ -388,17 +507,17 @@ EOF\n \t\techo rs6000-ibm-aix3.2\n \tfi\n \texit 0 ;;\n-    *:AIX:*:4)\n+    *:AIX:*:[45])\n \tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | head -1 | awk '{ print $1 }'`\n-\tif /usr/sbin/lsattr -EHl ${IBM_CPU_ID} | grep POWER >/dev/null 2>&1; then\n+\tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n \t\tIBM_ARCH=rs6000\n \telse\n \t\tIBM_ARCH=powerpc\n \tfi\n \tif [ -x /usr/bin/oslevel ] ; then\n \t\tIBM_REV=`/usr/bin/oslevel`\n \telse\n-\t\tIBM_REV=4.${UNAME_RELEASE}\n+\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n \tfi\n \techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n \texit 0 ;;\n@@ -408,7 +527,7 @@ EOF\n     ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n \techo romp-ibm-bsd4.4\n \texit 0 ;;\n-    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC NetBSD and\n+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n \techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n \texit 0 ;;                           # report: romp-ibm BSD 4.3\n     *:BOSX:*:*)\n@@ -424,11 +543,30 @@ EOF\n \techo m68k-hp-bsd4.4\n \texit 0 ;;\n     9000/[34678]??:HP-UX:*:*)\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n \tcase \"${UNAME_MACHINE}\" in\n \t    9000/31? )            HP_ARCH=m68000 ;;\n \t    9000/[34]?? )         HP_ARCH=m68k ;;\n \t    9000/[678][0-9][0-9])\n-              sed 's/^              //' << EOF >$dummy.c\n+\t\tif [ -x /usr/bin/getconf ]; then\n+\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n+                    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n+                    case \"${sc_cpu_version}\" in\n+                      523) HP_ARCH=\"hppa1.0\" ;; # CPU_PA_RISC1_0\n+                      528) HP_ARCH=\"hppa1.1\" ;; # CPU_PA_RISC1_1\n+                      532)                      # CPU_PA_RISC2_0\n+                        case \"${sc_kernel_bits}\" in\n+                          32) HP_ARCH=\"hppa2.0n\" ;;\n+                          64) HP_ARCH=\"hppa2.0w\" ;;\n+\t\t\t  '') HP_ARCH=\"hppa2.0\" ;;   # HP-UX 10.20\n+                        esac ;;\n+                    esac\n+\t\tfi\n+\t\tif [ \"${HP_ARCH}\" = \"\" ]; then\n+\t\t    eval $set_cc_for_build\n+\t\t    sed 's/^              //' << EOF >$dummy.c\n+\n+              #define _HPUX_SOURCE\n               #include <stdlib.h>\n               #include <unistd.h>\n \n@@ -459,13 +597,19 @@ EOF\n                   exit (0);\n               }\n EOF\n-\t(CCOPTS= $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null ) && HP_ARCH=`./$dummy`\n-\trm -f $dummy.c $dummy\n+\t\t    (CCOPTS= $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null) && HP_ARCH=`./$dummy`\n+\t\t    if test -z \"$HP_ARCH\"; then HP_ARCH=hppa; fi\n+\t\t    rm -f $dummy.c $dummy\n+\t\tfi ;;\n \tesac\n-\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n \techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n \texit 0 ;;\n+    ia64:HP-UX:*:*)\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n+\techo ia64-hp-hpux${HPUX_REV}\n+\texit 0 ;;\n     3050*:HI-UX:*:*)\n+\teval $set_cc_for_build\n \tsed 's/^\t//' << EOF >$dummy.c\n \t#include <unistd.h>\n \tint\n@@ -491,7 +635,7 @@ EOF\n \t  exit (0);\n \t}\n EOF\n-\t$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0\n+\t$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm -f $dummy.c $dummy && exit 0\n \trm -f $dummy.c $dummy\n \techo unknown-hitachi-hiuxwe2\n \texit 0 ;;\n@@ -501,7 +645,7 @@ EOF\n     9000/8??:4.3bsd:*:*)\n \techo hppa1.0-hp-bsd\n \texit 0 ;;\n-    *9??*:MPE/iX:*:*)\n+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n \techo hppa1.0-hp-mpeix\n \texit 0 ;;\n     hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n@@ -510,7 +654,7 @@ EOF\n     hp8??:OSF1:*:*)\n \techo hppa1.0-hp-osf\n \texit 0 ;;\n-    i?86:OSF1:*:*)\n+    i*86:OSF1:*:*)\n \tif [ -x /usr/sbin/sysversion ] ; then\n \t    echo ${UNAME_MACHINE}-unknown-osf1mk\n \telse\n@@ -520,9 +664,6 @@ EOF\n     parisc*:Lites*:*:*)\n \techo hppa1.1-hp-lites\n \texit 0 ;;\n-    hppa*:OpenBSD:*:*)\n-\techo hppa-unknown-openbsd\n-\texit 0 ;;\n     C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n \techo c1-convex-bsd\n         exit 0 ;;\n@@ -545,37 +686,36 @@ EOF\n \techo xmp-cray-unicos\n         exit 0 ;;\n     CRAY*Y-MP:*:*:*)\n-\techo ymp-cray-unicos${UNAME_RELEASE}\n+\techo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n \texit 0 ;;\n     CRAY*[A-Z]90:*:*:*)\n \techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n \t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n-\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/\n+\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n+\t      -e 's/\\.[^.]*$/.X/'\n \texit 0 ;;\n     CRAY*TS:*:*:*)\n-\techo t90-cray-unicos${UNAME_RELEASE}\n+\techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit 0 ;;\n+    CRAY*T3D:*:*:*)\n+\techo alpha-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n \texit 0 ;;\n     CRAY*T3E:*:*:*)\n-\techo alpha-cray-unicosmk${UNAME_RELEASE}\n+\techo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit 0 ;;\n+    CRAY*SV1:*:*:*)\n+\techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n \texit 0 ;;\n     CRAY-2:*:*:*)\n \techo cray2-cray-unicos\n         exit 0 ;;\n-    F300:UNIX_System_V:*:*)\n+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n+\tFUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n         FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n         FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n-        echo \"f300-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+        echo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n         exit 0 ;;\n-    F301:UNIX_System_V:*:*)\n-       echo f301-fujitsu-uxpv`echo $UNAME_RELEASE | sed 's/ .*//'`\n-       exit 0 ;;\n-    hp3[0-9][05]:NetBSD:*:*)\n-\techo m68k-hp-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    hp300:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    i?86:BSD/386:*:* | i?86:BSD/OS:*:*)\n+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n \techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n \texit 0 ;;\n     sparc*:BSD/OS:*:*)\n@@ -585,26 +725,17 @@ EOF\n \techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n \texit 0 ;;\n     *:FreeBSD:*:*)\n-\tif test -x /usr/bin/objformat; then\n-\t    if test \"elf\" = \"`/usr/bin/objformat`\"; then\n-\t\techo ${UNAME_MACHINE}-unknown-freebsdelf`echo ${UNAME_RELEASE}|sed -e 's/[-_].*//'`\n-\t\texit 0\n-\t    fi\n-\tfi\n \techo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n \texit 0 ;;\n-    *:NetBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*//'`\n-\texit 0 ;;\n-    *:OpenBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-openbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n-\texit 0 ;;\n     i*:CYGWIN*:*)\n \techo ${UNAME_MACHINE}-pc-cygwin\n \texit 0 ;;\n     i*:MINGW*:*)\n \techo ${UNAME_MACHINE}-pc-mingw32\n \texit 0 ;;\n+    i*:PW*:*)\n+\techo ${UNAME_MACHINE}-pc-pw32\n+\texit 0 ;;\n     i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n \t# How do we know it's Interix rather than the generic POSIX subsystem?\n \t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n@@ -623,226 +754,154 @@ EOF\n     *:GNU:*:*)\n \techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n \texit 0 ;;\n-    *:Linux:*:*)\n-\n+    i*86:Minix:*:*)\n+\techo ${UNAME_MACHINE}-pc-minix\n+\texit 0 ;;\n+    arm*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-gnu\n+\texit 0 ;;\n+    ia64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux\n+\texit 0 ;;\n+    m68*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-gnu\n+\texit 0 ;;\n+    mips:Linux:*:*)\n+\tcase `sed -n '/^byte/s/^.*: \\(.*\\) endian/\\1/p' < /proc/cpuinfo` in\n+\t  big)    echo mips-unknown-linux-gnu && exit 0 ;;\n+\t  little) echo mipsel-unknown-linux-gnu && exit 0 ;;\n+\tesac\n+\t;;\n+    ppc:Linux:*:*)\n+\techo powerpc-unknown-linux-gnu\n+\texit 0 ;;\n+    ppc64:Linux:*:*)\n+\techo powerpc64-unknown-linux-gnu\n+\texit 0 ;;\n+    alpha:Linux:*:*)\n+\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n+\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n+\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n+\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n+\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n+\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n+\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n+\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n+        esac\n+\tobjdump --private-headers /bin/sh | grep ld.so.1 >/dev/null\n+\tif test \"$?\" = 0 ; then LIBC=\"libc1\" ; else LIBC=\"\" ; fi\n+\techo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC}\n+\texit 0 ;;\n+    parisc:Linux:*:* | hppa:Linux:*:*)\n+\t# Look for CPU level\n+\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n+\t  PA7*) echo hppa1.1-unknown-linux-gnu ;;\n+\t  PA8*) echo hppa2.0-unknown-linux-gnu ;;\n+\t  *)    echo hppa-unknown-linux-gnu ;;\n+\tesac\n+\texit 0 ;;\n+    parisc64:Linux:*:* | hppa64:Linux:*:*)\n+\techo hppa64-unknown-linux-gnu\n+\texit 0 ;;\n+    s390:Linux:*:* | s390x:Linux:*:*)\n+\techo ${UNAME_MACHINE}-ibm-linux\n+\texit 0 ;;\n+    sh*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-gnu\n+\texit 0 ;;\n+    sparc:Linux:*:* | sparc64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-gnu\n+\texit 0 ;;\n+    x86_64:Linux:*:*)\n+\techo x86_64-unknown-linux-gnu\n+\texit 0 ;;\n+    i*86:Linux:*:*)\n \t# The BFD linker knows what the default object file format is, so\n \t# first see if it will tell us. cd to the root directory to prevent\n \t# problems with other programs or directories called `ld' in the path.\n-\tld_help_string=`cd /; ld --help 2>&1`\n-\tld_supported_emulations=`echo $ld_help_string \\\n-\t\t\t | sed -ne '/supported emulations:/!d\n+\tld_supported_targets=`cd /; ld --help 2>&1 \\\n+\t\t\t | sed -ne '/supported targets:/!d\n \t\t\t\t    s/[ \t][ \t]*/ /g\n-\t\t\t\t    s/.*supported emulations: *//\n+\t\t\t\t    s/.*supported targets: *//\n \t\t\t\t    s/ .*//\n \t\t\t\t    p'`\n-        case \"$ld_supported_emulations\" in\n-\t  *ia64)\n-\t\techo \"${UNAME_MACHINE}-unknown-linux\"\n-\t\texit 0\n+        case \"$ld_supported_targets\" in\n+\t  elf32-i386)\n+\t\tTENTATIVE=\"${UNAME_MACHINE}-pc-linux-gnu\"\n \t\t;;\n-\t  i?86linux)\n+\t  a.out-i386-linux)\n \t\techo \"${UNAME_MACHINE}-pc-linux-gnuaout\"\n-\t\texit 0\n-\t\t;;\n-\t  i?86coff)\n+\t\texit 0 ;;\t\t\n+\t  coff-i386)\n \t\techo \"${UNAME_MACHINE}-pc-linux-gnucoff\"\n-\t\texit 0\n-\t\t;;\n-\t  sparclinux)\n-\t\techo \"${UNAME_MACHINE}-unknown-linux-gnuaout\"\n-\t\texit 0\n-\t\t;;\n-\t  armlinux)\n-\t\techo \"${UNAME_MACHINE}-unknown-linux-gnuaout\"\n-\t\texit 0\n-\t\t;;\n-\t  elf32arm*)\n-\t\techo \"${UNAME_MACHINE}-unknown-linux-gnu\"\n-\t\texit 0\n-\t\t;;\n-\t  armelf_linux*)\n-\t\techo \"${UNAME_MACHINE}-unknown-linux-gnu\"\n-\t\texit 0\n-\t\t;;\n-\t  m68klinux)\n-\t\techo \"${UNAME_MACHINE}-unknown-linux-gnuaout\"\n-\t\texit 0\n-\t\t;;\n-\t  elf32ppc)\n-\t\t# Determine Lib Version\n-\t\tcat >$dummy.c <<EOF\n-#include <features.h>\n-#if defined(__GLIBC__)\n-extern char __libc_version[];\n-extern char __libc_release[];\n-#endif\n-main(argc, argv)\n-     int argc;\n-     char *argv[];\n-{\n-#if defined(__GLIBC__)\n-  printf(\"%s %s\\n\", __libc_version, __libc_release);\n-#else\n-  printf(\"unkown\\n\");\n-#endif\n-  return 0;\n-}\n-EOF\n-\t\tLIBC=\"\"\n-\t\t$CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null\n-\t\tif test \"$?\" = 0 ; then\n-\t\t\t./$dummy | grep 1\\.99 > /dev/null\n-\t\t\tif test \"$?\" = 0 ; then\n-\t\t\t\tLIBC=\"libc1\"\n-\t\t\tfi\n-\t\tfi\t\n-\t\trm -f $dummy.c $dummy\n-\t\techo powerpc-unknown-linux-gnu${LIBC}\n-\t\texit 0\n-\t\t;;\n+\t\texit 0 ;;\n+\t  \"\")\n+\t\t# Either a pre-BFD a.out linker (linux-gnuoldld) or\n+\t\t# one that does not give us useful --help.\n+\t\techo \"${UNAME_MACHINE}-pc-linux-gnuoldld\"\n+\t\texit 0 ;;\n \tesac\n-\n-\tif test \"${UNAME_MACHINE}\" = \"alpha\" ; then\n-\t\tsed 's/^\t//'  <<EOF >$dummy.s\n-\t\t.globl main\n-\t\t.ent main\n-\tmain:\n-\t\t.frame \\$30,0,\\$26,0\n-\t\t.prologue 0\n-\t\t.long 0x47e03d80 # implver $0\n-\t\tlda \\$2,259\n-\t\t.long 0x47e20c21 # amask $2,$1\n-\t\tsrl \\$1,8,\\$2\n-\t\tsll \\$2,2,\\$2\n-\t\tsll \\$0,3,\\$0\n-\t\taddl \\$1,\\$0,\\$0\n-\t\taddl \\$2,\\$0,\\$0\n-\t\tret \\$31,(\\$26),1\n-\t\t.end main\n-EOF\n-\t\tLIBC=\"\"\n-\t\t$CC_FOR_BUILD $dummy.s -o $dummy 2>/dev/null\n-\t\tif test \"$?\" = 0 ; then\n-\t\t\t./$dummy\n-\t\t\tcase \"$?\" in\n-\t\t\t7)\n-\t\t\t\tUNAME_MACHINE=\"alpha\"\n-\t\t\t\t;;\n-\t\t\t15)\n-\t\t\t\tUNAME_MACHINE=\"alphaev5\"\n-\t\t\t\t;;\n-\t\t\t14)\n-\t\t\t\tUNAME_MACHINE=\"alphaev56\"\n-\t\t\t\t;;\n-\t\t\t10)\n-\t\t\t\tUNAME_MACHINE=\"alphapca56\"\n-\t\t\t\t;;\n-\t\t\t16)\n-\t\t\t\tUNAME_MACHINE=\"alphaev6\"\n-\t\t\t\t;;\n-\t\t\tesac\n-\n-\t\t\tobjdump --private-headers $dummy | \\\n-\t\t\t  grep ld.so.1 > /dev/null\n-\t\t\tif test \"$?\" = 0 ; then\n-\t\t\t\tLIBC=\"libc1\"\n-\t\t\tfi\n-\t\tfi\n-\t\trm -f $dummy.s $dummy\n-\t\techo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC} ; exit 0\n-\telif test \"${UNAME_MACHINE}\" = \"mips\" ; then\n-\t  cat >$dummy.c <<EOF\n-#ifdef __cplusplus\n-\tint main (int argc, char *argv[]) {\n-#else\n-\tint main (argc, argv) int argc; char *argv[]; {\n-#endif\n-#ifdef __MIPSEB__\n-  printf (\"%s-unknown-linux-gnu\\n\", argv[1]);\n-#endif\n-#ifdef __MIPSEL__\n-  printf (\"%sel-unknown-linux-gnu\\n\", argv[1]);\n-#endif\n-  return 0;\n-}\n-EOF\n-\t  $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy \"${UNAME_MACHINE}\" && rm $dummy.c $dummy && exit 0\n-\t  rm -f $dummy.c $dummy\n-\telse\n-\t  # Either a pre-BFD a.out linker (linux-gnuoldld)\n-\t  # or one that does not give us useful --help.\n-\t  # GCC wants to distinguish between linux-gnuoldld and linux-gnuaout.\n-\t  # If ld does not provide *any* \"supported emulations:\"\n-\t  # that means it is gnuoldld.\n-\t  echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations:\"\n-\t  test $? != 0 && echo \"${UNAME_MACHINE}-pc-linux-gnuoldld\" && exit 0\n-\n-\t  case \"${UNAME_MACHINE}\" in\n-\t  i?86)\n-\t    VENDOR=pc;\n-\t    ;;\n-\t  *)\n-\t    VENDOR=unknown;\n-\t    ;;\n-\t  esac\n-\t  # Determine whether the default compiler is a.out or elf\n-\t  cat >$dummy.c <<EOF\n+\t# Determine whether the default compiler is a.out or elf\n+\teval $set_cc_for_build\n+\tcat >$dummy.c <<EOF\n #include <features.h>\n #ifdef __cplusplus\n+#include <stdio.h>  /* for printf() prototype */\n \tint main (int argc, char *argv[]) {\n #else\n \tint main (argc, argv) int argc; char *argv[]; {\n #endif\n #ifdef __ELF__\n # ifdef __GLIBC__\n #  if __GLIBC__ >= 2\n-    printf (\"%s-${VENDOR}-linux-gnu\\n\", argv[1]);\n+    printf (\"%s-pc-linux-gnu\\n\", argv[1]);\n #  else\n-    printf (\"%s-${VENDOR}-linux-gnulibc1\\n\", argv[1]);\n+    printf (\"%s-pc-linux-gnulibc1\\n\", argv[1]);\n #  endif\n # else\n-   printf (\"%s-${VENDOR}-linux-gnulibc1\\n\", argv[1]);\n+   printf (\"%s-pc-linux-gnulibc1\\n\", argv[1]);\n # endif\n #else\n-  printf (\"%s-${VENDOR}-linux-gnuaout\\n\", argv[1]);\n+  printf (\"%s-pc-linux-gnuaout\\n\", argv[1]);\n #endif\n   return 0;\n }\n EOF\n-\t  $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy \"${UNAME_MACHINE}\" && rm $dummy.c $dummy && exit 0\n-\t  rm -f $dummy.c $dummy\n-\tfi ;;\n-# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.  earlier versions\n-# are messed up and put the nodename in both sysname and nodename.\n-    i?86:DYNIX/ptx:4*:*)\n+\t$CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy \"${UNAME_MACHINE}\" && rm -f $dummy.c $dummy && exit 0\n+\trm -f $dummy.c $dummy\n+\ttest x\"${TENTATIVE}\" != x && echo \"${TENTATIVE}\" && exit 0\n+\t;;\n+    i*86:DYNIX/ptx:4*:*)\n+\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n+\t# earlier versions are messed up and put the nodename in both\n+\t# sysname and nodename.\n \techo i386-sequent-sysv4\n \texit 0 ;;\n-    i?86:UNIX_SV:4.2MP:2.*)\n+    i*86:UNIX_SV:4.2MP:2.*)\n         # Unixware is an offshoot of SVR4, but it has its own version\n         # number series starting with 2...\n         # I am not positive that other SVR4 systems won't match this,\n \t# I just have to hope.  -- rms.\n         # Use sysv4.2uw... so that sysv4* matches it.\n \techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n \texit 0 ;;\n-    i?86:*:4.*:* | i?86:SYSTEM_V:4.*:*)\n+    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)\n \tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n \tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n \t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n \telse\n \t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n \tfi\n \texit 0 ;;\n-    i?86:*:5:7*)\n-        # Fixed at (any) Pentium or better\n-        UNAME_MACHINE=i586\n-        if [ ${UNAME_SYSTEM} = \"UnixWare\" ] ; then\n-\t    echo ${UNAME_MACHINE}-sco-sysv${UNAME_RELEASE}uw${UNAME_VERSION}\n-\telse\n-\t    echo ${UNAME_MACHINE}-pc-sysv${UNAME_RELEASE}\n-\tfi\n+    i*86:*:5:[78]*)\n+\tcase `/bin/uname -X | grep \"^Machine\"` in\n+\t    *486*)\t     UNAME_MACHINE=i486 ;;\n+\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n+\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n+\tesac\n+\techo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n \texit 0 ;;\n-    i?86:*:3.2:*)\n+    i*86:*:3.2:*)\n \tif test -f /usr/options/cb.name; then\n \t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n \t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n@@ -860,7 +919,11 @@ EOF\n \t\techo ${UNAME_MACHINE}-pc-sysv32\n \tfi\n \texit 0 ;;\n+    i*86:*DOS:*:*)\n+\techo ${UNAME_MACHINE}-pc-msdosdjgpp\n+\texit 0 ;;\n     pc:*:*:*)\n+\t# Left here for compatibility:\n         # uname -m prints for DJGPP always 'pc', but it prints nothing about\n         # the processor, so we play safe by assuming i386.\n \techo i386-pc-msdosdjgpp\n@@ -884,7 +947,7 @@ EOF\n \texit 0 ;;\n     M68*:*:R3V[567]*:*)\n \ttest -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;\n-    3[34]??:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 4850:*:4.0:3.0)\n+    3[34]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0)\n \tOS_REL=''\n \ttest -r /etc/.relid \\\n \t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n@@ -895,21 +958,24 @@ EOF\n     3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n         /bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n           && echo i486-ncr-sysv4 && exit 0 ;;\n-    m68*:LynxOS:2.*:*)\n+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n \techo m68k-unknown-lynxos${UNAME_RELEASE}\n \texit 0 ;;\n     mc68030:UNIX_System_V:4.*:*)\n \techo m68k-atari-sysv4\n \texit 0 ;;\n-    i?86:LynxOS:2.*:* | i?86:LynxOS:3.[01]*:*)\n+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.0*:*)\n \techo i386-unknown-lynxos${UNAME_RELEASE}\n \texit 0 ;;\n     TSUNAMI:LynxOS:2.*:*)\n \techo sparc-unknown-lynxos${UNAME_RELEASE}\n \texit 0 ;;\n-    rs6000:LynxOS:2.*:* | PowerPC:LynxOS:2.*:*)\n+    rs6000:LynxOS:2.*:*)\n \techo rs6000-unknown-lynxos${UNAME_RELEASE}\n \texit 0 ;;\n+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.0*:*)\n+\techo powerpc-unknown-lynxos${UNAME_RELEASE}\n+\texit 0 ;;\n     SM[BE]S:UNIX_SV:*:*)\n \techo mips-dde-sysv${UNAME_RELEASE}\n \texit 0 ;;\n@@ -927,8 +993,8 @@ EOF\n \t\techo ns32k-sni-sysv\n \tfi\n \texit 0 ;;\n-    PENTIUM:CPunix:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n-                           # says <Richard.M.Bartel@ccMail.Census.GOV>\n+    PENTIUM:*:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n+                      # says <Richard.M.Bartel@ccMail.Census.GOV>\n         echo i586-unisys-sysv4\n         exit 0 ;;\n     *:UNIX_System_V:4*:FTX*)\n@@ -940,10 +1006,14 @@ EOF\n \t# From seanf@swdc.stratus.com.\n \techo i860-stratus-sysv4\n \texit 0 ;;\n+    *:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo hppa1.1-stratus-vos\n+\texit 0 ;;\n     mc68*:A/UX:*:*)\n \techo m68k-apple-aux${UNAME_RELEASE}\n \texit 0 ;;\n-    news*:NEWS-OS:*:6*)\n+    news*:NEWS-OS:6*:*)\n \techo mips-sony-newsos6\n \texit 0 ;;\n     R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n@@ -974,14 +1044,76 @@ EOF\n     *:Rhapsody:*:*)\n \techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n \texit 0 ;;\n+    *:Darwin:*:*)\n+\techo `uname -p`-apple-darwin${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n+\tif test \"${UNAME_MACHINE}\" = \"x86pc\"; then\n+\t\tUNAME_MACHINE=pc\n+\tfi\n+\techo `uname -p`-${UNAME_MACHINE}-nto-qnx\n+\texit 0 ;;\n     *:QNX:*:4*)\n-\techo i386-qnx-qnx${UNAME_VERSION}\n+\techo i386-pc-qnx\n+\texit 0 ;;\n+    NSR-[KW]:NONSTOP_KERNEL:*:*)\n+\techo nsr-tandem-nsk${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:NonStop-UX:*:*)\n+\techo mips-compaq-nonstopux\n+\texit 0 ;;\n+    BS2000:POSIX*:*:*)\n+\techo bs2000-siemens-sysv\n+\texit 0 ;;\n+    DS/*:UNIX_System_V:*:*)\n+\techo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:Plan9:*:*)\n+\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n+\t# is converted to i386 for consistency with other x86\n+\t# operating systems.\n+\tif test \"$cputype\" = \"386\"; then\n+\t    UNAME_MACHINE=i386\n+\telse\n+\t    UNAME_MACHINE=\"$cputype\"\n+\tfi\n+\techo ${UNAME_MACHINE}-unknown-plan9\n+\texit 0 ;;\n+    i*86:OS/2:*:*)\n+\t# If we were able to find `uname', then EMX Unix compatibility\n+\t# is probably installed.\n+\techo ${UNAME_MACHINE}-pc-os2-emx\n+\texit 0 ;;\n+    *:TOPS-10:*:*)\n+\techo pdp10-unknown-tops10\n+\texit 0 ;;\n+    *:TENEX:*:*)\n+\techo pdp10-unknown-tenex\n+\texit 0 ;;\n+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n+\techo pdp10-dec-tops20\n+\texit 0 ;;\n+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n+\techo pdp10-xkl-tops20\n+\texit 0 ;;\n+    *:TOPS-20:*:*)\n+\techo pdp10-unknown-tops20\n+\texit 0 ;;\n+    *:ITS:*:*)\n+\techo pdp10-unknown-its\n+\texit 0 ;;\n+    i*86:XTS-300:*:STOP)\n+\techo ${UNAME_MACHINE}-unknown-stop\n+\texit 0 ;;\n+    i*86:atheos:*:*)\n+\techo ${UNAME_MACHINE}-unknown-atheos\n \texit 0 ;;\n esac\n \n #echo '(No uname command or uname output not recognized.)' 1>&2\n #echo \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" 1>&2\n \n+eval $set_cc_for_build\n cat >$dummy.c <<EOF\n #ifdef _SEQUENT_\n # include <sys/types.h>\n@@ -1068,11 +1200,24 @@ main ()\n #endif\n \n #if defined (vax)\n-#if !defined (ultrix)\n-  printf (\"vax-dec-bsd\\n\"); exit (0);\n-#else\n-  printf (\"vax-dec-ultrix\\n\"); exit (0);\n-#endif\n+# if !defined (ultrix)\n+#  include <sys/param.h>\n+#  if defined (BSD)\n+#   if BSD == 43\n+      printf (\"vax-dec-bsd4.3\\n\"); exit (0);\n+#   else\n+#    if BSD == 199006\n+      printf (\"vax-dec-bsd4.3reno\\n\"); exit (0);\n+#    else\n+      printf (\"vax-dec-bsd\\n\"); exit (0);\n+#    endif\n+#   endif\n+#  else\n+    printf (\"vax-dec-bsd\\n\"); exit (0);\n+#  endif\n+# else\n+    printf (\"vax-dec-ultrix\\n\"); exit (0);\n+# endif\n #endif\n \n #if defined (alliant) && defined (i860)\n@@ -1083,7 +1228,7 @@ main ()\n }\n EOF\n \n-$CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy && rm $dummy.c $dummy && exit 0\n+$CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy && rm -f $dummy.c $dummy && exit 0\n rm -f $dummy.c $dummy\n \n # Apollos put the system type in the environment.\n@@ -1116,6 +1261,48 @@ then\n     esac\n fi\n \n-#echo '(Unable to guess system type)' 1>&2\n+cat >&2 <<EOF\n+$0: unable to guess system type\n+\n+This script, last modified $timestamp, has failed to recognize\n+the operating system you are using. It is advised that you\n+download the most up to date version of the config scripts from\n+\n+    ftp://ftp.gnu.org/pub/gnu/config/\n+\n+If the version you run ($0) is already up to date, please\n+send the following data and any information you think might be\n+pertinent to <config-patches@gnu.org> in order to provide the needed\n+information to handle your system.\n+\n+config.guess timestamp = $timestamp\n+\n+uname -m = `(uname -m) 2>/dev/null || echo unknown`\n+uname -r = `(uname -r) 2>/dev/null || echo unknown`\n+uname -s = `(uname -s) 2>/dev/null || echo unknown`\n+uname -v = `(uname -v) 2>/dev/null || echo unknown`\n+\n+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n+\n+hostinfo               = `(hostinfo) 2>/dev/null`\n+/bin/universe          = `(/bin/universe) 2>/dev/null`\n+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n+/bin/arch              = `(/bin/arch) 2>/dev/null`\n+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n+\n+UNAME_MACHINE = ${UNAME_MACHINE}\n+UNAME_RELEASE = ${UNAME_RELEASE}\n+UNAME_SYSTEM  = ${UNAME_SYSTEM}\n+UNAME_VERSION = ${UNAME_VERSION}\n+EOF\n \n exit 1\n+\n+# Local variables:\n+# eval: (add-hook 'write-file-hooks 'time-stamp)\n+# time-stamp-start: \"timestamp='\"\n+# time-stamp-format: \"%:y-%02m-%02d\"\n+# time-stamp-end: \"'\"\n+# End:"}, {"sha": "04773fa66a3f35361e4b84851c56d648d95ec368", "filename": "boehm-gc/doc/debugging.html", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5867245e314ba5fc3af34d6c158acdfe62817a06/boehm-gc%2Fdoc%2Fdebugging.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5867245e314ba5fc3af34d6c158acdfe62817a06/boehm-gc%2Fdoc%2Fdebugging.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fdoc%2Fdebugging.html?ref=5867245e314ba5fc3af34d6c158acdfe62817a06", "patch": "@@ -209,6 +209,8 @@ <H2>Prematurely Reclaimed Objects</h2>\n <OL>\n <LI> If you are using the incremental collector try turning it off for\n debugging.\n+<LI> If you are using shared libraries, try linking statically.  If that works,\n+ensure that DYNAMIC_LOADING is defined on your platform.\n <LI> Try to reproduce the problem with fully debuggable unoptimized code.\n This will eliminate the last possibility, as well as making debugging easier.\n <LI> Try replacing any suspect typed allocation and <TT>GC_malloc_atomic</tt>"}]}