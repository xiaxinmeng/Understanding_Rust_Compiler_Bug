{"sha": "f249b40509dc146068a828032871baef906f688b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI0OWI0MDUwOWRjMTQ2MDY4YTgyODAzMjg3MWJhZWY5MDZmNjg4Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-01-18T17:46:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-01-18T17:46:17Z"}, "message": "re PR target/42774 (ICE in get_aligned_mem, at config/alpha/alpha.c:1484)\n\n\tPR target/42774\n\t* config/alpha/predicates.md (aligned_memory_operand): Return 0 for\n\tmemory references with unaligned offsets.  Remove CQImode handling.\n\t(unaligned_memory_operand): Return 1 for memory references with\n\tunaligned offsets.  Remove CQImode handling.\n\ntestsuite/ChangeLog:\n\n\tPR target/42774\n\t* gcc.target/alpha/pr42774.c: New test.\n\nFrom-SVN: r156017", "tree": {"sha": "577ca2783f93ad38783670c71add446ae68ee484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/577ca2783f93ad38783670c71add446ae68ee484"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f249b40509dc146068a828032871baef906f688b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f249b40509dc146068a828032871baef906f688b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f249b40509dc146068a828032871baef906f688b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f249b40509dc146068a828032871baef906f688b/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c0a593b84966fb8dd64fc5d02645c51a5f33ea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c0a593b84966fb8dd64fc5d02645c51a5f33ea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c0a593b84966fb8dd64fc5d02645c51a5f33ea7"}], "stats": {"total": 69, "additions": 59, "deletions": 10}, "files": [{"sha": "14e8f8fa2c170fbfe34d845d8f5313f59bd408eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f249b40509dc146068a828032871baef906f688b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f249b40509dc146068a828032871baef906f688b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f249b40509dc146068a828032871baef906f688b", "patch": "@@ -1,3 +1,11 @@\n+2010-01-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/42774\n+\t* config/alpha/predicates.md (aligned_memory_operand): Return 0 for\n+\tmemory references with unaligned offsets.  Remove CQImode handling.\n+\t(unaligned_memory_operand): Return 1 for memory references with\n+\tunaligned offsets.  Remove CQImode handling.\n+\n 2010-01-18  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/39954"}, {"sha": "0852f692998da6e812caa5e1ffaf87ef2fe9e0a0", "filename": "gcc/config/alpha/predicates.md", "status": "modified", "additions": 36, "deletions": 10, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f249b40509dc146068a828032871baef906f688b/gcc%2Fconfig%2Falpha%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f249b40509dc146068a828032871baef906f688b/gcc%2Fconfig%2Falpha%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fpredicates.md?ref=f249b40509dc146068a828032871baef906f688b", "patch": "@@ -439,28 +439,41 @@\n        (match_code \"mem\"))\n {\n   rtx base;\n+  int offset;\n \n   if (MEM_ALIGN (op) >= 32)\n     return 1;\n \n-  if (mode == CQImode)\n-    return 0;\n-\n   op = XEXP (op, 0);\n \n   /* LEGITIMIZE_RELOAD_ADDRESS creates (plus (plus reg const_hi) const_lo)\n      sorts of constructs.  Dig for the real base register.  */\n   if (reload_in_progress\n       && GET_CODE (op) == PLUS\n       && GET_CODE (XEXP (op, 0)) == PLUS)\n-    base = XEXP (XEXP (op, 0), 0);\n+    {\n+      base = XEXP (XEXP (op, 0), 0);\n+      offset = INTVAL (XEXP (op, 1));\n+    }\n   else\n     {\n       if (! memory_address_p (mode, op))\n \treturn 0;\n-      base = (GET_CODE (op) == PLUS ? XEXP (op, 0) : op);\n+      if (GET_CODE (op) == PLUS)\n+\t{\n+\t  base = XEXP (op, 0);\n+\t  offset = INTVAL (XEXP (op, 1));\n+\t}\n+      else\n+\t{\n+\t  base = op;\n+\t  offset = 0;\n+\t}\n     }\n \n+  if (offset % GET_MODE_SIZE (mode))\n+    return 0;\n+\n   return (REG_P (base) && REGNO_POINTER_ALIGN (REGNO (base)) >= 32);\n })\n \n@@ -471,28 +484,41 @@\n        (match_code \"mem\"))\n {\n   rtx base;\n+  int offset;\n \n   if (MEM_ALIGN (op) >= 32)\n     return 0;\n \n-  if (mode == CQImode)\n-    return 1;\n-\n   op = XEXP (op, 0);\n \n   /* LEGITIMIZE_RELOAD_ADDRESS creates (plus (plus reg const_hi) const_lo)\n      sorts of constructs.  Dig for the real base register.  */\n   if (reload_in_progress\n       && GET_CODE (op) == PLUS\n       && GET_CODE (XEXP (op, 0)) == PLUS)\n-    base = XEXP (XEXP (op, 0), 0);\n+    {\n+      base = XEXP (XEXP (op, 0), 0);\n+      offset = INTVAL (XEXP (op, 1));\n+    }\n   else\n     {\n       if (! memory_address_p (mode, op))\n \treturn 0;\n-      base = (GET_CODE (op) == PLUS ? XEXP (op, 0) : op);\n+      if (GET_CODE (op) == PLUS)\n+\t{\n+\t  base = XEXP (op, 0);\n+\t  offset = INTVAL (XEXP (op, 1));\n+\t}\n+      else\n+\t{\n+\t  base = op;\n+\t  offset = 0;\n+\t}\n     }\n \n+  if (offset % GET_MODE_SIZE (mode))\n+    return 1;\n+\n   return (REG_P (base) && REGNO_POINTER_ALIGN (REGNO (base)) < 32);\n })\n "}, {"sha": "2b0d96d794ab74c75ecfc21c4ca4197b082e45c8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f249b40509dc146068a828032871baef906f688b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f249b40509dc146068a828032871baef906f688b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f249b40509dc146068a828032871baef906f688b", "patch": "@@ -1,3 +1,8 @@\n+2010-01-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/42774\n+\t* gcc.target/alpha/pr42774.c: New test.\n+\n 2010-01-18  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/42781"}, {"sha": "65688002b3a973dca4cf4fb6ba66ef1d9cf0228d", "filename": "gcc/testsuite/gcc.target/alpha/pr42774.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f249b40509dc146068a828032871baef906f688b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fpr42774.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f249b40509dc146068a828032871baef906f688b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fpr42774.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fpr42774.c?ref=f249b40509dc146068a828032871baef906f688b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=ev4\" } */\n+\n+unsigned int ntfs_getinfo(void *p)\n+{\n+    char bootsect[8];\n+\n+    __builtin_memcpy(bootsect, p, sizeof bootsect);\n+    return *(unsigned short *)(bootsect + 3);\n+}"}]}