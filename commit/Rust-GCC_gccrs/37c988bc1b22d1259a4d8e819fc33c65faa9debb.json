{"sha": "37c988bc1b22d1259a4d8e819fc33c65faa9debb", "node_id": "C_kwDOANBUbNoAKDM3Yzk4OGJjMWIyMmQxMjU5YTRkOGU4MTlmYzMzYzY1ZmFhOWRlYmI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-27T12:07:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-27T12:08:18Z"}, "message": "Avoid shift in get_ref_base_and_extent\n\nThis avoids one instance of a shift from bytes to bits in\nget_ref_base_and_extent by using TYPE_SIZE instead of TYPE_SIZE_UNIT.\n\n\t* tree-dfa.cc (get_ref_base_and_extent): Avoid shift.", "tree": {"sha": "9f936229aca61022a52ea03e6555d0124dfa93e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f936229aca61022a52ea03e6555d0124dfa93e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37c988bc1b22d1259a4d8e819fc33c65faa9debb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c988bc1b22d1259a4d8e819fc33c65faa9debb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37c988bc1b22d1259a4d8e819fc33c65faa9debb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c988bc1b22d1259a4d8e819fc33c65faa9debb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f571596f8cd8fbad34305b4bec1a813620e0cbf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f571596f8cd8fbad34305b4bec1a813620e0cbf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f571596f8cd8fbad34305b4bec1a813620e0cbf0"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "e75e3d605b345b3b6be542c7822727547a049cf5", "filename": "gcc/tree-dfa.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c988bc1b22d1259a4d8e819fc33c65faa9debb/gcc%2Ftree-dfa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c988bc1b22d1259a4d8e819fc33c65faa9debb/gcc%2Ftree-dfa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.cc?ref=37c988bc1b22d1259a4d8e819fc33c65faa9debb", "patch": "@@ -453,8 +453,8 @@ get_ref_base_and_extent (tree exp, poly_int64_pod *poffset,\n \t\t    if (!next\n \t\t\t|| TREE_CODE (stype) != RECORD_TYPE)\n \t\t      {\n-\t\t\ttree fsize = DECL_SIZE_UNIT (field);\n-\t\t\ttree ssize = TYPE_SIZE_UNIT (stype);\n+\t\t\ttree fsize = DECL_SIZE (field);\n+\t\t\ttree ssize = TYPE_SIZE (stype);\n \t\t\tif (fsize == NULL\n \t\t\t    || !poly_int_tree_p (fsize)\n \t\t\t    || ssize == NULL\n@@ -465,7 +465,6 @@ get_ref_base_and_extent (tree exp, poly_int64_pod *poffset,\n \t\t\t    poly_offset_int tem\n \t\t\t      = (wi::to_poly_offset (ssize)\n \t\t\t\t - wi::to_poly_offset (fsize));\n-\t\t\t    tem <<= LOG2_BITS_PER_UNIT;\n \t\t\t    tem -= woffset;\n \t\t\t    maxsize += tem;\n \t\t\t  }"}]}