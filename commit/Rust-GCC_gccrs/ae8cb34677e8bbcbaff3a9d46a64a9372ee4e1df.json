{"sha": "ae8cb34677e8bbcbaff3a9d46a64a9372ee4e1df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU4Y2IzNDY3N2U4YmJjYmFmZjNhOWQ0NmE2NGE5MzcyZWU0ZTFkZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-06T03:59:32Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-06T03:59:32Z"}, "message": "(check_for_full_enumeration_handling): Don't create a\ndefault label if all enumeration literals are covered by cases.\n\nFrom-SVN: r4640", "tree": {"sha": "149432aa562822c800d31d57e8b35d093201410b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/149432aa562822c800d31d57e8b35d093201410b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae8cb34677e8bbcbaff3a9d46a64a9372ee4e1df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8cb34677e8bbcbaff3a9d46a64a9372ee4e1df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8cb34677e8bbcbaff3a9d46a64a9372ee4e1df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8cb34677e8bbcbaff3a9d46a64a9372ee4e1df/comments", "author": null, "committer": null, "parents": [{"sha": "a2469305ae4b27baa8afa37935942ef76ff7ffca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2469305ae4b27baa8afa37935942ef76ff7ffca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2469305ae4b27baa8afa37935942ef76ff7ffca"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "5647d26ce94aded4a8da5321ba939e0d9c3d6777", "filename": "gcc/stmt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8cb34677e8bbcbaff3a9d46a64a9372ee4e1df/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8cb34677e8bbcbaff3a9d46a64a9372ee4e1df/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=ae8cb34677e8bbcbaff3a9d46a64a9372ee4e1df", "patch": "@@ -3654,6 +3654,11 @@ check_for_full_enumeration_handling (type)\n \t  }\n       }\n \n+#if 0\n+  /* ??? This optimization is disabled because it causes valid programs to\n+     fail.  ANSI C does not guarantee that an expression with enum type\n+     will have a value that is the same as one of the enumation literals.  */\n+\n   /* If all values were found as case labels, make one of them the default\n      label.  Thus, this switch will never fall through.  We arbitrarily pick\n      the last one to make the default since this is likely the most\n@@ -3669,6 +3674,7 @@ check_for_full_enumeration_handling (type)\n       case_stack->data.case_stmt.default_label = (*l)->code_label;\n       *l = 0;\n     }\n+#endif /* 0 */\n }\n \f\n /* Terminate a case (Pascal) or switch (C) statement"}]}