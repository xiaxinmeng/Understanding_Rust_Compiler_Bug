{"sha": "6f94dea7854dac34ce80692eed3c9b24f8cb8912", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY5NGRlYTc4NTRkYWMzNGNlODA2OTJlZWQzYzliMjRmOGNiODkxMg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-02-23T19:17:06Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-02-23T19:17:06Z"}, "message": "vterminate.cc (__gnu_cxx::__verbose_terminate_handler): Only use fputs, not write.\n\n\n2004-02-23  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* libsupc++/vterminate.cc (__gnu_cxx::__verbose_terminate_handler):\n\tOnly use fputs, not write.\n\nFrom-SVN: r78327", "tree": {"sha": "ba397cf2f76dbc2bc4955ca1a4d8e247b2cf74d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba397cf2f76dbc2bc4955ca1a4d8e247b2cf74d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f94dea7854dac34ce80692eed3c9b24f8cb8912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f94dea7854dac34ce80692eed3c9b24f8cb8912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f94dea7854dac34ce80692eed3c9b24f8cb8912", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f94dea7854dac34ce80692eed3c9b24f8cb8912/comments", "author": null, "committer": null, "parents": [{"sha": "e074089354dafda49a966490255cb60250b9ec12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e074089354dafda49a966490255cb60250b9ec12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e074089354dafda49a966490255cb60250b9ec12"}], "stats": {"total": 49, "additions": 22, "deletions": 27}, "files": [{"sha": "6e2dc6e5e039bf70d81bc668aa51b5b38f285be0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f94dea7854dac34ce80692eed3c9b24f8cb8912/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f94dea7854dac34ce80692eed3c9b24f8cb8912/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6f94dea7854dac34ce80692eed3c9b24f8cb8912", "patch": "@@ -1,3 +1,8 @@\n+2004-02-23  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* libsupc++/vterminate.cc (__gnu_cxx::__verbose_terminate_handler):\n+\tOnly use fputs, not write.\n+\t\n 2004-02-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/malloc_allocator.h: Add operators ==, !=."}, {"sha": "b53e9cea5aba810d7fdc98595563b131604db7b9", "filename": "libstdc++-v3/libsupc++/vterminate.cc", "status": "modified", "additions": 17, "deletions": 27, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f94dea7854dac34ce80692eed3c9b24f8cb8912/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvterminate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f94dea7854dac34ce80692eed3c9b24f8cb8912/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvterminate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvterminate.cc?ref=6f94dea7854dac34ce80692eed3c9b24f8cb8912", "patch": "@@ -1,6 +1,6 @@\n // Verbose terminate_handler -*- C++ -*-\n \n-// Copyright (C) 2001, 2002 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,76 +32,66 @@\n #include <exception>\n #include <exception_defines.h>\n #include <cxxabi.h>\n-\n-#ifdef _GLIBCXX_HAVE_UNISTD_H\n-# include <unistd.h>\n-# define writestr(str)  write(2, str, __builtin_strlen(str))\n-#else\n # include <cstdio>\n-# define writestr(str)  std::fputs(str, stderr)\n-#endif\n \n using namespace std;\n using namespace abi;\n \n namespace __gnu_cxx\n {\n-  /* A replacement for the standard terminate_handler which prints\n-   more information about the terminating exception (if any) on\n-   stderr.  */\n+  // A replacement for the standard terminate_handler which prints\n+  // more information about the terminating exception (if any) on\n+  // stderr.\n   void __verbose_terminate_handler()\n   {\n     static bool terminating;\n-\n     if (terminating)\n       {\n-\twritestr (\"terminate called recursively\\n\");\n+\tfputs(\"terminate called recursively\\n\", stderr);\n \tabort ();\n       }\n- \n-   terminating = true;\n+    terminating = true;\n \n     // Make sure there was an exception; terminate is also called for an\n     // attempt to rethrow when there is no suitable exception.\n     type_info *t = __cxa_current_exception_type();\n     if (t)\n       {\n-\tchar const *name = t->name();\n \t// Note that \"name\" is the mangled name.\n-\t\n+\tchar const *name = t->name();\n \t{\n \t  int status = -1;\n \t  char *dem = 0;\n \t  \n \t  dem = __cxa_demangle(name, 0, 0, &status);\n \n-\t  writestr(\"terminate called after throwing an instance of '\");\n+\t  fputs(\"terminate called after throwing an instance of '\", stderr);\n \t  if (status == 0)\n-\t    writestr(dem);\n+\t    fputs(dem, stderr);\n \t  else\n-\t    writestr(name);\n-\t  writestr(\"'\\n\");\n+\t    fputs(name, stderr);\n+\t  fputs(\"'\\n\", stderr);\n \n \t  if (status == 0)\n \t    free(dem);\n \t}\n \n-\t// If the exception is derived from std::exception, we can give more\n-\t// information.\n+\t// If the exception is derived from std::exception, we can\n+\t// give more information.\n \ttry { __throw_exception_again; }\n #ifdef __EXCEPTIONS\n \tcatch (exception &exc)\n \t  {\n \t    char const *w = exc.what();\n-\t    writestr(\"  what():  \");\n-\t    writestr(w);\n-\t    writestr(\"\\n\");\n+\t    fputs(\"  what():  \", stderr);\n+\t    fputs(w, stderr);\n+\t    fputs(\"\\n\", stderr);\n           }\n #endif\n \tcatch (...) { }\n       }\n     else\n-      writestr(\"terminate called without an active exception\\n\");\n+      fputs(\"terminate called without an active exception\\n\", stderr);\n     \n     abort();\n   }"}]}