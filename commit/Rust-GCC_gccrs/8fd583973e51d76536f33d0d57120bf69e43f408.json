{"sha": "8fd583973e51d76536f33d0d57120bf69e43f408", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZkNTgzOTczZTUxZDc2NTM2ZjMzZDBkNTcxMjBiZjY5ZTQzZjQwOA==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2004-04-29T15:28:42Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2004-04-29T15:28:42Z"}, "message": "gcc.c (DELETE_IF_ORDINARY): New macro default definition.\n\n\t* gcc.c (DELETE_IF_ORDINARY): New macro default definition.\n\t(delete_if_ordinary): Use above macro.\n\t* config/alpha/xm-vms.h (DELETE_IF_ORDINARY): New macro VMS definition.\n\tUpdate copyright.\n\t* doc/hostconfig.texi (DELETE_IF_ORDINARY): Document new macro.\n\t* libiberty/mkstemps.c (mkstemps) [VMS]: Remove special open option.\n\t Update copyright.\n\nFrom-SVN: r81290", "tree": {"sha": "7cc52a06db61f0e92a9c98a34aa14fcf0072b299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cc52a06db61f0e92a9c98a34aa14fcf0072b299"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fd583973e51d76536f33d0d57120bf69e43f408", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fd583973e51d76536f33d0d57120bf69e43f408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fd583973e51d76536f33d0d57120bf69e43f408", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fd583973e51d76536f33d0d57120bf69e43f408/comments", "author": null, "committer": null, "parents": [{"sha": "d935a36e27c5a15e05cabdc6b6e9b6d68538a14f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d935a36e27c5a15e05cabdc6b6e9b6d68538a14f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d935a36e27c5a15e05cabdc6b6e9b6d68538a14f"}], "stats": {"total": 58, "additions": 48, "deletions": 10}, "files": [{"sha": "68ee9a5ff1169f1cef0692d2d022ad081a04723e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd583973e51d76536f33d0d57120bf69e43f408/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd583973e51d76536f33d0d57120bf69e43f408/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fd583973e51d76536f33d0d57120bf69e43f408", "patch": "@@ -1,3 +1,11 @@\n+2004-04-29  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* gcc.c (DELETE_IF_ORDINARY): New macro default definition.\n+\t(delete_if_ordinary): Use above macro.\n+\t* config/alpha/xm-vms.h (DELETE_IF_ORDINARY): New macro VMS definition.\n+\tUpdate copyright.\n+\t* doc/hostconfig.texi (DELETE_IF_ORDINARY): Document new macro.\n+\n 2004-04-29  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* c-decl.c (get_parm_info): Use the correct tag keywords when"}, {"sha": "cf18b2f7019110f73b961fe3711689e0b6512c64", "filename": "gcc/config/alpha/xm-vms.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd583973e51d76536f33d0d57120bf69e43f408/gcc%2Fconfig%2Falpha%2Fxm-vms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd583973e51d76536f33d0d57120bf69e43f408/gcc%2Fconfig%2Falpha%2Fxm-vms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-vms.h?ref=8fd583973e51d76536f33d0d57120bf69e43f408", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for openVMS/Alpha.\n-   Copyright (C) 1996, 1997, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2001, 2004 Free Software Foundation, Inc.\n    Contributed by Klaus Kaempf (kkaempf@progis.de).\n \n This file is part of GCC.\n@@ -43,3 +43,15 @@ Boston, MA 02111-1307, USA.  */\n #define HOST_OBJECT_SUFFIX \".obj\"\n \n #define DUMPFILE_FORMAT \"_%02d_\"\n+\n+#define DELETE_IF_ORDINARY(NAME,ST,VERBOSE_FLAG)           \\\n+do                                                         \\\n+  {                                                        \\\n+    while (stat (NAME, &ST) >= 0 && S_ISREG (ST.st_mode))  \\\n+      if (unlink (NAME) < 0)                               \\\n+\t{                                                  \\\n+\t  if (VERBOSE_FLAG)                                \\\n+\t    perror_with_name (NAME);                       \\\n+\t  break;                                           \\\n+\t}                                                  \\\n+  } while (0)"}, {"sha": "c97b41b7c2ecd5d1ef2af9887c7e683acf3e7881", "filename": "gcc/doc/hostconfig.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd583973e51d76536f33d0d57120bf69e43f408/gcc%2Fdoc%2Fhostconfig.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd583973e51d76536f33d0d57120bf69e43f408/gcc%2Fdoc%2Fhostconfig.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fhostconfig.texi?ref=8fd583973e51d76536f33d0d57120bf69e43f408", "patch": "@@ -147,6 +147,15 @@ unique to each dump file kind, e.g. @samp{rtl}.\n \n If you do not define this macro, GCC will use @samp{.%02d.}.  You should\n define this macro if using the default will create an invalid file name.\n+\n+@item DELETE_IF_ORDINARY\n+Define this macro to be a C statement (sans semicolon) that performs\n+host-dependent removal of ordinary temp files in the compilation driver.\n+\n+If you do not define this macro, GCC will use the default version. You\n+should define this macro if the default version does not reliably remove\n+the temp file as, for example, on VMS which allows multiple versions\n+of a file.\n @end ftable\n \n @node Host Misc"}, {"sha": "4434e791aa09945c7ff5c45fda740b72a25e8a24", "filename": "gcc/gcc.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd583973e51d76536f33d0d57120bf69e43f408/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd583973e51d76536f33d0d57120bf69e43f408/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=8fd583973e51d76536f33d0d57120bf69e43f408", "patch": "@@ -2245,6 +2245,17 @@ record_temp_file (const char *filename, int always_delete, int fail_delete)\n \n /* Delete all the temporary files whose names we previously recorded.  */\n \n+#ifndef DELETE_IF_ORDINARY\n+#define DELETE_IF_ORDINARY(NAME,ST,VERBOSE_FLAG)        \\\n+do                                                      \\\n+  {                                                     \\\n+    if (stat (NAME, &ST) >= 0 && S_ISREG (ST.st_mode))  \\\n+      if (unlink (NAME) < 0)                            \\\n+\tif (VERBOSE_FLAG)                               \\\n+\t  perror_with_name (NAME);                      \\\n+  } while (0)\n+#endif\n+\n static void\n delete_if_ordinary (const char *name)\n {\n@@ -2261,10 +2272,7 @@ delete_if_ordinary (const char *name)\n \n   if (i == 'y' || i == 'Y')\n #endif /* DEBUG */\n-    if (stat (name, &st) >= 0 && S_ISREG (st.st_mode))\n-      if (unlink (name) < 0)\n-\tif (verbose_flag)\n-\t  perror_with_name (name);\n+  DELETE_IF_ORDINARY (name, st, verbose_flag);\n }\n \n static void"}, {"sha": "82547e29bfee0e3ddde6bd4e86d4c49b271e0f2e", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd583973e51d76536f33d0d57120bf69e43f408/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd583973e51d76536f33d0d57120bf69e43f408/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=8fd583973e51d76536f33d0d57120bf69e43f408", "patch": "@@ -1,3 +1,8 @@\n+2004-04-29  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* mkstemps.c (mkstemps) [VMS]: Remove special open option. Update\n+\tcopyright.\n+\n 2004-04-26  Maciej W. Rozycki  <macro@ds2.pg.gda.pl>\n \n \t* configure.ac (UNSIGNED_64BIT_TYPE): Unquote the definition."}, {"sha": "94edf78755b28ee446af08358075d664016913c0", "filename": "libiberty/mkstemps.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd583973e51d76536f33d0d57120bf69e43f408/libiberty%2Fmkstemps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd583973e51d76536f33d0d57120bf69e43f408/libiberty%2Fmkstemps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmkstemps.c?ref=8fd583973e51d76536f33d0d57120bf69e43f408", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1991, 1992, 1996, 1998 Free Software Foundation, Inc.\n+/* Copyright (C) 1991, 1992, 1996, 1998, 2004 Free Software Foundation, Inc.\n    This file is derived from mkstemp.c from the GNU C Library.\n \n    The GNU C Library is free software; you can redistribute it and/or\n@@ -121,11 +121,7 @@ mkstemps (template, suffix_len)\n       v /= 62;\n       XXXXXX[5] = letters[v % 62];\n \n-#ifdef VMS\n-      fd = open (template, O_RDWR|O_CREAT|O_EXCL, 0600, \"fop=tmd\");\n-#else\n       fd = open (template, O_RDWR|O_CREAT|O_EXCL, 0600);\n-#endif\n       if (fd >= 0)\n \t/* The file does not exist.  */\n \treturn fd;"}]}