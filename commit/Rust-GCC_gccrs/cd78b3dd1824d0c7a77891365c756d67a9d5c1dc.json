{"sha": "cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q3OGIzZGQxODI0ZDBjN2E3Nzg5MTM2NWM3NTZkNjdhOWQ1YzFkYw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-05-31T11:04:41Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-05-31T11:04:41Z"}, "message": "[AArch64] Remove aarch64_simd_attr_length_move\n\n\t* config/aarch64/aarch64.c (aarch64_simd_attr_length_move): Delete.\n\t* config/aarch64/aarch64-protos.h (aarch64_simd_attr_length_move):\n\tDelete prototype.\n\t* config/aarch64/iterators.md (insn_count): Add descriptive comment.\n\t* config/aarch64/aarch64-simd.md (*aarch64_mov<mode>, VSTRUCT modes):\n\tRemove use of aarch64_simd_attr_length_move, set length attribute\n\tdirectly.\n\t(*aarch64_be_movoi): Likewise.\n\t(*aarch64_be_movci): Likewise.\n\t(*aarch64_be_movxi): Likewise.\n\nFrom-SVN: r236916", "tree": {"sha": "72a76fc019a9638baebeaa37d53f03fa7b056613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72a76fc019a9638baebeaa37d53f03fa7b056613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29d1d5ec6b49e5241fa0f382cbcb512b25d412ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d1d5ec6b49e5241fa0f382cbcb512b25d412ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d1d5ec6b49e5241fa0f382cbcb512b25d412ba"}], "stats": {"total": 50, "additions": 18, "deletions": 32}, "files": [{"sha": "ae81bbfb1a995b24b9ae731bd731637547f9240e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "patch": "@@ -1,3 +1,16 @@\n+2016-05-31  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_simd_attr_length_move): Delete.\n+\t* config/aarch64/aarch64-protos.h (aarch64_simd_attr_length_move):\n+\tDelete prototype.\n+\t* config/aarch64/iterators.md (insn_count): Add descriptive comment.\n+\t* config/aarch64/aarch64-simd.md (*aarch64_mov<mode>, VSTRUCT modes):\n+\tRemove use of aarch64_simd_attr_length_move, set length attribute\n+\tdirectly.\n+\t(*aarch64_be_movoi): Likewise.\n+\t(*aarch64_be_movci): Likewise.\n+\t(*aarch64_be_movxi): Likewise.\n+\n 2016-05-31  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* loop-init.c (gate): Do not enale RTL loop unroller with -fpeel-loops."}, {"sha": "ab9b37a771f97de547d46cefd8e91099b8120136", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "patch": "@@ -333,7 +333,6 @@ machine_mode aarch64_hard_regno_caller_save_mode (unsigned, unsigned,\n \t\t\t\t\t\t       machine_mode);\n int aarch64_hard_regno_mode_ok (unsigned, machine_mode);\n int aarch64_hard_regno_nregs (unsigned, machine_mode);\n-int aarch64_simd_attr_length_move (rtx_insn *);\n int aarch64_uxt_size (int, HOST_WIDE_INT);\n int aarch64_vec_fpconst_pow_of_2 (rtx);\n rtx aarch64_final_eh_return_addr (void);"}, {"sha": "6ea35bf487eaa47dd78742e3eae7507b6875ba1a", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "patch": "@@ -4639,7 +4639,7 @@\n    ld1\\\\t{%S0.16b - %<Vendreg>0.16b}, %1\"\n   [(set_attr \"type\" \"multiple,neon_store<nregs>_<nregs>reg_q,\\\n \t\t     neon_load<nregs>_<nregs>reg_q\")\n-   (set (attr \"length\") (symbol_ref \"aarch64_simd_attr_length_move (insn)\"))]\n+   (set_attr \"length\" \"<insn_count>,4,4\")]\n )\n \n (define_insn \"aarch64_be_ld1<mode>\"\n@@ -4672,7 +4672,7 @@\n    stp\\\\t%q1, %R1, %0\n    ldp\\\\t%q0, %R0, %1\"\n   [(set_attr \"type\" \"multiple,neon_stp_q,neon_ldp_q\")\n-   (set (attr \"length\") (symbol_ref \"aarch64_simd_attr_length_move (insn)\"))]\n+   (set_attr \"length\" \"8,4,4\")]\n )\n \n (define_insn \"*aarch64_be_movci\"\n@@ -4683,7 +4683,7 @@\n        || register_operand (operands[1], CImode))\"\n   \"#\"\n   [(set_attr \"type\" \"multiple\")\n-   (set (attr \"length\") (symbol_ref \"aarch64_simd_attr_length_move (insn)\"))]\n+   (set_attr \"length\" \"12,4,4\")]\n )\n \n (define_insn \"*aarch64_be_movxi\"\n@@ -4694,7 +4694,7 @@\n        || register_operand (operands[1], XImode))\"\n   \"#\"\n   [(set_attr \"type\" \"multiple\")\n-   (set (attr \"length\") (symbol_ref \"aarch64_simd_attr_length_move (insn)\"))]\n+   (set_attr \"length\" \"16,4,4\")]\n )\n \n (define_split"}, {"sha": "3ec5c9fb635b70337fa49293b07ffc6ad9b6e9f4", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "patch": "@@ -10734,33 +10734,6 @@ aarch64_simd_emit_reg_reg_move (rtx *operands, enum machine_mode mode,\n \t\t      gen_rtx_REG (mode, rsrc + count - i - 1));\n }\n \n-/* Compute and return the length of aarch64_simd_mov<mode>, where <mode> is\n-   one of VSTRUCT modes: OI, CI or XI.  */\n-int\n-aarch64_simd_attr_length_move (rtx_insn *insn)\n-{\n-  machine_mode mode;\n-\n-  extract_insn_cached (insn);\n-\n-  if (REG_P (recog_data.operand[0]) && REG_P (recog_data.operand[1]))\n-    {\n-      mode = GET_MODE (recog_data.operand[0]);\n-      switch (mode)\n-\t{\n-\tcase OImode:\n-\t  return 8;\n-\tcase CImode:\n-\t  return 12;\n-\tcase XImode:\n-\t  return 16;\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n-    }\n-  return 4;\n-}\n-\n /* Compute and return the length of aarch64_simd_reglist<mode>, where <mode> is\n    one of VSTRUCT modes: OI, CI, or XI.  */\n int"}, {"sha": "43b22d81cda30398564af2f2fcaefceb215ec04c", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "patch": "@@ -715,6 +715,7 @@\n (define_mode_attr vsi2qi [(V2SI \"v8qi\") (V4SI \"v16qi\")])\n (define_mode_attr VSI2QI [(V2SI \"V8QI\") (V4SI \"V16QI\")])\n \n+;; Sum of lengths of instructions needed to move vector registers of a mode.\n (define_mode_attr insn_count [(OI \"8\") (CI \"12\") (XI \"16\")])\n \n ;; -fpic small model GOT reloc modifers: gotpage_lo15/lo14 for ILP64/32."}]}