{"sha": "1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJjZDAxOTJiZjJiOWFkYmRmMGZhYjdhYjhmMjQ1ZDZmNjhhZWE3MQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2017-01-16T09:48:45Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2017-01-16T09:48:45Z"}, "message": "avr.h (BRANCH_COST): Increase by 4.\n\ngcc/\n\t* config/avr/avr.h (BRANCH_COST) [reload_completed]: Increase by 4.\n\nFrom-SVN: r244488", "tree": {"sha": "e9c7c025366911ab8a6c40d6d1f858fa20878934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9c7c025366911ab8a6c40d6d1f858fa20878934"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a99ce94c8acf996340013b836f45f81dc64a3f44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a99ce94c8acf996340013b836f45f81dc64a3f44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a99ce94c8acf996340013b836f45f81dc64a3f44"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "0df0bbc3956aa5cf3d6addf7ff6e8454fcd20347", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71", "patch": "@@ -1,3 +1,7 @@\n+2017-01-16  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.h (BRANCH_COST) [reload_completed]: Increase by 4.\n+\n 2017-01-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_legitimate_combined_insn): Do not"}, {"sha": "3dfa8c3b00b90a57aefe8e9e147f146e626101b0", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=1bcd0192bf2b9adbdf0fab7ab8f245d6f68aea71", "patch": "@@ -360,7 +360,12 @@ typedef struct avr_args\n       }                                                                 \\\n   } while (0)\n \n-#define BRANCH_COST(speed_p, predictable_p) avr_branch_cost\n+/* We increase branch costs after reload in order to keep basic-block\n+   reordering from introducing out-of-line jumps and to prefer fall-through\n+   edges instead.  The default branch costs are 0, mainly because otherwise\n+   do_store_flag might come up with bloated code.  */\n+#define BRANCH_COST(speed_p, predictable_p)     \\\n+  (avr_branch_cost + (reload_completed ? 4 : 0))\n \n #define SLOW_BYTE_ACCESS 0\n "}]}