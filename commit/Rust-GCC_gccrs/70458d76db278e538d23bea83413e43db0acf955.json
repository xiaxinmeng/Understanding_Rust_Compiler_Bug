{"sha": "70458d76db278e538d23bea83413e43db0acf955", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0NThkNzZkYjI3OGU1MzhkMjNiZWE4MzQxM2U0M2RiMGFjZjk1NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-03-14T10:55:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-03-14T10:55:45Z"}, "message": "tree-ssa-pre.c (compute_antic_aux): Remove code that asserts that the value-set of ANTIC_IN doesn't grow.\n\n2018-03-14  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-pre.c (compute_antic_aux): Remove code that asserts\n\tthat the value-set of ANTIC_IN doesn't grow.\n\n\tRevert\n\t* tree-ssa-pre.c (struct bb_bitmap_sets): Add visited_with_visited_succs\n\tmember.\n\t(BB_VISITED_WITH_VISITED_SUCCS): New define.\n\t(compute_antic): Initialize BB_VISITED_WITH_VISITED_SUCCS.\n\nFrom-SVN: r258520", "tree": {"sha": "e28111c0d7c52721186a1fdcf6bf860c8fd74e10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e28111c0d7c52721186a1fdcf6bf860c8fd74e10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70458d76db278e538d23bea83413e43db0acf955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70458d76db278e538d23bea83413e43db0acf955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70458d76db278e538d23bea83413e43db0acf955", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70458d76db278e538d23bea83413e43db0acf955/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b06ad56de211882b9cbfa932443ebd3c0b48a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b06ad56de211882b9cbfa932443ebd3c0b48a86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b06ad56de211882b9cbfa932443ebd3c0b48a86"}], "stats": {"total": 38, "additions": 12, "deletions": 26}, "files": [{"sha": "480db486de8773f04eb51544a8f36f8e4b2d4281", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70458d76db278e538d23bea83413e43db0acf955/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70458d76db278e538d23bea83413e43db0acf955/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70458d76db278e538d23bea83413e43db0acf955", "patch": "@@ -1,3 +1,14 @@\n+2018-03-14  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-pre.c (compute_antic_aux): Remove code that asserts\n+\tthat the value-set of ANTIC_IN doesn't grow.\n+\n+\tRevert\n+\t* tree-ssa-pre.c (struct bb_bitmap_sets): Add visited_with_visited_succs\n+\tmember.\n+\t(BB_VISITED_WITH_VISITED_SUCCS): New define.\n+\t(compute_antic): Initialize BB_VISITED_WITH_VISITED_SUCCS.\n+\n 2018-03-14  Julia Koval  <julia.koval@intel.com>\n \n \t* config.gcc (icelake-client, icelake-server): New."}, {"sha": "11b1938216e85a0e362d2b181919ad38990b6e5d", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70458d76db278e538d23bea83413e43db0acf955/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70458d76db278e538d23bea83413e43db0acf955/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=70458d76db278e538d23bea83413e43db0acf955", "patch": "@@ -484,10 +484,6 @@ typedef struct bb_bitmap_sets\n   /* True if we have visited this block during ANTIC calculation.  */\n   unsigned int visited : 1;\n \n-  /* True if we have visited this block after all successors have been\n-     visited this way.  */\n-  unsigned int visited_with_visited_succs : 1;\n-\n   /* True when the block contains a call that might not return.  */\n   unsigned int contains_may_not_return_call : 1;\n } *bb_value_sets_t;\n@@ -501,8 +497,6 @@ typedef struct bb_bitmap_sets\n #define NEW_SETS(BB)\t((bb_value_sets_t) ((BB)->aux))->new_sets\n #define EXPR_DIES(BB)\t((bb_value_sets_t) ((BB)->aux))->expr_dies\n #define BB_VISITED(BB)\t((bb_value_sets_t) ((BB)->aux))->visited\n-#define BB_VISITED_WITH_VISITED_SUCCS(BB) \\\n-    ((bb_value_sets_t) ((BB)->aux))->visited_with_visited_succs\n #define BB_MAY_NOTRETURN(BB) ((bb_value_sets_t) ((BB)->aux))->contains_may_not_return_call\n #define BB_LIVE_VOP_ON_EXIT(BB) ((bb_value_sets_t) ((BB)->aux))->vop_on_exit\n \n@@ -2047,8 +2041,6 @@ compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n     {\n       e = single_succ_edge (block);\n       gcc_assert (BB_VISITED (e->dest));\n-      BB_VISITED_WITH_VISITED_SUCCS (block)\n-\t= BB_VISITED_WITH_VISITED_SUCCS (e->dest);\n       phi_translate_set (ANTIC_OUT, ANTIC_IN (e->dest), e);\n     }\n   /* If we have multiple successors, we take the intersection of all of\n@@ -2059,7 +2051,6 @@ compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n       size_t i;\n       edge first = NULL;\n \n-      BB_VISITED_WITH_VISITED_SUCCS (block) = true;\n       auto_vec<edge> worklist (EDGE_COUNT (block->succs));\n       FOR_EACH_EDGE (e, ei, block->succs)\n \t{\n@@ -2078,8 +2069,6 @@ compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n \t\tfprintf (dump_file, \"ANTIC_IN is MAX on %d->%d\\n\",\n \t\t\t e->src->index, e->dest->index);\n \t    }\n-\t  BB_VISITED_WITH_VISITED_SUCCS (block)\n-\t    &= BB_VISITED_WITH_VISITED_SUCCS (e->dest);\n \t}\n \n       /* Of multiple successors we have to have visited one already\n@@ -2184,19 +2173,7 @@ compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n     }\n \n   if (!bitmap_set_equal (old, ANTIC_IN (block)))\n-    {\n-      changed = true;\n-      /* After the initial value set computation the value set may\n-         only shrink during the iteration.  */\n-      if (was_visited && BB_VISITED_WITH_VISITED_SUCCS (block) && flag_checking)\n-\t{\n-\t  bitmap_iterator bi;\n-\t  unsigned int i;\n-\t  EXECUTE_IF_AND_COMPL_IN_BITMAP (&ANTIC_IN (block)->values,\n-\t\t\t\t\t  &old->values, 0, i, bi)\n-\t    gcc_unreachable ();\n-\t}\n-    }\n+    changed = true;\n \n  maybe_dump_sets:\n   if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -2367,7 +2344,6 @@ compute_antic (void)\n   FOR_ALL_BB_FN (block, cfun)\n     {\n       BB_VISITED (block) = 0;\n-      BB_VISITED_WITH_VISITED_SUCCS (block) = 0;\n \n       FOR_EACH_EDGE (e, ei, block->preds)\n \tif (e->flags & EDGE_ABNORMAL)\n@@ -2384,7 +2360,6 @@ compute_antic (void)\n \n   /* At the exit block we anticipate nothing.  */\n   BB_VISITED (EXIT_BLOCK_PTR_FOR_FN (cfun)) = 1;\n-  BB_VISITED_WITH_VISITED_SUCCS (EXIT_BLOCK_PTR_FOR_FN (cfun)) = 1;\n \n   /* For ANTIC computation we need a postorder that also guarantees that\n      a block with a single successor is visited after its successor."}]}