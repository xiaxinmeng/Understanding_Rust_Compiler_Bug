{"sha": "d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMwZThlZjBkY2RiMGFlNzdhOThkNzk4NzlmZTA3NjAwZDljNGM3Nw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "crux@pool.informatik.rwth-aachen.de", "date": "1998-11-06T19:22:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-11-06T19:22:36Z"}, "message": "reload1.c (emit_reload_insns): When rewriting the SET_DEST of a previous insn to store directly into our...\n\n        * reload1.c (emit_reload_insns):  When rewriting the SET_DEST of a\n        previous insn to store directly into our reload register, make sure\n        that if the source of the previous insn is a reload register, its\n        spill_reg_store and spill_reg_stored_to values are cleared.\n\nFrom-SVN: r23550", "tree": {"sha": "dde8d64c18236392a248d9a3f6d9894119e51477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dde8d64c18236392a248d9a3f6d9894119e51477"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77/comments", "author": null, "committer": null, "parents": [{"sha": "6ba89f8ecba5e27e4c847308cceaec857aaaa5cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba89f8ecba5e27e4c847308cceaec857aaaa5cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba89f8ecba5e27e4c847308cceaec857aaaa5cc"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "1c94751d33ebb55000fa33cede54b24cb2c0b95b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77", "patch": "@@ -1,3 +1,10 @@\n+Fri Nov  6 20:15:19 1998  Bernd Schmidt <crux@pool.informatik.rwth-aachen.de>\n+\n+\t* reload1.c (emit_reload_insns):  When rewriting the SET_DEST of a\n+\tprevious insn to store directly into our reload register, make sure\n+\tthat if the source of the previous insn is a reload register, its\n+\tspill_reg_store and spill_reg_stored_to values are cleared.\n+\n Fri Nov  6 16:35:10 1998  David Edelsohn  <edelsohn@mhpcc.edu>\n \n \t* rs6000.md (floatunssidf2_internal splitter): Use base register"}, {"sha": "ce574a15e37f26748456813ace86f619d718f3e4", "filename": "gcc/reload1.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=d30e8ef0dcdb0ae77a98d79879fe07600d9c4c77", "patch": "@@ -6774,6 +6774,18 @@ emit_reload_insns (chain)\n \t\t{\n \t\t  /* Store into the reload register instead of the pseudo.  */\n \t\t  SET_DEST (PATTERN (temp)) = reloadreg;\n+\n+\t\t  /* If the previous insn is an output reload, the source is\n+\t\t     a reload register, and its spill_reg_store entry will\n+\t\t     contain the previous destination.  This is now\n+\t\t     invalid.  */\n+\t\t  if (GET_CODE (SET_SRC (PATTERN (temp))) == REG\n+\t\t      && REGNO (SET_SRC (PATTERN (temp))) < FIRST_PSEUDO_REGISTER)\n+\t\t    {\n+\t\t      spill_reg_store[REGNO (SET_SRC (PATTERN (temp)))] = 0;\n+\t\t      spill_reg_stored_to[REGNO (SET_SRC (PATTERN (temp)))] = 0;\n+\t\t    }\n+\n \t\t  /* If these are the only uses of the pseudo reg,\n \t\t     pretend for GDB it lives in the reload reg we used.  */\n \t\t  if (REG_N_DEATHS (REGNO (old)) == 1"}]}