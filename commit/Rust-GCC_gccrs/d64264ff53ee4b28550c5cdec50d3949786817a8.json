{"sha": "d64264ff53ee4b28550c5cdec50d3949786817a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY0MjY0ZmY1M2VlNGIyODU1MGM1Y2RlYzUwZDM5NDk3ODY4MTdhOA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "2000-01-19T19:18:20Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-01-19T19:18:20Z"}, "message": "* sh.md (fpu_single, fp_mode): New attributes.\n\nFrom-SVN: r31506", "tree": {"sha": "974041384d22eb096eafbac44692dcff9a80b349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/974041384d22eb096eafbac44692dcff9a80b349"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d64264ff53ee4b28550c5cdec50d3949786817a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d64264ff53ee4b28550c5cdec50d3949786817a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d64264ff53ee4b28550c5cdec50d3949786817a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d64264ff53ee4b28550c5cdec50d3949786817a8/comments", "author": null, "committer": null, "parents": [{"sha": "db70b4bd91e658f965121cfc7905348688571f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db70b4bd91e658f965121cfc7905348688571f24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db70b4bd91e658f965121cfc7905348688571f24"}], "stats": {"total": 129, "additions": 93, "deletions": 36}, "files": [{"sha": "10712b4654db6cf07fb180ee50bcef1f701239f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64264ff53ee4b28550c5cdec50d3949786817a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64264ff53ee4b28550c5cdec50d3949786817a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d64264ff53ee4b28550c5cdec50d3949786817a8", "patch": "@@ -1,3 +1,7 @@\n+Wed Jan 19 19:12:36 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.md (fpu_single, fp_mode): New attributes.\n+\n 2000-01-20  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* loop.c (current_loop_info): Renamed from loop_info_data"}, {"sha": "a0d50366b083a096beac1c5ac5187a55707decdb", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 89, "deletions": 36, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64264ff53ee4b28550c5cdec50d3949786817a8/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64264ff53ee4b28550c5cdec50d3949786817a8/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=d64264ff53ee4b28550c5cdec50d3949786817a8", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for the Hitachi SH.\n-;;  Copyright (C) 1993 - 1999 Free Software Foundation, Inc.\n+;;  Copyright (C) 1993 - 2000 Free Software Foundation, Inc.\n ;;  Contributed by Steve Chamberlain (sac@cygnus.com).\n ;;  Improved by Jim Wilson (wilson@cygnus.com).\n \n@@ -77,6 +77,11 @@\n  (const (if_then_else (symbol_ref \"TARGET_LITTLE_ENDIAN\")\n \t\t      (const_string \"little\") (const_string \"big\"))))\n \n+;; Indicate if the default fpu mode is single precision.\n+(define_attr \"fpu_single\" \"yes,no\"\n+  (const (if_then_else (symbol_ref \"TARGET_FPU_SINGLE\")\n+                         (const_string \"yes\") (const_string \"no\"))))\n+\n (define_attr \"fmovd\" \"yes,no\"\n   (const (if_then_else (symbol_ref \"TARGET_FMOVD\")\n \t\t       (const_string \"yes\") (const_string \"no\"))))\n@@ -116,6 +121,10 @@\n  \"cbranch,jump,jump_ind,arith,arith3,arith3b,dyn_shift,other,load,load_si,store,move,fmove,smpy,dmpy,return,pload,pstore,pcload,pcload_si,rte,sfunc,call,fp,fdiv,dfp_arith,dfp_cmp,dfp_conv,dfdiv,gp_fpul,nil\"\n   (const_string \"other\"))\n \n+;; Indicate what precision must be selected in fpscr for this insn, if any.\n+\n+(define_attr \"fp_mode\" \"single,double,none\" (const_string \"none\"))\n+\n ; If a conditional branch destination is within -252..258 bytes away\n ; from the instruction it can be 2 bytes long.  Something in the\n ; range -4090..4100 bytes can be 6 bytes long.  All other conditional\n@@ -887,6 +896,7 @@\n   \"TARGET_SH4 && ! TARGET_FPU_SINGLE\"\n   \"jsr\t@%1%#\"\n   [(set_attr \"type\" \"sfunc\")\n+   (set_attr \"fp_mode\" \"double\")\n    (set_attr \"needs_delay_slot\" \"yes\")])\n \n (define_insn \"udivsi3_i4_single\"\n@@ -960,6 +970,7 @@\n   \"TARGET_SH4 && ! TARGET_FPU_SINGLE\"\n   \"jsr\t@%1%#\"\n   [(set_attr \"type\" \"sfunc\")\n+   (set_attr \"fp_mode\" \"double\")\n    (set_attr \"needs_delay_slot\" \"yes\")])\n \n (define_insn \"divsi3_i4_single\"\n@@ -2407,7 +2418,10 @@\n       (const_int 4)\n       (const_int 8) (const_int 8) ;; these need only 8 bytes for @(r0,rn)\n       (const_int 8) (const_int 8)])\n-   (set_attr \"type\" \"fmove,move,pcload,load,store,pcload,load,store,load,load\")])\n+   (set_attr \"type\" \"fmove,move,pcload,load,store,pcload,load,store,load,load\")\n+   (set (attr \"fp_mode\") (if_then_else (eq_attr \"fmovd\" \"yes\")\n+\t\t\t\t\t   (const_string \"double\")\n+\t\t\t\t\t   (const_string \"none\")))])\n \n ;; Moving DFmode between fp/general registers through memory\n ;; (the top of the stack) is faster than moving through fpul even for\n@@ -2868,8 +2882,10 @@\n \tlds\t%1,%0\n \t! move optimized away\"\n   [(set_attr \"type\" \"fmove,move,fmove,fmove,pcload,load,store,pcload,load,store,fmove,fmove,load,*,gp_fpul,gp_fpul,nil\")\n-   (set_attr \"length\" \"*,*,*,*,4,*,*,*,*,*,2,2,2,4,2,2,0\")])\n-\n+   (set_attr \"length\" \"*,*,*,*,4,*,*,*,*,*,2,2,2,4,2,2,0\")\n+   (set (attr \"fp_mode\") (if_then_else (eq_attr \"fmovd\" \"yes\")\n+\t\t\t\t\t   (const_string \"single\")\n+\t\t\t\t\t   (const_string \"none\")))])\n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(match_operand:SF 1 \"register_operand\" \"\"))\n@@ -3144,6 +3160,9 @@\n   \"\"\n   \"jsr\t@%0%#\"\n   [(set_attr \"type\" \"call\")\n+   (set (attr \"fp_mode\")\n+\t(if_then_else (eq_attr \"fpu_single\" \"yes\")\n+\t\t      (const_string \"single\") (const_string \"double\")))\n    (set_attr \"needs_delay_slot\" \"yes\")])\n \n (define_insn \"call_valuei\"\n@@ -3155,6 +3174,9 @@\n   \"\"\n   \"jsr\t@%1%#\"\n   [(set_attr \"type\" \"call\")\n+   (set (attr \"fp_mode\")\n+\t(if_then_else (eq_attr \"fpu_single\" \"yes\")\n+\t\t      (const_string \"single\") (const_string \"double\")))\n    (set_attr \"needs_delay_slot\" \"yes\")])\n \n (define_expand \"call\"\n@@ -3858,7 +3880,8 @@\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fadd\t%2,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"subsf3\"\n   [(match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n@@ -3874,7 +3897,8 @@\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fsub\t%2,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n ;; Unfortunately, the combiner is unable to cope with the USE of the FPSCR\n ;; register in feeding fp instructions.  Thus, we cannot generate fmac for\n@@ -3902,7 +3926,8 @@\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fmul\t%2,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"mulsf3_ie\"\n   [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n@@ -3920,7 +3945,8 @@\n    (use (match_operand:PSI 4 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n   \"fmac\tfr0,%2,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"divsf3\"\n   [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n@@ -3936,7 +3962,8 @@\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fdiv\t%2,%0\"\n-  [(set_attr \"type\" \"fdiv\")])\n+  [(set_attr \"type\" \"fdiv\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"floatsisf2\"\n   [(set (reg:SI 22)\n@@ -3963,7 +3990,8 @@\n    (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"float\tfpul,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"*floatsisf2_ie\"\n   [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n@@ -3995,7 +4023,8 @@\n    (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"ftrc\t%0,fpul\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"fix_truncsfsi2_i4_2\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n@@ -4004,7 +4033,8 @@\n    (clobber (reg:SI 22))]\n   \"TARGET_SH4\"\n   \"#\"\n-  [(set_attr \"length\" \"4\")])\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_split\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n@@ -4028,14 +4058,16 @@\n \t\t\t   (match_operand:SF 1 \"arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n   \"fcmp/gt\t%1,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"cmpeqsf_t\"\n   [(set (reg:SI 18) (eq:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")\n \t\t\t   (match_operand:SF 1 \"arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n   \"fcmp/eq\t%1,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"ieee_ccmpeqsf_t\"\n   [(set (reg:SI 18) (ior:SI (reg:SI 18)\n@@ -4052,15 +4084,17 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcmp/gt\t%1,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"cmpeqsf_t_i4\"\n   [(set (reg:SI 18) (eq:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")\n \t\t\t   (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcmp/eq\t%1,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"*ieee_ccmpeqsf_t_4\"\n   [(set (reg:SI 18) (ior:SI (reg:SI 18)\n@@ -4069,7 +4103,8 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_IEEE && TARGET_SH4\"\n   \"* return output_ieee_ccmpeq (insn, operands);\"\n-  [(set_attr \"length\" \"4\")])\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"cmpsf\"\n   [(set (reg:SI 18) (compare (match_operand:SF 0 \"arith_operand\" \"\")\n@@ -4094,7 +4129,8 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fneg\t%0\"\n-  [(set_attr \"type\" \"fmove\")])\n+  [(set_attr \"type\" \"fmove\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"sqrtsf2\"\n   [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n@@ -4108,7 +4144,8 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fsqrt\t%0\"\n-  [(set_attr \"type\" \"fdiv\")])\n+  [(set_attr \"type\" \"fdiv\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"abssf2\"\n   [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n@@ -4122,7 +4159,8 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fabs\t%0\"\n-  [(set_attr \"type\" \"fmove\")])\n+  [(set_attr \"type\" \"fmove\")\n+   (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"adddf3\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n@@ -4138,7 +4176,8 @@\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fadd\t%2,%0\"\n-  [(set_attr \"type\" \"dfp_arith\")])\n+  [(set_attr \"type\" \"dfp_arith\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"subdf3\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n@@ -4154,7 +4193,8 @@\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fsub\t%2,%0\"\n-  [(set_attr \"type\" \"dfp_arith\")])\n+  [(set_attr \"type\" \"dfp_arith\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"muldf3\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n@@ -4170,7 +4210,8 @@\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fmul\t%2,%0\"\n-  [(set_attr \"type\" \"dfp_arith\")])\n+  [(set_attr \"type\" \"dfp_arith\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"divdf3\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n@@ -4186,7 +4227,8 @@\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fdiv\t%2,%0\"\n-  [(set_attr \"type\" \"dfdiv\")])\n+  [(set_attr \"type\" \"dfdiv\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"floatsidf2\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n@@ -4205,7 +4247,8 @@\n    (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"float\tfpul,%0\"\n-  [(set_attr \"type\" \"dfp_conv\")])\n+  [(set_attr \"type\" \"dfp_conv\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"fix_truncdfsi2\"\n   [(match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n@@ -4224,7 +4267,8 @@\n    (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"ftrc\t%0,fpul\"\n-  [(set_attr \"type\" \"dfp_conv\")])\n+  [(set_attr \"type\" \"dfp_conv\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_insn \"fix_truncdfsi2_i4\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n@@ -4233,7 +4277,8 @@\n    (clobber (reg:SI 22))]\n   \"TARGET_SH4\"\n   \"#\"\n-  [(set_attr \"length\" \"4\")])\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_split\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n@@ -4251,15 +4296,17 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcmp/gt\t%1,%0\"\n-  [(set_attr \"type\" \"dfp_cmp\")])\n+  [(set_attr \"type\" \"dfp_cmp\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_insn \"cmpeqdf_t\"\n   [(set (reg:SI 18) (eq:SI (match_operand:DF 0 \"arith_reg_operand\" \"f\")\n \t\t\t   (match_operand:DF 1 \"arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcmp/eq\t%1,%0\"\n-  [(set_attr \"type\" \"dfp_cmp\")])\n+  [(set_attr \"type\" \"dfp_cmp\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_insn \"*ieee_ccmpeqdf_t\"\n   [(set (reg:SI 18) (ior:SI (reg:SI 18)\n@@ -4268,8 +4315,9 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_IEEE && TARGET_SH4\"\n   \"* return output_ieee_ccmpeq (insn, operands);\"\n-  [(set_attr \"length\" \"4\")])\n-\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"fp_mode\" \"double\")])\n+   \n (define_expand \"cmpdf\"\n   [(set (reg:SI 18) (compare (match_operand:DF 0 \"arith_operand\" \"\")\n \t\t\t     (match_operand:DF 1 \"arith_operand\" \"\")))]\n@@ -4293,7 +4341,8 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fneg\t%0\"\n-  [(set_attr \"type\" \"fmove\")])\n+  [(set_attr \"type\" \"fmove\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"sqrtdf2\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n@@ -4307,7 +4356,8 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fsqrt\t%0\"\n-  [(set_attr \"type\" \"dfdiv\")])\n+  [(set_attr \"type\" \"dfdiv\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"absdf2\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n@@ -4321,7 +4371,8 @@\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fabs\t%0\"\n-  [(set_attr \"type\" \"fmove\")])\n+  [(set_attr \"type\" \"fmove\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"extendsfdf2\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n@@ -4341,7 +4392,8 @@\n    (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcnvsd  fpul,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"truncdfsf2\"\n   [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n@@ -4361,7 +4413,8 @@\n    (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcnvds  %0,fpul\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"fp_mode\" \"double\")])\n \f\n ;; Bit field extract patterns.  These give better code for packed bitfields,\n ;; because they allow auto-increment addresses to be generated."}]}