{"sha": "e0daa2c86b74364a8ae13fc8e3f4a06c48139719", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBkYWEyYzg2Yjc0MzY0YThhZTEzZmM4ZTNmNGEwNmM0ODEzOTcxOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-12-03T08:20:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-03T08:20:18Z"}, "message": "re PR c++/92705 (ICE: Segmentation fault (in build_new_op_1))\n\n\tPR c++/92705\n\t* call.c (strip_standard_conversion): New function.\n\t(build_new_op_1): Use it for user_conv_p.\n\t(compare_ics): Likewise.\n\t(source_type): Likewise.\n\n\t* g++.dg/conversion/ambig4.C: New test.\n\nFrom-SVN: r278922", "tree": {"sha": "506b6dc9336252d86b95701bfda9102c64cc9c6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/506b6dc9336252d86b95701bfda9102c64cc9c6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0daa2c86b74364a8ae13fc8e3f4a06c48139719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0daa2c86b74364a8ae13fc8e3f4a06c48139719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0daa2c86b74364a8ae13fc8e3f4a06c48139719", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0daa2c86b74364a8ae13fc8e3f4a06c48139719/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2"}], "stats": {"total": 73, "additions": 48, "deletions": 25}, "files": [{"sha": "2513beed95326db077b121412d309250ad272e3e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0daa2c86b74364a8ae13fc8e3f4a06c48139719/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0daa2c86b74364a8ae13fc8e3f4a06c48139719/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e0daa2c86b74364a8ae13fc8e3f4a06c48139719", "patch": "@@ -1,3 +1,12 @@\n+2019-12-03  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/92705\n+\t* call.c (strip_standard_conversion): New function.\n+\t(build_new_op_1): Use it for user_conv_p.\n+\t(compare_ics): Likewise.\n+\t(source_type): Likewise.\n+\n 2019-12-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/92695"}, {"sha": "062cff4c7351d009c1a8e8a27cdb84c6dadd0f09", "filename": "gcc/cp/call.c", "status": "modified", "additions": 22, "deletions": 25, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0daa2c86b74364a8ae13fc8e3f4a06c48139719/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0daa2c86b74364a8ae13fc8e3f4a06c48139719/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=e0daa2c86b74364a8ae13fc8e3f4a06c48139719", "patch": "@@ -865,6 +865,22 @@ next_conversion (conversion *conv)\n   return conv->u.next;\n }\n \n+/* Strip to the first ck_user, ck_ambig, ck_list, ck_aggr or ck_identity\n+   encountered.  */\n+\n+static conversion *\n+strip_standard_conversion (conversion *conv)\n+{\n+  while (conv\n+\t && conv->kind != ck_user\n+\t && conv->kind != ck_ambig\n+\t && conv->kind != ck_list\n+\t && conv->kind != ck_aggr\n+\t && conv->kind != ck_identity)\n+    conv = next_conversion (conv);\n+  return conv;\n+}\n+\n /* Subroutine of build_aggr_conv: check whether CTOR, a braced-init-list,\n    is a valid aggregate initializer for array type ATYPE.  */\n \n@@ -6370,8 +6386,7 @@ build_new_op_1 (const op_location_t &loc, enum tree_code code, int flags,\n \t  conv = cand->convs[0];\n \t  if (conv->user_conv_p)\n \t    {\n-\t      while (conv->kind != ck_user)\n-\t\tconv = next_conversion (conv);\n+\t      conv = strip_standard_conversion (conv);\n \t      arg1 = convert_like (conv, arg1, complain);\n \t    }\n \n@@ -6380,8 +6395,7 @@ build_new_op_1 (const op_location_t &loc, enum tree_code code, int flags,\n \t      conv = cand->convs[1];\n \t      if (conv->user_conv_p)\n \t\t{\n-\t\t  while (conv->kind != ck_user)\n-\t\t    conv = next_conversion (conv);\n+\t\t  conv = strip_standard_conversion (conv);\n \t\t  arg2 = convert_like (conv, arg2, complain);\n \t\t}\n \t    }\n@@ -6391,8 +6405,7 @@ build_new_op_1 (const op_location_t &loc, enum tree_code code, int flags,\n \t      conv = cand->convs[2];\n \t      if (conv->user_conv_p)\n \t\t{\n-\t\t  while (conv->kind != ck_user)\n-\t\t    conv = next_conversion (conv);\n+\t\t  conv = strip_standard_conversion (conv);\n \t\t  arg3 = convert_like (conv, arg3, complain);\n \t\t}\n \t    }\n@@ -10538,17 +10551,8 @@ compare_ics (conversion *ics1, conversion *ics2)\n   if (ics1->user_conv_p || ics1->kind == ck_list\n       || ics1->kind == ck_aggr || ics2->kind == ck_aggr)\n     {\n-      conversion *t1;\n-      conversion *t2;\n-\n-      for (t1 = ics1; t1 && t1->kind != ck_user; t1 = next_conversion (t1))\n-\tif (t1->kind == ck_ambig || t1->kind == ck_aggr\n-\t    || t1->kind == ck_list)\n-\t  break;\n-      for (t2 = ics2; t2 && t2->kind != ck_user; t2 = next_conversion (t2))\n-\tif (t2->kind == ck_ambig || t2->kind == ck_aggr\n-\t    || t2->kind == ck_list)\n-\t  break;\n+      conversion *t1 = strip_standard_conversion (ics1);\n+      conversion *t2 = strip_standard_conversion (ics2);\n \n       if (!t1 || !t2 || t1->kind != t2->kind)\n \treturn 0;\n@@ -10956,14 +10960,7 @@ compare_ics (conversion *ics1, conversion *ics2)\n static tree\n source_type (conversion *t)\n {\n-  for (;; t = next_conversion (t))\n-    {\n-      if (t->kind == ck_user\n-\t  || t->kind == ck_ambig\n-\t  || t->kind == ck_identity)\n-\treturn t->type;\n-    }\n-  gcc_unreachable ();\n+  return strip_standard_conversion (t)->type;\n }\n \n /* Note a warning about preferring WINNER to LOSER.  We do this by storing"}, {"sha": "307e2512590bd502c8d6531b016e0fe0e01eb31f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0daa2c86b74364a8ae13fc8e3f4a06c48139719/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0daa2c86b74364a8ae13fc8e3f4a06c48139719/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e0daa2c86b74364a8ae13fc8e3f4a06c48139719", "patch": "@@ -1,5 +1,8 @@\n 2019-12-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/92705\n+\t* g++.dg/conversion/ambig4.C: New test.\n+\n \tPR c++/92695\n \t* g++.dg/cpp2a/constexpr-virtual14.C: New test.\n "}, {"sha": "8a77181fb631e7a397e9c47005f6d6f0416cee26", "filename": "gcc/testsuite/g++.dg/conversion/ambig4.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0daa2c86b74364a8ae13fc8e3f4a06c48139719/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0daa2c86b74364a8ae13fc8e3f4a06c48139719/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig4.C?ref=e0daa2c86b74364a8ae13fc8e3f4a06c48139719", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/92705\n+// { dg-do compile }\n+\n+struct A {};\n+struct B {};\n+struct C { operator B * (); };\t// { dg-message \"candidate\" }\n+struct D { operator B * (); };\t// { dg-message \"candidate\" }\n+struct E : C, D { operator A * (); };\n+\n+void\n+foo (E e, int B::* pmf)\n+{\n+  int i = e->*pmf;\t// { dg-error \"is ambiguous\" }\n+}"}]}