{"sha": "288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg4ZmU1MmVkMWRiMDUxMGQxNmEzMWEwYjRjYmM4YWUwZDRlMjg4Zg==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2017-07-25T14:36:03Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2017-07-25T14:36:03Z"}, "message": "match.pd: combine successive multiplications by constants\n\n\t* match.pd ((X * CST1) * CST2): Simplify to X * (CST1 * CST2).\ntestsuite:\n\t* gcc.dg/tree-ssa/assoc-2.c: Enhance.\n\t* gcc.dg/tree-ssa/slsr-4.c: Adjust.\n\nFrom-SVN: r250524", "tree": {"sha": "36141591cb946978aedacd0393ff806bc80177f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36141591cb946978aedacd0393ff806bc80177f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b771c60914096866b6e8c2fa9b953b471e22708c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b771c60914096866b6e8c2fa9b953b471e22708c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b771c60914096866b6e8c2fa9b953b471e22708c"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "34bbe013441fcfa8b0dcc47fcf510cf304866e00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f", "patch": "@@ -1,3 +1,7 @@\n+2017-07-25  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* match.pd ((X * CST1) * CST2): Simplify to X * (CST1 * CST2).\n+\n 2017-07-25  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* match.pd ((X * CST) * Y): Reassociate to (X * Y) * CST."}, {"sha": "732b80c04bf732a1418beef1dc55f19c9208f7ad", "filename": "gcc/match.pd", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f", "patch": "@@ -284,6 +284,19 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t || mul != wi::min_value (TYPE_PRECISION (type), SIGNED))\n      { build_zero_cst (type); })))))\n \n+/* Combine successive multiplications.  Similar to above, but handling\n+   overflow is different.  */\n+(simplify\n+ (mult (mult @0 INTEGER_CST@1) INTEGER_CST@2)\n+ (with {\n+   bool overflow_p;\n+   wide_int mul = wi::mul (@1, @2, TYPE_SIGN (type), &overflow_p);\n+  }\n+  /* Skip folding on overflow: the only special case is @1 * @2 == -INT_MIN,\n+     otherwise undefined overflow implies that @0 must be zero.  */\n+  (if (!overflow_p || TYPE_OVERFLOW_WRAPS (type))\n+   (mult @0 { wide_int_to_tree (type, mul); }))))\n+\n /* Optimize A / A to 1.0 if we don't care about\n    NaNs or Infinities.  */\n (simplify"}, {"sha": "6c25221694fdfb8b63febdaa43889a94afce41cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f", "patch": "@@ -1,3 +1,8 @@\n+2017-07-25  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* gcc.dg/tree-ssa/assoc-2.c: Enhance.\n+\t* gcc.dg/tree-ssa/slsr-4.c: Adjust.\n+\n 2017-07-25  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* gcc.dg/tree-ssa/assoc-2.c: New testcase."}, {"sha": "cc0e9d429b4ef028b9a7bf3c3ff0b3599e1d5bfc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/assoc-2.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fassoc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fassoc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fassoc-2.c?ref=288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f", "patch": "@@ -5,4 +5,15 @@ int f0(int a, int b){\n   return a * 33 * b * 55;\n }\n \n-/* { dg-final { scan-tree-dump-times \"mult_expr\" 2 \"gimple\" } } */\n+int f1(int a){\n+  a *= 33;\n+  return a * 55;\n+}\n+\n+int f2(int a, int b){\n+  a *= 33;\n+  return a * b * 55;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"mult_expr\" 7 \"gimple\" } } */\n+/* { dg-final { scan-tree-dump-times \"mult_expr\" 5 \"optimized\" } } */"}, {"sha": "1e943b737b91e8dd17498a6dee5ea6b8011d72cc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/slsr-4.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fslsr-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fslsr-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fslsr-4.c?ref=288fe52ed1db0510d16a31a0b4cbc8ae0d4e288f", "patch": "@@ -23,13 +23,9 @@ f (int i)\n   foo (y);\n }\n \n-/* { dg-final { scan-tree-dump-times \"\\\\* 4\" 1 \"slsr\" } } */\n-/* { dg-final { scan-tree-dump-times \"\\\\* 10\" 1 \"slsr\" } } */\n-/* { dg-final { scan-tree-dump-times \"\\\\+ 20;\" 1 \"slsr\" } } */\n+/* { dg-final { scan-tree-dump-times \"\\\\* 40\" 1 \"slsr\" } } */\n /* { dg-final { scan-tree-dump-times \"\\\\+ 200\" 1 \"slsr\" } } */\n-/* { dg-final { scan-tree-dump-times \"\\\\- 16;\" 1 \"slsr\" } } */\n /* { dg-final { scan-tree-dump-times \"\\\\- 160\" 1 \"slsr\" } } */\n-/* { dg-final { scan-tree-dump-times \"\\\\* 4\" 1 \"optimized\" } } */\n-/* { dg-final { scan-tree-dump-times \"\\\\* 10\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"\\\\* 40\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"\\\\+ 200\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"\\\\+ 40\" 1 \"optimized\" } } */"}]}