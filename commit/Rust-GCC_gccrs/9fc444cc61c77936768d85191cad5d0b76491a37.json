{"sha": "9fc444cc61c77936768d85191cad5d0b76491a37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZjNDQ0Y2M2MWM3NzkzNjc2OGQ4NTE5MWNhZDVkMGI3NjQ5MWEzNw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-03-04T22:43:03Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-03-04T22:43:03Z"}, "message": "Index: cp/ChangeLog\n2004-03-04  Geoffrey Keating  <geoffk@apple.com>\n\n\t* decl.c (grokfndecl): Update old incorrect comment.\n\t(grokvardecl): Diagnose C++ variables of type with no linkage.\n\nIndex: testsuite/ChangeLog\n2004-03-04  Geoffrey Keating  <geoffk@apple.com>\n\n\t* g++.old-deja/g++.other/linkage1.C: Expect errors about\n\tglobal variables of a type with no linkage.\n\t* g++.old-deja/g++.other/qual1.C: Name class for 'action'.\n\t* g++.old-deja/g++.mike/misc13.C: Name enum for 'want'.\n\t* g++.old-deja/g++.bugs/900210_01.C: Name enum for 'ep'.\n\t* g++.old-deja/g++.bugs/900210_02.C: Likewise.\n\t* g++.old-deja/g++.bugs/900210_03.C: Likewise.\n\t* g++.old-deja/g++.brendan/bit-fields2.C: Name structure for 's'.\n\t* g++.old-deja/g++.brendan/init10.C: Name structure for 'a'.\n\t* g++.dg/warn/deprecated.C: Name enum Color.\n\t* g++.dg/overload/VLA.C: Name structure for 'b'.\n\t* g++.dg/lookup/anon2.C: Expect diagnostic about type linkage.\n\nFrom-SVN: r78939", "tree": {"sha": "46e4272f26ce005d05d843aefc4a8e4744b75a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46e4272f26ce005d05d843aefc4a8e4744b75a01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fc444cc61c77936768d85191cad5d0b76491a37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc444cc61c77936768d85191cad5d0b76491a37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc444cc61c77936768d85191cad5d0b76491a37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc444cc61c77936768d85191cad5d0b76491a37/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8653fed73c04b5347a2c6d672010a61787147b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8653fed73c04b5347a2c6d672010a61787147b5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8653fed73c04b5347a2c6d672010a61787147b5e"}], "stats": {"total": 77, "additions": 54, "deletions": 23}, "files": [{"sha": "ff86869629e450a06a1033a9923045670ae73f9c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -1,3 +1,8 @@\n+2004-03-04  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* decl.c (grokfndecl): Update old incorrect comment.\n+\t(grokvardecl): Diagnose C++ variables of type with no linkage.\n+\n 2004-03-01  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/14369"}, {"sha": "1c0ed25974a04b79c6b873a3b30678ace0110ed5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -5544,8 +5544,7 @@ grokfndecl (tree ctype,\n     }\n \n   /* Members of anonymous types and local classes have no linkage; make\n-     them internal.  */\n-  /* FIXME what if it gets a name from typedef?  */\n+     them internal.  If a typedef is made later, this will be changed.  */\n   if (ctype && (TYPE_ANONYMOUS_P (ctype)\n \t\t|| decl_function_context (TYPE_MAIN_DECL (ctype))))\n     publicp = 0;\n@@ -5880,7 +5879,19 @@ grokvardecl (tree type,\n       if (t)\n \t{\n \t  if (TYPE_ANONYMOUS_P (t))\n-\t    /* Ignore for now; `enum { foo } e' is pretty common.  */;\n+\t    {\n+\t      if (DECL_EXTERN_C_P (decl))\n+\t\t/* Allow this; it's pretty common in C.  */;\n+\t      else\n+\t\t{\n+\t\t  pedwarn (\"non-local variable `%#D' uses anonymous type\",\n+\t\t\t   decl);\n+\t\t  if (DECL_ORIGINAL_TYPE (TYPE_NAME (t)))\n+\t\t    cp_pedwarn_at (\"\\\n+`%#D' does not refer to the unqualified type, so it is not used for linkage\",\n+\t\t\t\t   TYPE_NAME (t));\n+\t\t}\n+\t    }\n \t  else\n \t    pedwarn (\"non-local variable `%#D' uses local type `%T'\",\n \t\t\tdecl, t);"}, {"sha": "1b730c64f0df27d9e1ca53eae9c063cf3d598fc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -1,3 +1,18 @@\n+2004-03-04  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* g++.old-deja/g++.other/linkage1.C: Expect errors about\n+\tglobal variables of a type with no linkage.\n+\t* g++.old-deja/g++.other/qual1.C: Name class for 'action'.\n+\t* g++.old-deja/g++.mike/misc13.C: Name enum for 'want'.\n+\t* g++.old-deja/g++.bugs/900210_01.C: Name enum for 'ep'.\n+\t* g++.old-deja/g++.bugs/900210_02.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900210_03.C: Likewise.\n+\t* g++.old-deja/g++.brendan/bit-fields2.C: Name structure for 's'.\n+\t* g++.old-deja/g++.brendan/init10.C: Name structure for 'a'.\n+\t* g++.dg/warn/deprecated.C: Name enum Color.\n+\t* g++.dg/overload/VLA.C: Name structure for 'b'.\n+\t* g++.dg/lookup/anon2.C: Expect diagnostic about type linkage.\n+\n 2004-03-04  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.c-torture/compile/20040304-1.c: New test."}, {"sha": "4cd64aecb4958e00f143b818f78c57cf062762a9", "filename": "gcc/testsuite/g++.dg/lookup/anon2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fanon2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fanon2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fanon2.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n // { dg-options \"\" }\n \n-class { int i; } a; // { dg-error \"private\" }\n+class { int i; } a; // { dg-error \"private|anonymous type\" }\n void foo() { a.i; } // { dg-error \"context\" }\n "}, {"sha": "0c748f50c7d9e06d9a1a3d855d8ff5b91a0a06f6", "filename": "gcc/testsuite/g++.dg/overload/VLA.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2FVLA.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2FVLA.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2FVLA.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -6,7 +6,7 @@\n \n // { dg-do compile }\n \n-struct {\n+struct S {\n   int (*p)[];\n } B;\n "}, {"sha": "aa7a5b09db986d0bb802018a677fb76f83918809", "filename": "gcc/testsuite/g++.dg/warn/deprecated.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -20,7 +20,7 @@ INT2 f4(void) { return 0; }\t\t/* { dg-warning \"`INT2' is deprecated\" \"\" } */\n int f5(INT2 x);\t\t\t\t/* { dg-warning \"`INT2' is deprecated\" \"\" } */\n int f6(INT2 x) __attribute__ ((__deprecated__));\n \n-typedef enum {red, green, blue} Color __attribute__((deprecated));\n+typedef enum Color {red, green, blue} Color __attribute__((deprecated));\n \n int g1;\n int g2 __attribute__ ((deprecated));"}, {"sha": "394d035017af774cf5dc6c936a09e951b9fc6a5b", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/bit-fields2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fbit-fields2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fbit-fields2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fbit-fields2.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n // GROUPS passed bit-fields\n-\tstruct {\n+\tstruct S {\n \t    char c;\n \t    int i:8;\n \t} s;"}, {"sha": "0080420bdcdfba826fef8ca0514e86a0d2430fa1", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/init10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Finit10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Finit10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Finit10.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -1,3 +1,3 @@\n // { dg-do assemble  }\n // GROUPS passed initialization\n-struct { int :0; } a;\n+struct S { int :0; } a;"}, {"sha": "5bbac2cba1db60d648ebc995412368fbf17d9ae6", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900210_01.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900210_01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900210_01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900210_01.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -15,7 +15,7 @@ char c;\n float f;\n double d;\n long double ld;\n-enum {enum_value_0} e;\n+enum E {enum_value_0} e;\n \n signed int si;\n signed long sl;\n@@ -30,8 +30,8 @@ unsigned char uc;\n void* vp;\n char* cp;\n int* ip;\n-enum {enum_value_1} * ep;\n-struct { int member; } * sp;\n+enum E2 {enum_value_1} * ep;\n+struct S { int member; } * sp;\n void (*fp) (void);\n \n void global_function ()"}, {"sha": "b2d38cdbef3255732bbe6fcf103fd5d12625d54c", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900210_02.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900210_02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900210_02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900210_02.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -16,7 +16,7 @@ char c;\n float f;\n double d;\n long double ld;\n-enum {enum_value_0} e;\n+enum E {enum_value_0} e;\n \n signed int si;\n signed long sl;\n@@ -31,8 +31,8 @@ unsigned char uc;\n void* vp;\n char* cp;\n int* ip;\n-enum {enum_value_1} * ep;\n-struct { int member; } * sp;\n+enum E2 {enum_value_1} * ep;\n+struct S { int member; } * sp;\n void (*fp) (void);\n \n void global_function ()"}, {"sha": "5f90542759d59992f0865135aa4f96d50396d4f9", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900210_03.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900210_03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900210_03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900210_03.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -11,8 +11,8 @@\n void* vp;\n char* cp;\n int* ip;\n-enum {enum_value_1} * ep;\n-struct { int member; } * sp;\n+enum E {enum_value_1} * ep;\n+struct S { int member; } * sp;\n void (*fp) (void);\n \n void global_function ()"}, {"sha": "f85a4f408f6788dcc767c74cd9e6e09616061869", "filename": "gcc/testsuite/g++.old-deja/g++.mike/misc13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fmisc13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fmisc13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fmisc13.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -1,7 +1,7 @@\n // { dg-do run  }\n // GROUPS passed vtable\n extern \"C\" int printf (const char *, ...);\n-enum { vf_request, vf_event } want;\n+enum E { vf_request, vf_event } want;\n \n int errs = 0;\n "}, {"sha": "5e8ee1b43640aa221cc00982d36dc41ae60f7c9d", "filename": "gcc/testsuite/g++.old-deja/g++.other/linkage1.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flinkage1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flinkage1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flinkage1.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -3,13 +3,13 @@ typedef struct {\n   int i;\n } *p;\n \n-void f (p) { }\t\t\t// { dg-error \"\" } function uses anonymous type\n-p q;\n+void f (p) { }\t\t\t// { dg-error \"uses anonymous type\" }\n+p q;\t\t\t\t// { dg-error \"uses anonymous type\" } \n \n int main()\n {\n-  extern p j;\n+  extern p j;\t\t\t// { dg-error \"uses anonymous type\" }\n   struct A { int j; };\n-  extern A a;\t\t\t// { dg-error \"\" } extern uses local type\n-  extern void f (A);\t\t// { dg-error \"\" } extern uses local type\n+  extern A a;\t\t\t// { dg-error \"uses local type\" }\n+  extern void f (A);\t\t// { dg-error \"uses local type\" }\n }"}, {"sha": "8040ee29695cc799a8ed824aa77bd75d71051a9e", "filename": "gcc/testsuite/g++.old-deja/g++.other/qual1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fqual1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc444cc61c77936768d85191cad5d0b76491a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fqual1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fqual1.C?ref=9fc444cc61c77936768d85191cad5d0b76491a37", "patch": "@@ -6,7 +6,7 @@\n \n typedef const char *(func_type)();\n \n-class\n+class C\n {\n public:\n   func_type *Function;"}]}