{"sha": "b399afd22c6ea50722bbff3247d52f3bd14bf2b6", "node_id": "C_kwDOANBUbNoAKGIzOTlhZmQyMmM2ZWE1MDcyMmJiZmYzMjQ3ZDUyZjNiZDE0YmYyYjY", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2023-01-10T03:34:01Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2023-01-11T05:53:57Z"}, "message": "xtensa: Make instruction cost estimation for size more accurate\n\nUntil now, we applied COSTS_N_INSNS() (multiplying by 4) after dividing\nthe instruction length by 3, so we couldn't express the difference less\nthan modulo 3 in insn cost for size (e.g. 11 Bytes and 12 bytes cost the\nsame).\n\nThis patch fixes that.\n\n;; 2 bytes\naddi.n\ta2, a2, -1\t; cost 3\n\n;; 3 bytes\naddmi\ta2, a2, 1024\t; cost 4\n\n;; 4 bytes\nmovi.n\ta3, 80\t\t; cost 5\nbnez.n\ta2, a3, .L4\n\n;; 5 bytes\nsrli\ta2, a3, 1\t; cost 7\nadd.n\ta2, a2, a2\n\n;; 6 bytes\nssai\t8\t\t; cost 8\nsrc\ta4, a2, a3\n\n:: 3 + 4 bytes\nl32r\ta2, .L5\t\t; cost 9\n\n;; 11 bytes\t\t; cost 15\n;; 12 bytes\t\t; cost 16\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.cc (xtensa_insn_cost):\n\tLet insn cost for size be obtained by applying COSTS_N_INSNS()\n\tto instruction length and then dividing by 3.", "tree": {"sha": "7270bf778ed5b1c46d3891a49b370d2dd27c111c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7270bf778ed5b1c46d3891a49b370d2dd27c111c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b399afd22c6ea50722bbff3247d52f3bd14bf2b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b399afd22c6ea50722bbff3247d52f3bd14bf2b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b399afd22c6ea50722bbff3247d52f3bd14bf2b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b399afd22c6ea50722bbff3247d52f3bd14bf2b6/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f432ad092122c36fd8dfc7738ec6814bc2bc4e63"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "6cf6b35399aea4ef792b5bb1cdec5fbcc604aab2", "filename": "gcc/config/xtensa/xtensa.cc", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b399afd22c6ea50722bbff3247d52f3bd14bf2b6/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b399afd22c6ea50722bbff3247d52f3bd14bf2b6/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc?ref=b399afd22c6ea50722bbff3247d52f3bd14bf2b6", "patch": "@@ -4519,13 +4519,15 @@ xtensa_insn_cost (rtx_insn *insn, bool speed)\n {\n   if (!(recog_memoized (insn) < 0))\n     {\n-      int len = get_attr_length (insn), n = (len + 2) / 3;\n+      int len = get_attr_length (insn);\n \n       if (len == 0)\n \treturn COSTS_N_INSNS (0);\n \n       if (speed)  /* For speed cost.  */\n \t{\n+\t  int n = (len + 2) / 3;\n+\n \t  /* \"L32R\" may be particular slow (implementation-dependent).  */\n \t  if (xtensa_is_insn_L32R_p (insn))\n \t    return COSTS_N_INSNS (1 + xtensa_extra_l32r_costs);\n@@ -4572,10 +4574,11 @@ xtensa_insn_cost (rtx_insn *insn, bool speed)\n \t    {\n \t      /* \"L32R\" itself plus constant in litpool.  */\n \t      if (xtensa_is_insn_L32R_p (insn))\n-\t\treturn COSTS_N_INSNS (2) + 1;\n+\t\tlen = 3 + 4;\n \n-\t      /* Consider \".n\" short instructions.  */\n-\t      return COSTS_N_INSNS (n) - (n * 3 - len);\n+\t      /* Consider fractional instruction length (for example, \".n\"\n+\t\t short instructions or \"L32R\" litpool constants.  */\n+\t      return (COSTS_N_INSNS (len) + 1) / 3;\n \t    }\n \t}\n     }"}]}