{"sha": "59c1f3840203780d04974b37b617ac0d673e8c4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTljMWYzODQwMjAzNzgwZDA0OTc0YjM3YjYxN2FjMGQ2NzNlOGM0YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-04-30T18:01:07Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-04-30T18:01:07Z"}, "message": "re PR tree-optimization/63551 (wrong code (segfaults) at -Os on x86_64-linux-gnu)\n\n\tPR tree-optimization/63551\n    \t* g++.dg/ipa/pr63551.C: New test.\n\nFrom-SVN: r222650", "tree": {"sha": "762a07445d8d3548df7ea100be93a9cc3394164f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/762a07445d8d3548df7ea100be93a9cc3394164f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59c1f3840203780d04974b37b617ac0d673e8c4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c1f3840203780d04974b37b617ac0d673e8c4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59c1f3840203780d04974b37b617ac0d673e8c4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c1f3840203780d04974b37b617ac0d673e8c4a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be4e69a962c271bcf9993da7487091d17dab78fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be4e69a962c271bcf9993da7487091d17dab78fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be4e69a962c271bcf9993da7487091d17dab78fa"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "aa0123502c798d8b59e0c688b4161bc2807cd232", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c1f3840203780d04974b37b617ac0d673e8c4a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c1f3840203780d04974b37b617ac0d673e8c4a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=59c1f3840203780d04974b37b617ac0d673e8c4a", "patch": "@@ -1,3 +1,8 @@\n+2015-04-30  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/63551\n+\t* g++.dg/ipa/pr63551.C: New test.\n+\n 2015-04-30  Caroline Tice  <cmtice@google.com>\n \n \tPR  65929"}, {"sha": "03e03397969755b32e02ee3830610e6e895a6a86", "filename": "gcc/testsuite/g++.dg/ipa/pr63551.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c1f3840203780d04974b37b617ac0d673e8c4a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr63551.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c1f3840203780d04974b37b617ac0d673e8c4a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr63551.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr63551.C?ref=59c1f3840203780d04974b37b617ac0d673e8c4a", "patch": "@@ -0,0 +1,23 @@\n+// { dg-options \"-O -Wno-psabi\" }\n+// { dg-do compile }\n+\n+struct A { int a; };\n+template <typename T, typename V> struct B { V operator[] (T); };\n+union U { long double ld; void *v; };\n+A a;\n+\n+void\n+bar (U &x)\n+{\n+  if (x.v) *reinterpret_cast <A *>(x.v) = a;\n+}\n+\n+struct C { C (A) { c.ld = 0; bar (c); } U c; };\n+struct D { A d, e; void foo () { f[0][d] = e; } B <int, B <A, C> > f; };\n+\n+void\n+baz ()\n+{\n+  D d;\n+  d.foo ();\n+}"}]}