{"sha": "c15d8db66e258325027e8990fc04168aa9b31c97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE1ZDhkYjY2ZTI1ODMyNTAyN2U4OTkwZmMwNDE2OGFhOWIzMWM5Nw==", "commit": {"author": {"name": "John Hassey", "email": "hassey@gnu.org", "date": "1993-02-17T15:00:52Z"}, "committer": {"name": "John Hassey", "email": "hassey@gnu.org", "date": "1993-02-17T15:00:52Z"}, "message": "(CONST_OK_FOR_LETTER_P): Added 'K'.\n\nFrom-SVN: r3479", "tree": {"sha": "043adb50c9bbcf5ddb9f9fe0c7f10fbaf52bae27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/043adb50c9bbcf5ddb9f9fe0c7f10fbaf52bae27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c15d8db66e258325027e8990fc04168aa9b31c97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15d8db66e258325027e8990fc04168aa9b31c97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c15d8db66e258325027e8990fc04168aa9b31c97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15d8db66e258325027e8990fc04168aa9b31c97/comments", "author": null, "committer": null, "parents": [{"sha": "b39555b4d7c9b2b95facaf17e61cbd324b3e3f01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b39555b4d7c9b2b95facaf17e61cbd324b3e3f01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b39555b4d7c9b2b95facaf17e61cbd324b3e3f01"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "4da23ffdf8b1fb0bb6c0f2d3a9c7fc33087094e2", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15d8db66e258325027e8990fc04168aa9b31c97/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15d8db66e258325027e8990fc04168aa9b31c97/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=c15d8db66e258325027e8990fc04168aa9b31c97", "patch": "@@ -864,7 +864,7 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n    For the m88000, the following constants are used:\n    `I' requires a non-negative 16-bit value.\n    `J' requires a non-positive 16-bit value.\n-   `K' is unused.\n+   `K' requires a non-negative value < 32.\n    `L' requires a constant with only the upper 16-bits set.\n    `M' requires constant values that can be formed with `set'.\n    `N' requires a negative value.\n@@ -882,6 +882,7 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n #define CONST_OK_FOR_LETTER_P(VALUE, C)\t\t\t\\\n   ((C) == 'I' ? SMALL_INTVAL (VALUE)\t\t\t\\\n    : (C) == 'J' ? SMALL_INTVAL (-(VALUE))\t\t\\\n+   : (C) == 'K' ? (unsigned)(VALUE) < 32\t\t\\\n    : (C) == 'L' ? ((VALUE) & 0xffff) == 0\t\t\\\n    : (C) == 'M' ? integer_ok_for_set (VALUE)\t\t\\\n    : (C) == 'N' ? (VALUE) < 0\t\t\t\t\\"}]}