{"sha": "8ec82f87f37e49d9b5c95f680428613d3a709b39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVjODJmODdmMzdlNDlkOWI1Yzk1ZjY4MDQyODYxM2QzYTcwOWIzOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-08-16T00:55:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-16T00:55:58Z"}, "message": "reload.c (find_equiv_reg): Reject equivalences separated by a volatile instruction.\n\n8\n        * reload.c (find_equiv_reg): Reject equivalences separated\n        by a volatile instruction.\n\nFrom-SVN: r21763", "tree": {"sha": "008d2e6d0e639a57c9ead6955d7169479dc5945c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/008d2e6d0e639a57c9ead6955d7169479dc5945c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ec82f87f37e49d9b5c95f680428613d3a709b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec82f87f37e49d9b5c95f680428613d3a709b39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ec82f87f37e49d9b5c95f680428613d3a709b39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec82f87f37e49d9b5c95f680428613d3a709b39/comments", "author": null, "committer": null, "parents": [{"sha": "2753f812d469da384868027ea56249a8d998192e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2753f812d469da384868027ea56249a8d998192e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2753f812d469da384868027ea56249a8d998192e"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "b1483d19440a4f0d75dfd53ce40f9a6ea6eb468f", "filename": "gcc/reload.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ec82f87f37e49d9b5c95f680428613d3a709b39/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ec82f87f37e49d9b5c95f680428613d3a709b39/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=8ec82f87f37e49d9b5c95f680428613d3a709b39", "patch": "@@ -6198,12 +6198,17 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n \n       if (GET_RTX_CLASS (GET_CODE (p)) == 'i')\n \t{\n+\t  pat = PATTERN (p);\n+\n+          /* Watch out for unspec_volatile, and volatile asms.  */\n+          if (volatile_insn_p (pat))\n+\t    return 0;\n+\n \t  /* If this insn P stores in either GOAL or VALUE, return 0.\n \t     If GOAL is a memory ref and this insn writes memory, return 0.\n \t     If GOAL is a memory ref and its address is not constant,\n \t     and this insn P changes a register used in GOAL, return 0.  */\n \n-\t  pat = PATTERN (p);\n \t  if (GET_CODE (pat) == SET || GET_CODE (pat) == CLOBBER)\n \t    {\n \t      register rtx dest = SET_DEST (pat);"}]}