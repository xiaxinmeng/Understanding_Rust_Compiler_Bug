{"sha": "ccbdbf0a4a98b8331aecc39188ef930923c95822", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiZGJmMGE0YTk4YjgzMzFhZWNjMzkxODhlZjkzMDkyM2M5NTgyMg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-11-01T03:24:44Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-11-01T03:24:44Z"}, "message": "cfgloop.h (struct loop): Remove unused \"nodes\" field.\n\n\n\t* cfgloop.h (struct loop): Remove unused \"nodes\" field.\n\t* timevar.def (TV_TREE_LOOP_BOUNDS): New.\n\t* tree-data-ref.c (find_data_references_in_loop): Use get_loop_body\n\tinstead of calling flow_bb_inside_loop_p for every basic block\n\tin the function.\n\t* tree-ssa-loop.c (pass_record_bounds): Use TV_TREE_LOOP_BOUNDS.\n\nFrom-SVN: r89932", "tree": {"sha": "d9dc639eeb323bb9bfb212ca4c27abef24329cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9dc639eeb323bb9bfb212ca4c27abef24329cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccbdbf0a4a98b8331aecc39188ef930923c95822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbdbf0a4a98b8331aecc39188ef930923c95822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccbdbf0a4a98b8331aecc39188ef930923c95822", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbdbf0a4a98b8331aecc39188ef930923c95822/comments", "author": null, "committer": null, "parents": [{"sha": "db1de71358df247a01e1da358204155d23e3d08a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db1de71358df247a01e1da358204155d23e3d08a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db1de71358df247a01e1da358204155d23e3d08a"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "5c03c9e811806459086256258f71a7b321696632", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccbdbf0a4a98b8331aecc39188ef930923c95822", "patch": "@@ -1,3 +1,12 @@\n+2004-10-31 Jeff Law  <law@redhat.com>\n+\n+\t* cfgloop.h (struct loop): Remove unused \"nodes\" field.\n+\t* timevar.def (TV_TREE_LOOP_BOUNDS): New.\n+\t* tree-data-ref.c (find_data_references_in_loop): Use get_loop_body\n+\tinstead of calling flow_bb_inside_loop_p for every basic block\n+\tin the function.\n+\t* tree-ssa-loop.c (pass_record_bounds): Use TV_TREE_LOOP_BOUNDS.\n+\n 2004-10-31  Graham Stott <graham.stott@btinternet.com>\n \n \t* config/pa/pa.md: (prefetch_64, prefetch_32): Fix typo.  Use"}, {"sha": "61af71738a1c56ea0cdb9d29ff362541232d4234", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=ccbdbf0a4a98b8331aecc39188ef930923c95822", "patch": "@@ -97,9 +97,6 @@ struct loop\n      the loop latch.  */\n   basic_block last;\n \n-  /* Bitmap of blocks contained within the loop.  */\n-  sbitmap nodes;\n-\n   /* Number of blocks contained within the loop.  */\n   unsigned num_nodes;\n "}, {"sha": "06ca03e7eb6c2d952523c63e91da0b392e35fc2c", "filename": "gcc/timevar.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2Ftimevar.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2Ftimevar.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.def?ref=ccbdbf0a4a98b8331aecc39188ef930923c95822", "patch": "@@ -83,6 +83,7 @@ DEFTIMEVAR (TV_TREE_DCE\t\t     , \"tree conservative DCE\")\n DEFTIMEVAR (TV_TREE_CD_DCE\t     , \"tree aggressive DCE\")\n DEFTIMEVAR (TV_TREE_DSE\t\t     , \"tree DSE\")\n DEFTIMEVAR (TV_TREE_LOOP\t     , \"tree loop optimization\")\n+DEFTIMEVAR (TV_TREE_LOOP_BOUNDS\t     , \"tree record loop bounds\")\n DEFTIMEVAR (TV_LIM                   , \"loop invariant motion\")\n DEFTIMEVAR (TV_TREE_LOOP_IVCANON     , \"tree canonical iv creation\")\n DEFTIMEVAR (TV_TREE_LOOP_UNSWITCH    , \"tree loop unswitching\")"}, {"sha": "c34ae7fb5de6f82478b7b574cd89d6a20132177b", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=ccbdbf0a4a98b8331aecc39188ef930923c95822", "patch": "@@ -2204,14 +2204,16 @@ tree\n find_data_references_in_loop (struct loop *loop, varray_type *datarefs)\n {\n   bool dont_know_node_not_inserted = true;\n-  basic_block bb;\n+  basic_block bb, *bbs;\n+  unsigned int i;\n   block_stmt_iterator bsi;\n \n-  FOR_EACH_BB (bb)\n+  bbs = get_loop_body (loop);\n+\n+  for (i = 0; i < loop->num_nodes; i++)\n     {\n-      if (!flow_bb_inside_loop_p (loop, bb))\n-\tcontinue;\n-      \n+      bb = bbs[i];\n+\n       for (bsi = bsi_start (bb); !bsi_end_p (bsi); bsi_next (&bsi))\n         {\n \t  tree stmt = bsi_stmt (bsi);\n@@ -2264,6 +2266,8 @@ find_data_references_in_loop (struct loop *loop, varray_type *datarefs)\n \tcompute_estimated_nb_iterations (bb->loop_father);\n     }\n \n+  free (bbs);\n+\n   return dont_know_node_not_inserted ? NULL_TREE : chrec_dont_know;\n }\n "}, {"sha": "8ec9c3de3491915bef61bfdf08ccd1bc78904ac3", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbdbf0a4a98b8331aecc39188ef930923c95822/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=ccbdbf0a4a98b8331aecc39188ef930923c95822", "patch": "@@ -317,7 +317,7 @@ struct tree_opt_pass pass_record_bounds =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t  \t\t/* tv_id */\n+  TV_TREE_LOOP_BOUNDS,\t  \t\t/* tv_id */\n   PROP_cfg | PROP_ssa,\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}]}