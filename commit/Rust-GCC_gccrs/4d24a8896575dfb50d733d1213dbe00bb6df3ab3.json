{"sha": "4d24a8896575dfb50d733d1213dbe00bb6df3ab3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQyNGE4ODk2NTc1ZGZiNTBkNzMzZDEyMTNkYmUwMGJiNmRmM2FiMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-03-01T13:51:00Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-03-01T13:51:00Z"}, "message": "decl2.c (do_nonmember_using_decl): Don't complain if we find same function.\n\ncp:\n\t* decl2.c (do_nonmember_using_decl): Don't complain if we find\n\tsame function. Do complain about ambiguating extern \"C\"\n\tdeclarations.\ntestsuite:\n\t* g++.old-deja/g++.other/using9.C: New test.\n\nFrom-SVN: r40148", "tree": {"sha": "ecf8d73f71d1b29c4061ae400e32663c70aa3aef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecf8d73f71d1b29c4061ae400e32663c70aa3aef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d24a8896575dfb50d733d1213dbe00bb6df3ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d24a8896575dfb50d733d1213dbe00bb6df3ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d24a8896575dfb50d733d1213dbe00bb6df3ab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d24a8896575dfb50d733d1213dbe00bb6df3ab3/comments", "author": null, "committer": null, "parents": [{"sha": "1abdf5e7476e4390edf3556d43a5601870cd3418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1abdf5e7476e4390edf3556d43a5601870cd3418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1abdf5e7476e4390edf3556d43a5601870cd3418"}], "stats": {"total": 56, "additions": 43, "deletions": 13}, "files": [{"sha": "c5d0c9516d9c494afcd4637e1116ebf41cb02f35", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d24a8896575dfb50d733d1213dbe00bb6df3ab3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d24a8896575dfb50d733d1213dbe00bb6df3ab3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4d24a8896575dfb50d733d1213dbe00bb6df3ab3", "patch": "@@ -1,3 +1,9 @@\n+2001-03-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* decl2.c (do_nonmember_using_decl): Don't complain if we find\n+\tsame function. Do complain about ambiguating extern \"C\"\n+\tdeclarations.\n+\n 2001-02-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tRemove floating point and complex type template constant parms."}, {"sha": "d115dccdeee40322e6f4e2e91416ef971c62d65d", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d24a8896575dfb50d733d1213dbe00bb6df3ab3/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d24a8896575dfb50d733d1213dbe00bb6df3ab3/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=4d24a8896575dfb50d733d1213dbe00bb6df3ab3", "patch": "@@ -5126,22 +5126,21 @@ do_nonmember_using_decl (scope, name, oldval, oldtype, newval, newtype)\n \t    {\n \t      tree old_fn = OVL_CURRENT (tmp1);\n \n-\t      if (!OVL_USED (tmp1)\n-\t\t  && compparms (TYPE_ARG_TYPES (TREE_TYPE (new_fn)),\n-\t\t\t\tTYPE_ARG_TYPES (TREE_TYPE (old_fn))))\n+              if (new_fn == old_fn)\n+                /* The function already exists in the current namespace.  */\n+                break;\n+\t      else if (OVL_USED (tmp1))\n+\t        continue; /* this is a using decl */\n+\t      else if (compparms (TYPE_ARG_TYPES (TREE_TYPE (new_fn)),\n+\t\t  \t\t  TYPE_ARG_TYPES (TREE_TYPE (old_fn))))\n \t\t{\n-\t\t  if (!(DECL_EXTERN_C_P (new_fn)\n-\t\t\t&& DECL_EXTERN_C_P (old_fn)))\n-\t\t    /* There was already a non-using declaration in\n-\t\t       this scope with the same parameter types.  */\n-\t\t    cp_error (\"`%D' is already declared in this scope\",\n-\t\t\t      name);\n+\t          /* There was already a non-using declaration in\n+\t\t     this scope with the same parameter types. If both\n+\t             are the same extern \"C\" functions, that's ok.  */\n+                  if (!decls_match (new_fn, old_fn))\n+    \t            cp_error (\"`%D' is already declared in this scope\", name);\n \t\t  break;\n \t\t}\n-\t      else if (duplicate_decls (new_fn, old_fn))\n-\t\t/* We're re-using something we already used \n-\t\t   before.  We don't need to add it again.  */ \n-\t\tbreak;\n \t    }\n \n \t  /* If we broke out of the loop, there's no reason to add"}, {"sha": "414c253c9481f73fd8f8cb034fbf800b534be3a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d24a8896575dfb50d733d1213dbe00bb6df3ab3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d24a8896575dfb50d733d1213dbe00bb6df3ab3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d24a8896575dfb50d733d1213dbe00bb6df3ab3", "patch": "@@ -1,3 +1,7 @@\n+2001-03-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/using9.C: New test.\n+\n 2001-02-28  Ovidiu Predescu  <ovidiu@cup.hp.com>\n \n \t* objc/execute/bycopy-3.m: Added new test from Nicola Pero."}, {"sha": "acfab509bab32470d13df0b0ef3f2f37d03e9793", "filename": "gcc/testsuite/g++.old-deja/g++.other/using9.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d24a8896575dfb50d733d1213dbe00bb6df3ab3/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d24a8896575dfb50d733d1213dbe00bb6df3ab3/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing9.C?ref=4d24a8896575dfb50d733d1213dbe00bb6df3ab3", "patch": "@@ -0,0 +1,21 @@\n+// Build don't link:\n+// \n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 26 Feb 2001 <nathan@codesourcery.com>\n+\n+// Bug 75. using declarations cannot introduce functions which ambiguate\n+// those in the current namespace, BUT here we're reaccessing the current\n+// namespace -- the function is not being 'introduced'.\n+\n+extern int a();\n+struct x {};\n+\n+using ::x;\n+using ::a;\n+\n+extern \"C\" void foo ();\n+\n+namespace {\n+  extern \"C\" int foo ();\n+  using ::foo; // ERROR - already in use\n+}"}]}