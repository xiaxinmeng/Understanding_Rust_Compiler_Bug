{"sha": "6e23f2967868d307d367385411a5e61e6de2c02b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyM2YyOTY3ODY4ZDMwN2QzNjczODU0MTFhNWU2MWU2ZGUyYzAyYg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2014-01-23T20:06:28Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2014-01-23T20:06:28Z"}, "message": "re PR rtl-optimization/59915 (LRA ICE - Repeated looping over subreg reloads (gcc.c-torture/compile/simd-3.c))\n\n2014-01-23  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR regression/59915\n\t* lra-constraints.c (simplify_operand_subreg): Spill pseudo if\n\tthere is a danger of looping.\n\nFrom-SVN: r207007", "tree": {"sha": "3c4587bb80623ea093acd96ddf83fb8e6f30c554", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c4587bb80623ea093acd96ddf83fb8e6f30c554"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e23f2967868d307d367385411a5e61e6de2c02b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e23f2967868d307d367385411a5e61e6de2c02b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e23f2967868d307d367385411a5e61e6de2c02b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e23f2967868d307d367385411a5e61e6de2c02b/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f04dda3093541436d9ebd3194761ff8199c5ac79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04dda3093541436d9ebd3194761ff8199c5ac79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f04dda3093541436d9ebd3194761ff8199c5ac79"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "874352c08a83f2a35b5ebcbfcf4adfa1af3d5d64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e23f2967868d307d367385411a5e61e6de2c02b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e23f2967868d307d367385411a5e61e6de2c02b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e23f2967868d307d367385411a5e61e6de2c02b", "patch": "@@ -1,3 +1,9 @@\n+2014-01-23  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR regression/59915\n+\t* lra-constraints.c (simplify_operand_subreg): Spill pseudo if\n+\tthere is a danger of looping.\n+\n 2014-01-23  Pat Haugen  <pthaugen@us.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_option_override_internal): Don't"}, {"sha": "34159f75a10f1ef87e42f0d5f21361dd92e9ba6a", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e23f2967868d307d367385411a5e61e6de2c02b/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e23f2967868d307d367385411a5e61e6de2c02b/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=6e23f2967868d307d367385411a5e61e6de2c02b", "patch": "@@ -1291,9 +1291,20 @@ simplify_operand_subreg (int nop, enum machine_mode reg_mode)\n        && ! LRA_SUBREG_P (operand))\n       || CONSTANT_P (reg) || GET_CODE (reg) == PLUS || MEM_P (reg))\n     {\n-      /* The class will be defined later in curr_insn_transform.  */\n-      enum reg_class rclass\n-\t= (enum reg_class) targetm.preferred_reload_class (reg, ALL_REGS);\n+      enum reg_class rclass;\n+\n+      if (REG_P (reg)\n+\t  && curr_insn_set != NULL_RTX\n+\t  && (REG_P (SET_SRC (curr_insn_set))\n+\t      || GET_CODE (SET_SRC (curr_insn_set)) == SUBREG))\n+\t/* There is big probability that we will get the same class\n+\t   for the new pseudo and we will get the same insn which\n+\t   means infinite looping.  So spill the new pseudo.  */\n+\trclass = NO_REGS;\n+      else\n+\t/* The class will be defined later in curr_insn_transform.  */\n+\trclass\n+\t  = (enum reg_class) targetm.preferred_reload_class (reg, ALL_REGS);\n \n       if (get_reload_reg (curr_static_id->operand[nop].type, reg_mode, reg,\n \t\t\t  rclass, \"subreg reg\", &new_reg))"}]}