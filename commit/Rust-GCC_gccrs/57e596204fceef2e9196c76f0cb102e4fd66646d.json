{"sha": "57e596204fceef2e9196c76f0cb102e4fd66646d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdlNTk2MjA0ZmNlZWYyZTkxOTZjNzZmMGNiMTAyZTRmZDY2NjQ2ZA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-07T20:18:17Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-07T20:18:17Z"}, "message": "re PR fortran/68153 (ICE for intrinsic reshape with negative dim in effective shape)\n\n2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/68153\n\t* check.c (gfc_check_reshape): Improve check for valid SHAPE argument.\n\n2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/68153\n\t* gfortran.dg/pr68153.f90: New test.\n\nFrom-SVN: r229939", "tree": {"sha": "ba473afff940faab83ee3adf400dffb45cac490f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba473afff940faab83ee3adf400dffb45cac490f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57e596204fceef2e9196c76f0cb102e4fd66646d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e596204fceef2e9196c76f0cb102e4fd66646d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e596204fceef2e9196c76f0cb102e4fd66646d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e596204fceef2e9196c76f0cb102e4fd66646d/comments", "author": null, "committer": null, "parents": [{"sha": "727cde644d6175dcc5e22d4e1214bf3bac621efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727cde644d6175dcc5e22d4e1214bf3bac621efc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/727cde644d6175dcc5e22d4e1214bf3bac621efc"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "fc3afba3aaf1e7c43bea4233ac6a5857aeaff4a4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e596204fceef2e9196c76f0cb102e4fd66646d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e596204fceef2e9196c76f0cb102e4fd66646d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=57e596204fceef2e9196c76f0cb102e4fd66646d", "patch": "@@ -1,3 +1,8 @@\n+2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/68153\n+\t* check.c (gfc_check_reshape): Improve check for valid SHAPE argument.\n+\n 2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/68151"}, {"sha": "86dae5b000c46020b72110bad649613d672feadd", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e596204fceef2e9196c76f0cb102e4fd66646d/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e596204fceef2e9196c76f0cb102e4fd66646d/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=57e596204fceef2e9196c76f0cb102e4fd66646d", "patch": "@@ -3711,6 +3711,36 @@ gfc_check_reshape (gfc_expr *source, gfc_expr *shape,\n \t    }\n \t}\n     }\n+  else if (shape->expr_type == EXPR_VARIABLE && shape->ref\n+\t   && shape->ref->u.ar.type == AR_FULL && shape->ref->u.ar.dimen == 1\n+\t   && shape->ref->u.ar.as\n+\t   && shape->ref->u.ar.as->lower[0]->expr_type == EXPR_CONSTANT\n+\t   && shape->ref->u.ar.as->lower[0]->ts.type == BT_INTEGER\n+\t   && shape->ref->u.ar.as->upper[0]->expr_type == EXPR_CONSTANT\n+\t   && shape->ref->u.ar.as->upper[0]->ts.type == BT_INTEGER\n+\t   && shape->symtree->n.sym->attr.flavor == FL_PARAMETER)\n+    {\n+      int i, extent;\n+      gfc_expr *e, *v;\n+\n+      v = shape->symtree->n.sym->value;\n+\n+      for (i = 0; i < shape_size; i++)\n+\t{\n+\t  e = gfc_constructor_lookup_expr (v->value.constructor, i);\n+\t  if (e == NULL)\n+\t     break;\n+\n+\t  gfc_extract_int (e, &extent);\n+\n+\t  if (extent < 0)\n+\t    {\n+\t      gfc_error (\"Element %d of actual argument of RESHAPE at %L \"\n+\t\t\t \"cannot be negative\", i + 1, &shape->where);\n+\t      return false;\n+\t    }\n+\t}\n+    }\n \n   if (pad != NULL)\n     {"}, {"sha": "65e940b1b7edd0e83691e78c5b57fe619fd98ffd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e596204fceef2e9196c76f0cb102e4fd66646d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e596204fceef2e9196c76f0cb102e4fd66646d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57e596204fceef2e9196c76f0cb102e4fd66646d", "patch": "@@ -1,3 +1,8 @@\n+2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/68153\n+\t* gfortran.dg/pr68153.f90: New test.\n+\n 2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/68151"}, {"sha": "1a360f80cd62f6b75cd00fbe3289d6bbcc26807b", "filename": "gcc/testsuite/gfortran.dg/pr68153.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e596204fceef2e9196c76f0cb102e4fd66646d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68153.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e596204fceef2e9196c76f0cb102e4fd66646d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68153.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68153.f90?ref=57e596204fceef2e9196c76f0cb102e4fd66646d", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/68153\n+! Original code contribute by Gerhard Steinmetz\n+! <gerhard dot steinmetz dot fortran at t-online dot de>\n+!\n+program foo\n+   integer, parameter :: a(2) = [2, -2]\n+   integer, parameter :: b(2,2) = reshape([1, 2, 3, 4], a) ! { dg-error \"cannot be negative\" }\n+end program foo"}]}