{"sha": "70fc7c6c3dff619348c917b619bf52ac78a6ced1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBmYzdjNmMzZGZmNjE5MzQ4YzkxN2I2MTliZjUyYWM3OGE2Y2VkMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-13T17:56:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-13T17:56:38Z"}, "message": "re PR c++/55879 ([C++11] nested constexpr Initialisation raises internal compiler error)\n\n\tPR c++/55879\n\t* semantics.c (cxx_bind_parameters_in_call): Undo DECL_BY_REFERENCE.\n\nFrom-SVN: r196024", "tree": {"sha": "d79be11de6ade2402c07ed840b7ed9d02257a8c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d79be11de6ade2402c07ed840b7ed9d02257a8c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70fc7c6c3dff619348c917b619bf52ac78a6ced1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70fc7c6c3dff619348c917b619bf52ac78a6ced1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70fc7c6c3dff619348c917b619bf52ac78a6ced1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70fc7c6c3dff619348c917b619bf52ac78a6ced1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58b922f813ea1b1eb87c0a6a050546ac27e78c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b922f813ea1b1eb87c0a6a050546ac27e78c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b922f813ea1b1eb87c0a6a050546ac27e78c1b"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "ec1e7f2062880439cb75fb05667e603a8afcc046", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70fc7c6c3dff619348c917b619bf52ac78a6ced1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70fc7c6c3dff619348c917b619bf52ac78a6ced1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=70fc7c6c3dff619348c917b619bf52ac78a6ced1", "patch": "@@ -1,5 +1,8 @@\n 2013-02-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/55879\n+\t* semantics.c (cxx_bind_parameters_in_call): Undo DECL_BY_REFERENCE.\n+\n \tPR c++/55993\n \t* semantics.c (cxx_fold_indirect_ref): Handle empty bases at\n \tnon-zero offsets, too."}, {"sha": "46c2e6438067a39dda90a6b0cc2256cc35b053dc", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70fc7c6c3dff619348c917b619bf52ac78a6ced1/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70fc7c6c3dff619348c917b619bf52ac78a6ced1/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=70fc7c6c3dff619348c917b619bf52ac78a6ced1", "patch": "@@ -6520,6 +6520,15 @@ cxx_bind_parameters_in_call (const constexpr_call *old_call, tree t,\n       if (i == 0 && DECL_CONSTRUCTOR_P (fun))\n         goto next;\n       x = get_nth_callarg (t, i);\n+      if (parms && DECL_BY_REFERENCE (parms))\n+\t{\n+\t  /* cp_genericize made this a reference for argument passing, but\n+\t     we don't want to treat it like one for constexpr evaluation.  */\n+\t  gcc_assert (TREE_CODE (type) == REFERENCE_TYPE);\n+\t  gcc_assert (TREE_CODE (TREE_TYPE (x)) == REFERENCE_TYPE);\n+\t  type = TREE_TYPE (type);\n+\t  x = convert_from_reference (x);\n+\t}\n       arg = cxx_eval_constant_expression (old_call, x, allow_non_constant,\n \t\t\t\t\t  TREE_CODE (type) == REFERENCE_TYPE,\n \t\t\t\t\t  non_constant_p, overflow_p);"}, {"sha": "e0ede738a4025a06a8aee3da33d1af207f545e5e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-invisiref1.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70fc7c6c3dff619348c917b619bf52ac78a6ced1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-invisiref1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70fc7c6c3dff619348c917b619bf52ac78a6ced1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-invisiref1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-invisiref1.C?ref=70fc7c6c3dff619348c917b619bf52ac78a6ced1", "patch": "@@ -0,0 +1,36 @@\n+// PR c++/55879\n+// { dg-do compile { target c++11 } }\n+\n+class CAddress\n+{\n+public:\n+  constexpr CAddress(unsigned long begin) : m_Begin(begin) {}\n+  constexpr CAddress(const CAddress &other) : m_Begin(other.m_Begin) {}\n+\n+private:\n+  unsigned long m_Begin;\n+};\n+\n+extern \"C\" char _lnkDDRRAM;\n+/* internal compiler error on gcc 4.6.3 */\n+const CAddress s_Memmap[2]\n+{\n+  {(unsigned long)&_lnkDDRRAM}, /* segmentation fault */\n+  {0x40000000},\n+};\n+\n+class CNested {\n+public:\n+  constexpr CNested(const CAddress primary)\n+    : m_PrimaryBlock(primary) {}\n+\n+private:\n+  CAddress m_PrimaryBlock;\n+};\n+\n+/* internal compiler error on gcc 4.7.2 */\n+const CNested s_taskDescriptions[2]\n+{\n+  {{0x42000000}},\n+  {{0x43000000}},\n+};"}]}