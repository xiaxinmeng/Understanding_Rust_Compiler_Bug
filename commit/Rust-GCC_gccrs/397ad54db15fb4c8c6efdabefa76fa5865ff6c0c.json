{"sha": "397ad54db15fb4c8c6efdabefa76fa5865ff6c0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk3YWQ1NGRiMTVmYjRjOGM2ZWZkYWJlZmE3NmZhNTg2NWZmNmMwYw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-03-31T17:35:29Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-03-31T17:35:29Z"}, "message": "re PR c++/65390 (ICE in strip_typedefs, at cp/tree.c:1361)\n\n\tPR c++/65390\n\t* tree.c (build_cplus_array_type): Use dependent_type_p rather than\n\tchecking for constness.\n\n\t* g++.dg/template/pr65390.C: New test.\n\nFrom-SVN: r221799", "tree": {"sha": "c1ff8570603f2451c5c516c08d53522bcff0d979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1ff8570603f2451c5c516c08d53522bcff0d979"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e91e2cd71b18d493e4eb0dac685f8e99f12d0d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e91e2cd71b18d493e4eb0dac685f8e99f12d0d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e91e2cd71b18d493e4eb0dac685f8e99f12d0d4"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "0d2456d6eb89cc7f57f4ee561056ef18cb5ec1c7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=397ad54db15fb4c8c6efdabefa76fa5865ff6c0c", "patch": "@@ -1,3 +1,9 @@\n+2015-03-31  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/65390\n+\t* tree.c (build_cplus_array_type): Use dependent_type_p rather than\n+\tchecking for constness.\n+\n 2015-03-30  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/65398"}, {"sha": "97bccc034038c855ab0d48c541f4a78437c3b999", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=397ad54db15fb4c8c6efdabefa76fa5865ff6c0c", "patch": "@@ -822,10 +822,9 @@ build_cplus_array_type (tree elt_type, tree index_type)\n   if (elt_type == error_mark_node || index_type == error_mark_node)\n     return error_mark_node;\n \n-  bool dependent\n-    = (processing_template_decl\n-       && (dependent_type_p (elt_type)\n-\t   || (index_type && !TREE_CONSTANT (TYPE_MAX_VALUE (index_type)))));\n+  bool dependent = (processing_template_decl\n+\t\t    && (dependent_type_p (elt_type)\n+\t\t\t|| (index_type && dependent_type_p (index_type))));\n \n   if (elt_type != TYPE_MAIN_VARIANT (elt_type))\n     /* Start with an array of the TYPE_MAIN_VARIANT.  */"}, {"sha": "e317b5e0011c3f3887983f2b16336e57bfe48c2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=397ad54db15fb4c8c6efdabefa76fa5865ff6c0c", "patch": "@@ -1,3 +1,8 @@\n+2015-03-31  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/65390\n+\t* g++.dg/template/pr65390.C: New test.\n+\n 2015-03-31  Martin Liska  <mliska@suse.cz>\n \n \t* g++.dg/ipa/pr65557.C: New test."}, {"sha": "299d22a7ee3c3acbbcde103392c0161c8c3fcfe4", "filename": "gcc/testsuite/g++.dg/template/pr65390.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr65390.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397ad54db15fb4c8c6efdabefa76fa5865ff6c0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr65390.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr65390.C?ref=397ad54db15fb4c8c6efdabefa76fa5865ff6c0c", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/65390\n+// { dg-do compile }\n+// { dg-options \"\" }\n+\n+template<typename T> struct shared_ptr { };\n+\n+template<typename T, typename Arg>\n+shared_ptr<T> make_shared(Arg) { return shared_ptr<T>(); } // { dg-error \"variably modified type|trying to instantiate\" }\n+\n+void f(int n){\n+  make_shared<int[n]>(1); // { dg-error \"no matching function\" }\n+}"}]}