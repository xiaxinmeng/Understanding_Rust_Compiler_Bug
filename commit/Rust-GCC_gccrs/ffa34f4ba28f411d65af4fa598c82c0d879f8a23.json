{"sha": "ffa34f4ba28f411d65af4fa598c82c0d879f8a23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhMzRmNGJhMjhmNDExZDY1YWY0ZmE1OThjODJjMGQ4NzlmOGEyMw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T04:32:07Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T04:32:07Z"}, "message": "tree-scalar-evolution.c (instantiate_scev_binary): Adapted to pass as parameters the operands of the binary expression.\n\n2009-09-01  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-scalar-evolution.c (instantiate_scev_binary): Adapted\n\tto pass as parameters the operands of the binary expression.\n\nFrom-SVN: r154540", "tree": {"sha": "ff5c0fa989635e52fd47b08b03bc861845c35fcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff5c0fa989635e52fd47b08b03bc861845c35fcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffa34f4ba28f411d65af4fa598c82c0d879f8a23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa34f4ba28f411d65af4fa598c82c0d879f8a23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa34f4ba28f411d65af4fa598c82c0d879f8a23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa34f4ba28f411d65af4fa598c82c0d879f8a23/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9d48a18cb082703fb192657e424f041e8e0284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9d48a18cb082703fb192657e424f041e8e0284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b9d48a18cb082703fb192657e424f041e8e0284"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "0e35c8a1dff19fa3a156468575b3faea580f38f7", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa34f4ba28f411d65af4fa598c82c0d879f8a23/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa34f4ba28f411d65af4fa598c82c0d879f8a23/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=ffa34f4ba28f411d65af4fa598c82c0d879f8a23", "patch": "@@ -1,3 +1,8 @@\n+2009-09-01  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-scalar-evolution.c (instantiate_scev_binary): Adapted\n+\tto pass as parameters the operands of the binary expression.\n+\n 2009-09-01  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-scalar-evolution.c (instantiate_scev_bitnot): Renamed"}, {"sha": "a6b3e77a08e6ebf0c89b6361946f5962bc986cf4", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa34f4ba28f411d65af4fa598c82c0d879f8a23/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa34f4ba28f411d65af4fa598c82c0d879f8a23/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=ffa34f4ba28f411d65af4fa598c82c0d879f8a23", "patch": "@@ -2235,7 +2235,7 @@ instantiate_scev_poly (basic_block instantiate_below,\n /* Analyze all the parameters of the chrec, between INSTANTIATE_BELOW\n    and EVOLUTION_LOOP, that were left under a symbolic form.\n \n-   CHREC is a binary expression to be instantiated.\n+   \"C0 CODE C1\" is a binary expression of type TYPE to be instantiated.\n \n    CACHE is the cache of already instantiated values.\n \n@@ -2248,31 +2248,30 @@ instantiate_scev_poly (basic_block instantiate_below,\n \n static tree\n instantiate_scev_binary (basic_block instantiate_below,\n-\t\t\t struct loop *evolution_loop, tree chrec,\n+\t\t\t struct loop *evolution_loop, tree chrec, enum tree_code code,\n+\t\t\t tree type, tree c0, tree c1,\n \t\t\t bool fold_conversions, htab_t cache, int size_expr)\n {\n   tree op1;\n   tree op0 = instantiate_scev_r (instantiate_below, evolution_loop,\n-\t\t\t\t TREE_OPERAND (chrec, 0), fold_conversions, cache,\n+\t\t\t\t c0, fold_conversions, cache,\n \t\t\t\t size_expr);\n   if (op0 == chrec_dont_know)\n     return chrec_dont_know;\n \n   op1 = instantiate_scev_r (instantiate_below, evolution_loop,\n-\t\t\t    TREE_OPERAND (chrec, 1), fold_conversions, cache,\n+\t\t\t    c1, fold_conversions, cache,\n \t\t\t    size_expr);\n   if (op1 == chrec_dont_know)\n     return chrec_dont_know;\n \n-  if (TREE_OPERAND (chrec, 0) != op0\n-      || TREE_OPERAND (chrec, 1) != op1)\n+  if (c0 != op0\n+      || c1 != op1)\n     {\n-      tree type = chrec_type (chrec);\n-\n       op0 = chrec_convert (type, op0, NULL);\n       op1 = chrec_convert_rhs (type, op1, NULL);\n \n-      switch (TREE_CODE (chrec))\n+      switch (code)\n \t{\n \tcase POINTER_PLUS_EXPR:\n \tcase PLUS_EXPR:\n@@ -2289,7 +2288,7 @@ instantiate_scev_binary (basic_block instantiate_below,\n \t}\n     }\n \n-  return chrec;\n+  return chrec ? chrec : fold_build2 (code, type, c0, c1);\n }\n \n /* Analyze all the parameters of the chrec, between INSTANTIATE_BELOW\n@@ -2548,6 +2547,9 @@ instantiate_scev_r (basic_block instantiate_below,\n     case MINUS_EXPR:\n     case MULT_EXPR:\n       return instantiate_scev_binary (instantiate_below, evolution_loop, chrec,\n+\t\t\t\t      TREE_CODE (chrec), chrec_type (chrec),\n+\t\t\t\t      TREE_OPERAND (chrec, 0),\n+\t\t\t\t      TREE_OPERAND (chrec, 1),\n \t\t\t\t      fold_conversions, cache, size_expr);\n \n     CASE_CONVERT:"}]}