{"sha": "42ad7bc8a55944289250a2a6949df6c404806d66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJhZDdiYzhhNTU5NDQyODkyNTBhMmE2OTQ5ZGY2YzQwNDgwNmQ2Ng==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-06-01T08:13:24Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-06-01T08:13:24Z"}, "message": "2010-06-01  Kai Tietz\n\n        * config/i386.c (ix86_output_addr_vec_elt): Make LPREFIX\n        argument for fprintf.\n        (ix86_output_addr_diff_elt): Likewise.\n        (x86_function_profiler): Likewise.\n        * config/cygming.h (LOCAL_LABEL_PREFIX): Fix\n        for x64 no-underscore.\n        (LPREFIX): Likewise.\n        (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\nFrom-SVN: r160093", "tree": {"sha": "9df02c532f4e75c73bb1f5187502ab7024be2597", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9df02c532f4e75c73bb1f5187502ab7024be2597"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42ad7bc8a55944289250a2a6949df6c404806d66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ad7bc8a55944289250a2a6949df6c404806d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42ad7bc8a55944289250a2a6949df6c404806d66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ad7bc8a55944289250a2a6949df6c404806d66/comments", "author": null, "committer": null, "parents": [{"sha": "d7581cea4362de4ddf7ab69639833d2e593f4e38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7581cea4362de4ddf7ab69639833d2e593f4e38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7581cea4362de4ddf7ab69639833d2e593f4e38"}], "stats": {"total": 47, "additions": 35, "deletions": 12}, "files": [{"sha": "79bb642563981c57d4291bcc2eabb452c621261c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ad7bc8a55944289250a2a6949df6c404806d66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ad7bc8a55944289250a2a6949df6c404806d66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42ad7bc8a55944289250a2a6949df6c404806d66", "patch": "@@ -1,3 +1,14 @@\n+2010-06-01  Kai Tietz\n+\n+        * config/i386.c (ix86_output_addr_vec_elt): Make LPREFIX\n+        argument for fprintf.\n+        (ix86_output_addr_diff_elt): Likewise.\n+        (x86_function_profiler): Likewise.\n+        * config/cygming.h (LOCAL_LABEL_PREFIX): Fix\n+        for x64 no-underscore.\n+        (LPREFIX): Likewise.\n+        (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\n 2010-05-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/44338"}, {"sha": "7c35e2ee57f6f7b96c28f34bf416838a6b29d723", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ad7bc8a55944289250a2a6949df6c404806d66/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ad7bc8a55944289250a2a6949df6c404806d66/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=42ad7bc8a55944289250a2a6949df6c404806d66", "patch": "@@ -42,6 +42,18 @@ along with GCC; see the file COPYING3.  If not see\n #if ! defined (USE_MINGW64_LEADING_UNDERSCORES)\n #undef USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX (TARGET_64BIT ? \"\" : \"_\")\n+\n+#undef LOCAL_LABEL_PREFIX\n+#define LOCAL_LABEL_PREFIX (TARGET_64BIT ? \".\" : \"\")\n+\n+#undef ASM_GENERATE_INTERNAL_LABEL\n+#define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)  \\\n+  sprintf ((BUF), \"%s%s%ld\", LOCAL_LABEL_PREFIX, \\\n+\t   (PREFIX), (long)(NUMBER))\n+\n+#undef LPREFIX\n+#define LPREFIX (TARGET_64BIT ? \".L\" : \"L\")\n+\n #endif\n \n #undef DBX_REGISTER_NUMBER"}, {"sha": "de4fa72c6169c9d0c282c339c7d80253f81ef202", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ad7bc8a55944289250a2a6949df6c404806d66/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ad7bc8a55944289250a2a6949df6c404806d66/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=42ad7bc8a55944289250a2a6949df6c404806d66", "patch": "@@ -13015,7 +13015,7 @@ ix86_output_addr_vec_elt (FILE *file, int value)\n   gcc_assert (!TARGET_64BIT);\n #endif\n \n-  fprintf (file, \"%s\" LPREFIX \"%d\\n\", directive, value);\n+  fprintf (file, \"%s%s%d\\n\", directive, LPREFIX, value);\n }\n \n void\n@@ -13031,21 +13031,21 @@ ix86_output_addr_diff_elt (FILE *file, int value, int rel)\n #endif\n   /* We can't use @GOTOFF for text labels on VxWorks; see gotoff_operand.  */\n   if (TARGET_64BIT || TARGET_VXWORKS_RTP)\n-    fprintf (file, \"%s\" LPREFIX \"%d-\" LPREFIX \"%d\\n\",\n-\t     directive, value, rel);\n+    fprintf (file, \"%s%s%d-%s%d\\n\",\n+\t     directive, LPREFIX, value, LPREFIX, rel);\n   else if (HAVE_AS_GOTOFF_IN_DATA)\n-    fprintf (file, ASM_LONG LPREFIX \"%d@GOTOFF\\n\", value);\n+    fprintf (file, ASM_LONG \"%s%d@GOTOFF\\n\", LPREFIX, value);\n #if TARGET_MACHO\n   else if (TARGET_MACHO)\n     {\n-      fprintf (file, ASM_LONG LPREFIX \"%d-\", value);\n+      fprintf (file, ASM_LONG \"%s%d-\", LPREFIX, value);\n       machopic_output_function_base_name (file);\n       putc ('\\n', file);\n     }\n #endif\n   else\n-    asm_fprintf (file, ASM_LONG \"%U%s+[.-\" LPREFIX \"%d]\\n\",\n-\t\t GOT_SYMBOL_NAME, value);\n+    asm_fprintf (file, ASM_LONG \"%U%s+[.-%s%d]\\n\",\n+\t\t GOT_SYMBOL_NAME, LPREFIX, value);\n }\n \f\n /* Generate either \"mov $0, reg\" or \"xor reg, reg\", as appropriate\n@@ -26628,7 +26628,7 @@ x86_function_profiler (FILE *file, int labelno ATTRIBUTE_UNUSED)\n   if (TARGET_64BIT)\n     {\n #ifndef NO_PROFILE_COUNTERS\n-      fprintf (file, \"\\tleaq\\t\" LPREFIX \"P%d(%%rip),%%r11\\n\", labelno);\n+      fprintf (file, \"\\tleaq\\t%sP%d(%%rip),%%r11\\n\", LPREFIX, labelno);\n #endif\n \n       if (DEFAULT_ABI == SYSV_ABI && flag_pic)\n@@ -26639,16 +26639,16 @@ x86_function_profiler (FILE *file, int labelno ATTRIBUTE_UNUSED)\n   else if (flag_pic)\n     {\n #ifndef NO_PROFILE_COUNTERS\n-      fprintf (file, \"\\tleal\\t\" LPREFIX \"P%d@GOTOFF(%%ebx),%%\" PROFILE_COUNT_REGISTER \"\\n\",\n-\t       labelno);\n+      fprintf (file, \"\\tleal\\t%sP%d@GOTOFF(%%ebx),%%\" PROFILE_COUNT_REGISTER \"\\n\",\n+\t       LPREFIX, labelno);\n #endif\n       fputs (\"\\tcall\\t*\" MCOUNT_NAME \"@GOT(%ebx)\\n\", file);\n     }\n   else\n     {\n #ifndef NO_PROFILE_COUNTERS\n-      fprintf (file, \"\\tmovl\\t$\" LPREFIX \"P%d,%%\" PROFILE_COUNT_REGISTER \"\\n\",\n-\t       labelno);\n+      fprintf (file, \"\\tmovl\\t$%sP%d,%%\" PROFILE_COUNT_REGISTER \"\\n\",\n+\t       LPREFIX, labelno);\n #endif\n       fputs (\"\\tcall\\t\" MCOUNT_NAME \"\\n\", file);\n     }"}]}