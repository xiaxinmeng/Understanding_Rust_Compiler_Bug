{"sha": "8a0b86f5aae42e42a05767fb0cef745bc54923f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEwYjg2ZjVhYWU0MmU0MmEwNTc2N2ZiMGNlZjc0NWJjNTQ5MjNmNw==", "commit": {"author": {"name": "Stephane Carrez", "email": "stcarrez@nerim.fr", "date": "2002-08-14T07:53:55Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2002-08-14T07:53:55Z"}, "message": "invoke.texi: Document -minmax for 68HC12.\n\n\t* doc/invoke.texi: Document -minmax for 68HC12.\n\n\t* config/m68hc11/m68hc11.md (\"umaxqi3\"): Use TARGET_MIN_MAX.\n\t(\"uminqi3\"): Likewise.\n\t(\"uminhi3\", \"umaxhi3\"): Likewise.\n\n\t* config/m68hc11/m68hc11.h (MASK_MIN_MAX): Define.\n\t(TARGET_MIN_MAX): Define.\n\t(TARGET_SWITCHES): New option -minmax/-mnominmax.\n\nFrom-SVN: r56284", "tree": {"sha": "5e448eb33286f05a2698bce9c10589e75fe1f1f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e448eb33286f05a2698bce9c10589e75fe1f1f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a0b86f5aae42e42a05767fb0cef745bc54923f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0b86f5aae42e42a05767fb0cef745bc54923f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a0b86f5aae42e42a05767fb0cef745bc54923f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0b86f5aae42e42a05767fb0cef745bc54923f7/comments", "author": null, "committer": null, "parents": [{"sha": "d6381f4e4f98526cd0d64efe21fa611898fa60f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6381f4e4f98526cd0d64efe21fa611898fa60f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6381f4e4f98526cd0d64efe21fa611898fa60f0"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "3e3824ccf1344bd6e5e4d70747f82597c505c644", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a0b86f5aae42e42a05767fb0cef745bc54923f7", "patch": "@@ -1,3 +1,15 @@\n+2002-08-14  Stephane Carrez  <stcarrez@nerim.fr>\n+\n+\t* doc/invoke.texi: Document -minmax for 68HC12.\n+\n+\t* config/m68hc11/m68hc11.md (\"umaxqi3\"): Use TARGET_MIN_MAX.\n+\t(\"uminqi3\"): Likewise.\n+\t(\"uminhi3\", \"umaxhi3\"): Likewise.\n+\n+\t* config/m68hc11/m68hc11.h (MASK_MIN_MAX): Define.\n+\t(TARGET_MIN_MAX): Define.\n+\t(TARGET_SWITCHES): New option -minmax/-mnominmax.\n+\n 2002-08-14  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/t-m68hc11-gas (LIB1ASMFUNCS): Build __far_trampoline."}, {"sha": "2d97787ec9c3731ea2a1dd3c866bd9423f65af95", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=8a0b86f5aae42e42a05767fb0cef745bc54923f7", "patch": "@@ -253,7 +253,7 @@ m68hc11_override_options ()\n         target_flags &= ~TARGET_DEFAULT;\n \n       if (!TARGET_M6812)\n-        target_flags &= ~TARGET_AUTO_INC_DEC;\n+        target_flags &= ~(TARGET_AUTO_INC_DEC | TARGET_MIN_MAX);\n       m68hc11_cost = &m6811_cost;\n       m68hc11_min_offset = 0;\n       m68hc11_max_offset = 256;\n@@ -284,7 +284,7 @@ m68hc11_override_options ()\n       m68hc11_sp_correction = 0;\n       m68hc11_tmp_regs_class = TMP_REGS;\n       target_flags &= ~MASK_M6811;\n-      target_flags |= MASK_NO_DIRECT_MODE;\n+      target_flags |= MASK_NO_DIRECT_MODE | MASK_MIN_MAX;\n       if (m68hc11_soft_reg_count == 0)\n \tm68hc11_soft_reg_count = \"0\";\n "}, {"sha": "751e18f2a2d331815b0abf6f6dee42b73b081b7e", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=8a0b86f5aae42e42a05767fb0cef745bc54923f7", "patch": "@@ -120,13 +120,15 @@ extern short *reg_renumber;\t/* def in local_alloc.c */\n #define MASK_M6811              0010\n #define MASK_M6812              0020\n #define MASK_NO_DIRECT_MODE     0040\n+#define MASK_MIN_MAX            0100\n #define MASK_LONG_CALLS         0200\n \n #define TARGET_OP_TIME\t\t(optimize && optimize_size == 0)\n #define TARGET_SHORT            (target_flags & MASK_SHORT)\n #define TARGET_M6811            (target_flags & MASK_M6811)\n #define TARGET_M6812            (target_flags & MASK_M6812)\n #define TARGET_AUTO_INC_DEC     (target_flags & MASK_AUTO_INC_DEC)\n+#define TARGET_MIN_MAX          (target_flags & MASK_MIN_MAX)\n #define TARGET_NO_DIRECT_MODE   (target_flags & MASK_NO_DIRECT_MODE)\n #define TARGET_RELAX            (TARGET_NO_DIRECT_MODE)\n #define TARGET_LONG_CALLS       (target_flags & MASK_LONG_CALLS)\n@@ -162,6 +164,10 @@ extern short *reg_renumber;\t/* def in local_alloc.c */\n     N_(\"Auto pre/post decrement increment allowed\")},\t\t\\\n   { \"noauto-incdec\", - MASK_AUTO_INC_DEC,\t\t\t\\\n     N_(\"Auto pre/post decrement increment not allowed\")},\t\\\n+  { \"inmax\", MASK_MIN_MAX,                                     \\\n+    N_(\"Min/max instructions allowed\")},                        \\\n+  { \"nominmax\", MASK_MIN_MAX,                                   \\\n+    N_(\"Min/max instructions not allowed\")},                    \\\n   { \"long-calls\", MASK_LONG_CALLS,\t\t\t\t\\\n     N_(\"Use call and rtc for function calls and returns\")},\t\\\n   { \"nolong-calls\", - MASK_LONG_CALLS,\t\t\t\t\\"}, {"sha": "5b7e0887de4043b057517ec0c249843a0730a017", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=8a0b86f5aae42e42a05767fb0cef745bc54923f7", "patch": "@@ -1666,7 +1666,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,m\")\n \t(umin:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%0,0\")\n \t\t (match_operand:QI 2 \"general_operand\" \"m,d\")))]\n-  \"TARGET_M6812\"\n+  \"TARGET_M6812 && TARGET_MIN_MAX\"\n   \"*\n {\n   /* Flags are set according to (sub:QI (operand 1) (operand2)).\n@@ -1688,7 +1688,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,m\")\n \t(umax:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%0,0\")\n \t\t (match_operand:QI 2 \"general_operand\" \"m,d\")))]\n-  \"TARGET_M6812\"\n+  \"TARGET_M6812 && TARGET_MIN_MAX\"\n   \"*\n {\n   /* Flags are set according to (sub:QI (operand 1) (operand2)).\n@@ -1710,7 +1710,7 @@\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,m\")\n \t(umin:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0\")\n \t\t (match_operand:HI 2 \"general_operand\" \"m,d\")))]\n-  \"TARGET_M6812\"\n+  \"TARGET_M6812 && TARGET_MIN_MAX\"\n   \"*\n {\n   /* Flags are set according to (sub:HI (operand 1) (operand2)).  */\n@@ -1729,7 +1729,7 @@\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,m\")\n \t(umax:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0\")\n \t\t (match_operand:HI 2 \"general_operand\" \"m,d\")))]\n-  \"TARGET_M6812\"\n+  \"TARGET_M6812 && TARGET_MIN_MAX\"\n   \"*\n {\n   /* Flags are set according to (sub:HI (operand 1) (operand2)).  */"}, {"sha": "79a2149ffb9e594dd9b3963269dcd31c7ffeac93", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0b86f5aae42e42a05767fb0cef745bc54923f7/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8a0b86f5aae42e42a05767fb0cef745bc54923f7", "patch": "@@ -338,7 +338,7 @@ in the following sections.\n @emph{M68hc1x Options}\n @gccoptlist{\n -m6811  -m6812  -m68hc11  -m68hc12 @gol\n--mauto-incdec  -mlong-calls  -mshort  -msoft-reg-count=@var{count}}\n+-mauto-incdec  -minmax  -mlong-calls  -mshort  -msoft-reg-count=@var{count}}\n \n @emph{VAX Options}\n @gccoptlist{\n@@ -5171,6 +5171,12 @@ when the compiler is configured for 68HC12-based systems.\n Enable the use of 68HC12 pre and post auto-increment and auto-decrement\n addressing modes.\n \n+@item -minmax\n+@itemx -nominmax\n+@opindex minmax\n+@opindex mnominmax\n+Enable the use of 68HC12 min and max instructions.\n+\n @item -mlong-calls\n @itemx -mno-long-calls\n @opindex mlong-calls"}]}