{"sha": "9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU3ZDBiOTJhOTVmZmUxZmMxNGY3MmNhZmVlZjMyMmI3NzIzYzFjMw==", "commit": {"author": {"name": "Glen Nakamura", "email": "glen@imodulo.com", "date": "2003-02-21T08:07:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-02-21T08:07:25Z"}, "message": "re PR rtl-optimization/8613 (-O2 optimization generates wrong code)\n\n\tPR optimization/8613\n\t* builtins.c (expand_builtin): Emit postincrements before expanding\n\tbuiltin functions.\n\nFrom-SVN: r63207", "tree": {"sha": "3711b274afdafc286d6a6ed6aef58424b13479b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3711b274afdafc286d6a6ed6aef58424b13479b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3/comments", "author": null, "committer": null, "parents": [{"sha": "e9019af61669bd7fcb58f6b2e1f0f7c8a0a3ad13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9019af61669bd7fcb58f6b2e1f0f7c8a0a3ad13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9019af61669bd7fcb58f6b2e1f0f7c8a0a3ad13"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "4890e7b2c11e363e83dc3c1186ab2c07cd87a4b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3", "patch": "@@ -1,3 +1,9 @@\n+2003-02-21  Glen Nakamura  <glen@imodulo.com>\n+\n+\tPR optimization/8613\n+\t* builtins.c (expand_builtin): Emit postincrements before expanding\n+\tbuiltin functions.\n+\n 2003-02-21  Ben Elliston  <bje@redhat.com>\n \n \tPR other/5634"}, {"sha": "25ae873e1415e73e53b81026c8b9be6b1b671986", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3", "patch": "@@ -4012,6 +4012,9 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n   tree arglist = TREE_OPERAND (exp, 1);\n   enum built_in_function fcode = DECL_FUNCTION_CODE (fndecl);\n \n+  /* Perform postincrements before expanding builtin functions. \ufffd*/\n+  emit_queue ();\n+\n   if (DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_MD)\n     return (*targetm.expand_builtin) (exp, target, subtarget, mode, ignore);\n "}, {"sha": "08d3785a0a686704037864e438fa56beaf711ef2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3", "patch": "@@ -1,3 +1,7 @@\n+2003-02-21  Glen Nakamura  <glen@imodulo.com>\n+\n+\t* gcc.c-torture/execute/20030221-1.c: New test.\n+\n 2003-02-20  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9729"}, {"sha": "9dcee3e23384cfd2b745a7cce14f0843d552e0f8", "filename": "gcc/testsuite/gcc.c-torture/execute/20030221-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030221-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030221-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030221-1.c?ref=9e7d0b92a95ffe1fc14f72cafeef322b7723c1c3", "patch": "@@ -0,0 +1,17 @@\n+/* PR optimization/8613 */\n+/* Contributed by Glen Nakamura */\n+\n+extern void abort (void);\n+ \n+int main (void)\n+{\n+  char buf[16] = \"1234567890\";\n+  char *p = buf;\n+\n+  *p++ = (char) __builtin_strlen (buf);\n+\n+  if ((buf[0] != 10) || (p - buf != 1))\n+    abort ();\n+\n+  return 0;\n+}"}]}