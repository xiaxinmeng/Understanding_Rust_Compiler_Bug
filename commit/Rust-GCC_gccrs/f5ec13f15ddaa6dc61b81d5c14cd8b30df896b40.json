{"sha": "f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVlYzEzZjE1ZGRhYTZkYzYxYjgxZDVjMTRjZDhiMzBkZjg5NmI0MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-09-25T14:31:57Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-09-25T14:31:57Z"}, "message": "internal/bytealg, internal/cpu, internal/poll: portability fixes\n    \n    In internal/bytealg correct a +build tag to never build indexbyte_generic.go\n    for the gofrontend, where we always use indexbyte_native.go.\n    \n    For internal/cpu let the Makefile define CacheLineSize using goarch.sh,\n    rather than trying to enumerate all the possibilities in cpu_ARCH.go files.\n    \n    In internal/poll call the C fcntl function rather than using SYS_FCNTL.\n    Change mksysinfo.sh to ensure that F_GETPIPE_SZ is always defined,\n    and check that in internal/poll.\n    \n    Reviewed-on: https://go-review.googlesource.com/137256\n\nFrom-SVN: r264572", "tree": {"sha": "2f3289c7aec8cfae51b453ebed7c32164270cfe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f3289c7aec8cfae51b453ebed7c32164270cfe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/comments", "author": null, "committer": null, "parents": [{"sha": "be2df8bc38a14659f6a5604c22252f17ef2a2a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2df8bc38a14659f6a5604c22252f17ef2a2a6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be2df8bc38a14659f6a5604c22252f17ef2a2a6c"}], "stats": {"total": 89, "additions": 35, "deletions": 54}, "files": [{"sha": "485906f78b5270c2923d084dd4b83f43b5774b2a", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -1,4 +1,4 @@\n-1dbc5b805a1665079008d1ce341991c3554c1eeb\n+652fbfb7acfd81ceffe28e20984464aa7bb6024d\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "699e10d60aff620ae1ae1357cdd8cc6980ed79b4", "filename": "libgo/Makefile.am", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -532,6 +532,14 @@ s-version: Makefile\n \t$(SHELL) $(srcdir)/mvifdiff.sh version.go.tmp version.go\n \t$(STAMP) $@\n \n+cpugen.go: s-cpu; @true\n+s-cpu: Makefile\n+\trm -f cpugen.go.tmp\n+\techo \"package cpu\" > cpugen.go.tmp\n+\techo \"const CacheLineSize = `$(SHELL) $(srcdir)/goarch.sh $(GOARCH) cachelinesize`\" >> cpugen.go.tmp\n+\t$(SHELL) $(srcdir)/mvifdiff.sh cpugen.go.tmp cpugen.go\n+\t$(STAMP) $@\n+\n objabi.go: s-objabi; @true\n s-objabi: Makefile\n \trm -f objabi.go.tmp\n@@ -963,6 +971,9 @@ runtime_pprof_check_GOCFLAGS = -static-libgo -fno-inline\n extra_go_files_runtime_internal_sys = version.go\n runtime/internal/sys.lo.dep: $(extra_go_files_runtime_internal_sys)\n \n+extra_go_files_internal_cpu = cpugen.go\n+internal/cpu.lo.dep: $(extra_go_files_internal_cpu)\n+\n extra_go_files_internal_goroot = zstdpkglist.go\n internal/goroot.lo.dep: $(extra_go_files_internal_goroot)\n "}, {"sha": "10b11e0104db0168d116b502f0b57a369b02ee9b", "filename": "libgo/Makefile.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -1002,6 +1002,7 @@ runtime_internal_sys_lo_check_GOCFLAGS = -fgo-compiling-runtime\n # Also use -fno-inline to get better results from the memory profiler.\n runtime_pprof_check_GOCFLAGS = -static-libgo -fno-inline\n extra_go_files_runtime_internal_sys = version.go\n+extra_go_files_internal_cpu = cpugen.go\n extra_go_files_internal_goroot = zstdpkglist.go\n extra_go_files_go_types = gccgosizes.go\n extra_go_files_cmd_internal_objabi = objabi.go\n@@ -2759,6 +2760,14 @@ s-version: Makefile\n \t$(SHELL) $(srcdir)/mvifdiff.sh version.go.tmp version.go\n \t$(STAMP) $@\n \n+cpugen.go: s-cpu; @true\n+s-cpu: Makefile\n+\trm -f cpugen.go.tmp\n+\techo \"package cpu\" > cpugen.go.tmp\n+\techo \"const CacheLineSize = `$(SHELL) $(srcdir)/goarch.sh $(GOARCH) cachelinesize`\" >> cpugen.go.tmp\n+\t$(SHELL) $(srcdir)/mvifdiff.sh cpugen.go.tmp cpugen.go\n+\t$(STAMP) $@\n+\n objabi.go: s-objabi; @true\n s-objabi: Makefile\n \trm -f objabi.go.tmp\n@@ -2957,6 +2966,7 @@ $(foreach package,$(GOTOOL_PACKAGES),$(eval $(call PACKAGE_template,$(package)))\n runtime.lo.dep: $(extra_go_files_runtime)\n syscall.lo.dep: $(extra_go_files_syscall)\n runtime/internal/sys.lo.dep: $(extra_go_files_runtime_internal_sys)\n+internal/cpu.lo.dep: $(extra_go_files_internal_cpu)\n internal/goroot.lo.dep: $(extra_go_files_internal_goroot)\n go/types.lo.dep: $(extra_go_files_go_types)\n cmd/internal/objabi.lo.dep: $(extra_go_files_cmd_internal_objabi)"}, {"sha": "6e59fd1e72e372d964fc44ef21350266efe52e65", "filename": "libgo/go/internal/bytealg/indexbyte_generic.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fbytealg%2Findexbyte_generic.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fbytealg%2Findexbyte_generic.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fbytealg%2Findexbyte_generic.go?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +ignore_for_gccgo\n+// +build ignore_for_gccgo\n // +build !386,!amd64,!amd64p32,!s390x,!arm,!arm64,!ppc64,!ppc64le,!mips,!mipsle,!mips64,!mips64le,!wasm\n \n package bytealg"}, {"sha": "078a6c3b80a28d6049ad5dd50932d46413618918", "filename": "libgo/go/internal/cpu/cpu_arm.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_arm.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_arm.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_arm.go?ref=be2df8bc38a14659f6a5604c22252f17ef2a2a6c", "patch": "@@ -1,7 +0,0 @@\n-// Copyright 2017 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package cpu\n-\n-const CacheLineSize = 32"}, {"sha": "c4d6b8155abbeea0e5df14f5198fd2cbff60b8d1", "filename": "libgo/go/internal/cpu/cpu_arm64.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_arm64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_arm64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_arm64.go?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -4,8 +4,6 @@\n \n package cpu\n \n-const CacheLineSize = 64\n-\n // arm64 doesn't have a 'cpuid' equivalent, so we rely on HWCAP/HWCAP2.\n // These are initialized by archauxv in runtime/os_linux_arm64.go.\n // These should not be changed after they are initialized."}, {"sha": "078a6c3b80a28d6049ad5dd50932d46413618918", "filename": "libgo/go/internal/cpu/cpu_mips.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mips.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mips.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mips.go?ref=be2df8bc38a14659f6a5604c22252f17ef2a2a6c", "patch": "@@ -1,7 +0,0 @@\n-// Copyright 2017 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package cpu\n-\n-const CacheLineSize = 32"}, {"sha": "078a6c3b80a28d6049ad5dd50932d46413618918", "filename": "libgo/go/internal/cpu/cpu_mips64.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mips64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mips64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mips64.go?ref=be2df8bc38a14659f6a5604c22252f17ef2a2a6c", "patch": "@@ -1,7 +0,0 @@\n-// Copyright 2017 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package cpu\n-\n-const CacheLineSize = 32"}, {"sha": "078a6c3b80a28d6049ad5dd50932d46413618918", "filename": "libgo/go/internal/cpu/cpu_mips64le.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mips64le.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mips64le.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mips64le.go?ref=be2df8bc38a14659f6a5604c22252f17ef2a2a6c", "patch": "@@ -1,7 +0,0 @@\n-// Copyright 2017 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package cpu\n-\n-const CacheLineSize = 32"}, {"sha": "078a6c3b80a28d6049ad5dd50932d46413618918", "filename": "libgo/go/internal/cpu/cpu_mipsle.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mipsle.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mipsle.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_mipsle.go?ref=be2df8bc38a14659f6a5604c22252f17ef2a2a6c", "patch": "@@ -1,7 +0,0 @@\n-// Copyright 2017 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package cpu\n-\n-const CacheLineSize = 32"}, {"sha": "5c4bed7982c0bb25a1117b655b1e07a55684dc6e", "filename": "libgo/go/internal/cpu/cpu_ppc64x.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppc64x.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppc64x.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppc64x.go?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -6,8 +6,6 @@\n \n package cpu\n \n-const CacheLineSize = 128\n-\n // ppc64x doesn't have a 'cpuid' equivalent, so we rely on HWCAP/HWCAP2.\n // These are initialized by archauxv in runtime/os_linux_ppc64x.go.\n // These should not be changed after they are initialized."}, {"sha": "43fa4ad632c9a56f90c0daded733a49362f93785", "filename": "libgo/go/internal/cpu/cpu_s390x.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_s390x.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_s390x.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_s390x.go?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -4,8 +4,6 @@\n \n package cpu\n \n-const CacheLineSize = 256\n-\n // bitIsSet reports whether the bit at index is set. The bit index\n // is in big endian order, so bit index 0 is the leftmost bit.\n func bitIsSet(bits []uint64, index uint) bool {"}, {"sha": "1107a7ad6f7adefce445b69bc541684773a2e8b3", "filename": "libgo/go/internal/cpu/cpu_wasm.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_wasm.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2df8bc38a14659f6a5604c22252f17ef2a2a6c/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_wasm.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_wasm.go?ref=be2df8bc38a14659f6a5604c22252f17ef2a2a6c", "patch": "@@ -1,7 +0,0 @@\n-// Copyright 2018 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package cpu\n-\n-const CacheLineSize = 64"}, {"sha": "5f159651d88473e944029449a687221269e0c081", "filename": "libgo/go/internal/cpu/cpu_x86.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_x86.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_x86.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_x86.go?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -6,8 +6,6 @@\n \n package cpu\n \n-const CacheLineSize = 64\n-\n // cpuid is implemented in cpu_x86.s.\n func cpuid(eaxArg, ecxArg uint32) (eax, ebx, ecx, edx uint32)\n "}, {"sha": "4265b429d14278ab8a3bd60b295b6a8b01d2151d", "filename": "libgo/go/internal/poll/splice_linux.go", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fpoll%2Fsplice_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fgo%2Finternal%2Fpoll%2Fsplice_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fpoll%2Fsplice_linux.go?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -162,10 +162,15 @@ func newTempPipe() (prfd, pwfd int, sc string, err error) {\n \t\tdefer atomic.StorePointer(&disableSplice, unsafe.Pointer(p))\n \n \t\t// F_GETPIPE_SZ was added in 2.6.35, which does not have the -EAGAIN bug.\n-\t\tif _, _, errno := syscall.Syscall(syscall.SYS_FCNTL, uintptr(fds[0]), syscall.F_GETPIPE_SZ, 0); errno != 0 {\n+\t\tif syscall.F_GETPIPE_SZ == 0 {\n \t\t\t*p = true\n \t\t\tdestroyTempPipe(fds[0], fds[1])\n-\t\t\treturn -1, -1, \"fcntl\", errno\n+\t\t\treturn -1, -1, \"fcntl\", syscall.EINVAL\n+\t\t}\n+\t\tif _, errno := fcntl(uintptr(fds[0]), syscall.F_GETPIPE_SZ, 0); errno != 0 {\n+\t\t\t*p = true\n+\t\t\tdestroyTempPipe(fds[0], fds[1])\n+\t\t\treturn -1, -1, \"fcntl\", syscall.Errno(errno)\n \t\t}\n \t}\n "}, {"sha": "b9436ef1e83404a7772f5f24620e529e47bd4533", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=f5ec13f15ddaa6dc61b81d5c14cd8b30df896b40", "patch": "@@ -73,6 +73,11 @@ if ! grep '^const F_DUPFD_CLOEXEC' ${OUT} >/dev/null 2>&1; then\n   echo \"const F_DUPFD_CLOEXEC = 0\" >> ${OUT}\n fi\n \n+# The internal/poll package requires F_GETPIPE_SZ to be defined.\n+if ! grep '^const F_GETPIPE_SZ' ${OUT} >/dev/null 2>&1; then\n+  echo \"const F_GETPIPE_SZ = 0\" >> ${OUT}\n+fi\n+\n # AIX 7.1 is a 64 bits value for _FCLOEXEC (referenced by O_CLOEXEC)\n # which leads to a constant overflow when using O_CLOEXEC in some\n # go code. Issue wan not present in 6.1 (no O_CLOEXEC) and is no"}]}