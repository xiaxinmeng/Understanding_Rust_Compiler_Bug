{"sha": "e7bec5d5edeaab404931bf599821c6c2a3023b47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdiZWM1ZDVlZGVhYWI0MDQ5MzFiZjU5OTgyMWM2YzJhMzAyM2I0Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-07T08:26:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-07T08:26:54Z"}, "message": "i386: Fix splitters that call extract_insn_cached [PR93611]\n\nThe following testcase ICEs.  The generated split_insns starts\nwith recog_data.insn = NULL and then tries to put various operands into\nrecog_data.operand array and checks various splitter conditions.\nThe problem is that some atom related tuning splitters indirectly call\nextract_insn_cached on the insn they are used in.  This can change\nrecog_data.operand, but most likely it will just keep it as is, but\nsets recog_data.insn to the current instruction.  If that splitter doesn't\nmatch, we continue trying some other split conditions and modify\nrecog_data.operand array again.  If even that doesn't find any usable\nsplitter, we punt, but at that point recog_data.insn says that recog_data\nis valid for that particular instruction, even when recog_data.operand array\ncan be anything.\nThe safest thing would be to copy whole recog_data to a temporary object\nbefore doing the calls that can call extract_insn_cached and restore it\nafterwards, but it would be also very costly, recog_data has 1280 bytes.\nSo, this patch just makes sure to clear recog_data.insn if it has changed\nduring the extract_insn_cached call, which means if we extract_insn_cached\nlater, we'll extract it properly, while if we call it say from some other\ncontext than splitter conditions, the insn is already cached, we don't reset\nthe cache.\n\n2020-02-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/93611\n\t* config/i386/i386.c (ix86_lea_outperforms): Make sure to clear\n\trecog_data.insn if distance_non_agu_define changed it.\n\n\t* gcc.target/i386/pr93611.c: New test.", "tree": {"sha": "11d0eb3d1a85a249adedf33baed80104d4470ba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11d0eb3d1a85a249adedf33baed80104d4470ba2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7bec5d5edeaab404931bf599821c6c2a3023b47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7bec5d5edeaab404931bf599821c6c2a3023b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7bec5d5edeaab404931bf599821c6c2a3023b47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7bec5d5edeaab404931bf599821c6c2a3023b47/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc4646410a38801029817e7951bf9b99a8c41461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4646410a38801029817e7951bf9b99a8c41461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc4646410a38801029817e7951bf9b99a8c41461"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "56090a9e0b6ef0e3466f5c54f65a72338fb6c4e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bec5d5edeaab404931bf599821c6c2a3023b47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bec5d5edeaab404931bf599821c6c2a3023b47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7bec5d5edeaab404931bf599821c6c2a3023b47", "patch": "@@ -1,3 +1,9 @@\n+2020-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93611\n+\t* config/i386/i386.c (ix86_lea_outperforms): Make sure to clear\n+\trecog_data.insn if distance_non_agu_define changed it.\n+\n 2020-02-06  Michael Meissner  <meissner@linux.ibm.com>\n \n \tPR target/93569"}, {"sha": "556ca82a2b337476f50ff3dc16ed19db2bda88d8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bec5d5edeaab404931bf599821c6c2a3023b47/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bec5d5edeaab404931bf599821c6c2a3023b47/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e7bec5d5edeaab404931bf599821c6c2a3023b47", "patch": "@@ -14459,9 +14459,18 @@ ix86_lea_outperforms (rtx_insn *insn, unsigned int regno0, unsigned int regno1,\n       return true;\n     }\n \n+  rtx_insn *rinsn = recog_data.insn;\n+\n   dist_define = distance_non_agu_define (regno1, regno2, insn);\n   dist_use = distance_agu_use (regno0, insn);\n \n+  /* distance_non_agu_define can call extract_insn_cached.  If this function\n+     is called from define_split conditions, that can break insn splitting,\n+     because split_insns works by clearing recog_data.insn and then modifying\n+     recog_data.operand array and match the various split conditions.  */\n+  if (recog_data.insn != rinsn)\n+    recog_data.insn = NULL;\n+\n   if (dist_define < 0 || dist_define >= LEA_MAX_STALL)\n     {\n       /* If there is no non AGU operand definition, no AGU"}, {"sha": "6be609acf3f43aeffbd988d8bb00ad409e20b843", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bec5d5edeaab404931bf599821c6c2a3023b47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bec5d5edeaab404931bf599821c6c2a3023b47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7bec5d5edeaab404931bf599821c6c2a3023b47", "patch": "@@ -1,3 +1,8 @@\n+2020-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93611\n+\t* gcc.target/i386/pr93611.c: New test.\n+\n 2020-02-06  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93375"}, {"sha": "2a0e816b1e4ce86df2a04121fe48b74dc02d3430", "filename": "gcc/testsuite/gcc.target/i386/pr93611.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bec5d5edeaab404931bf599821c6c2a3023b47/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93611.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bec5d5edeaab404931bf599821c6c2a3023b47/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93611.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93611.c?ref=e7bec5d5edeaab404931bf599821c6c2a3023b47", "patch": "@@ -0,0 +1,5 @@\n+/* PR target/93611 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fira-algorithm=priority -O3 -mtune=bonnell\" } */\n+\n+#include \"../../gcc.dg/vect/pr58508.c\""}]}