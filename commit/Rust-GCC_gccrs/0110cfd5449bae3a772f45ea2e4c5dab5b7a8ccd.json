{"sha": "0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd", "node_id": "C_kwDOANBUbNoAKDAxMTBjZmQ1NDQ5YmFlM2E3NzJmNDVlYTJlNGM1ZGFiNWI3YThjY2Q", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-07-27T19:34:22Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-07-31T18:28:38Z"}, "message": "Fortran: fix invalid rank error in ASSOCIATED when rank is remapped [PR77652]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/77652\n\t* check.cc (gfc_check_associated): Make the rank check of POINTER\n\tvs. TARGET match the allowed forms of pointer assignment for the\n\tselected Fortran standard.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/77652\n\t* gfortran.dg/associated_target_9a.f90: New test.\n\t* gfortran.dg/associated_target_9b.f90: New test.", "tree": {"sha": "297d550a3369382d8bda6a68bb15bc28f489bcb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/297d550a3369382d8bda6a68bb15bc28f489bcb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b04c399e258e686dddad879bf7e27d9e28fd6fde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b04c399e258e686dddad879bf7e27d9e28fd6fde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b04c399e258e686dddad879bf7e27d9e28fd6fde"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "1da0b3cbe152fb41efbd0d4bd2ceb8580e7c2e71", "filename": "gcc/fortran/check.cc", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd/gcc%2Ffortran%2Fcheck.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd/gcc%2Ffortran%2Fcheck.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.cc?ref=0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd", "patch": "@@ -1502,8 +1502,27 @@ gfc_check_associated (gfc_expr *pointer, gfc_expr *target)\n     t = false;\n   /* F2018 C838 explicitly allows an assumed-rank variable as the first\n      argument of intrinsic inquiry functions.  */\n-  if (pointer->rank != -1 && !rank_check (target, 0, pointer->rank))\n-    t = false;\n+  if (pointer->rank != -1 && pointer->rank != target->rank)\n+    {\n+      if (pointer->rank == 0 || target->rank == 0)\n+\t{\n+\t  /* There exists no valid pointer assignment using bounds\n+\t     remapping for scalar => array or array => scalar. */\n+\t  if (!rank_check (target, 0, pointer->rank))\n+\t    t = false;\n+\t}\n+      else if (target->rank != 1)\n+\t{\n+\t  if (!gfc_notify_std (GFC_STD_F2008, \"Rank remapping target is not \"\n+\t\t\t       \"rank 1 at %L\", &target->where))\n+\t    t = false;\n+\t}\n+      else if ((gfc_option.allow_std & GFC_STD_F2003) == 0)\n+\t{\n+\t  if (!rank_check (target, 0, pointer->rank))\n+\t    t = false;\n+\t}\n+    }\n   if (target->rank > 0 && target->ref)\n     {\n       for (i = 0; i < target->rank; i++)"}, {"sha": "708645d5bcb899384576efa24261e6611e68d2d2", "filename": "gcc/testsuite/gfortran.dg/associated_target_9a.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_9a.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_9a.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_9a.f90?ref=0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do run }\n+! { dg-options \"-std=f2018\" }\n+! PR fortran/77652 - Invalid rank error in ASSOCIATED when rank is remapped\n+! Contributed by Paul Thomas\n+\n+program p\n+  real, dimension(100),  target  :: array\n+  real, dimension(:,:),  pointer :: matrix\n+  real, dimension(20,5), target  :: array2\n+  real, dimension(:),    pointer :: matrix2\n+  matrix(1:20,1:5) => array\n+  matrix2(1:100)   => array2\n+  !\n+  ! F2018:16.9.16, ASSOCIATED (POINTER [, TARGET])\n+  ! Case(v): If TARGET is present and is an array target, the result is\n+  ! true if and only if POINTER is associated with a target that has\n+  ! the same shape as TARGET, ...\n+  if (associated (matrix, array )) stop 1\n+  if (associated (matrix2,array2)) stop 2\n+  call check (matrix2, array2)\n+contains\n+  subroutine check (ptr, tgt)\n+    real, pointer :: ptr(..)\n+    real, target  :: tgt(:,:)\n+    if (associated (ptr, tgt)) stop 3\n+  end subroutine check\n+end"}, {"sha": "1daa0a7dde109a90cb29054362dcf9a1310f2183", "filename": "gcc/testsuite/gfortran.dg/associated_target_9b.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_9b.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_9b.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_9b.f90?ref=0110cfd5449bae3a772f45ea2e4c5dab5b7a8ccd", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+! PR fortran/77652 - Invalid rank error in ASSOCIATED when rank is remapped\n+! Contributed by Paul Thomas\n+\n+subroutine s\n+  real, dimension(100),  target  :: array\n+  real, dimension(:,:),  pointer :: matrix\n+  real, dimension(20,5), target  :: array2\n+  real, dimension(:),    pointer :: matrix2\n+  real,                  pointer :: scalar, scalar2\n+  scalar => scalar2\n+  print *, associated (scalar, scalar2)\n+\n+  matrix(1:20,1:5) => array            ! F2003+\n+! matrix2(1:100)   => array2           ! F2008+\n+  print *, associated (matrix, array ) ! Technically legal F2003\n+  print *, associated (matrix2,array2) ! { dg-error \"is not rank 1\" }\n+\n+  ! There exists no related valid pointer assignment for these cases:\n+  print *, associated (scalar,matrix2) ! { dg-error \"must be of rank 0\" }\n+  print *, associated (matrix2,scalar) ! { dg-error \"must be of rank 1\" }\n+end"}]}