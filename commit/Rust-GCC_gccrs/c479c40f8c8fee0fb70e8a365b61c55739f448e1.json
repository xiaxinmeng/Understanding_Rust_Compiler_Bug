{"sha": "c479c40f8c8fee0fb70e8a365b61c55739f448e1", "node_id": "C_kwDOANBUbNoAKGM0NzljNDBmOGM4ZmVlMGZiNzBlOGEzNjViNjFjNTU3MzlmNDQ4ZTE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-13T06:27:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-13T06:30:44Z"}, "message": "tree-optimization/106249 - unroll-and-jam and LC SSA upate\n\nWhen I delayed the LC SSA update in unroll-and-jam this exposed\nan issue that tree_transform_and_unroll_loop does a full function\nLC SSA verification when new_loop is NULL (when it doesn't need to\ndo versioning).  That wasn't intended.  I also took the chance\nto make the versioning in tree_transform_and_unroll_loop use\nTODO_update_ssa_nophi for the loop versioning SSA update which\nI somehow missed earlier.\n\n\tPR tree-optimization/106249\n\t* tree-ssa-loop-manip.cc (tree_transform_and_unroll_loop):\n\tOnly verify LC SSA of the new_loop if we created it.\n\tUse TODO_update_ssa_nophi for the SSA update after versioning\n\tthe loop.\n\n\t* gcc.dg/pr106249.c: New testcase.", "tree": {"sha": "5c5073165e5e46b4a702fefaf92bc72394d19223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c5073165e5e46b4a702fefaf92bc72394d19223"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c479c40f8c8fee0fb70e8a365b61c55739f448e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c479c40f8c8fee0fb70e8a365b61c55739f448e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c479c40f8c8fee0fb70e8a365b61c55739f448e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c479c40f8c8fee0fb70e8a365b61c55739f448e1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43997608a0887341160d50f83ad2d0159b387aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43997608a0887341160d50f83ad2d0159b387aae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43997608a0887341160d50f83ad2d0159b387aae"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "f97b07fb4da49dfbf7c2da640638212b98fd9aca", "filename": "gcc/testsuite/gcc.dg/pr106249.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c479c40f8c8fee0fb70e8a365b61c55739f448e1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106249.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c479c40f8c8fee0fb70e8a365b61c55739f448e1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106249.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106249.c?ref=c479c40f8c8fee0fb70e8a365b61c55739f448e1", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -floop-unroll-and-jam --param unroll-jam-min-percent=0\" } */\n+\n+void\n+foo (double *arr)\n+{\n+  int i, j;\n+\n+  for (i = 0; i < 4; ++i)\n+    for (j = 0; j < 4; ++j)\n+      arr[j] = 0;\n+\n+  for (i = 1; i < 4; ++i)\n+    for (j = 0; j < 4; ++j)\n+      arr[j] = 1.0 / (i + 1);\n+}"}, {"sha": "410a8516370e568f223c5bafd3722a93b5b0a085", "filename": "gcc/tree-ssa-loop-manip.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c479c40f8c8fee0fb70e8a365b61c55739f448e1/gcc%2Ftree-ssa-loop-manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c479c40f8c8fee0fb70e8a365b61c55739f448e1/gcc%2Ftree-ssa-loop-manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.cc?ref=c479c40f8c8fee0fb70e8a365b61c55739f448e1", "patch": "@@ -1208,7 +1208,7 @@ tree_transform_and_unroll_loop (class loop *loop, unsigned factor,\n \t\t\t       profile_probability::guessed_always (),\n \t\t\t       true);\n       gcc_assert (new_loop != NULL);\n-      update_ssa (TODO_update_ssa);\n+      update_ssa (TODO_update_ssa_no_phi);\n \n       /* Prepare the cfg and update the phi nodes.  Move the loop exit to the\n \t loop latch (and make its condition dummy, for the moment).  */\n@@ -1428,7 +1428,8 @@ tree_transform_and_unroll_loop (class loop *loop, unsigned factor,\n   checking_verify_flow_info ();\n   checking_verify_loop_structure ();\n   checking_verify_loop_closed_ssa (true, loop);\n-  checking_verify_loop_closed_ssa (true, new_loop);\n+  if (new_loop)\n+    checking_verify_loop_closed_ssa (true, new_loop);\n }\n \n /* Wrapper over tree_transform_and_unroll_loop for case we do not"}]}