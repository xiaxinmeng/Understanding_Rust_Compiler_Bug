{"sha": "2b557972cf6a433c08d1e1ec97532ff769df73f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI1NTc5NzJjZjZhNDMzYzA4ZDFlMWVjOTc1MzJmZjc2OWRmNzNmOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-10-31T18:23:44Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-10-31T18:23:44Z"}, "message": "re PR gcov-profile/20815 (-fprofile-use barfs with \"coverage mismatch for function '...' while reading counter 'arcs'.\")\n\n\n\tPR profile/20815\n\t* coverage.c (coverage_checksum_string): Fix code to stip random seeds\n\tfrom symbol names while computing checkup.\n\nFrom-SVN: r106283", "tree": {"sha": "2741256bc6de300872c7ee847a1949ce2cd66729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2741256bc6de300872c7ee847a1949ce2cd66729"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b557972cf6a433c08d1e1ec97532ff769df73f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b557972cf6a433c08d1e1ec97532ff769df73f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b557972cf6a433c08d1e1ec97532ff769df73f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b557972cf6a433c08d1e1ec97532ff769df73f8/comments", "author": null, "committer": null, "parents": [{"sha": "0432a5de96607d878726138722bc42f72208ce1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0432a5de96607d878726138722bc42f72208ce1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0432a5de96607d878726138722bc42f72208ce1a"}], "stats": {"total": 68, "additions": 39, "deletions": 29}, "files": [{"sha": "b31e67c370c7a08857b087e4fe362a34c484398b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b557972cf6a433c08d1e1ec97532ff769df73f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b557972cf6a433c08d1e1ec97532ff769df73f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b557972cf6a433c08d1e1ec97532ff769df73f8", "patch": "@@ -1,5 +1,9 @@\n 2005-10-31  Jan Hubicka  <jh@suse.cz>\n \n+\tPR profile/20815\n+\t* coverage.c (coverage_checksum_string): Fix code to stip random seeds\n+\tfrom symbol names while computing checkup.\n+\n \tPR profile/24487\n \t* predict.c (predict_loops): Do not estimate more than\n \tMAX_PRED_LOOP_ITERATIONS in PRED_LOOP_ITERATIONS heuristic."}, {"sha": "e3cd9abc55d987643c106657f71b6f3096c9663e", "filename": "gcc/coverage.c", "status": "modified", "additions": 35, "deletions": 29, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b557972cf6a433c08d1e1ec97532ff769df73f8/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b557972cf6a433c08d1e1ec97532ff769df73f8/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=2b557972cf6a433c08d1e1ec97532ff769df73f8", "patch": "@@ -445,36 +445,42 @@ coverage_checksum_string (unsigned chksum, const char *string)\n      as the checksums are used only for sanity checking.  */\n   for (i = 0; string[i]; i++)\n     {\n+      int offset = 0;\n+      if (!strncmp (string + i, \"_GLOBAL__N_\", 11))\n+      offset = 11;\n       if (!strncmp (string + i, \"_GLOBAL__\", 9))\n-\tfor (i = i + 9; string[i]; i++)\n-\t  if (string[i]=='_')\n-\t    {\n-\t      int y;\n-\t      unsigned seed;\n-\t      int scan;\n-\n-\t      for (y = 1; y < 9; y++)\n-\t\tif (!(string[i + y] >= '0' && string[i + y] <= '9')\n-\t\t    && !(string[i + y] >= 'A' && string[i + y] <= 'F'))\n-\t\t  break;\n-\t      if (y != 9 || string[i + 9] != '_')\n-\t\tcontinue;\n-\t      for (y = 10; y < 18; y++)\n-\t\tif (!(string[i + y] >= '0' && string[i + y] <= '9')\n-\t\t    && !(string[i + y] >= 'A' && string[i + y] <= 'F'))\n-\t\t  break;\n-\t      if (y != 18)\n-\t\tcontinue;\n-\t      scan = sscanf (string + i + 10, \"%X\", &seed);\n-\t      gcc_assert (scan);\n-\t      if (seed != crc32_string (0, flag_random_seed))\n-\t\tcontinue;\n-\t      string = dup = xstrdup (string);\n-\t      for (y = 10; y < 18; y++)\n-\t\tdup[i + y] = '0';\n-\t      break;\n-\t    }\n-      break;\n+      offset = 9;\n+\n+      /* C++ namespaces do have scheme:\n+         _GLOBAL__N_<filename>_<wrongmagicnumber>_<magicnumber>functionname\n+       since filename might contain extra underscores there seems\n+       to be no better chance then walk all possible offsets looking\n+       for magicnuber.  */\n+      if (offset)\n+        for (;string[offset]; offset++)\n+        for (i = i + offset; string[i]; i++)\n+          if (string[i]=='_')\n+            {\n+              int y;\n+\n+              for (y = 1; y < 9; y++)\n+                if (!(string[i + y] >= '0' && string[i + y] <= '9')\n+                    && !(string[i + y] >= 'A' && string[i + y] <= 'F'))\n+                  break;\n+              if (y != 9 || string[i + 9] != '_')\n+                continue;\n+              for (y = 10; y < 18; y++)\n+                if (!(string[i + y] >= '0' && string[i + y] <= '9')\n+                    && !(string[i + y] >= 'A' && string[i + y] <= 'F'))\n+                  break;\n+              if (y != 18)\n+                continue;\n+              if (!dup)\n+                string = dup = xstrdup (string);\n+              for (y = 10; y < 18; y++)\n+                dup[i + y] = '0';\n+            }\n+        break;\n     }\n \n   chksum = crc32_string (chksum, string);"}]}