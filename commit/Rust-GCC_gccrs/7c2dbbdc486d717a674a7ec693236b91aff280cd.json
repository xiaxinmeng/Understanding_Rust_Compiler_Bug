{"sha": "7c2dbbdc486d717a674a7ec693236b91aff280cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MyZGJiZGM0ODZkNzE3YTY3NGE3ZWM2OTMyMzZiOTFhZmYyODBjZA==", "commit": {"author": {"name": "Dimitrios Apostolou", "email": "jimis@gmx.net", "date": "2012-05-22T08:35:32Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2012-05-22T08:35:32Z"}, "message": "df-scan.c (df_scan_alloc): Round up allocation pools size, reduce the mw_reg_pool size.\n\n2012-05-22  Dimitrios Apostolou  <jimis@gmx.net>\n\n\t* df-scan.c (df_scan_alloc): Round up allocation pools size, reduce\n\tthe mw_reg_pool size.\n\nFrom-SVN: r187760", "tree": {"sha": "85ba11c4cc05dc3bfb8ae32eb9b3184b4552c91d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85ba11c4cc05dc3bfb8ae32eb9b3184b4552c91d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c2dbbdc486d717a674a7ec693236b91aff280cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2dbbdc486d717a674a7ec693236b91aff280cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c2dbbdc486d717a674a7ec693236b91aff280cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2dbbdc486d717a674a7ec693236b91aff280cd/comments", "author": {"login": "jimis", "id": 3584514, "node_id": "MDQ6VXNlcjM1ODQ1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3584514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimis", "html_url": "https://github.com/jimis", "followers_url": "https://api.github.com/users/jimis/followers", "following_url": "https://api.github.com/users/jimis/following{/other_user}", "gists_url": "https://api.github.com/users/jimis/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimis/subscriptions", "organizations_url": "https://api.github.com/users/jimis/orgs", "repos_url": "https://api.github.com/users/jimis/repos", "events_url": "https://api.github.com/users/jimis/events{/privacy}", "received_events_url": "https://api.github.com/users/jimis/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "819f3b2cfa364ed63cb9200459ca6574aaa123da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819f3b2cfa364ed63cb9200459ca6574aaa123da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819f3b2cfa364ed63cb9200459ca6574aaa123da"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "3ff410a9c301d5d146382d219ec171d990a0037e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2dbbdc486d717a674a7ec693236b91aff280cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2dbbdc486d717a674a7ec693236b91aff280cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c2dbbdc486d717a674a7ec693236b91aff280cd", "patch": "@@ -1,3 +1,8 @@\n+2012-05-22  Dimitrios Apostolou  <jimis@gmx.net>\n+\n+\t* df-scan.c (df_scan_alloc): Round up allocation pools size, reduce\n+\tthe mw_reg_pool size. \n+\n 2012-05-22  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR tree-optimization/53336"}, {"sha": "730742acac5aa5bdf48b86a7de28d36a575a24a6", "filename": "gcc/df-scan.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2dbbdc486d717a674a7ec693236b91aff280cd/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2dbbdc486d717a674a7ec693236b91aff280cd/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=7c2dbbdc486d717a674a7ec693236b91aff280cd", "patch": "@@ -318,7 +318,7 @@ df_scan_alloc (bitmap all_blocks ATTRIBUTE_UNUSED)\n {\n   struct df_scan_problem_data *problem_data;\n   unsigned int insn_num = get_max_uid () + 1;\n-  unsigned int block_size = 400;\n+  unsigned int block_size = 512;\n   basic_block bb;\n \n   /* Given the number of pools, this is really faster than tearing\n@@ -347,7 +347,7 @@ df_scan_alloc (bitmap all_blocks ATTRIBUTE_UNUSED)\n \t\t\t sizeof (struct df_reg_info), block_size);\n   problem_data->mw_reg_pool\n     = create_alloc_pool (\"df_scan mw_reg\",\n-\t\t\t sizeof (struct df_mw_hardreg), block_size);\n+\t\t\t sizeof (struct df_mw_hardreg), block_size / 16);\n \n   bitmap_obstack_initialize (&problem_data->reg_bitmaps);\n   bitmap_obstack_initialize (&problem_data->insn_bitmaps);"}]}