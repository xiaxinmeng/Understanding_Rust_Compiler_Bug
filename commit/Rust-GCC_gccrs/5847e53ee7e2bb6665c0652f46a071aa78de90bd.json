{"sha": "5847e53ee7e2bb6665c0652f46a071aa78de90bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg0N2U1M2VlN2UyYmI2NjY1YzA2NTJmNDZhMDcxYWE3OGRlOTBiZA==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@develer.com", "date": "2004-05-31T22:27:39Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2004-05-31T22:27:39Z"}, "message": "re PR target/12968 (doc m68k -mshort)\n\n\tPR target/12968\n\t* doc/invoke.texi: Document stack alignment side-effect of -mshort.\n\nFrom-SVN: r82511", "tree": {"sha": "69a627a20bb1ee700bfda4f52eba98adbafb8760", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69a627a20bb1ee700bfda4f52eba98adbafb8760"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5847e53ee7e2bb6665c0652f46a071aa78de90bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5847e53ee7e2bb6665c0652f46a071aa78de90bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5847e53ee7e2bb6665c0652f46a071aa78de90bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5847e53ee7e2bb6665c0652f46a071aa78de90bd/comments", "author": {"login": "codewiz", "id": 1184492, "node_id": "MDQ6VXNlcjExODQ0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1184492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codewiz", "html_url": "https://github.com/codewiz", "followers_url": "https://api.github.com/users/codewiz/followers", "following_url": "https://api.github.com/users/codewiz/following{/other_user}", "gists_url": "https://api.github.com/users/codewiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/codewiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codewiz/subscriptions", "organizations_url": "https://api.github.com/users/codewiz/orgs", "repos_url": "https://api.github.com/users/codewiz/repos", "events_url": "https://api.github.com/users/codewiz/events{/privacy}", "received_events_url": "https://api.github.com/users/codewiz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57807c317869610e07a85bf8bf95747638230ed7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57807c317869610e07a85bf8bf95747638230ed7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57807c317869610e07a85bf8bf95747638230ed7"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "afd82a891f6ba08ca0ce90a6f3078e7e7e6cf919", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847e53ee7e2bb6665c0652f46a071aa78de90bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847e53ee7e2bb6665c0652f46a071aa78de90bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5847e53ee7e2bb6665c0652f46a071aa78de90bd", "patch": "@@ -1,3 +1,8 @@\n+2004-06-01  Bernardo Innocenti  <bernie@develer.com>\n+\n+\tPR target/12968\n+\t* doc/invoke.texi: Document stack alignment side-effect of -mshort.\n+\n 2004-05-31  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/15749"}, {"sha": "41c474f8df80fb5b0d50c221343d9f431a6213c9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5847e53ee7e2bb6665c0652f46a071aa78de90bd/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5847e53ee7e2bb6665c0652f46a071aa78de90bd/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5847e53ee7e2bb6665c0652f46a071aa78de90bd", "patch": "@@ -6349,6 +6349,8 @@ cross-compilation.  The embedded targets @samp{m68k-*-aout} and\n @item -mshort\n @opindex mshort\n Consider type @code{int} to be 16 bits wide, like @code{short int}.\n+Additionally, parameters passed on the stack are also aligned to a\n+16-bit boundary even on targets whose API mandates promotion to 32-bit.\n \n @item -mnobitfield\n @opindex mnobitfield"}]}