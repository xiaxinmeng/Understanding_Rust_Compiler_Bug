{"sha": "dd768f5f255f86bb60893f823b0ffa21ae85890d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ3NjhmNWYyNTVmODZiYjYwODkzZjgyM2IwZmZhMjFhZTg1ODkwZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2002-11-20T01:12:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2002-11-20T01:12:02Z"}, "message": "howto.html: Fix example code...\n\n2002-11-20  Jonathan Wakely  <redi@gcc.gnu.org>\n\n\t* docs/html/21_strings/howto.html: Fix example code, cite Gaby's\n\texplanation of \"<unknown type>\" error with toupper/tolower.\n\t* docs/html/22_locale/howto.html: Be more consistent with\n\texample in 21_strings.\n\nFrom-SVN: r59284", "tree": {"sha": "8a2bfcd670551366f3c0c978a434c3c52f28fd85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a2bfcd670551366f3c0c978a434c3c52f28fd85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd768f5f255f86bb60893f823b0ffa21ae85890d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd768f5f255f86bb60893f823b0ffa21ae85890d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd768f5f255f86bb60893f823b0ffa21ae85890d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd768f5f255f86bb60893f823b0ffa21ae85890d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27dcc451f40505497c3c7788dfd935d4afa897cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27dcc451f40505497c3c7788dfd935d4afa897cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27dcc451f40505497c3c7788dfd935d4afa897cb"}], "stats": {"total": 81, "additions": 57, "deletions": 24}, "files": [{"sha": "34338f7ae13bea9d77e2bd42be48517a91d66dc5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd768f5f255f86bb60893f823b0ffa21ae85890d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd768f5f255f86bb60893f823b0ffa21ae85890d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dd768f5f255f86bb60893f823b0ffa21ae85890d", "patch": "@@ -1,3 +1,10 @@\n+2002-11-20  Jonathan Wakely  <redi@gcc.gnu.org>\n+\n+\t* docs/html/21_strings/howto.html: Fix example code, cite Gaby's\n+\texplanation of \"<unknown type>\" error with toupper/tolower.\n+\t* docs/html/22_locale/howto.html: Be more consistent with\n+\texample in 21_strings.\n+\n 2002-11-19  John Gustafsson  <forgoil@rsn.bth.se>\n \n \t* docs/html/20_util/howto.html: Fix typo."}, {"sha": "d862467b2a9b4fe8fa369f7fe0d724f8ec79ceea", "filename": "libstdc++-v3/docs/html/21_strings/howto.html", "status": "modified", "additions": 37, "deletions": 15, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd768f5f255f86bb60893f823b0ffa21ae85890d/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F21_strings%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd768f5f255f86bb60893f823b0ffa21ae85890d/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F21_strings%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F21_strings%2Fhowto.html?ref=dd768f5f255f86bb60893f823b0ffa21ae85890d", "patch": "@@ -278,19 +278,32 @@ <h2><a name=\"4\">Simple transformations</a></h2>\n    #include &lt;algorithm&gt;\n    #include &lt;cctype&gt;      // old &lt;ctype.h&gt;\n \n-   std::string  s (\"Some Kind Of Initial Input Goes Here\");\n+   struct ToLower\n+   {\n+     char operator() (char c) const  { return std::tolower(c); }\n+   };\n+\n+   struct ToUpper\n+   {\n+     char operator() (char c) const  { return std::toupper(c); }\n+   };\n \n-   // Change everything into upper case\n-   std::transform (s.begin(), s.end(), s.begin(), toupper);\n+   int main()\n+   {\n+     std::string  s (\"Some Kind Of Initial Input Goes Here\");\n+\n+     // Change everything into upper case\n+     std::transform (s.begin(), s.end(), s.begin(), ToUpper());\n \n-   // Change everything into lower case\n-   std::transform (s.begin(), s.end(), s.begin(), tolower);\n+     // Change everything into lower case\n+     std::transform (s.begin(), s.end(), s.begin(), ToLower());\n \n-   // Change everything back into upper case, but store the\n-   // result in a different string\n-   std::string  capital_s;\n-   capital_s.reserve(s.size());\n-   std::transform (s.begin(), s.end(), capital_s.begin(), tolower); </pre>\n+     // Change everything back into upper case, but store the\n+     // result in a different string\n+     std::string  capital_s;\n+     capital_s.resize(s.size());\n+     std::transform (s.begin(), s.end(), capital_s.begin(), ToUpper());\n+   } </pre>\n    <p><span class=\"larger\"><strong>Note</strong></span> that these calls all\n       involve the global C locale through the use of the C functions\n       <code>toupper/tolower</code>.  This is absolutely guaranteed to work --\n@@ -301,19 +314,28 @@ <h2><a name=\"4\">Simple transformations</a></h2>\n       So, if all your input forevermore consists of only those 96\n       characters (hahahahahaha), then you're done.\n    </p>\n-   <p>At minimum, you can write short wrappers like\n+   <p><span class=\"larger\"><strong>Note</strong></span> that the\n+      <code>ToUpper</code> and <code>ToLower</code> function objects\n+      are needed because <code>toupper</code> and <code>tolower</code>\n+      are overloaded names (declared in <code>&lt;cctype&gt;</code> and\n+      <code>&lt;locale&gt;</code>) so the template-arguments for\n+      <code>transform&lt;&gt;</code> cannot be deduced, as explained in\n+      <a href=\"http://gcc.gnu.org/ml/libstdc++/2002-11/msg00180.html\">this\n+      message</a>.  <!-- section 14.8.2.4 clause 16 in ISO 14882:1998\n+      if you're into that sort of thing -->\n+      At minimum, you can write short wrappers like\n    </p>\n    <pre>\n    char toLower (char c)\n    {\n-      return tolower(static_cast&lt;unsigned char&gt;(c));\n+      return std::tolower(c);\n    } </pre>\n    <p>The correct method is to use a facet for a particular locale\n       and call its conversion functions.  These are discussed more in\n       Chapter 22; the specific part is\n-      <a href=\"../22_locale/howto.html#5\">here</a>, which shows the\n-      final version of this code.  (Thanks to James Kanze for assistance\n-      and suggestions on all of this.)\n+      <a href=\"../22_locale/howto.html#7\">Correct Transformations</a>,\n+      which shows the final version of this code.  (Thanks to James Kanze\n+      for assistance and suggestions on all of this.)\n    </p>\n    <p>Another common operation is trimming off excess whitespace.  Much\n       like transformations, this task is trivial with the use of string's"}, {"sha": "d6a340c9e54828d536df72de37689c7cec31de81", "filename": "libstdc++-v3/docs/html/22_locale/howto.html", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd768f5f255f86bb60893f823b0ffa21ae85890d/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd768f5f255f86bb60893f823b0ffa21ae85890d/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html?ref=dd768f5f255f86bb60893f823b0ffa21ae85890d", "patch": "@@ -168,28 +168,28 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n    #include &lt;algorithm&gt;\n    #include &lt;cctype&gt;      // old &lt;ctype.h&gt;\n \n-   struct Toupper\n+   struct ToUpper\n    {\n-       Toupper(std::locale const&amp; l) : loc(l) {;}\n-       char operator() (char c)  { return std::toupper(c,loc); }\n+       ToUpper(std::locale const&amp; l) : loc(l) {;}\n+       char operator() (char c) const  { return std::toupper(c,loc); }\n    private:\n        std::locale const&amp; loc;\n    };\n    \n-   struct Tolower\n+   struct ToLower\n    {\n-       Tolower(std::locale const&amp; l) : loc(l) {;}\n-       char operator() (char c)  { return std::tolower(c,loc); }\n+       ToLower(std::locale const&amp; l) : loc(l) {;}\n+       char operator() (char c) const  { return std::tolower(c,loc); }\n    private:\n        std::locale const&amp; loc;\n    };\n    \n    int main ()\n    {\n       std::string  s(\"Some Kind Of Initial Input Goes Here\");\n-      std::locale loc_c(\"C\");\n-      Toupper      up(loc_c);\n-      Tolower      down(loc_c);\n+      std::locale  loc_c(\"C\");\n+      ToUpper      up(loc_c);\n+      ToLower      down(loc_c);\n    \n       // Change everything into upper case.\n       std::transform(s.begin(), s.end(), s.begin(), up);\n@@ -202,6 +202,10 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n       std::string  capital_s;\n       std::transform(s.begin(), s.end(), std::back_inserter(capital_s), up);\n    }</pre>\n+   <p>The <code>ToUpper</code> and <code>ToLower</code> structs can be\n+      generalized for other character types by making <code>operator()</code>\n+      a member function template.\n+   </p>\n    <p>The final version of the code uses <code>bind2nd</code> to eliminate\n       the wrapper structs, but the resulting code is tricky.  I have not\n       shown it here because no compilers currently available to me will"}]}