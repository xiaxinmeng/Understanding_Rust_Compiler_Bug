{"sha": "137dabdd82648ccd5f0adedea2fbb8504f6c7485", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM3ZGFiZGQ4MjY0OGNjZDVmMGFkZWRlYTJmYmI4NTA0ZjZjNzQ4NQ==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2019-07-22T13:58:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:58:09Z"}, "message": "[Ada] Spurious error passing access to class-wide interface type\n\nThe compiler reports an spurious error when the formal parameter of a\nsubprogram is an access to a class wide interface type and the actual\nparameter is an allocator of an object covering such interface type.\n\n2019-07-22  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Actuals): Replace code that displaces the\n\tpointer to an allocated object to reference its secondary\n\tdispatch table by a type conversion (which takes care of\n\thandling all cases).\n\ngcc/testsuite/\n\n\t* gnat.dg/class_wide5.adb: New testcase.\n\nFrom-SVN: r273690", "tree": {"sha": "c887c30fcdaabe5e2a8c2dee4cc5a8f7bd1c647f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c887c30fcdaabe5e2a8c2dee4cc5a8f7bd1c647f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/137dabdd82648ccd5f0adedea2fbb8504f6c7485", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/137dabdd82648ccd5f0adedea2fbb8504f6c7485", "html_url": "https://github.com/Rust-GCC/gccrs/commit/137dabdd82648ccd5f0adedea2fbb8504f6c7485", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/137dabdd82648ccd5f0adedea2fbb8504f6c7485/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f8313ce5a14700907822a4f8c0dc18649276136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8313ce5a14700907822a4f8c0dc18649276136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f8313ce5a14700907822a4f8c0dc18649276136"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "4711b6d3dd97c296136962427f5bf623982cb60f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137dabdd82648ccd5f0adedea2fbb8504f6c7485/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137dabdd82648ccd5f0adedea2fbb8504f6c7485/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=137dabdd82648ccd5f0adedea2fbb8504f6c7485", "patch": "@@ -1,3 +1,10 @@\n+2019-07-22  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Actuals): Replace code that displaces the\n+\tpointer to an allocated object to reference its secondary\n+\tdispatch table by a type conversion (which takes care of\n+\thandling all cases).\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sprint.adb (Sprint_Node_Actual)"}, {"sha": "b668a5102bb6792e0c656457460938b571f92d3d", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137dabdd82648ccd5f0adedea2fbb8504f6c7485/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137dabdd82648ccd5f0adedea2fbb8504f6c7485/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=137dabdd82648ccd5f0adedea2fbb8504f6c7485", "patch": "@@ -4190,17 +4190,16 @@ package body Sem_Res is\n                      DDT : constant Entity_Id :=\n                              Directly_Designated_Type (Base_Type (Etype (F)));\n \n-                     New_Itype : Entity_Id;\n-\n                   begin\n+                     --  Displace the pointer to the object to reference its\n+                     --  secondary dispatch table.\n+\n                      if Is_Class_Wide_Type (DDT)\n                        and then Is_Interface (DDT)\n                      then\n-                        New_Itype := Create_Itype (E_Anonymous_Access_Type, A);\n-                        Set_Etype (New_Itype, Etype (A));\n-                        Set_Directly_Designated_Type\n-                          (New_Itype, Directly_Designated_Type (Etype (A)));\n-                        Set_Etype (A, New_Itype);\n+                        Rewrite (A, Convert_To (Etype (F), Relocate_Node (A)));\n+                        Analyze_And_Resolve (A, Etype (F),\n+                          Suppress => Access_Check);\n                      end if;\n \n                      --  Ada 2005, AI-162:If the actual is an allocator, the"}, {"sha": "2ac298f87cede6dbd93cdc22bfcf814360904b1d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137dabdd82648ccd5f0adedea2fbb8504f6c7485/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137dabdd82648ccd5f0adedea2fbb8504f6c7485/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=137dabdd82648ccd5f0adedea2fbb8504f6c7485", "patch": "@@ -1,3 +1,7 @@\n+2019-07-22  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat.dg/class_wide5.adb: New testcase.\n+\n 2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/opt80.adb: New testcase."}, {"sha": "008273fa0ee9f43069eff411ec7862b8eb3441b2", "filename": "gcc/testsuite/gnat.dg/class_wide5.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137dabdd82648ccd5f0adedea2fbb8504f6c7485/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137dabdd82648ccd5f0adedea2fbb8504f6c7485/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide5.adb?ref=137dabdd82648ccd5f0adedea2fbb8504f6c7485", "patch": "@@ -0,0 +1,11 @@\n+--  { dg-do compile }\n+\n+procedure Class_Wide5 is\n+   type B is interface;\n+   type B_Child is new B with null record;\n+   type B_Ptr is access B'Class;\n+\n+   procedure P (Obj : B_Ptr) is begin null; end;\n+begin\n+   P (new B_child);  -- Test\n+end Class_Wide5;"}]}