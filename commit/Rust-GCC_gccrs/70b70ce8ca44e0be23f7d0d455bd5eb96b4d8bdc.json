{"sha": "70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBiNzBjZThjYTQ0ZTBiZTIzZjdkMGQ0NTViZDVlYjk2YjRkOGJkYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-29T15:36:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-29T15:36:48Z"}, "message": "[multiple changes]\n\n2009-04-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Analyze_Subprogram_Renaming): Improve error message on\n\tbox-defaulted operator in an instantiation, when the type of the\n\toperands is not directly visible.\n\n2009-04-29  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_aggr.adb (Valid_Limited_Ancestor): Undo previous change.\n\t(Resolve_Extension_Aggregate): Call Check_Parameterless_Call after the\n\tanalysis of the ancestor part. Remove prohibition against limited\n\tinterpretations of the ancestor expression in the case of Ada 2005.\n\tRevise error message in overloaded case, adding a message to cover\n\tthe Ada 2005 case.\n\n2009-04-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* xoscons.adb: Minor reformatting\n\n2009-04-29  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): Do not ignore\n\tattribute_definition_clauses for the following attributes when the\n\t-gnatI switch is used: External_Tag, Input, Output, Read, Storage_Pool,\n\tStorage_Size, Write. Otherwise, we get spurious errors (for example,\n\tmissing Read attribute on remote types).\n\n\t* gnat_ugn.texi: Document the change, and add a stern warning.\n\n2009-04-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb (Check_Local_Access): Indicate that value tracing is\n\tdisabled not just for the current scope, but for the innermost dynamic\n\tscope as well.\n\nFrom-SVN: r146979", "tree": {"sha": "354ba68f8595585bb73dc032ebed6244a0ed9280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/354ba68f8595585bb73dc032ebed6244a0ed9280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/comments", "author": null, "committer": null, "parents": [{"sha": "4cc51f5e3814161aec162c8ca55482b422428b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc51f5e3814161aec162c8ca55482b422428b53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc51f5e3814161aec162c8ca55482b422428b53"}], "stats": {"total": 170, "additions": 132, "deletions": 38}, "files": [{"sha": "c11325e1197f0d4d318256dc602e751f44397cbe", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "patch": "@@ -1,3 +1,38 @@\n+2009-04-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): Improve error message on\n+\tbox-defaulted operator in an instantiation, when the type of the\n+\toperands is not directly visible.\n+\n+2009-04-29  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_aggr.adb (Valid_Limited_Ancestor): Undo previous change.\n+\t(Resolve_Extension_Aggregate): Call Check_Parameterless_Call after the\n+\tanalysis of the ancestor part. Remove prohibition against limited\n+\tinterpretations of the ancestor expression in the case of Ada 2005.\n+\tRevise error message in overloaded case, adding a message to cover\n+\tthe Ada 2005 case.\n+\n+2009-04-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* xoscons.adb: Minor reformatting\n+\n+2009-04-29  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): Do not ignore\n+\tattribute_definition_clauses for the following attributes when the\n+\t-gnatI switch is used: External_Tag, Input, Output, Read, Storage_Pool,\n+\tStorage_Size, Write. Otherwise, we get spurious errors (for example,\n+\tmissing Read attribute on remote types).\n+\n+\t* gnat_ugn.texi: Document the change, and add a stern warning.\n+\n+2009-04-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb (Check_Local_Access): Indicate that value tracing is\n+\tdisabled not just for the current scope, but for the innermost dynamic\n+\tscope as well.\n+\n 2009-04-29  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Make-lang.in: Update dependencies"}, {"sha": "4ab16ee75a97dc48e05a0d261a88d07efff95385", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "patch": "@@ -4175,11 +4175,17 @@ see @ref{Character Set Control}.\n \n @item ^-gnatI^/IGNORE_REP_CLAUSES^\n @cindex @option{^-gnatI^IGNORE_REP_CLAUSES^} (@command{gcc})\n-Ignore representation clauses. When this switch is used, all\n+Ignore representation clauses. When this switch is used,\n representation clauses are treated as comments. This is useful\n when initially porting code where you want to ignore rep clause\n problems, and also for compiling foreign code (particularly\n-for use with ASIS).\n+for use with ASIS). The representation clauses that are ignored\n+are: enumeration_representation_clause, record_representation_clause,\n+and attribute_definition_clause for the following attributes:\n+Address, Alignment, Bit_Order, Component_Size, Machine_Radix,\n+Object_Size, Size, Small, Stream_Size, and Value_Size.\n+Note that this option should be used only for compiling -- the\n+code is likely to malfunction at run time.\n \n @item -gnatjnn\n @cindex @option{-gnatjnn} (@command{gcc})"}, {"sha": "9b5efbccd42fe27905ad224b45c8c518106accd9", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "patch": "@@ -2147,14 +2147,6 @@ package body Sem_Aggr is\n          elsif Nkind_In (Anc, N_Aggregate, N_Function_Call) then\n             return True;\n \n-         --  Check for a function name, to cover the case of a parameterless\n-         --  function call which hasn't been resolved yet.\n-\n-         elsif Is_Entity_Name (Anc)\n-           and then Ekind (Entity (Anc)) = E_Function\n-         then\n-            return True;\n-\n          elsif Nkind (Anc) = N_Attribute_Reference\n            and then Attribute_Name (Anc) = Name_Input\n          then\n@@ -2208,7 +2200,11 @@ package body Sem_Aggr is\n    --  Start of processing for Resolve_Extension_Aggregate\n \n    begin\n+      --  Analyze the ancestor part and account for the case where it's\n+      --  a parameterless function call.\n+\n       Analyze (A);\n+      Check_Parameterless_Call (A);\n \n       if not Is_Tagged_Type (Typ) then\n          Error_Msg_N (\"type of extension aggregate must be tagged\", N);\n@@ -2255,8 +2251,11 @@ package body Sem_Aggr is\n \n             Get_First_Interp (A, I, It);\n             while Present (It.Typ) loop\n+               --  Only consider limited interpretations in the Ada 2005 case\n+\n                if Is_Tagged_Type (It.Typ)\n-                  and then not Is_Limited_Type (It.Typ)\n+                 and then (Ada_Version >= Ada_05\n+                            or else not Is_Limited_Type (It.Typ))\n                then\n                   if A_Type /= Any_Type then\n                      Error_Msg_N (\"cannot resolve expression\", A);\n@@ -2270,8 +2269,13 @@ package body Sem_Aggr is\n             end loop;\n \n             if A_Type = Any_Type then\n-               Error_Msg_N\n-                 (\"ancestor part must be non-limited tagged type\", A);\n+               if Ada_Version >= Ada_05 then\n+                  Error_Msg_N (\"ancestor part must be of a tagged type\", A);\n+               else\n+                  Error_Msg_N\n+                    (\"ancestor part must be of a nonlimited tagged type\", A);\n+               end if;\n+\n                return;\n             end if;\n "}, {"sha": "449b0556c85dacd1910b41dd00f510db1fdb4aa8", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -420,7 +420,8 @@ package body Sem_Attr is\n             --  an access, we set a flag to kill all tracked values on any call\n             --  because this access value may be passed around, and any called\n             --  code might use it to access a local procedure which clobbers a\n-            --  tracked value.\n+            --  tracked value. If the scope is a loop or block, indicate that\n+            --  value tracking is disabled for the enclosing subprogram.\n \n             function Get_Kind (E : Entity_Id) return Entity_Kind;\n             --  Distinguish between access to regular/protected subprograms\n@@ -433,6 +434,8 @@ package body Sem_Attr is\n             begin\n                if not Is_Library_Level_Entity (E) then\n                   Set_Suppress_Value_Tracking_On_Call (Current_Scope);\n+                  Set_Suppress_Value_Tracking_On_Call\n+                    (Nearest_Dynamic_Scope (Current_Scope));\n                end if;\n             end Check_Local_Access;\n "}, {"sha": "61ca642e27bcf9d8e5353f6e04d028606742b56a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "patch": "@@ -692,8 +692,40 @@ package body Sem_Ch13 is\n \n    begin\n       if Ignore_Rep_Clauses then\n-         Rewrite (N, Make_Null_Statement (Sloc (N)));\n-         return;\n+         case Id is\n+\n+            --  The following should be ignored\n+\n+            when Attribute_Address        |\n+                 Attribute_Alignment      |\n+                 Attribute_Bit_Order      |\n+                 Attribute_Component_Size |\n+                 Attribute_Machine_Radix  |\n+                 Attribute_Object_Size    |\n+                 Attribute_Size           |\n+                 Attribute_Small          |\n+                 Attribute_Stream_Size    |\n+                 Attribute_Value_Size     =>\n+\n+               Rewrite (N, Make_Null_Statement (Sloc (N)));\n+               return;\n+\n+            --  The following should not be ignored\n+\n+            when Attribute_External_Tag   |\n+                 Attribute_Input          |\n+                 Attribute_Output         |\n+                 Attribute_Read           |\n+                 Attribute_Storage_Pool   |\n+                 Attribute_Storage_Size   |\n+                 Attribute_Write          =>\n+               null;\n+\n+            --  Other cases are errors, which will be caught below\n+\n+            when others =>\n+               null;\n+         end case;\n       end if;\n \n       Analyze (Nam);"}, {"sha": "7b41282288aea47aeb0cf5214f112c14c201dd53", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "patch": "@@ -2370,10 +2370,12 @@ package body Sem_Ch8 is\n             declare\n                F1 : Entity_Id;\n                F2 : Entity_Id;\n+               T1 : Entity_Id;\n \n             begin\n                F1 := First_Formal (Candidate_Renaming);\n                F2 := First_Formal (New_S);\n+               T1 := First_Subtype (Etype (F1));\n \n                while Present (F1) and then Present (F2) loop\n                   Next_Formal (F1);\n@@ -2390,6 +2392,15 @@ package body Sem_Ch8 is\n                     (\"\\missing specification for &\", Spec, F1);\n                   end if;\n                end if;\n+\n+               if Nkind (Nam) = N_Operator_Symbol\n+                 and then From_Default (N)\n+               then\n+                  Error_Msg_Node_2 := T1;\n+                  Error_Msg_NE\n+                    (\"default & on & is not directly visible\",\n+                      Nam, Nam);\n+               end if;\n             end;\n          end if;\n       end if;\n@@ -5040,10 +5051,12 @@ package body Sem_Ch8 is\n       Candidate_Renaming := Empty;\n \n       if not Is_Overloaded (Nam) then\n-         if Entity_Matches_Spec (Entity (Nam), New_S)\n-           and then Is_Visible_Operation (Entity (Nam))\n-         then\n-            Old_S := Entity (Nam);\n+         if Entity_Matches_Spec (Entity (Nam), New_S) then\n+            Candidate_Renaming := New_S;\n+\n+            if Is_Visible_Operation (Entity (Nam)) then\n+               Old_S := Entity (Nam);\n+            end if;\n \n          elsif\n            Present (First_Formal (Entity (Nam)))"}, {"sha": "08aac903c33ddbf2202883816b2d0c40309ac4d7", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=70b70ce8ca44e0be23f7d0d455bd5eb96b4d8bdc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2008, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2008-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,7 +30,7 @@\n --    - the preprocessed C file: s-oscons-tmplt.i\n --    - the generated assembly file: s-oscons-tmplt.s\n \n---  The contents of s-oscons.ads is written on standard output\n+--  The contents of s-oscons.ads is written on standard output.\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n with Ada.Exceptions;          use Ada.Exceptions;\n@@ -59,13 +59,13 @@ procedure XOSCons is\n    -- Information retrieved from assembly listing --\n    -------------------------------------------------\n \n-   --  We need to deal with integer values that can be signed or unsigned,\n-   --  so we need to cater for the maximum range of both cases.\n-\n    type String_Access is access all String;\n    --  Note: we can't use GNAT.Strings for this definition, since that unit\n    --  is not available in older base compilers.\n \n+   --  We need to deal with integer values that can be signed or unsigned, so\n+   --  we need to accomodate the maximum range of both cases.\n+\n    type Int_Value_Type is record\n       Positive  : Boolean;\n       Abs_Value : Long_Unsigned := 0;\n@@ -75,8 +75,8 @@ procedure XOSCons is\n      (CND,     --  Constant (decimal)\n       CNS,     --  Constant (freeform string)\n       TXT);    --  Literal text\n-   --  Recognized markers found in assembly file. These markers are produced\n-   --  by the same-named macros from the C template.\n+   --  Recognized markers found in assembly file. These markers are produced by\n+   --  the same-named macros from the C template.\n \n    type Asm_Info (Kind : Asm_Info_Kind := TXT) is record\n       Line_Number   : Integer;\n@@ -98,16 +98,16 @@ procedure XOSCons is\n       --  Additional descriptive comment for constant, or free-form text (TXT)\n    end record;\n \n-   package Asm_Infos is new GNAT.Table (\n-      Table_Component_Type => Asm_Info,\n+   package Asm_Infos is new GNAT.Table\n+     (Table_Component_Type => Asm_Info,\n       Table_Index_Type     => Integer,\n       Table_Low_Bound      => 1,\n       Table_Initial        => 100,\n       Table_Increment      => 10);\n \n-   Max_Const_Name_Len  : Natural := 0;\n+   Max_Const_Name_Len     : Natural := 0;\n    Max_Constant_Value_Len : Natural := 0;\n-   --  Longest name and longest value lengths\n+   --  Lengths of longest name and longest value\n \n    type Language is (Lang_Ada, Lang_C);\n \n@@ -152,6 +152,7 @@ procedure XOSCons is\n       Info : Asm_Info renames Asm_Infos.Table (Info_Index);\n \n       procedure Put (S : String);\n+      --  Write S to OFile\n \n       ---------\n       -- Put --\n@@ -253,9 +254,7 @@ procedure XOSCons is\n          --  On some platforms, immediate integer values are prefixed with\n          --  a $ or # character in assembly output.\n \n-         if S (First) = '$'\n-           or else S (First) = '#'\n-         then\n+         if S (First) = '$' or else S (First) = '#' then\n             First := First + 1;\n          end if;\n \n@@ -306,6 +305,7 @@ procedure XOSCons is\n                if Info.Kind = CND then\n                   Info.Int_Value := Parse_Int (Line (Index1 .. Index2 - 1));\n                   Info.Value_Len := Index2 - Index1 - 1;\n+\n                else\n                   Info.Text_Value := Field_Alloc;\n                   Info.Value_Len  := Info.Text_Value'Length;\n@@ -322,8 +322,8 @@ procedure XOSCons is\n          if Info.Kind = TXT then\n             Info.Text_Value := Info.Comment;\n \n-         --  Update Max_Constant_Value_Len, but only if this constant has\n-         --  a comment (else the value is allowed to be longer).\n+         --  Update Max_Constant_Value_Len, but only if this constant has a\n+         --  comment (else the value is allowed to be longer).\n \n          elsif Info.Comment'Length > 0 then\n             if Info.Value_Len > Max_Constant_Value_Len then\n@@ -398,7 +398,7 @@ begin\n \n    --  Load C template and output definitions\n \n-   Open (Tmpl_File, In_File, Tmpl_File_Name);\n+   Open   (Tmpl_File, In_File,  Tmpl_File_Name);\n    Create (Ada_OFile, Out_File, Ada_File_Name);\n    Create (C_OFile,   Out_File, C_File_Name);\n \n@@ -446,6 +446,7 @@ begin\n             Output_Info (Lang_C,   C_OFile,   Current_Info);\n             Current_Info := Current_Info + 1;\n          end if;\n+\n          Current_Line := Current_Line + 1;\n       end if;\n    end loop;"}]}