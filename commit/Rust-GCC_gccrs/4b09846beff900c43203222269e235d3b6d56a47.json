{"sha": "4b09846beff900c43203222269e235d3b6d56a47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIwOTg0NmJlZmY5MDBjNDMyMDMyMjIyNjllMjM1ZDNiNmQ1NmE0Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-09-01T18:56:28Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-09-01T18:56:28Z"}, "message": "Makefile.in (gencheck.o): Remove build commands.\n\n\t* Makefile.in (gencheck.o): Remove build commands.\n\t(dummy-conditions.o): Likewise.\n\t(read-rtl.o): Likewise.\n\t(gensupport.o): Likewise.\n\t(genconfig$(build_exeext)): Remove rule.\n\t(genconfig.o): Remove build commands.\n\t(genflags$(build_exeext)): Remove rule.\n\t(genflags.o): Remove build commands.\n\t(gencodes$(build_exeext)): Remove rule.\n\t(gencodes.o): Remove build commands.\n\t(genconstants.o): Remove build commands.\n\t(genemit$(build_exeext)): Remove rule.\n\t(genemit.o): Remove build commands.\n\t(genrecog$(build_exeext)): Remove rule.\n\t(genrecog.o): Remove build commands.\n\t(genextract$(build_exeext)): Remove rule.\n\t(genextract.o): Remove build commands.\n\t(genpeep$(build_exeext)): Remove rule.\n\t(genpeep.o): Remove build commands.\n\t(genattr$(build_exeext)): Remove rule.\n\t(genattr.o): Remove build commands.\n\t(genprognames): New variable.\n\t(genprogs): Likewise.\n\t(genobjs): Likewise.\n\t(genprogs): New rule.\n\t(genobjs): Likewise.\n\t(genattrtab.o): Remove build commands.\n\t(genautomata.o): Likewise.\n\t(genoutput$(build_exeext)): Remove rule.\n\t(genoutput.o): Remove build commands.\n\t(gengenrtl.o): Likewise.\n\t(genpreds.o): Likewise.\n\t(gengtype.o): Likewise.\n\t(genconditions.o): Likewise.\n\t(gen-protos.o): Likewise.\n\t(scan.o): Likewise.\n\t(fix-header.o): Likewise.\n\t(scan-decls.o): Likewise.\n\t(check-g++): Combine with other check targets.\n\t(check-gcc): Likewise.\n\t(check-g77): Likewise.\n\t(check-objc): Likewise.\n\nFrom-SVN: r70980", "tree": {"sha": "082fbfadd4af70151e2fd718c74eb6ff75e51727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/082fbfadd4af70151e2fd718c74eb6ff75e51727"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b09846beff900c43203222269e235d3b6d56a47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b09846beff900c43203222269e235d3b6d56a47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b09846beff900c43203222269e235d3b6d56a47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b09846beff900c43203222269e235d3b6d56a47/comments", "author": null, "committer": null, "parents": [{"sha": "53b49acaa7f0155406311d1fe8637d8d53eb8be8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b49acaa7f0155406311d1fe8637d8d53eb8be8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b49acaa7f0155406311d1fe8637d8d53eb8be8"}], "stats": {"total": 191, "additions": 70, "deletions": 121}, "files": [{"sha": "88c47a1f7455f6a3a594875ecccccfb8dab42064", "filename": "gcc/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b09846beff900c43203222269e235d3b6d56a47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b09846beff900c43203222269e235d3b6d56a47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b09846beff900c43203222269e235d3b6d56a47", "patch": "@@ -1,3 +1,48 @@\n+2003-09-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Makefile.in (gencheck.o): Remove build commands.\n+\t(dummy-conditions.o): Likewise.\n+\t(read-rtl.o): Likewise.\n+\t(gensupport.o): Likewise.\n+\t(genconfig$(build_exeext)): Remove rule.\n+\t(genconfig.o): Remove build commands.\n+\t(genflags$(build_exeext)): Remove rule.\n+\t(genflags.o): Remove build commands.\n+\t(gencodes$(build_exeext)): Remove rule.\n+\t(gencodes.o): Remove build commands.\n+\t(genconstants.o): Remove build commands.\n+\t(genemit$(build_exeext)): Remove rule.\n+\t(genemit.o): Remove build commands.\n+\t(genrecog$(build_exeext)): Remove rule.\n+\t(genrecog.o): Remove build commands.\n+\t(genextract$(build_exeext)): Remove rule.\n+\t(genextract.o): Remove build commands.\n+\t(genpeep$(build_exeext)): Remove rule.\n+\t(genpeep.o): Remove build commands.\n+\t(genattr$(build_exeext)): Remove rule.\n+\t(genattr.o): Remove build commands.\n+\t(genprognames): New variable.\n+\t(genprogs): Likewise.\n+\t(genobjs): Likewise.\n+\t(genprogs): New rule.\n+\t(genobjs): Likewise.\n+\t(genattrtab.o): Remove build commands.\n+\t(genautomata.o): Likewise.\n+\t(genoutput$(build_exeext)): Remove rule.\n+\t(genoutput.o): Remove build commands.\n+\t(gengenrtl.o): Likewise.\n+\t(genpreds.o): Likewise.\n+\t(gengtype.o): Likewise.\n+\t(genconditions.o): Likewise.\n+\t(gen-protos.o): Likewise.\n+\t(scan.o): Likewise.\n+\t(fix-header.o): Likewise.\n+\t(scan-decls.o): Likewise.\n+\t(check-g++): Combine with other check targets.\n+\t(check-gcc): Likewise.\n+\t(check-g77): Likewise.\n+\t(check-objc): Likewise.\n+\n 2003-09-01  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* config.gcc: Remove host-specific stuff which is unused here"}, {"sha": "5c3f8cce5c30552f01ad74164218fa83146b060a", "filename": "gcc/Makefile.in", "status": "modified", "additions": 25, "deletions": 121, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b09846beff900c43203222269e235d3b6d56a47/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b09846beff900c43203222269e235d3b6d56a47/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4b09846beff900c43203222269e235d3b6d56a47", "patch": "@@ -1403,8 +1403,6 @@ gencheck$(build_exeext) : gencheck.o $(BUILD_LIBDEPS)\n \n gencheck.o : gencheck.c gencheck.h tree.def $(BCONFIG_H) $(SYSTEM_H) \\\n \tcoretypes.h $(GTM_H) $(lang_tree_files)\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n-\t  $(srcdir)/gencheck.c $(OUTPUT_OPTION)\n \n gencheck.h : s-gencheck ; @true\n s-gencheck : Makefile\n@@ -1882,8 +1880,6 @@ insn-conditions.o : insn-conditions.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \n dummy-conditions.o : dummy-conditions.c $(BCONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(GTM_H) gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n-\t    $(srcdir)/dummy-conditions.c $(OUTPUT_OPTION)\n \n insn-flags.h: s-flags ; @true\n s-flags : $(md_file) genflags$(build_exeext) $(srcdir)/move-if-change\n@@ -2087,43 +2083,43 @@ s-gtype: gengtype$(build_exeext) $(GTFILES)\n # about the target machine.  They do depend on config.h itself,\n # since that describes the host machine.\n \n+# The names of programs that run on the \"build\" machine.\n+genprognames=genconfig genflags gencodes genemit genopinit genrecog \\\n+\t     genextract genpeep genattr genoutput\n+\n+# The names of the executable files for those programs.\n+genprogs=$(genprognames:%=%$(buildexeext))\n+\n+# Object files used in those programs.\n+genobjs=$(genprognames:%=%.o) read-rtl.o gensupport.o genattrtab.o \\\n+        genautomata.o gengenrtl.o genpreds.o gengtype.o \\\n+\tgenconstants.o gen-protos.o scan.o fix-header.o scan-decls.o \\\n+\tgencheck.o dummy-conditions.o genconditions.o\n+\n+$(genprogs): %$(build_exeext): %.o  $(BUILD_RTL) $(BUILD_SUPPORT) \\\n+\t\t\t       $(BUILD_PRINT) $(BUILD_ERRORS) \\\n+\t                       $(BUILD_LIBDEPS)\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t\t$< $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n+\t\t$(BUILD_ERRORS) $(BUILD_LIBS)\n+\n+$(genobjs): %.o : %.c\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n read-rtl.o: read-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(RTL_H) \\\n   $(OBSTACK_H) $(HASHTAB_H)\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/read-rtl.c $(OUTPUT_OPTION)\n \n gensupport.o: gensupport.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(RTL_H) \\\n   $(OBSTACK_H) errors.h $(HASHTAB_H) gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gensupport.c $(OUTPUT_OPTION)\n-\n-genconfig$(build_exeext) : genconfig.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t  genconfig.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genconfig.o : genconfig.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c $(OUTPUT_OPTION)\n-\n-genflags$(build_exeext) : genflags.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t genflags.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genflags.o : genflags.c $(RTL_H) $(OBSTACK_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c $(OUTPUT_OPTION)\n-\n-gencodes$(build_exeext) : gencodes.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t gencodes.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n gencodes.o : gencodes.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c $(OUTPUT_OPTION)\n \n genconstants$(build_exeext) : genconstants.o $(BUILD_RTL) $(BUILD_EARLY_SUPPORT) \\\n   $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n@@ -2133,67 +2129,24 @@ genconstants$(build_exeext) : genconstants.o $(BUILD_RTL) $(BUILD_EARLY_SUPPORT)\n \n genconstants.o : genconstants.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n   errors.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genconstants.c $(OUTPUT_OPTION)\n-\n-genemit$(build_exeext) : genemit.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t genemit.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genemit.o : genemit.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n   errors.h gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c $(OUTPUT_OPTION)\n-\n-genopinit$(build_exeext) : genopinit.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t genopinit.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genopinit.o : genopinit.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c $(OUTPUT_OPTION)\n-\n-genrecog$(build_exeext) : genrecog.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-    $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t genrecog.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genrecog.o : genrecog.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c $(OUTPUT_OPTION)\n-\n-genextract$(build_exeext) : genextract.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t genextract.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genextract.o : genextract.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) insn-config.h errors.h gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c $(OUTPUT_OPTION)\n-\n-genpeep$(build_exeext) : genpeep.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t genpeep.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genpeep.o : genpeep.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n   errors.h gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c $(OUTPUT_OPTION)\n-\n-genattr$(build_exeext) : genattr.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t genattr.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genattr.o : genattr.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h \\\n   gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c $(OUTPUT_OPTION)\n \n genattrtab$(build_exeext) : genattrtab.o genautomata.o \\\n   $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_VARRAY) \\\n@@ -2205,36 +2158,25 @@ genattrtab$(build_exeext) : genattrtab.o genautomata.o \\\n \n genattrtab.o : genattrtab.c $(RTL_H) $(OBSTACK_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h $(GGC_H) gensupport.h genattrtab.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c $(OUTPUT_OPTION)\n \n genautomata.o : genautomata.c $(RTL_H) $(OBSTACK_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h varray.h genattrtab.h $(HASHTAB_H)\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genautomata.c $(OUTPUT_OPTION)\n-\n-genoutput$(build_exeext) : genoutput.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n-  $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n-\t genoutput.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n-\t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genoutput.o : genoutput.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c $(OUTPUT_OPTION)\n \n gengenrtl$(build_exeext) : gengenrtl.o $(BUILD_LIBDEPS)\n \t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t gengenrtl.o $(BUILD_LIBS)\n \n gengenrtl.o : gengenrtl.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(GTM_H) real.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gengenrtl.c $(OUTPUT_OPTION)\n \n genpreds$(build_exeext) : genpreds.o $(BUILD_LIBDEPS)\n \t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genpreds.o $(BUILD_LIBS)\n \n genpreds.o : genpreds.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genpreds.c $(OUTPUT_OPTION)\n \n gengtype$(build_exeext) : gengtype.o gengtype-lex.o gengtype-yacc.o \\\n   $(BUILD_LIBDEPS)\n@@ -2243,8 +2185,6 @@ gengtype$(build_exeext) : gengtype.o gengtype-lex.o gengtype-yacc.o \\\n \n gengtype.o : gengtype.c gengtype.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n   real.h $(RTL_BASE_H) gtyp-gen.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n-\t  $(srcdir)/gengtype.c $(OUTPUT_OPTION)\n \n gengtype-lex.o : $(parsedir)/gengtype-lex.c gengtype.h $(parsedir)/gengtype-yacc.c \\\n   $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H)\n@@ -2284,8 +2224,6 @@ genconditions$(build_exeext) : genconditions.o $(BUILD_EARLY_SUPPORT) \\\n \n genconditions.o : genconditions.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(GTM_H) errors.h\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/genconditions.c $(OUTPUT_OPTION)\n \n #\f\n # Compile the libraries to be used by gen*.\n@@ -2585,10 +2523,8 @@ gen-protos$(build_exeext): $(GEN_PROTOS_OBJS)\n \t  $(GEN_PROTOS_OBJS) $(BUILD_LIBS)\n \n gen-protos.o: gen-protos.c scan.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c $(OUTPUT_OPTION)\n \n scan.o: scan.c scan.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c $(OUTPUT_OPTION)\n \n xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos$(build_exeext) Makefile\n \tsed -e s/TARGET_GETGROUPS_T/$(TARGET_GETGROUPS_T)/ \\\n@@ -2609,10 +2545,8 @@ fix-header$(build_exeext): fix-header.o scan-decls.o scan.o xsys-protos.h \\\n \n fix-header.o: fix-header.c $(OBSTACK_H) scan.h \\\n \txsys-protos.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(CPPLIB_H)\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c $(OUTPUT_OPTION)\n \n scan-decls.o: scan-decls.c scan.h $(CPPLIB_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c $(OUTPUT_OPTION)\n \n # stmp-fixproto depends on this, not on fix-header directly.\n # The idea is to make sure fix-header gets built,\n@@ -3273,45 +3207,15 @@ $(TESTSUITEDIR)/site.exp: site.exp\n \t-rm -f $@\n \tsed '/set tmpdir/ s|testsuite|$(TESTSUITEDIR)|' < site.exp > $@\n \n-check-g++: $(TESTSUITEDIR)/site.exp\n-\t-(rootme=`${PWD_COMMAND}`; export rootme; \\\n-\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n-\tcd $(TESTSUITEDIR); \\\n-\tEXPECT=${EXPECT} ; export EXPECT ; \\\n-\tif [ -f $${rootme}/../expect/expect ] ; then  \\\n-\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n-\t    export TCL_LIBRARY ; fi ; \\\n-\t$(RUNTEST) --tool g++ $(RUNTESTFLAGS))\n-\n-check-gcc: $(TESTSUITEDIR)/site.exp\n-\t-(rootme=`${PWD_COMMAND}`; export rootme; \\\n-\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n-\tcd $(TESTSUITEDIR); \\\n-\tEXPECT=${EXPECT} ; export EXPECT ; \\\n-\tif [ -f $${rootme}/../expect/expect ] ; then  \\\n-\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n-\t   export TCL_LIBRARY ; fi ; \\\n-\t$(RUNTEST) --tool gcc $(RUNTESTFLAGS))\n-\n-check-g77: $(TESTSUITEDIR)/site.exp\n-\t-(rootme=`${PWD_COMMAND}`; export rootme; \\\n-\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n-\tcd $(TESTSUITEDIR); \\\n-\tEXPECT=${EXPECT} ; export EXPECT ; \\\n-\tif [ -f $${rootme}/../expect/expect ] ; then  \\\n-\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n-\t   export TCL_LIBRARY ; fi ; \\\n-\t$(RUNTEST) --tool g77 $(RUNTESTFLAGS))\n-\n-check-objc: $(TESTSUITEDIR)/site.exp\n+check-g++ check-gcc check-g77 check-objc: check-% : $(TESTSUITEDIR)/site.exp\n \t-(rootme=`${PWD_COMMAND}`; export rootme; \\\n \tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n \tcd $(TESTSUITEDIR); \\\n \tEXPECT=${EXPECT} ; export EXPECT ; \\\n \tif [ -f $${rootme}/../expect/expect ] ; then  \\\n \t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n \t    export TCL_LIBRARY ; fi ; \\\n-\t$(RUNTEST) --tool objc $(RUNTESTFLAGS))\n+\t$(RUNTEST) --tool $* $(RUNTESTFLAGS))\n \n check-consistency: testsuite/site.exp\n \t-rootme=`${PWD_COMMAND}`; export rootme; \\"}]}