{"sha": "d1a2508778aafeaf19ae7e6c3e50cf9aed384854", "node_id": "C_kwDOANBUbNoAKGQxYTI1MDg3NzhhYWZlYWYxOWFlN2U2YzNlNTBjZjlhZWQzODQ4NTQ", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-05-10T00:45:04Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-05-10T00:52:04Z"}, "message": "Assigning members to structures is a coercion site\n\nFix missing coercion site call which allows the coecion of a reference to\na pointer type.\n\nFixes #1235", "tree": {"sha": "8a22562ebd0ac46ee3630b949f2f77c37a35e4be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a22562ebd0ac46ee3630b949f2f77c37a35e4be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1a2508778aafeaf19ae7e6c3e50cf9aed384854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a2508778aafeaf19ae7e6c3e50cf9aed384854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1a2508778aafeaf19ae7e6c3e50cf9aed384854", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a2508778aafeaf19ae7e6c3e50cf9aed384854/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "140f6a698b4d7157e6a33cd7b41c27b39ecbf76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140f6a698b4d7157e6a33cd7b41c27b39ecbf76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/140f6a698b4d7157e6a33cd7b41c27b39ecbf76e"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "a1cd35977ab2ce4f2e845cc40bf0be071346ae54", "filename": "gcc/rust/typecheck/rust-hir-type-check-struct.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1a2508778aafeaf19ae7e6c3e50cf9aed384854/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-struct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1a2508778aafeaf19ae7e6c3e50cf9aed384854/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-struct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-struct.cc?ref=d1a2508778aafeaf19ae7e6c3e50cf9aed384854", "patch": "@@ -44,7 +44,7 @@ TypeCheckStructExpr::visit (HIR::StructExprStructFields &struct_expr)\n \t= TypeCheckExpr::Resolve (struct_expr.struct_base->base_struct.get (),\n \t\t\t\t  false);\n       struct_def\n-\t= (TyTy::ADTType *) struct_path_resolved->unify (base_resolved);\n+\t= (TyTy::ADTType *) struct_path_resolved->coerce (base_resolved);\n       if (struct_def == nullptr)\n \t{\n \t  rust_fatal_error (struct_expr.struct_base->base_struct->get_locus (),\n@@ -222,7 +222,7 @@ TypeCheckStructExpr::visit (HIR::StructExprFieldIdentifierValue &field)\n     }\n \n   TyTy::BaseType *value = TypeCheckExpr::Resolve (field.get_value (), false);\n-  resolved_field_value_expr = field_type->get_field_type ()->unify (value);\n+  resolved_field_value_expr = field_type->get_field_type ()->coerce (value);\n   if (resolved_field_value_expr != nullptr)\n     {\n       fields_assigned.insert (field.field_name);\n@@ -251,7 +251,7 @@ TypeCheckStructExpr::visit (HIR::StructExprFieldIndexValue &field)\n     }\n \n   TyTy::BaseType *value = TypeCheckExpr::Resolve (field.get_value (), false);\n-  resolved_field_value_expr = field_type->get_field_type ()->unify (value);\n+  resolved_field_value_expr = field_type->get_field_type ()->coerce (value);\n   if (resolved_field_value_expr != nullptr)\n     {\n       fields_assigned.insert (field_name);\n@@ -285,7 +285,7 @@ TypeCheckStructExpr::visit (HIR::StructExprFieldIdentifier &field)\n \t\t\t    field.get_locus ());\n   TyTy::BaseType *value = TypeCheckExpr::Resolve (&expr, false);\n \n-  resolved_field_value_expr = field_type->get_field_type ()->unify (value);\n+  resolved_field_value_expr = field_type->get_field_type ()->coerce (value);\n   if (resolved_field_value_expr != nullptr)\n \n     {"}, {"sha": "098b337455fe0c5049769a9ada0ea7326c7c842b", "filename": "gcc/testsuite/rust/compile/issue-1235.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1a2508778aafeaf19ae7e6c3e50cf9aed384854/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1235.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1a2508778aafeaf19ae7e6c3e50cf9aed384854/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1235.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1235.rs?ref=d1a2508778aafeaf19ae7e6c3e50cf9aed384854", "patch": "@@ -0,0 +1,21 @@\n+// { dg-additional-options \"-w\" }\n+struct FatPtr<T> {\n+    data: *const T,\n+    len: usize,\n+}\n+\n+pub union Repr<T> {\n+    rust: *const [T],\n+    rust_mut: *mut [T],\n+    raw: FatPtr<T>,\n+}\n+\n+impl<T> [T] {\n+    pub const fn is_empty(&self) -> bool {\n+        self.len() == 0\n+    }\n+\n+    pub const fn len(&self) -> usize {\n+        unsafe { Repr { rust: self }.raw.len }\n+    }\n+}"}]}