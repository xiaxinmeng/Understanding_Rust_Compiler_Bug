{"sha": "5bcb3f1345dc0d9552e03e8f25954bae576cb1aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJjYjNmMTM0NWRjMGQ5NTUyZTAzZThmMjU5NTRiYWU1NzZjYjFhYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1997-04-23T00:39:04Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1997-04-23T00:39:04Z"}, "message": "x\n\nFrom-SVN: r13957", "tree": {"sha": "854275aa8c3b6d6be73289145ff9e69ee2789de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/854275aa8c3b6d6be73289145ff9e69ee2789de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bcb3f1345dc0d9552e03e8f25954bae576cb1aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcb3f1345dc0d9552e03e8f25954bae576cb1aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bcb3f1345dc0d9552e03e8f25954bae576cb1aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcb3f1345dc0d9552e03e8f25954bae576cb1aa/comments", "author": null, "committer": null, "parents": [{"sha": "f76b8156d996d6489f1279514e2ea4fcf39069f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f76b8156d996d6489f1279514e2ea4fcf39069f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f76b8156d996d6489f1279514e2ea4fcf39069f6"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "55189e7d4b363f28af81ce76fa9c6213abf04cf3", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcb3f1345dc0d9552e03e8f25954bae576cb1aa/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcb3f1345dc0d9552e03e8f25954bae576cb1aa/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=5bcb3f1345dc0d9552e03e8f25954bae576cb1aa", "patch": "@@ -2792,9 +2792,13 @@ extern struct rtx_def *legitimize_pic_address ();\n \n #define DBX_REGISTER_NUMBER(REGNO) (REGNO)\n \n-/* On Sun 4, this limit is 2048.  We use 1500 to be safe,\n-   since the length can run past this up to a continuation point.  */\n-#define DBX_CONTIN_LENGTH 1500\n+/* On Sun 4, this limit is 2048.  We use 1000 to be safe, since the length\n+   can run past this up to a continuation point.  Once we used 1500, but\n+   a single entry in C++ can run more than 500 bytes, due to the length of\n+   mangled symbol names.  dbxout.c should really be fixed to do\n+   continuations when they are actually needed instead of trying to\n+   guess...  */\n+#define DBX_CONTIN_LENGTH 1000\n \n /* This is how to output a note to DBX telling it the line number\n    to which the following sequence of instructions corresponds."}]}