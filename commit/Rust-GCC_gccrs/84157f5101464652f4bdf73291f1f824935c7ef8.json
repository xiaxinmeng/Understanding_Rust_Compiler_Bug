{"sha": "84157f5101464652f4bdf73291f1f824935c7ef8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQxNTdmNTEwMTQ2NDY1MmY0YmRmNzMyOTFmMWY4MjQ5MzVjN2VmOA==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-11T21:24:20Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-11T21:24:20Z"}, "message": "checks.adb (Insert_Valid_Check): Apply validity check to expression of conversion, not to result of conversion.\n\n\t* checks.adb (Insert_Valid_Check): Apply validity check to expression\n\tof conversion, not to result of conversion.\n\n\t* sem_ch3.adb (Build_Derived_Record_Type): set Controlled flag\n\tbefore freezing parent. If the declarations are mutually recursive,\n\tan access to the current record type may be frozen before the\n\tderivation is complete.\n\nFrom-SVN: r47894", "tree": {"sha": "3e640f733e4608234c44262bc8cf7393e393fc6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e640f733e4608234c44262bc8cf7393e393fc6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84157f5101464652f4bdf73291f1f824935c7ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84157f5101464652f4bdf73291f1f824935c7ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84157f5101464652f4bdf73291f1f824935c7ef8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84157f5101464652f4bdf73291f1f824935c7ef8/comments", "author": null, "committer": null, "parents": [{"sha": "d5d7ae5c7510724e87d1d98e3f6f3866337da223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5d7ae5c7510724e87d1d98e3f6f3866337da223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5d7ae5c7510724e87d1d98e3f6f3866337da223"}], "stats": {"total": 60, "additions": 41, "deletions": 19}, "files": [{"sha": "9a1631ba9adadc596e09822b0051602ca05f0388", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84157f5101464652f4bdf73291f1f824935c7ef8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84157f5101464652f4bdf73291f1f824935c7ef8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=84157f5101464652f4bdf73291f1f824935c7ef8", "patch": "@@ -1,3 +1,15 @@\n+2001-12-11  Robert Dewar <dewar@gnat.com>\n+\n+\t* checks.adb (Insert_Valid_Check): Apply validity check to expression \n+\tof conversion, not to result of conversion.\n+\n+2001-12-11  Ed Schonberg <schonber@gnat.com>\n+\t\n+\t* sem_ch3.adb (Build_Derived_Record_Type): set Controlled flag \n+\tbefore freezing parent. If the declarations are mutually recursive, \n+\tan access to the current record type may be frozen before the \n+\tderivation is complete.\n+\n 2001-12-05  Vincent Celier <celier@gnat.com>\n \n \t* gnatcmd.adb: (MAKE): Add new translations: -b /BIND_ONLY, "}, {"sha": "bf8064175586157f7e5c1fbd60a8cf23b4f6bd7d", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 28, "deletions": 19, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84157f5101464652f4bdf73291f1f824935c7ef8/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84157f5101464652f4bdf73291f1f824935c7ef8/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=84157f5101464652f4bdf73291f1f824935c7ef8", "patch": "@@ -2691,34 +2691,43 @@ package body Checks is\n \n    procedure Insert_Valid_Check (Expr : Node_Id) is\n       Loc : constant Source_Ptr := Sloc (Expr);\n+      Exp : Node_Id;\n \n    begin\n       --  Do not insert if checks off, or if not checking validity\n \n       if Range_Checks_Suppressed (Etype (Expr))\n         or else (not Validity_Checks_On)\n       then\n-         null;\n+         return;\n+      end if;\n \n-      --  Otherwise insert the validity check. Note that we do this with\n-      --  validity checks turned off, to avoid recursion, we do not want\n-      --  validity checks on the validity checking code itself!\n+      --  If we have a checked conversion, then validity check applies to\n+      --  the expression inside the conversion, not the result, since if\n+      --  the expression inside is valid, then so is the conversion result.\n \n-      else\n-         Validity_Checks_On := False;\n-         Insert_Action\n-           (Expr,\n-            Make_Raise_Constraint_Error (Loc,\n-              Condition =>\n-                Make_Op_Not (Loc,\n-                  Right_Opnd =>\n-                    Make_Attribute_Reference (Loc,\n-                      Prefix =>\n-                        Duplicate_Subexpr (Expr, Name_Req => True),\n-                      Attribute_Name => Name_Valid))),\n-            Suppress => All_Checks);\n-         Validity_Checks_On := True;\n-      end if;\n+      Exp := Expr;\n+      while Nkind (Exp) = N_Type_Conversion loop\n+         Exp := Expression (Exp);\n+      end loop;\n+\n+      --  insert the validity check. Note that we do this with validity\n+      --  checks turned off, to avoid recursion, we do not want validity\n+      --  checks on the validity checking code itself!\n+\n+      Validity_Checks_On := False;\n+      Insert_Action\n+        (Expr,\n+         Make_Raise_Constraint_Error (Loc,\n+           Condition =>\n+             Make_Op_Not (Loc,\n+               Right_Opnd =>\n+                 Make_Attribute_Reference (Loc,\n+                   Prefix =>\n+                     Duplicate_Subexpr (Exp, Name_Req => True),\n+                   Attribute_Name => Name_Valid))),\n+         Suppress => All_Checks);\n+      Validity_Checks_On := True;\n    end Insert_Valid_Check;\n \n    --------------------------"}, {"sha": "dff460cfca244aed4af57b51a0e2702db8c6c4bb", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84157f5101464652f4bdf73291f1f824935c7ef8/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84157f5101464652f4bdf73291f1f824935c7ef8/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=84157f5101464652f4bdf73291f1f824935c7ef8", "patch": "@@ -5032,6 +5032,7 @@ package body Sem_Ch3 is\n       Set_Size_Info      (Derived_Type,                 Parent_Type);\n       Set_RM_Size        (Derived_Type, RM_Size        (Parent_Type));\n       Set_Convention     (Derived_Type, Convention     (Parent_Type));\n+      Set_Is_Controlled  (Derived_Type, Is_Controlled  (Parent_Type));\n       Set_First_Rep_Item (Derived_Type, First_Rep_Item (Parent_Type));\n \n       case Ekind (Parent_Type) is"}]}