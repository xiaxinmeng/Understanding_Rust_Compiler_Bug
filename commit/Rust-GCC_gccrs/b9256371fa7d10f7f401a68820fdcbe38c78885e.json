{"sha": "b9256371fa7d10f7f401a68820fdcbe38c78885e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkyNTYzNzFmYTdkMTBmN2Y0MDFhNjg4MjBmZGNiZTM4Yzc4ODg1ZQ==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-05-21T07:52:41Z"}, "committer": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-05-21T07:52:41Z"}, "message": "configure.in: Check for unistd.h as well.\n\n0\n\t* configure.in: Check for unistd.h as well.\n\t* configure: Rebuild.\n\t* config.in: Rebuild.\n\t* getpagesize.c (GNU_OUR_PAGESIZE): Use sysconf only if _SC_PAGESIZE\n\tis defined in unistd.h. Reformat conditional block for easier reading.\n\t* config.table (shared): Default to no if ${enable_shared}\n\tis unset or empty; this logic is used by the toplevel\n\tconfigure scripts, too.\n\nFrom-SVN: r19924", "tree": {"sha": "1171f46d2f27ceab4a009d3956976bac047427ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1171f46d2f27ceab4a009d3956976bac047427ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9256371fa7d10f7f401a68820fdcbe38c78885e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9256371fa7d10f7f401a68820fdcbe38c78885e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9256371fa7d10f7f401a68820fdcbe38c78885e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9256371fa7d10f7f401a68820fdcbe38c78885e/comments", "author": null, "committer": null, "parents": [{"sha": "3fe97d74adf47f126ba3c19e633826eeb95c2662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe97d74adf47f126ba3c19e633826eeb95c2662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe97d74adf47f126ba3c19e633826eeb95c2662"}], "stats": {"total": 56, "additions": 32, "deletions": 24}, "files": [{"sha": "4195348d537ca6f4b28072be45cf52013e328c83", "filename": "libiberty/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9256371fa7d10f7f401a68820fdcbe38c78885e/libiberty%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9256371fa7d10f7f401a68820fdcbe38c78885e/libiberty%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.in?ref=b9256371fa7d10f7f401a68820fdcbe38c78885e", "patch": "@@ -186,3 +186,6 @@\n \n /* Define if you have the <sys/param.h> header file.  */\n #undef HAVE_SYS_PARAM_H\n+\n+/* Define if you have the <unistd.h> header file.  */\n+#undef HAVE_UNISTD_H"}, {"sha": "4b4dee50da2811fe87e622964e6794eb1f31cea1", "filename": "libiberty/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9256371fa7d10f7f401a68820fdcbe38c78885e/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9256371fa7d10f7f401a68820fdcbe38c78885e/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=b9256371fa7d10f7f401a68820fdcbe38c78885e", "patch": "@@ -1019,7 +1019,7 @@ else\n fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n-for ac_hdr in sys/file.h sys/param.h stdlib.h string.h\n+for ac_hdr in sys/file.h sys/param.h stdlib.h string.h unistd.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6"}, {"sha": "564d6c02312f4935262ef95ae580eb3d301ab271", "filename": "libiberty/getpagesize.c", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9256371fa7d10f7f401a68820fdcbe38c78885e/libiberty%2Fgetpagesize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9256371fa7d10f7f401a68820fdcbe38c78885e/libiberty%2Fgetpagesize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fgetpagesize.c?ref=b9256371fa7d10f7f401a68820fdcbe38c78885e", "patch": "@@ -35,31 +35,36 @@ BUGS\n #include <sys/param.h>\n #endif\n \n-#ifdef HAVE_SYSCONF\n+#undef GNU_OUR_PAGESIZE\n+#if defined (HAVE_SYSCONF) && defined (HAVE_UNISTD_H)\n #include <unistd.h>\n+#ifdef _SC_PAGESIZE\n #define GNU_OUR_PAGESIZE sysconf(_SC_PAGESIZE)\n-#else\n-#ifdef\tPAGESIZE\n-#define\tGNU_OUR_PAGESIZE PAGESIZE\n-#else\t/* no PAGESIZE */\n-#ifdef\tEXEC_PAGESIZE\n-#define\tGNU_OUR_PAGESIZE EXEC_PAGESIZE\n-#else\t/* no EXEC_PAGESIZE */\n-#ifdef\tNBPG\n-#define\tGNU_OUR_PAGESIZE (NBPG * CLSIZE)\n-#ifndef\tCLSIZE\n-#define\tCLSIZE 1\n-#endif\t/* CLSIZE */\n-#else\t/* no NBPG */\n-#ifdef\tNBPC\n-#define\tGNU_OUR_PAGESIZE NBPC\n-#else\t/* no NBPC */\n-#define\tGNU_OUR_PAGESIZE 4096\t/* Just punt and use reasonable value */\n-#endif /* NBPC */\n-#endif /* NBPG */\n-#endif /* EXEC_PAGESIZE */\n-#endif /* PAGESIZE */\n-#endif /* HAVE_SYSCONF */\n+#endif\n+#endif\n+\n+#ifndef GNU_OUR_PAGESIZE\n+# ifdef\tPAGESIZE\n+#  define\tGNU_OUR_PAGESIZE PAGESIZE\n+# else\t/* no PAGESIZE */\n+#  ifdef\tEXEC_PAGESIZE\n+#   define\tGNU_OUR_PAGESIZE EXEC_PAGESIZE\n+#  else\t/* no EXEC_PAGESIZE */\n+#   ifdef\tNBPG\n+#    define\tGNU_OUR_PAGESIZE (NBPG * CLSIZE)\n+#    ifndef\tCLSIZE\n+#     define\tCLSIZE 1\n+#    endif\t/* CLSIZE */\n+#   else\t/* no NBPG */\n+#    ifdef\tNBPC\n+#     define\tGNU_OUR_PAGESIZE NBPC\n+#    else\t/* no NBPC */\n+#     define\tGNU_OUR_PAGESIZE 4096\t/* Just punt and use reasonable value */\n+#    endif /* NBPC */\n+#   endif /* NBPG */\n+#  endif /* EXEC_PAGESIZE */\n+# endif /* PAGESIZE */\n+#endif /* GNU_OUR_PAGESIZE */\n \n int\n getpagesize ()"}]}