{"sha": "52a6b06c26346cfb6972252ef547720b431844e6", "node_id": "C_kwDOANBUbNoAKDUyYTZiMDZjMjYzNDZjZmI2OTcyMjUyZWY1NDc3MjBiNDMxODQ0ZTY", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-12-29T08:34:32Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-12-29T08:35:20Z"}, "message": "i386: Robustify some expanders w.r.t. paradoxical SUBREGs\n\nlowpart_subreg might fail in some cases when trying to create paradoxical\nSUBREGs.  Use force_reg on input operand, use new temporary output operand\nand emit move into the destination afterwards.\n\nAlso, replace simplify_gen_subreg (Mx, op, My, 0)\nwith equivalent lowpart_subreg (Mx, op, My).\n\n2021-12-29  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\n\t* config/i386/sse.md (vec_pack<floatprefix>_float_<mode>):\n\tPerform gen_avx512dq_float<floatunssuffix>v2div2sf2 into a\n\tpseudo and emit move insn into operands[0].\n\t(fix<fixunssuffix>_truncv2sfv2di2): Use lowpart_subreg\n\tinstead of simplify_gen_subreg.\n\t(trunc<mode><pmov_dst_3_lower>2): Perform\n\tgen_avx512vl_truncate<mode>v<ssescalarnum>qi2 into a\n\tpseudo and emit move insn into operands[0].\n\t(trunc<mode><pmov_dst_4_lower>2): Perform\n\tgen_avx512vl_truncate<mode>v<ssescalarnum>hi2 into a\n\tpseudo and emit move insn into operands[0].\n\t(truncv2div2si2): Perform gen_avx512vl_truncatev2div2si2 into a\n\tpseudo and emit move insn into operands[0].\n\t(truncv8div8qi2): Perform gen_avx512f_truncatev8div16qi2 into a\n\tpseudo and emit move insn into operands[0].\n\t(<any_extend:insn>v8qiv8hi2): Use lowpart_subreg\n\tinstead of simplify_gen_subreg.\n\t(<any_extend:insn>v8qiv8si2): Ditto.\n\t(<any_extend:insn>v4qiv4si2): Ditto.\n\t(<any_extend:insn>v4hiv4si2): Ditto.\n\t(<any_extend:insn>v8qiv8di2): Ditto.\n\t(<any_extend:insn>v4qiv4di2): Ditto.\n\t(<any_extend:insn>v2qiv2di2): Ditto.\n\t(<any_extend:insn>v4hiv4di2): Ditto.\n\t(<any_extend:insn>v2hiv2di2): Ditto.\n\t(<any_extend:insn>v2siv2di2): Ditto.", "tree": {"sha": "315f544e2a7f214c3828eb155a39604bc7c1be31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/315f544e2a7f214c3828eb155a39604bc7c1be31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52a6b06c26346cfb6972252ef547720b431844e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a6b06c26346cfb6972252ef547720b431844e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52a6b06c26346cfb6972252ef547720b431844e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a6b06c26346cfb6972252ef547720b431844e6/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44372676e81358de29d5c853685a7664a95d8a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44372676e81358de29d5c853685a7664a95d8a96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44372676e81358de29d5c853685a7664a95d8a96"}], "stats": {"total": 115, "additions": 65, "deletions": 50}, "files": [{"sha": "0997d9edf9dbd36f916fbd1b425b02bdc94a2308", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 65, "deletions": 50, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a6b06c26346cfb6972252ef547720b431844e6/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a6b06c26346cfb6972252ef547720b431844e6/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=52a6b06c26346cfb6972252ef547720b431844e6", "patch": "@@ -8115,9 +8115,12 @@\n \t(any_float:V2SF (match_operand:V2DI 1 \"nonimmediate_operand\")))]\n   \"TARGET_AVX512DQ && TARGET_AVX512VL\"\n {\n-  operands[0] = simplify_gen_subreg (V4SFmode, operands[0], V2SFmode, 0);\n+  rtx op0 = gen_reg_rtx (V4SFmode);\n+\n   emit_insn (gen_avx512dq_float<floatunssuffix>v2div2sf2\n-\t     (operands[0], operands[1]));\n+\t     (op0, operands[1]));\n+\n+  emit_move_insn (operands[0], lowpart_subreg (V2SFmode, op0, V4SFmode));\n   DONE;\n })\n \n@@ -8547,10 +8550,10 @@\n \t  (match_operand:V2SF 1 \"register_operand\")))]\n   \"TARGET_AVX512DQ && TARGET_AVX512VL\"\n {\n-  operands[1] = force_reg (V2SFmode, operands[1]);\n-  operands[1] = simplify_gen_subreg (V4SFmode, operands[1], V2SFmode, 0);\n+  rtx op1 = force_reg (V2SFmode, operands[1]);\n+  op1 = lowpart_subreg (V4SFmode, op1, V2SFmode);\n   emit_insn (gen_avx512dq_fix<fixunssuffix>_truncv2sfv2di2\n-\t     (operands[0], operands[1]));\n+\t     (operands[0], op1));\n   DONE;\n })\n \n@@ -13631,10 +13634,13 @@\n \t  (match_operand:PMOV_SRC_MODE_3 1 \"register_operand\")))]\n   \"TARGET_AVX512VL\"\n {\n-  operands[0] = simplify_gen_subreg (V16QImode, operands[0], <pmov_dst_3>mode, 0);\n-  emit_insn (gen_avx512vl_truncate<mode>v<ssescalarnum>qi2 (operands[0],\n-\t\t\t\t\t\t\t    operands[1],\n-\t\t\t\t\t\t\t    CONST0_RTX (<pmov_dst_zeroed_3>mode)));\n+  rtx op0 = gen_reg_rtx (V16QImode);\n+\n+  emit_insn (gen_avx512vl_truncate<mode>v<ssescalarnum>qi2\n+\t     (op0, operands[1], CONST0_RTX (<pmov_dst_zeroed_3>mode)));\n+\n+  emit_move_insn (operands[0],\n+\t\t  lowpart_subreg (<pmov_dst_3>mode, op0, V16QImode));\n   DONE;\n })\n \n@@ -14006,12 +14012,14 @@\n \t  (match_operand:PMOV_SRC_MODE_4 1 \"register_operand\")))]\n   \"TARGET_AVX512VL\"\n {\n-  operands[0] = simplify_gen_subreg (V8HImode, operands[0], <pmov_dst_4>mode, 0);\n-  emit_insn (gen_avx512vl_truncate<mode>v<ssescalarnum>hi2 (operands[0],\n-\t\t\t\t\t\t\t    operands[1],\n-\t\t\t\t\t\t\t    CONST0_RTX (<pmov_dst_zeroed_4>mode)));\n-  DONE;\n+  rtx op0 = gen_reg_rtx (V8HImode);\n+\n+  emit_insn (gen_avx512vl_truncate<mode>v<ssescalarnum>hi2\n+\t     (op0, operands[1], CONST0_RTX (<pmov_dst_zeroed_4>mode)));\n \n+  emit_move_insn (operands[0],\n+\t\t  lowpart_subreg (<pmov_dst_4>mode, op0, V8HImode));\n+  DONE;\n })\n \n (define_insn \"avx512vl_<code><mode>v<ssescalarnum>hi2\"\n@@ -14251,10 +14259,13 @@\n \t  (match_operand:V2DI 1 \"register_operand\")))]\n   \"TARGET_AVX512VL\"\n {\n-  operands[0] = simplify_gen_subreg (V4SImode, operands[0], V2SImode, 0);\n-  emit_insn (gen_avx512vl_truncatev2div2si2 (operands[0],\n-\t\t\t\t\t     operands[1],\n-\t\t\t\t\t     CONST0_RTX (V2SImode)));\n+  rtx op0 = gen_reg_rtx (V4SImode);\n+\n+  emit_insn (gen_avx512vl_truncatev2div2si2\n+\t     (op0, operands[1], CONST0_RTX (V2SImode)));\n+\n+  emit_move_insn (operands[0],\n+\t\t  lowpart_subreg (V2SImode, op0, V4SImode));\n   DONE;\n })\n \n@@ -14389,8 +14400,12 @@\n \t    (match_operand:V8DI 1 \"register_operand\")))]\n   \"TARGET_AVX512F\"\n {\n-  operands[0] = simplify_gen_subreg (V16QImode, operands[0], V8QImode, 0);\n-  emit_insn (gen_avx512f_truncatev8div16qi2 (operands[0], operands[1]));\n+  rtx op0 = gen_reg_rtx (V16QImode);\n+\n+  emit_insn (gen_avx512f_truncatev8div16qi2 (op0, operands[1]));\n+\n+  emit_move_insn (operands[0],\n+\t\t  lowpart_subreg (V8QImode, op0, V16QImode));\n   DONE;\n })\n \n@@ -21625,9 +21640,9 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = force_reg (V8QImode, operands[1]);\n-      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V8QImode, 0);\n-      emit_insn (gen_sse4_1_<code>v8qiv8hi2 (operands[0], operands[1]));\n+      rtx op1 = force_reg (V8QImode, operands[1]);\n+      op1 = lowpart_subreg (V16QImode, op1, V8QImode);\n+      emit_insn (gen_sse4_1_<code>v8qiv8hi2 (operands[0], op1));\n       DONE;\n     }\n })\n@@ -21703,9 +21718,9 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = force_reg (V8QImode, operands[1]);\n-      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V8QImode, 0);\n-      emit_insn (gen_avx2_<code>v8qiv8si2 (operands[0], operands[1]));\n+      rtx op1 = force_reg (V8QImode, operands[1]);\n+      op1 = lowpart_subreg (V16QImode, op1, V8QImode);\n+      emit_insn (gen_avx2_<code>v8qiv8si2 (operands[0], op1));\n       DONE;\n     }\n })\n@@ -21767,9 +21782,9 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = force_reg (V4QImode, operands[1]);\n-      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V4QImode, 0);\n-      emit_insn (gen_sse4_1_<code>v4qiv4si2 (operands[0], operands[1]));\n+      rtx op1 = force_reg (V4QImode, operands[1]);\n+      op1 = lowpart_subreg (V16QImode, op1, V4QImode);\n+      emit_insn (gen_sse4_1_<code>v4qiv4si2 (operands[0], op1));\n       DONE;\n     }\n })\n@@ -21935,9 +21950,9 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = force_reg (V4HImode, operands[1]);\n-      operands[1] = simplify_gen_subreg (V8HImode, operands[1], V4HImode, 0);\n-      emit_insn (gen_sse4_1_<code>v4hiv4si2 (operands[0], operands[1]));\n+      rtx op1 = force_reg (V4HImode, operands[1]);\n+      op1 = lowpart_subreg (V8HImode, op1, V4HImode);\n+      emit_insn (gen_sse4_1_<code>v4hiv4si2 (operands[0], op1));\n       DONE;\n     }\n })\n@@ -22056,9 +22071,9 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = force_reg (V8QImode, operands[1]);\n-      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V8QImode, 0);\n-      emit_insn (gen_avx512f_<code>v8qiv8di2 (operands[0], operands[1]));\n+      rtx op1 = force_reg (V8QImode, operands[1]);\n+      op1 = lowpart_subreg (V16QImode, op1, V8QImode);\n+      emit_insn (gen_avx512f_<code>v8qiv8di2 (operands[0], op1));\n       DONE;\n     }\n })\n@@ -22118,9 +22133,9 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = force_reg (V4QImode, operands[1]);\n-      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V4QImode, 0);\n-      emit_insn (gen_avx2_<code>v4qiv4di2 (operands[0], operands[1]));\n+      rtx op1 = force_reg (V4QImode, operands[1]);\n+      op1 = lowpart_subreg (V16QImode, operands[1], V4QImode);\n+      emit_insn (gen_avx2_<code>v4qiv4di2 (operands[0], op1));\n       DONE;\n     }\n })\n@@ -22145,9 +22160,9 @@\n \t  (match_operand:V2QI 1 \"register_operand\")))]\n   \"TARGET_SSE4_1\"\n {\n-  operands[1] = force_reg (V2QImode, operands[1]);\n-  operands[1] = simplify_gen_subreg (V16QImode, operands[1], V2QImode, 0);\n-  emit_insn (gen_sse4_1_<code>v2qiv2di2 (operands[0], operands[1]));\n+  rtx op1 = force_reg (V2QImode, operands[1]);\n+  op1 = lowpart_subreg (V16QImode, op1, V2QImode);\n+  emit_insn (gen_sse4_1_<code>v2qiv2di2 (operands[0], op1));\n   DONE;\n })\n \n@@ -22218,9 +22233,9 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = force_reg (V4HImode, operands[1]);\n-      operands[1] = simplify_gen_subreg (V8HImode, operands[1], V4HImode, 0);\n-      emit_insn (gen_avx2_<code>v4hiv4di2 (operands[0], operands[1]));\n+      rtx op1 = force_reg (V4HImode, operands[1]);\n+      op1 = lowpart_subreg (V8HImode, op1, V4HImode);\n+      emit_insn (gen_avx2_<code>v4hiv4di2 (operands[0], op1));\n       DONE;\n     }\n })\n@@ -22280,9 +22295,9 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = force_reg (V2HImode, operands[1]);\n-      operands[1] = simplify_gen_subreg (V8HImode, operands[1], V2HImode, 0);\n-      emit_insn (gen_sse4_1_<code>v2hiv2di2 (operands[0], operands[1]));\n+      rtx op1 = force_reg (V2HImode, operands[1]);\n+      op1 = lowpart_subreg (V8HImode, op1, V2HImode);\n+      emit_insn (gen_sse4_1_<code>v2hiv2di2 (operands[0], op1));\n       DONE;\n     }\n })\n@@ -22497,9 +22512,9 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = force_reg (V2SImode, operands[1]);\n-      operands[1] = simplify_gen_subreg (V4SImode, operands[1], V2SImode, 0);\n-      emit_insn (gen_sse4_1_<code>v2siv2di2 (operands[0], operands[1]));\n+      rtx op1 = force_reg (V2SImode, operands[1]);\n+      op1 = lowpart_subreg (V4SImode, op1, V2SImode);\n+      emit_insn (gen_sse4_1_<code>v2siv2di2 (operands[0], op1));\n       DONE;\n     }\n })"}]}