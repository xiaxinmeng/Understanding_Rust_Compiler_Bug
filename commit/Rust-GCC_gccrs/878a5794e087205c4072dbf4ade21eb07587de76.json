{"sha": "878a5794e087205c4072dbf4ade21eb07587de76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc4YTU3OTRlMDg3MjA1YzQwNzJkYmY0YWRlMjFlYjA3NTg3ZGU3Ng==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-07-12T14:45:05Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-07-12T14:45:05Z"}, "message": "removed dinkleberries and use xmalloc instead of a private version\n\nFrom-SVN: r34986", "tree": {"sha": "7d2fd8091e15b04900838327a8bf2a8122c99c9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d2fd8091e15b04900838327a8bf2a8122c99c9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/878a5794e087205c4072dbf4ade21eb07587de76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/878a5794e087205c4072dbf4ade21eb07587de76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/878a5794e087205c4072dbf4ade21eb07587de76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/878a5794e087205c4072dbf4ade21eb07587de76/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2964d54fa66aceb9a7637a6c9b05e83da73fbf17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2964d54fa66aceb9a7637a6c9b05e83da73fbf17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2964d54fa66aceb9a7637a6c9b05e83da73fbf17"}], "stats": {"total": 78, "additions": 58, "deletions": 20}, "files": [{"sha": "cf039beecbcb11c307b53d4e2659c4f3e14384a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=878a5794e087205c4072dbf4ade21eb07587de76", "patch": "@@ -1,3 +1,13 @@\n+2000-07-12  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/fixfixes.c: use xmalloc\n+\t* fixinc/fixincl.c(initialize): set program name for xmalloc\n+\t* fixinc/fixlib.c(must_malloc): obsolete\n+\t(is_cxx_header): no longer used - disabled\n+\t(skip_quote): inserted and disabled for future use\n+\t* fixinc/fixlib.h: reflects above\n+\t* fixinc/fixtests.c: removed dinkleberries\n+\n 2000-07-12  Neil Booth  <NeilB@earthling.net>\n \n \t* cpphash.h: (TOKEN_SPELL) Pulled from cpplex.c."}, {"sha": "dd08e808dcf3739da14f5e2f9917e71a5a9eb425", "filename": "gcc/fixinc/fixfixes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixfixes.c?ref=878a5794e087205c4072dbf4ade21eb07587de76", "patch": "@@ -567,7 +567,7 @@ FIX_PROC_HEAD( wrap_fix )\n       *(pz_dst++) = '_';\n \n     if (++len >= sizeof( z_fixname )) {\n-      void* p = must_malloc( len + strlen( pz_src ) + 1 );\n+      void* p = xmalloc( len + strlen( pz_src ) + 1 );\n       memcpy( p, (void*)z_fixname, len );\n       pz_name = (tCC*)p;\n       pz_dst  = (char*)pz_name + len;"}, {"sha": "113827fef2f9ff5b2a580c5b85cf38309a284234", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=878a5794e087205c4072dbf4ade21eb07587de76", "patch": "@@ -206,6 +206,8 @@ initialize ( argc, argv )\n     \"fixincl ERROR:  %s environment variable not defined\\n\\\n \\tTARGET_MACHINE, DESTDIR, SRCDIR and FIND_BASE are required\\n\";\n \n+  xmalloc_set_program_name (argv[0]);\n+\n   switch (argc)\n     {\n     case 1:"}, {"sha": "c2c77ebe0e5a5bf813a63621f7216425bc634eb0", "filename": "gcc/fixinc/fixlib.c", "status": "modified", "additions": 39, "deletions": 15, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixlib.c?ref=878a5794e087205c4072dbf4ade21eb07587de76", "patch": "@@ -24,20 +24,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"fixlib.h\"\n \n-void *\n-must_malloc( siz )\n-    size_t  siz;\n-{\n-  void*  res = malloc( siz );\n-\n-  if (res == (void*)NULL) {\n-    fprintf( stderr, \"fixincl failed to malloc %d bytes\\n\", siz );\n-    exit( 3 );\n-  }\n-\n-  return res;\n-}\n-\n /* * * * * * * * * * * * *\n  \n    load_file_data loads all the contents of a file into malloc-ed memory.\n@@ -95,7 +81,7 @@ load_file_data (fp)\n   return pz_data;\n }\n \n-\n+#ifdef IS_CXX_HEADER_NEEDED\n t_bool\n is_cxx_header (fname, text)\n      tCC *fname;\n@@ -153,6 +139,44 @@ template[ \\t]*<|\\\n \t\t   \n   return BOOL_FALSE;\n }\n+#endif /* CXX_TYPE_NEEDED */\n+\n+#ifdef SKIP_QUOTE_NEEDED\n+/*\n+ *  Skip over a quoted string.  Single quote strings may\n+ *  contain multiple characters if the first character is\n+ *  a backslash.  Especially a backslash followed by octal digits.\n+ *  We are not doing a correctness syntax check here.\n+ */\n+tCC*\n+skip_quote( q, text )\n+  char  q;\n+  char* text;\n+{\n+  for (;;)\n+    {\n+      char ch = *(text++);\n+      switch (ch)\n+        {\n+        case '\\\\':\n+          text++; /* skip over whatever character follows */\n+          break;\n+\n+        case '\"':\n+        case '\\'':\n+          if (ch != q)\n+            break;\n+          /*FALLTHROUGH*/\n+\n+        case '\\n':\n+        case NUL:\n+          goto skip_done;\n+        }\n+    } skip_done:;\n+\n+  return text;\n+}\n+#endif /* SKIP_QUOTE_NEEDED */\n \n /* * * * * * * * * * * * *\n  "}, {"sha": "99975532d73a868acfe7ae5675d2ccf4de28864d", "filename": "gcc/fixinc/fixlib.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixlib.h?ref=878a5794e087205c4072dbf4ade21eb07587de76", "patch": "@@ -31,6 +31,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"gnu-regex.h\"\n #include \"machname.h\"\n+#include \"libiberty.h\"\n \n #ifndef STDIN_FILENO\n # define STDIN_FILENO   0\n@@ -152,10 +153,14 @@ struct fix_desc\n  *  Exported procedures\n  */\n char * load_file_data _P_(( FILE* fp ));\n+#ifdef IS_CXX_HEADER_NEEDED\n t_bool is_cxx_header  _P_(( tCC* filename, tCC* filetext ));\n+#endif /* IS_CXX_HEADER_NEEDED */\n+#ifdef SKIP_QUOTE_NEEDED\n+tCC*   skip_quote  _P_(( char  q, char* text ));\n+#endif\n void   compile_re     _P_(( tCC* pat, regex_t* re, int match,\n \t\t\t    tCC *e1, tCC *e2 ));\n-void*  must_malloc    _P_(( size_t ));\n \n void apply_fix _P_(( tFixDesc* p_fixd, tCC* filname ));\n apply_fix_p_t run_test _P_((tCC* t_name, tCC* f_name, tCC* text ));"}, {"sha": "0da04b5177430c3921b4daf5e4472ee74ee48700", "filename": "gcc/fixinc/fixtests.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixtests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878a5794e087205c4072dbf4ade21eb07587de76/gcc%2Ffixinc%2Ffixtests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixtests.c?ref=878a5794e087205c4072dbf4ade21eb07587de76", "patch": "@@ -47,9 +47,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"fixlib.h\"\n \n-#define SHOULD_APPLY(afp) ((afp) == APPLY_FIX)\n-apply_fix_p_t run_test();\n-\n typedef struct {\n     tCC*  test_name;\n     apply_fix_p_t (*test_proc)();"}]}