{"sha": "e7d897b851a301c69124a1c94a13d3d766649757", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdkODk3Yjg1MWEzMDFjNjkxMjRhMWM5NGExM2QzZDc2NjY0OTc1Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T12:37:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T12:37:10Z"}, "message": "[multiple changes]\n\n2011-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb, sem_cat.adb: Minor reformatting.\n\n2011-08-01  Geert Bosch  <bosch@adacore.com>\n\n\t* atree.ads: Fix comment.\n\nFrom-SVN: r177023", "tree": {"sha": "10b80c95922155a511235ebfec7c842f9c6b184e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10b80c95922155a511235ebfec7c842f9c6b184e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7d897b851a301c69124a1c94a13d3d766649757", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7d897b851a301c69124a1c94a13d3d766649757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7d897b851a301c69124a1c94a13d3d766649757", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7d897b851a301c69124a1c94a13d3d766649757/comments", "author": null, "committer": null, "parents": [{"sha": "460b171de54de807c8d139da4803bd0fae500622", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/460b171de54de807c8d139da4803bd0fae500622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/460b171de54de807c8d139da4803bd0fae500622"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "984e7b3450b178e54b42f1add5f1d2fa02962bd5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7d897b851a301c69124a1c94a13d3d766649757/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7d897b851a301c69124a1c94a13d3d766649757/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e7d897b851a301c69124a1c94a13d3d766649757", "patch": "@@ -1,3 +1,11 @@\n+2011-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb, sem_cat.adb: Minor reformatting.\n+\n+2011-08-01  Geert Bosch  <bosch@adacore.com>\n+\n+\t* atree.ads: Fix comment.\n+\n 2011-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* aspects.ads, aspects.adb (Aspect_Names): Moved from body to spec."}, {"sha": "40d4d8e5d3a073af8340af12305120272ff120d5", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7d897b851a301c69124a1c94a13d3d766649757/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7d897b851a301c69124a1c94a13d3d766649757/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=e7d897b851a301c69124a1c94a13d3d766649757", "patch": "@@ -819,9 +819,9 @@ package Atree is\n \n    function Is_Rewrite_Insertion (Node : Node_Id) return Boolean;\n    pragma Inline (Is_Rewrite_Insertion);\n-   --  Tests whether the given node was marked using Set_Rewrite_Insert. This\n-   --  is used in reconstructing the original tree (where such nodes are to\n-   --  be eliminated from the reconstructed tree).\n+   --  Tests whether the given node was marked using Mark_Rewrite_Insertion.\n+   --  This is used in reconstructing the original tree (where such nodes are\n+   --  to be eliminated from the reconstructed tree).\n \n    procedure Rewrite (Old_Node, New_Node : Node_Id);\n    --  This is used when a complete subtree is to be replaced. Old_Node is the"}, {"sha": "2213ec5840b215d557437133194e641b7226844b", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7d897b851a301c69124a1c94a13d3d766649757/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7d897b851a301c69124a1c94a13d3d766649757/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=e7d897b851a301c69124a1c94a13d3d766649757", "patch": "@@ -7693,7 +7693,7 @@ package body Exp_Ch4 is\n                   --  copy. We don't want to copy complex expressions, and\n                   --  indeed to do so can cause trouble (before we put in\n                   --  this guard, a discriminant expression containing an\n-                  --  AND THEN was copied, causing problems to coverage\n+                  --  AND THEN was copied, causing problems for coverage\n                   --  analysis tools).\n \n                   if Disc = Entity (Selector_Name (N))\n@@ -7723,8 +7723,8 @@ package body Exp_Ch4 is\n                      --  fact incorrect.\n \n                      elsif Is_Entity_Name (Dval)\n-                       and then Nkind (Parent (Entity (Dval)))\n-                                  = N_Object_Declaration\n+                       and then Nkind (Parent (Entity (Dval))) =\n+                                                      N_Object_Declaration\n                        and then Present (Expression (Parent (Entity (Dval))))\n                        and then\n                          not Is_Static_Expression"}, {"sha": "83d3d6a1c5bddd346be3fd76ca8f98284f1378f8", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7d897b851a301c69124a1c94a13d3d766649757/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7d897b851a301c69124a1c94a13d3d766649757/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=e7d897b851a301c69124a1c94a13d3d766649757", "patch": "@@ -1271,9 +1271,9 @@ package body Sem_Cat is\n                --  For controlled type or type with controlled component, check\n                --  preelaboration flag, as there may be a non-null Initialize\n                --  primitive. For language versions earlier than Ada 2005,\n-               --  there is no notion of preelaborable initialization, and the\n-               --  rules for controlled objects are enforced in\n-               --  Validate_Controlled_Object.\n+               --  there is no notion of preelaborable initialization, and\n+               --  Validate_Controlled_Object is used to enforce rules for\n+               --  controlled objects.\n \n                if (Is_Controlled (ET) or else Has_Controlled_Component (ET))\n                     and then Ada_Version >= Ada_2005"}]}