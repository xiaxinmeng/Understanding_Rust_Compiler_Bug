{"sha": "62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "node_id": "C_kwDOANBUbNoAKDYyZWQxMDY2MTk2YzgxYWIxZmFkMTNiMmNjNWViYmZlODg3MTM4Zjk", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-02-28T15:35:12Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-02-28T15:35:12Z"}, "message": "Fix build warnings noreturn M2RTS and fix calls to RegisterModule [PR108956]\n\nmc needs a fix to optionally suppress the generation of the noreturn\nattribute when building M2RTS.  All the hand built C++ modules calling\nRegisterModule must supply the library name.  These changes require\nthe boot strap tools mc and pge to be rebuilt.\n\ngcc/m2/ChangeLog:\n\n\tPR modula2/108956\n\t* Make-lang.in (m2/gm2-libs-boot/M2RTS.o): New specific rule to\n\tadd the --suppress-noreturn option.\n\t* Make-maintainer.in (m2/gm2-ppg-boot/$(SRC_PREFIX)M2RTS.o): New\n\tspecific rule to add the --suppress-noreturn option.\n\t(m2/gm2-pg-boot/$(SRC_PREFIX)M2RTS.o): New\n\tspecific rule to add the --suppress-noreturn option.\n\t(m2/gm2-pg-boot/$(SRC_PREFIX)%.o): Add missing $(srcdir).\n\t(m2/gm2-pge-boot/$(SRC_PREFIX)M2RTS.o): New\n\tspecific rule to add the --suppress-noreturn option.\n\t(m2/gm2-pge-boot/$(SRC_PREFIX)%.o): Add missing $(srcdir).\n\t* gm2-libs-ch/UnixArgs.cc (LIBNAME): New define.\n\t(_M2_UnixArgs_ctor): Add LIBNAME parameter to RegisterModule.\n\t* gm2-libs-ch/dtoa.cc (LIBNAME): New define.\n\t(_M2_dtoa_ctor): Add LIBNAME parameter to RegisterModule.\n\t* gm2-libs-ch/ldtoa.cc (LIBNAME): New define.\n\t(_M2_ldtoa_ctor): Add LIBNAME parameter to RegisterModule.\n\t* pge-boot/m2rts.h (M2RTS_RegisterModule): Add libname\n\tparameter.\n\t* gm2-libs-ch/m2rts.h (M2RTS_RegisterModule): Add libname\n\tparameter.\n\t* mc-boot-ch/GUnixArgs.cc (_M2_UnixArgs_ctor): Remove.\n\t* pge-boot/GUnixArgs.cc (LIBNAME): New define.\n\t(_M2_UnixArgs_ctor): Add LIBNAME parameter to RegisterModule.\n\t* gm2-libs/RTint.def (AttachVector): Rename parameter.\n\t* mc-boot/GDynamicStrings.c: Rebuilt.\n\t* mc-boot/GFIO.c: Rebuilt.\n\t* mc-boot/GIndexing.c: Rebuilt.\n\t* mc-boot/GM2EXCEPTION.c: Rebuilt.\n\t* mc-boot/GPushBackInput.c: Rebuilt.\n\t* mc-boot/GRTExceptions.c: Rebuilt.\n\t* mc-boot/GRTint.c: Rebuilt.\n\t* mc-boot/GRTint.h: Rebuilt.\n\t* mc-boot/GStdIO.c: Rebuilt.\n\t* mc-boot/GStringConvert.c: Rebuilt.\n\t* mc-boot/GSysStorage.c: Rebuilt.\n\t* mc-boot/Gdecl.c: Rebuilt.\n\t* mc-boot/Gkeyc.c: Rebuilt.\n\t* mc-boot/GmcComment.c: Rebuilt.\n\t* mc-boot/GmcComp.c: Rebuilt.\n\t* mc-boot/GmcDebug.c: Rebuilt.\n\t* mc-boot/GmcMetaError.c: Rebuilt.\n\t* mc-boot/GmcOptions.c: Rebuilt.\n\t* mc-boot/GmcOptions.h: Rebuilt.\n\t* mc-boot/GmcStack.c: Rebuilt.\n\t* mc-boot/GnameKey.c: Rebuilt.\n\t* mc-boot/GsymbolKey.c: Rebuilt.\n\t* mc/decl.mod:: Rebuilt.\n\t* mc/mcOptions.def: Rebuilt.\n\t* mc/mcOptions.mod:: Rebuilt.\n\t* pge-boot/GDynamicStrings.c: Rebuilt.\n\t* pge-boot/GFIO.c: Rebuilt.\n\t* pge-boot/GIndexing.c: Rebuilt.\n\t* pge-boot/GM2EXCEPTION.c: Rebuilt.\n\t* pge-boot/GM2RTS.c: Rebuilt.\n\t* pge-boot/GNameKey.c: Rebuilt.\n\t* pge-boot/GPushBackInput.c: Rebuilt.\n\t* pge-boot/GRTExceptions.c: Rebuilt.\n\t* pge-boot/GStdIO.c: Rebuilt.\n\t* pge-boot/GSymbolKey.c: Rebuilt.\n\t* pge-boot/GSysStorage.c: Rebuilt.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "371feb96064118b134a5f5b7a037465e1421669f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/371feb96064118b134a5f5b7a037465e1421669f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/comments", "author": null, "committer": null, "parents": [{"sha": "d918c3a221434521f90cc9b63d5d87f5129e9231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d918c3a221434521f90cc9b63d5d87f5129e9231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d918c3a221434521f90cc9b63d5d87f5129e9231"}], "stats": {"total": 1080, "additions": 594, "deletions": 486}, "files": [{"sha": "644dcf26772bed60c1eede39b93222a32201d369", "filename": "gcc/m2/Make-lang.in", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FMake-lang.in?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -1373,6 +1373,11 @@ mcflex.o: mcflex.c m2/gm2-libs/gm2-libs-host.h\n mcflex.c: $(srcdir)/m2/mc/mc.flex\n \tflex -t $< > $@\n \n+m2/gm2-libs-boot/M2RTS.o: $(srcdir)/m2/gm2-libs/M2RTS.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t-test -d $(@D) || $(mkinstalldirs) $(@D)\n+\t$(MC) --suppress-noreturn -o=m2/gm2-libs-boot/M2RTS.c $(srcdir)/m2/gm2-libs/M2RTS.mod\n+\t$(COMPILER) -c -DIN_GCC $(CFLAGS) -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(MCINCLUDES) $(INCLUDES) m2/gm2-libs-boot/M2RTS.c -o $@\n+\n m2/gm2-libs-boot/%.o: $(srcdir)/m2/gm2-libs-boot/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n \t$(MC) -o=m2/gm2-libs-boot/$*.c $(srcdir)/m2/gm2-libs-boot/$*.mod"}, {"sha": "81f5abea59c0c8144483b2447d9d73735c0981a4", "filename": "gcc/m2/Make-maintainer.in", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2FMake-maintainer.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2FMake-maintainer.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FMake-maintainer.in?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -111,6 +111,13 @@ m2/gm2-ppg-boot/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.cc m2/gm2-libs/gm\n \t-test -d m2/gm2-ppg-boot || $(mkinstalldirs) m2/gm2-ppg-boot\n \t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n \n+m2/gm2-ppg-boot/$(SRC_PREFIX)M2RTS.o: $(srcdir)/m2/gm2-libs/M2RTS.mod $(MCDEPS) $(BUILD-BOOT-PPG-H)\n+\t-test -d m2/gm2-ppg-boot || $(mkinstalldirs) m2/gm2-ppg-boot\n+\t$(MCC) --suppress-noreturn -o=m2/gm2-ppg-boot/$(SRC_PREFIX)M2RTS.c $(srcdir)/m2/gm2-libs/M2RTS.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) \\\n+              -Im2/gm2-ppg-boot -I$(srcdir)/m2/mc-boot -Im2/gm2-libs-boot \\\n+              -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-ppg-boot/$(SRC_PREFIX)M2RTS.c -o $@\n+\n m2/gm2-ppg-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-libs/%.mod $(MCDEPS) $(BUILD-BOOT-PPG-H)\n \t-test -d m2/gm2-ppg-boot || $(mkinstalldirs) m2/gm2-ppg-boot\n \t$(MCC) -o=m2/gm2-ppg-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-libs/$*.mod\n@@ -214,6 +221,14 @@ m2/gm2-pg-boot/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.cc m2/gm2-libs/gm2\n \t-test -d m2/gm2-pg-boot || $(mkinstalldirs) m2/gm2-pg-boot\n \t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n \n+m2/gm2-pg-boot/$(SRC_PREFIX)M2RTS.o: $(srcdir)/m2/gm2-libs/M2RTS.mod $(MCDEPS) $(BUILD-BOOT-PG-H)\n+\t-test -d m2/gm2-pg-boot || $(mkinstalldirs) m2/gm2-pg-boot\n+\t$(MCC) --suppress-noreturn -o=m2/gm2-pg-boot/$(SRC_PREFIX)M2RTS.c $(srcdir)/m2/gm2-libs/M2RTS.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/gm2-pg-boot\t-I$(srcdir)/m2/mc-boot \\\n+               -I$(srcdir)/m2/mc-boot-ch \\\n+               -Im2/gm2-libs-boot $(INCLUDES) \\\n+              -g -c m2/gm2-pg-boot/$(SRC_PREFIX)M2RTS.c -o $@\n+\n m2/gm2-pg-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-libs/%.mod $(MCDEPS) $(BUILD-BOOT-PG-H)\n \t-test -d m2/gm2-pg-boot || $(mkinstalldirs) m2/gm2-pg-boot\n \t$(MCC) -o=m2/gm2-pg-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-libs/$*.mod\n@@ -225,13 +240,13 @@ m2/gm2-pg-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-libs/%.mod $(MCDEPS) $(BUILD-B\n m2/gm2-pg-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-compiler/%.mod $(MCDEPS) $(BUILD-BOOT-PG-H)\n \t-test -d m2/gm2-pg-boot || $(mkinstalldirs) m2/gm2-pg-boot\n \t$(MCC) -o=m2/gm2-pg-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-compiler/$*.mod\n-\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n               -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-pg-boot/$(SRC_PREFIX)$*.c -o $@\n \n m2/gm2-pg-boot/$(SRC_PREFIX)pg.o:  m2/gm2-auto/pg.mod $(MCDEPS) $(BUILD-BOOT-PG-H)\n \t-test -d m2/gm2-pg-boot || $(mkinstalldirs) m2/gm2-pg-boot\n \t$(MCC) -o=m2/gm2-pg-boot/$(SRC_PREFIX)pg.c m2/gm2-auto/pg.mod\n-\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n               -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-pg-boot/$(SRC_PREFIX)pg.c -o $@\n \n m2/pg$(exeext): m2/boot-bin/mc \\\n@@ -336,25 +351,32 @@ m2/gm2-pge-boot/$(SRC_PREFIX)errno.o:  $(srcdir)/m2/mc-boot-ch/Gerrno.c\n \t-test -d m2/gm2-pge-boot || $(mkinstalldirs) m2/gm2-pge-boot\n \t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c $< -o $@\n \n+m2/gm2-pge-boot/$(SRC_PREFIX)M2RTS.o: $(srcdir)/m2/gm2-libs/M2RTS.mod $(MCDEPS) $(BUILD-BOOT-PGE-H)\n+\t-test -d m2/gm2-pge-boot || $(mkinstalldirs) m2/gm2-pge-boot\n+\t$(MCC) --suppress-noreturn -o=m2/gm2-pge-boot/$(SRC_PREFIX)M2RTS.c $(srcdir)/m2/gm2-libs/M2RTS.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/gm2-pge-boot -I$(srcdir)/m2/mc-boot \\\n+              -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs-boot \\\n+              $(INCLUDES) -g -c m2/gm2-pge-boot/$(SRC_PREFIX)M2RTS.c -o $@\n+\n m2/gm2-pge-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-libs/%.mod $(MCDEPS) $(BUILD-BOOT-PGE-H)\n \t-test -d m2/gm2-pge-boot || $(mkinstalldirs) m2/gm2-pge-boot\n \t$(MCC) -o=m2/gm2-pge-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-libs/$*.mod\n-\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/gm2-pge-boot -I$(srcdir)/m2/mc-boot \\\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/gm2-pge-boot -I$(srcdir)/m2/mc-boot \\\n               -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs-boot \\\n               $(INCLUDES) -g -c m2/gm2-pge-boot/$(SRC_PREFIX)$*.c -o $@\n \n m2/gm2-pge-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-compiler/%.mod $(MCDEPS) $(BUILD-BOOT-PGE-H)\n \t-test -d m2/gm2-pge-boot || $(mkinstalldirs) m2/gm2-pge-boot\n \t$(MCC) -o=m2/gm2-pge-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-compiler/$*.mod\n-\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/mc-boot -Im2/gm2-compiler-boot \\\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot -Im2/gm2-compiler-boot \\\n               -Im2/gm2-libs-boot \\\n               -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-pge-boot/$(SRC_PREFIX)$*.c -o $@\n \n m2/gm2-pge-boot/$(SRC_PREFIX)pge.o:  m2/gm2-auto/pge.mod $(MCDEPS) $(BUILD-BOOT-PGE-H)\n \t-test -d m2/gm2-pge-boot || $(mkinstalldirs) m2/gm2-pge-boot\n \t$(MCC) -o=m2/gm2-pge-boot/$(SRC_PREFIX)pge.c m2/gm2-auto/pge.mod\n \t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) \\\n-              -Im2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n+              -I$(srcdir)/m2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n               -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-pge-boot/$(SRC_PREFIX)pge.c -o $@\n \n m2/pge$(exeext): m2/boot-bin/mc \\"}, {"sha": "8db7c9ab94f256d78163c255a098abcae91f7057", "filename": "gcc/m2/gm2-libs-ch/UnixArgs.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs-ch%2FUnixArgs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs-ch%2FUnixArgs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2FUnixArgs.cc?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -27,6 +27,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <config.h>\n #include \"m2rts.h\"\n \n+#define LIBNAME \"m2pim\"\n \n extern \"C\" int UnixArgs_GetArgC (void);\n extern \"C\" char **UnixArgs_GetArgV (void);\n@@ -85,6 +86,6 @@ _M2_UnixArgs_dep (void)\n extern \"C\" void __attribute__((__constructor__))\n _M2_UnixArgs_ctor (void)\n {\n-  M2RTS_RegisterModule (\"UnixArgs\", _M2_UnixArgs_init, _M2_UnixArgs_finish,\n+  M2RTS_RegisterModule (\"UnixArgs\", LIBNAME, _M2_UnixArgs_init, _M2_UnixArgs_finish,\n \t\t\t_M2_UnixArgs_dep);\n }"}, {"sha": "2aa774dff211708d41408c5f1cfc45493c389ee0", "filename": "gcc/m2/gm2-libs-ch/dtoa.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs-ch%2Fdtoa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs-ch%2Fdtoa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fdtoa.cc?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -31,6 +31,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"gm2-libs-host.h\"\n #include \"m2rts.h\"\n \n+#define LIBNAME \"m2pim\"\n+\n #ifdef __cplusplus\n extern \"C\" {\n #endif\n@@ -192,7 +194,7 @@ _M2_dtoa_dep (void)\n extern \"C\" void __attribute__((__constructor__))\n _M2_dtoa_ctor (void)\n {\n-  M2RTS_RegisterModule (\"dtoa\", _M2_dtoa_init, _M2_dtoa_finish,\n+  M2RTS_RegisterModule (\"dtoa\", LIBNAME, _M2_dtoa_init, _M2_dtoa_finish,\n \t\t\t_M2_dtoa_dep);\n }\n "}, {"sha": "b1df51b4fff52d7a984eea638ddebd4755dcbb32", "filename": "gcc/m2/gm2-libs-ch/ldtoa.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs-ch%2Fldtoa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs-ch%2Fldtoa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fldtoa.cc?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -28,6 +28,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"system.h\"\n #include \"ansidecl.h\"\n \n+#define LIBNAME \"m2pim\"\n+\n #include \"gm2-libs-host.h\"\n #include \"m2rts.h\"\n \n@@ -121,7 +123,7 @@ _M2_ldtoa_dep (void)\n extern \"C\" void __attribute__((__constructor__))\n _M2_ldtoa_ctor (void)\n {\n-  M2RTS_RegisterModule (\"ldtoa\", _M2_ldtoa_init, _M2_ldtoa_finish,\n+  M2RTS_RegisterModule (\"ldtoa\", LIBNAME, _M2_ldtoa_init, _M2_ldtoa_finish,\n \t\t\t_M2_ldtoa_dep);\n }\n "}, {"sha": "e70c9f63f7b44bb3d68075a29e714ab95bf5f5de", "filename": "gcc/m2/gm2-libs-ch/m2rts.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs-ch%2Fm2rts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs-ch%2Fm2rts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fm2rts.h?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -29,7 +29,7 @@ typedef void (*proc_con) (int, char **, char **);\n typedef void (*proc_dep) (void);\n \n extern \"C\" void M2RTS_RequestDependant (const char *modulename, const char *dependancy);\n-extern \"C\" void M2RTS_RegisterModule (const char *modulename,\n+extern \"C\" void M2RTS_RegisterModule (const char *modulename, const char *libname,\n \t\t\t\t      proc_con init, proc_con fini, proc_dep dependencies);\n extern \"C\" void _M2_M2RTS_init (void);\n "}, {"sha": "d2df9c23c589a84aebf1d4656a8471285902295b", "filename": "gcc/m2/gm2-libs/RTint.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs%2FRTint.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fgm2-libs%2FRTint.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FRTint.def?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -84,7 +84,7 @@ PROCEDURE GetTimeVector (vec: CARDINAL; VAR micro, secs: CARDINAL) ;\n                   vector.\n *)\n \n-PROCEDURE AttachVector (vec: CARDINAL; p: ADDRESS) : ADDRESS ;\n+PROCEDURE AttachVector (vec: CARDINAL; ptr: ADDRESS) : ADDRESS ;\n \n \n (*"}, {"sha": "d1b9e88bd3f944b1df78db455c4b2b137cd9b94b", "filename": "gcc/m2/mc-boot-ch/GUnixArgs.cc", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot-ch%2FGUnixArgs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot-ch%2FGUnixArgs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot-ch%2FGUnixArgs.cc?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -81,13 +81,3 @@ extern \"C\" void\n _M2_UnixArgs_dep (void)\n {\n }\n-\n-#if 0\n-struct _M2_UnixArgs_ctor { _M2_UnixArgs_ctor (); } _M2_UnixArgs_ctor;\n-\n-_M2_UnixArgs_ctor::_M2_UnixArgs_ctor (void)\n-{\n-  M2RTS_RegisterModule (\"UnixArgs\", _M2_UnixArgs_init, _M2_UnixArgs_fini,\n-\t\t\t_M2_UnixArgs_dep);\n-}\n-#endif"}, {"sha": "dfc163646bb212794a0fc48e51b3f5666410b52d", "filename": "gcc/m2/mc-boot/GDynamicStrings.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGDynamicStrings.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGDynamicStrings.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGDynamicStrings.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -1214,7 +1214,7 @@ static void ConcatContents (DynamicStrings_Contents *c, const char *a_, unsigned\n       (*c).next->contents.next = NULL;\n       ConcatContents (&(*c).next->contents, (const char *) a, _a_high, h, o);\n       AddDebugInfo ((*c).next);\n-      (*c).next = AssignDebug ((*c).next, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 722, (const char *) \"ConcatContents\", 14);\n+      (*c).next = AssignDebug ((*c).next, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 722, (const char *) \"ConcatContents\", 14);\n     }\n   else\n     {\n@@ -1312,7 +1312,7 @@ static void ConcatContentsAddress (DynamicStrings_Contents *c, void * a, unsigne\n       AddDebugInfo ((*c).next);\n       if (TraceOn)\n         {\n-          (*c).next = AssignDebug ((*c).next, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 917, (const char *) \"ConcatContentsAddress\", 21);\n+          (*c).next = AssignDebug ((*c).next, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 917, (const char *) \"ConcatContentsAddress\", 21);\n         }\n     }\n   else\n@@ -1537,7 +1537,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_InitString (const char *a_, unsi\n   AddDebugInfo (s);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 758, (const char *) \"InitString\", 10);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 758, (const char *) \"InitString\", 10);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1640,7 +1640,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_InitStringCharStar (void * a)\n   AddDebugInfo (s);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 957, (const char *) \"InitStringCharStar\", 18);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 957, (const char *) \"InitStringCharStar\", 18);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1665,7 +1665,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_InitStringChar (char ch)\n   s = DynamicStrings_InitString ((const char *) &a.array[0], 1);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 977, (const char *) \"InitStringChar\", 14);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 977, (const char *) \"InitStringChar\", 14);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1823,7 +1823,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Dup (DynamicStrings_String s)\n   s = DynamicStrings_Assign (DynamicStrings_InitString ((const char *) \"\", 0), s);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1173, (const char *) \"Dup\", 3);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1173, (const char *) \"Dup\", 3);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1845,7 +1845,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Add (DynamicStrings_String a, Dy\n   a = DynamicStrings_ConCat (DynamicStrings_ConCat (DynamicStrings_InitString ((const char *) \"\", 0), a), b);\n   if (TraceOn)\n     {\n-      a = AssignDebug (a, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1193, (const char *) \"Add\", 3);\n+      a = AssignDebug (a, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1193, (const char *) \"Add\", 3);\n     }\n   return a;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1910,7 +1910,7 @@ extern \"C\" unsigned int DynamicStrings_EqualCharStar (DynamicStrings_String s, v\n   t = DynamicStrings_InitStringCharStar (a);\n   if (TraceOn)\n     {\n-      t = AssignDebug (t, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1250, (const char *) \"EqualCharStar\", 13);\n+      t = AssignDebug (t, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1250, (const char *) \"EqualCharStar\", 13);\n     }\n   t = AddToGarbage (t, s);\n   if (DynamicStrings_Equal (t, s))\n@@ -1948,7 +1948,7 @@ extern \"C\" unsigned int DynamicStrings_EqualArray (DynamicStrings_String s, cons\n   t = DynamicStrings_InitString ((const char *) a, _a_high);\n   if (TraceOn)\n     {\n-      t = AssignDebug (t, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1280, (const char *) \"EqualArray\", 10);\n+      t = AssignDebug (t, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1280, (const char *) \"EqualArray\", 10);\n     }\n   t = AddToGarbage (t, s);\n   if (DynamicStrings_Equal (t, s))\n@@ -1986,7 +1986,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Mult (DynamicStrings_String s, u\n     }\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1312, (const char *) \"Mult\", 4);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1312, (const char *) \"Mult\", 4);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2065,7 +2065,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Slice (DynamicStrings_String s,\n                       AddDebugInfo (t->contents.next);\n                       if (TraceOn)\n                         {\n-                          t->contents.next = AssignDebug (t->contents.next, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1380, (const char *) \"Slice\", 5);\n+                          t->contents.next = AssignDebug (t->contents.next, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1380, (const char *) \"Slice\", 5);\n                         }\n                     }\n                   t = t->contents.next;\n@@ -2083,7 +2083,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Slice (DynamicStrings_String s,\n     }\n   if (TraceOn)\n     {\n-      d = AssignDebug (d, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1397, (const char *) \"Slice\", 5);\n+      d = AssignDebug (d, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1397, (const char *) \"Slice\", 5);\n     }\n   return d;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2211,7 +2211,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_RemoveComment (DynamicStrings_St\n     }\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1509, (const char *) \"RemoveComment\", 13);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1509, (const char *) \"RemoveComment\", 13);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2236,7 +2236,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_RemoveWhitePrefix (DynamicString\n   s = DynamicStrings_Slice (s, (int ) (i), 0);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1621, (const char *) \"RemoveWhitePrefix\", 17);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1621, (const char *) \"RemoveWhitePrefix\", 17);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2261,7 +2261,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_RemoveWhitePostfix (DynamicStrin\n   s = DynamicStrings_Slice (s, 0, i+1);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1643, (const char *) \"RemoveWhitePostfix\", 18);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1643, (const char *) \"RemoveWhitePostfix\", 18);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2630,7 +2630,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_PopAllocationExemption (unsigned\n         {\n           stop ();\n           /* writeString (\"mismatched number of PopAllocation's compared to PushAllocation's\")  */\n-          M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 176, (const char *) \"PopAllocationExemption\", 22, (const char *) \"mismatched number of PopAllocation's compared to PushAllocation's\", 65);\n+          M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 176, (const char *) \"PopAllocationExemption\", 22, (const char *) \"mismatched number of PopAllocation's compared to PushAllocation's\", 65);\n         }\n       else\n         {"}, {"sha": "65819a10a4b8b5cf8a3b4c39f768787ff970ec0c", "filename": "gcc/m2/mc-boot/GFIO.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGFIO.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGFIO.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGFIO.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -555,7 +555,7 @@ static FIO_File GetNextFreeDescriptor (void)\n         return f;  /* create new slot  */\n       }\n   }\n-  ReturnException (\"../../gcc/m2/gm2-libs/FIO.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/FIO.def\", 25, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "0817ff36ca258e57ffb27a8edf5e2dcf04628fcc", "filename": "gcc/m2/mc-boot/GIndexing.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGIndexing.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGIndexing.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGIndexing.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -222,7 +222,7 @@ extern \"C\" unsigned int Indexing_InBounds (Indexing_Index i, unsigned int n)\n     {\n       return (n >= i->Low) && (n <= i->High);\n     }\n-  ReturnException (\"../../gcc/m2/mc/Indexing.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/Indexing.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -242,7 +242,7 @@ extern \"C\" unsigned int Indexing_HighIndice (Indexing_Index i)\n     {\n       return i->High;\n     }\n-  ReturnException (\"../../gcc/m2/mc/Indexing.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/Indexing.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -262,7 +262,7 @@ extern \"C\" unsigned int Indexing_LowIndice (Indexing_Index i)\n     {\n       return i->Low;\n     }\n-  ReturnException (\"../../gcc/m2/mc/Indexing.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/Indexing.def\", 20, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "387b04764624d6e8cfe4f1ade5ff4c79cc9024cb", "filename": "gcc/m2/mc-boot/GM2EXCEPTION.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGM2EXCEPTION.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGM2EXCEPTION.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGM2EXCEPTION.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -57,13 +57,13 @@ extern \"C\" M2EXCEPTION_M2Exceptions M2EXCEPTION_M2Exception (void)\n   n = RTExceptions_GetNumber (e);\n   if (n == (UINT_MAX))\n     {\n-      RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_exException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/M2EXCEPTION.mod\")), 47, 6, const_cast<void*> (reinterpret_cast<const void*>(\"M2Exception\")), const_cast<void*> (reinterpret_cast<const void*>(\"current coroutine is not in the exceptional execution state\")));\n+      RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_exException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/M2EXCEPTION.mod\")), 47, 6, const_cast<void*> (reinterpret_cast<const void*>(\"M2Exception\")), const_cast<void*> (reinterpret_cast<const void*>(\"current coroutine is not in the exceptional execution state\")));\n     }\n   else\n     {\n       return (M2EXCEPTION_M2Exceptions) (n);\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/M2EXCEPTION.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/M2EXCEPTION.def\", 25, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "e15b3eb9007926e9cbf6380eaca84f82445dc86c", "filename": "gcc/m2/mc-boot/GPushBackInput.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGPushBackInput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGPushBackInput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGPushBackInput.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -274,7 +274,7 @@ extern \"C\" char PushBackInput_PutCh (char ch)\n     }\n   else\n     {\n-      Debug_Halt ((const char *) \"max push back stack exceeded, increase MaxPushBackStack\", 55, 150, (const char *) \"../../gcc/m2/gm2-libs/PushBackInput.mod\", 39);\n+      Debug_Halt ((const char *) \"max push back stack exceeded, increase MaxPushBackStack\", 55, 150, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/PushBackInput.mod\", 54);\n     }\n   return ch;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -300,7 +300,7 @@ extern \"C\" void PushBackInput_PutString (const char *a_, unsigned int _a_high)\n       l -= 1;\n       if ((PushBackInput_PutCh (a[l])) != a[l])\n         {\n-          Debug_Halt ((const char *) \"assert failed\", 13, 132, (const char *) \"../../gcc/m2/gm2-libs/PushBackInput.mod\", 39);\n+          Debug_Halt ((const char *) \"assert failed\", 13, 132, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/PushBackInput.mod\", 54);\n         }\n     }\n }\n@@ -321,7 +321,7 @@ extern \"C\" void PushBackInput_PutStr (DynamicStrings_String s)\n       i -= 1;\n       if ((PushBackInput_PutCh (DynamicStrings_char (s, static_cast<int> (i)))) != (DynamicStrings_char (s, static_cast<int> (i))))\n         {\n-          Debug_Halt ((const char *) \"assert failed\", 13, 113, (const char *) \"../../gcc/m2/gm2-libs/PushBackInput.mod\", 39);\n+          Debug_Halt ((const char *) \"assert failed\", 13, 113, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/PushBackInput.mod\", 54);\n         }\n     }\n }"}, {"sha": "23f8fede117bc6ab07278b8922e944adc2adddbc", "filename": "gcc/m2/mc-boot/GRTExceptions.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGRTExceptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGRTExceptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGRTExceptions.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -721,7 +721,7 @@ static void AddHandler (RTExceptions_EHBlock e, RTExceptions_Handler h)\n \n static void indexf (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_indexException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 613, 9, const_cast<void*> (reinterpret_cast<const void*>(\"indexf\")), const_cast<void*> (reinterpret_cast<const void*>(\"array index out of bounds\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_indexException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 613, 9, const_cast<void*> (reinterpret_cast<const void*>(\"indexf\")), const_cast<void*> (reinterpret_cast<const void*>(\"array index out of bounds\")));\n }\n \n \n@@ -731,7 +731,7 @@ static void indexf (void * a)\n \n static void range (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_rangeException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 625, 9, const_cast<void*> (reinterpret_cast<const void*>(\"range\")), const_cast<void*> (reinterpret_cast<const void*>(\"assignment out of range\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_rangeException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 625, 9, const_cast<void*> (reinterpret_cast<const void*>(\"range\")), const_cast<void*> (reinterpret_cast<const void*>(\"assignment out of range\")));\n }\n \n \n@@ -741,7 +741,7 @@ static void range (void * a)\n \n static void casef (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_caseSelectException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 637, 9, const_cast<void*> (reinterpret_cast<const void*>(\"casef\")), const_cast<void*> (reinterpret_cast<const void*>(\"case selector out of range\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_caseSelectException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 637, 9, const_cast<void*> (reinterpret_cast<const void*>(\"casef\")), const_cast<void*> (reinterpret_cast<const void*>(\"case selector out of range\")));\n }\n \n \n@@ -751,7 +751,7 @@ static void casef (void * a)\n \n static void invalidloc (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_invalidLocation)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 649, 9, const_cast<void*> (reinterpret_cast<const void*>(\"invalidloc\")), const_cast<void*> (reinterpret_cast<const void*>(\"invalid address referenced\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_invalidLocation)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 649, 9, const_cast<void*> (reinterpret_cast<const void*>(\"invalidloc\")), const_cast<void*> (reinterpret_cast<const void*>(\"invalid address referenced\")));\n }\n \n \n@@ -761,7 +761,7 @@ static void invalidloc (void * a)\n \n static void function (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_functionException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 661, 9, const_cast<void*> (reinterpret_cast<const void*>(\"function\")), const_cast<void*> (reinterpret_cast<const void*>(\"... function ... \")));  /* --fixme-- what has happened ?  */\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_functionException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 661, 9, const_cast<void*> (reinterpret_cast<const void*>(\"function\")), const_cast<void*> (reinterpret_cast<const void*>(\"... function ... \")));  /* --fixme-- what has happened ?  */\n }\n \n \n@@ -771,7 +771,7 @@ static void function (void * a)\n \n static void wholevalue (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_wholeValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 673, 9, const_cast<void*> (reinterpret_cast<const void*>(\"wholevalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal whole value exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_wholeValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 673, 9, const_cast<void*> (reinterpret_cast<const void*>(\"wholevalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal whole value exception\")));\n }\n \n \n@@ -781,7 +781,7 @@ static void wholevalue (void * a)\n \n static void wholediv (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_wholeDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 685, 9, const_cast<void*> (reinterpret_cast<const void*>(\"wholediv\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal whole value exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_wholeDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 685, 9, const_cast<void*> (reinterpret_cast<const void*>(\"wholediv\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal whole value exception\")));\n }\n \n \n@@ -791,7 +791,7 @@ static void wholediv (void * a)\n \n static void realvalue (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_realValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 697, 9, const_cast<void*> (reinterpret_cast<const void*>(\"realvalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal real value exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_realValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 697, 9, const_cast<void*> (reinterpret_cast<const void*>(\"realvalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal real value exception\")));\n }\n \n \n@@ -801,7 +801,7 @@ static void realvalue (void * a)\n \n static void realdiv (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_realDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 709, 9, const_cast<void*> (reinterpret_cast<const void*>(\"realdiv\")), const_cast<void*> (reinterpret_cast<const void*>(\"real number division by zero exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_realDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 709, 9, const_cast<void*> (reinterpret_cast<const void*>(\"realdiv\")), const_cast<void*> (reinterpret_cast<const void*>(\"real number division by zero exception\")));\n }\n \n \n@@ -811,7 +811,7 @@ static void realdiv (void * a)\n \n static void complexvalue (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_complexValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 721, 9, const_cast<void*> (reinterpret_cast<const void*>(\"complexvalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal complex value exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_complexValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 721, 9, const_cast<void*> (reinterpret_cast<const void*>(\"complexvalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal complex value exception\")));\n }\n \n \n@@ -821,7 +821,7 @@ static void complexvalue (void * a)\n \n static void complexdiv (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_complexDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 733, 9, const_cast<void*> (reinterpret_cast<const void*>(\"complexdiv\")), const_cast<void*> (reinterpret_cast<const void*>(\"complex number division by zero exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_complexDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 733, 9, const_cast<void*> (reinterpret_cast<const void*>(\"complexdiv\")), const_cast<void*> (reinterpret_cast<const void*>(\"complex number division by zero exception\")));\n }\n \n \n@@ -831,7 +831,7 @@ static void complexdiv (void * a)\n \n static void protection (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_protException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 745, 9, const_cast<void*> (reinterpret_cast<const void*>(\"protection\")), const_cast<void*> (reinterpret_cast<const void*>(\"protection exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_protException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 745, 9, const_cast<void*> (reinterpret_cast<const void*>(\"protection\")), const_cast<void*> (reinterpret_cast<const void*>(\"protection exception\")));\n }\n \n \n@@ -841,7 +841,7 @@ static void protection (void * a)\n \n static void systemf (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_sysException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 757, 9, const_cast<void*> (reinterpret_cast<const void*>(\"systemf\")), const_cast<void*> (reinterpret_cast<const void*>(\"system exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_sysException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 757, 9, const_cast<void*> (reinterpret_cast<const void*>(\"systemf\")), const_cast<void*> (reinterpret_cast<const void*>(\"system exception\")));\n }\n \n \n@@ -851,7 +851,7 @@ static void systemf (void * a)\n \n static void coroutine (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_coException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 769, 9, const_cast<void*> (reinterpret_cast<const void*>(\"coroutine\")), const_cast<void*> (reinterpret_cast<const void*>(\"coroutine exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_coException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 769, 9, const_cast<void*> (reinterpret_cast<const void*>(\"coroutine\")), const_cast<void*> (reinterpret_cast<const void*>(\"coroutine exception\")));\n }\n \n \n@@ -861,7 +861,7 @@ static void coroutine (void * a)\n \n static void exception (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_exException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 781, 9, const_cast<void*> (reinterpret_cast<const void*>(\"exception\")), const_cast<void*> (reinterpret_cast<const void*>(\"exception exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_exException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 781, 9, const_cast<void*> (reinterpret_cast<const void*>(\"exception\")), const_cast<void*> (reinterpret_cast<const void*>(\"exception exception\")));\n }\n \n \n@@ -1180,13 +1180,13 @@ extern \"C\" RTExceptions_EHBlock RTExceptions_GetBaseExceptionBlock (void)\n {\n   if (currentEHB == NULL)\n     {\n-      M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/RTExceptions.mod\", 38, 599, (const char *) \"GetBaseExceptionBlock\", 21, (const char *) \"currentEHB has not been initialized yet\", 39);\n+      M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\", 53, 599, (const char *) \"GetBaseExceptionBlock\", 21, (const char *) \"currentEHB has not been initialized yet\", 39);\n     }\n   else\n     {\n       return currentEHB;\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/RTExceptions.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.def\", 25, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "a3030f2d9a147fdda34b36d9690d86a418b4e67b", "filename": "gcc/m2/mc-boot/GRTint.c", "status": "modified", "additions": 230, "deletions": 246, "changes": 476, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGRTint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGRTint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGRTint.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -132,12 +132,12 @@ extern \"C\" void RTint_ReArmTimeVector (unsigned int vec, unsigned int micro, uns\n extern \"C\" void RTint_GetTimeVector (unsigned int vec, unsigned int *micro, unsigned int *secs);\n \n /*\n-   AttachVector - adds the pointer, p, to be associated with the interrupt\n+   AttachVector - adds the pointer ptr to be associated with the interrupt\n                   vector. It returns the previous value attached to this\n                   vector.\n */\n \n-extern \"C\" void * RTint_AttachVector (unsigned int vec, void * p);\n+extern \"C\" void * RTint_AttachVector (unsigned int vec, void * ptr);\n \n /*\n    IncludeVector - includes, vec, into the dispatcher list of\n@@ -178,14 +178,14 @@ static int Max (int i, int j);\n static int Min (int i, int j);\n \n /*\n-   FindVector - searches the exists list for a vector of type, t,\n+   FindVector - searches the exists list for a vector of type\n                 which is associated with file descriptor, fd.\n */\n \n-static RTint_Vector FindVector (int fd, RTint_VectorType t);\n+static RTint_Vector FindVector (int fd, RTint_VectorType type);\n \n /*\n-   FindVectorNo - searches the Exists list for vector, vec.\n+   FindVectorNo - searches the Exists list for vector vec.\n */\n \n static RTint_Vector FindVectorNo (unsigned int vec);\n@@ -197,23 +197,17 @@ static RTint_Vector FindVectorNo (unsigned int vec);\n static RTint_Vector FindPendingVector (unsigned int vec);\n \n /*\n-   AddFd - adds the file descriptor, fd, to set, s, updating, max.\n+   AddFd - adds the file descriptor fd to set updating max.\n */\n \n-static void AddFd (Selective_SetOfFd *s, int *max, int fd);\n+static void AddFd (Selective_SetOfFd *set, int *max, int fd);\n \n /*\n    DumpPendingQueue - displays the pending queue.\n */\n \n static void DumpPendingQueue (void);\n \n-/*\n-   DumpPendingQueue - displays the pending queue.\n-*/\n-\n-static void stop (void);\n-\n /*\n    AddTime - t1 := t1 + t2\n */\n@@ -236,7 +230,7 @@ static void SubTime (unsigned int *s, unsigned int *m, Selective_Timeval a, Sele\n    activatePending - activates the first interrupt pending and clears it.\n */\n \n-static unsigned int activatePending (unsigned int untilInterrupt, RTint_DispatchVector call, unsigned int pri, int maxFd, Selective_SetOfFd *i, Selective_SetOfFd *o, Selective_Timeval *t, Selective_Timeval b4, Selective_Timeval after);\n+static unsigned int activatePending (unsigned int untilInterrupt, RTint_DispatchVector call, unsigned int pri, int maxFd, Selective_SetOfFd *inSet, Selective_SetOfFd *outSet, Selective_Timeval *timeval, Selective_Timeval b4, Selective_Timeval after);\n \n /*\n    init -\n@@ -282,22 +276,22 @@ static int Min (int i, int j)\n \n \n /*\n-   FindVector - searches the exists list for a vector of type, t,\n+   FindVector - searches the exists list for a vector of type\n                 which is associated with file descriptor, fd.\n */\n \n-static RTint_Vector FindVector (int fd, RTint_VectorType t)\n+static RTint_Vector FindVector (int fd, RTint_VectorType type)\n {\n-  RTint_Vector v;\n+  RTint_Vector vec;\n \n-  v = Exists;\n-  while (v != NULL)\n+  vec = Exists;\n+  while (vec != NULL)\n     {\n-      if ((v->type == t) && (v->File == fd))\n+      if ((vec->type == type) && (vec->File == fd))\n         {\n-          return v;\n+          return vec;\n         }\n-      v = v->exists;\n+      vec = vec->exists;\n     }\n   return NULL;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -306,19 +300,19 @@ static RTint_Vector FindVector (int fd, RTint_VectorType t)\n \n \n /*\n-   FindVectorNo - searches the Exists list for vector, vec.\n+   FindVectorNo - searches the Exists list for vector vec.\n */\n \n static RTint_Vector FindVectorNo (unsigned int vec)\n {\n-  RTint_Vector v;\n+  RTint_Vector vptr;\n \n-  v = Exists;\n-  while ((v != NULL) && (v->no != vec))\n+  vptr = Exists;\n+  while ((vptr != NULL) && (vptr->no != vec))\n     {\n-      v = v->exists;\n+      vptr = vptr->exists;\n     }\n-  return v;\n+  return vptr;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n   __builtin_unreachable ();\n }\n@@ -330,19 +324,19 @@ static RTint_Vector FindVectorNo (unsigned int vec)\n \n static RTint_Vector FindPendingVector (unsigned int vec)\n {\n-  unsigned int i;\n-  RTint_Vector v;\n+  unsigned int pri;\n+  RTint_Vector vptr;\n \n-  for (i=COROUTINES_UnassignedPriority; i<=7; i++)\n+  for (pri=COROUTINES_UnassignedPriority; pri<=7; pri++)\n     {\n-      v = Pending.array[i-(COROUTINES_UnassignedPriority)];\n-      while ((v != NULL) && (v->no != vec))\n+      vptr = Pending.array[pri-(COROUTINES_UnassignedPriority)];\n+      while ((vptr != NULL) && (vptr->no != vec))\n         {\n-          v = v->pending;\n+          vptr = vptr->pending;\n         }\n-      if ((v != NULL) && (v->no == vec))\n+      if ((vptr != NULL) && (vptr->no == vec))\n         {\n-          return v;\n+          return vptr;\n         }\n     }\n   return NULL;\n@@ -352,19 +346,19 @@ static RTint_Vector FindPendingVector (unsigned int vec)\n \n \n /*\n-   AddFd - adds the file descriptor, fd, to set, s, updating, max.\n+   AddFd - adds the file descriptor fd to set updating max.\n */\n \n-static void AddFd (Selective_SetOfFd *s, int *max, int fd)\n+static void AddFd (Selective_SetOfFd *set, int *max, int fd)\n {\n   (*max) = Max (fd, (*max));\n-  if ((*s) == NULL)\n+  if ((*set) == NULL)\n     {\n-      (*s) = Selective_InitSet ();\n-      Selective_FdZero ((*s));\n+      (*set) = Selective_InitSet ();\n+      Selective_FdZero ((*set));\n     }\n   /* printf('%d, ', fd)  */\n-  Selective_FdSet (fd, (*s));\n+  Selective_FdSet (fd, (*set));\n }\n \n \n@@ -374,45 +368,36 @@ static void AddFd (Selective_SetOfFd *s, int *max, int fd)\n \n static void DumpPendingQueue (void)\n {\n-  COROUTINES_PROTECTION p;\n-  RTint_Vector v;\n-  unsigned int s;\n-  unsigned int m;\n+  COROUTINES_PROTECTION pri;\n+  RTint_Vector vptr;\n+  unsigned int sec;\n+  unsigned int micro;\n \n   libc_printf ((const char *) \"Pending queue\\\\n\", 15);\n-  for (p=COROUTINES_UnassignedPriority; p<=7; p++)\n+  for (pri=COROUTINES_UnassignedPriority; pri<=7; pri++)\n     {\n-      libc_printf ((const char *) \"[%d]  \", 6, p);\n-      v = Pending.array[p-(COROUTINES_UnassignedPriority)];\n-      while (v != NULL)\n+      libc_printf ((const char *) \"[%d]  \", 6, pri);\n+      vptr = Pending.array[pri-(COROUTINES_UnassignedPriority)];\n+      while (vptr != NULL)\n         {\n-          if ((v->type == RTint_input) || (v->type == RTint_output))\n+          if ((vptr->type == RTint_input) || (vptr->type == RTint_output))\n             {\n-              libc_printf ((const char *) \"(fd=%d) (vec=%d)\", 16, v->File, v->no);\n+              libc_printf ((const char *) \"(fd=%d) (vec=%d)\", 16, vptr->File, vptr->no);\n             }\n-          else if (v->type == RTint_time)\n+          else if (vptr->type == RTint_time)\n             {\n               /* avoid dangling else.  */\n-              Selective_GetTime (v->rel, &s, &m);\n-              Assertion_Assert (m < Microseconds);\n-              libc_printf ((const char *) \"time (%u.%06u secs) (arg = 0x%x)\\\\n\", 34, s, m, v->arg);\n+              Selective_GetTime (vptr->rel, &sec, &micro);\n+              Assertion_Assert (micro < Microseconds);\n+              libc_printf ((const char *) \"time (%u.%06u secs) (arg = %p)\\\\n\", 32, sec, micro, vptr->arg);\n             }\n-          v = v->pending;\n+          vptr = vptr->pending;\n         }\n       libc_printf ((const char *) \" \\\\n\", 3);\n     }\n }\n \n \n-/*\n-   DumpPendingQueue - displays the pending queue.\n-*/\n-\n-static void stop (void)\n-{\n-}\n-\n-\n /*\n    AddTime - t1 := t1 + t2\n */\n@@ -503,86 +488,86 @@ static void SubTime (unsigned int *s, unsigned int *m, Selective_Timeval a, Sele\n    activatePending - activates the first interrupt pending and clears it.\n */\n \n-static unsigned int activatePending (unsigned int untilInterrupt, RTint_DispatchVector call, unsigned int pri, int maxFd, Selective_SetOfFd *i, Selective_SetOfFd *o, Selective_Timeval *t, Selective_Timeval b4, Selective_Timeval after)\n+static unsigned int activatePending (unsigned int untilInterrupt, RTint_DispatchVector call, unsigned int pri, int maxFd, Selective_SetOfFd *inSet, Selective_SetOfFd *outSet, Selective_Timeval *timeval, Selective_Timeval b4, Selective_Timeval after)\n {\n-  int r;\n+  int result;\n   unsigned int p;\n-  RTint_Vector v;\n+  RTint_Vector vec;\n   unsigned int b4s;\n   unsigned int b4m;\n   unsigned int afs;\n   unsigned int afm;\n-  unsigned int s;\n-  unsigned int m;\n+  unsigned int sec;\n+  unsigned int micro;\n \n   RTco_wait (lock);\n   p = static_cast<unsigned int> (7);\n   while (p > pri)\n     {\n-      v = Pending.array[p-(COROUTINES_UnassignedPriority)];\n-      while (v != NULL)\n+      vec = Pending.array[p-(COROUTINES_UnassignedPriority)];\n+      while (vec != NULL)\n         {\n-          switch (v->type)\n+          switch (vec->type)\n             {\n               case RTint_input:\n-                if (((v->File < maxFd) && ((*i) != NULL)) && (Selective_FdIsSet (v->File, (*i))))\n+                if (((vec->File < maxFd) && ((*inSet) != NULL)) && (Selective_FdIsSet (vec->File, (*inSet))))\n                   {\n                     if (Debugging)\n                       {\n-                        libc_printf ((const char *) \"read (fd=%d) is ready (vec=%d)\\\\n\", 32, v->File, v->no);\n+                        libc_printf ((const char *) \"read (fd=%d) is ready (vec=%d)\\\\n\", 32, vec->File, vec->no);\n                         DumpPendingQueue ();\n                       }\n-                    Selective_FdClr (v->File, (*i));  /* so we dont activate this again from our select.  */\n+                    Selective_FdClr (vec->File, (*inSet));  /* so we dont activate this again from our select.  */\n                     RTco_signal (lock);  /* so we dont activate this again from our select.  */\n-                    (*call.proc) (v->no, v->priority, v->arg);\n+                    (*call.proc) (vec->no, vec->priority, vec->arg);\n                     return TRUE;\n                   }\n                 break;\n \n               case RTint_output:\n-                if (((v->File < maxFd) && ((*o) != NULL)) && (Selective_FdIsSet (v->File, (*o))))\n+                if (((vec->File < maxFd) && ((*outSet) != NULL)) && (Selective_FdIsSet (vec->File, (*outSet))))\n                   {\n                     if (Debugging)\n                       {\n-                        libc_printf ((const char *) \"write (fd=%d) is ready (vec=%d)\\\\n\", 33, v->File, v->no);\n+                        libc_printf ((const char *) \"write (fd=%d) is ready (vec=%d)\\\\n\", 33, vec->File, vec->no);\n                         DumpPendingQueue ();\n                       }\n-                    Selective_FdClr (v->File, (*o));  /* so we dont activate this again from our select.  */\n+                    Selective_FdClr (vec->File, (*outSet));  /* so we dont activate this again from our select.  */\n                     RTco_signal (lock);  /* so we dont activate this again from our select.  */\n-                    (*call.proc) (v->no, v->priority, v->arg);\n+                    (*call.proc) (vec->no, vec->priority, vec->arg);\n                     return TRUE;\n                   }\n                 break;\n \n               case RTint_time:\n-                if (untilInterrupt && ((*t) != NULL))\n+                if (untilInterrupt && ((*timeval) != NULL))\n                   {\n-                    r = Selective_GetTimeOfDay (after);\n-                    Assertion_Assert (r == 0);\n+                    result = Selective_GetTimeOfDay (after);\n+                    Assertion_Assert (result == 0);\n                     if (Debugging)\n                       {\n-                        Selective_GetTime ((*t), &s, &m);\n-                        Assertion_Assert (m < Microseconds);\n+                        Selective_GetTime ((*timeval), &sec, &micro);\n+                        Assertion_Assert (micro < Microseconds);\n                         Selective_GetTime (after, &afs, &afm);\n                         Assertion_Assert (afm < Microseconds);\n                         Selective_GetTime (b4, &b4s, &b4m);\n                         Assertion_Assert (b4m < Microseconds);\n-                        libc_printf ((const char *) \"waited %u.%06u + %u.%06u now is %u.%06u\\\\n\", 41, s, m, b4s, b4m, afs, afm);\n+                        libc_printf ((const char *) \"waited %u.%06u + %u.%06u now is %u.%06u\\\\n\", 41, sec, micro, b4s, b4m, afs, afm);\n                       }\n-                    if (IsGreaterEqual (after, v->abs_))\n+                    if (IsGreaterEqual (after, vec->abs_))\n                       {\n                         if (Debugging)\n                           {\n                             DumpPendingQueue ();\n                             libc_printf ((const char *) \"time has expired calling dispatcher\\\\n\", 37);\n                           }\n-                        (*t) = Selective_KillTime ((*t));  /* so we dont activate this again from our select.  */\n+                        (*timeval) = Selective_KillTime ((*timeval));  /* so we dont activate this again from our select.  */\n                         RTco_signal (lock);  /* so we dont activate this again from our select.  */\n                         if (Debugging)\n                           {\n-                            libc_printf ((const char *) \"call (%d, %d, 0x%x)\\\\n\", 21, v->no, v->priority, v->arg);\n+                            libc_printf ((const char *) \"call (%d, %d, 0x%x)\\\\n\", 21, vec->no, vec->priority, vec->arg);\n                           }\n-                        (*call.proc) (v->no, v->priority, v->arg);\n+                        (*call.proc) (vec->no, vec->priority, vec->arg);\n                         return TRUE;\n                       }\n                     else if (Debugging)\n@@ -595,10 +580,10 @@ static unsigned int activatePending (unsigned int untilInterrupt, RTint_Dispatch\n \n \n               default:\n-                CaseException (\"../../gcc/m2/gm2-libs/RTint.def\", 25, 1);\n+                CaseException (\"../../gcc-read-write/gcc/m2/gm2-libs/RTint.def\", 25, 1);\n                 __builtin_unreachable ();\n             }\n-          v = v->pending;\n+          vec = vec->pending;\n         }\n       p -= 1;\n     }\n@@ -636,33 +621,33 @@ static void init (void)\n \n extern \"C\" unsigned int RTint_InitInputVector (int fd, unsigned int pri)\n {\n-  RTint_Vector v;\n+  RTint_Vector vptr;\n \n   if (Debugging)\n     {\n       libc_printf ((const char *) \"InitInputVector fd = %d priority = %d\\\\n\", 39, fd, pri);\n     }\n   RTco_wait (lock);\n-  v = FindVector (fd, RTint_input);\n-  if (v == NULL)\n+  vptr = FindVector (fd, RTint_input);\n+  if (vptr == NULL)\n     {\n-      Storage_ALLOCATE ((void **) &v, sizeof (RTint__T1));\n+      Storage_ALLOCATE ((void **) &vptr, sizeof (RTint__T1));\n       VecNo += 1;\n-      v->type = RTint_input;\n-      v->priority = pri;\n-      v->arg = NULL;\n-      v->pending = NULL;\n-      v->exists = Exists;\n-      v->no = VecNo;\n-      v->File = fd;\n-      Exists = v;\n+      vptr->type = RTint_input;\n+      vptr->priority = pri;\n+      vptr->arg = NULL;\n+      vptr->pending = NULL;\n+      vptr->exists = Exists;\n+      vptr->no = VecNo;\n+      vptr->File = fd;\n+      Exists = vptr;\n       RTco_signal (lock);\n       return VecNo;\n     }\n   else\n     {\n       RTco_signal (lock);\n-      return v->no;\n+      return vptr->no;\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n   __builtin_unreachable ();\n@@ -676,39 +661,39 @@ extern \"C\" unsigned int RTint_InitInputVector (int fd, unsigned int pri)\n \n extern \"C\" unsigned int RTint_InitOutputVector (int fd, unsigned int pri)\n {\n-  RTint_Vector v;\n+  RTint_Vector vptr;\n \n   RTco_wait (lock);\n-  v = FindVector (fd, RTint_output);\n-  if (v == NULL)\n+  vptr = FindVector (fd, RTint_output);\n+  if (vptr == NULL)\n     {\n-      Storage_ALLOCATE ((void **) &v, sizeof (RTint__T1));\n-      if (v == NULL)\n+      Storage_ALLOCATE ((void **) &vptr, sizeof (RTint__T1));\n+      if (vptr == NULL)\n         {\n           M2RTS_HALT (-1);\n           __builtin_unreachable ();\n         }\n       else\n         {\n           VecNo += 1;\n-          v->type = RTint_output;\n-          v->priority = pri;\n-          v->arg = NULL;\n-          v->pending = NULL;\n-          v->exists = Exists;\n-          v->no = VecNo;\n-          v->File = fd;\n-          Exists = v;\n+          vptr->type = RTint_output;\n+          vptr->priority = pri;\n+          vptr->arg = NULL;\n+          vptr->pending = NULL;\n+          vptr->exists = Exists;\n+          vptr->no = VecNo;\n+          vptr->File = fd;\n+          Exists = vptr;\n           RTco_signal (lock);\n           return VecNo;\n         }\n     }\n   else\n     {\n       RTco_signal (lock);\n-      return v->no;\n+      return vptr->no;\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/RTint.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/RTint.def\", 25, 1);\n   __builtin_unreachable ();\n }\n \n@@ -720,11 +705,11 @@ extern \"C\" unsigned int RTint_InitOutputVector (int fd, unsigned int pri)\n \n extern \"C\" unsigned int RTint_InitTimeVector (unsigned int micro, unsigned int secs, unsigned int pri)\n {\n-  RTint_Vector v;\n+  RTint_Vector vptr;\n \n   RTco_wait (lock);\n-  Storage_ALLOCATE ((void **) &v, sizeof (RTint__T1));\n-  if (v == NULL)\n+  Storage_ALLOCATE ((void **) &vptr, sizeof (RTint__T1));\n+  if (vptr == NULL)\n     {\n       M2RTS_HALT (-1);\n       __builtin_unreachable ();\n@@ -733,16 +718,16 @@ extern \"C\" unsigned int RTint_InitTimeVector (unsigned int micro, unsigned int s\n     {\n       VecNo += 1;\n       Assertion_Assert (micro < Microseconds);\n-      v->type = RTint_time;\n-      v->priority = pri;\n-      v->arg = NULL;\n-      v->pending = NULL;\n-      v->exists = Exists;\n-      v->no = VecNo;\n-      v->rel = Selective_InitTime (secs+DebugTime, micro);\n-      v->abs_ = Selective_InitTime (0, 0);\n-      v->queued = FALSE;\n-      Exists = v;\n+      vptr->type = RTint_time;\n+      vptr->priority = pri;\n+      vptr->arg = NULL;\n+      vptr->pending = NULL;\n+      vptr->exists = Exists;\n+      vptr->no = VecNo;\n+      vptr->rel = Selective_InitTime (secs+DebugTime, micro);\n+      vptr->abs_ = Selective_InitTime (0, 0);\n+      vptr->queued = FALSE;\n+      Exists = vptr;\n     }\n   RTco_signal (lock);\n   return VecNo;\n@@ -758,18 +743,18 @@ extern \"C\" unsigned int RTint_InitTimeVector (unsigned int micro, unsigned int s\n \n extern \"C\" void RTint_ReArmTimeVector (unsigned int vec, unsigned int micro, unsigned int secs)\n {\n-  RTint_Vector v;\n+  RTint_Vector vptr;\n \n   Assertion_Assert (micro < Microseconds);\n   RTco_wait (lock);\n-  v = FindVectorNo (vec);\n-  if (v == NULL)\n+  vptr = FindVectorNo (vec);\n+  if (vptr == NULL)\n     {\n-      M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/RTint.mod\", 31, 286, (const char *) \"ReArmTimeVector\", 15, (const char *) \"cannot find vector supplied\", 27);\n+      M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/RTint.mod\", 46, 286, (const char *) \"ReArmTimeVector\", 15, (const char *) \"cannot find vector supplied\", 27);\n     }\n   else\n     {\n-      Selective_SetTime (v->rel, secs+DebugTime, micro);\n+      Selective_SetTime (vptr->rel, secs+DebugTime, micro);\n     }\n   RTco_signal (lock);\n }\n@@ -784,53 +769,53 @@ extern \"C\" void RTint_ReArmTimeVector (unsigned int vec, unsigned int micro, uns\n \n extern \"C\" void RTint_GetTimeVector (unsigned int vec, unsigned int *micro, unsigned int *secs)\n {\n-  RTint_Vector v;\n+  RTint_Vector vptr;\n \n   RTco_wait (lock);\n-  v = FindVectorNo (vec);\n-  if (v == NULL)\n+  vptr = FindVectorNo (vec);\n+  if (vptr == NULL)\n     {\n-      M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/RTint.mod\", 31, 312, (const char *) \"GetTimeVector\", 13, (const char *) \"cannot find vector supplied\", 27);\n+      M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/RTint.mod\", 46, 312, (const char *) \"GetTimeVector\", 13, (const char *) \"cannot find vector supplied\", 27);\n     }\n   else\n     {\n-      Selective_GetTime (v->rel, secs, micro);\n+      Selective_GetTime (vptr->rel, secs, micro);\n       Assertion_Assert ((*micro) < Microseconds);\n     }\n   RTco_signal (lock);\n }\n \n \n /*\n-   AttachVector - adds the pointer, p, to be associated with the interrupt\n+   AttachVector - adds the pointer ptr to be associated with the interrupt\n                   vector. It returns the previous value attached to this\n                   vector.\n */\n \n-extern \"C\" void * RTint_AttachVector (unsigned int vec, void * p)\n+extern \"C\" void * RTint_AttachVector (unsigned int vec, void * ptr)\n {\n-  RTint_Vector v;\n-  void * l;\n+  RTint_Vector vptr;\n+  void * prevArg;\n \n   RTco_wait (lock);\n-  v = FindVectorNo (vec);\n-  if (v == NULL)\n+  vptr = FindVectorNo (vec);\n+  if (vptr == NULL)\n     {\n-      M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/RTint.mod\", 31, 339, (const char *) \"AttachVector\", 12, (const char *) \"cannot find vector supplied\", 27);\n+      M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/RTint.mod\", 46, 339, (const char *) \"AttachVector\", 12, (const char *) \"cannot find vector supplied\", 27);\n     }\n   else\n     {\n-      l = v->arg;\n-      v->arg = p;\n+      prevArg = vptr->arg;\n+      vptr->arg = ptr;\n       if (Debugging)\n         {\n-          libc_printf ((const char *) \"AttachVector %d with 0x%x\\\\n\", 27, vec, p);\n+          libc_printf ((const char *) \"AttachVector %d with %p\\\\n\", 25, vec, ptr);\n           DumpPendingQueue ();\n         }\n       RTco_signal (lock);\n-      return l;\n+      return prevArg;\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/RTint.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/RTint.def\", 25, 1);\n   __builtin_unreachable ();\n }\n \n@@ -842,47 +827,46 @@ extern \"C\" void * RTint_AttachVector (unsigned int vec, void * p)\n \n extern \"C\" void RTint_IncludeVector (unsigned int vec)\n {\n-  RTint_Vector v;\n-  unsigned int m;\n-  unsigned int s;\n-  int r;\n+  RTint_Vector vptr;\n+  unsigned int micro;\n+  unsigned int sec;\n+  int result;\n \n   RTco_wait (lock);\n-  v = FindPendingVector (vec);\n-  if (v == NULL)\n+  vptr = FindPendingVector (vec);\n+  if (vptr == NULL)\n     {\n       /* avoid dangling else.  */\n-      v = FindVectorNo (vec);\n-      if (v == NULL)\n+      vptr = FindVectorNo (vec);\n+      if (vptr == NULL)\n         {\n-          M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/RTint.mod\", 31, 372, (const char *) \"IncludeVector\", 13, (const char *) \"cannot find vector supplied\", 27);\n+          M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/RTint.mod\", 46, 372, (const char *) \"IncludeVector\", 13, (const char *) \"cannot find vector supplied\", 27);\n         }\n       else\n         {\n           /* printf('including vector %d  (fd = %d)\n           ', vec, v^.File) ;  */\n-          v->pending = Pending.array[v->priority-(COROUTINES_UnassignedPriority)];\n-          Pending.array[v->priority-(COROUTINES_UnassignedPriority)] = v;\n-          if ((v->type == RTint_time) && ! v->queued)\n+          vptr->pending = Pending.array[vptr->priority-(COROUTINES_UnassignedPriority)];\n+          Pending.array[vptr->priority-(COROUTINES_UnassignedPriority)] = vptr;\n+          if ((vptr->type == RTint_time) && ! vptr->queued)\n             {\n-              v->queued = TRUE;\n-              r = Selective_GetTimeOfDay (v->abs_);\n-              Assertion_Assert (r == 0);\n-              Selective_GetTime (v->abs_, &s, &m);\n-              Assertion_Assert (m < Microseconds);\n-              AddTime (v->abs_, v->rel);\n-              Selective_GetTime (v->abs_, &s, &m);\n-              Assertion_Assert (m < Microseconds);\n+              vptr->queued = TRUE;\n+              result = Selective_GetTimeOfDay (vptr->abs_);\n+              Assertion_Assert (result == 0);\n+              Selective_GetTime (vptr->abs_, &sec, &micro);\n+              Assertion_Assert (micro < Microseconds);\n+              AddTime (vptr->abs_, vptr->rel);\n+              Selective_GetTime (vptr->abs_, &sec, &micro);\n+              Assertion_Assert (micro < Microseconds);\n             }\n         }\n     }\n   else\n     {\n       if (Debugging)\n         {\n-          libc_printf ((const char *) \"odd vector (%d) type (%d) arg (0x%x) is already attached to the pending queue\\\\n\", 79, vec, v->type, v->arg);\n+          libc_printf ((const char *) \"odd vector (%d) type (%d) arg (%p) is already attached to the pending queue\\\\n\", 77, vec, vptr->type, vptr->arg);\n         }\n-      stop ();\n     }\n   RTco_signal (lock);\n }\n@@ -895,35 +879,35 @@ extern \"C\" void RTint_IncludeVector (unsigned int vec)\n \n extern \"C\" void RTint_ExcludeVector (unsigned int vec)\n {\n-  RTint_Vector v;\n-  RTint_Vector u;\n+  RTint_Vector vptr;\n+  RTint_Vector uptr;\n \n   RTco_wait (lock);\n-  v = FindPendingVector (vec);\n-  if (v == NULL)\n+  vptr = FindPendingVector (vec);\n+  if (vptr == NULL)\n     {\n-      M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/RTint.mod\", 31, 415, (const char *) \"ExcludeVector\", 13, (const char *) \"cannot find pending vector supplied\", 35);\n+      M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/RTint.mod\", 46, 414, (const char *) \"ExcludeVector\", 13, (const char *) \"cannot find pending vector supplied\", 35);\n     }\n   else\n     {\n       /* printf('excluding vector %d\n       ', vec) ;  */\n-      if (Pending.array[v->priority-(COROUTINES_UnassignedPriority)] == v)\n+      if (Pending.array[vptr->priority-(COROUTINES_UnassignedPriority)] == vptr)\n         {\n-          Pending.array[v->priority-(COROUTINES_UnassignedPriority)] = Pending.array[v->priority-(COROUTINES_UnassignedPriority)]->pending;\n+          Pending.array[vptr->priority-(COROUTINES_UnassignedPriority)] = Pending.array[vptr->priority-(COROUTINES_UnassignedPriority)]->pending;\n         }\n       else\n         {\n-          u = Pending.array[v->priority-(COROUTINES_UnassignedPriority)];\n-          while (u->pending != v)\n+          uptr = Pending.array[vptr->priority-(COROUTINES_UnassignedPriority)];\n+          while (uptr->pending != vptr)\n             {\n-              u = u->pending;\n+              uptr = uptr->pending;\n             }\n-          u->pending = v->pending;\n+          uptr->pending = vptr->pending;\n         }\n-      if (v->type == RTint_time)\n+      if (vptr->type == RTint_time)\n         {\n-          v->queued = FALSE;\n+          vptr->queued = FALSE;\n         }\n     }\n   RTco_signal (lock);\n@@ -942,19 +926,19 @@ extern \"C\" void RTint_ExcludeVector (unsigned int vec)\n extern \"C\" void RTint_Listen (unsigned int untilInterrupt, RTint_DispatchVector call, unsigned int pri)\n {\n   unsigned int found;\n-  int r;\n+  int result;\n   Selective_Timeval after;\n   Selective_Timeval b4;\n-  Selective_Timeval t;\n-  RTint_Vector v;\n-  Selective_SetOfFd i;\n-  Selective_SetOfFd o;\n+  Selective_Timeval timeval;\n+  RTint_Vector vec;\n+  Selective_SetOfFd inSet;\n+  Selective_SetOfFd outSet;\n   unsigned int b4s;\n   unsigned int b4m;\n   unsigned int afs;\n   unsigned int afm;\n-  unsigned int s;\n-  unsigned int m;\n+  unsigned int sec;\n+  unsigned int micro;\n   int maxFd;\n   unsigned int p;\n \n@@ -966,103 +950,103 @@ extern \"C\" void RTint_Listen (unsigned int untilInterrupt, RTint_DispatchVector\n           DumpPendingQueue ();\n         }\n       maxFd = -1;\n-      t = NULL;\n-      i = NULL;\n-      o = NULL;\n-      t = Selective_InitTime (static_cast<unsigned int> (INT_MAX), 0);\n+      timeval = NULL;\n+      inSet = NULL;\n+      outSet = NULL;\n+      timeval = Selective_InitTime (static_cast<unsigned int> (INT_MAX), 0);\n       p = static_cast<unsigned int> (7);\n       found = FALSE;\n       while (p > pri)\n         {\n-          v = Pending.array[p-(COROUTINES_UnassignedPriority)];\n-          while (v != NULL)\n+          vec = Pending.array[p-(COROUTINES_UnassignedPriority)];\n+          while (vec != NULL)\n             {\n-              switch (v->type)\n+              switch (vec->type)\n                 {\n                   case RTint_input:\n-                    AddFd (&i, &maxFd, v->File);\n+                    AddFd (&inSet, &maxFd, vec->File);\n                     break;\n \n                   case RTint_output:\n-                    AddFd (&o, &maxFd, v->File);\n+                    AddFd (&outSet, &maxFd, vec->File);\n                     break;\n \n                   case RTint_time:\n-                    if (IsGreaterEqual (t, v->abs_))\n+                    if (IsGreaterEqual (timeval, vec->abs_))\n                       {\n-                        Selective_GetTime (v->abs_, &s, &m);\n-                        Assertion_Assert (m < Microseconds);\n+                        Selective_GetTime (vec->abs_, &sec, &micro);\n+                        Assertion_Assert (micro < Microseconds);\n                         if (Debugging)\n                           {\n-                            libc_printf ((const char *) \"shortest delay is %u.%06u\\\\n\", 27, s, m);\n+                            libc_printf ((const char *) \"shortest delay is %u.%06u\\\\n\", 27, sec, micro);\n                           }\n-                        Selective_SetTime (t, s, m);\n+                        Selective_SetTime (timeval, sec, micro);\n                         found = TRUE;\n                       }\n                     break;\n \n \n                   default:\n-                    CaseException (\"../../gcc/m2/gm2-libs/RTint.def\", 25, 1);\n+                    CaseException (\"../../gcc-read-write/gcc/m2/gm2-libs/RTint.def\", 25, 1);\n                     __builtin_unreachable ();\n                 }\n-              v = v->pending;\n+              vec = vec->pending;\n             }\n           p -= 1;\n         }\n       if (! untilInterrupt)\n         {\n-          Selective_SetTime (t, 0, 0);\n+          Selective_SetTime (timeval, 0, 0);\n         }\n-      if (((untilInterrupt && (i == NULL)) && (o == NULL)) && ! found)\n+      if (((untilInterrupt && (inSet == NULL)) && (outSet == NULL)) && ! found)\n         {\n-          M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/RTint.mod\", 31, 731, (const char *) \"Listen\", 6, (const char *) \"deadlock found, no more processes to run and no interrupts active\", 65);\n+          M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/RTint.mod\", 46, 730, (const char *) \"Listen\", 6, (const char *) \"deadlock found, no more processes to run and no interrupts active\", 65);\n         }\n       /* printf('}\n       ') ;  */\n-      if (((! found && (maxFd == -1)) && (i == NULL)) && (o == NULL))\n+      if (((! found && (maxFd == -1)) && (inSet == NULL)) && (outSet == NULL))\n         {\n           /* no file descriptors to be selected upon.  */\n-          t = Selective_KillTime (t);\n+          timeval = Selective_KillTime (timeval);\n           RTco_signal (lock);\n           return ;\n         }\n       else\n         {\n-          Selective_GetTime (t, &s, &m);\n-          Assertion_Assert (m < Microseconds);\n+          Selective_GetTime (timeval, &sec, &micro);\n+          Assertion_Assert (micro < Microseconds);\n           b4 = Selective_InitTime (0, 0);\n           after = Selective_InitTime (0, 0);\n-          r = Selective_GetTimeOfDay (b4);\n-          Assertion_Assert (r == 0);\n-          SubTime (&s, &m, t, b4);\n-          Selective_SetTime (t, s, m);\n+          result = Selective_GetTimeOfDay (b4);\n+          Assertion_Assert (result == 0);\n+          SubTime (&sec, &micro, timeval, b4);\n+          Selective_SetTime (timeval, sec, micro);\n           if (Debugging)\n             {\n-              libc_printf ((const char *) \"select waiting for %u.%06u seconds\\\\n\", 36, s, m);\n+              libc_printf ((const char *) \"select waiting for %u.%06u seconds\\\\n\", 36, sec, micro);\n             }\n           RTco_signal (lock);\n           do {\n             if (Debugging)\n               {\n-                libc_printf ((const char *) \"select (.., .., .., %u.%06u)\\\\n\", 30, s, m);\n+                libc_printf ((const char *) \"select (.., .., .., %u.%06u)\\\\n\", 30, sec, micro);\n               }\n-            r = RTco_select (maxFd+1, i, o, NULL, t);\n-            if (r == -1)\n+            result = RTco_select (maxFd+1, inSet, outSet, NULL, timeval);\n+            if (result == -1)\n               {\n                 libc_perror ((const char *) \"select\", 6);\n-                r = RTco_select (maxFd+1, i, o, NULL, NULL);\n-                if (r == -1)\n+                result = RTco_select (maxFd+1, inSet, outSet, NULL, NULL);\n+                if (result == -1)\n                   {\n                     libc_perror ((const char *) \"select timeout argument is faulty\", 33);\n                   }\n-                r = RTco_select (maxFd+1, i, NULL, NULL, t);\n-                if (r == -1)\n+                result = RTco_select (maxFd+1, inSet, NULL, NULL, timeval);\n+                if (result == -1)\n                   {\n                     libc_perror ((const char *) \"select output fd argument is faulty\", 35);\n                   }\n-                r = RTco_select (maxFd+1, NULL, o, NULL, t);\n-                if (r == -1)\n+                result = RTco_select (maxFd+1, NULL, outSet, NULL, timeval);\n+                if (result == -1)\n                   {\n                     libc_perror ((const char *) \"select input fd argument is faulty\", 34);\n                   }\n@@ -1071,29 +1055,29 @@ extern \"C\" void RTint_Listen (unsigned int untilInterrupt, RTint_DispatchVector\n                     libc_perror ((const char *) \"select maxFD+1 argument is faulty\", 33);\n                   }\n               }\n-          } while (! (r != -1));\n+          } while (! (result != -1));\n         }\n-      while (activatePending (untilInterrupt, call, pri, maxFd+1, &i, &o, &t, b4, after))\n+      while (activatePending (untilInterrupt, call, pri, maxFd+1, &inSet, &outSet, &timeval, b4, after))\n         {}  /* empty.  */\n-      if (t != NULL)\n+      if (timeval != NULL)\n         {\n-          t = Selective_KillTime (t);\n+          timeval = Selective_KillTime (timeval);\n         }\n       if (after != NULL)\n         {\n-          t = Selective_KillTime (after);\n+          after = Selective_KillTime (after);\n         }\n       if (b4 != NULL)\n         {\n-          t = Selective_KillTime (b4);\n+          b4 = Selective_KillTime (b4);\n         }\n-      if (i != NULL)\n+      if (inSet != NULL)\n         {\n-          i = Selective_KillSet (i);\n+          inSet = Selective_KillSet (inSet);\n         }\n-      if (o != NULL)\n+      if (outSet != NULL)\n         {\n-          o = Selective_KillSet (o);\n+          outSet = Selective_KillSet (outSet);\n         }\n     }\n   RTco_signal (lock);"}, {"sha": "ccc6afefc400d99f09b93de317d35d086ef1c071", "filename": "gcc/m2/mc-boot/GRTint.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGRTint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGRTint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGRTint.h?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -97,7 +97,7 @@ EXTERN void RTint_GetTimeVector (unsigned int vec, unsigned int *micro, unsigned\n                   vector.\n */\n \n-EXTERN void * RTint_AttachVector (unsigned int vec, void * p);\n+EXTERN void * RTint_AttachVector (unsigned int vec, void * ptr);\n \n /*\n    IncludeVector - includes, vec, into the dispatcher list of"}, {"sha": "41affe2a054d55d0590c1ce55cabb91f57be6fa4", "filename": "gcc/m2/mc-boot/GStdIO.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGStdIO.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGStdIO.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGStdIO.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -193,7 +193,7 @@ extern \"C\" StdIO_ProcWrite StdIO_GetCurrentOutput (void)\n       M2RTS_HALT (-1);\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/StdIO.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/StdIO.def\", 25, 1);\n   __builtin_unreachable ();\n }\n \n@@ -252,7 +252,7 @@ extern \"C\" StdIO_ProcRead StdIO_GetCurrentInput (void)\n       M2RTS_HALT (-1);\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/StdIO.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/StdIO.def\", 25, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "faa5e34459ecbe654fa9defc9b898357cf2bb021", "filename": "gcc/m2/mc-boot/GStringConvert.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGStringConvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGStringConvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGStringConvert.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -1916,7 +1916,7 @@ extern \"C\" DynamicStrings_String StringConvert_ToSigFig (DynamicStrings_String s\n   int point;\n   unsigned int poTen;\n \n-  Assert ((IsDigit (DynamicStrings_char (s, 0))) || ((DynamicStrings_char (s, 0)) == '.'), (const char *) \"../../gcc/m2/gm2-libs/StringConvert.mod\", 39, 1222, (const char *) \"ToSigFig\", 8);\n+  Assert ((IsDigit (DynamicStrings_char (s, 0))) || ((DynamicStrings_char (s, 0)) == '.'), (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/StringConvert.mod\", 54, 1222, (const char *) \"ToSigFig\", 8);\n   point = DynamicStrings_Index (s, '.', 0);\n   if (point < 0)\n     {\n@@ -1968,7 +1968,7 @@ extern \"C\" DynamicStrings_String StringConvert_ToDecimalPlaces (DynamicStrings_S\n {\n   int point;\n \n-  Assert ((IsDigit (DynamicStrings_char (s, 0))) || ((DynamicStrings_char (s, 0)) == '.'), (const char *) \"../../gcc/m2/gm2-libs/StringConvert.mod\", 39, 1069, (const char *) \"ToDecimalPlaces\", 15);\n+  Assert ((IsDigit (DynamicStrings_char (s, 0))) || ((DynamicStrings_char (s, 0)) == '.'), (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/StringConvert.mod\", 54, 1069, (const char *) \"ToDecimalPlaces\", 15);\n   point = DynamicStrings_Index (s, '.', 0);\n   if (point < 0)\n     {"}, {"sha": "98c03f66c358a38149f154fab251348c49339263", "filename": "gcc/m2/mc-boot/GSysStorage.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGSysStorage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGSysStorage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGSysStorage.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -93,7 +93,7 @@ extern \"C\" void SysStorage_ALLOCATE (void * *a, unsigned int size)\n   (*a) = libc_malloc (static_cast<size_t> (size));\n   if ((*a) == NULL)\n     {\n-      Debug_Halt ((const char *) \"out of memory error\", 19, 50, (const char *) \"../../gcc/m2/gm2-libs/SysStorage.mod\", 36);\n+      Debug_Halt ((const char *) \"out of memory error\", 19, 50, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/SysStorage.mod\", 51);\n     }\n   if (enableTrace && trace)\n     {\n@@ -118,7 +118,7 @@ extern \"C\" void SysStorage_DEALLOCATE (void * *a, unsigned int size)\n         }\n       if ((libc_memset ((*a), 0, static_cast<size_t> (size))) != (*a))\n         {\n-          Debug_Halt ((const char *) \"memset should have returned the first parameter\", 47, 76, (const char *) \"../../gcc/m2/gm2-libs/SysStorage.mod\", 36);\n+          Debug_Halt ((const char *) \"memset should have returned the first parameter\", 47, 76, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/SysStorage.mod\", 51);\n         }\n     }\n   if (enableDeallocation)\n@@ -163,7 +163,7 @@ extern \"C\" void SysStorage_REALLOCATE (void * *a, unsigned int size)\n       (*a) = libc_realloc ((*a), static_cast<size_t> (size));\n       if ((*a) == NULL)\n         {\n-          Debug_Halt ((const char *) \"out of memory error\", 19, 119, (const char *) \"../../gcc/m2/gm2-libs/SysStorage.mod\", 36);\n+          Debug_Halt ((const char *) \"out of memory error\", 19, 119, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/SysStorage.mod\", 51);\n         }\n       if (enableTrace && trace)\n         {"}, {"sha": "4a851638d391bd4bed8fc78eca4e407389523e16", "filename": "gcc/m2/mc-boot/Gdecl.c", "status": "modified", "additions": 69, "deletions": 67, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGdecl.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -2746,6 +2746,8 @@ extern \"C\" unsigned int mcOptions_getGccConfigSystem (void);\n extern \"C\" unsigned int mcOptions_getScaffoldDynamic (void);\n extern \"C\" unsigned int mcOptions_getScaffoldMain (void);\n extern \"C\" void mcOptions_writeGPLheader (FIO_File f);\n+extern \"C\" void mcOptions_setSuppressNoReturn (unsigned int value);\n+extern \"C\" unsigned int mcOptions_getSuppressNoReturn (void);\n extern \"C\" DynamicStrings_String FormatStrings_Sprintf0 (DynamicStrings_String fmt);\n extern \"C\" DynamicStrings_String FormatStrings_Sprintf1 (DynamicStrings_String fmt, const unsigned char *w_, unsigned int _w_high);\n extern \"C\" DynamicStrings_String FormatStrings_Sprintf2 (DynamicStrings_String fmt, const unsigned char *w1_, unsigned int _w1_high, const unsigned char *w2_, unsigned int _w2_high);\n@@ -6680,7 +6682,7 @@ static decl_node newNode (decl_nodeT k)\n       d->at.firstUsed = 0;\n       return d;\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -7040,7 +7042,7 @@ static decl_node addToScope (decl_node n)\n     }\n   M2RTS_HALT (-1);\n   __builtin_unreachable ();\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -7118,7 +7120,7 @@ static void setUnary (decl_node u, decl_nodeT k, decl_node a, decl_node t)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -7401,7 +7403,7 @@ static void putFieldVarient (decl_node f, decl_node v)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   switch (f->kind)\n@@ -7412,7 +7414,7 @@ static void putFieldVarient (decl_node f, decl_node v)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -7463,7 +7465,7 @@ static decl_node putFieldRecord (decl_node r, nameKey_Name tag, decl_node type,\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* fill in, n.  */\n@@ -7521,7 +7523,7 @@ static void putVarientTag (decl_node v, decl_node tag)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -7545,7 +7547,7 @@ static decl_node getParent (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -7573,7 +7575,7 @@ static decl_node getRecord (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -7753,7 +7755,7 @@ static unsigned int getConstExpComplete (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -7858,7 +7860,7 @@ static decl_node makeVal (decl_node params)\n       M2RTS_HALT (-1);\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -7879,7 +7881,7 @@ static decl_node makeCast (decl_node c, decl_node p)\n       M2RTS_HALT (-1);\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -8389,7 +8391,7 @@ static decl_node makeUnary (decl_nodeT k, decl_node e, decl_node res)\n \n \n           default:\n-            CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+            CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n             __builtin_unreachable ();\n         }\n     }\n@@ -8483,7 +8485,7 @@ static DynamicStrings_String getStringContents (decl_node n)\n     }\n   M2RTS_HALT (-1);\n   __builtin_unreachable ();\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -8619,7 +8621,7 @@ static decl_node doMakeBinary (decl_nodeT k, decl_node l, decl_node r, decl_node\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   return n;\n@@ -9219,12 +9221,12 @@ static decl_node doGetExprType (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   M2RTS_HALT (-1);\n   __builtin_unreachable ();\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -9363,12 +9365,12 @@ static decl_node getSymScope (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   M2RTS_HALT (-1);\n   __builtin_unreachable ();\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -9680,7 +9682,7 @@ static unsigned int needsParen (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   return TRUE;\n@@ -9789,7 +9791,7 @@ static void doPolyBinary (mcPretty_pretty p, decl_nodeT op, decl_node left, decl\n \n \n           default:\n-            CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+            CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n             __builtin_unreachable ();\n         }\n     }\n@@ -9815,7 +9817,7 @@ static void doPolyBinary (mcPretty_pretty p, decl_nodeT op, decl_node left, decl\n \n \n           default:\n-            CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+            CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n             __builtin_unreachable ();\n         }\n     }\n@@ -10093,7 +10095,7 @@ static decl_node doGetLastOp (decl_node a, decl_node b)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -10733,7 +10735,7 @@ static void doExprC (mcPretty_pretty p, decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -10938,7 +10940,7 @@ static void doExprM2 (mcPretty_pretty p, decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -11110,7 +11112,7 @@ static DynamicStrings_String replaceChar (DynamicStrings_String s, char ch, cons\n         return s;\n       }\n   }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -11170,7 +11172,7 @@ static unsigned int countChar (DynamicStrings_String s, char ch)\n         return c;\n       }\n   }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -12229,7 +12231,7 @@ static decl_node doMin (decl_node n)\n       M2RTS_HALT (-1);  /* finish the cacading elsif statement.  */\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -12310,7 +12312,7 @@ static decl_node doMax (decl_node n)\n       M2RTS_HALT (-1);  /* finish the cacading elsif statement.  */\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -12599,7 +12601,7 @@ static void doBaseC (mcPretty_pretty p, decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   mcPretty_setNeedSpace (p);\n@@ -12689,7 +12691,7 @@ static void doSystemC (mcPretty_pretty p, decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -13338,7 +13340,7 @@ static void doProcedureHeadingC (decl_node n, unsigned int prototype)\n       outText (doP, (const char *) \"void\", 4);\n     }\n   mcPretty_print (doP, (const char *) \")\", 1);\n-  if (n->procedureF.noreturn && prototype)\n+  if ((n->procedureF.noreturn && prototype) && (! (mcOptions_getSuppressNoReturn ())))\n     {\n       mcPretty_setNeedSpace (doP);\n       outText (doP, (const char *) \"__attribute__ ((noreturn))\", 26);\n@@ -16043,7 +16045,7 @@ static void doCreal (mcPretty_pretty p, decl_node t)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -16074,7 +16076,7 @@ static void doCimag (mcPretty_pretty p, decl_node t)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -16205,7 +16207,7 @@ static void doIntrinsicC (mcPretty_pretty p, decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   outText (p, (const char *) \";\", 1);\n@@ -17367,7 +17369,7 @@ static void dbs (decl_dependentState s, decl_node n)\n \n \n           default:\n-            CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+            CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n             __builtin_unreachable ();\n         }\n       if (n != NULL)\n@@ -18260,10 +18262,10 @@ static decl_dependentState doDependants (alists_alist l, decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -18360,7 +18362,7 @@ static void visitIntrinsicFunction (alists_alist v, decl_node n, decl_nodeProced\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -19359,7 +19361,7 @@ static void visitDependants (alists_alist v, decl_node n, decl_nodeProcedure p)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -19706,12 +19708,12 @@ static DynamicStrings_String genKind (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   M2RTS_HALT (-1);\n   __builtin_unreachable ();\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -20886,7 +20888,7 @@ static void doBaseM2 (mcPretty_pretty p, decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   mcPretty_setNeedSpace (p);\n@@ -20912,7 +20914,7 @@ static void doSystemM2 (mcPretty_pretty p, decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -22123,10 +22125,10 @@ static decl_node doDupExpr (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -22456,7 +22458,7 @@ extern \"C\" unsigned int decl_isVisited (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -22486,7 +22488,7 @@ extern \"C\" void decl_unsetVisited (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -22514,7 +22516,7 @@ extern \"C\" void decl_setVisited (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -22542,7 +22544,7 @@ extern \"C\" void decl_setEnumsComplete (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -22570,7 +22572,7 @@ extern \"C\" unsigned int decl_getEnumsComplete (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -22791,7 +22793,7 @@ extern \"C\" decl_node decl_lookupInScope (decl_node scope, nameKey_Name n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -23166,12 +23168,12 @@ extern \"C\" decl_node decl_getType (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   M2RTS_HALT (-1);\n   __builtin_unreachable ();\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -23565,7 +23567,7 @@ extern \"C\" decl_node decl_getScope (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -24220,7 +24222,7 @@ extern \"C\" decl_node decl_makeVarient (decl_node r)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   return n;\n@@ -24687,7 +24689,7 @@ extern \"C\" nameKey_Name decl_getSymName (decl_node n)\n         __builtin_unreachable ();\n         break;\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -24725,7 +24727,7 @@ extern \"C\" decl_node decl_import (decl_node m, decl_node n)\n \n \n           default:\n-            CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+            CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n             __builtin_unreachable ();\n         }\n       importEnumFields (m, n);\n@@ -24854,7 +24856,7 @@ extern \"C\" void decl_setSource (decl_node n, nameKey_Name s)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -24882,7 +24884,7 @@ extern \"C\" nameKey_Name decl_getSource (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -25325,7 +25327,7 @@ extern \"C\" void decl_addParameter (decl_node proc, decl_node param)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -25418,7 +25420,7 @@ extern \"C\" decl_node decl_makeBinaryTok (mcReserved_toktype op, decl_node l, dec\n       M2RTS_HALT (-1);  /* most likely op needs a clause as above.  */\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -25450,7 +25452,7 @@ extern \"C\" decl_node decl_makeUnaryTok (mcReserved_toktype op, decl_node e)\n       M2RTS_HALT (-1);  /* most likely op needs a clause as above.  */\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -25888,7 +25890,7 @@ extern \"C\" void decl_setConstExpComplete (decl_node n)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -26253,7 +26255,7 @@ extern \"C\" void decl_putBegin (decl_node b, decl_node s)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -26280,7 +26282,7 @@ extern \"C\" void decl_putFinally (decl_node b, decl_node s)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n }\n@@ -26908,7 +26910,7 @@ extern \"C\" void decl_out (void)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/decl.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/decl.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   closeOutput ();"}, {"sha": "e089ac9525017d6710bbe6cdd0507866f4ac6d21", "filename": "gcc/m2/mc-boot/Gkeyc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGkeyc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGkeyc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGkeyc.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -908,7 +908,7 @@ static unsigned int mangleN (nameKey_Name n, DynamicStrings_String *m, unsigned\n         return TRUE;\n       }\n   }\n-  ReturnException (\"../../gcc/m2/mc/keyc.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/keyc.def\", 20, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "2e60c7aa567bc7ad5db88c0f1028a4c7b0b355c2", "filename": "gcc/m2/mc-boot/GmcComment.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcComment.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcComment.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGmcComment.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -257,7 +257,7 @@ static void dumpComment (mcComment_commentDesc cd)\n \n \n       default:\n-        CaseException (\"../../gcc/m2/mc/mcComment.def\", 20, 1);\n+        CaseException (\"../../gcc-read-write/gcc/m2/mc/mcComment.def\", 20, 1);\n         __builtin_unreachable ();\n     }\n   if (cd->used)"}, {"sha": "8a79413add4e28754c279738d96c74ca151e55f7", "filename": "gcc/m2/mc-boot/GmcComp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcComp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcComp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGmcComp.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -294,7 +294,7 @@ static decl_node examineCompilationUnit (void)\n     }\n   mcflex_mcError (DynamicStrings_string (DynamicStrings_InitString ((const char *) \"failed to find module name\", 26)));\n   libc_exit (1);\n-  ReturnException (\"../../gcc/m2/mc/mcComp.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/mcComp.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -324,7 +324,7 @@ static decl_node peepInto (DynamicStrings_String s)\n       mcPrintf_fprintf1 (FIO_StdErr, (const char *) \"failed to open %s\\\\n\", 19, (const unsigned char *) &s, (sizeof (s)-1));\n       libc_exit (1);\n     }\n-  ReturnException (\"../../gcc/m2/mc/mcComp.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/mcComp.def\", 20, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "db45ae8ac87c55214cbc74b2c287097b9dc6ddf9", "filename": "gcc/m2/mc-boot/GmcDebug.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcDebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcDebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGmcDebug.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -54,7 +54,7 @@ extern \"C\" void mcDebug_assert (unsigned int q)\n {\n   if (! q)\n     {\n-      mcError_internalError ((const char *) \"assert failed\", 13, (const char *) \"../../gcc/m2/mc/mcDebug.mod\", 27, 35);\n+      mcError_internalError ((const char *) \"assert failed\", 13, (const char *) \"../../gcc-read-write/gcc/m2/mc/mcDebug.mod\", 42, 35);\n     }\n }\n "}, {"sha": "4d406851d0bead784029297713bf2acea949f220", "filename": "gcc/m2/mc-boot/GmcMetaError.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcMetaError.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcMetaError.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGmcMetaError.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -408,7 +408,7 @@ static void internalFormat (DynamicStrings_String s, int i, const char *m_, unsi\n   s = DynamicStrings_ConCatChar (s, '^');\n   s = SFIO_WriteS (FIO_StdOut, s);\n   FIO_WriteLine (FIO_StdOut);\n-  mcError_internalError ((const char *) m, _m_high, (const char *) \"../../gcc/m2/mc/mcMetaError.mod\", 31, 97);\n+  mcError_internalError ((const char *) m, _m_high, (const char *) \"../../gcc-read-write/gcc/m2/mc/mcMetaError.mod\", 46, 97);\n }\n \n \n@@ -420,7 +420,7 @@ static DynamicStrings_String x (DynamicStrings_String a, DynamicStrings_String b\n {\n   if (a != b)\n     {\n-      mcError_internalError ((const char *) \"different string returned\", 25, (const char *) \"../../gcc/m2/mc/mcMetaError.mod\", 31, 109);\n+      mcError_internalError ((const char *) \"different string returned\", 25, (const char *) \"../../gcc-read-write/gcc/m2/mc/mcMetaError.mod\", 46, 109);\n     }\n   return a;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -734,7 +734,7 @@ static mcError_error doError (mcError_error e, mcMetaError_errorType t, unsigned\n       case mcMetaError_chained:\n         if (e == NULL)\n           {\n-            mcError_internalError ((const char *) \"should not be chaining an error onto an empty error note\", 56, (const char *) \"../../gcc/m2/mc/mcMetaError.mod\", 31, 355);\n+            mcError_internalError ((const char *) \"should not be chaining an error onto an empty error note\", 56, (const char *) \"../../gcc-read-write/gcc/m2/mc/mcMetaError.mod\", 46, 355);\n           }\n         else\n           {\n@@ -758,7 +758,7 @@ static mcError_error doError (mcError_error e, mcMetaError_errorType t, unsigned\n \n \n       default:\n-        mcError_internalError ((const char *) \"unexpected enumeration value\", 28, (const char *) \"../../gcc/m2/mc/mcMetaError.mod\", 31, 369);\n+        mcError_internalError ((const char *) \"unexpected enumeration value\", 28, (const char *) \"../../gcc-read-write/gcc/m2/mc/mcMetaError.mod\", 46, 369);\n         break;\n     }\n   return e;"}, {"sha": "5d4e31be5a7aff28efe4bbbef9771f76732be4d1", "filename": "gcc/m2/mc-boot/GmcOptions.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcOptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcOptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGmcOptions.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -62,6 +62,7 @@ static unsigned int scaffoldDynamic;\n static unsigned int caseRuntime;\n static unsigned int arrayRuntime;\n static unsigned int returnRuntime;\n+static unsigned int suppressNoReturn;\n static unsigned int gccConfigSystem;\n static unsigned int ignoreFQ;\n static unsigned int debugTopological;\n@@ -170,6 +171,18 @@ extern \"C\" unsigned int mcOptions_getScaffoldMain (void);\n \n extern \"C\" void mcOptions_writeGPLheader (FIO_File f);\n \n+/*\n+   setSuppressNoReturn - set suppressNoReturn to value.\n+*/\n+\n+extern \"C\" void mcOptions_setSuppressNoReturn (unsigned int value);\n+\n+/*\n+   getSuppressNoReturn - return the suppressNoReturn value.\n+*/\n+\n+extern \"C\" unsigned int mcOptions_getSuppressNoReturn (void);\n+\n /*\n    getYear - return the year.\n */\n@@ -376,6 +389,7 @@ static void displayHelp (void)\n   mcPrintf_printf0 ((const char *) \"  --automatic         generate a comment at the start of the file warning not to edit as it was automatically generated\\\\n\", 121);\n   mcPrintf_printf0 ((const char *) \"  --scaffold-dynamic  generate dynamic module initialization code for C++\\\\n\", 75);\n   mcPrintf_printf0 ((const char *) \"  --scaffold-main     generate main function which calls upon the dynamic initialization support in M2RTS\\\\n\", 107);\n+  mcPrintf_printf0 ((const char *) \"  --suppress-noreturn suppress the emission of any attribute noreturn\\\\n\", 71);\n   mcPrintf_printf0 ((const char *) \"  filename            the source file must be the last option\\\\n\", 63);\n   libc_exit (0);\n }\n@@ -824,6 +838,11 @@ static void handleOption (DynamicStrings_String arg)\n       /* avoid dangling else.  */\n       scaffoldDynamic = TRUE;\n     }\n+  else if (optionIs ((const char *) \"--suppress-noreturn\", 19, arg))\n+    {\n+      /* avoid dangling else.  */\n+      suppressNoReturn = TRUE;\n+    }\n }\n \n \n@@ -1045,6 +1064,28 @@ extern \"C\" void mcOptions_writeGPLheader (FIO_File f)\n   issueGPL (f);\n }\n \n+\n+/*\n+   setSuppressNoReturn - set suppressNoReturn to value.\n+*/\n+\n+extern \"C\" void mcOptions_setSuppressNoReturn (unsigned int value)\n+{\n+  suppressNoReturn = value;\n+}\n+\n+\n+/*\n+   getSuppressNoReturn - return the suppressNoReturn value.\n+*/\n+\n+extern \"C\" unsigned int mcOptions_getSuppressNoReturn (void)\n+{\n+  return suppressNoReturn;\n+  /* static analysis guarentees a RETURN statement will be used before here.  */\n+  __builtin_unreachable ();\n+}\n+\n extern \"C\" void _M2_mcOptions_init (__attribute__((unused)) int argc,__attribute__((unused)) char *argv[],__attribute__((unused)) char *envp[])\n {\n   langC = TRUE;\n@@ -1066,6 +1107,7 @@ extern \"C\" void _M2_mcOptions_init (__attribute__((unused)) int argc,__attribute\n   gccConfigSystem = FALSE;\n   scaffoldMain = FALSE;\n   scaffoldDynamic = FALSE;\n+  suppressNoReturn = FALSE;\n   hPrefix = DynamicStrings_InitString ((const char *) \"\", 0);\n   cppArgs = DynamicStrings_InitString ((const char *) \"\", 0);\n   cppProgram = DynamicStrings_InitString ((const char *) \"\", 0);"}, {"sha": "de2bc071c9f6a32ca2f1e53eba2e2053ae3fb5cd", "filename": "gcc/m2/mc-boot/GmcOptions.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcOptions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcOptions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGmcOptions.h?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -132,6 +132,18 @@ EXTERN unsigned int mcOptions_getScaffoldMain (void);\n */\n \n EXTERN void mcOptions_writeGPLheader (FIO_File f);\n+\n+/*\n+   setSuppressNoReturn - set suppressNoReturn to value.\n+*/\n+\n+EXTERN void mcOptions_setSuppressNoReturn (unsigned int value);\n+\n+/*\n+   getSuppressNoReturn - return the suppressNoReturn value.\n+*/\n+\n+EXTERN unsigned int mcOptions_getSuppressNoReturn (void);\n #   ifdef __cplusplus\n }\n #   endif"}, {"sha": "95d31a5037b1ece6f8aac6078952df478a95729b", "filename": "gcc/m2/mc-boot/GmcStack.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcStack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGmcStack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGmcStack.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -165,7 +165,7 @@ extern \"C\" void * mcStack_pop (mcStack_stack s)\n       Indexing_DeleteIndice (s->list, Indexing_HighIndice (s->list));\n       return a;\n     }\n-  ReturnException (\"../../gcc/m2/mc/mcStack.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/mcStack.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -215,7 +215,7 @@ extern \"C\" void * mcStack_access (mcStack_stack s, unsigned int i)\n     {\n       return Indexing_GetIndice (s->list, i);\n     }\n-  ReturnException (\"../../gcc/m2/mc/mcStack.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/mcStack.def\", 20, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "b00a59868e4cc4e9a56c62bcb9c63fb1781a059b", "filename": "gcc/m2/mc-boot/GnameKey.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGnameKey.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGnameKey.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGnameKey.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -323,7 +323,7 @@ extern \"C\" nameKey_Name nameKey_makeKey (const char *a_, unsigned int _a_high)\n       (*p) = ASCII_nul;\n       return doMakeKey (n, higha);\n     }\n-  ReturnException (\"../../gcc/m2/mc/nameKey.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/nameKey.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -373,7 +373,7 @@ extern \"C\" nameKey_Name nameKey_makekey (void * a)\n           return doMakeKey (n, higha);\n         }\n     }\n-  ReturnException (\"../../gcc/m2/mc/nameKey.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/mc/nameKey.def\", 20, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "8c16a63474e5ad5e2fc591a395b50ddc4e749a42", "filename": "gcc/m2/mc-boot/GsymbolKey.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGsymbolKey.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc-boot%2FGsymbolKey.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc-boot%2FGsymbolKey.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -142,7 +142,7 @@ static void findNodeAndParentInTree (symbolKey_symbolTree t, nameKey_Name n, sym\n   (*father) = t;\n   if (t == NULL)\n     {\n-      Debug_Halt ((const char *) \"parameter t should never be NIL\", 31, 203, (const char *) \"../../gcc/m2/mc/symbolKey.mod\", 29);\n+      Debug_Halt ((const char *) \"parameter t should never be NIL\", 31, 203, (const char *) \"../../gcc-read-write/gcc/m2/mc/symbolKey.mod\", 44);\n     }\n   (*child) = t->left;\n   if ((*child) != NULL)\n@@ -285,7 +285,7 @@ extern \"C\" void symbolKey_putSymKey (symbolKey_symbolTree t, nameKey_Name name,\n     }\n   else\n     {\n-      Debug_Halt ((const char *) \"symbol already stored\", 21, 119, (const char *) \"../../gcc/m2/mc/symbolKey.mod\", 29);\n+      Debug_Halt ((const char *) \"symbol already stored\", 21, 119, (const char *) \"../../gcc-read-write/gcc/m2/mc/symbolKey.mod\", 44);\n     }\n }\n \n@@ -352,7 +352,7 @@ extern \"C\" void symbolKey_delSymKey (symbolKey_symbolTree t, nameKey_Name name)\n     }\n   else\n     {\n-      Debug_Halt ((const char *) \"trying to delete a symbol that is not in the tree - the compiler never expects this to occur\", 92, 186, (const char *) \"../../gcc/m2/mc/symbolKey.mod\", 29);\n+      Debug_Halt ((const char *) \"trying to delete a symbol that is not in the tree - the compiler never expects this to occur\", 92, 186, (const char *) \"../../gcc-read-write/gcc/m2/mc/symbolKey.mod\", 44);\n     }\n }\n "}, {"sha": "ab93fe09080f1fd7d884e9efe66328b31a523a58", "filename": "gcc/m2/mc/decl.mod", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc%2Fdecl.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc%2Fdecl.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc%2Fdecl.mod?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -30,7 +30,11 @@ FROM SFIO IMPORT OpenToWrite, WriteS ;\n FROM FIO IMPORT File, Close, FlushBuffer, StdOut, WriteLine, WriteChar ;\n FROM DynamicStrings IMPORT String, InitString, EqualArray, InitStringCharStar, KillString, ConCat, Mark, RemoveWhitePostfix, RemoveWhitePrefix ;\n FROM StringConvert IMPORT CardinalToString, ostoc ;\n-FROM mcOptions IMPORT getOutputFile, getDebugTopological, getHPrefix, getIgnoreFQ, getExtendedOpaque, writeGPLheader, getGccConfigSystem, getScaffoldDynamic, getScaffoldMain ;\n+\n+FROM mcOptions IMPORT getOutputFile, getDebugTopological, getHPrefix, getIgnoreFQ,\n+                      getExtendedOpaque, writeGPLheader, getGccConfigSystem,\n+                      getScaffoldDynamic, getScaffoldMain, getSuppressNoReturn ;\n+\n FROM FormatStrings IMPORT Sprintf0, Sprintf1, Sprintf2, Sprintf3 ;\n FROM libc IMPORT printf, memset ;\n FROM mcMetaError IMPORT metaError1, metaError2, metaError3, metaErrors1, metaErrors2 ;\n@@ -8421,7 +8425,7 @@ BEGIN\n       outText (doP, \"void\")\n    END ;\n    print (doP, \")\") ;\n-   IF n^.procedureF.noreturn AND prototype\n+   IF n^.procedureF.noreturn AND prototype AND (NOT getSuppressNoReturn ())\n    THEN\n       setNeedSpace (doP) ;\n       outText (doP, \"__attribute__ ((noreturn))\")"}, {"sha": "a0284f462b4b85078b172db2687f7cebc0e60c64", "filename": "gcc/m2/mc/mcOptions.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc%2FmcOptions.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc%2FmcOptions.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc%2FmcOptions.def?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -134,4 +134,18 @@ PROCEDURE getScaffoldMain () : BOOLEAN ;\n PROCEDURE writeGPLheader (f: File) ;\n \n \n+(*\n+   setSuppressNoReturn - set suppressNoReturn to value.\n+*)\n+\n+PROCEDURE setSuppressNoReturn (value: BOOLEAN) ;\n+\n+\n+(*\n+   getSuppressNoReturn - return the suppressNoReturn value.\n+*)\n+\n+PROCEDURE getSuppressNoReturn () : BOOLEAN ;\n+\n+\n END mcOptions."}, {"sha": "d2837fb3d342fd313384e7b378cbf08340fe7588", "filename": "gcc/m2/mc/mcOptions.mod", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc%2FmcOptions.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fmc%2FmcOptions.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fmc%2FmcOptions.mod?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -46,6 +46,7 @@ VAR\n    caseRuntime,\n    arrayRuntime,\n    returnRuntime,\n+   suppressNoReturn,\n    gccConfigSystem,\n    ignoreFQ,\n    debugTopological,\n@@ -140,7 +141,8 @@ BEGIN\n    printf0 ('  --automatic         generate a comment at the start of the file warning not to edit as it was automatically generated\\n') ;\n    printf0 ('  --scaffold-dynamic  generate dynamic module initialization code for C++\\n') ;\n    printf0 ('  --scaffold-main     generate main function which calls upon the dynamic initialization support in M2RTS\\n') ;\n-   printf0 (\"  filename            the source file must be the last option\\n\") ;\n+   printf0 ('  --suppress-noreturn suppress the emission of any attribute noreturn\\n');\n+   printf0 ('  filename            the source file must be the last option\\n') ;\n    exit (0)\n END displayHelp ;\n \n@@ -439,6 +441,26 @@ BEGIN\n END getExtendedOpaque ;\n \n \n+(*\n+   setSuppressNoReturn - set suppressNoReturn to value.\n+*)\n+\n+PROCEDURE setSuppressNoReturn (value: BOOLEAN) ;\n+BEGIN\n+   suppressNoReturn := value\n+END setSuppressNoReturn;\n+\n+\n+(*\n+   getSuppressNoReturn - return the suppressNoReturn value.\n+*)\n+\n+PROCEDURE getSuppressNoReturn () : BOOLEAN ;\n+BEGIN\n+   RETURN suppressNoReturn\n+END getSuppressNoReturn ;\n+\n+\n (*\n    setSearchPath - set the search path for the module sources.\n *)\n@@ -675,6 +697,9 @@ BEGIN\n    ELSIF optionIs ('--scaffold-dynamic', arg)\n    THEN\n       scaffoldDynamic := TRUE\n+   ELSIF optionIs ('--suppress-noreturn', arg)\n+   THEN\n+      suppressNoReturn := TRUE\n    END\n END handleOption ;\n \n@@ -733,6 +758,7 @@ BEGIN\n    gccConfigSystem := FALSE ;\n    scaffoldMain := FALSE ;\n    scaffoldDynamic := FALSE ;\n+   suppressNoReturn := FALSE ;\n    hPrefix := InitString ('') ;\n    cppArgs := InitString ('') ;\n    cppProgram := InitString ('') ;"}, {"sha": "2dd4985b47edc3e444af526f7403b227c6bffd08", "filename": "gcc/m2/pge-boot/GDynamicStrings.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGDynamicStrings.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGDynamicStrings.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGDynamicStrings.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -1217,7 +1217,7 @@ static void ConcatContents (DynamicStrings_Contents *c, const char *a_, unsigned\n       (*c).next->contents.next = NULL;\n       ConcatContents (&(*c).next->contents, (const char *) a, _a_high, h, o);\n       AddDebugInfo ((*c).next);\n-      (*c).next = AssignDebug ((*c).next, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 722, (const char *) \"ConcatContents\", 14);\n+      (*c).next = AssignDebug ((*c).next, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 722, (const char *) \"ConcatContents\", 14);\n     }\n   else\n     {\n@@ -1315,7 +1315,7 @@ static void ConcatContentsAddress (DynamicStrings_Contents *c, void * a, unsigne\n       AddDebugInfo ((*c).next);\n       if (TraceOn)\n         {\n-          (*c).next = AssignDebug ((*c).next, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 917, (const char *) \"ConcatContentsAddress\", 21);\n+          (*c).next = AssignDebug ((*c).next, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 917, (const char *) \"ConcatContentsAddress\", 21);\n         }\n     }\n   else\n@@ -1540,7 +1540,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_InitString (const char *a_, unsi\n   AddDebugInfo (s);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 758, (const char *) \"InitString\", 10);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 758, (const char *) \"InitString\", 10);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1643,7 +1643,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_InitStringCharStar (void * a)\n   AddDebugInfo (s);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 957, (const char *) \"InitStringCharStar\", 18);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 957, (const char *) \"InitStringCharStar\", 18);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1668,7 +1668,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_InitStringChar (char ch)\n   s = DynamicStrings_InitString ((const char *) &a.array[0], 1);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 977, (const char *) \"InitStringChar\", 14);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 977, (const char *) \"InitStringChar\", 14);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1826,7 +1826,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Dup (DynamicStrings_String s)\n   s = DynamicStrings_Assign (DynamicStrings_InitString ((const char *) \"\", 0), s);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1173, (const char *) \"Dup\", 3);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1173, (const char *) \"Dup\", 3);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1848,7 +1848,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Add (DynamicStrings_String a, Dy\n   a = DynamicStrings_ConCat (DynamicStrings_ConCat (DynamicStrings_InitString ((const char *) \"\", 0), a), b);\n   if (TraceOn)\n     {\n-      a = AssignDebug (a, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1193, (const char *) \"Add\", 3);\n+      a = AssignDebug (a, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1193, (const char *) \"Add\", 3);\n     }\n   return a;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -1913,7 +1913,7 @@ extern \"C\" unsigned int DynamicStrings_EqualCharStar (DynamicStrings_String s, v\n   t = DynamicStrings_InitStringCharStar (a);\n   if (TraceOn)\n     {\n-      t = AssignDebug (t, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1250, (const char *) \"EqualCharStar\", 13);\n+      t = AssignDebug (t, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1250, (const char *) \"EqualCharStar\", 13);\n     }\n   t = AddToGarbage (t, s);\n   if (DynamicStrings_Equal (t, s))\n@@ -1951,7 +1951,7 @@ extern \"C\" unsigned int DynamicStrings_EqualArray (DynamicStrings_String s, cons\n   t = DynamicStrings_InitString ((const char *) a, _a_high);\n   if (TraceOn)\n     {\n-      t = AssignDebug (t, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1280, (const char *) \"EqualArray\", 10);\n+      t = AssignDebug (t, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1280, (const char *) \"EqualArray\", 10);\n     }\n   t = AddToGarbage (t, s);\n   if (DynamicStrings_Equal (t, s))\n@@ -1989,7 +1989,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Mult (DynamicStrings_String s, u\n     }\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1312, (const char *) \"Mult\", 4);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1312, (const char *) \"Mult\", 4);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2068,7 +2068,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Slice (DynamicStrings_String s,\n                       AddDebugInfo (t->contents.next);\n                       if (TraceOn)\n                         {\n-                          t->contents.next = AssignDebug (t->contents.next, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1380, (const char *) \"Slice\", 5);\n+                          t->contents.next = AssignDebug (t->contents.next, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1380, (const char *) \"Slice\", 5);\n                         }\n                     }\n                   t = t->contents.next;\n@@ -2086,7 +2086,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_Slice (DynamicStrings_String s,\n     }\n   if (TraceOn)\n     {\n-      d = AssignDebug (d, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1397, (const char *) \"Slice\", 5);\n+      d = AssignDebug (d, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1397, (const char *) \"Slice\", 5);\n     }\n   return d;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2214,7 +2214,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_RemoveComment (DynamicStrings_St\n     }\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1509, (const char *) \"RemoveComment\", 13);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1509, (const char *) \"RemoveComment\", 13);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2239,7 +2239,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_RemoveWhitePrefix (DynamicString\n   s = DynamicStrings_Slice (s, (int ) (i), 0);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1621, (const char *) \"RemoveWhitePrefix\", 17);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1621, (const char *) \"RemoveWhitePrefix\", 17);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2264,7 +2264,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_RemoveWhitePostfix (DynamicStrin\n   s = DynamicStrings_Slice (s, 0, i+1);\n   if (TraceOn)\n     {\n-      s = AssignDebug (s, (const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 1643, (const char *) \"RemoveWhitePostfix\", 18);\n+      s = AssignDebug (s, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 1643, (const char *) \"RemoveWhitePostfix\", 18);\n     }\n   return s;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -2633,7 +2633,7 @@ extern \"C\" DynamicStrings_String DynamicStrings_PopAllocationExemption (unsigned\n         {\n           stop ();\n           /* writeString (\"mismatched number of PopAllocation's compared to PushAllocation's\")  */\n-          M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/DynamicStrings.mod\", 40, 176, (const char *) \"PopAllocationExemption\", 22, (const char *) \"mismatched number of PopAllocation's compared to PushAllocation's\", 65);\n+          M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/DynamicStrings.mod\", 55, 176, (const char *) \"PopAllocationExemption\", 22, (const char *) \"mismatched number of PopAllocation's compared to PushAllocation's\", 65);\n         }\n       else\n         {"}, {"sha": "848860781aae9457619031f2b49113434661429b", "filename": "gcc/m2/pge-boot/GFIO.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGFIO.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGFIO.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGFIO.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -558,7 +558,7 @@ static FIO_File GetNextFreeDescriptor (void)\n         return f;  /* create new slot  */\n       }\n   }\n-  ReturnException (\"../../gcc/m2/gm2-libs/FIO.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/FIO.def\", 25, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "630feb7c69430ceae844906929c1bd682e6c115c", "filename": "gcc/m2/pge-boot/GIndexing.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGIndexing.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGIndexing.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGIndexing.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -227,7 +227,7 @@ extern \"C\" unsigned int Indexing_InBounds (Indexing_Index i, unsigned int n)\n     {\n       return (n >= i->Low) && (n <= i->High);\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/Indexing.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/Indexing.def\", 25, 1);\n   __builtin_unreachable ();\n }\n \n@@ -247,7 +247,7 @@ extern \"C\" unsigned int Indexing_HighIndice (Indexing_Index i)\n     {\n       return i->High;\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/Indexing.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/Indexing.def\", 25, 1);\n   __builtin_unreachable ();\n }\n \n@@ -267,7 +267,7 @@ extern \"C\" unsigned int Indexing_LowIndice (Indexing_Index i)\n     {\n       return i->Low;\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/Indexing.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/Indexing.def\", 25, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "cf19a4e18b7fb5e159a51c656e5fc40079efa9cd", "filename": "gcc/m2/pge-boot/GM2EXCEPTION.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGM2EXCEPTION.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGM2EXCEPTION.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGM2EXCEPTION.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -56,13 +56,13 @@ extern \"C\" M2EXCEPTION_M2Exceptions M2EXCEPTION_M2Exception (void)\n   n = RTExceptions_GetNumber (e);\n   if (n == (UINT_MAX))\n     {\n-      RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_exException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/M2EXCEPTION.mod\")), 47, 6, const_cast<void*> (reinterpret_cast<const void*>(\"M2Exception\")), const_cast<void*> (reinterpret_cast<const void*>(\"current coroutine is not in the exceptional execution state\")));\n+      RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_exException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/M2EXCEPTION.mod\")), 47, 6, const_cast<void*> (reinterpret_cast<const void*>(\"M2Exception\")), const_cast<void*> (reinterpret_cast<const void*>(\"current coroutine is not in the exceptional execution state\")));\n     }\n   else\n     {\n       return (M2EXCEPTION_M2Exceptions) (n);\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/M2EXCEPTION.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/M2EXCEPTION.def\", 25, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "d283f3f7f79356ddf4ab9721c4ce98861368ae5a", "filename": "gcc/m2/pge-boot/GM2RTS.c", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGM2RTS.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGM2RTS.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGM2RTS.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -162,7 +162,7 @@ extern \"C\" void M2RTS_ExecuteTerminationProcedures (void);\n                not call ExecuteTerminationProcedures.\n */\n \n-extern \"C\" void M2RTS_Terminate (void) __attribute__ ((noreturn));\n+extern \"C\" void M2RTS_Terminate (void);\n \n /*\n    HALT - terminate the current program.  The procedure\n@@ -175,23 +175,23 @@ extern \"C\" void M2RTS_Terminate (void) __attribute__ ((noreturn));\n           then calling HALT with no parameter.\n */\n \n-extern \"C\" void M2RTS_HALT (int exitcode) __attribute__ ((noreturn));\n+extern \"C\" void M2RTS_HALT (int exitcode);\n \n /*\n    Halt - provides a more user friendly version of HALT, which takes\n           four parameters to aid debugging.  It writes an error message\n           to stderr and calls exit (1).\n */\n \n-extern \"C\" void M2RTS_Halt (const char *filename_, unsigned int _filename_high, unsigned int line, const char *function_, unsigned int _function_high, const char *description_, unsigned int _description_high) __attribute__ ((noreturn));\n+extern \"C\" void M2RTS_Halt (const char *filename_, unsigned int _filename_high, unsigned int line, const char *function_, unsigned int _function_high, const char *description_, unsigned int _description_high);\n \n /*\n    HaltC - provides a more user friendly version of HALT, which takes\n            four parameters to aid debugging.  It writes an error message\n            to stderr and calls exit (1).\n */\n \n-extern \"C\" void M2RTS_HaltC (void * filename, unsigned int line, void * function, void * description) __attribute__ ((noreturn));\n+extern \"C\" void M2RTS_HaltC (void * filename, unsigned int line, void * function, void * description);\n \n /*\n    ExitOnHalt - if HALT is executed then call exit with the exit code, e.\n@@ -203,7 +203,7 @@ extern \"C\" void M2RTS_ExitOnHalt (int e);\n    ErrorMessage - emits an error message to stderr and then calls exit (1).\n */\n \n-extern \"C\" void M2RTS_ErrorMessage (const char *message_, unsigned int _message_high, const char *filename_, unsigned int _filename_high, unsigned int line, const char *function_, unsigned int _function_high) __attribute__ ((noreturn));\n+extern \"C\" void M2RTS_ErrorMessage (const char *message_, unsigned int _message_high, const char *filename_, unsigned int _filename_high, unsigned int line, const char *function_, unsigned int _function_high);\n \n /*\n    Length - returns the length of a string, a. This is called whenever\n@@ -212,30 +212,30 @@ extern \"C\" void M2RTS_ErrorMessage (const char *message_, unsigned int _message_\n */\n \n extern \"C\" unsigned int M2RTS_Length (const char *a_, unsigned int _a_high);\n-extern \"C\" void M2RTS_AssignmentException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_ReturnException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_IncException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_DecException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_InclException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_ExclException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_ShiftException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_RotateException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_StaticArraySubscriptException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_DynamicArraySubscriptException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_ForLoopBeginException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_ForLoopToException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_ForLoopEndException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_PointerNilException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_NoReturnException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_CaseException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_WholeNonPosDivException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_WholeNonPosModException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_WholeZeroDivException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_WholeZeroRemException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_WholeValueException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_RealValueException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_ParameterException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n-extern \"C\" void M2RTS_NoException (void * filename, unsigned int line, unsigned int column, void * scope, void * message) __attribute__ ((noreturn));\n+extern \"C\" void M2RTS_AssignmentException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_ReturnException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_IncException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_DecException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_InclException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_ExclException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_ShiftException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_RotateException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_StaticArraySubscriptException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_DynamicArraySubscriptException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_ForLoopBeginException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_ForLoopToException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_ForLoopEndException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_PointerNilException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_NoReturnException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_CaseException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_WholeNonPosDivException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_WholeNonPosModException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_WholeZeroDivException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_WholeZeroRemException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_WholeValueException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_RealValueException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_ParameterException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n+extern \"C\" void M2RTS_NoException (void * filename, unsigned int line, unsigned int column, void * scope, void * message);\n \n /*\n    ExecuteReverse - execute the procedure associated with procptr\n@@ -268,7 +268,7 @@ static void ErrorStringC (void * str);\n    ErrorMessageC - emits an error message to stderr and then calls exit (1).\n */\n \n-static void ErrorMessageC (void * message, void * filename, unsigned int line, void * function) __attribute__ ((noreturn));\n+static void ErrorMessageC (void * message, void * filename, unsigned int line, void * function);\n \n /*\n    InitProcList - initialize the head and tail pointers to NIL."}, {"sha": "ff8621f959d47173dad06cad762f30999ee6a24b", "filename": "gcc/m2/pge-boot/GNameKey.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGNameKey.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGNameKey.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGNameKey.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -330,7 +330,7 @@ extern \"C\" NameKey_Name NameKey_MakeKey (const char *a_, unsigned int _a_high)\n       (*p) = ASCII_nul;\n       return DoMakeKey (n, higha);\n     }\n-  ReturnException (\"../../gcc/m2/gm2-compiler/NameKey.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-compiler/NameKey.def\", 20, 1);\n   __builtin_unreachable ();\n }\n \n@@ -380,7 +380,7 @@ extern \"C\" NameKey_Name NameKey_makekey (void * a)\n           return DoMakeKey (n, higha);\n         }\n     }\n-  ReturnException (\"../../gcc/m2/gm2-compiler/NameKey.def\", 20, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-compiler/NameKey.def\", 20, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "3165ce12be43b4df4c7d603a053fc59202b9afd5", "filename": "gcc/m2/pge-boot/GPushBackInput.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGPushBackInput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGPushBackInput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGPushBackInput.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -275,7 +275,7 @@ extern \"C\" char PushBackInput_PutCh (char ch)\n     }\n   else\n     {\n-      Debug_Halt ((const char *) \"max push back stack exceeded, increase MaxPushBackStack\", 55, 150, (const char *) \"../../gcc/m2/gm2-libs/PushBackInput.mod\", 39);\n+      Debug_Halt ((const char *) \"max push back stack exceeded, increase MaxPushBackStack\", 55, 150, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/PushBackInput.mod\", 54);\n     }\n   return ch;\n   /* static analysis guarentees a RETURN statement will be used before here.  */\n@@ -301,7 +301,7 @@ extern \"C\" void PushBackInput_PutString (const char *a_, unsigned int _a_high)\n       l -= 1;\n       if ((PushBackInput_PutCh (a[l])) != a[l])\n         {\n-          Debug_Halt ((const char *) \"assert failed\", 13, 132, (const char *) \"../../gcc/m2/gm2-libs/PushBackInput.mod\", 39);\n+          Debug_Halt ((const char *) \"assert failed\", 13, 132, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/PushBackInput.mod\", 54);\n         }\n     }\n }\n@@ -322,7 +322,7 @@ extern \"C\" void PushBackInput_PutStr (DynamicStrings_String s)\n       i -= 1;\n       if ((PushBackInput_PutCh (DynamicStrings_char (s, static_cast<int> (i)))) != (DynamicStrings_char (s, static_cast<int> (i))))\n         {\n-          Debug_Halt ((const char *) \"assert failed\", 13, 113, (const char *) \"../../gcc/m2/gm2-libs/PushBackInput.mod\", 39);\n+          Debug_Halt ((const char *) \"assert failed\", 13, 113, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/PushBackInput.mod\", 54);\n         }\n     }\n }"}, {"sha": "5c2eccc2eac587178a791e62de01adedb9c04051", "filename": "gcc/m2/pge-boot/GRTExceptions.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGRTExceptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGRTExceptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGRTExceptions.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -724,7 +724,7 @@ static void AddHandler (RTExceptions_EHBlock e, RTExceptions_Handler h)\n \n static void indexf (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_indexException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 613, 9, const_cast<void*> (reinterpret_cast<const void*>(\"indexf\")), const_cast<void*> (reinterpret_cast<const void*>(\"array index out of bounds\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_indexException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 613, 9, const_cast<void*> (reinterpret_cast<const void*>(\"indexf\")), const_cast<void*> (reinterpret_cast<const void*>(\"array index out of bounds\")));\n }\n \n \n@@ -734,7 +734,7 @@ static void indexf (void * a)\n \n static void range (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_rangeException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 625, 9, const_cast<void*> (reinterpret_cast<const void*>(\"range\")), const_cast<void*> (reinterpret_cast<const void*>(\"assignment out of range\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_rangeException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 625, 9, const_cast<void*> (reinterpret_cast<const void*>(\"range\")), const_cast<void*> (reinterpret_cast<const void*>(\"assignment out of range\")));\n }\n \n \n@@ -744,7 +744,7 @@ static void range (void * a)\n \n static void casef (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_caseSelectException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 637, 9, const_cast<void*> (reinterpret_cast<const void*>(\"casef\")), const_cast<void*> (reinterpret_cast<const void*>(\"case selector out of range\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_caseSelectException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 637, 9, const_cast<void*> (reinterpret_cast<const void*>(\"casef\")), const_cast<void*> (reinterpret_cast<const void*>(\"case selector out of range\")));\n }\n \n \n@@ -754,7 +754,7 @@ static void casef (void * a)\n \n static void invalidloc (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_invalidLocation)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 649, 9, const_cast<void*> (reinterpret_cast<const void*>(\"invalidloc\")), const_cast<void*> (reinterpret_cast<const void*>(\"invalid address referenced\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_invalidLocation)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 649, 9, const_cast<void*> (reinterpret_cast<const void*>(\"invalidloc\")), const_cast<void*> (reinterpret_cast<const void*>(\"invalid address referenced\")));\n }\n \n \n@@ -764,7 +764,7 @@ static void invalidloc (void * a)\n \n static void function (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_functionException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 661, 9, const_cast<void*> (reinterpret_cast<const void*>(\"function\")), const_cast<void*> (reinterpret_cast<const void*>(\"... function ... \")));  /* --fixme-- what has happened ?  */\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_functionException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 661, 9, const_cast<void*> (reinterpret_cast<const void*>(\"function\")), const_cast<void*> (reinterpret_cast<const void*>(\"... function ... \")));  /* --fixme-- what has happened ?  */\n }\n \n \n@@ -774,7 +774,7 @@ static void function (void * a)\n \n static void wholevalue (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_wholeValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 673, 9, const_cast<void*> (reinterpret_cast<const void*>(\"wholevalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal whole value exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_wholeValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 673, 9, const_cast<void*> (reinterpret_cast<const void*>(\"wholevalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal whole value exception\")));\n }\n \n \n@@ -784,7 +784,7 @@ static void wholevalue (void * a)\n \n static void wholediv (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_wholeDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 685, 9, const_cast<void*> (reinterpret_cast<const void*>(\"wholediv\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal whole value exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_wholeDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 685, 9, const_cast<void*> (reinterpret_cast<const void*>(\"wholediv\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal whole value exception\")));\n }\n \n \n@@ -794,7 +794,7 @@ static void wholediv (void * a)\n \n static void realvalue (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_realValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 697, 9, const_cast<void*> (reinterpret_cast<const void*>(\"realvalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal real value exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_realValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 697, 9, const_cast<void*> (reinterpret_cast<const void*>(\"realvalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal real value exception\")));\n }\n \n \n@@ -804,7 +804,7 @@ static void realvalue (void * a)\n \n static void realdiv (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_realDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 709, 9, const_cast<void*> (reinterpret_cast<const void*>(\"realdiv\")), const_cast<void*> (reinterpret_cast<const void*>(\"real number division by zero exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_realDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 709, 9, const_cast<void*> (reinterpret_cast<const void*>(\"realdiv\")), const_cast<void*> (reinterpret_cast<const void*>(\"real number division by zero exception\")));\n }\n \n \n@@ -814,7 +814,7 @@ static void realdiv (void * a)\n \n static void complexvalue (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_complexValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 721, 9, const_cast<void*> (reinterpret_cast<const void*>(\"complexvalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal complex value exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_complexValueException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 721, 9, const_cast<void*> (reinterpret_cast<const void*>(\"complexvalue\")), const_cast<void*> (reinterpret_cast<const void*>(\"illegal complex value exception\")));\n }\n \n \n@@ -824,7 +824,7 @@ static void complexvalue (void * a)\n \n static void complexdiv (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_complexDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 733, 9, const_cast<void*> (reinterpret_cast<const void*>(\"complexdiv\")), const_cast<void*> (reinterpret_cast<const void*>(\"complex number division by zero exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_complexDivException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 733, 9, const_cast<void*> (reinterpret_cast<const void*>(\"complexdiv\")), const_cast<void*> (reinterpret_cast<const void*>(\"complex number division by zero exception\")));\n }\n \n \n@@ -834,7 +834,7 @@ static void complexdiv (void * a)\n \n static void protection (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_protException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 745, 9, const_cast<void*> (reinterpret_cast<const void*>(\"protection\")), const_cast<void*> (reinterpret_cast<const void*>(\"protection exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_protException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 745, 9, const_cast<void*> (reinterpret_cast<const void*>(\"protection\")), const_cast<void*> (reinterpret_cast<const void*>(\"protection exception\")));\n }\n \n \n@@ -844,7 +844,7 @@ static void protection (void * a)\n \n static void systemf (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_sysException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 757, 9, const_cast<void*> (reinterpret_cast<const void*>(\"systemf\")), const_cast<void*> (reinterpret_cast<const void*>(\"system exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_sysException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 757, 9, const_cast<void*> (reinterpret_cast<const void*>(\"systemf\")), const_cast<void*> (reinterpret_cast<const void*>(\"system exception\")));\n }\n \n \n@@ -854,7 +854,7 @@ static void systemf (void * a)\n \n static void coroutine (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_coException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 769, 9, const_cast<void*> (reinterpret_cast<const void*>(\"coroutine\")), const_cast<void*> (reinterpret_cast<const void*>(\"coroutine exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_coException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 769, 9, const_cast<void*> (reinterpret_cast<const void*>(\"coroutine\")), const_cast<void*> (reinterpret_cast<const void*>(\"coroutine exception\")));\n }\n \n \n@@ -864,7 +864,7 @@ static void coroutine (void * a)\n \n static void exception (void * a)\n {\n-  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_exException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc/m2/gm2-libs/RTExceptions.mod\")), 781, 9, const_cast<void*> (reinterpret_cast<const void*>(\"exception\")), const_cast<void*> (reinterpret_cast<const void*>(\"exception exception\")));\n+  RTExceptions_Raise ( ((unsigned int) (M2EXCEPTION_exException)), const_cast<void*> (reinterpret_cast<const void*>(\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\")), 781, 9, const_cast<void*> (reinterpret_cast<const void*>(\"exception\")), const_cast<void*> (reinterpret_cast<const void*>(\"exception exception\")));\n }\n \n \n@@ -1183,13 +1183,13 @@ extern \"C\" RTExceptions_EHBlock RTExceptions_GetBaseExceptionBlock (void)\n {\n   if (currentEHB == NULL)\n     {\n-      M2RTS_Halt ((const char *) \"../../gcc/m2/gm2-libs/RTExceptions.mod\", 38, 599, (const char *) \"GetBaseExceptionBlock\", 21, (const char *) \"currentEHB has not been initialized yet\", 39);\n+      M2RTS_Halt ((const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.mod\", 53, 599, (const char *) \"GetBaseExceptionBlock\", 21, (const char *) \"currentEHB has not been initialized yet\", 39);\n     }\n   else\n     {\n       return currentEHB;\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/RTExceptions.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/RTExceptions.def\", 25, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "d918673c9acbdeae5d874011ed7f475ff63356f8", "filename": "gcc/m2/pge-boot/GStdIO.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGStdIO.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGStdIO.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGStdIO.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -191,7 +191,7 @@ extern \"C\" StdIO_ProcWrite StdIO_GetCurrentOutput (void)\n       M2RTS_HALT (-1);\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/StdIO.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/StdIO.def\", 25, 1);\n   __builtin_unreachable ();\n }\n \n@@ -250,7 +250,7 @@ extern \"C\" StdIO_ProcRead StdIO_GetCurrentInput (void)\n       M2RTS_HALT (-1);\n       __builtin_unreachable ();\n     }\n-  ReturnException (\"../../gcc/m2/gm2-libs/StdIO.def\", 25, 1);\n+  ReturnException (\"../../gcc-read-write/gcc/m2/gm2-libs/StdIO.def\", 25, 1);\n   __builtin_unreachable ();\n }\n "}, {"sha": "699b70a5c626b2df5298720a3d68d4b1e8909414", "filename": "gcc/m2/pge-boot/GSymbolKey.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGSymbolKey.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGSymbolKey.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGSymbolKey.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -183,7 +183,7 @@ static void FindNodeParentInTree (SymbolKey_SymbolTree t, NameKey_Name n, Symbol\n   (*parent) = t;\n   if (t == NULL)\n     {\n-      Debug_Halt ((const char *) \"parameter t should never be NIL\", 31, 240, (const char *) \"../../gcc/m2/gm2-compiler/SymbolKey.mod\", 39);\n+      Debug_Halt ((const char *) \"parameter t should never be NIL\", 31, 240, (const char *) \"../../gcc-read-write/gcc/m2/gm2-compiler/SymbolKey.mod\", 54);\n     }\n   Assertion_Assert (t->Right == NULL);\n   (*child) = t->Left;\n@@ -392,7 +392,7 @@ extern \"C\" void SymbolKey_PutSymKey (SymbolKey_SymbolTree t, NameKey_Name NameKe\n     }\n   else\n     {\n-      Debug_Halt ((const char *) \"symbol already stored\", 21, 156, (const char *) \"../../gcc/m2/gm2-compiler/SymbolKey.mod\", 39);\n+      Debug_Halt ((const char *) \"symbol already stored\", 21, 156, (const char *) \"../../gcc-read-write/gcc/m2/gm2-compiler/SymbolKey.mod\", 54);\n     }\n }\n \n@@ -459,7 +459,7 @@ extern \"C\" void SymbolKey_DelSymKey (SymbolKey_SymbolTree t, NameKey_Name NameKe\n     }\n   else\n     {\n-      Debug_Halt ((const char *) \"trying to delete a symbol that is not in the tree - the compiler never expects this to occur\", 92, 223, (const char *) \"../../gcc/m2/gm2-compiler/SymbolKey.mod\", 39);\n+      Debug_Halt ((const char *) \"trying to delete a symbol that is not in the tree - the compiler never expects this to occur\", 92, 223, (const char *) \"../../gcc-read-write/gcc/m2/gm2-compiler/SymbolKey.mod\", 54);\n     }\n }\n "}, {"sha": "d9cd60bd9fc917a93aa0ae95c23e952f102a46d0", "filename": "gcc/m2/pge-boot/GSysStorage.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGSysStorage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGSysStorage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGSysStorage.c?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -93,7 +93,7 @@ extern \"C\" void SysStorage_ALLOCATE (void * *a, unsigned int size)\n   (*a) = libc_malloc (static_cast<size_t> (size));\n   if ((*a) == NULL)\n     {\n-      Debug_Halt ((const char *) \"out of memory error\", 19, 50, (const char *) \"../../gcc/m2/gm2-libs/SysStorage.mod\", 36);\n+      Debug_Halt ((const char *) \"out of memory error\", 19, 50, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/SysStorage.mod\", 51);\n     }\n   if (enableTrace && trace)\n     {\n@@ -118,7 +118,7 @@ extern \"C\" void SysStorage_DEALLOCATE (void * *a, unsigned int size)\n         }\n       if ((libc_memset ((*a), 0, static_cast<size_t> (size))) != (*a))\n         {\n-          Debug_Halt ((const char *) \"memset should have returned the first parameter\", 47, 76, (const char *) \"../../gcc/m2/gm2-libs/SysStorage.mod\", 36);\n+          Debug_Halt ((const char *) \"memset should have returned the first parameter\", 47, 76, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/SysStorage.mod\", 51);\n         }\n     }\n   if (enableDeallocation)\n@@ -163,7 +163,7 @@ extern \"C\" void SysStorage_REALLOCATE (void * *a, unsigned int size)\n       (*a) = libc_realloc ((*a), static_cast<size_t> (size));\n       if ((*a) == NULL)\n         {\n-          Debug_Halt ((const char *) \"out of memory error\", 19, 119, (const char *) \"../../gcc/m2/gm2-libs/SysStorage.mod\", 36);\n+          Debug_Halt ((const char *) \"out of memory error\", 19, 119, (const char *) \"../../gcc-read-write/gcc/m2/gm2-libs/SysStorage.mod\", 51);\n         }\n       if (enableTrace && trace)\n         {"}, {"sha": "254d5edcc55ac2cfcd1911a46aaf52147bf5ace7", "filename": "gcc/m2/pge-boot/GUnixArgs.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGUnixArgs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2FGUnixArgs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2FGUnixArgs.cc?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -36,6 +36,8 @@ static int UnixArgs_ArgC;\n static char **UnixArgs_ArgV;\n static char **UnixArgs_EnvV;\n \n+#define LIBNAME \"m2pim\"\n+\n \n /* GetArgC returns argc.  */\n \n@@ -86,6 +88,6 @@ struct _M2_UnixArgs_ctor { _M2_UnixArgs_ctor (); } _M2_UnixArgs_ctor;\n \n _M2_UnixArgs_ctor::_M2_UnixArgs_ctor (void)\n {\n-  M2RTS_RegisterModule (\"UnixArgs\", _M2_UnixArgs_init, _M2_UnixArgs_fini,\n+  M2RTS_RegisterModule (\"UnixArgs\", LIBNAME, _M2_UnixArgs_init, _M2_UnixArgs_fini,\n \t\t\t_M2_UnixArgs_dep);\n }"}, {"sha": "e70c9f63f7b44bb3d68075a29e714ab95bf5f5de", "filename": "gcc/m2/pge-boot/m2rts.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2Fm2rts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ed1066196c81ab1fad13b2cc5ebbfe887138f9/gcc%2Fm2%2Fpge-boot%2Fm2rts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fpge-boot%2Fm2rts.h?ref=62ed1066196c81ab1fad13b2cc5ebbfe887138f9", "patch": "@@ -29,7 +29,7 @@ typedef void (*proc_con) (int, char **, char **);\n typedef void (*proc_dep) (void);\n \n extern \"C\" void M2RTS_RequestDependant (const char *modulename, const char *dependancy);\n-extern \"C\" void M2RTS_RegisterModule (const char *modulename,\n+extern \"C\" void M2RTS_RegisterModule (const char *modulename, const char *libname,\n \t\t\t\t      proc_con init, proc_con fini, proc_dep dependencies);\n extern \"C\" void _M2_M2RTS_init (void);\n "}]}