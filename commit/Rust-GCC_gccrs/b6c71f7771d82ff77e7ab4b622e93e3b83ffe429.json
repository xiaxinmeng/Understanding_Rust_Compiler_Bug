{"sha": "b6c71f7771d82ff77e7ab4b622e93e3b83ffe429", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZjNzFmNzc3MWQ4MmZmNzdlN2FiNGI2MjJlOTNlM2I4M2ZmZTQyOQ==", "commit": {"author": {"name": "Michael Eager", "email": "eager@eagercon.com", "date": "2012-01-27T16:36:12Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2012-01-27T16:36:12Z"}, "message": "microblaze.c (microblaze_emit_compare): Correct test after pcmp instruction.\n\n\t* config/microblaze.c (microblaze_emit_compare): Correct\n\ttest after pcmp instruction.\n\nFrom-SVN: r183635", "tree": {"sha": "0c09451d91696411d11e404948eec9fbb57730bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c09451d91696411d11e404948eec9fbb57730bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6c71f7771d82ff77e7ab4b622e93e3b83ffe429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c71f7771d82ff77e7ab4b622e93e3b83ffe429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6c71f7771d82ff77e7ab4b622e93e3b83ffe429", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c71f7771d82ff77e7ab4b622e93e3b83ffe429/comments", "author": {"login": "eagerm", "id": 945532, "node_id": "MDQ6VXNlcjk0NTUzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/945532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eagerm", "html_url": "https://github.com/eagerm", "followers_url": "https://api.github.com/users/eagerm/followers", "following_url": "https://api.github.com/users/eagerm/following{/other_user}", "gists_url": "https://api.github.com/users/eagerm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eagerm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eagerm/subscriptions", "organizations_url": "https://api.github.com/users/eagerm/orgs", "repos_url": "https://api.github.com/users/eagerm/repos", "events_url": "https://api.github.com/users/eagerm/events{/privacy}", "received_events_url": "https://api.github.com/users/eagerm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f89a7e9596662d1a8b91b80745dfa51e99bbfb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "7ce99da8c3e0d6f4b1d47e192685359887353f9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6c71f7771d82ff77e7ab4b622e93e3b83ffe429/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6c71f7771d82ff77e7ab4b622e93e3b83ffe429/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6c71f7771d82ff77e7ab4b622e93e3b83ffe429", "patch": "@@ -1,3 +1,8 @@\n+2012-01-27  Michael Eager  <eager@eagercon.com>\n+\n+\t* config/microblaze.c (microblaze_emit_compare): Correct\n+\ttest after pcmp instruction.\n+\n 2012-01-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/52020"}, {"sha": "8412d0ef127e96e1fa3f5705d16201d86956bbb9", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6c71f7771d82ff77e7ab4b622e93e3b83ffe429/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6c71f7771d82ff77e7ab4b622e93e3b83ffe429/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=b6c71f7771d82ff77e7ab4b622e93e3b83ffe429", "patch": "@@ -2811,11 +2811,13 @@ microblaze_emit_compare (enum machine_mode mode, rtx cmp, enum rtx_code *cmp_cod\n       if (TARGET_PATTERN_COMPARE && GET_CODE(cmp_op1) == REG) \n         {\n           if (code == EQ) \n-\t    emit_insn (gen_seq_internal_pat (comp_reg, cmp_op0, cmp_op1));\n+\t    {\n+\t      emit_insn (gen_seq_internal_pat (comp_reg, cmp_op0, cmp_op1));\n+\t      *cmp_code = NE;\n+\t    }\n \t  else\n \t    {    \n \t      emit_insn (gen_sne_internal_pat (comp_reg, cmp_op0, cmp_op1));\n-\t      *cmp_code = EQ;\n \t    }\n         }\n       else"}]}