{"sha": "51ebdbc91a8bbbd7509273075f3953b335b8c7c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFlYmRiYzkxYThiYmJkNzUwOTI3MzA3NWYzOTUzYjMzNWI4YzdjMQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-03-13T20:32:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-12T08:29:16Z"}, "message": "[Ada] Simplify getting discriminant value from a list of constraints\n\n2020-06-12  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch3.adb (Get_Discr_Value): Cleanup.", "tree": {"sha": "519defffe4f7d330b586c92ce08043f5dd726f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/519defffe4f7d330b586c92ce08043f5dd726f78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51ebdbc91a8bbbd7509273075f3953b335b8c7c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ebdbc91a8bbbd7509273075f3953b335b8c7c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51ebdbc91a8bbbd7509273075f3953b335b8c7c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ebdbc91a8bbbd7509273075f3953b335b8c7c1/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec772e4b269206a943b3caa5544d9c7ac1d8de1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec772e4b269206a943b3caa5544d9c7ac1d8de1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec772e4b269206a943b3caa5544d9c7ac1d8de1a"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "2e9a3d0758ce3220d79fefe95b2b66bbf25fa2a2", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51ebdbc91a8bbbd7509273075f3953b335b8c7c1/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51ebdbc91a8bbbd7509273075f3953b335b8c7c1/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=51ebdbc91a8bbbd7509273075f3953b335b8c7c1", "patch": "@@ -13112,8 +13112,8 @@ package body Sem_Ch3 is\n       function Is_Discriminant (Expr : Node_Id) return Boolean;\n       --  Returns True if Expr is a discriminant\n \n-      function Get_Discr_Value (Discrim : Entity_Id) return Node_Id;\n-      --  Find the value of discriminant Discrim in Constraint\n+      function Get_Discr_Value (Discr_Expr : Node_Id) return Node_Id;\n+      --  Find the value of a discriminant named by Discr_Expr in Constraints\n \n       -----------------------------------\n       -- Build_Constrained_Access_Type --\n@@ -13335,7 +13335,11 @@ package body Sem_Ch3 is\n       -- Get_Discr_Value --\n       ---------------------\n \n-      function Get_Discr_Value (Discrim : Entity_Id) return Node_Id is\n+      function Get_Discr_Value (Discr_Expr : Node_Id) return Node_Id is\n+         Discr_Id : constant Entity_Id := Entity (Discr_Expr);\n+         --  Entity of a discriminant that appear as a standalone expression in\n+         --  the constraint of a component.\n+\n          D : Entity_Id;\n          E : Elmt_Id;\n \n@@ -13351,9 +13355,9 @@ package body Sem_Ch3 is\n          E := First_Elmt (Constraints);\n \n          while Present (D) loop\n-            if D = Entity (Discrim)\n-              or else D = CR_Discriminant (Entity (Discrim))\n-              or else Corresponding_Discriminant (D) = Entity (Discrim)\n+            if D = Discr_Id\n+              or else D = CR_Discriminant (Discr_Id)\n+              or else Corresponding_Discriminant (D) = Discr_Id\n             then\n                return Node (E);\n             end if;\n@@ -13373,12 +13377,12 @@ package body Sem_Ch3 is\n          --  be present when the component is a discriminated task type?\n \n          if Is_Derived_Type (Typ)\n-           and then Scope (Entity (Discrim)) = Etype (Typ)\n+           and then Scope (Discr_Id) = Etype (Typ)\n          then\n             D := First_Discriminant (Etype (Typ));\n             E := First_Elmt (Constraints);\n             while Present (D) loop\n-               if D = Entity (Discrim) then\n+               if D = Discr_Id then\n                   return Node (E);\n                end if;\n "}]}