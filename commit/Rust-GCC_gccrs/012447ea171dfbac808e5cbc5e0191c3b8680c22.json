{"sha": "012447ea171dfbac808e5cbc5e0191c3b8680c22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEyNDQ3ZWExNzFkZmJhYzgwOGU1Y2JjNWUwMTkxYzNiODY4MGMyMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-30T22:46:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-30T22:46:39Z"}, "message": "configure.ac: Add target-libffi to target_libraries.\n\n\t* configure.ac: Add target-libffi to target_libraries.\n\tReadd libgcj target disablings, modified to only target-libffi.\n\tReadd target addition of go to unsupported languages.\n\t* configure: Regenerated.\n\nFrom-SVN: r240684", "tree": {"sha": "2f9bb66e2b8590e6ed3f744d0c3e81870b546cb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f9bb66e2b8590e6ed3f744d0c3e81870b546cb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/012447ea171dfbac808e5cbc5e0191c3b8680c22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/012447ea171dfbac808e5cbc5e0191c3b8680c22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/012447ea171dfbac808e5cbc5e0191c3b8680c22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/012447ea171dfbac808e5cbc5e0191c3b8680c22/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b06f87c7eb14eb7806cd1fafa779bde8792ed874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b06f87c7eb14eb7806cd1fafa779bde8792ed874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b06f87c7eb14eb7806cd1fafa779bde8792ed874"}], "stats": {"total": 244, "additions": 199, "deletions": 45}, "files": [{"sha": "b766b5432a844a74fd9c7943e8190c192d194171", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012447ea171dfbac808e5cbc5e0191c3b8680c22/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012447ea171dfbac808e5cbc5e0191c3b8680c22/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=012447ea171dfbac808e5cbc5e0191c3b8680c22", "patch": "@@ -1,3 +1,10 @@\n+2016-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.ac: Add target-libffi to target_libraries.\n+\tReadd libgcj target disablings, modified to only target-libffi.\n+\tReadd target addition of go to unsupported languages.\n+\t* configure: Regenerated.\n+\n 2016-09-30  Steve Ellcey  <sellcey@caviumnetworks.com>\n \n \t* MAINTAINERS: Update email address."}, {"sha": "122ec4e45e4842c0623a1076c5c2c9eb21f225a3", "filename": "configure", "status": "modified", "additions": 96, "deletions": 45, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012447ea171dfbac808e5cbc5e0191c3b8680c22/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012447ea171dfbac808e5cbc5e0191c3b8680c22/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=012447ea171dfbac808e5cbc5e0191c3b8680c22", "patch": "@@ -2748,6 +2748,7 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libssp \\\n \t\ttarget-libquadmath \\\n \t\ttarget-libgfortran \\\n+\t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n \t\ttarget-libgo\"\n@@ -3351,6 +3352,101 @@ case \"${target}\" in\n     ;;\n esac\n \n+# Disable libffi for some systems.\n+case \"${target}\" in\n+  powerpc-*-darwin*)\n+    ;;\n+  i[3456789]86-*-darwin*)\n+    ;;\n+  x86_64-*-darwin[912]*)\n+    ;;\n+  *-*-darwin*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-netware*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-phoenix*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-rtems*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-tpf*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-uclinux*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-vxworks*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  alpha*-*-*vms*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  arm*-*-freebsd*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  arm-wince-pe)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  arm*-*-symbianelf*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  cris-*-* | crisv32-*-*)\n+    case \"${target}\" in\n+      *-*-linux*)\n+\t;;\n+      *) # See PR46792 regarding target-libffi.\n+\tnoconfigdirs=\"$noconfigdirs target-libffi\";;\n+    esac\n+    ;;\n+  hppa*64*-*-hpux*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  hppa*-hp-hpux11*)\n+    ;;\n+  hppa*-*-hpux*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  ia64*-*-*vms*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  i[3456789]86-w64-mingw*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  i[3456789]86-*-mingw*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  x86_64-*-mingw*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  mmix-*-*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  powerpc-*-aix*)\n+    # copied from rs6000-*-* entry\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  rs6000-*-aix*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  ft32-*-*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-lynxos*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+esac\n+\n+# Disable the go frontend on systems where it is known to not work. Please keep\n+# this in sync with contrib/config-list.mk.\n+case \"${target}\" in\n+*-*-darwin* | *-*-cygwin* | *-*-mingw* | *-*-aix*)\n+    unsupported_languages=\"$unsupported_languages go\"\n+    ;;\n+esac\n+\n # Disable libgo for some systems where it is known to not work.\n # For testing, you can easily override this with --enable-libgo.\n if test x$enable_libgo = x; then\n@@ -13983,51 +14079,6 @@ $as_echo \"pre-installed\" >&6; }\n   fi\n fi\n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target gcj\" >&5\n-$as_echo_n \"checking where to find the target gcj... \" >&6; }\n-if test \"x${build}\" != \"x${host}\" ; then\n-  if expr \"x$GCJ_FOR_TARGET\" : \"x/\" > /dev/null; then\n-    # We already found the complete path\n-    ac_dir=`dirname $GCJ_FOR_TARGET`\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n-$as_echo \"pre-installed in $ac_dir\" >&6; }\n-  else\n-    # Canadian cross, just use what we found\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n-$as_echo \"pre-installed\" >&6; }\n-  fi\n-else\n-  ok=yes\n-  case \" ${configdirs} \" in\n-    *\" gcc \"*) ;;\n-    *) ok=no ;;\n-  esac\n-  case ,${enable_languages}, in\n-    *,java,*) ;;\n-    *) ok=no ;;\n-  esac\n-  if test $ok = yes; then\n-    # An in-tree tool is available and we can use it\n-    GCJ_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/gcj -B$$r/$(HOST_SUBDIR)/gcc/'\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: just compiled\" >&5\n-$as_echo \"just compiled\" >&6; }\n-  elif expr \"x$GCJ_FOR_TARGET\" : \"x/\" > /dev/null; then\n-    # We already found the complete path\n-    ac_dir=`dirname $GCJ_FOR_TARGET`\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n-$as_echo \"pre-installed in $ac_dir\" >&6; }\n-  elif test \"x$target\" = \"x$host\"; then\n-    # We can use an host tool\n-    GCJ_FOR_TARGET='$(GCJ)'\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: host tool\" >&5\n-$as_echo \"host tool\" >&6; }\n-  else\n-    # We need a cross tool\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n-$as_echo \"pre-installed\" >&6; }\n-  fi\n-fi\n-\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target gfortran\" >&5\n $as_echo_n \"checking where to find the target gfortran... \" >&6; }\n if test \"x${build}\" != \"x${host}\" ; then"}, {"sha": "afceb19458b8accf9c4316944a569ef9f07ae6ca", "filename": "configure.ac", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012447ea171dfbac808e5cbc5e0191c3b8680c22/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012447ea171dfbac808e5cbc5e0191c3b8680c22/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=012447ea171dfbac808e5cbc5e0191c3b8680c22", "patch": "@@ -161,6 +161,7 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libssp \\\n \t\ttarget-libquadmath \\\n \t\ttarget-libgfortran \\\n+\t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n \t\ttarget-libgo\"\n@@ -696,6 +697,101 @@ case \"${target}\" in\n     ;;\n esac\n \n+# Disable libffi for some systems.\n+case \"${target}\" in\n+  powerpc-*-darwin*)\n+    ;;\n+  i[[3456789]]86-*-darwin*)\n+    ;;\n+  x86_64-*-darwin[[912]]*)\n+    ;;\n+  *-*-darwin*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-netware*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-phoenix*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-rtems*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-tpf*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-uclinux*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-vxworks*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  alpha*-*-*vms*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  arm*-*-freebsd*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  arm-wince-pe)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  arm*-*-symbianelf*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  cris-*-* | crisv32-*-*)\n+    case \"${target}\" in\n+      *-*-linux*)\n+\t;;\n+      *) # See PR46792 regarding target-libffi.\n+\tnoconfigdirs=\"$noconfigdirs target-libffi\";;\n+    esac\n+    ;;\n+  hppa*64*-*-hpux*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  hppa*-hp-hpux11*)\n+    ;;\n+  hppa*-*-hpux*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  ia64*-*-*vms*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  i[[3456789]]86-w64-mingw*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  i[[3456789]]86-*-mingw*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  x86_64-*-mingw*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  mmix-*-*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  powerpc-*-aix*)\n+    # copied from rs6000-*-* entry\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  rs6000-*-aix*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  ft32-*-*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+  *-*-lynxos*)\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    ;;\n+esac\n+\n+# Disable the go frontend on systems where it is known to not work. Please keep\n+# this in sync with contrib/config-list.mk.\n+case \"${target}\" in\n+*-*-darwin* | *-*-cygwin* | *-*-mingw* | *-*-aix*)\n+    unsupported_languages=\"$unsupported_languages go\"\n+    ;;\n+esac\n+\n # Disable libgo for some systems where it is known to not work.\n # For testing, you can easily override this with --enable-libgo.\n if test x$enable_libgo = x; then"}]}