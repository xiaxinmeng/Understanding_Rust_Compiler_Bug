{"sha": "724e517a7df51aa4921704083ef78a7a41999198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI0ZTUxN2E3ZGY1MWFhNDkyMTcwNDA4M2VmNzhhN2E0MTk5OTE5OA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-29T11:51:13Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-29T11:51:13Z"}, "message": "PR c++/80891 (#2)\n\n\tPR c++/80891 (#2)\n\t* tree.c (ovl_copy): Adjust assert, copy OVL_LOOKUP.\n\t(ovl_used): New.\n\t(lookup_keep): Call it.\n\n\tPR c++/80891 (#2)\n\t* g++.dg/lookup/pr80891-2.C: New.\n\nFrom-SVN: r248570", "tree": {"sha": "731a7b08e739a79a9e0ce5c33bf9b7e2e7579620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/731a7b08e739a79a9e0ce5c33bf9b7e2e7579620"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/724e517a7df51aa4921704083ef78a7a41999198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724e517a7df51aa4921704083ef78a7a41999198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724e517a7df51aa4921704083ef78a7a41999198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724e517a7df51aa4921704083ef78a7a41999198/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a71c876a1ed4331002cdd3c09d09252de4d5d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a71c876a1ed4331002cdd3c09d09252de4d5d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a71c876a1ed4331002cdd3c09d09252de4d5d89"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "8f5dbc3f08b4db1e219f7c77ccb20be53440316f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724e517a7df51aa4921704083ef78a7a41999198/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724e517a7df51aa4921704083ef78a7a41999198/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=724e517a7df51aa4921704083ef78a7a41999198", "patch": "@@ -1,5 +1,10 @@\n 2017-05-26  Nathan Sidwell  <nathan@acm.org>\n \n+\tPR c++/80891 (#2)\n+\t* tree.c (ovl_copy): Adjust assert, copy OVL_LOOKUP.\n+\t(ovl_used): New.\n+\t(lookup_keep): Call it.\n+\n \tImplement DR2061\n \t* name-lookup.c (push_inline_namespaces): New.\n \t(push_namespace): Look inside inline namespaces."}, {"sha": "9951b28d23de29648738bcc9b9756feec38274cd", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724e517a7df51aa4921704083ef78a7a41999198/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724e517a7df51aa4921704083ef78a7a41999198/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=724e517a7df51aa4921704083ef78a7a41999198", "patch": "@@ -2139,12 +2139,13 @@ ovl_copy (tree ovl)\n   else\n     result = make_node (OVERLOAD);\n \n-  gcc_assert (!OVL_NESTED_P (ovl) && !OVL_LOOKUP_P (ovl));\n+  gcc_checking_assert (!OVL_NESTED_P (ovl) && OVL_USED_P (ovl));\n   TREE_TYPE (result) = TREE_TYPE (ovl);\n   OVL_FUNCTION (result) = OVL_FUNCTION (ovl);\n   OVL_CHAIN (result) = OVL_CHAIN (ovl);\n   OVL_HIDDEN_P (result) = OVL_HIDDEN_P (ovl);\n   OVL_USING_P (result) = OVL_USING_P (ovl);\n+  OVL_LOOKUP_P (result) = OVL_LOOKUP_P (ovl);\n \n   return result;\n }\n@@ -2395,6 +2396,22 @@ lookup_maybe_add (tree fns, tree lookup)\n   return lookup_add (fns, lookup);\n }\n \n+/* Regular overload OVL is part of a kept lookup.  Mark the nodes on\n+   it as immutable.  */\n+\n+static void\n+ovl_used (tree ovl)\n+{\n+  for (;\n+       ovl && TREE_CODE (ovl) == OVERLOAD\n+\t && !OVL_USED_P (ovl);\n+       ovl = OVL_CHAIN (ovl))\n+    {\n+      gcc_checking_assert (!OVL_LOOKUP_P (ovl));\n+      OVL_USED_P (ovl) = true;\n+    }\n+}\n+\n /* If KEEP is true, preserve the contents of a lookup so that it is\n    available for a later instantiation.  Otherwise release the LOOKUP\n    nodes for reuse.  */\n@@ -2407,12 +2424,18 @@ lookup_keep (tree lookup, bool keep)\n \t && OVL_LOOKUP_P (lookup) && !OVL_USED_P (lookup);\n        lookup = OVL_CHAIN (lookup))\n     if (keep)\n-      OVL_USED_P (lookup) = true;\n+      {\n+\tOVL_USED_P (lookup) = true;\n+\tovl_used (OVL_FUNCTION (lookup));\n+      }\n     else\n       {\n \tOVL_FUNCTION (lookup) = ovl_cache;\n \tovl_cache = lookup;\n       }\n+\n+  if (keep)\n+    ovl_used (lookup);\n }\n \n /* Returns nonzero if X is an expression for a (possibly overloaded)"}, {"sha": "b3f6773594adad19f441ac85c711cd762e442cc0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724e517a7df51aa4921704083ef78a7a41999198/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724e517a7df51aa4921704083ef78a7a41999198/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=724e517a7df51aa4921704083ef78a7a41999198", "patch": "@@ -1,3 +1,8 @@\n+2017-05-29  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/80891 (#2)\n+\t* g++.dg/lookup/pr80891-2.C: New.\n+\n 2017-05-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/37131"}, {"sha": "fa48b0b33432c91f47e552f150c740d17de82c3e", "filename": "gcc/testsuite/g++.dg/lookup/pr80891-2.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724e517a7df51aa4921704083ef78a7a41999198/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr80891-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724e517a7df51aa4921704083ef78a7a41999198/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr80891-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr80891-2.C?ref=724e517a7df51aa4921704083ef78a7a41999198", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/80891 part 1\n+// instantiation-time ADL for swap needs to copy a previous lookup\n+// node, but gets confused.\n+\n+void swap();\n+\n+namespace boost {\n+  void swap();\n+}\n+\n+using namespace boost;\n+\n+template <typename T>\n+void reversible_container_test ()\n+{\n+  using namespace boost;\n+  T a;\n+  swap (a);\n+}\n+\n+namespace boost {\n+  struct A {};\n+  template <typename T> void swap(T);\n+}\n+\n+void test_ptr_vector()\n+{\n+  reversible_container_test<A>;\n+}"}]}