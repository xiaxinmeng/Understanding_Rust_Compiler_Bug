{"sha": "c5c4d431e0d526738fbf54a92d36fefff8f647e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVjNGQ0MzFlMGQ1MjY3MzhmYmY1NGE5MmQzNmZlZmZmOGY2NDdlNA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-04-19T16:58:01Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-04-19T16:58:01Z"}, "message": "tree-call-cdce: If !HONOR_NANS do not make code with NaNs (PR88055)\n\nIf we don't HONOR_NANS we should not try to use any unordered\ncomparison results.  Best case those will just be optimized away;\nrealistically, they ICE.  For example, the rs6000 backend has some\ncode that specifically checks we never do this.\n\n\n\tPR tree-optimization/88055\n\t* tree-call-cdce.c (comparison_code_if_no_nans): New function.\n\t(gen_one_condition): Use it if !HONOR_NANS.\n\nFrom-SVN: r270460", "tree": {"sha": "ec8affc01cdd4316eb8e6b0b070196568ad9fa76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec8affc01cdd4316eb8e6b0b070196568ad9fa76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5c4d431e0d526738fbf54a92d36fefff8f647e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5c4d431e0d526738fbf54a92d36fefff8f647e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5c4d431e0d526738fbf54a92d36fefff8f647e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5c4d431e0d526738fbf54a92d36fefff8f647e4/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3734fb6a274e7574f614bb8139d085e19c85ff9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3734fb6a274e7574f614bb8139d085e19c85ff9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3734fb6a274e7574f614bb8139d085e19c85ff9e"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "493aaeb84b65187e11ff3bbde092648352c833f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5c4d431e0d526738fbf54a92d36fefff8f647e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5c4d431e0d526738fbf54a92d36fefff8f647e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5c4d431e0d526738fbf54a92d36fefff8f647e4", "patch": "@@ -1,3 +1,9 @@\n+2019-04-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR tree-optimization/88055\n+\t* tree-call-cdce.c (comparison_code_if_no_nans): New function.\n+\t(gen_one_condition): Use it if !HONOR_NANS.\n+\n 2019-04-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/90139"}, {"sha": "2e482b37ea25b7571632c297d7a42b2555bd1fd3", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5c4d431e0d526738fbf54a92d36fefff8f647e4/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5c4d431e0d526738fbf54a92d36fefff8f647e4/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=c5c4d431e0d526738fbf54a92d36fefff8f647e4", "patch": "@@ -362,6 +362,40 @@ can_guard_call_p (gimple *call)\n \t  || find_fallthru_edge (gimple_bb (call)->succs));\n }\n \f\n+/* For a comparison code return the comparison code we should use if we don't\n+   HONOR_NANS.  */\n+\n+static enum tree_code\n+comparison_code_if_no_nans (tree_code code)\n+{\n+  switch (code)\n+    {\n+    case UNLT_EXPR:\n+      return LT_EXPR;\n+    case UNGT_EXPR:\n+      return GT_EXPR;\n+    case UNLE_EXPR:\n+      return LE_EXPR;\n+    case UNGE_EXPR:\n+      return GE_EXPR;\n+    case UNEQ_EXPR:\n+      return EQ_EXPR;\n+    case LTGT_EXPR:\n+      return NE_EXPR;\n+\n+    case LT_EXPR:\n+    case GT_EXPR:\n+    case LE_EXPR:\n+    case GE_EXPR:\n+    case EQ_EXPR:\n+    case NE_EXPR:\n+      return code;\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+\n /* A helper function to generate gimple statements for one bound\n    comparison, so that the built-in function is called whenever\n    TCODE <ARG, LBUB> is *false*.  TEMP_NAME1/TEMP_NAME2 are names\n@@ -378,6 +412,9 @@ gen_one_condition (tree arg, int lbub,\n \t\t   vec<gimple *> conds,\n                    unsigned *nconds)\n {\n+  if (!HONOR_NANS (arg))\n+    tcode = comparison_code_if_no_nans (tcode);\n+\n   tree lbub_real_cst, lbub_cst, float_type;\n   tree temp, tempn, tempc, tempcn;\n   gassign *stmt1;"}]}