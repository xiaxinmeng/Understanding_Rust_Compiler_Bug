{"sha": "c8ae788f59f209e7015fdf6c5933fcb8ef558700", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhhZTc4OGY1OWYyMDllNzAxNWZkZjZjNTkzM2ZjYjhlZjU1ODcwMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@koffie.nl", "date": "2003-03-31T17:46:57Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-03-31T17:46:57Z"}, "message": "re PR target/10177 (VRsave mask wrong)\n\n2002-03-31  Segher Boessenkool  <segher@koffie.nl>\n\n        PR target/10177\n        * config/rs6000/rs6000.h (HARD_REGNO_RENAME_OK): New.\n        * config/rs6000/rs6000.c (compute_vrsave_mask):\n        Don't mark all call-clobbered registers as used.\n\nFrom-SVN: r65092", "tree": {"sha": "16d83c19689e8fe940e92c417259115c2751dcea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16d83c19689e8fe940e92c417259115c2751dcea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8ae788f59f209e7015fdf6c5933fcb8ef558700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ae788f59f209e7015fdf6c5933fcb8ef558700", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ae788f59f209e7015fdf6c5933fcb8ef558700", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ae788f59f209e7015fdf6c5933fcb8ef558700/comments", "author": null, "committer": null, "parents": [{"sha": "7f1fc38ea4593a4b0ae1333eefe028d1464d2a9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f1fc38ea4593a4b0ae1333eefe028d1464d2a9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f1fc38ea4593a4b0ae1333eefe028d1464d2a9b"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "8a84e12f63dd108ee35a5d204fcce645eb7bc0ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae788f59f209e7015fdf6c5933fcb8ef558700/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae788f59f209e7015fdf6c5933fcb8ef558700/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8ae788f59f209e7015fdf6c5933fcb8ef558700", "patch": "@@ -1,3 +1,10 @@\n+2002-03-31  Segher Boessenkool  <segher@koffie.nl>\n+\n+\tPR target/10177\n+\t* config/rs6000/rs6000.h (HARD_REGNO_RENAME_OK): New.\n+\t* config/rs6000/rs6000.c (compute_vrsave_mask): Don't mark\n+\tall call-clobbered registers as used.\n+\n 2003-03-31  Michael Matz  <matz@suse.de>\n \n \t* cppexp.c (cpp_classify_number): Accept '.' after \"0x\"."}, {"sha": "b91052020c409a3a146bd4c369a524f3857ea62d", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae788f59f209e7015fdf6c5933fcb8ef558700/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae788f59f209e7015fdf6c5933fcb8ef558700/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c8ae788f59f209e7015fdf6c5933fcb8ef558700", "patch": "@@ -9021,19 +9021,6 @@ compute_vrsave_mask ()\n   if (mask == 0)\n     return mask;\n \n-  /* Next, add all registers that are call-clobbered.  We do this\n-     because post-reload register optimizers such as regrename_optimize\n-     may choose to use them.  They never change the register class\n-     chosen by reload, so cannot create new uses of altivec registers\n-     if there were none before, so the early exit above is safe.  */\n-  /* ??? Alternately, we could define HARD_REGNO_RENAME_OK to disallow\n-     altivec registers not saved in the mask, which might well make the\n-     adjustments below more effective in eliding the save/restore of\n-     VRSAVE in small functions.  */\n-  for (i = FIRST_ALTIVEC_REGNO; i <= LAST_ALTIVEC_REGNO; ++i)\n-    if (call_used_regs[i])\n-      mask |= ALTIVEC_REG_BIT (i);\n-\n   /* Next, remove the argument registers from the set.  These must\n      be in the VRSAVE mask set by the caller, so we don't need to add\n      them in again.  More importantly, the mask we compute here is"}, {"sha": "b13c4030b58f5002839862ba0507f5c56a3c5809", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae788f59f209e7015fdf6c5933fcb8ef558700/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae788f59f209e7015fdf6c5933fcb8ef558700/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=c8ae788f59f209e7015fdf6c5933fcb8ef558700", "patch": "@@ -961,6 +961,12 @@ extern int rs6000_default_long_calls;\n    ? ALTIVEC_VECTOR_MODE (MODE1)\t\t\\\n    : 1)\n \n+/* Post-reload, we can't use any new AltiVec registers, as we already\n+   emitted the vrsave mask.  */\n+\n+#define HARD_REGNO_RENAME_OK(SRC, DST) \\\n+  (! ALTIVEC_REGNO_P (DST) || regs_ever_live[DST])\n+\n /* A C expression returning the cost of moving data from a register of class\n    CLASS1 to one of CLASS2.  */\n "}]}