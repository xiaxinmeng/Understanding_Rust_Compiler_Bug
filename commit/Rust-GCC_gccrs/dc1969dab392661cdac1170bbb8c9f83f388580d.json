{"sha": "dc1969dab392661cdac1170bbb8c9f83f388580d", "node_id": "C_kwDOANBUbNoAKGRjMTk2OWRhYjM5MjY2MWNkYWMxMTcwYmJiOGM5ZjgzZjM4ODU4MGQ", "commit": {"author": {"name": "Xionghu Luo", "email": "luoxhu@linux.ibm.com", "date": "2021-12-30T02:02:12Z"}, "committer": {"name": "Xionghu Luo", "email": "luoxhu@linux.ibm.com", "date": "2021-12-30T02:02:12Z"}, "message": "loop-invariant: Don't move cold bb instructions to preheader in RTL\n\ngcc/ChangeLog:\n\n2021-12-30  Xionghu Luo  <luoxhu@linux.ibm.com>\n\n\t* loop-invariant.c (find_invariants_bb): Check profile count\n\tbefore motion.\n\t(find_invariants_body): Add argument.\n\ngcc/testsuite/ChangeLog:\n\n2021-12-30  Xionghu Luo  <luoxhu@linux.ibm.com>\n\n\t* gcc.dg/loop-invariant-2.c: New.", "tree": {"sha": "24af75f03a990f00ce001c92fd271f2bc07aa742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24af75f03a990f00ce001c92fd271f2bc07aa742"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc1969dab392661cdac1170bbb8c9f83f388580d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc1969dab392661cdac1170bbb8c9f83f388580d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc1969dab392661cdac1170bbb8c9f83f388580d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc1969dab392661cdac1170bbb8c9f83f388580d/comments", "author": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be475aa0aae468df7370db9cfa8590776d901d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be475aa0aae468df7370db9cfa8590776d901d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be475aa0aae468df7370db9cfa8590776d901d1d"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "d69a0c16e33b1ebd40e860251edeab77d376848c", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc1969dab392661cdac1170bbb8c9f83f388580d/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc1969dab392661cdac1170bbb8c9f83f388580d/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=dc1969dab392661cdac1170bbb8c9f83f388580d", "patch": "@@ -1183,9 +1183,21 @@ find_invariants_insn (rtx_insn *insn, bool always_reached, bool always_executed)\n    call.  */\n \n static void\n-find_invariants_bb (basic_block bb, bool always_reached, bool always_executed)\n+find_invariants_bb (class loop *loop, basic_block bb, bool always_reached,\n+\t\t    bool always_executed)\n {\n   rtx_insn *insn;\n+  basic_block preheader = loop_preheader_edge (loop)->src;\n+\n+  /* Don't move insn of cold BB out of loop to preheader to reduce calculations\n+     and register live range in hot loop with cold BB.  */\n+  if (!always_executed && preheader->count > bb->count)\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"Don't move invariant from bb: %d out of loop %d\\n\",\n+\t\t bb->index, loop->num);\n+      return;\n+    }\n \n   FOR_BB_INSNS (bb, insn)\n     {\n@@ -1214,8 +1226,7 @@ find_invariants_body (class loop *loop, basic_block *body,\n   unsigned i;\n \n   for (i = 0; i < loop->num_nodes; i++)\n-    find_invariants_bb (body[i],\n-\t\t\tbitmap_bit_p (always_reached, i),\n+    find_invariants_bb (loop, body[i], bitmap_bit_p (always_reached, i),\n \t\t\tbitmap_bit_p (always_executed, i));\n }\n "}, {"sha": "df3d845856975eb19b6493aa0c0627fcebad45f8", "filename": "gcc/testsuite/gcc.dg/loop-invariant-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc1969dab392661cdac1170bbb8c9f83f388580d/gcc%2Ftestsuite%2Fgcc.dg%2Floop-invariant-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc1969dab392661cdac1170bbb8c9f83f388580d/gcc%2Ftestsuite%2Fgcc.dg%2Floop-invariant-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Floop-invariant-2.c?ref=dc1969dab392661cdac1170bbb8c9f83f388580d", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-rtl-loop2_invariant\" } */\n+\n+volatile int x;\n+void\n+bar (int, char *, char *);\n+void\n+foo (int *a, int n, int k)\n+{\n+  int i;\n+\n+  for (i = 0; i < n; i++)\n+    {\n+      if (__builtin_expect (x, 0))\n+\tbar (k / 5, \"one\", \"two\");\n+      a[i] = k;\n+    }\n+}\n+\n+/* { dg-final { scan-rtl-dump \"Don't move invariant from bb: .*out of loop\" \"loop2_invariant\" } } */"}]}