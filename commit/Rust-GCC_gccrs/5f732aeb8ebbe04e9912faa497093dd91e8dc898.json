{"sha": "5f732aeb8ebbe04e9912faa497093dd91e8dc898", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY3MzJhZWI4ZWJiZTA0ZTk5MTJmYWE0OTcwOTNkZDkxZThkYzg5OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-08-11T10:55:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-08-11T10:55:10Z"}, "message": "re PR tree-optimization/62070 (ICE: verify_ssa failed)\n\n2014-08-11  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/62070\n\t* tree-ssa-loop-manip.c (gimple_duplicate_loop_to_header_edge):\n\tRemove SSA checking.\n\n\t* gcc.dg/pr62070.c: New testcase.\n\nFrom-SVN: r213810", "tree": {"sha": "9bda3fd7b5d95eec74c75ea39abbb9b4f9d2ec1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bda3fd7b5d95eec74c75ea39abbb9b4f9d2ec1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f732aeb8ebbe04e9912faa497093dd91e8dc898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f732aeb8ebbe04e9912faa497093dd91e8dc898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f732aeb8ebbe04e9912faa497093dd91e8dc898", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f732aeb8ebbe04e9912faa497093dd91e8dc898/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ff0f237a4e33e38c09e3e7242e5a7fd9c588793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff0f237a4e33e38c09e3e7242e5a7fd9c588793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ff0f237a4e33e38c09e3e7242e5a7fd9c588793"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "ec017f98524eea330302cf7bf4becde814be06bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f732aeb8ebbe04e9912faa497093dd91e8dc898/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f732aeb8ebbe04e9912faa497093dd91e8dc898/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f732aeb8ebbe04e9912faa497093dd91e8dc898", "patch": "@@ -1,3 +1,9 @@\n+2014-08-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/62070\n+\t* tree-ssa-loop-manip.c (gimple_duplicate_loop_to_header_edge):\n+\tRemove SSA checking.\n+\n 2014-08-11  Yury Gribov  <y.gribov@samsung.com>\n \n \t* asan.c (asan_check_flags): New enum."}, {"sha": "10656422c69cb2b7ad823cf83069fd89744b8ec2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f732aeb8ebbe04e9912faa497093dd91e8dc898/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f732aeb8ebbe04e9912faa497093dd91e8dc898/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f732aeb8ebbe04e9912faa497093dd91e8dc898", "patch": "@@ -1,3 +1,8 @@\n+2014-08-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/62070\n+\t* gcc.dg/pr62070.c: New testcase.\n+\n 2014-08-11  Yury Gribov  <y.gribov@samsung.com>\n \n \t* c-c++-common/asan/inc.c: Update test."}, {"sha": "f7b08222015197b209422e1a6122c03b79f1f519", "filename": "gcc/testsuite/gcc.dg/pr62070.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f732aeb8ebbe04e9912faa497093dd91e8dc898/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62070.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f732aeb8ebbe04e9912faa497093dd91e8dc898/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62070.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62070.c?ref=5f732aeb8ebbe04e9912faa497093dd91e8dc898", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fno-tree-vectorize\" } */\n+\n+int in[8][4];\n+int out[4];\n+\n+void\n+foo (void)\n+{\n+  int sum = 1;\n+  int i, j, k;\n+  for (k = 0; k < 4; k++)\n+    {\n+      for (j = 0; j < 4; j++)\n+\tfor (i = 0; i < 4; i++)\n+\t  sum *= in[i + k][j];\n+      out[k] = sum;\n+    }\n+}"}, {"sha": "ac9693612d6dd57d4254e049f2f0d638df767ac5", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f732aeb8ebbe04e9912faa497093dd91e8dc898/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f732aeb8ebbe04e9912faa497093dd91e8dc898/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=5f732aeb8ebbe04e9912faa497093dd91e8dc898", "patch": "@@ -761,17 +761,6 @@ gimple_duplicate_loop_to_header_edge (struct loop *loop, edge e,\n   if (!loops_state_satisfies_p (LOOPS_HAVE_PREHEADERS))\n     return false;\n \n-#ifdef ENABLE_CHECKING\n-  /* ???  This forces needless update_ssa calls after processing each\n-     loop instead of just once after processing all loops.  We should\n-     instead verify that loop-closed SSA form is up-to-date for LOOP\n-     only (and possibly SSA form).  For now just skip verifying if\n-     there are to-be renamed variables.  */\n-  if (!need_ssa_update_p (cfun)\n-      && loops_state_satisfies_p (LOOP_CLOSED_SSA))\n-    verify_loop_closed_ssa (true);\n-#endif\n-\n   first_new_block = last_basic_block_for_fn (cfun);\n   if (!duplicate_loop_to_header_edge (loop, e, ndupl, wont_exit,\n \t\t\t\t      orig, to_remove, flags))"}]}