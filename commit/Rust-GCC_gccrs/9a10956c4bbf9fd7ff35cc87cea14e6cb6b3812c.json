{"sha": "9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWExMDk1NmM0YmJmOWZkN2ZmMzVjYzg3Y2VhMTRlNmNiNmIzODEyYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-03-22T13:23:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-03-22T13:23:00Z"}, "message": "re PR target/70333 (Test miscompiled with -O0.)\n\n2016-03-22  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/70333\n\t* fold-const.c (extract_muldiv_1): Properly perform multiplication\n\tin the wide type.\n\n\t* gcc.dg/torture/pr70333.c: New testcase.\n\nFrom-SVN: r234401", "tree": {"sha": "4622382e583a127b4ebc7b3e6034749c6bb154d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4622382e583a127b4ebc7b3e6034749c6bb154d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "380d99c9aacfb3e4c1b23a0dee93110fe6a47e24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/380d99c9aacfb3e4c1b23a0dee93110fe6a47e24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/380d99c9aacfb3e4c1b23a0dee93110fe6a47e24"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "01f38d02123df8f3091284d705e6a7b5ebc07870", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c", "patch": "@@ -1,3 +1,9 @@\n+2016-03-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/70333\n+\t* fold-const.c (extract_muldiv_1): Properly perform multiplication\n+\tin the wide type.\n+\n 2016-03-22  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* config/i386/i386.c (def_builtin): Remove duplicated functionality."}, {"sha": "9d861c6847b2c76fcd5d6660b5572c03b4dbbbea", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c", "patch": "@@ -6376,18 +6376,17 @@ extract_muldiv_1 (tree t, tree c, enum tree_code code, tree wide_type,\n \t  bool overflow_p = false;\n \t  bool overflow_mul_p;\n \t  signop sign = TYPE_SIGN (ctype);\n-\t  wide_int mul = wi::mul (op1, c, sign, &overflow_mul_p);\n+\t  unsigned prec = TYPE_PRECISION (ctype);\n+\t  wide_int mul = wi::mul (wide_int::from (op1, prec, sign),\n+\t\t\t\t  wide_int::from (c, prec, sign),\n+\t\t\t\t  sign, &overflow_mul_p);\n \t  overflow_p = TREE_OVERFLOW (c) | TREE_OVERFLOW (op1);\n \t  if (overflow_mul_p\n \t      && ((sign == UNSIGNED && tcode != MULT_EXPR) || sign == SIGNED))\n \t    overflow_p = true;\n \t  if (!overflow_p)\n-\t    {\n-\t      mul = wide_int::from (mul, TYPE_PRECISION (ctype),\n-\t\t\t\t    TYPE_SIGN (TREE_TYPE (op1)));\n-\t      return fold_build2 (tcode, ctype, fold_convert (ctype, op0),\n-\t\t\t\t  wide_int_to_tree (ctype, mul));\n-\t    }\n+\t    return fold_build2 (tcode, ctype, fold_convert (ctype, op0),\n+\t\t\t\twide_int_to_tree (ctype, mul));\n \t}\n \n       /* If these operations \"cancel\" each other, we have the main"}, {"sha": "f568f1b784d6fb3f91fbbf05ed231783a27bf7b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c", "patch": "@@ -1,3 +1,8 @@\n+2016-03-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/70333\n+\t* gcc.dg/torture/pr70333.c: New testcase.\n+\n 2016-03-22  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \t* g++.dg/ext/pr70290.C: New test."}, {"sha": "854e6d59e1a7d1b04cd1098793b7eb453404d35b", "filename": "gcc/testsuite/gcc.dg/torture/pr70333.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70333.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70333.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70333.c?ref=9a10956c4bbf9fd7ff35cc87cea14e6cb6b3812c", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target lp64 } */\n+\n+unsigned long int\n+foo (signed char b, signed char e)\n+{\n+  return ((2ULL * b) * (e * 13)) * (32 << 24);\n+}\n+\n+int\n+main ()\n+{\n+  if (__CHAR_BIT__ == 8\n+      && sizeof (int) == 4\n+      && sizeof (long long) == 8\n+      && foo (-60, 1) != 0xffffff3d00000000ULL)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}