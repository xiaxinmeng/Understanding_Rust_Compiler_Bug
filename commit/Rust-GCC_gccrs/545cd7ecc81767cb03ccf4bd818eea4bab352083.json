{"sha": "545cd7ecc81767cb03ccf4bd818eea4bab352083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ1Y2Q3ZWNjODE3NjdjYjAzY2NmNGJkODE4ZWVhNGJhYjM1MjA4Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-04-20T12:49:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-04-20T12:49:58Z"}, "message": "gimple-match.h (maybe_build_generic_op): Adjust prototype.\n\n2016-04-20  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-match.h (maybe_build_generic_op): Adjust prototype.\n\t* gimple-match-head.c (maybe_build_generic_op): Pass all ops\n\tby reference, clear op1 and op2 when GENERICizing BIT_FIELD_REF.\n\t(maybe_push_res_to_seq): Adjust.\n\t* gimple-fold.c (maybe_build_generic_op): Likewise.\n\nFrom-SVN: r235274", "tree": {"sha": "6ecda2e36f59655af88a3d7c0521fb193010349e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ecda2e36f59655af88a3d7c0521fb193010349e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/545cd7ecc81767cb03ccf4bd818eea4bab352083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545cd7ecc81767cb03ccf4bd818eea4bab352083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/545cd7ecc81767cb03ccf4bd818eea4bab352083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545cd7ecc81767cb03ccf4bd818eea4bab352083/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd39022b9e5f1272c7451fc0feadc39c7c858c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd39022b9e5f1272c7451fc0feadc39c7c858c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd39022b9e5f1272c7451fc0feadc39c7c858c17"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "e61f98c2df4e5b99369751fd9b2a70a76d4792ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545cd7ecc81767cb03ccf4bd818eea4bab352083/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545cd7ecc81767cb03ccf4bd818eea4bab352083/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=545cd7ecc81767cb03ccf4bd818eea4bab352083", "patch": "@@ -1,3 +1,11 @@\n+2016-04-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-match.h (maybe_build_generic_op): Adjust prototype.\n+\t* gimple-match-head.c (maybe_build_generic_op): Pass all ops\n+\tby reference, clear op1 and op2 when GENERICizing BIT_FIELD_REF.\n+\t(maybe_push_res_to_seq): Adjust.\n+\t* gimple-fold.c (maybe_build_generic_op): Likewise.\n+\n 2016-04-20  Marek Polacek  <polacek@redhat.com>\n \n \t* tree-if-conv.c (is_false_predicate): For NULL_TREE return false"}, {"sha": "6cd0a4b8f53797fee268ba0ed2c09418a00169b3", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545cd7ecc81767cb03ccf4bd818eea4bab352083/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545cd7ecc81767cb03ccf4bd818eea4bab352083/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=545cd7ecc81767cb03ccf4bd818eea4bab352083", "patch": "@@ -3376,8 +3376,7 @@ replace_stmt_with_simplification (gimple_stmt_iterator *gsi,\n \t  || gimple_num_ops (stmt) > get_gimple_rhs_num_ops (rcode))\n \t{\n \t  maybe_build_generic_op (rcode,\n-\t\t\t\t  TREE_TYPE (gimple_assign_lhs (stmt)),\n-\t\t\t\t  &ops[0], ops[1], ops[2]);\n+\t\t\t\t  TREE_TYPE (gimple_assign_lhs (stmt)), ops);\n \t  gimple_assign_set_rhs_with_ops (gsi, rcode, ops[0], ops[1], ops[2]);\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {"}, {"sha": "2beadbc29054d4bcb8678d6dbac04401224735b1", "filename": "gcc/gimple-match-head.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545cd7ecc81767cb03ccf4bd818eea4bab352083/gcc%2Fgimple-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545cd7ecc81767cb03ccf4bd818eea4bab352083/gcc%2Fgimple-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match-head.c?ref=545cd7ecc81767cb03ccf4bd818eea4bab352083", "patch": "@@ -233,18 +233,18 @@ gimple_resimplify3 (gimple_seq *seq,\n    a GENERIC tree for that expression into *OP0.  */\n \n void\n-maybe_build_generic_op (enum tree_code code, tree type,\n-\t\t\ttree *op0, tree op1, tree op2)\n+maybe_build_generic_op (enum tree_code code, tree type, tree *ops)\n {\n   switch (code)\n     {\n     case REALPART_EXPR:\n     case IMAGPART_EXPR:\n     case VIEW_CONVERT_EXPR:\n-      *op0 = build1 (code, type, *op0);\n+      ops[0] = build1 (code, type, ops[0]);\n       break;\n     case BIT_FIELD_REF:\n-      *op0 = build3 (code, type, *op0, op1, op2);\n+      ops[0] = build3 (code, type, ops[0], ops[1], ops[2]);\n+      ops[1] = ops[2] = NULL_TREE;\n       break;\n     default:;\n     }\n@@ -316,7 +316,7 @@ maybe_push_res_to_seq (code_helper rcode, tree type, tree *ops,\n \t  else\n \t    res = create_tmp_reg (type);\n \t}\n-      maybe_build_generic_op (rcode, type, &ops[0], ops[1], ops[2]);\n+      maybe_build_generic_op (rcode, type, ops);\n       gimple *new_stmt = gimple_build_assign (res, rcode,\n \t\t\t\t\t     ops[0], ops[1], ops[2]);\n       gimple_seq_add_stmt_without_update (seq, new_stmt);"}, {"sha": "2b8f4b968889cd47ea135b2a5c839ef3fea2f56f", "filename": "gcc/gimple-match.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545cd7ecc81767cb03ccf4bd818eea4bab352083/gcc%2Fgimple-match.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545cd7ecc81767cb03ccf4bd818eea4bab352083/gcc%2Fgimple-match.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match.h?ref=545cd7ecc81767cb03ccf4bd818eea4bab352083", "patch": "@@ -64,7 +64,7 @@ bool gimple_resimplify3 (gimple_seq *, code_helper *, tree, tree *,\n \t\t\t tree (*)(tree));\n tree maybe_push_res_to_seq (code_helper, tree, tree *,\n \t\t\t    gimple_seq *, tree res = NULL_TREE);\n-void maybe_build_generic_op (enum tree_code, tree, tree *, tree, tree);\n+void maybe_build_generic_op (enum tree_code, tree, tree *);\n \n \n #endif  /* GCC_GIMPLE_MATCH_H */"}]}