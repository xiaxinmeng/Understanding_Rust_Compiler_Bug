{"sha": "54cd497b0d403dc63fc7db55db3eb77045e23015", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRjZDQ5N2IwZDQwM2RjNjNmYzdkYjU1ZGIzZWI3NzA0NWUyMzAxNQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-09-30T08:14:03Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-09-30T08:14:03Z"}, "message": "[testsuite] Fix order of dg-do and dg-require-effective-target directives\n\n2015-09-30  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* g++.dg/cpp0x/stdint.C: Move dg-require-effective-target after\n\tdg-do.\n\t* g++.dg/gomp/tls-wrap4.C: Likewise.\n\t* gcc.dg/atomic-op-optimize.c: Likewise.\n\t* gcc.dg/pr54087.c: Likewise.\n\t* gcc.dg/tls/section-2.c: Likewise.\n\t* gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a-pr63175.c:\n\tLikewise.\n\t* gcc.dg/vect/costmodel/ppc/costmodel-pr37194.c: Likewise.\n\t* gcc.dg/vect/trapv-vect-reduc-4.c: Likewise.\n\t* gcc.target/arm/divzero.c: Likewise.\n\t* gcc.target/arm/sibcall-2.c: Likewise.\n\t* gcc.target/arm/thumb1-Os-mult.c: Likewise.\n\t* gcc.target/arm/thumb1-load-64bit-constant-1.c: Likewise.\n\t* gcc.target/arm/thumb1-load-64bit-constant-2.c: Likewise.\n\t* gcc.target/arm/thumb1-load-64bit-constant-3.c: Likewise.\n\t* gcc.target/arm/volatile-bitfields-1.c: Likewise.\n\t* gcc.target/arm/volatile-bitfields-2.c: Likewise.\n\t* gcc.target/arm/volatile-bitfields-3.c: Likewise.\n\t* gcc.target/arm/volatile-bitfields-4.c: Likewise.\n\t* gfortran.dg/default_format_2.f90: Likewise.\n\t* gfortran.dg/default_format_denormal_2.f90: Likewise.\n\nFrom-SVN: r228280", "tree": {"sha": "3e1f9eb87e909f74365aa24098c90feddaec1149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e1f9eb87e909f74365aa24098c90feddaec1149"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54cd497b0d403dc63fc7db55db3eb77045e23015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54cd497b0d403dc63fc7db55db3eb77045e23015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54cd497b0d403dc63fc7db55db3eb77045e23015", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54cd497b0d403dc63fc7db55db3eb77045e23015/comments", "author": null, "committer": null, "parents": [{"sha": "76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5"}], "stats": {"total": 65, "additions": 45, "deletions": 20}, "files": [{"sha": "da03478c028318f96c1c0033b55379315ca4653c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,3 +1,28 @@\n+2015-09-30  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* g++.dg/cpp0x/stdint.C: Move dg-require-effective-target after\n+\tdg-do.\n+\t* g++.dg/gomp/tls-wrap4.C: Likewise.\n+\t* gcc.dg/atomic-op-optimize.c: Likewise.\n+\t* gcc.dg/pr54087.c: Likewise.\n+\t* gcc.dg/tls/section-2.c: Likewise.\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a-pr63175.c:\n+\tLikewise.\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-pr37194.c: Likewise.\n+\t* gcc.dg/vect/trapv-vect-reduc-4.c: Likewise.\n+\t* gcc.target/arm/divzero.c: Likewise.\n+\t* gcc.target/arm/sibcall-2.c: Likewise.\n+\t* gcc.target/arm/thumb1-Os-mult.c: Likewise.\n+\t* gcc.target/arm/thumb1-load-64bit-constant-1.c: Likewise.\n+\t* gcc.target/arm/thumb1-load-64bit-constant-2.c: Likewise.\n+\t* gcc.target/arm/thumb1-load-64bit-constant-3.c: Likewise.\n+\t* gcc.target/arm/volatile-bitfields-1.c: Likewise.\n+\t* gcc.target/arm/volatile-bitfields-2.c: Likewise.\n+\t* gcc.target/arm/volatile-bitfields-3.c: Likewise.\n+\t* gcc.target/arm/volatile-bitfields-4.c: Likewise.\n+\t* gfortran.dg/default_format_2.f90: Likewise.\n+\t* gfortran.dg/default_format_denormal_2.f90: Likewise.\n+\n 2015-09-29  Jonathan Roelofs  <jonathan@codesourcery.com>\n \n \t* gcc.dg/debug/pr65771.c: Use tls_runtime instead of tls."}, {"sha": "6c213d7fc0bf69f2678c56342bb99f15451d54f3", "filename": "gcc/testsuite/g++.dg/cpp0x/stdint.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstdint.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstdint.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstdint.C?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,6 +1,6 @@\n // PR c++/52764\n-// { dg-require-effective-target stdint_types }\n // { dg-do compile { target c++11 } }\n+// { dg-require-effective-target stdint_types }\n \n #include <stdint.h>\n "}, {"sha": "dca249d441d04b8064a153a484d4db513cf19f38", "filename": "gcc/testsuite/g++.dg/gomp/tls-wrap4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftls-wrap4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftls-wrap4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftls-wrap4.C?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,8 +1,8 @@\n // We don't need to call the wrapper through the PLT; we can use a separate\n // copy per shared object.\n \n-// { dg-require-effective-target tls }\n // { dg-do compile { target c++11 } }\n+// { dg-require-effective-target tls }\n // { dg-options \"-fPIC\" }\n // { dg-final { scan-assembler-not \"_ZTW1i@PLT\" { target i?86-*-* x86_64-*-* } } }\n "}, {"sha": "66efee4bb28ca38440bd74c5ca0d0e5866d13c93", "filename": "gcc/testsuite/gcc.dg/atomic-op-optimize.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-optimize.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -2,8 +2,8 @@\n    Test that it at happens on x86 by making sure there are 2 xchg's and no\n    compare_exchange loop.  */\n \n-/* { dg-require-effective-target sync_int_long } */\n /* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-require-effective-target sync_int_long } */\n /* { dg-final { scan-assembler-times \"cmpxchg\" 0 } } */\n /* { dg-final { scan-assembler-times \"xchg\" 2 } } */\n "}, {"sha": "5874e9cd7bd4baeeb80461d10aac83e77cee3ca8", "filename": "gcc/testsuite/gcc.dg/pr54087.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54087.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54087.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54087.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,7 +1,7 @@\n /* PR54087.  Verify __atomic_sub (val) uses __atomic_add (-val) if there is no\n              atomic_aub.  */\n-/* { dg-require-effective-target sync_int_long } */\n /* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-require-effective-target sync_int_long } */\n /* { dg-final { scan-assembler-times \"xadd\" 2 } } */\n \n "}, {"sha": "9c213074c91c2216b65c3aefd5bd6aeb5cd7e1ca", "filename": "gcc/testsuite/gcc.dg/tls/section-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fsection-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fsection-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fsection-2.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,7 +1,7 @@\n /* Verify that we get errors for trying to put TLS data in \n    sections which can't work.  */\n-/* { dg-require-effective-target tls } */\n /* { dg-do compile { target *-*-vxworks } } */\n+/* { dg-require-effective-target tls } */\n \n #define A(X)\t__attribute__((section(X)))\n "}, {"sha": "409e68575c2f2f372c58db3c78cbf31591b348c6", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a-pr63175.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a-pr63175.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a-pr63175.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a-pr63175.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target vect_int } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n \n #define N 16 \n "}, {"sha": "5b5dd1bbd27b6f7ebbf1c1943d393941c29d99e2", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-pr37194.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-pr37194.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-pr37194.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-pr37194.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target vect_float } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdlib.h>\n #include \"../../tree-vect.h\""}, {"sha": "d19d42cc0489b47ba1f623506eedb00063ee2c63", "filename": "gcc/testsuite/gcc.dg/vect/trapv-vect-reduc-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftrapv-vect-reduc-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftrapv-vect-reduc-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftrapv-vect-reduc-4.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target vect_int } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "b0057638d983478e731773bd2992dabb7f5773e8", "filename": "gcc/testsuite/gcc.target/arm/divzero.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdivzero.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdivzero.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdivzero.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,6 +1,6 @@\n+/* { dg-do run } */\n /* { dg-require-effective-target arm_eabi } */\n /* { dg-options \"\" } */\n-/* { dg-do run } */\n \n /* Check that long long divmod functions pass the right argument to\n    __aeabi_ldiv0 on divide by zero.  */"}, {"sha": "52cd307a484226d114eb84b7b4bd1fa4ce637c5a", "filename": "gcc/testsuite/gcc.target/arm/sibcall-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsibcall-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsibcall-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsibcall-2.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target arm_eabi } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_eabi } */\n /* { dg-options \"-O2 -mabi=aapcs\" } */\n \n "}, {"sha": "b989c420830a6bd2bbe997740c443e3e060f9861", "filename": "gcc/testsuite/gcc.target/arm/thumb1-Os-mult.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-Os-mult.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-Os-mult.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-Os-mult.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target arm_thumb1_ok } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n /* { dg-options \"-Os\" } */\n /* { dg-skip-if \"\" { ! { arm_thumb1 } } } */\n "}, {"sha": "59e9a8df1bed6f0068e4219b60c3eb086e236524", "filename": "gcc/testsuite/gcc.target/arm/thumb1-load-64bit-constant-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-1.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target arm_thumb1_ok } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n /* { dg-options \"-Os\" } */\n /* { dg-skip-if \"\" { ! { arm_thumb1 } } } */\n "}, {"sha": "f542ad3f477288fb887c66461007fa0749fdc991", "filename": "gcc/testsuite/gcc.target/arm/thumb1-load-64bit-constant-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-2.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target arm_thumb1_ok } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n /* { dg-options \"-O2\" } */\n /* { dg-skip-if \"\" { ! { arm_thumb1 } } } */\n "}, {"sha": "0a1848489ec69d4ceae1d841cb8d78abdcdd511a", "filename": "gcc/testsuite/gcc.target/arm/thumb1-load-64bit-constant-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-3.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target arm_thumb1_ok } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n /* { dg-options \"-Os\" } */\n /* { dg-skip-if \"\" { ! { arm_thumb1 } } } */\n "}, {"sha": "d841ca1c2b286e69cd2b18ba9c8eea83bb08f6e1", "filename": "gcc/testsuite/gcc.target/arm/volatile-bitfields-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-1.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target arm_eabi } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_eabi } */\n /* { dg-options \"-O2\" } */\n \n typedef struct {"}, {"sha": "ea1af391fccaa50429611653b1198b7e8b61c774", "filename": "gcc/testsuite/gcc.target/arm/volatile-bitfields-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-2.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target arm_eabi } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_eabi } */\n /* { dg-options \"-O2\" } */\n \n typedef struct {"}, {"sha": "4580da0d60a45629515f28ed6f9c043e11981464", "filename": "gcc/testsuite/gcc.target/arm/volatile-bitfields-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-3.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target arm_eabi } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_eabi } */\n /* { dg-options \"-O2\" } */\n \n typedef struct {"}, {"sha": "4256965344de3a76205a2bd0d4ba48cf99ac880b", "filename": "gcc/testsuite/gcc.target/arm/volatile-bitfields-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-4.c?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-require-effective-target arm_eabi } */\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_eabi } */\n /* { dg-options \"-O2\" } */\n /* { dg-final { scan-assembler-times \"ldr\\[\\\\t \\]+\\[^\\n\\]*,\\[\\\\t \\]*\\\\\\[\\[^\\n\\]*\\\\\\]\" 2 } } */\n /* { dg-final { scan-assembler-times \"str\\[\\\\t \\]+\\[^\\n\\]*,\\[\\\\t \\]*\\\\\\[\\[^\\n\\]*\\\\\\]\" 2 } } */"}, {"sha": "9c5af7bec12cc75a91a4e446ed2f4012e0b3503a", "filename": "gcc/testsuite/gfortran.dg/default_format_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_format_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_format_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_format_2.f90?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-! { dg-require-effective-target fortran_large_real }\n ! { dg-do run { xfail powerpc*-apple-darwin* powerpc*-*-linux* } }\n+! { dg-require-effective-target fortran_large_real }\n ! Test XFAILed on these platforms because the system's printf() lacks\n ! proper support for denormalized long doubles. See PR24685\n !"}, {"sha": "58cd9876001f30d0372066b878ad4ac3fd5594e6", "filename": "gcc/testsuite/gfortran.dg/default_format_denormal_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_format_denormal_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cd497b0d403dc63fc7db55db3eb77045e23015/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_format_denormal_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_format_denormal_2.f90?ref=54cd497b0d403dc63fc7db55db3eb77045e23015", "patch": "@@ -1,5 +1,5 @@\n-! { dg-require-effective-target fortran_large_real }\n ! { dg-do run { xfail powerpc*-apple-darwin* } }\n+! { dg-require-effective-target fortran_large_real }\n ! Test XFAILed on this platform because the system's printf() lacks\n ! proper support for denormalized long doubles. See PR24685\n !"}]}