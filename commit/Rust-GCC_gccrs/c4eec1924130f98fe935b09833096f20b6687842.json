{"sha": "c4eec1924130f98fe935b09833096f20b6687842", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRlZWMxOTI0MTMwZjk4ZmU5MzViMDk4MzMwOTZmMjBiNjY4Nzg0Mg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-24T19:17:45Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-24T19:17:45Z"}, "message": "(movdi_internal): Add x/J alternative.\n\n(movdi_internal2): Add x/J alternative.  Change a/I to a/J.\n(movsi_internal1, movsi_internal2): Change x/I alternative to x/J.\n\nFrom-SVN: r14298", "tree": {"sha": "13fcd1450c529c897e5ebbd76ac57d10adca4020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13fcd1450c529c897e5ebbd76ac57d10adca4020"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4eec1924130f98fe935b09833096f20b6687842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4eec1924130f98fe935b09833096f20b6687842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4eec1924130f98fe935b09833096f20b6687842", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4eec1924130f98fe935b09833096f20b6687842/comments", "author": null, "committer": null, "parents": [{"sha": "4f0875a93bfbf56bd571373e99aa199a9d5d4730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f0875a93bfbf56bd571373e99aa199a9d5d4730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f0875a93bfbf56bd571373e99aa199a9d5d4730"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "36f97910ffdd80a78619cdf340703987a960e727", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4eec1924130f98fe935b09833096f20b6687842/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4eec1924130f98fe935b09833096f20b6687842/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=c4eec1924130f98fe935b09833096f20b6687842", "patch": "@@ -3320,17 +3320,17 @@ move\\\\t%0,%z4\\\\n\\\\\n }\")\n \n (define_insn \"movdi_internal\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,d,d,R,o,*d,*x\")\n-\t(match_operand:DI 1 \"general_operand\" \"d,iF,R,o,d,d,*x,*d\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,d,d,R,o,*x,*d,*x\")\n+\t(match_operand:DI 1 \"general_operand\" \"d,iF,R,o,d,d,J,*x,*d\"))]\n   \"!TARGET_64BIT\n    && (register_operand (operands[0], DImode)\n        || register_operand (operands[1], DImode)\n        || (GET_CODE (operands[1]) == CONST_INT && INTVAL (operands[1]) == 0)\n        || operands[1] == CONST0_RTX (DImode))\"\n   \"* return mips_move_2words (operands, insn); \"\n-  [(set_attr \"type\"\t\"move,arith,load,load,store,store,hilo,hilo\")\n+  [(set_attr \"type\"\t\"move,arith,load,load,store,store,hilo,hilo,hilo\")\n    (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"   \"2,4,2,4,2,4,2,2\")])\n+   (set_attr \"length\"   \"2,4,2,4,2,4,2,2,2\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -3344,17 +3344,17 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\")\n \n (define_insn \"movdi_internal2\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,d,R,m,*d,*x,*a\")\n-\t(match_operand:DI 1 \"movdi_operand\" \"d,S,IKL,Mnis,R,m,dJ,dJ,*x,*d,*I\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,d,R,m,*x,*d,*x,*a\")\n+\t(match_operand:DI 1 \"movdi_operand\" \"d,S,IKL,Mnis,R,m,dJ,dJ,J,*x,*d,*J\"))]\n   \"TARGET_64BIT\n    && (register_operand (operands[0], DImode)\n        || se_register_operand (operands[1], DImode)\n        || (GET_CODE (operands[1]) == CONST_INT && INTVAL (operands[1]) == 0)\n        || operands[1] == CONST0_RTX (DImode))\"\n   \"* return mips_move_2words (operands, insn); \"\n-  [(set_attr \"type\"\t\"move,load,arith,arith,load,load,store,store,hilo,hilo,hilo\")\n+  [(set_attr \"type\"\t\"move,load,arith,arith,load,load,store,store,hilo,hilo,hilo,hilo\")\n    (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"\t\"1,2,1,2,1,2,1,2,1,1,2\")])\n+   (set_attr \"length\"\t\"1,2,1,2,1,2,1,2,1,1,1,2\")])\n \n ;; Handle input reloads in DImode.\n ;; This is mainly to handle reloading HILO_REGNUM.  Note that we may\n@@ -3574,7 +3574,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movsi_internal1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,d,R,m,*d,*f*z,*f,*f,*f,*R,*m,*x,*x,*d,*d\")\n-\t(match_operand:SI 1 \"move_operand\" \"d,S,IKL,Mnis,R,m,dJ,dJ,*f*z,*d,*f,*R,*m,*f,*f,I,*d,*x,*a\"))]\n+\t(match_operand:SI 1 \"move_operand\" \"d,S,IKL,Mnis,R,m,dJ,dJ,*f*z,*d,*f,*R,*m,*f,*f,J,*d,*x,*a\"))]\n   \"TARGET_DEBUG_H_MODE\n    && (register_operand (operands[0], SImode)\n        || register_operand (operands[1], SImode)\n@@ -3586,7 +3586,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movsi_internal2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,d,R,m,*d,*z,*x,*d,*x,*d\")\n-\t(match_operand:SI 1 \"move_operand\" \"d,S,IKL,Mnis,R,m,dJ,dJ,*z,*d,I,*x,*d,*a\"))]\n+\t(match_operand:SI 1 \"move_operand\" \"d,S,IKL,Mnis,R,m,dJ,dJ,*z,*d,J,*x,*d,*a\"))]\n   \"!TARGET_DEBUG_H_MODE\n    && (register_operand (operands[0], SImode)\n        || register_operand (operands[1], SImode)"}]}