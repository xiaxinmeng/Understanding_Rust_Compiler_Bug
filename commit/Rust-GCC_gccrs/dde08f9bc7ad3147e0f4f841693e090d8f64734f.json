{"sha": "dde08f9bc7ad3147e0f4f841693e090d8f64734f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRlMDhmOWJjN2FkMzE0N2UwZjRmODQxNjkzZTA5MGQ4ZjY0NzM0Zg==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2009-07-28T18:07:32Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2009-07-28T18:07:32Z"}, "message": "dwarf2out.c (output_file_names): Test new macro DWARF2_DIR_SHOULD_END_WITH_SEPARATOR.\n\n\n\t* dwarf2out.c (output_file_names): Test new macro\n\tDWARF2_DIR_SHOULD_END_WITH_SEPARATOR.\n\t(add_comp_dir_attribute): Likewise.\n\nFrom-SVN: r150173", "tree": {"sha": "d6658380e81e5559b53e792938550ac9057bf0da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6658380e81e5559b53e792938550ac9057bf0da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dde08f9bc7ad3147e0f4f841693e090d8f64734f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde08f9bc7ad3147e0f4f841693e090d8f64734f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dde08f9bc7ad3147e0f4f841693e090d8f64734f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde08f9bc7ad3147e0f4f841693e090d8f64734f/comments", "author": null, "committer": null, "parents": [{"sha": "032502c26ffec2ca9b3721df0ffd4808bd149e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/032502c26ffec2ca9b3721df0ffd4808bd149e18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/032502c26ffec2ca9b3721df0ffd4808bd149e18"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "f337538a52b934b9f20b1e5af9f496319b1c4eed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde08f9bc7ad3147e0f4f841693e090d8f64734f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde08f9bc7ad3147e0f4f841693e090d8f64734f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dde08f9bc7ad3147e0f4f841693e090d8f64734f", "patch": "@@ -1,3 +1,9 @@\n+2009-07-28  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* dwarf2out.c (output_file_names): Test new macro\n+\tDWARF2_DIR_SHOULD_END_WITH_SEPARATOR.\n+\t(add_comp_dir_attribute): Likewise.\n+\n 2009-07-28  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* config/i386/mingw-w64.h (LINK_SPEC): Add"}, {"sha": "168ca0cc6b43785be65c8294d33f98098e612291", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde08f9bc7ad3147e0f4f841693e090d8f64734f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde08f9bc7ad3147e0f4f841693e090d8f64734f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=dde08f9bc7ad3147e0f4f841693e090d8f64734f", "patch": "@@ -96,6 +96,14 @@ static void dwarf2out_source_line (unsigned int, const char *, int, bool);\n static rtx last_var_location_insn;\n #endif\n \n+#ifdef VMS_DEBUGGING_INFO\n+/* Define this macro to be a nonzero value if the directory specifications\n+    which are output in the debug info should end with a separator.  */\n+#define DWARF2_DIR_SHOULD_END_WITH_SEPARATOR 1\n+#else\n+#define DWARF2_DIR_SHOULD_END_WITH_SEPARATOR 0\n+#endif\n+\n #ifndef DWARF2_FRAME_INFO\n # ifdef DWARF2_DEBUGGING_INFO\n #  define DWARF2_FRAME_INFO \\\n@@ -9601,7 +9609,9 @@ output_file_names (void)\n   idx = 1;\n   idx_offset = dirs[0].length > 0 ? 1 : 0;\n   for (i = 1 - idx_offset; i < ndirs; i++)\n-    dw2_asm_output_nstring (dirs[i].path, dirs[i].length - 1,\n+    dw2_asm_output_nstring (dirs[i].path,\n+\t\t\t    dirs[i].length\n+\t\t\t     - !DWARF2_DIR_SHOULD_END_WITH_SEPARATOR,\n \t\t\t    \"Directory Entry: 0x%x\", i + idx_offset);\n \n   dw2_asm_output_data (1, 0, \"End directory table\");\n@@ -12883,7 +12893,23 @@ static void\n add_comp_dir_attribute (dw_die_ref die)\n {\n   const char *wd = get_src_pwd ();\n-  if (wd != NULL)\n+  char *wd1;\n+\n+  if (wd == NULL)\n+    return;\n+\n+  if (DWARF2_DIR_SHOULD_END_WITH_SEPARATOR)\n+    {\n+      int wdlen;\n+\n+      wdlen = strlen (wd);\n+      wd1 = GGC_NEWVEC (char, wdlen + 2);\n+      strcpy (wd1, wd);\n+      wd1 [wdlen] = DIR_SEPARATOR;\n+      wd1 [wdlen + 1] = 0;\n+      wd = wd1;\n+    }\n+\n     add_AT_string (die, DW_AT_comp_dir, remap_debug_filename (wd));\n }\n "}]}