{"sha": "f994f296e1b3ff382b81754e60f73ca88734342b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk5NGYyOTZlMWIzZmYzODJiODE3NTRlNjBmNzNjYTg4NzM0MzQyYg==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2009-08-27T12:42:18Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2009-08-27T12:42:18Z"}, "message": "expr.c (expand_expr_real_2): New function taking exploded unary or binary expression, split out from ...\n\n        * expr.c (expand_expr_real_2): New function taking exploded\n        unary or binary expression, split out from ...\n        (expand_expr_real_1): ... here.  Move over all unary/binary\n        switch parts to above function, in particular these codes:\n        PAREN_EXPR, NOP_EXPR, CONVERT_EXPR, POINTER_PLUS_EXPR, PLUS_EXPR,\n        MINUS_EXPR, MULT_EXPR, TRUNC_DIV_EXPR, FLOOR_DIV_EXPR, CEIL_DIV_EXPR,\n        ROUND_DIV_EXPR, EXACT_DIV_EXPR, RDIV_EXPR, TRUNC_MOD_EXPR,\n        FLOOR_MOD_EXPR, CEIL_MOD_EXPR, ROUND_MOD_EXPR, FIXED_CONVERT_EXPR,\n        FIX_TRUNC_EXPR, FLOAT_EXPR, NEGATE_EXPR, ABS_EXPR, MAX_EXPR, MIN_EXPR,\n        BIT_NOT_EXPR, TRUTH_AND_EXPR, BIT_AND_EXPR, TRUTH_OR_EXPR,\n        BIT_IOR_EXPR, TRUTH_XOR_EXPR, BIT_XOR_EXPR, LROTATE_EXPR, RROTATE_EXPR,\n        LSHIFT_EXPR, RSHIFT_EXPR, LT_EXPR, LE_EXPR, GT_EXPR, GE_EXPR, EQ_EXPR,\n        NE_EXPR, UNORDERED_EXPR, ORDERED_EXPR, UNLT_EXPR, UNLE_EXPR, UNGT_EXPR,\n        UNGE_EXPR, UNEQ_EXPR, LTGT_EXPR, TRUTH_NOT_EXPR, COMPLEX_EXPR,\n        WIDEN_SUM_EXPR, REDUC_MAX_EXPR, REDUC_MIN_EXPR, REDUC_PLUS_EXPR,\n        VEC_EXTRACT_EVEN_EXPR, VEC_EXTRACT_ODD_EXPR, VEC_INTERLEAVE_HIGH_EXPR,\n        VEC_INTERLEAVE_LOW_EXPR, VEC_LSHIFT_EXPR, VEC_RSHIFT_EXPR,\n        VEC_UNPACK_HI_EXPR, VEC_UNPACK_LO_EXPR, VEC_UNPACK_FLOAT_HI_EXPR,\n        VEC_UNPACK_FLOAT_LO_EXPR, VEC_WIDEN_MULT_HI_EXPR,\n        VEC_WIDEN_MULT_LO_EXPR, VEC_PACK_TRUNC_EXPR, VEC_PACK_SAT_EXPR,\n        VEC_PACK_FIX_TRUNC_EXPR.\n        (<case PAREN_EXPR>): Call set_mem_attributes() with type, not the\n        full expression.\n\nFrom-SVN: r151142", "tree": {"sha": "5a9300b4b8ddc05b1473f2097f2165eadb64a37b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a9300b4b8ddc05b1473f2097f2165eadb64a37b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f994f296e1b3ff382b81754e60f73ca88734342b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f994f296e1b3ff382b81754e60f73ca88734342b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f994f296e1b3ff382b81754e60f73ca88734342b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f994f296e1b3ff382b81754e60f73ca88734342b/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7765789968f0b70449347d233c3d845501dba67b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7765789968f0b70449347d233c3d845501dba67b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7765789968f0b70449347d233c3d845501dba67b"}], "stats": {"total": 3682, "additions": 1895, "deletions": 1787}, "files": [{"sha": "c70a94aece886f5755e46382527e7561227525b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f994f296e1b3ff382b81754e60f73ca88734342b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f994f296e1b3ff382b81754e60f73ca88734342b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f994f296e1b3ff382b81754e60f73ca88734342b", "patch": "@@ -1,3 +1,29 @@\n+2009-08-27  Michael Matz  <matz@suse.de>\n+\n+\t* expr.c (expand_expr_real_2): New function taking exploded\n+\tunary or binary expression, split out from ...\n+\t(expand_expr_real_1): ... here.  Move over all unary/binary\n+\tswitch parts to above function, in particular these codes:\n+\tPAREN_EXPR, NOP_EXPR, CONVERT_EXPR, POINTER_PLUS_EXPR, PLUS_EXPR,\n+\tMINUS_EXPR, MULT_EXPR, TRUNC_DIV_EXPR, FLOOR_DIV_EXPR, CEIL_DIV_EXPR,\n+\tROUND_DIV_EXPR, EXACT_DIV_EXPR, RDIV_EXPR, TRUNC_MOD_EXPR,\n+\tFLOOR_MOD_EXPR, CEIL_MOD_EXPR, ROUND_MOD_EXPR, FIXED_CONVERT_EXPR,\n+\tFIX_TRUNC_EXPR, FLOAT_EXPR, NEGATE_EXPR, ABS_EXPR, MAX_EXPR, MIN_EXPR,\n+\tBIT_NOT_EXPR, TRUTH_AND_EXPR, BIT_AND_EXPR, TRUTH_OR_EXPR,\n+\tBIT_IOR_EXPR, TRUTH_XOR_EXPR, BIT_XOR_EXPR, LROTATE_EXPR, RROTATE_EXPR,\n+\tLSHIFT_EXPR, RSHIFT_EXPR, LT_EXPR, LE_EXPR, GT_EXPR, GE_EXPR, EQ_EXPR,\n+\tNE_EXPR, UNORDERED_EXPR, ORDERED_EXPR, UNLT_EXPR, UNLE_EXPR, UNGT_EXPR,\n+\tUNGE_EXPR, UNEQ_EXPR, LTGT_EXPR, TRUTH_NOT_EXPR, COMPLEX_EXPR,\n+\tWIDEN_SUM_EXPR, REDUC_MAX_EXPR, REDUC_MIN_EXPR, REDUC_PLUS_EXPR,\n+\tVEC_EXTRACT_EVEN_EXPR, VEC_EXTRACT_ODD_EXPR, VEC_INTERLEAVE_HIGH_EXPR,\n+\tVEC_INTERLEAVE_LOW_EXPR, VEC_LSHIFT_EXPR, VEC_RSHIFT_EXPR,\n+\tVEC_UNPACK_HI_EXPR, VEC_UNPACK_LO_EXPR, VEC_UNPACK_FLOAT_HI_EXPR,\n+\tVEC_UNPACK_FLOAT_LO_EXPR, VEC_WIDEN_MULT_HI_EXPR,\n+\tVEC_WIDEN_MULT_LO_EXPR, VEC_PACK_TRUNC_EXPR, VEC_PACK_SAT_EXPR,\n+\tVEC_PACK_FIX_TRUNC_EXPR.\n+\t(<case PAREN_EXPR>): Call set_mem_attributes() with type, not the\n+\tfull expression.\n+\n 2009-08-27  Richard Guenther  <rguenther@suse.de>\n \n \t* gengtype.c (main): Handle uint64_t."}, {"sha": "a906506f07bfb96c1cee25c7c9d700541b5d1b98", "filename": "gcc/expr.c", "status": "modified", "additions": 1869, "deletions": 1787, "changes": 3656, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f994f296e1b3ff382b81754e60f73ca88734342b/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f994f296e1b3ff382b81754e60f73ca88734342b/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f994f296e1b3ff382b81754e60f73ca88734342b"}]}