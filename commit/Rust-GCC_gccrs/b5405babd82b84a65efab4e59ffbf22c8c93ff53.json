{"sha": "b5405babd82b84a65efab4e59ffbf22c8c93ff53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU0MDViYWJkODJiODRhNjVlZmFiNGU1OWZmYmYyMmM4YzkzZmY1Mw==", "commit": {"author": {"name": "Sergei Trofimovich", "email": "siarheit@google.com", "date": "2021-07-09T07:19:37Z"}, "committer": {"name": "Sergei Trofimovich", "email": "siarheit@google.com", "date": "2021-07-09T07:49:44Z"}, "message": "docs: add missing 'see' word\n\ngcc/ChangeLog:\n\n\t* doc/md.texi: Add missing 'see' word.", "tree": {"sha": "5a12b5c33d52a12970cdf2e2794db29e30188964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a12b5c33d52a12970cdf2e2794db29e30188964"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5405babd82b84a65efab4e59ffbf22c8c93ff53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5405babd82b84a65efab4e59ffbf22c8c93ff53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5405babd82b84a65efab4e59ffbf22c8c93ff53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5405babd82b84a65efab4e59ffbf22c8c93ff53/comments", "author": {"login": "trofi", "id": 226650, "node_id": "MDQ6VXNlcjIyNjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trofi", "html_url": "https://github.com/trofi", "followers_url": "https://api.github.com/users/trofi/followers", "following_url": "https://api.github.com/users/trofi/following{/other_user}", "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}", "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trofi/subscriptions", "organizations_url": "https://api.github.com/users/trofi/orgs", "repos_url": "https://api.github.com/users/trofi/repos", "events_url": "https://api.github.com/users/trofi/events{/privacy}", "received_events_url": "https://api.github.com/users/trofi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "trofi", "id": 226650, "node_id": "MDQ6VXNlcjIyNjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trofi", "html_url": "https://github.com/trofi", "followers_url": "https://api.github.com/users/trofi/followers", "following_url": "https://api.github.com/users/trofi/following{/other_user}", "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}", "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trofi/subscriptions", "organizations_url": "https://api.github.com/users/trofi/orgs", "repos_url": "https://api.github.com/users/trofi/repos", "events_url": "https://api.github.com/users/trofi/events{/privacy}", "received_events_url": "https://api.github.com/users/trofi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f2d3ff4e5e2ecd92f78467209ff266a8932acd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2d3ff4e5e2ecd92f78467209ff266a8932acd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2d3ff4e5e2ecd92f78467209ff266a8932acd7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7a4d24ead90e16e0e5f091650de653dec3426221", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5405babd82b84a65efab4e59ffbf22c8c93ff53/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5405babd82b84a65efab4e59ffbf22c8c93ff53/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=b5405babd82b84a65efab4e59ffbf22c8c93ff53", "patch": "@@ -9937,7 +9937,7 @@ Lengths are measured in addressable storage units (bytes).\n Note that it is possible to call functions via the @code{symbol_ref}\n mechanism to compute the length of an insn.  However, if you use this\n mechanism you must provide dummy clauses to express the maximum length\n-without using the function call.  You can an example of this in the\n+without using the function call.  You can see an example of this in the\n @code{pa} machine description for the @code{call_symref} pattern.\n \n The following macros can be used to refine the length computation:"}]}