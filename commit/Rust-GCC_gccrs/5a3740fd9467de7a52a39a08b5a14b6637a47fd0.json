{"sha": "5a3740fd9467de7a52a39a08b5a14b6637a47fd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzNzQwZmQ5NDY3ZGU3YTUyYTM5YTA4YjVhMTRiNjYzN2E0N2ZkMA==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-12T15:54:33Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-12T15:54:33Z"}, "message": "entered into RCS\n\nFrom-SVN: r457", "tree": {"sha": "94f539cd95c7d26d2431e0fe733ed62932ee0852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94f539cd95c7d26d2431e0fe733ed62932ee0852"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a3740fd9467de7a52a39a08b5a14b6637a47fd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3740fd9467de7a52a39a08b5a14b6637a47fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a3740fd9467de7a52a39a08b5a14b6637a47fd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3740fd9467de7a52a39a08b5a14b6637a47fd0/comments", "author": null, "committer": null, "parents": [{"sha": "85ea83e0a0dbc00c051107b3fb91bfcf429e96d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ea83e0a0dbc00c051107b3fb91bfcf429e96d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85ea83e0a0dbc00c051107b3fb91bfcf429e96d8"}], "stats": {"total": 46, "additions": 9, "deletions": 37}, "files": [{"sha": "0c1783aa7604a94638bf439982566ec7bdc0eead", "filename": "gcc/config/m88k/dolph.h", "status": "modified", "additions": 9, "deletions": 37, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3740fd9467de7a52a39a08b5a14b6637a47fd0/gcc%2Fconfig%2Fm88k%2Fdolph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3740fd9467de7a52a39a08b5a14b6637a47fd0/gcc%2Fconfig%2Fm88k%2Fdolph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdolph.h?ref=5a3740fd9467de7a52a39a08b5a14b6637a47fd0", "patch": "@@ -1,5 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n-   Motorola m88100 running the Dolphin Triton88 release 3.5/5.60.\n+   Motorola m88100 running the Dolphin UNIX System V/88 Release 3.2,\n+   Version 3.5/5.60.\n    Copyright (C) 1992 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -18,44 +19,15 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#include \"m88k.h\"\n-\n-/* Default switches */\n-#undef\tTARGET_DEFAULT\n-#define TARGET_DEFAULT\t(MASK_CHECK_ZERO_DIV\t| \\\n-\t\t\t MASK_OCS_DEBUG_INFO\t| \\\n-\t\t\t MASK_OCS_FRAME_POSITION)\n-\n-/* Override svr3.h to link with ?crt0.o instead of ?crt1.o and ?crtn.o.\n-   From arul@sdsu.edu.  */\n-#undef\tSTARTFILE_SPEC\n-#define STARTFILE_SPEC \\\n-   \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\"\n-\n-/* Profiled libraries live in a different directory but keep the same\n-   names other than that.  arul@sdsu.edu says -lg is always needed.  */\n-#undef\tLIB_SPEC\n-#define LIB_SPEC \"%{p:-L/lib/libp}%{pg:%{!p:-L/lib/libp}} -lg -lc\"\n-\n-/* Hot version of the profiler that uses r10 to pass the address of\n-   the counter.  the _gcc_mcount routine knows not to screw with\n-   the parameter registers.\n-\n-   DG/UX does this; i wrote a gnu-c/88k specific version and put it\n-   in libgcc2.c -- RBE; this macro knows about the leading underscore\n-   convention.  */\n-#undef\tFUNCTION_PROFILER\n-#define FUNCTION_PROFILER(FILE, LABELNO) \\\n-  output_function_profiler (FILE, LABELNO, \"_gcc_mcount\", 0)\n-\n-/* Various other changes that we want to have in place without\n-   too many changes to the m88k.h file.  */\n-#undef\tUSE_LIBG\n-#define\tUSE_LIBG\n+#include \"m88kv3.h\"\n \n /* Don't output structure tag names when it causes a forward reference.\n-   Symptom?  */\n+   Symptom:\n+   Error messages like\n+   as: \"/usr/tmp/cca22733.s\": cannot reduce symbol table, unused symbols remain\n+   when compiling some programs.\n+   example program (C++): struct bad { bad(); }; bad::bad() {}  */\n #undef SDB_ALLOW_FORWARD_REFERENCES\n \n-/* Use T_ARG as T_VOID.  Symptom?  */\n+/* Use T_ARG as T_VOID.  T_VOID is not defined in <syms.h> as it should be.  */\n #define T_VOID T_ARG"}]}