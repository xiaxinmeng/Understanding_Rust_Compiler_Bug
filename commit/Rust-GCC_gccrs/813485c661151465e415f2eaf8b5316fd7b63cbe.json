{"sha": "813485c661151465e415f2eaf8b5316fd7b63cbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEzNDg1YzY2MTE1MTQ2NWU0MTVmMmVhZjhiNTMxNmZkN2I2M2NiZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-08-01T13:36:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-08-01T13:36:50Z"}, "message": "re PR tree-optimization/81181 (ICE in compute_antic, at tree-ssa-pre.c:2410)\n\n2017-08-01  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/81181\n\t* tree-ssa-pre.c (compute_antic_aux): Defer clean() to ...\n\t(compute_antic): ... end of iteration here.\n\n\t* gcc.dg/torture/pr81181.c: New testcase.\n\nFrom-SVN: r250777", "tree": {"sha": "8d9f46ae668919828ec4ce3acf9fd6c67419891d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d9f46ae668919828ec4ce3acf9fd6c67419891d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/813485c661151465e415f2eaf8b5316fd7b63cbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813485c661151465e415f2eaf8b5316fd7b63cbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813485c661151465e415f2eaf8b5316fd7b63cbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813485c661151465e415f2eaf8b5316fd7b63cbe/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4df612fa6076bd12d105a8b1d4cdbeb26e646ec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "83f9b49ba2c37cd4d35bcf5f6b68f2e491ff9ca6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813485c661151465e415f2eaf8b5316fd7b63cbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813485c661151465e415f2eaf8b5316fd7b63cbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=813485c661151465e415f2eaf8b5316fd7b63cbe", "patch": "@@ -1,3 +1,9 @@\n+2017-08-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81181\n+\t* tree-ssa-pre.c (compute_antic_aux): Defer clean() to ...\n+\t(compute_antic): ... end of iteration here.\n+\n 2017-08-01  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* common.opt (ftree-vectorize): No longer set flag_tree_vectorize."}, {"sha": "768321d4215c4e1ccac497ab73e8d08259003b90", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813485c661151465e415f2eaf8b5316fd7b63cbe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813485c661151465e415f2eaf8b5316fd7b63cbe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=813485c661151465e415f2eaf8b5316fd7b63cbe", "patch": "@@ -1,3 +1,8 @@\n+2017-08-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81181\n+\t* gcc.dg/torture/pr81181.c: New testcase.\n+\n 2017-08-01  Martin Liska  <mliska@suse.cz>\n \n \tPR middle-end/70140"}, {"sha": "e7216d7bf3e022f18b3f12ea35fcd0be2c8119d5", "filename": "gcc/testsuite/gcc.dg/torture/pr81181.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813485c661151465e415f2eaf8b5316fd7b63cbe/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr81181.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813485c661151465e415f2eaf8b5316fd7b63cbe/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr81181.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr81181.c?ref=813485c661151465e415f2eaf8b5316fd7b63cbe", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+\n+unsigned int lh;\n+\n+void\n+ny (int t3, int ys, int rt, int p8)\n+{\n+  if (lh != 0)\n+    {\n+      if (0)\n+\t{\n+oo:\n+\t  do\n+\t    {\n+\t      rt = (p8 != 0) ? t3 : 0;\n+\t      rt = (rt != 0 || lh != (unsigned int)ys);\n+\t      rt += lh + ys;\n+\t    }\n+\t  while (t3 <= 0);\n+\n+\t  lh = ys;\n+\t  ys = rt;\n+\t}\n+\n+      if (lh != 0)\n+\tp8 = lh;\n+    }\n+\n+  goto oo;\n+}"}, {"sha": "afe898bea9dbc5353499827a1624bd6a47c73f3e", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813485c661151465e415f2eaf8b5316fd7b63cbe/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813485c661151465e415f2eaf8b5316fd7b63cbe/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=813485c661151465e415f2eaf8b5316fd7b63cbe", "patch": "@@ -2120,7 +2120,8 @@ static sbitmap has_abnormal_preds;\n      ANTIC_OUT[BLOCK] = phi_translate (ANTIC_IN[succ(BLOCK)])\n \n    ANTIC_IN[BLOCK] = clean(ANTIC_OUT[BLOCK] U EXP_GEN[BLOCK] - TMP_GEN[BLOCK])\n-*/\n+\n+   Note that clean() is deferred until after the iteration.  */\n \n static bool\n compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n@@ -2220,7 +2221,8 @@ compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n     bitmap_value_insert_into_set (ANTIC_IN (block),\n \t\t\t\t  expression_for_id (bii));\n \n-  clean (ANTIC_IN (block));\n+  /* clean (ANTIC_IN (block)) is defered to after the iteration converged\n+     because it can cause non-convergence, see for example PR81181.  */\n \n   if (!was_visited || !bitmap_set_equal (old, ANTIC_IN (block)))\n     changed = true;\n@@ -2456,6 +2458,12 @@ compute_antic (void)\n       gcc_checking_assert (num_iterations < 500);\n     }\n \n+  /* We have to clean after the dataflow problem converged as cleaning\n+     can cause non-convergence because it is based on expressions\n+     rather than values.  */\n+  FOR_EACH_BB_FN (block, cfun)\n+    clean (ANTIC_IN (block));\n+\n   statistics_histogram_event (cfun, \"compute_antic iterations\",\n \t\t\t      num_iterations);\n "}]}