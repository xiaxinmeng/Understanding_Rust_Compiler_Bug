{"sha": "09d69286160a4027dc5c8fc27bff0113f698b25f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlkNjkyODYxNjBhNDAyN2RjNWM4ZmMyN2JmZjAxMTNmNjk4YjI1Zg==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2018-06-12T13:28:59Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2018-06-12T13:28:59Z"}, "message": "[PATCH] [ARC][QuarkSE] Update\n\nQuarkSE has lp_count width set to 16 bits. Update the compiler to\nconsider it.\n\ngcc/\n2018-06-12  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc-arch.h (arc_extras): New enum.\n\t(arc_cpu_t):Add field extra.\n\t(arc_cpu_types): Consider the extras.\n\t* config/arc/arc-cpus.def: Add extras info.\n\t* config/arc/arc-opts.h (processor_type): Consider extra field.\n\t* config/arc/arc.c (arc_override_options): Handle extra field.\n\nFrom-SVN: r261496", "tree": {"sha": "224952a1a28f7bc8387e5430c05effa463f1d1a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/224952a1a28f7bc8387e5430c05effa463f1d1a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09d69286160a4027dc5c8fc27bff0113f698b25f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d69286160a4027dc5c8fc27bff0113f698b25f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09d69286160a4027dc5c8fc27bff0113f698b25f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d69286160a4027dc5c8fc27bff0113f698b25f/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d65485c58fdd9ab6ca2cb6bc200bb71632dbbd9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d65485c58fdd9ab6ca2cb6bc200bb71632dbbd9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d65485c58fdd9ab6ca2cb6bc200bb71632dbbd9c"}], "stats": {"total": 98, "additions": 67, "deletions": 31}, "files": [{"sha": "b4da50f338d4f8d183e1213bf9293b137a3a968c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09d69286160a4027dc5c8fc27bff0113f698b25f", "patch": "@@ -1,3 +1,12 @@\n+2018-06-12  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc-arch.h (arc_extras): New enum.\n+\t(arc_cpu_t):Add field extra.\n+\t(arc_cpu_types): Consider the extras.\n+\t* config/arc/arc-cpus.def: Add extras info.\n+\t* config/arc/arc-opts.h (processor_type): Consider extra field.\n+\t* config/arc/arc.c (arc_override_options): Handle extra field.\n+\n 2018-06-12  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc-arch.h: Update ARC_OPTX macro."}, {"sha": "85475f42d2641ba2b1ffaede092cc7ee68abb963", "filename": "gcc/config/arc/arc-arch.h", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2Fconfig%2Farc%2Farc-arch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2Fconfig%2Farc%2Farc-arch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-arch.h?ref=09d69286160a4027dc5c8fc27bff0113f698b25f", "patch": "@@ -76,6 +76,17 @@ enum arc_tune_attr\n     ARC_TUNE_CORE_3\n   };\n \n+/* Extra options for a processor template to hold any CPU specific\n+   information which is not cover in arc-arches.def.  Such example is\n+   the width of LP_COUNT register, or the number of register\n+   banks.  */\n+\n+enum arc_extras\n+{\n+  HAS_NONE,\n+  HAS_LPCOUNT_16\n+};\n+\n /* CPU specific properties.  */\n \n typedef struct\n@@ -92,6 +103,9 @@ typedef struct\n   /* Specific flags.  */\n   const unsigned long long flags;\n \n+  /* Extra value.  */\n+  enum arc_extras extra;\n+\n   /* Tune value.  */\n   enum arc_tune_attr tune;\n \n@@ -109,12 +123,12 @@ const arc_arch_t arc_arch_types[] =\n \n const arc_cpu_t arc_cpu_types[] =\n   {\n-    {\"none\", NULL, PROCESSOR_NONE, 0, ARC_TUNE_NONE},\n-#define ARC_CPU(NAME, ARCH, FLAGS, TUNE)\t\\\n-    {#NAME, &arc_arch_types [BASE_ARCH_##ARCH], PROCESSOR_##NAME, FLAGS, ARC_TUNE_##TUNE },\n+    {\"none\", NULL, PROCESSOR_NONE, 0, HAS_NONE, ARC_TUNE_NONE},\n+#define ARC_CPU(NAME, ARCH, FLAGS, EXTRA, TUNE)\t\t\t\t\\\n+    {#NAME, &arc_arch_types [BASE_ARCH_##ARCH], PROCESSOR_##NAME, FLAGS, HAS_##EXTRA, ARC_TUNE_##TUNE },\n #include \"arc-cpus.def\"\n #undef ARC_CPU\n-    {NULL, NULL, PROCESSOR_NONE, 0, ARC_TUNE_NONE}\n+    {NULL, NULL, PROCESSOR_NONE, 0, HAS_NONE, ARC_TUNE_NONE}\n   };\n \n /* Currently selected cpu type.  */"}, {"sha": "74378888a687137e1c971ed3512d2feea3d979a3", "filename": "gcc/config/arc/arc-cpus.def", "status": "modified", "additions": 29, "deletions": 26, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2Fconfig%2Farc%2Farc-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2Fconfig%2Farc%2Farc-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-cpus.def?ref=09d69286160a4027dc5c8fc27bff0113f698b25f", "patch": "@@ -43,34 +43,37 @@\n \t  as defined in arc-options.def file, and allowed by arc-arches.def\n \t  file.  The specific hardware flags are enumerated without using\n \t  spaces between the '|' character and consequtive flags.\n+   EXTRA  Extra hardware flags, different than the ones in\n+\t  arc-arches.def.  Here we can specify the width of lp_count,\n+\t  for example.\n    TUNE\t  Tune value for the given configuration, otherwise NONE.  */\n \n-ARC_CPU (em,\t    em, 0, NONE)\n-ARC_CPU (em_mini,   em, FL_RF16, NONE)\n-ARC_CPU (arcem,\t    em, FL_MPYOPT_2|FL_CD|FL_BS, NONE)\n-ARC_CPU (em4,\t    em, FL_CD, NONE)\n-ARC_CPU (em4_dmips, em, FL_MPYOPT_2|FL_CD|FL_DIVREM|FL_NORM|FL_SWAP|FL_BS, NONE)\n-ARC_CPU (em4_fpus,  em, FL_MPYOPT_2|FL_CD|FL_DIVREM|FL_NORM|FL_SWAP|FL_BS|FL_FPU_FPUS, NONE)\n-ARC_CPU (em4_fpuda, em, FL_MPYOPT_2|FL_CD|FL_DIVREM|FL_NORM|FL_SWAP|FL_BS|FL_FPU_FPUDA, NONE)\n-ARC_CPU (quarkse_em, em, FL_MPYOPT_3|FL_CD|FL_DIVREM|FL_NORM|FL_SWAP|FL_BS|FL_FPX_QUARK|FL_SPFP|FL_DPFP, NONE)\n-\n-ARC_CPU (hs,\t     hs, 0, NONE)\n-ARC_CPU (archs,\t     hs, FL_MPYOPT_2|FL_DIVREM|FL_LL64, NONE)\n-ARC_CPU (hs34,\t     hs, FL_MPYOPT_2, NONE)\n-ARC_CPU (hs38,\t     hs, FL_MPYOPT_9|FL_DIVREM|FL_LL64, NONE)\n-ARC_CPU (hs38_linux, hs, FL_MPYOPT_9|FL_DIVREM|FL_LL64|FL_FPU_FPUD_ALL, NONE)\n-\n-ARC_CPU (arc600,\t  6xx, FL_BS, ARC600)\n-ARC_CPU (arc600_norm,\t  6xx, FL_BS|FL_NORM, ARC600)\n-ARC_CPU (arc600_mul64,\t  6xx, FL_BS|FL_NORM|FL_MUL64, ARC600)\n-ARC_CPU (arc600_mul32x16, 6xx, FL_BS|FL_NORM|FL_MUL32x16, ARC600)\n-ARC_CPU (arc601,\t  6xx, 0, ARC600)\n-ARC_CPU (arc601_norm,\t  6xx, FL_NORM, ARC600)\n-ARC_CPU (arc601_mul64,\t  6xx, FL_NORM|FL_MUL64, ARC600)\n-ARC_CPU (arc601_mul32x16, 6xx, FL_NORM|FL_MUL32x16, ARC600)\n-\n-ARC_CPU (arc700, 700, 0, ARC700_4_2_STD)\n-ARC_CPU (nps400, 700, 0, ARC700_4_2_STD)\n+ARC_CPU (em,\t    em, 0, NONE, NONE)\n+ARC_CPU (em_mini,   em, FL_RF16, NONE, NONE)\n+ARC_CPU (arcem,\t    em, FL_MPYOPT_2|FL_CD|FL_BS, NONE, NONE)\n+ARC_CPU (em4,\t    em, FL_CD, NONE, NONE)\n+ARC_CPU (em4_dmips, em, FL_MPYOPT_2|FL_CD|FL_DIVREM|FL_NORM|FL_SWAP|FL_BS, NONE, NONE)\n+ARC_CPU (em4_fpus,  em, FL_MPYOPT_2|FL_CD|FL_DIVREM|FL_NORM|FL_SWAP|FL_BS|FL_FPU_FPUS, NONE, NONE)\n+ARC_CPU (em4_fpuda, em, FL_MPYOPT_2|FL_CD|FL_DIVREM|FL_NORM|FL_SWAP|FL_BS|FL_FPU_FPUDA, NONE, NONE)\n+ARC_CPU (quarkse_em, em, FL_MPYOPT_3|FL_CD|FL_DIVREM|FL_NORM|FL_SWAP|FL_BS|FL_FPX_QUARK|FL_SPFP|FL_DPFP, LPCOUNT_16, NONE)\n+\n+ARC_CPU (hs,\t     hs, 0, NONE, NONE)\n+ARC_CPU (archs,\t     hs, FL_MPYOPT_2|FL_DIVREM|FL_LL64, NONE, NONE)\n+ARC_CPU (hs34,\t     hs, FL_MPYOPT_2, NONE, NONE)\n+ARC_CPU (hs38,\t     hs, FL_MPYOPT_9|FL_DIVREM|FL_LL64, NONE, NONE)\n+ARC_CPU (hs38_linux, hs, FL_MPYOPT_9|FL_DIVREM|FL_LL64|FL_FPU_FPUD_ALL, NONE, NONE)\n+\n+ARC_CPU (arc600,\t  6xx, FL_BS, NONE, ARC600)\n+ARC_CPU (arc600_norm,\t  6xx, FL_BS|FL_NORM, NONE, ARC600)\n+ARC_CPU (arc600_mul64,\t  6xx, FL_BS|FL_NORM|FL_MUL64, NONE, ARC600)\n+ARC_CPU (arc600_mul32x16, 6xx, FL_BS|FL_NORM|FL_MUL32x16, NONE, ARC600)\n+ARC_CPU (arc601,\t  6xx, 0, NONE, ARC600)\n+ARC_CPU (arc601_norm,\t  6xx, FL_NORM, NONE, ARC600)\n+ARC_CPU (arc601_mul64,\t  6xx, FL_NORM|FL_MUL64, NONE, ARC600)\n+ARC_CPU (arc601_mul32x16, 6xx, FL_NORM|FL_MUL32x16, NONE, ARC600)\n+\n+ARC_CPU (arc700, 700, 0, NONE, ARC700_4_2_STD)\n+ARC_CPU (nps400, 700, 0, NONE, ARC700_4_2_STD)\n \n /* Local Variables: */\n /* mode: c */"}, {"sha": "3a7b7042de01f8f53bbb4bc97ff2b3d5610a2906", "filename": "gcc/config/arc/arc-opts.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2Fconfig%2Farc%2Farc-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2Fconfig%2Farc%2Farc-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-opts.h?ref=09d69286160a4027dc5c8fc27bff0113f698b25f", "patch": "@@ -24,7 +24,7 @@\n enum processor_type\n {\n   PROCESSOR_NONE = 0,\n-#define ARC_CPU(NAME, ARCH, FLAGS, TUNE)  PROCESSOR_##NAME,\n+#define ARC_CPU(NAME, ARCH, FLAGS, EXTRA, TUNE)  PROCESSOR_##NAME,\n #include \"arc-cpus.def\"\n #undef ARC_CPU\n   PROCESSOR_generic"}, {"sha": "6b90dd5896dbd39991191d11315ff2a29be2f2bc", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d69286160a4027dc5c8fc27bff0113f698b25f/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=09d69286160a4027dc5c8fc27bff0113f698b25f", "patch": "@@ -1254,6 +1254,16 @@ arc_override_options (void)\n #undef ARC_OPTX\n #undef ARC_OPT\n \n+  /* Set extras.  */\n+  switch (arc_selected_cpu->extra)\n+    {\n+    case HAS_LPCOUNT_16:\n+      arc_lpcwidth = 16;\n+      break;\n+    default:\n+      break;\n+    }\n+\n   /* Set Tune option.  */\n   if (arc_tune == ARC_TUNE_NONE)\n     arc_tune = (enum arc_tune_attr) arc_selected_cpu->tune;"}]}