{"sha": "bb295963d4099db5c2822140430e950ac7f78894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIyOTU5NjNkNDA5OWRiNWMyODIyMTQwNDMwZTk1MGFjN2Y3ODg5NA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-01-23T02:01:10Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-01-23T02:01:10Z"}, "message": "re PR fortran/61933 (Inquire on internal units)\n\n2015-01-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/61933\n\t* io/inquire.c (inquire_via_unit): Set existing to true for\n\tany negative unit that is currently connected and any positive\n\tunits within range of KIND=4 value.  The unit value for any out\n\tof range case that may occur if the user is using a KIND=8 will\n\thave been set to -2 which is reserved and can never be opened,\n\tand therefore the unit does not exist.\n\nFrom-SVN: r220024", "tree": {"sha": "256f68a04ba24948b248589c8686f27ea8f05fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/256f68a04ba24948b248589c8686f27ea8f05fd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb295963d4099db5c2822140430e950ac7f78894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb295963d4099db5c2822140430e950ac7f78894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb295963d4099db5c2822140430e950ac7f78894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb295963d4099db5c2822140430e950ac7f78894/comments", "author": null, "committer": null, "parents": [{"sha": "e344505cec510fe08af6c3263fc10619295ccd45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e344505cec510fe08af6c3263fc10619295ccd45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e344505cec510fe08af6c3263fc10619295ccd45"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "04f85c7c46cdbd275ee8e5d4abfaef9b644c57dd", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb295963d4099db5c2822140430e950ac7f78894/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb295963d4099db5c2822140430e950ac7f78894/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=bb295963d4099db5c2822140430e950ac7f78894", "patch": "@@ -1,3 +1,13 @@\n+2015-01-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/61933\n+\t* io/inquire.c (inquire_via_unit): Set existing to true for\n+\tany negative unit that is currently connected and any positive\n+\tunits within range of KIND=4 value.  The unit value for any out\n+\tof range case that may occur if the user is using a KIND=8 will\n+\thave been set to -2 which is reserved and can never be opened,\n+\tand therefore the unit does not exist.\n+\n 2015-01-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/61933"}, {"sha": "a5f362e0f20f7af47dba0ef1a52fed157fa6b1bb", "filename": "libgfortran/io/inquire.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb295963d4099db5c2822140430e950ac7f78894/libgfortran%2Fio%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb295963d4099db5c2822140430e950ac7f78894/libgfortran%2Fio%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Finquire.c?ref=bb295963d4099db5c2822140430e950ac7f78894", "patch": "@@ -41,11 +41,11 @@ inquire_via_unit (st_parameter_inquire *iqp, gfc_unit * u)\n   const char *p;\n   GFC_INTEGER_4 cf = iqp->common.flags;\n \n-  if (iqp->common.unit == -1)\n+  if (iqp->common.unit == GFC_INTERNAL_UNIT)\n     generate_error (&iqp->common, LIBERROR_INQUIRE_INTERNAL_UNIT, NULL);\n \n   if ((cf & IOPARM_INQUIRE_HAS_EXIST) != 0)\n-    *iqp->exist = (u != NULL);\n+    *iqp->exist = (u != NULL) || (iqp->common.unit >= 0);\n \n   if ((cf & IOPARM_INQUIRE_HAS_OPENED) != 0)\n     *iqp->opened = (u != NULL);"}]}