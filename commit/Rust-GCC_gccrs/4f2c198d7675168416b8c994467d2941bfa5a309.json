{"sha": "4f2c198d7675168416b8c994467d2941bfa5a309", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYyYzE5OGQ3Njc1MTY4NDE2YjhjOTk0NDY3ZDI5NDFiZmE1YTMwOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-06-13T07:07:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-13T07:07:08Z"}, "message": "re PR sanitizer/81065 (UBSAN: false positive as a result of distribution involving different types)\n\n2017-06-13  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/81065\n\t* fold-const.c (extract_muldiv_1): Remove bogus distribution\n\tcase of C * (x * C2 + C3).\n\t(fold_addr_of_array_ref_difference): Properly fold index difference.\n\n\t* c-c++-common/ubsan/pr81065.c: New testcase.\n\nFrom-SVN: r249144", "tree": {"sha": "b55bb2ec58b8a6522fbeaa63b5db22e702c496a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b55bb2ec58b8a6522fbeaa63b5db22e702c496a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f2c198d7675168416b8c994467d2941bfa5a309", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2c198d7675168416b8c994467d2941bfa5a309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f2c198d7675168416b8c994467d2941bfa5a309", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2c198d7675168416b8c994467d2941bfa5a309/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd34e54306bfb2ef53fbb2405de435e375337ef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd34e54306bfb2ef53fbb2405de435e375337ef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd34e54306bfb2ef53fbb2405de435e375337ef9"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "f0b9f6b8f34e3e5c633dc9095f65d4c1e041f8b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f2c198d7675168416b8c994467d2941bfa5a309/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f2c198d7675168416b8c994467d2941bfa5a309/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f2c198d7675168416b8c994467d2941bfa5a309", "patch": "@@ -1,3 +1,10 @@\n+2017-06-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/81065\n+\t* fold-const.c (extract_muldiv_1): Remove bogus distribution\n+\tcase of C * (x * C2 + C3).\n+\t(fold_addr_of_array_ref_difference): Properly fold index difference.\n+\n 2017-06-12  David S. Miller  <davem@davemloft.net>\n \n \tPR target/80968"}, {"sha": "a6dd274f3d2c9be37fee934763dd016fb2b91306", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f2c198d7675168416b8c994467d2941bfa5a309/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f2c198d7675168416b8c994467d2941bfa5a309/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=4f2c198d7675168416b8c994467d2941bfa5a309", "patch": "@@ -6241,11 +6241,6 @@ extract_muldiv_1 (tree t, tree c, enum tree_code code, tree wide_type,\n       if (TYPE_UNSIGNED (ctype) && ctype != type)\n \tbreak;\n \n-      /* If we were able to eliminate our operation from the first side,\n-\t apply our operation to the second side and reform the PLUS.  */\n-      if (t1 != 0 && (TREE_CODE (t1) != code || code == MULT_EXPR))\n-\treturn fold_build2 (tcode, ctype, fold_convert (ctype, t1), op1);\n-\n       /* The last case is if we are a multiply.  In that case, we can\n \t apply the distributive law to commute the multiply and addition\n \t if the multiplication of the constants doesn't overflow\n@@ -8908,7 +8903,7 @@ fold_addr_of_array_ref_difference (location_t loc, tree type,\n       tree op0 = fold_convert_loc (loc, type, TREE_OPERAND (aref0, 1));\n       tree op1 = fold_convert_loc (loc, type, TREE_OPERAND (aref1, 1));\n       tree esz = fold_convert_loc (loc, type, array_ref_element_size (aref0));\n-      tree diff = build2 (MINUS_EXPR, type, op0, op1);\n+      tree diff = fold_build2_loc (loc, MINUS_EXPR, type, op0, op1);\n       return fold_build2_loc (loc, PLUS_EXPR, type,\n \t\t\t      base_offset,\n \t\t\t      fold_build2_loc (loc, MULT_EXPR, type,"}, {"sha": "5e9d5ffaef220559896a206d15b0f9fae04e2865", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f2c198d7675168416b8c994467d2941bfa5a309/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f2c198d7675168416b8c994467d2941bfa5a309/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f2c198d7675168416b8c994467d2941bfa5a309", "patch": "@@ -1,3 +1,8 @@\n+2017-06-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/81065\n+\t* c-c++-common/ubsan/pr81065.c: New testcase.\n+\n 2017-06-12  Ian Lance Taylor  <iant@golang.org>\n \n \t* gcc.dg/tree-prof/split-1.c: Require split_stack, don't require"}, {"sha": "1b342273f95b7db3233b8479548b3225bafd89c2", "filename": "gcc/testsuite/c-c++-common/ubsan/pr81065.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f2c198d7675168416b8c994467d2941bfa5a309/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr81065.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f2c198d7675168416b8c994467d2941bfa5a309/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr81065.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr81065.c?ref=4f2c198d7675168416b8c994467d2941bfa5a309", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=undefined -fsanitize-undefined-trap-on-error\" } */\n+\n+unsigned char x = 154;\n+int foo() {\n+  // 8575 * (254408 - 9057) = 8575 * 245351 = 2103884825 = 0x7d66bc19\n+  return 8575 * (1652 * x - 9057);\n+}\n+\n+int main() {\n+  foo();\n+  return 0;\n+}"}]}