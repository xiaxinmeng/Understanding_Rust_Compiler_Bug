{"sha": "24a40b356f07a2a4d50d4c36e5bbb86ef06d3925", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRhNDBiMzU2ZjA3YTJhNGQ1MGQ0YzM2ZTViYmI4NmVmMDZkMzkyNQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2009-04-22T10:53:53Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2009-04-22T10:53:53Z"}, "message": "gthr-vxworks.h (struct __gthread_once_t): Add alignment and padding for PPC.\n\n\t* gthr-vxworks.h (struct __gthread_once_t): Add alignment and\n\tpadding for PPC.\n\t(__GTHREAD_ONCE_INIT): Adjust ppc initializer.\n\t* config/vxlib.c (__gthread_once): Add race guard for PPC.\n\nFrom-SVN: r146566", "tree": {"sha": "e11dcde40e7283e50e32e96ee6676f534174b607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e11dcde40e7283e50e32e96ee6676f534174b607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925/comments", "author": null, "committer": null, "parents": [{"sha": "aa9037807b6e7a681a4229ab2c34539323d3f8b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9037807b6e7a681a4229ab2c34539323d3f8b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9037807b6e7a681a4229ab2c34539323d3f8b3"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "056f732dd5867b6f49143b861db9a2bfaa08a554", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24a40b356f07a2a4d50d4c36e5bbb86ef06d3925", "patch": "@@ -1,3 +1,10 @@\n+2009-04-22  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* gthr-vxworks.h (struct __gthread_once_t): Add alignment and\n+\tpadding for PPC.\n+\t(__GTHREAD_ONCE_INIT): Adjust ppc initializer.\n+\t* config/vxlib.c (__gthread_once): Add race guard for PPC.\n+\n 2009-04-22  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* config/sh/sh.c (shift_insns_rtx, shiftcosts, gen_shifty_op,"}, {"sha": "0ff996cfced8a3d73bda280d7d99279288c7498e", "filename": "gcc/config/vxlib.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925/gcc%2Fconfig%2Fvxlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925/gcc%2Fconfig%2Fvxlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxlib.c?ref=24a40b356f07a2a4d50d4c36e5bbb86ef06d3925", "patch": "@@ -65,7 +65,15 @@ __gthread_once (__gthread_once_t *guard, void (*func)(void))\n   __gthread_lock_library ();\n #else\n   while (!vxTas ((void *)&guard->busy))\n-    taskDelay (1);\n+    {\n+#ifdef __PPC__\n+      /* This can happen on powerpc, which is using all 32 bits\n+\t of the gthread_once_t structure.  */\n+      if (guard->done)\n+\treturn;\n+#endif\n+      taskDelay (1);\n+    }\n #endif\n \n   /* Only one thread at a time gets here.  Check ->done again, then"}, {"sha": "dee15731f0ac0a951712b8a2fcc9099b1c54e716", "filename": "gcc/gthr-vxworks.h", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925/gcc%2Fgthr-vxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24a40b356f07a2a4d50d4c36e5bbb86ef06d3925/gcc%2Fgthr-vxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-vxworks.h?ref=24a40b356f07a2a4d50d4c36e5bbb86ef06d3925", "patch": "@@ -115,17 +115,32 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex)\n \n typedef struct\n {\n-#ifndef __RTP__\n+#if !defined(__RTP__)\n+#if defined(__PPC__)\n+  __attribute ((aligned (__alignof (unsigned))))\n+#endif\n   volatile unsigned char busy;\n #endif\n   volatile unsigned char done;\n+#if !defined(__RTP__) && defined(__PPC__)\n+  /* PPC's test-and-set implementation requires a 4 byte aligned\n+     object, of which it only sets the first byte.  We use padding\n+     here, in order to maintain some amount of backwards\n+     compatibility.  Without this padding, gthread_once objects worked\n+     by accident because they happen to be static objects and the ppc\n+     port automatically increased their alignment to 4 bytes.  */\n+  unsigned char pad1;\n+  unsigned char pad2;\n+#endif\n }\n __gthread_once_t;\n \n-#ifndef __RTP__\n-# define __GTHREAD_ONCE_INIT { 0, 0 }\n-#else\n+#if defined (__RTP__)\n # define __GTHREAD_ONCE_INIT { 0 }\n+#elif defined (__PPC__) \n+# define __GTHREAD_ONCE_INIT { 0, 0, 0, 0 }\n+#else\n+# define __GTHREAD_ONCE_INIT { 0, 0 }\n #endif\n \n extern int __gthread_once (__gthread_once_t *__once, void (*__func)(void));"}]}