{"sha": "6a1e04b2f0c28d46e193d30aac00a32ba850bf0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmExZTA0YjJmMGMyOGQ0NmUxOTNkMzBhYWMwMGEzMmJhODUwYmYwYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-12-07T09:40:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-12-07T09:40:23Z"}, "message": "Fix assembler name collision\n\nGigi uses a dummy global variable to register global types for debug\ninfo purposes and its name can now collide with user variables.\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/trans.c (lvalue_for_aggregate_p): Also return true\n\tfor return statements.\n\t* gcc-interface/utils.c (gnat_write_global_declarations): Use the\n\tmaximum index for the dummy object to avoid a name collision.", "tree": {"sha": "8338a2aa740d9909f6dd700738458c64db049672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8338a2aa740d9909f6dd700738458c64db049672"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a1e04b2f0c28d46e193d30aac00a32ba850bf0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a1e04b2f0c28d46e193d30aac00a32ba850bf0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a1e04b2f0c28d46e193d30aac00a32ba850bf0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a1e04b2f0c28d46e193d30aac00a32ba850bf0a/comments", "author": null, "committer": null, "parents": [{"sha": "6fb8da750ff53faec52aaa6cda31fbc510219926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fb8da750ff53faec52aaa6cda31fbc510219926", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fb8da750ff53faec52aaa6cda31fbc510219926"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "bf8289ba32364f92d8b36e8ee3b2914aa275c268", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1e04b2f0c28d46e193d30aac00a32ba850bf0a/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1e04b2f0c28d46e193d30aac00a32ba850bf0a/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=6a1e04b2f0c28d46e193d30aac00a32ba850bf0a", "patch": "@@ -970,6 +970,10 @@ lvalue_for_aggregate_p (Node_Id gnat_node, tree gnu_type)\n       /* Even if the parameter is by copy, prefer an lvalue.  */\n       return true;\n \n+    case N_Simple_Return_Statement:\n+      /* Likewise for a return value.  */\n+      return true;\n+\n     case N_Indexed_Component:\n     case N_Selected_Component:\n       /* If an elementary component is used, take it from the constant.  */"}, {"sha": "494f60e0879325b457285c8f55085c29041e7fb8", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1e04b2f0c28d46e193d30aac00a32ba850bf0a/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1e04b2f0c28d46e193d30aac00a32ba850bf0a/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=6a1e04b2f0c28d46e193d30aac00a32ba850bf0a", "patch": "@@ -5903,7 +5903,7 @@ gnat_write_global_declarations (void)\n       struct varpool_node *node;\n       char *label;\n \n-      ASM_FORMAT_PRIVATE_NAME (label, first_global_object_name, 0);\n+      ASM_FORMAT_PRIVATE_NAME (label, first_global_object_name, ULONG_MAX);\n       dummy_global\n \t= build_decl (BUILTINS_LOCATION, VAR_DECL, get_identifier (label),\n \t\t      void_type_node);"}]}