{"sha": "b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjZTNlYjI0YTY1YWM4M2YxZWQ1ZGRkYWY5ZTFmMDRhZmFmZDQxZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-09-06T08:53:45Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-09-06T08:53:45Z"}, "message": "class.c (resolve_address_of_overloaded_function): Add explanation message.\n\n\t* class.c (resolve_address_of_overloaded_function): Add\n\texplanation message.\n\t* decl.c (define_case_label): Reformat explanation.\n\t* decl2.c (finish_static_data_member_decl): Likewise.\n\t(grokfield): Likewise.\n\t* friend.c (do_friend): Likewise.\n\nFrom-SVN: r36188", "tree": {"sha": "c1e9b025eaee66a870950a4c257ec16d85a3ec4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1e9b025eaee66a870950a4c257ec16d85a3ec4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/comments", "author": null, "committer": null, "parents": [{"sha": "2a4bbffab1e0bf165757e2897151c08275bfadd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4bbffab1e0bf165757e2897151c08275bfadd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a4bbffab1e0bf165757e2897151c08275bfadd4"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "744511a0982d22357191b2d58dfed61e0352cc4e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "patch": "@@ -1,3 +1,12 @@\n+2000-09-06  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (resolve_address_of_overloaded_function): Add\n+\texplanation message.\n+\t* decl.c (define_case_label): Reformat explanation.\n+\t* decl2.c (finish_static_data_member_decl): Likewise.\n+\t(grokfield): Likewise.\n+\t* friend.c (do_friend): Likewise.\n+\n 2000-09-05  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* tree.c (walk_tree): Expose tail recursion."}, {"sha": "de692dbda681d19d776b0466a74f22e74ee0b54c", "filename": "gcc/cp/class.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "patch": "@@ -5965,13 +5965,20 @@ resolve_address_of_overloaded_function (target_type,\n   /* Good, exactly one match.  Now, convert it to the correct type.  */\n   fn = TREE_PURPOSE (matches);\n \n-  if (TREE_CODE (TREE_TYPE (fn)) == METHOD_TYPE\n+  if (DECL_NONSTATIC_MEMBER_FUNCTION_P (fn)\n       && !ptrmem && !flag_ms_extensions)\n     {\n+      static int explained;\n+      \n       if (!complain)\n         return error_mark_node;\n \n       cp_pedwarn (\"assuming pointer to member `%D'\", fn);\n+      if (!explained)\n+        {\n+          cp_pedwarn (\"(a pointer to member can only be formed with `&%E')\", fn);\n+          explained = 1;\n+        }\n     }\n   mark_used (fn);\n "}, {"sha": "8537981c5813dc53cb139804730eca7e0e8f1d73", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "patch": "@@ -5227,8 +5227,7 @@ define_case_label ()\n       warning (\"where case label appears here\");\n       if (!explained)\n \t{\n-\t  warning (\"(enclose actions of previous case statements requiring\");\n-\t  warning (\"destructors in their own binding contours.)\");\n+\t  warning (\"(enclose actions of previous case statements requiring destructors in their own scope.)\");\n \t  explained = 1;\n \t}\n     }"}, {"sha": "085e352dba82e4041abcbe9cbb489f78c3000b7c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "patch": "@@ -1597,12 +1597,15 @@ finish_static_data_member_decl (decl, init, asmspec_tree, flags)\n   /* Static consts need not be initialized in the class definition.  */\n   if (init != NULL_TREE && TYPE_NEEDS_CONSTRUCTING (TREE_TYPE (decl)))\n     {\n-      static int explanation = 0;\n+      static int explained = 0;\n \t  \n       error (\"initializer invalid for static member with constructor\");\n-      if (explanation++ == 0)\n-\terror (\"(you really want to initialize it separately)\");\n-      init = 0;\n+      if (!explained)\n+        {\n+\t  error (\"(an out of class initialization is required)\");\n+\t  explained = 1;\n+\t}\n+      init = NULL_TREE;\n     }\n   /* Force the compiler to know when an uninitialized static const\n      member is being used.  */\n@@ -1656,13 +1659,13 @@ grokfield (declarator, declspecs, init, asmspec_tree, attrlist)\n \t    };\n \t    \n \t Explain that to the user.  */\n-      static int explained_p;\n+      static int explained;\n \n       cp_error (\"invalid data member initiailization\");\n-      if (!explained_p)\n+      if (!explained)\n \t{\n-\t  cp_error (\"use `=' to initialize static data members\");\n-\t  explained_p = 1;\n+\t  cp_error (\"(use `=' to initialize static data members)\");\n+\t  explained = 1;\n \t}\n \n       declarator = TREE_OPERAND (declarator, 0);"}, {"sha": "950169a39f4df1944dcd109608036c72e401321d", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=b1ce3eb24a65ac83f1ed5dddaf9e1f04afafd41f", "patch": "@@ -399,11 +399,10 @@ do_friend (ctype, declarator, decl, parmdecls, attrlist,\n \t      && current_template_parms && uses_template_parms (decl))\n \t    {\n \t      static int explained;\n-\t      cp_warning (\"friend declaration `%#D'\", decl);\n-\t      warning (\"  declares a non-template function\");\n+\t      cp_warning (\"friend declaration `%#D' declares a non-template function\", decl);\n \t      if (! explained)\n \t\t{\n-\t\t  warning (\"  (if this is not what you intended, make sure the function template has already been declared and add <> after the function name here) -Wno-non-template-friend disables this warning.\");\n+\t\t  warning (\"(if this is not what you intended, make sure the function template has already been declared and add <> after the function name here) -Wno-non-template-friend disables this warning.\");\n \t\t  explained = 1;\n \t\t}\n \t    }"}]}