{"sha": "90675921729800c0eedd2b7ae1db8d3fd1826c55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA2NzU5MjE3Mjk4MDBjMGVlZGQyYjdhZTFkYjhkM2ZkMTgyNmM1NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-19T08:45:28Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-19T08:45:28Z"}, "message": "i386.md (tablejump): Make an expander; handle pic relative addressing here.\n\n        * config/i386/i386.md (tablejump): Make an expander; handle\n        pic relative addressing here.\n        (tablejump_1): Rename from tablejump_pic.\n        (casesi): Remove.\n\nFrom-SVN: r45028", "tree": {"sha": "ffb8f190dd035b1e27f2e487319c805f4deca9e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffb8f190dd035b1e27f2e487319c805f4deca9e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90675921729800c0eedd2b7ae1db8d3fd1826c55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90675921729800c0eedd2b7ae1db8d3fd1826c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90675921729800c0eedd2b7ae1db8d3fd1826c55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90675921729800c0eedd2b7ae1db8d3fd1826c55/comments", "author": null, "committer": null, "parents": [{"sha": "ec523c2f3426dc196922312299b28f3d839ddb5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec523c2f3426dc196922312299b28f3d839ddb5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec523c2f3426dc196922312299b28f3d839ddb5d"}], "stats": {"total": 92, "additions": 21, "deletions": 71}, "files": [{"sha": "abc349fdc3a27084386a48c49a0a19f14f30f2e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90675921729800c0eedd2b7ae1db8d3fd1826c55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90675921729800c0eedd2b7ae1db8d3fd1826c55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90675921729800c0eedd2b7ae1db8d3fd1826c55", "patch": "@@ -1,3 +1,10 @@\n+2001-08-19  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.md (tablejump): Make an expander; handle\n+\tpic relative addressing here.\n+\t(tablejump_1): Rename from tablejump_pic.\n+\t(casesi): Remove.\n+\n 2001-08-19  Richard Henderson  <rth@redhat.com>\n \n \t* regclass.c (fix_register): Fix typo."}, {"sha": "13c7d00f5c0e2c91f7f4758a540982a604af4925", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 14, "deletions": 71, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90675921729800c0eedd2b7ae1db8d3fd1826c55/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90675921729800c0eedd2b7ae1db8d3fd1826c55/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=90675921729800c0eedd2b7ae1db8d3fd1826c55", "patch": "@@ -12954,80 +12954,23 @@\n   [(set_attr \"type\" \"ibr\")\n    (set_attr \"length_immediate\" \"0\")])\n \n-(define_insn \"tablejump\"\n-  [(set (pc) (match_operand:SI 0 \"nonimmediate_operand\" \"rm\"))\n-   (use (label_ref (match_operand 1 \"\" \"\")))]\n-  \"! flag_pic\"\n-  \"jmp\\t%A0\"\n-  [(set_attr \"type\" \"ibr\")\n-   (set_attr \"length_immediate\" \"0\")])\n-\n-;; Implement switch statements when generating PIC code.  Switches are\n-;; implemented by `tablejump' when not using -fpic.\n-;;\n-;; Emit code here to do the range checking and make the index zero based.\n-;;\n-;; Each entry in the \"addr_diff_vec\" looks like this as the result of the\n-;; two rules below:\n-;; \n-;; \t.long _GLOBAL_OFFSET_TABLE_+[.-.L2]\n-;; \n-;; 1. An expression involving an external reference may only use the\n-;;    addition operator, and only with an assembly-time constant.\n-;;    The example above satisfies this because \".-.L2\" is a constant.\n-;; \n-;; 2. The symbol _GLOBAL_OFFSET_TABLE_ is magic, and at link time is\n-;;    given the value of \"GOT - .\", where GOT is the actual address of\n-;;    the Global Offset Table.  Therefore, the .long above actually\n-;;    stores the value \"( GOT - . ) + [ . - .L2 ]\", or \"GOT - .L2\".  The\n-;;    expression \"GOT - .L2\" by itself would generate an error from as(1).\n-;; \n-;; The pattern below emits code that looks like this:\n-;; \n-;; \tmovl %ebx,reg\n-;; \tsubl TABLE@GOTOFF(%ebx,index,4),reg\n-;; \tjmp reg\n-;; \n-;; The addr_diff_vec contents may be directly referenced with @GOTOFF, since\n-;; the addr_diff_vec is known to be part of this module.\n-;; \n-;; The subl above calculates \"GOT - (( GOT - . ) + [ . - .L2 ])\", which\n-;; evaluates to just \".L2\".\n-\n-(define_expand \"casesi\"\n-  [(set (match_dup 5)\n-\t(match_operand:SI 0 \"general_operand\" \"\"))\n-   (parallel [(set (match_dup 6)\n-\t\t   (minus:SI (match_dup 5)\n-\t\t\t     (match_operand:SI 1 \"general_operand\" \"\")))\n-\t      (clobber (reg:CC 17))])\n-   (set (reg:CC 17)\n-\t(compare:CC (match_dup 6)\n-\t\t    (match_operand:SI 2 \"general_operand\" \"\")))\n-   (set (pc)\n-\t(if_then_else (gtu (reg:CC 17)\n-\t\t\t   (const_int 0))\n-\t\t      (label_ref (match_operand 4 \"\" \"\"))\n-\t\t      (pc)))\n-   (parallel\n-     [(set (match_dup 7)\n-\t   (minus:SI (match_dup 8)\n-\t     (mem:SI (plus:SI (plus:SI (mult:SI (match_dup 6) (const_int 4))\n-\t\t\t      (match_dup 8))\n-\t\t     (const (unspec [(label_ref (match_operand 3 \"\" \"\"))] 7))))))\n-      (clobber (reg:CC 17))])\n-   (parallel [(set (pc) (match_dup 7))\n-\t      (use (label_ref (match_dup 3)))])]\n-  \"flag_pic\"\n+(define_expand \"tablejump\"\n+  [(parallel [(set (pc) (match_operand:SI 0 \"nonimmediate_operand\" \"rm\"))\n+\t      (use (label_ref (match_operand 1 \"\" \"\")))])]\n+  \"\"\n {\n-  operands[5] = gen_reg_rtx (SImode);\n-  operands[6] = gen_reg_rtx (SImode);\n-  operands[7] = gen_reg_rtx (SImode);\n-  operands[8] = pic_offset_table_rtx;\n-  current_function_uses_pic_offset_table = 1;\n+  /* In PIC mode, the table entries are stored GOT-relative.  Convert\n+     the relative address to an absolute address.  */\n+  if (flag_pic)\n+    {\n+      operands[0] = expand_simple_binop (Pmode, MINUS, pic_offset_table_rtx,\n+\t\t\t\t\t operands[0], NULL_RTX, 1,\n+\t\t\t\t\t OPTAB_DIRECT);\n+      current_function_uses_pic_offset_table = 1;\n+    }\n })\n \n-(define_insn \"*tablejump_pic\"\n+(define_insn \"*tablejump_1\"\n   [(set (pc) (match_operand:SI 0 \"nonimmediate_operand\" \"rm\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"\""}]}