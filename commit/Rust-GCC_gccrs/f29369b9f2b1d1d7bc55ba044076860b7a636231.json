{"sha": "f29369b9f2b1d1d7bc55ba044076860b7a636231", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5MzY5YjlmMmIxZDFkN2JjNTViYTA0NDA3Njg2MGI3YTYzNjIzMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-29T11:47:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-29T11:47:40Z"}, "message": "(store_expr): When storing promoted value, don't return MEM if address\ncontains target.\n\nFrom-SVN: r10414", "tree": {"sha": "4e575b739815fe64a9e68d32f4f141a9a3cb2399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e575b739815fe64a9e68d32f4f141a9a3cb2399"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f29369b9f2b1d1d7bc55ba044076860b7a636231", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29369b9f2b1d1d7bc55ba044076860b7a636231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f29369b9f2b1d1d7bc55ba044076860b7a636231", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29369b9f2b1d1d7bc55ba044076860b7a636231/comments", "author": null, "committer": null, "parents": [{"sha": "d22d5f3433c43d2051725894d106e65785a08afa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22d5f3433c43d2051725894d106e65785a08afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d22d5f3433c43d2051725894d106e65785a08afa"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "a1fda985b78fa42190a1d1c199dfbb51b3fb9b64", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29369b9f2b1d1d7bc55ba044076860b7a636231/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29369b9f2b1d1d7bc55ba044076860b7a636231/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f29369b9f2b1d1d7bc55ba044076860b7a636231", "patch": "@@ -2785,8 +2785,11 @@ store_expr (exp, target, want_value)\n       temp = expand_expr (exp, NULL_RTX, VOIDmode, 0);\n \n       /* If TEMP is a volatile MEM and we want a result value, make\n-\t the access now so it gets done only once.  */\n-      if (GET_CODE (temp) == MEM && MEM_VOLATILE_P (temp) && want_value)\n+\t the access now so it gets done only once.  Likewise if\n+\t it contains TARGET.  */\n+      if (GET_CODE (temp) == MEM && want_value\n+\t  && (MEM_VOLATILE_P (temp)\n+\t      || reg_mentioned_p (SUBREG_REG (target), XEXP (temp, 0))))\n \ttemp = copy_to_reg (temp);\n \n       /* If TEMP is a VOIDmode constant, use convert_modes to make"}]}