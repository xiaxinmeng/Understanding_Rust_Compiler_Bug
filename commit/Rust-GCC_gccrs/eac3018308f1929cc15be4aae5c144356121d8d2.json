{"sha": "eac3018308f1929cc15be4aae5c144356121d8d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFjMzAxODMwOGYxOTI5Y2MxNWJlNGFhZTVjMTQ0MzU2MTIxZDhkMg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2004-12-31T18:03:28Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2004-12-31T18:03:28Z"}, "message": "tree-scalar-evolution.c (instantiate_parameters_1): Copy the expression only if needed.\n\n\t* tree-scalar-evolution.c (instantiate_parameters_1): Copy the\n\texpression only if needed.\n\nFrom-SVN: r92768", "tree": {"sha": "61d92bdbbab9940044c877fe2d96ba7cce0f4d7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61d92bdbbab9940044c877fe2d96ba7cce0f4d7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eac3018308f1929cc15be4aae5c144356121d8d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac3018308f1929cc15be4aae5c144356121d8d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eac3018308f1929cc15be4aae5c144356121d8d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac3018308f1929cc15be4aae5c144356121d8d2/comments", "author": null, "committer": null, "parents": [{"sha": "bdda7d9cc1d2ae296507f4c6e67e13a956e3717c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdda7d9cc1d2ae296507f4c6e67e13a956e3717c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdda7d9cc1d2ae296507f4c6e67e13a956e3717c"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "900328b7df94cbb92be96bdb497a359fad6ab3de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac3018308f1929cc15be4aae5c144356121d8d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac3018308f1929cc15be4aae5c144356121d8d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eac3018308f1929cc15be4aae5c144356121d8d2", "patch": "@@ -1,3 +1,8 @@\n+2004-12-31  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\t* tree-scalar-evolution.c (instantiate_parameters_1): Copy the\n+\texpression only if needed.\n+\n 2004-12-31  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa-hpux.h (HANDLE_SYSV_PRAGMA, HANDLE_PRAGMA_PACK_PUSH_POP): Define."}, {"sha": "dd4ea0bce6180c360a92327b9c6eb71cff224006", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac3018308f1929cc15be4aae5c144356121d8d2/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac3018308f1929cc15be4aae5c144356121d8d2/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=eac3018308f1929cc15be4aae5c144356121d8d2", "patch": "@@ -1955,28 +1955,40 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n \t\t\t\t      allow_superloop_chrecs);\n       op1 = instantiate_parameters_1 (loop, CHREC_RIGHT (chrec),\n \t\t\t\t      allow_superloop_chrecs);\n-      return build_polynomial_chrec (CHREC_VARIABLE (chrec), op0, op1);\n+      if (CHREC_LEFT (chrec) != op0\n+\t  || CHREC_RIGHT (chrec) != op1)\n+\tchrec = build_polynomial_chrec (CHREC_VARIABLE (chrec), op0, op1);\n+      return chrec;\n \n     case PLUS_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n \t\t\t\t      allow_superloop_chrecs);\n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n \t\t\t\t      allow_superloop_chrecs);\n-      return chrec_fold_plus (TREE_TYPE (chrec), op0, op1);\n+      if (TREE_OPERAND (chrec, 0) != op0\n+\t  || TREE_OPERAND (chrec, 1) != op1)\n+      \tchrec = chrec_fold_plus (TREE_TYPE (chrec), op0, op1);\n+      return chrec;\n \n     case MINUS_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n \t\t\t\t      allow_superloop_chrecs);\n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n \t\t\t\t      allow_superloop_chrecs);\n-      return chrec_fold_minus (TREE_TYPE (chrec), op0, op1);\n+      if (TREE_OPERAND (chrec, 0) != op0\n+\t  || TREE_OPERAND (chrec, 1) != op1)\n+        chrec = chrec_fold_minus (TREE_TYPE (chrec), op0, op1);\n+      return chrec;\n \n     case MULT_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n \t\t\t\t      allow_superloop_chrecs);\n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n \t\t\t\t      allow_superloop_chrecs);\n-      return chrec_fold_multiply (TREE_TYPE (chrec), op0, op1);\n+      if (TREE_OPERAND (chrec, 0) != op0\n+\t  || TREE_OPERAND (chrec, 1) != op1)\n+\tchrec = chrec_fold_multiply (TREE_TYPE (chrec), op0, op1);\n+      return chrec;\n \n     case NOP_EXPR:\n     case CONVERT_EXPR:\n@@ -1986,6 +1998,9 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n       if (op0 == chrec_dont_know)\n         return chrec_dont_know;\n \n+      if (op0 == TREE_OPERAND (chrec, 0))\n+\treturn chrec;\n+\n       return chrec_convert (TREE_TYPE (chrec), op0);\n \n     case SCEV_NOT_KNOWN:\n@@ -2011,6 +2026,12 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n \t  || op1 == chrec_dont_know\n \t  || op2 == chrec_dont_know)\n         return chrec_dont_know;\n+\n+      if (op0 == TREE_OPERAND (chrec, 0)\n+\t  && op1 == TREE_OPERAND (chrec, 1)\n+\t  && op2 == TREE_OPERAND (chrec, 2))\n+\treturn chrec;\n+\n       return fold (build (TREE_CODE (chrec),\n \t\t\t  TREE_TYPE (chrec), op0, op1, op2));\n \n@@ -2022,13 +2043,19 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n       if (op0 == chrec_dont_know\n \t  || op1 == chrec_dont_know)\n         return chrec_dont_know;\n+\n+      if (op0 == TREE_OPERAND (chrec, 0)\n+\t  && op1 == TREE_OPERAND (chrec, 1))\n+\treturn chrec;\n       return fold (build (TREE_CODE (chrec), TREE_TYPE (chrec), op0, op1));\n \t    \n     case 1:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n \t\t\t\t      allow_superloop_chrecs);\n       if (op0 == chrec_dont_know)\n         return chrec_dont_know;\n+      if (op0 == TREE_OPERAND (chrec, 0))\n+\treturn chrec;\n       return fold (build1 (TREE_CODE (chrec), TREE_TYPE (chrec), op0));\n \n     case 0:"}]}