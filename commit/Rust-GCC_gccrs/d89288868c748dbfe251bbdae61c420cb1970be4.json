{"sha": "d89288868c748dbfe251bbdae61c420cb1970be4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg5Mjg4ODY4Yzc0OGRiZmUyNTFiYmRhZTYxYzQyMGNiMTk3MGJlNA==", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2018-11-05T14:18:21Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@gcc.gnu.org", "date": "2018-11-05T14:18:21Z"}, "message": "S/390: Add loc patterns for QImode and HImode\n\nThis adds QImode and HImode support to load on condition.\n\ngcc/ChangeLog:\n\n2018-11-05  Robin Dapp  <rdapp@linux.ibm.com>\n\n\t* config/s390/s390.md: QImode and HImode for load on condition.\n\ngcc/testsuite/ChangeLog:\n\n2018-11-05  Robin Dapp  <rdapp@linux.ibm.com>\n\n\t* gcc.target/s390/ifcvt-one-insn-bool.c: New test.\n\t* gcc.target/s390/ifcvt-one-insn-char.c: New test.\n\nFrom-SVN: r265808", "tree": {"sha": "720c385587d35e110440084d719954f1e7c3b80c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/720c385587d35e110440084d719954f1e7c3b80c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d89288868c748dbfe251bbdae61c420cb1970be4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d89288868c748dbfe251bbdae61c420cb1970be4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d89288868c748dbfe251bbdae61c420cb1970be4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d89288868c748dbfe251bbdae61c420cb1970be4/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88e845c0603f46aae2e3d21944002a4dbf6e3fb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e845c0603f46aae2e3d21944002a4dbf6e3fb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e845c0603f46aae2e3d21944002a4dbf6e3fb6"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "a0f35e63327b1d1d8c4d90be268e50d923d7b3a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d89288868c748dbfe251bbdae61c420cb1970be4", "patch": "@@ -1,3 +1,7 @@\n+2018-11-05  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* config/s390/s390.md: QImode and HImode for load on condition.\n+\n 2018-11-05  Robin Dapp  <rdapp@linux.ibm.com>\n \n \t* config/s390/predicates.md: Fix typo."}, {"sha": "8e7b285e1c3360a388146ba3d4284299d16804d8", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=d89288868c748dbfe251bbdae61c420cb1970be4", "patch": "@@ -6592,6 +6592,44 @@\n \t\t\t\t     XEXP (operands[1], 1));\n })\n \n+;;\n+;; - We do not have instructions for QImode or HImode but still\n+;;   enable load on condition/if conversion for them.\n+(define_expand \"mov<mode>cc\"\n+ [(set (match_operand:HQI 0 \"nonimmediate_operand\" \"\")\n+\t(if_then_else:HQI (match_operand 1 \"comparison_operator\" \"\")\n+\t\t(match_operand:HQI 2 \"loc_operand\" \"\")\n+\t\t(match_operand:HQI 3 \"loc_operand\" \"\")))]\n+ \"TARGET_Z196\"\n+{\n+  /* Emit the comparison insn in case we do not already have a comparison\n+     result. */\n+  if (!s390_comparison (operands[1], VOIDmode))\n+    operands[1] = s390_emit_compare (GET_CODE (operands[1]),\n+\t\t\t      XEXP (operands[1], 0),\n+\t\t\t      XEXP (operands[1], 1));\n+\n+  rtx then = operands[2];\n+  rtx els = operands[3];\n+\n+  if ((!TARGET_Z13 && CONSTANT_P (then)) || MEM_P (then))\n+\tthen = force_reg (<MODE>mode, then);\n+  if ((!TARGET_Z13 && CONSTANT_P (els)) || MEM_P (els))\n+\tels = force_reg (<MODE>mode, els);\n+\n+  if (!CONSTANT_P (then))\n+    then = simplify_gen_subreg (E_SImode, then, <MODE>mode, 0);\n+  if (!CONSTANT_P (els))\n+    els = simplify_gen_subreg (E_SImode, els, <MODE>mode, 0);\n+\n+  rtx tmp_target = gen_reg_rtx (E_SImode);\n+  emit_insn (gen_movsicc (tmp_target, operands[1], then, els));\n+  emit_move_insn (operands[0], gen_lowpart (<MODE>mode, tmp_target));\n+  DONE;\n+})\n+\n+\n+\n ; locr, loc, stoc, locgr, locg, stocg, lochi, locghi\n (define_insn \"*mov<mode>cc\"\n   [(set (match_operand:GPR 0 \"nonimmediate_operand\"   \"=d,d,d,d,d,d,S,S\")"}, {"sha": "ae7ed523955e6bda198d88f5806ca6cbcc011ff6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d89288868c748dbfe251bbdae61c420cb1970be4", "patch": "@@ -1,3 +1,8 @@\n+2018-10-26  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.target/s390/ifcvt-one-insn-bool.c: New test.\n+\t* gcc.target/s390/ifcvt-one-insn-char.c: New test.\n+\n 2018-11-05  Robin Dapp  <rdapp@linux.ibm.com>\n \n \t* gcc.dg/loop-8.c: On s390, always run the test with -march=zEC12."}, {"sha": "0a96b71f4583dee29c8b65544fcd527b6ecf6e7a", "filename": "gcc/testsuite/gcc.target/s390/ifcvt-one-insn-bool.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-one-insn-bool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-one-insn-bool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-one-insn-bool.c?ref=d89288868c748dbfe251bbdae61c420cb1970be4", "patch": "@@ -0,0 +1,24 @@\n+/* Check load on condition for bool.  */\n+\n+/* { dg-do compile { target { s390*-*-* } } } */\n+/* { dg-options \"-O2 -march=z13\" } */\n+\n+/* { dg-final { scan-assembler \"lochinh\\t%r.?,1\" } } */\n+#include <stdbool.h>\n+\n+int foo (int *a, unsigned int n)\n+{\n+  int min = 999999;\n+  bool bla = false;\n+  for (int i = 0; i < n; i++)\n+    {\n+      if (a[i] < min)\n+\t{\n+\t  bla = true;\n+\t}\n+    }\n+\n+  if (bla)\n+    min += 1;\n+  return min;\n+}"}, {"sha": "9c3d041618b38fe7e86847ada52c4e4e2ec7fd5b", "filename": "gcc/testsuite/gcc.target/s390/ifcvt-one-insn-char.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-one-insn-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d89288868c748dbfe251bbdae61c420cb1970be4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-one-insn-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-one-insn-char.c?ref=d89288868c748dbfe251bbdae61c420cb1970be4", "patch": "@@ -0,0 +1,26 @@\n+/* Check load on condition for global char.  */\n+\n+/* { dg-do compile { target { s390*-*-* } } } */\n+/* { dg-options \"-O2 -march=z13\" } */\n+\n+/* { dg-final { scan-assembler \"locrnh\\t%r.?,%r.?\" } } */\n+#include <stdbool.h>\n+\n+char g = 42;\n+\n+int foo (int *a, unsigned int n)\n+{\n+  int min = 999999;\n+  char bla = 3;\n+  for (int i = 0; i < n; i++)\n+    {\n+      if (a[i] < min)\n+\t{\n+\t  bla = g;\n+\t}\n+    }\n+\n+  if (bla == 42)\n+    min += 1;\n+  return min;\n+}"}]}