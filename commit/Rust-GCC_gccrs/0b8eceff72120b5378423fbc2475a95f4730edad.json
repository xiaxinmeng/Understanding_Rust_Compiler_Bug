{"sha": "0b8eceff72120b5378423fbc2475a95f4730edad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI4ZWNlZmY3MjEyMGI1Mzc4NDIzZmJjMjQ3NWE5NWY0NzMwZWRhZA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-12-12T11:38:19Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-02T08:58:01Z"}, "message": "[Ada] Allow GNATprove to set overflow mode\n\n2020-06-02  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_prag.adb, sem_prag.ads (Set_Overflow_Mode): New procedure\n\tto set overflow mode.", "tree": {"sha": "1f896405e267df442df7d1bc947927bdf595f7fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f896405e267df442df7d1bc947927bdf595f7fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b8eceff72120b5378423fbc2475a95f4730edad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8eceff72120b5378423fbc2475a95f4730edad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b8eceff72120b5378423fbc2475a95f4730edad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8eceff72120b5378423fbc2475a95f4730edad/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a92db2624549f119a6f5c1e19c3013768b6bad3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92db2624549f119a6f5c1e19c3013768b6bad3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a92db2624549f119a6f5c1e19c3013768b6bad3e"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "77cd051bfe91fd86635a0d751dbe7d693857ce7d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 60, "deletions": 2, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8eceff72120b5378423fbc2475a95f4730edad/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8eceff72120b5378423fbc2475a95f4730edad/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0b8eceff72120b5378423fbc2475a95f4730edad", "patch": "@@ -32303,6 +32303,64 @@ package body Sem_Prag is\n       Generate_Reference (Entity (With_Item), N, Set_Ref => False);\n    end Set_Elab_Unit_Name;\n \n+   -----------------------\n+   -- Set_Overflow_Mode --\n+   -----------------------\n+\n+   procedure Set_Overflow_Mode (N : Node_Id) is\n+\n+      function Get_Overflow_Mode (Arg : Node_Id) return Overflow_Mode_Type;\n+      --  Function to process one pragma argument, Arg\n+\n+      -----------------------\n+      -- Get_Overflow_Mode --\n+      -----------------------\n+\n+      function Get_Overflow_Mode (Arg : Node_Id) return Overflow_Mode_Type is\n+         Argx : constant Node_Id := Get_Pragma_Arg (Arg);\n+\n+      begin\n+         if Chars (Argx) = Name_Strict then\n+            return Strict;\n+\n+         elsif Chars (Argx) = Name_Minimized then\n+            return Minimized;\n+\n+         elsif Chars (Argx) = Name_Eliminated then\n+            return Eliminated;\n+\n+         else\n+            raise Program_Error;\n+         end if;\n+      end Get_Overflow_Mode;\n+\n+      --  Local variables\n+\n+      Arg1 : constant Node_Id := First (Pragma_Argument_Associations (N));\n+      Arg2 : constant Node_Id := Next (Arg1);\n+\n+   --  Start of processing for Set_Overflow_Mode\n+\n+   begin\n+      --  Process first argument\n+\n+      Scope_Suppress.Overflow_Mode_General :=\n+        Get_Overflow_Mode (Arg1);\n+\n+      --  Case of only one argument\n+\n+      if No (Arg2) then\n+         Scope_Suppress.Overflow_Mode_Assertions :=\n+           Scope_Suppress.Overflow_Mode_General;\n+\n+      --  Case of two arguments present\n+\n+      else\n+         Scope_Suppress.Overflow_Mode_Assertions  :=\n+           Get_Overflow_Mode (Arg2);\n+      end if;\n+   end Set_Overflow_Mode;\n+\n    -------------------\n    -- Test_Case_Arg --\n    -------------------\n@@ -32399,9 +32457,9 @@ package body Sem_Prag is\n       return Empty;\n    end Test_Case_Arg;\n \n-   -----------------------------------------\n+   --------------------------------------------\n    -- Defer_Compile_Time_Warning_Error_To_BE --\n-   -----------------------------------------\n+   --------------------------------------------\n \n    procedure Defer_Compile_Time_Warning_Error_To_BE (N : Node_Id) is\n       Arg1  : constant Node_Id := First (Pragma_Argument_Associations (N));"}, {"sha": "5709b3d833e36c68c212edec2b302899293eb18d", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8eceff72120b5378423fbc2475a95f4730edad/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8eceff72120b5378423fbc2475a95f4730edad/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=0b8eceff72120b5378423fbc2475a95f4730edad", "patch": "@@ -530,6 +530,11 @@ package Sem_Prag is\n    --  the value of the Interface_Name. Otherwise it is encoded as needed by\n    --  particular operating systems. See the body for details of the encoding.\n \n+   procedure Set_Overflow_Mode (N : Node_Id);\n+   --  Sets Sem.Scope_Suppress according to the overflow modes specified in\n+   --  the pragma Overflow_Mode passed in argument. This should only be called\n+   --  after N has been successfully analyzed.\n+\n    function Test_Case_Arg\n      (Prag        : Node_Id;\n       Arg_Nam     : Name_Id;"}]}