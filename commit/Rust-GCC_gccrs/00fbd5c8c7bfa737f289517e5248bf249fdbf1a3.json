{"sha": "00fbd5c8c7bfa737f289517e5248bf249fdbf1a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBmYmQ1YzhjN2JmYTczN2YyODk1MTdlNTI0OGJmMjQ5ZmRiZjFhMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-01-16T14:05:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-01-16T14:05:54Z"}, "message": "re PR bootstrap/51860 (s390 esa mode bootstrap comparison failure since transactional memory branch merge)\n\n\tPR bootstrap/51860\n\t* config/s390/s390.c (s390_chunkify_start): Don't skip\n\tcall insns followed by NOTE_INSN_CALL_ARG_LOCATION note.  Skip\n\tNOTE_INSN_VAR_LOCATION and NOTE_INSN_CALL_ARG_LOCATION notes.\n\tIf insn is followed by NOTE_INSN_VAR_LOCATION or\n\tNOTE_INSN_CALL_ARG_LOCATION notes, insert jump after all those notes.\n\tDon't use location of note insns.\n\nFrom-SVN: r183210", "tree": {"sha": "53be6b66a4d4347da7cd030a7cfef82f09a56756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53be6b66a4d4347da7cd030a7cfef82f09a56756"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00fbd5c8c7bfa737f289517e5248bf249fdbf1a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00fbd5c8c7bfa737f289517e5248bf249fdbf1a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00fbd5c8c7bfa737f289517e5248bf249fdbf1a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00fbd5c8c7bfa737f289517e5248bf249fdbf1a3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90dda0e9563ec83ddbf59bc8fce9f1c1c9d1a55b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90dda0e9563ec83ddbf59bc8fce9f1c1c9d1a55b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90dda0e9563ec83ddbf59bc8fce9f1c1c9d1a55b"}], "stats": {"total": 56, "additions": 41, "deletions": 15}, "files": [{"sha": "d06de3d16a91293293f453e0546592a67d27f87f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00fbd5c8c7bfa737f289517e5248bf249fdbf1a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00fbd5c8c7bfa737f289517e5248bf249fdbf1a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00fbd5c8c7bfa737f289517e5248bf249fdbf1a3", "patch": "@@ -1,5 +1,13 @@\n 2012-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR bootstrap/51860\n+\t* config/s390/s390.c (s390_chunkify_start): Don't skip\n+\tcall insns followed by NOTE_INSN_CALL_ARG_LOCATION note.  Skip\n+\tNOTE_INSN_VAR_LOCATION and NOTE_INSN_CALL_ARG_LOCATION notes.\n+\tIf insn is followed by NOTE_INSN_VAR_LOCATION or\n+\tNOTE_INSN_CALL_ARG_LOCATION notes, insert jump after all those notes.\n+\tDon't use location of note insns.\n+\n \tPR tree-optimization/51865\n \t* tree-inline.c (tree_function_versioning): Call remap_decl\n \ton DECL_RESULT whenever it has VOID_TYPE_P type."}, {"sha": "824308addc6a06ae24928ade946e9d3b5dde6393", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 33, "deletions": 15, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00fbd5c8c7bfa737f289517e5248bf249fdbf1a3/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00fbd5c8c7bfa737f289517e5248bf249fdbf1a3/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=00fbd5c8c7bfa737f289517e5248bf249fdbf1a3", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on IBM S/390 and zSeries\n    Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,\n-   2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+   2007, 2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n    Contributed by Hartmut Penner (hpenner@de.ibm.com) and\n                   Ulrich Weigand (uweigand@de.ibm.com) and\n                   Andreas Krebbel (Andreas.Krebbel@de.ibm.com).\n@@ -6608,15 +6608,6 @@ s390_chunkify_start (void)\n \t\t  pending_ltrel = pool_ref;\n \t\t}\n \t    }\n-\t  /* Make sure we do not split between a call and its\n-\t     corresponding CALL_ARG_LOCATION note.  */\n-\t  if (CALL_P (insn))\n-\t    {\n-\t      rtx next = NEXT_INSN (insn);\n-\t      if (next && NOTE_P (next)\n-\t\t  && NOTE_KIND (next) == NOTE_INSN_CALL_ARG_LOCATION)\n-\t\tcontinue;\n-\t    }\n \t}\n \n       if (GET_CODE (insn) == JUMP_INSN || GET_CODE (insn) == CODE_LABEL)\n@@ -6627,8 +6618,18 @@ s390_chunkify_start (void)\n \t  gcc_assert (!pending_ltrel);\n \t}\n \n-      if (NOTE_P (insn) && NOTE_KIND (insn) == NOTE_INSN_SWITCH_TEXT_SECTIONS)\n-\tsection_switch_p = true;\n+      if (NOTE_P (insn))\n+\tswitch (NOTE_KIND (insn))\n+\t  {\n+\t  case NOTE_INSN_SWITCH_TEXT_SECTIONS:\n+\t    section_switch_p = true;\n+\t    break;\n+\t  case NOTE_INSN_VAR_LOCATION:\n+\t  case NOTE_INSN_CALL_ARG_LOCATION:\n+\t    continue;\n+\t  default:\n+\t    break;\n+\t  }\n \n       if (!curr_pool\n \t  || INSN_ADDRESSES_SIZE () <= (size_t) INSN_UID (insn)\n@@ -6674,7 +6675,7 @@ s390_chunkify_start (void)\n \t           || curr_pool->size > S390_POOL_CHUNK_MAX\n \t\t   || section_switch_p)\n \t    {\n-              rtx label, jump, barrier;\n+\t      rtx label, jump, barrier, next, prev;\n \n \t      if (!section_switch_p)\n \t\t{\n@@ -6684,9 +6685,19 @@ s390_chunkify_start (void)\n \t\t  if (get_attr_length (insn) == 0)\n \t\t    continue;\n \t\t  /* Don't separate LTREL_BASE from the corresponding\n-\t\t LTREL_OFFSET load.  */\n+\t\t     LTREL_OFFSET load.  */\n \t\t  if (pending_ltrel)\n \t\t    continue;\n+\t\t  next = insn;\n+\t\t  do\n+\t\t    {\n+\t\t      insn = next;\n+\t\t      next = NEXT_INSN (insn);\n+\t\t    }\n+\t\t  while (next\n+\t\t\t && NOTE_P (next)\n+\t\t\t && (NOTE_KIND (next) == NOTE_INSN_VAR_LOCATION\n+\t\t\t     || NOTE_KIND (next) == NOTE_INSN_CALL_ARG_LOCATION));\n \t\t}\n \t      else\n \t\t{\n@@ -6699,7 +6710,14 @@ s390_chunkify_start (void)\n \t\t}\n \n \t      label = gen_label_rtx ();\n-\t      jump = emit_jump_insn_after (gen_jump (label), insn);\n+\t      prev = insn;\n+\t      if (prev && NOTE_P (prev))\n+\t\tprev = prev_nonnote_insn (prev);\n+\t      if (prev)\n+\t\tjump = emit_jump_insn_after_setloc (gen_jump (label), insn,\n+\t\t\t\t\t\t    INSN_LOCATOR (prev));\n+\t      else\n+\t\tjump = emit_jump_insn_after_noloc (gen_jump (label), insn);\n \t      barrier = emit_barrier_after (jump);\n \t      insn = emit_label_after (label, barrier);\n \t      JUMP_LABEL (jump) = label;"}]}