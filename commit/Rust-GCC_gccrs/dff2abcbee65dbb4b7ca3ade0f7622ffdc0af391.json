{"sha": "dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZmMmFiY2JlZTY1ZGJiNGI3Y2EzYWRlMGY3NjIyZmZkYzBhZjM5MQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2018-07-11T15:27:55Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2018-07-11T15:27:55Z"}, "message": "[arm] Put CPU's FPU capabilities directly in the ISA specification\n\nAs part of the transition from the original support for named FPUs to\ngeneral FPU properties I defined an entry in the CPU definitions in\narm-cpus.in to use a named FPU.  However, that has now outlived its\nusefulness and increasingly we are likely to find that newer cores do\nnot fit the legacy FPU names very well.  Furthermore it is now possible\nto encode all the FPU capatilities directly in the ISA definitions, often\nas simply as using +fp or +simd.\n\nSo this patch removes the fpu field from the \"define cpu\" entries and\ninstead encodes the same information in the isa field.  This also alows us\nto remove a bit of now-dead code from parsecpu.awk.\n\n\t* config/arm/arm-cpus.in: Move information from fpu field of each\n\tcpu definition to the isa field.\n\t* config/arm/parsecpu.awk (fpu): Delete match rule.\n\t(gen_comm_data): Don't add bits from the CPU's FPU entry.\n\nFrom-SVN: r262556", "tree": {"sha": "7f250203683240f28201a976474d3b476c67be06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f250203683240f28201a976474d3b476c67be06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391/comments", "author": null, "committer": null, "parents": [{"sha": "305130b92e1a785d89178ce6334ead38e975268f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305130b92e1a785d89178ce6334ead38e975268f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305130b92e1a785d89178ce6334ead38e975268f"}], "stats": {"total": 162, "additions": 55, "deletions": 107}, "files": [{"sha": "7ba0cd16ab1c1a89b7c02ea995cfbb95940592a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391", "patch": "@@ -1,3 +1,10 @@\n+2018-07-11  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/arm/arm-cpus.in: Move information from fpu field of each\n+\tcpu definition to the isa field.\n+\t* config/arm/parsecpu.awk (fpu): Delete match rule.\n+\t(gen_comm_data): Don't add bits from the CPU's FPU entry.\n+\n 2018-07-11  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/86457"}, {"sha": "d6eed2f0b0d2697d719b942cf1fd61ea279869e7", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 48, "deletions": 97, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391", "patch": "@@ -620,7 +620,6 @@ end arch iwmmxt2\n #   [tune for <cpu-name>]\n #   [tune flags <list>]\n #   architecture <name>\n-#   [fpu <name>]\n #   [isa <additional-isa-flags-list>]\n #   [option <name> add|remove <isa-list>]*\n #   [optalias <name> <optname>]*\n@@ -633,7 +632,7 @@ end arch iwmmxt2\n # isa flags are appended to those defined by the architecture.\n # Each add option must have a distinct feature set and each remove\n # option must similarly have a distinct feature set.  Option aliases can be\n-# added with the optalias statement\n+# added with the optalias statement.\n \n # V4 Architecture Processors\n begin cpu arm8\n@@ -778,59 +777,52 @@ end cpu arm1020t\n # V5TE Architecture Processors\n begin cpu arm9e\n  tune flags LDSCHED\n- architecture armv5te\n- fpu vfpv2\n+ architecture armv5te+fp\n  option nofp remove ALL_FP\n  costs 9e\n end cpu arm9e\n \n begin cpu arm946e-s\n  cname arm946es\n  tune flags LDSCHED\n- architecture armv5te\n- fpu vfpv2\n+ architecture armv5te+fp\n  option nofp remove ALL_FP\n  costs 9e\n end cpu arm946e-s\n \n begin cpu arm966e-s\n  cname arm966es\n  tune flags LDSCHED\n- architecture armv5te\n- fpu vfpv2\n+ architecture armv5te+fp\n  option nofp remove ALL_FP\n  costs 9e\n end cpu arm966e-s\n \n begin cpu arm968e-s\n  cname arm968es\n  tune flags LDSCHED\n- architecture armv5te\n- fpu vfpv2\n+ architecture armv5te+fp\n  option nofp remove ALL_FP\n  costs 9e\n end cpu arm968e-s\n \n begin cpu arm10e\n  tune flags LDSCHED\n- architecture armv5te\n- fpu vfpv2\n+ architecture armv5te+fp\n  option nofp remove ALL_FP\n  costs fastmul\n end cpu arm10e\n \n begin cpu arm1020e\n  tune flags LDSCHED\n- architecture armv5te\n- fpu vfpv2\n+ architecture armv5te+fp\n  option nofp remove ALL_FP\n  costs fastmul\n end cpu arm1020e\n \n begin cpu arm1022e\n  tune flags LDSCHED\n- architecture armv5te\n- fpu vfpv2\n+ architecture armv5te+fp\n  option nofp remove ALL_FP\n  costs fastmul\n end cpu arm1022e\n@@ -883,17 +875,15 @@ end cpu fa726te\n begin cpu arm926ej-s\n  cname arm926ejs\n  tune flags LDSCHED\n- architecture armv5tej\n- fpu vfpv2\n+ architecture armv5tej+fp\n  option nofp remove ALL_FP\n  costs 9e\n end cpu arm926ej-s\n \n begin cpu arm1026ej-s\n  cname arm1026ejs\n  tune flags LDSCHED\n- architecture armv5tej\n- fpu vfpv2\n+ architecture armv5tej+fp\n  option nofp remove ALL_FP\n  costs 9e\n end cpu arm1026ej-s\n@@ -910,8 +900,7 @@ end cpu arm1136j-s\n begin cpu arm1136jf-s\n  cname arm1136jfs\n  tune flags LDSCHED\n- architecture armv6j\n- fpu vfpv2\n+ architecture armv6j+fp\n  costs 9e\n end cpu arm1136jf-s\n \n@@ -925,8 +914,7 @@ end cpu arm1176jz-s\n begin cpu arm1176jzf-s\n  cname arm1176jzfs\n  tune flags LDSCHED\n- architecture armv6kz\n- fpu vfpv2\n+ architecture armv6kz+fp\n  costs 9e\n end cpu arm1176jzf-s\n \n@@ -938,8 +926,7 @@ end cpu mpcorenovfp\n \n begin cpu mpcore\n  tune flags LDSCHED\n- architecture armv6k\n- fpu vfpv2\n+ architecture armv6k+fp\n  costs 9e\n end cpu mpcore\n \n@@ -953,8 +940,7 @@ end cpu arm1156t2-s\n begin cpu arm1156t2f-s\n  cname arm1156t2fs\n  tune flags LDSCHED\n- architecture armv6t2\n- fpu vfpv2\n+ architecture armv6t2+fp\n  costs v6t2\n end cpu arm1156t2f-s\n \n@@ -1012,8 +998,7 @@ end cpu cortex-m0plus.small-multiply\n begin cpu generic-armv7-a\n  cname genericv7a\n  tune flags LDSCHED\n- architecture armv7-a\n- fpu vfpv3-d16\n+ architecture armv7-a+fp\n  option vfpv3-d16 add VFPv3 FP_DBL\n  option vfpv3 add VFPv3 FP_D32\n  option vfpv3-d16-fp16 add VFPv3 FP_DBL fp16conv\n@@ -1033,8 +1018,7 @@ end cpu generic-armv7-a\n begin cpu cortex-a5\n  cname cortexa5\n  tune flags LDSCHED\n- architecture armv7-a\n- fpu neon-fp16\n+ architecture armv7-a+neon-fp16\n  option nosimd remove ALL_SIMD\n  option nofp remove ALL_FP\n  costs cortex_a5\n@@ -1043,8 +1027,7 @@ end cpu cortex-a5\n begin cpu cortex-a7\n  cname cortexa7\n  tune flags LDSCHED\n- architecture armv7ve\n- fpu neon-vfpv4\n+ architecture armv7ve+simd\n  option nosimd remove ALL_SIMD\n  option nofp remove ALL_FP\n  costs cortex_a7\n@@ -1053,17 +1036,15 @@ end cpu cortex-a7\n begin cpu cortex-a8\n  cname cortexa8\n  tune flags LDSCHED\n- architecture armv7-a\n- fpu neon-vfpv3\n+ architecture armv7-a+simd\n  option nofp remove ALL_FP\n  costs cortex_a8\n end cpu cortex-a8\n \n begin cpu cortex-a9\n  cname cortexa9\n  tune flags LDSCHED\n- architecture armv7-a\n- fpu neon-fp16\n+ architecture armv7-a+neon-fp16\n  option nosimd remove ALL_SIMD\n  option nofp remove ALL_FP\n  costs cortex_a9\n@@ -1073,26 +1054,23 @@ begin cpu cortex-a12\n  cname cortexa12\n  tune for cortex-a17\n  tune flags LDSCHED\n- architecture armv7ve\n- fpu neon-vfpv4\n+ architecture armv7ve+simd\n  option nofp remove ALL_FP\n  costs cortex_a12\n end cpu cortex-a12\n \n begin cpu cortex-a15\n  cname cortexa15\n  tune flags LDSCHED\n- architecture armv7ve\n- fpu neon-vfpv4\n+ architecture armv7ve+simd\n  option nofp remove ALL_FP\n  costs cortex_a15\n end cpu cortex-a15\n \n begin cpu cortex-a17\n  cname cortexa17\n  tune flags LDSCHED\n- architecture armv7ve\n- fpu neon-vfpv4\n+ architecture armv7ve+simd\n  option nofp remove ALL_FP\n  costs cortex_a12\n end cpu cortex-a17\n@@ -1107,16 +1085,14 @@ end cpu cortex-r4\n begin cpu cortex-r4f\n  cname cortexr4f\n  tune flags LDSCHED\n- architecture armv7-r\n- fpu vfpv3-d16\n+ architecture armv7-r+fp\n  costs cortex\n end cpu cortex-r4f\n \n begin cpu cortex-r5\n  cname cortexr5\n  tune flags LDSCHED\n- architecture armv7-r+idiv\n- fpu vfpv3-d16\n+ architecture armv7-r+idiv+fp\n  option nofp.dp remove FP_DBL\n  option nofp remove ALL_FP\n  costs cortex\n@@ -1125,8 +1101,7 @@ end cpu cortex-r5\n begin cpu cortex-r7\n  cname cortexr7\n  tune flags LDSCHED\n- architecture armv7-r+idiv\n- fpu vfpv3-d16\n+ architecture armv7-r+idiv+fp\n  option nofp remove ALL_FP\n  costs cortex\n end cpu cortex-r7\n@@ -1135,18 +1110,16 @@ begin cpu cortex-r8\n  cname cortexr8\n  tune for cortex-r7\n  tune flags LDSCHED\n- architecture armv7-r+idiv\n- fpu vfpv3-d16\n+ architecture armv7-r+idiv+fp\n  option nofp remove ALL_FP\n  costs cortex\n end cpu cortex-r8\n \n begin cpu cortex-m7\n  cname cortexm7\n  tune flags LDSCHED\n- architecture armv7e-m\n+ architecture armv7e-m+fp.dp\n  isa quirk_no_volatile_ce\n- fpu fpv5-d16\n  option nofp.dp remove FP_DBL\n  option nofp remove ALL_FP\n  costs cortex_m7\n@@ -1155,8 +1128,7 @@ end cpu cortex-m7\n begin cpu cortex-m4\n  cname cortexm4\n  tune flags LDSCHED\n- architecture armv7e-m\n- fpu fpv4-sp-d16\n+ architecture armv7e-m+fp\n  option nofp remove ALL_FP\n  costs v7m\n end cpu cortex-m4\n@@ -1181,8 +1153,7 @@ begin cpu cortex-a15.cortex-a7\n  cname cortexa15cortexa7\n  tune for cortex-a7\n  tune flags LDSCHED\n- architecture armv7ve\n- fpu neon-vfpv4\n+ architecture armv7ve+simd\n  option nofp remove ALL_FP\n  costs cortex_a15\n end cpu cortex-a15.cortex-a7\n@@ -1191,8 +1162,7 @@ begin cpu cortex-a17.cortex-a7\n  cname cortexa17cortexa7\n  tune for cortex-a7\n  tune flags LDSCHED\n- architecture armv7ve\n- fpu neon-vfpv4\n+ architecture armv7ve+simd\n  option nofp remove ALL_FP\n  costs cortex_a12\n end cpu cortex-a17.cortex-a7\n@@ -1203,8 +1173,7 @@ begin cpu cortex-a32\n  cname cortexa32\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  option nofp remove ALL_FP\n  costs cortex_a35\n@@ -1214,8 +1183,7 @@ begin cpu cortex-a35\n  cname cortexa35\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  option nofp remove ALL_FP\n  costs cortex_a35\n@@ -1224,8 +1192,7 @@ end cpu cortex-a35\n begin cpu cortex-a53\n  cname cortexa53\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  option nofp remove ALL_FP\n  costs cortex_a53\n@@ -1234,8 +1201,7 @@ end cpu cortex-a53\n begin cpu cortex-a57\n  cname cortexa57\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a57\n end cpu cortex-a57\n@@ -1244,8 +1210,7 @@ begin cpu cortex-a72\n  cname cortexa72\n  tune for cortex-a57\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a57\n end cpu cortex-a72\n@@ -1254,25 +1219,22 @@ begin cpu cortex-a73\n  cname cortexa73\n  tune for cortex-a57\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a73\n end cpu cortex-a73\n \n begin cpu exynos-m1\n  cname exynosm1\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs exynosm1\n end cpu exynos-m1\n \n begin cpu xgene1\n  tune flags LDSCHED\n- architecture armv8-a\n- fpu neon-fp-armv8\n+ architecture armv8-a+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs xgene1\n end cpu xgene1\n@@ -1282,8 +1244,7 @@ begin cpu cortex-a57.cortex-a53\n  cname cortexa57cortexa53\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a57\n end cpu cortex-a57.cortex-a53\n@@ -1292,8 +1253,7 @@ begin cpu cortex-a72.cortex-a53\n  cname cortexa72cortexa53\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a57\n end cpu cortex-a72.cortex-a53\n@@ -1302,8 +1262,7 @@ begin cpu cortex-a73.cortex-a35\n  cname cortexa73cortexa35\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a73\n end cpu cortex-a73.cortex-a35\n@@ -1312,8 +1271,7 @@ begin cpu cortex-a73.cortex-a53\n  cname cortexa73cortexa53\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8-a+crc\n- fpu neon-fp-armv8\n+ architecture armv8-a+crc+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a73\n end cpu cortex-a73.cortex-a53\n@@ -1324,8 +1282,7 @@ begin cpu cortex-a55\n  cname cortexa55\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8.2-a+fp16+dotprod\n- fpu neon-fp-armv8\n+ architecture armv8.2-a+fp16+dotprod+simd\n  option crypto add FP_ARMv8 CRYPTO\n  option nofp remove ALL_FP\n  costs cortex_a53\n@@ -1335,8 +1292,7 @@ begin cpu cortex-a75\n  cname cortexa75\n  tune for cortex-a57\n  tune flags LDSCHED\n- architecture armv8.2-a+fp16+dotprod\n- fpu neon-fp-armv8\n+ architecture armv8.2-a+fp16+dotprod+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a73\n end cpu cortex-a75\n@@ -1345,8 +1301,7 @@ begin cpu cortex-a76\n  cname cortexa76\n  tune for cortex-a57\n  tune flags LDSCHED\n- architecture armv8.2-a+fp16+dotprod\n- fpu neon-fp-armv8\n+ architecture armv8.2-a+fp16+dotprod+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a57\n end cpu cortex-a76\n@@ -1356,8 +1311,7 @@ begin cpu cortex-a75.cortex-a55\n  cname cortexa75cortexa55\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8.2-a+fp16+dotprod\n- fpu neon-fp-armv8\n+ architecture armv8.2-a+fp16+dotprod+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a73\n end cpu cortex-a75.cortex-a55\n@@ -1366,8 +1320,7 @@ begin cpu cortex-a76.cortex-a55\n  cname cortexa76cortexa55\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8.2-a+fp16+dotprod\n- fpu neon-fp-armv8\n+ architecture armv8.2-a+fp16+dotprod+simd\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a57\n end cpu cortex-a76.cortex-a55\n@@ -1383,8 +1336,7 @@ end cpu cortex-m23\n begin cpu cortex-m33\n  cname cortexm33\n  tune flags LDSCHED\n- architecture armv8-m.main+dsp\n- fpu fpv5-sp-d16\n+ architecture armv8-m.main+dsp+fp\n  option nofp remove ALL_FP\n  option nodsp remove armv7em\n  costs v7m\n@@ -1395,7 +1347,6 @@ begin cpu cortex-r52\n  cname cortexr52\n  tune flags LDSCHED\n  architecture armv8-r+crc+simd\n- fpu neon-fp-armv8\n  option nofp.dp remove FP_DBL ALL_SIMD\n  costs cortex\n end cpu cortex-r52"}, {"sha": "4111680531e92d9d366683633eb4207d4d86a9dc", "filename": "gcc/config/arm/parsecpu.awk", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391/gcc%2Fconfig%2Farm%2Fparsecpu.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391/gcc%2Fconfig%2Farm%2Fparsecpu.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fparsecpu.awk?ref=dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391", "patch": "@@ -289,9 +289,6 @@ function gen_comm_data () {\n \t    }\n \t    all_isa_bits = all_isa_bits \" \" arch_opt_isa[feats[1],feats[m]]\n \t}\n-\tif (cpus[n] in cpu_fpu) {\n-\t    all_isa_bits = all_isa_bits \" \" fpu_isa[cpu_fpu[cpus[n]]]\n-\t}\n \tif (cpus[n] in cpu_isa) {\n \t    all_isa_bits = all_isa_bits \" \" cpu_isa[cpus[n]]\n \t}\n@@ -662,13 +659,6 @@ BEGIN {\n     parse_ok = 1\n }\n \n-/^[ \t]*fpu / {\n-    if (NF != 2) fatal(\"syntax: fpu <fpu-name>\")\n-    if (cpu_name == \"\") fatal(\"\\\"fpu\\\" outside of cpu block\")\n-    cpu_fpu[cpu_name] = $2\n-    parse_ok = 1\n-}\n-\n /^[ \t]*isa / {\n     if (NF < 2) fatal(\"syntax: isa <feature-or-fgroup> [<feature-or-fgroup>]*\")\n     flags=\"\""}]}