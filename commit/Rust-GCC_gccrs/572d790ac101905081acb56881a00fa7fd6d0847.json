{"sha": "572d790ac101905081acb56881a00fa7fd6d0847", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcyZDc5MGFjMTAxOTA1MDgxYWNiNTY4ODFhMDBmYTdmZDZkMDg0Nw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-10-05T13:54:11Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-10-05T13:54:11Z"}, "message": "make build_uses store tree * instead of tree\n\ngcc/ChangeLog:\n\n2015-10-05  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* tree-ssa-operands.c (build_uses): store tree * instead of\n\ttree.\n\t(finalize_ssa_uses): Adjust.\n\t(append_use): Likewise.\n\t(verify_ssa_operands): Likewise.\n\nFrom-SVN: r228484", "tree": {"sha": "66169962148ba5a96b8e6efcc162fa9477a8209d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66169962148ba5a96b8e6efcc162fa9477a8209d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/572d790ac101905081acb56881a00fa7fd6d0847", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572d790ac101905081acb56881a00fa7fd6d0847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/572d790ac101905081acb56881a00fa7fd6d0847", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572d790ac101905081acb56881a00fa7fd6d0847/comments", "author": null, "committer": null, "parents": [{"sha": "73463c5e847ca23a8f51ef5b8ad8a19c99696799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73463c5e847ca23a8f51ef5b8ad8a19c99696799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73463c5e847ca23a8f51ef5b8ad8a19c99696799"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "754668dd6a737a6c7907c9aa9501bd376b905b6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572d790ac101905081acb56881a00fa7fd6d0847/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572d790ac101905081acb56881a00fa7fd6d0847/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=572d790ac101905081acb56881a00fa7fd6d0847", "patch": "@@ -1,3 +1,11 @@\n+2015-10-05  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* tree-ssa-operands.c (build_uses): store tree * instead of\n+\ttree.\n+\t(finalize_ssa_uses): Adjust.\n+\t(append_use): Likewise.\n+\t(verify_ssa_operands): Likewise.\n+\n 2015-10-05  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* real.h (build_real_truncate): Declare."}, {"sha": "544e9dfe080f65dc9968c1ae9be130a4c708ac24", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572d790ac101905081acb56881a00fa7fd6d0847/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572d790ac101905081acb56881a00fa7fd6d0847/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=572d790ac101905081acb56881a00fa7fd6d0847", "patch": "@@ -108,7 +108,7 @@ along with GCC; see the file COPYING3.  If not see\n #define opf_address_taken (1 << 5)\n \n /* Array for building all the use operands.  */\n-static vec<tree> build_uses;\n+static vec<tree *> build_uses;\n \n /* The built VDEF operand.  */\n static tree build_vdef;\n@@ -359,8 +359,7 @@ finalize_ssa_defs (struct function *fn, gimple *stmt)\n }\n \n \n-/* Takes elements from build_uses and turns them into use operands of STMT.\n-   TODO -- Make build_uses vec of tree *.  */\n+/* Takes elements from build_uses and turns them into use operands of STMT.  */\n \n static inline void\n finalize_ssa_uses (struct function *fn, gimple *stmt)\n@@ -379,7 +378,7 @@ finalize_ssa_uses (struct function *fn, gimple *stmt)\n       if (oldvuse != (build_vuse != NULL_TREE\n \t\t      ? build_vuse : build_vdef))\n \tgimple_set_vuse (stmt, NULL_TREE);\n-      build_uses.safe_insert (0, (tree)gimple_vuse_ptr (stmt));\n+      build_uses.safe_insert (0, gimple_vuse_ptr (stmt));\n     }\n \n   new_list.next = NULL;\n@@ -415,7 +414,7 @@ finalize_ssa_uses (struct function *fn, gimple *stmt)\n   /* Now create nodes for all the new nodes.  */\n   for (new_i = 0; new_i < build_uses.length (); new_i++)\n     {\n-      tree *op = (tree *) build_uses[new_i];\n+      tree *op = build_uses[new_i];\n       last = add_use_op (fn, stmt, op, last);\n     }\n \n@@ -463,7 +462,7 @@ start_ssa_stmt_operands (void)\n static inline void\n append_use (tree *use_p)\n {\n-  build_uses.safe_push ((tree) use_p);\n+  build_uses.safe_push (use_p);\n }\n \n \n@@ -964,7 +963,7 @@ verify_ssa_operands (struct function *fn, gimple *stmt)\n   def_operand_p def_p;\n   ssa_op_iter iter;\n   unsigned i;\n-  tree use, def;\n+  tree def;\n   bool volatile_p = gimple_has_volatile_ops (stmt);\n \n   /* build_ssa_operands w/o finalizing them.  */\n@@ -990,7 +989,7 @@ verify_ssa_operands (struct function *fn, gimple *stmt)\n       return true;\n     }\n \n-  use = gimple_vuse (stmt);\n+  tree use = gimple_vuse (stmt);\n   if (use\n       && TREE_CODE (use) == SSA_NAME)\n     use = SSA_NAME_VAR (use);\n@@ -1009,11 +1008,12 @@ verify_ssa_operands (struct function *fn, gimple *stmt)\n \n   FOR_EACH_SSA_USE_OPERAND (use_p, stmt, iter, SSA_OP_USE)\n     {\n-      FOR_EACH_VEC_ELT (build_uses, i, use)\n+      tree *op;\n+      FOR_EACH_VEC_ELT (build_uses, i, op)\n \t{\n-\t  if (use_p->use == (tree *)use)\n+\t  if (use_p->use == op)\n \t    {\n-\t      build_uses[i] = NULL_TREE;\n+\t      build_uses[i] = NULL;\n \t      break;\n \t    }\n \t}\n@@ -1024,11 +1024,13 @@ verify_ssa_operands (struct function *fn, gimple *stmt)\n \t  return true;\n \t}\n     }\n-  FOR_EACH_VEC_ELT (build_uses, i, use)\n-    if (use != NULL_TREE)\n+\n+  tree *op;\n+  FOR_EACH_VEC_ELT (build_uses, i, op)\n+    if (op != NULL)\n       {\n \terror (\"use operand missing for stmt\");\n-\tdebug_generic_expr (*(tree *)use);\n+\tdebug_generic_expr (*op);\n \treturn true;\n       }\n "}]}