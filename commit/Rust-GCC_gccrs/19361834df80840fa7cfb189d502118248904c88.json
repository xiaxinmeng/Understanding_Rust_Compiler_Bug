{"sha": "19361834df80840fa7cfb189d502118248904c88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkzNjE4MzRkZjgwODQwZmE3Y2ZiMTg5ZDUwMjExODI0ODkwNGM4OA==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2004-10-05T21:51:13Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2004-10-05T21:51:13Z"}, "message": "re PR bootstrap/17817 (restage[1,2,3] and then bootstrap no longer cause build dir to be rebuilt)\n\n2004-10-05  Kelley Cook  <kcook@gcc.gnu.org>\n\n\tPR bootstrap/17817\n\t* Makefile.in: Stage the build directory too.\n\nFrom-SVN: r88577", "tree": {"sha": "df4397e13a0ec23d2d5b89e0d52a1f401e0dc767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df4397e13a0ec23d2d5b89e0d52a1f401e0dc767"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19361834df80840fa7cfb189d502118248904c88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19361834df80840fa7cfb189d502118248904c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19361834df80840fa7cfb189d502118248904c88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19361834df80840fa7cfb189d502118248904c88/comments", "author": null, "committer": null, "parents": [{"sha": "cdaf9d33a7f1543a29e5451ca8c83fe6bdfeb210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdaf9d33a7f1543a29e5451ca8c83fe6bdfeb210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdaf9d33a7f1543a29e5451ca8c83fe6bdfeb210"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "327be6c7d6fda3e3d1a4d385440457fd967c1ebe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19361834df80840fa7cfb189d502118248904c88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19361834df80840fa7cfb189d502118248904c88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19361834df80840fa7cfb189d502118248904c88", "patch": "@@ -1,3 +1,8 @@\n+2004-10-05  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\tPR bootstrap/17817\n+\t* Makefile.in: Stage the build directory too.\n+\n 2004-10-05  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* config/frv/frv.h (LEGITIMIZE_ADDRESS): New."}, {"sha": "2ac670f1d3aed067e2a9c6446751036c09f8cf71", "filename": "gcc/Makefile.in", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19361834df80840fa7cfb189d502118248904c88/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19361834df80840fa7cfb189d502118248904c88/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=19361834df80840fa7cfb189d502118248904c88", "patch": "@@ -119,7 +119,7 @@ T_ADAFLAGS =\n # See below for how to change them for certain systems.\n \n # List of language subdirectories.\n-SUBDIRS =@subdirs@\n+SUBDIRS =@subdirs@ build\n \n # Selection of languages to be made.\n CONFIG_LANGUAGES = @all_languages@\n@@ -3899,6 +3899,7 @@ stage1-start:\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage1/specs\n \t-mv $(STAGEMOVESTUFF) stage1\n+\t-mv build/* stage1/build\n \t-cp -p $(STAGECOPYSTUFF) stage1\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n@@ -3937,6 +3938,7 @@ stage2-start:\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage2/specs\n \t-mv $(STAGEMOVESTUFF) stage2\n+\t-mv build/* stage2/build\n \t-cp -p $(STAGECOPYSTUFF) stage2\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n@@ -3971,6 +3973,7 @@ stage3-start:\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage3/specs\n \t-mv $(STAGEMOVESTUFF) stage3\n+\t-mv build/* stage3/build\n \t-cp -p $(STAGECOPYSTUFF) stage3\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n@@ -4005,6 +4008,7 @@ stage4-start:\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage4/specs\n \t-mv $(STAGEMOVESTUFF) stage4\n+\t-mv build/* stage4/build\n \t-cp -p $(STAGECOPYSTUFF) stage4\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n@@ -4037,6 +4041,7 @@ stageprofile-start:\n \t   if [ -d stageprofile/$$dir ] ; then true ; else mkdir stageprofile/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGEMOVESTUFF) stageprofile\n+\t-mv build/* stageprofile/build\n \t-cp -p $(STAGECOPYSTUFF) stageprofile\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n@@ -4069,6 +4074,7 @@ stagefeedback-start:\n \t   if [ -d stagefeedback/$$dir ] ; then true ; else mkdir stagefeedback/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGEMOVESTUFF) stagefeedback\n+\t-mv build/* stagefeedback/build\n \t-cp -p $(STAGECOPYSTUFF) stagefeedback\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly."}]}