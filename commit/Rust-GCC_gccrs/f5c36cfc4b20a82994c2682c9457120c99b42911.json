{"sha": "f5c36cfc4b20a82994c2682c9457120c99b42911", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVjMzZjZmM0YjIwYTgyOTk0YzI2ODJjOTQ1NzEyMGM5OWI0MjkxMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2013-11-06T21:51:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2013-11-06T21:51:41Z"}, "message": "Use 64-bit system types for x86-64\n\n\tPR sanitizer/59018\n\t* sanitizer_common/sanitizer_platform_limits_linux.cc\n\t(struct_kernel_stat64_sz): Initialize to 0 if __x86_64__ is\n\tdefined.\n\t* sanitizer_common/sanitizer_platform_limits_posix.h\n\t(__sanitizer_dirent): Use 64-bit d_ino/d_off if __x86_64__ is\n\tdefined.\n\t(__sanitizer___kernel_uid_t): Typedef as unsigned if __x86_64__\n\tis defined.\n\t(__sanitizer___kernel_gid_t): Likewise.\n\t(__sanitizer___kernel_off_t): Typedef as long long if __x86_64__\n\tis defined.\n\nFrom-SVN: r204482", "tree": {"sha": "98d0382ba035de295335efe7490726b857c40956", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98d0382ba035de295335efe7490726b857c40956"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5c36cfc4b20a82994c2682c9457120c99b42911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c36cfc4b20a82994c2682c9457120c99b42911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5c36cfc4b20a82994c2682c9457120c99b42911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c36cfc4b20a82994c2682c9457120c99b42911/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e45de14ec7cfe457637bfea7ad214ab6158eefe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45de14ec7cfe457637bfea7ad214ab6158eefe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e45de14ec7cfe457637bfea7ad214ab6158eefe5"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "03b45e8fadde52ff7bcc9515172200d04fd00ed8", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c36cfc4b20a82994c2682c9457120c99b42911/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c36cfc4b20a82994c2682c9457120c99b42911/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=f5c36cfc4b20a82994c2682c9457120c99b42911", "patch": "@@ -1,3 +1,18 @@\n+2013-11-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR sanitizer/59018\n+\t* sanitizer_common/sanitizer_platform_limits_linux.cc\n+\t(struct_kernel_stat64_sz): Initialize to 0 if __x86_64__ is\n+\tdefined.\n+\t* sanitizer_common/sanitizer_platform_limits_posix.h\n+\t(__sanitizer_dirent): Use 64-bit d_ino/d_off if __x86_64__ is\n+\tdefined.\n+\t(__sanitizer___kernel_uid_t): Typedef as unsigned if __x86_64__\n+\tis defined.\n+\t(__sanitizer___kernel_gid_t): Likewise.\n+\t(__sanitizer___kernel_off_t): Typedef as long long if __x86_64__\n+\tis defined.\n+\n 2013-11-05  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR sanitizer/59018"}, {"sha": "98702436c4f99566266cbe9e5d06e6aa4a28d561", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c36cfc4b20a82994c2682c9457120c99b42911/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c36cfc4b20a82994c2682c9457120c99b42911/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc?ref=f5c36cfc4b20a82994c2682c9457120c99b42911", "patch": "@@ -31,7 +31,7 @@ namespace __sanitizer {\n   unsigned struct_io_event_sz = sizeof(struct io_event);\n   unsigned struct_iocb_sz = sizeof(struct iocb);\n \n-#ifndef _LP64\n+#if !defined(_LP64) && !defined(__x86_64__)\n   unsigned struct_kernel_stat64_sz = sizeof(struct stat64);\n #else\n   unsigned struct_kernel_stat64_sz = 0;"}, {"sha": "67c459caabb3091c6293ab44cc103e98d5d6736c", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c36cfc4b20a82994c2682c9457120c99b42911/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c36cfc4b20a82994c2682c9457120c99b42911/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h?ref=f5c36cfc4b20a82994c2682c9457120c99b42911", "patch": "@@ -133,7 +133,7 @@ namespace __sanitizer {\n     unsigned short d_reclen;\n     // more fields that we don't care about\n   };\n-#elif SANITIZER_ANDROID\n+#elif SANITIZER_ANDROID || defined(__x86_64__)\n   struct __sanitizer_dirent {\n     unsigned long long d_ino;\n     unsigned long long d_off;\n@@ -159,16 +159,17 @@ namespace __sanitizer {\n #endif\n \n #if SANITIZER_LINUX\n-#ifdef _LP64\n+#if defined(_LP64) || defined(__x86_64__)\n   typedef unsigned __sanitizer___kernel_uid_t;\n   typedef unsigned __sanitizer___kernel_gid_t;\n+  typedef long long __sanitizer___kernel_off_t;\n #else\n   typedef unsigned short __sanitizer___kernel_uid_t;\n   typedef unsigned short __sanitizer___kernel_gid_t;\n+  typedef long __sanitizer___kernel_off_t;\n #endif\n   typedef unsigned short __sanitizer___kernel_old_uid_t;\n   typedef unsigned short __sanitizer___kernel_old_gid_t;\n-  typedef long __sanitizer___kernel_off_t;\n   typedef long long __sanitizer___kernel_loff_t;\n   typedef struct {\n     unsigned long fds_bits[1024 / (8 * sizeof(long))];"}]}