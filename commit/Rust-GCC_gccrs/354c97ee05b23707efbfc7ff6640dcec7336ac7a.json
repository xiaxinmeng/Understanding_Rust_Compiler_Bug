{"sha": "354c97ee05b23707efbfc7ff6640dcec7336ac7a", "node_id": "C_kwDOANBUbNoAKDM1NGM5N2VlMDViMjM3MDdlZmJmYzdmZjY2NDBkY2VjNzMzNmFjN2E", "commit": {"author": {"name": "YunQiang Su", "email": "yunqiang.su@cipunited.com", "date": "2022-09-21T11:13:03Z"}, "committer": {"name": "YunQiang Su", "email": "yunqiang.su@cipunited.com", "date": "2022-10-25T08:06:20Z"}, "message": "MIPS: fix building on multiarch platform\n\nOn platforms that support multiarch, such as Debian,\nthe filesystem hierarchy doesn't fellow the old Irix style:\n\tlib & lib/<multiarch> for native\n\tlib64 for N64 on N32/O32 systems\n\tlib32 for N32 on N64/O32 systems\n\tlibo32 for O32 on N64/N32 systems\n\nThus we cannot\n #define STANDARD_STARTFILE_PREFIX_1\n #define STANDARD_STARTFILE_PREFIX_2\non N32 or N64 systems, else collect2 won't look for libraries\non /lib/<multiarch>.\n\ngcc/ChangeLog:\n\t* configure.ac: AC_DEFINE(ENABLE_MULTIARCH, 1)\n\t* configure: Regenerated.\n\t* config.in: Regenerated.\n\t* config/mips/mips.h: don't define STANDARD_STARTFILE_PREFIX_1\n\t  if ENABLE_MULTIARCH is defined.\n\t* config/mips/t-linux64: define correct multiarch path when\n\t  multiarch is enabled.", "tree": {"sha": "4c8687c1d9db07128edc44eb14fb11abf43dc355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c8687c1d9db07128edc44eb14fb11abf43dc355"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/354c97ee05b23707efbfc7ff6640dcec7336ac7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354c97ee05b23707efbfc7ff6640dcec7336ac7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/354c97ee05b23707efbfc7ff6640dcec7336ac7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354c97ee05b23707efbfc7ff6640dcec7336ac7a/comments", "author": null, "committer": null, "parents": [{"sha": "19295e8607da2f743368fe6f5708146616aafa91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19295e8607da2f743368fe6f5708146616aafa91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19295e8607da2f743368fe6f5708146616aafa91"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "38ef792bd67123a99eb13bef6e374e5d67d40966", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=354c97ee05b23707efbfc7ff6640dcec7336ac7a", "patch": "@@ -2324,6 +2324,12 @@\n #endif\n \n \n+/* Specify if mutliarch is enabled. */\n+#ifndef USED_FOR_TARGET\n+#undef ENABLE_MULTIARCH\n+#endif\n+\n+\n /* The size of `dev_t', as computed by sizeof. */\n #ifndef USED_FOR_TARGET\n #undef SIZEOF_DEV_T"}, {"sha": "fe7f5b274b972d5dcf844b43af8a6c98f3b8cb95", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=354c97ee05b23707efbfc7ff6640dcec7336ac7a", "patch": "@@ -3427,13 +3427,15 @@ struct GTY(())  machine_function {\n \n /* If we are *not* using multilibs and the default ABI is not ABI_32 we\n    need to change these from /lib and /usr/lib.  */\n+#ifndef ENABLE_MULTIARCH\n #if MIPS_ABI_DEFAULT == ABI_N32\n #define STANDARD_STARTFILE_PREFIX_1 \"/lib32/\"\n #define STANDARD_STARTFILE_PREFIX_2 \"/usr/lib32/\"\n #elif MIPS_ABI_DEFAULT == ABI_64\n #define STANDARD_STARTFILE_PREFIX_1 \"/lib64/\"\n #define STANDARD_STARTFILE_PREFIX_2 \"/usr/lib64/\"\n #endif\n+#endif\n \n /* Load store bonding is not supported by micromips and fix_24k.  The\n    performance can be degraded for those targets.  Hence, do not bond for"}, {"sha": "37d176ea30943ac8e9a11964565fc99366173d7d", "filename": "gcc/config/mips/t-linux64", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfig%2Fmips%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfig%2Fmips%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-linux64?ref=354c97ee05b23707efbfc7ff6640dcec7336ac7a", "patch": "@@ -20,7 +20,26 @@ MULTILIB_OPTIONS = mabi=n32/mabi=32/mabi=64\n MULTILIB_DIRNAMES = n32 32 64\n MIPS_EL = $(if $(filter %el, $(firstword $(subst -, ,$(target)))),el)\n MIPS_SOFT = $(if $(strip $(filter MASK_SOFT_FLOAT_ABI, $(target_cpu_default)) $(filter soft, $(with_float))),soft)\n-MULTILIB_OSDIRNAMES = \\\n+ifeq (yes,$(enable_multiarch))\n+  ifneq (,$(findstring gnuabi64,$(target)))\n+    MULTILIB_OSDIRNAMES = \\\n+\t../lib32$(call if_multiarch,:mips64$(MIPS_EL)-linux-gnuabin32$(MIPS_SOFT)) \\\n+\t../libo32$(call if_multiarch,:mips$(MIPS_EL)-linux-gnu$(MIPS_SOFT)) \\\n+\t../lib$(call if_multiarch,:mips64$(MIPS_EL)-linux-gnuabi64$(MIPS_SOFT))\n+  else ifneq (,$(findstring gnuabin32,$(target)))\n+    MULTILIB_OSDIRNAMES = \\\n+\t../lib$(call if_multiarch,:mips64$(MIPS_EL)-linux-gnuabin32$(MIPS_SOFT)) \\\n+\t../libo32$(call if_multiarch,:mips$(MIPS_EL)-linux-gnu$(MIPS_SOFT)) \\\n+\t../lib64$(call if_multiarch,:mips64$(MIPS_EL)-linux-gnuabi64$(MIPS_SOFT))\n+  else\n+    MULTILIB_OSDIRNAMES = \\\n+\t../lib32$(call if_multiarch,:mips64$(MIPS_EL)-linux-gnuabin32$(MIPS_SOFT)) \\\n+\t../lib$(call if_multiarch,:mips$(MIPS_EL)-linux-gnu$(MIPS_SOFT)) \\\n+\t../lib64$(call if_multiarch,:mips64$(MIPS_EL)-linux-gnuabi64$(MIPS_SOFT))\n+  endif\n+else\n+  MULTILIB_OSDIRNAMES = \\\n \t../lib32$(call if_multiarch,:mips64$(MIPS_EL)-linux-gnuabin32$(MIPS_SOFT)) \\\n \t../lib$(call if_multiarch,:mips$(MIPS_EL)-linux-gnu$(MIPS_SOFT)) \\\n \t../lib64$(call if_multiarch,:mips64$(MIPS_EL)-linux-gnuabi64$(MIPS_SOFT))\n+endif"}, {"sha": "8e3c89b609e535bc3335ab69c42bdaab564dfa6c", "filename": "gcc/configure", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=354c97ee05b23707efbfc7ff6640dcec7336ac7a", "patch": "@@ -7842,6 +7842,10 @@ if test x${enable_multiarch} = xauto; then\n     enable_multiarch=no\n   fi\n fi\n+if test x${enable_multiarch} = xyes; then\n+  $as_echo \"#define ENABLE_MULTIARCH 1\" >>confdefs.h\n+\n+fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for multiarch configuration\" >&5\n $as_echo_n \"checking for multiarch configuration... \" >&6; }\n "}, {"sha": "eb92a37cd4653e36262f5a5c09ea86a29bae5bbc", "filename": "gcc/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354c97ee05b23707efbfc7ff6640dcec7336ac7a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=354c97ee05b23707efbfc7ff6640dcec7336ac7a", "patch": "@@ -887,6 +887,9 @@ if test x${enable_multiarch} = xauto; then\n     enable_multiarch=no\n   fi\n fi\n+if test x${enable_multiarch} = xyes; then\n+  AC_DEFINE(ENABLE_MULTIARCH, 1)\n+fi\n AC_MSG_CHECKING(for multiarch configuration)\n AC_SUBST(enable_multiarch)\n AC_MSG_RESULT($enable_multiarch$ma_msg_suffix)"}]}