{"sha": "85595d1af1aed42d06dfb370f95aa857c13ff5e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU1OTVkMWFmMWFlZDQyZDA2ZGZiMzcwZjk1YWE4NTdjMTNmZjVlMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-29T22:59:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-29T22:59:36Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r627", "tree": {"sha": "dc1ee64a711e25df8bb61a4bcc90d221a0e38895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc1ee64a711e25df8bb61a4bcc90d221a0e38895"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85595d1af1aed42d06dfb370f95aa857c13ff5e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85595d1af1aed42d06dfb370f95aa857c13ff5e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85595d1af1aed42d06dfb370f95aa857c13ff5e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85595d1af1aed42d06dfb370f95aa857c13ff5e1/comments", "author": null, "committer": null, "parents": [{"sha": "55ee1b03a33a5ef8dc393d0f4abfeb02545541ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ee1b03a33a5ef8dc393d0f4abfeb02545541ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ee1b03a33a5ef8dc393d0f4abfeb02545541ed"}], "stats": {"total": 286, "additions": 144, "deletions": 142}, "files": [{"sha": "e48680991a0e4a78ce690dd7b3e637fb7abba107", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 144, "deletions": 142, "changes": 286, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595d1af1aed42d06dfb370f95aa857c13ff5e1/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595d1af1aed42d06dfb370f95aa857c13ff5e1/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=85595d1af1aed42d06dfb370f95aa857c13ff5e1", "patch": "@@ -312,9 +312,6 @@ static unsigned lookup_filename ();\n #ifndef VERSION_ASM_OP\n #define VERSION_ASM_OP\t\t\".version\"\n #endif\n-#ifndef SECTION_ASM_OP\n-#define SECTION_ASM_OP\t\t\".section\"\n-#endif\n #ifndef UNALIGNED_SHORT_ASM_OP\n #define UNALIGNED_SHORT_ASM_OP\t\".2byte\"\n #endif\n@@ -324,11 +321,73 @@ static unsigned lookup_filename ();\n #ifndef DEF_ASM_OP\n #define DEF_ASM_OP\t\t\".set\"\n #endif\n-\n-/* This macro is already used elsewhere and has a published default.  */\n #ifndef ASM_BYTE_OP\n #define ASM_BYTE_OP\t\t\"\\t.byte\"\n #endif\n+\n+/* Pseudo-ops for pushing the current section onto the section stack (and\n+   simultaneously changing to a new section) and for poping back to the\n+   section we were in immediately before this one.  Note that most svr4\n+   assemblers only maintain a one level stack... you can push all the\n+   sections you want, but you can only pop out one level.  (The sparc\n+   svr4 assembler might be an exception to this general rule.)  That's\n+   OK because we only use at most one level of the section stack herein.  */\n+\n+#ifndef PUSHSECTION_ASM_OP\n+#define PUSHSECTION_ASM_OP\t\"\\t.section\"\n+#endif\n+#ifndef POPSECTION_ASM_OP\n+#define POPSECTION_ASM_OP\t\"\\t.previous\"\n+#endif\n+\n+/* The default format used by the ASM_OUTPUT_PUSH_SECTION macro (see below)\n+   to print the PUSHSECTION_ASM_OP and the section name.  The default here\n+   works for almost all svr4 assemblers, except for the sparc, where the\n+   section name must be enclosed in double quotes.  (See sparcv4.h.)  */\n+\n+#ifndef PUSHSECTION_FORMAT\n+#define PUSHSECTION_FORMAT\t\"%s\\t%s\\n\"\n+#endif\n+\n+#ifndef DEBUG_SECTION\n+#define DEBUG_SECTION\t\t\".debug\"\n+#endif\n+#ifndef LINE_SECTION\n+#define LINE_SECTION\t\t\".line\"\n+#endif\n+#ifndef SFNAMES_SECTION\n+#define SFNAMES_SECTION\t\t\".debug_sfnames\"\n+#endif\n+#ifndef SRCINFO_SECTION\n+#define SRCINFO_SECTION\t\t\".debug_srcinfo\"\n+#endif\n+#ifndef MACINFO_SECTION\n+#define MACINFO_SECTION\t\t\".debug_macinfo\"\n+#endif\n+#ifndef PUBNAMES_SECTION\n+#define PUBNAMES_SECTION\t\".debug_pubnames\"\n+#endif\n+#ifndef ARANGES_SECTION\n+#define ARANGES_SECTION\t\t\".debug_aranges\"\n+#endif\n+#ifndef TEXT_SECTION\n+#define TEXT_SECTION\t\t\".text\"\n+#endif\n+#ifndef DATA_SECTION\n+#define DATA_SECTION\t\t\".data\"\n+#endif\n+#ifndef DATA1_SECTION\n+#define DATA1_SECTION\t\t\".data1\"\n+#endif\n+#ifndef RODATA_SECTION\n+#define RODATA_SECTION\t\t\".rodata\"\n+#endif\n+#ifndef RODATA1_SECTION\n+#define RODATA1_SECTION\t\t\".rodata1\"\n+#endif\n+#ifndef BSS_SECTION\n+#define BSS_SECTION\t\t\".bss\"\n+#endif\n \f\n /* Definitions of defaults for formats and names of various special\n    (artificial) labels which may be generated within this file (when\n@@ -482,7 +541,20 @@ static unsigned lookup_filename ();\n    output operations.\n \n    If necessary, these may be overridden from within your tm.h file,\n-   but typically, you should never need to override these.  */\n+   but typically, you shouldn't need to override these.  Two known\n+   exceptions are the ASM_OUTPUT_PUSH_SECTION and ASM_OUTPUT_POP_SECTION\n+   definitions, which need to be somewhat special for a sparc running svr4.\n+*/\n+\n+#ifndef ASM_OUTPUT_PUSH_SECTION\n+#define ASM_OUTPUT_PUSH_SECTION(FILE, SECTION) \\\n+  fprintf ((FILE), PUSHSECTION_FORMAT, PUSHSECTION_ASM_OP, SECTION)\n+#endif\n+\n+#ifndef ASM_OUTPUT_POP_SECTION\n+#define ASM_OUTPUT_POP_SECTION(FILE) \\\n+  fprintf ((FILE), \"%s\\n\", POPSECTION_ASM_OP)\n+#endif\n \n #ifndef ASM_OUTPUT_SOURCE_FILENAME\n #define ASM_OUTPUT_SOURCE_FILENAME(FILE,NAME) \\\n@@ -499,76 +571,6 @@ static unsigned lookup_filename ();\n   } while (0)\n #endif\n \n-#ifndef ASM_DWARF_DEBUG_SECTION\n-#define ASM_DWARF_DEBUG_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.debug\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_LINE_SECTION\n-#define ASM_DWARF_LINE_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.line\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_SFNAMES_SECTION\n-#define ASM_DWARF_SFNAMES_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.debug_sfnames\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_SRCINFO_SECTION\n-#define ASM_DWARF_SRCINFO_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.debug_srcinfo\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_MACINFO_SECTION\n-#define ASM_DWARF_MACINFO_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.debug_macinfo\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_PUBNAMES_SECTION\n-#define ASM_DWARF_PUBNAMES_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.debug_pubnames\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_ARANGES_SECTION\n-#define ASM_DWARF_ARANGES_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.debug_aranges\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_TEXT_SECTION\n-#define ASM_DWARF_TEXT_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.text\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_DATA_SECTION\n-#define ASM_DWARF_DATA_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.data\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_DATA1_SECTION\n-#define ASM_DWARF_DATA1_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.data1\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_RODATA_SECTION\n-#define ASM_DWARF_RODATA_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.rodata\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_RODATA1_SECTION\n-#define ASM_DWARF_RODATA1_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.rodata1\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_BSS_SECTION\n-#define ASM_DWARF_BSS_SECTION(FILE) \\\n-  fprintf ((FILE), \"%s\\t.bss\\n\", SECTION_ASM_OP)\n-#endif\n-\n-#ifndef ASM_DWARF_POP_SECTION\n-#define ASM_DWARF_POP_SECTION(FILE) \\\n-  fprintf ((FILE), \"\\t.previous\\n\")\n-#endif\n-\n #ifndef ASM_OUTPUT_DWARF_DELTA2\n #define ASM_OUTPUT_DWARF_DELTA2(FILE,LABEL1,LABEL2)\t\t\t\\\n  do {\tfprintf ((FILE), \"\\t%s\\t\", UNALIGNED_SHORT_ASM_OP);\t\t\\\n@@ -3698,12 +3700,12 @@ dwarfout_file_scope_decl (decl, set_finalizing)\n \t     defined in this compilation unit.  */\n \n \t  fputc ('\\n', asm_out_file);\n-\t  ASM_DWARF_PUBNAMES_SECTION (asm_out_file);\n+\t  ASM_OUTPUT_PUSH_SECTION (asm_out_file, PUBNAMES_SECTION);\n \t  sprintf (label, PUB_DIE_LABEL_FMT, next_pubname_number);\n \t  ASM_OUTPUT_DWARF_ADDR (asm_out_file, label);\n \t  ASM_OUTPUT_DWARF_STRING (asm_out_file,\n \t\t\t\t   IDENTIFIER_POINTER (DECL_NAME (decl)));\n-\t  ASM_DWARF_POP_SECTION (asm_out_file);\n+\t  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \t}\n \n       break;\n@@ -3733,12 +3735,12 @@ dwarfout_file_scope_decl (decl, set_finalizing)\n \t         defined in this compilation unit.  */\n \n \t      fputc ('\\n', asm_out_file);\n-\t      ASM_DWARF_PUBNAMES_SECTION (asm_out_file);\n+\t      ASM_OUTPUT_PUSH_SECTION (asm_out_file, PUBNAMES_SECTION);\n \t      sprintf (label, PUB_DIE_LABEL_FMT, next_pubname_number);\n \t      ASM_OUTPUT_DWARF_ADDR (asm_out_file, label);\n \t      ASM_OUTPUT_DWARF_STRING (asm_out_file,\n \t\t\t\t       IDENTIFIER_POINTER (DECL_NAME (decl)));\n-\t      ASM_DWARF_POP_SECTION (asm_out_file);\n+\t      ASM_OUTPUT_POP_SECTION (asm_out_file);\n \t    }\n \n \t  if (DECL_INITIAL (decl) == NULL)\n@@ -3747,12 +3749,12 @@ dwarfout_file_scope_decl (decl, set_finalizing)\n \t\t which is tenatively defined in this compilation unit.  */\n \n \t      fputc ('\\n', asm_out_file);\n-\t      ASM_DWARF_ARANGES_SECTION (asm_out_file);\n+\t      ASM_OUTPUT_PUSH_SECTION (asm_out_file, ARANGES_SECTION);\n \t      ASM_OUTPUT_DWARF_ADDR (asm_out_file,\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME (decl)));\n \t      ASM_OUTPUT_DWARF_DATA4 (asm_out_file, \n \t\t\t(unsigned) int_size_in_bytes (TREE_TYPE (decl)));\n-\t      ASM_DWARF_POP_SECTION (asm_out_file);\n+\t      ASM_OUTPUT_POP_SECTION (asm_out_file);\n \t    }\n \t}\n \n@@ -3788,7 +3790,7 @@ dwarfout_file_scope_decl (decl, set_finalizing)\n     }\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_DEBUG_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, DEBUG_SECTION);\n   finalizing = set_finalizing;\n   output_decl (decl, NULL);\n \n@@ -3809,7 +3811,7 @@ dwarfout_file_scope_decl (decl, set_finalizing)\n \n   assert (pending_types == 0);\n \n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   if (TREE_CODE (decl) == FUNCTION_DECL && DECL_INITIAL (decl) != NULL)\n     current_funcdef_number++;\n@@ -3909,14 +3911,14 @@ generate_new_sfname_entry ()\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_SFNAMES_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, SFNAMES_SECTION);\n   sprintf (label, SFNAMES_ENTRY_LABEL_FMT, filename_table[0].number);\n   ASM_OUTPUT_LABEL (asm_out_file, label);\n   ASM_OUTPUT_DWARF_STRING (asm_out_file,\n     \t\t\t   filename_table[0].name\n \t\t\t     ? filename_table[0].name\n \t\t\t     : \"\");\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n }\n \n /* Lookup a filename (in the list of filenames that we know about here in\n@@ -4010,12 +4012,12 @@ generate_srcinfo_entry (line_entry_num, files_entry_num)\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_SRCINFO_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, SRCINFO_SECTION);\n   sprintf (label, LINE_ENTRY_LABEL_FMT, line_entry_num);\n   ASM_OUTPUT_DWARF_DELTA4 (asm_out_file, label, LINE_BEGIN_LABEL);\n   sprintf (label, SFNAMES_ENTRY_LABEL_FMT, files_entry_num);\n   ASM_OUTPUT_DWARF_DELTA4 (asm_out_file, label, SFNAMES_BEGIN_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n }\n \n void\n@@ -4035,7 +4037,7 @@ dwarfout_line (filename, line)\n       ASM_OUTPUT_LABEL (asm_out_file, label);\n \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_LINE_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, LINE_SECTION);\n \n       if (this_file_entry_num != prev_file_entry_num)\n         {\n@@ -4057,7 +4059,7 @@ dwarfout_line (filename, line)\n \t       filename, line);\n       ASM_OUTPUT_DWARF_DATA2 (asm_out_file, 0xffff);\n       ASM_OUTPUT_DWARF_DELTA4 (asm_out_file, label, TEXT_BEGIN_LABEL);\n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n       if (this_file_entry_num != prev_file_entry_num)\n         generate_srcinfo_entry (last_line_entry_num, this_file_entry_num);\n@@ -4073,10 +4075,10 @@ generate_macinfo_entry (type_and_offset, string)\n      register char *string;\n {\n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_MACINFO_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, MACINFO_SECTION);\n   fprintf (asm_out_file, \"\\t%s\\t%s\\n\", UNALIGNED_INT_ASM_OP, type_and_offset);\n   ASM_OUTPUT_DWARF_STRING (asm_out_file, string);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n }\n \n void\n@@ -4186,44 +4188,44 @@ dwarfout_init (asm_out_file, main_input_filename)\n   /* Output a starting label for the .text section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_TEXT_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, TEXT_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, TEXT_BEGIN_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a starting label for the .data section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_DATA_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, DATA_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, DATA_BEGIN_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a starting label for the .data1 section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_DATA1_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, DATA1_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, DATA1_BEGIN_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a starting label for the .rodata section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_RODATA_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, RODATA_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, RODATA_BEGIN_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a starting label for the .rodata1 section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_RODATA1_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, RODATA1_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, RODATA1_BEGIN_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a starting label for the .bss section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_BSS_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, BSS_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, BSS_BEGIN_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   if (debug_info_level >= DINFO_LEVEL_NORMAL)\n     {\n@@ -4232,7 +4234,7 @@ dwarfout_init (asm_out_file, main_input_filename)\n \t referenced by the initial entry in the .debug_srcinfo section.  */\n     \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_SFNAMES_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, SFNAMES_SECTION);\n       ASM_OUTPUT_LABEL (asm_out_file, SFNAMES_BEGIN_LABEL);\n       {\n \tregister char *pwd = getpwd ();\n@@ -4244,7 +4246,7 @@ dwarfout_init (asm_out_file, main_input_filename)\n         ASM_OUTPUT_DWARF_STRING (asm_out_file, dirname);\n         free (dirname);\n       }\n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n     \n       if (debug_info_level >= DINFO_LEVEL_VERBOSE)\n \t{\n@@ -4253,24 +4255,24 @@ dwarfout_init (asm_out_file, main_input_filename)\n \t     TAG_compile_unit DIE.  */\n         \n           fputc ('\\n', asm_out_file);\n-          ASM_DWARF_MACINFO_SECTION (asm_out_file);\n+          ASM_OUTPUT_PUSH_SECTION (asm_out_file, MACINFO_SECTION);\n           ASM_OUTPUT_LABEL (asm_out_file, MACINFO_BEGIN_LABEL);\n-          ASM_DWARF_POP_SECTION (asm_out_file);\n+          ASM_OUTPUT_POP_SECTION (asm_out_file);\n \t}\n \n       /* Generate the initial entry for the .line section.  */\n     \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_LINE_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, LINE_SECTION);\n       ASM_OUTPUT_LABEL (asm_out_file, LINE_BEGIN_LABEL);\n       ASM_OUTPUT_DWARF_DELTA4 (asm_out_file, LINE_END_LABEL, LINE_BEGIN_LABEL);\n       ASM_OUTPUT_DWARF_ADDR (asm_out_file, TEXT_BEGIN_LABEL);\n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n     \n       /* Generate the initial entry for the .debug_srcinfo section.  */\n     \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_SRCINFO_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, SRCINFO_SECTION);\n       ASM_OUTPUT_LABEL (asm_out_file, SRCINFO_BEGIN_LABEL);\n       ASM_OUTPUT_DWARF_ADDR (asm_out_file, LINE_BEGIN_LABEL);\n       ASM_OUTPUT_DWARF_ADDR (asm_out_file, SFNAMES_BEGIN_LABEL);\n@@ -4281,21 +4283,21 @@ dwarfout_init (asm_out_file, main_input_filename)\n #else\n       ASM_OUTPUT_DWARF_DATA4 (asm_out_file, -1);\n #endif\n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n     \n       /* Generate the initial entry for the .debug_pubnames section.  */\n     \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_PUBNAMES_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, PUBNAMES_SECTION);\n       ASM_OUTPUT_DWARF_ADDR (asm_out_file, DEBUG_BEGIN_LABEL);\n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n     \n       /* Generate the initial entry for the .debug_aranges section.  */\n     \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_ARANGES_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, ARANGES_SECTION);\n       ASM_OUTPUT_DWARF_ADDR (asm_out_file, DEBUG_BEGIN_LABEL);\n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n     }\n \n   /* Setup first DIE number == 1.  */\n@@ -4308,10 +4310,10 @@ dwarfout_init (asm_out_file, main_input_filename)\n      compiler was invoked when the given (base) source file was compiled.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_DEBUG_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, DEBUG_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, DEBUG_BEGIN_LABEL);\n   output_die (output_compile_unit_die, main_input_filename);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   fputc ('\\n', asm_out_file);\n }\n@@ -4324,7 +4326,7 @@ dwarfout_finish ()\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_DEBUG_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, DEBUG_SECTION);\n \n   /* Mark the end of the chain of siblings which represent all file-scope\n      declarations in this compilation unit.  */\n@@ -4358,71 +4360,71 @@ dwarfout_finish ()\n \n   sprintf (label, DIE_BEGIN_LABEL_FMT, NEXT_DIE_NUM);\n   ASM_OUTPUT_LABEL (asm_out_file, label);\t/* should be ..D2 */\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a terminator label for the .text section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_TEXT_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, TEXT_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, TEXT_END_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a terminator label for the .data section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_DATA_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, DATA_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, DATA_END_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a terminator label for the .data1 section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_DATA1_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, DATA1_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, DATA1_END_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a terminator label for the .rodata section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_RODATA_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, RODATA_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, RODATA_END_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a terminator label for the .rodata1 section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_RODATA1_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, RODATA1_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, RODATA1_END_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   /* Output a terminator label for the .bss section.  */\n \n   fputc ('\\n', asm_out_file);\n-  ASM_DWARF_BSS_SECTION (asm_out_file);\n+  ASM_OUTPUT_PUSH_SECTION (asm_out_file, BSS_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, BSS_END_LABEL);\n-  ASM_DWARF_POP_SECTION (asm_out_file);\n+  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   if (debug_info_level >= DINFO_LEVEL_NORMAL)\n     {\n       /* Output a terminating entry for the .line section.  */\n     \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_LINE_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, LINE_SECTION);\n       ASM_OUTPUT_LABEL (asm_out_file, LINE_LAST_ENTRY_LABEL);\n       ASM_OUTPUT_DWARF_DATA4 (asm_out_file, 0);\n       ASM_OUTPUT_DWARF_DATA2 (asm_out_file, 0xffff);\n       ASM_OUTPUT_DWARF_DELTA4 (asm_out_file, TEXT_END_LABEL, TEXT_BEGIN_LABEL);\n       ASM_OUTPUT_LABEL (asm_out_file, LINE_END_LABEL);\n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n     \n       /* Output a terminating entry for the .debug_srcinfo section.  */\n     \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_SRCINFO_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, SRCINFO_SECTION);\n       ASM_OUTPUT_DWARF_DELTA4 (asm_out_file,\n \t\t\t       LINE_LAST_ENTRY_LABEL, LINE_BEGIN_LABEL);\n       ASM_OUTPUT_DWARF_DATA4 (asm_out_file, -1);\n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n       if (debug_info_level >= DINFO_LEVEL_VERBOSE)\n \t{\n@@ -4431,19 +4433,19 @@ dwarfout_finish ()\n \t  dwarfout_resume_previous_source_file (0);\n \n \t  fputc ('\\n', asm_out_file);\n-\t  ASM_DWARF_MACINFO_SECTION (asm_out_file);\n+\t  ASM_OUTPUT_PUSH_SECTION (asm_out_file, MACINFO_SECTION);\n \t  ASM_OUTPUT_DWARF_DATA4 (asm_out_file, 0);\n \t  ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n-\t  ASM_DWARF_POP_SECTION (asm_out_file);\n+\t  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \t}\n     \n       /* Generate the terminating entry for the .debug_pubnames section.  */\n     \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_PUBNAMES_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, PUBNAMES_SECTION);\n       ASM_OUTPUT_DWARF_DATA4 (asm_out_file, 0);\n       ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n     \n       /* Generate the terminating entries for the .debug_aranges section.\n \n@@ -4460,7 +4462,7 @@ dwarfout_finish ()\n       */\n     \n       fputc ('\\n', asm_out_file);\n-      ASM_DWARF_ARANGES_SECTION (asm_out_file);\n+      ASM_OUTPUT_PUSH_SECTION (asm_out_file, ARANGES_SECTION);\n \n       ASM_OUTPUT_DWARF_ADDR (asm_out_file, TEXT_BEGIN_LABEL);\n       ASM_OUTPUT_DWARF_DELTA4 (asm_out_file, TEXT_END_LABEL, TEXT_BEGIN_LABEL);\n@@ -4486,7 +4488,7 @@ dwarfout_finish ()\n       ASM_OUTPUT_DWARF_DATA4 (asm_out_file, 0);\n       ASM_OUTPUT_DWARF_DATA4 (asm_out_file, 0);\n \n-      ASM_DWARF_POP_SECTION (asm_out_file);\n+      ASM_OUTPUT_POP_SECTION (asm_out_file);\n     }\n }\n "}]}