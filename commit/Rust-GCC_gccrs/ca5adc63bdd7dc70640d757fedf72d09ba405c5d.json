{"sha": "ca5adc63bdd7dc70640d757fedf72d09ba405c5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E1YWRjNjNiZGQ3ZGM3MDY0MGQ3NTdmZWRmNzJkMDliYTQwNWM1ZA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2001-02-12T19:47:11Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2001-02-12T19:47:11Z"}, "message": "rs6000.c (rs6000_float_const): Remove warning.\n\n\t* config/rs6000/rs6000.c (rs6000_float_const): Remove warning.\n\t(setup_incoming_varargs): Remove warning.\n\n\t* config/rs6000/rs6000.c (validate_condition_mode): When\n\tflag_fast_math, allow floating-point conditionals to be reversed.\n\t(rs6000_generate_compare): When flag_fast_math, don't generate\n\tcror operations for FP conditionals.\n\nFrom-SVN: r39610", "tree": {"sha": "740b366956af828d9ed97f4d3c2c861bc6db7031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/740b366956af828d9ed97f4d3c2c861bc6db7031"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca5adc63bdd7dc70640d757fedf72d09ba405c5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5adc63bdd7dc70640d757fedf72d09ba405c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5adc63bdd7dc70640d757fedf72d09ba405c5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5adc63bdd7dc70640d757fedf72d09ba405c5d/comments", "author": null, "committer": null, "parents": [{"sha": "c36ae96c0c4883dc8e36e1b58336ae89a8dcc2ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36ae96c0c4883dc8e36e1b58336ae89a8dcc2ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c36ae96c0c4883dc8e36e1b58336ae89a8dcc2ad"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "98e0a9f5b46ff2dada775f82399db319f7c22163", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca5adc63bdd7dc70640d757fedf72d09ba405c5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca5adc63bdd7dc70640d757fedf72d09ba405c5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca5adc63bdd7dc70640d757fedf72d09ba405c5d", "patch": "@@ -1,5 +1,13 @@\n 2001-02-12  Geoffrey Keating  <geoffk@redhat.com>\n \n+\t* config/rs6000/rs6000.c (rs6000_float_const): Remove warning.\n+\t(setup_incoming_varargs): Remove warning.\n+\n+\t* config/rs6000/rs6000.c (validate_condition_mode): When\n+\tflag_fast_math, allow floating-point conditionals to be reversed.\n+\t(rs6000_generate_compare): When flag_fast_math, don't generate\n+\tcror operations for FP conditionals.\n+\n \t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Handle\n \t-mcall-i960.\n \t(ASM_SPEC): Likewise."}, {"sha": "5f14dcdd1dc3523a6b3655a822372f446bb1a990", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca5adc63bdd7dc70640d757fedf72d09ba405c5d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca5adc63bdd7dc70640d757fedf72d09ba405c5d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ca5adc63bdd7dc70640d757fedf72d09ba405c5d", "patch": "@@ -471,7 +471,8 @@ rs6000_float_const (string, mode)\n      const char *string;\n      enum machine_mode mode;\n {\n-  REAL_VALUE_TYPE value = REAL_VALUE_ATOF (string, mode);\n+  REAL_VALUE_TYPE value;\n+  value = REAL_VALUE_ATOF (string, mode);\n   return immed_real_const_1 (value, mode);\n }\n \f\n@@ -2206,7 +2207,7 @@ setup_incoming_varargs (cum, mode, type, pretend_size, no_rtl)\n {\n   CUMULATIVE_ARGS next_cum;\n   int reg_size = TARGET_32BIT ? 4 : 8;\n-  rtx save_area, mem;\n+  rtx save_area = NULL_RTX, mem;\n   int first_reg_offset, set;\n \n   if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n@@ -3237,8 +3238,9 @@ validate_condition_mode (code, mode)\n \t  || code == UNGE || code == UNLE))\n     abort();\n   \n-  /* These should never be generated.  */\n+  /* These should never be generated except for fast_math.  */\n   if (mode == CCFPmode\n+      && ! flag_fast_math\n       && (code == LE || code == GE\n \t  || code == UNEQ || code == LTGT\n \t  || code == UNGT || code == UNLT))\n@@ -4451,8 +4453,10 @@ rs6000_generate_compare (code)\n \t\t\t\t\t   rs6000_compare_op0, \n \t\t\t\t\t   rs6000_compare_op1)));\n   \n-  /* Some kinds of FP comparisons need an OR operation.  */\n+  /* Some kinds of FP comparisons need an OR operation;\n+     except that for fast_math we don't bother.  */\n   if (rs6000_compare_fp_p\n+      && ! flag_fast_math\n       && (code == LE || code == GE\n \t  || code == UNEQ || code == LTGT\n \t  || code == UNGT || code == UNLT))"}]}