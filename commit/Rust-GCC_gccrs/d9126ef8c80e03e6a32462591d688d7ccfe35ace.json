{"sha": "d9126ef8c80e03e6a32462591d688d7ccfe35ace", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkxMjZlZjhjODBlMDNlNmEzMjQ2MjU5MWQ2ODhkN2NjZmUzNWFjZQ==", "commit": {"author": {"name": "Joel Sherrill", "email": "joel.sherrill@oarcorp.com", "date": "2008-04-22T14:15:04Z"}, "committer": {"name": "Joel Sherrill", "email": "joel@gcc.gnu.org", "date": "2008-04-22T14:15:04Z"}, "message": "s-osinte-rtems.adb: Add sigalstack function.\n\n2008-04-22  Joel Sherrill <joel.sherrill@oarcorp.com>\n\n\t* s-osinte-rtems.adb: Add sigalstack function.\n\t* s-osinte-rtems.ads: Add SO_ONSTACK and sigalstack\n\tfunction. Add Alternate_Stack and Alternate_Stack_Size.\n\tAdd missing process_shared field to pthread_condattr_t\n\tand change ss_low_priority to int from timespec.\n\nFrom-SVN: r134560", "tree": {"sha": "d6c67a47010f336cbd4425858bfcadad62f1e183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6c67a47010f336cbd4425858bfcadad62f1e183"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9126ef8c80e03e6a32462591d688d7ccfe35ace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9126ef8c80e03e6a32462591d688d7ccfe35ace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9126ef8c80e03e6a32462591d688d7ccfe35ace", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9126ef8c80e03e6a32462591d688d7ccfe35ace/comments", "author": {"login": "joelsherrill", "id": 183688, "node_id": "MDQ6VXNlcjE4MzY4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/183688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelsherrill", "html_url": "https://github.com/joelsherrill", "followers_url": "https://api.github.com/users/joelsherrill/followers", "following_url": "https://api.github.com/users/joelsherrill/following{/other_user}", "gists_url": "https://api.github.com/users/joelsherrill/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelsherrill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelsherrill/subscriptions", "organizations_url": "https://api.github.com/users/joelsherrill/orgs", "repos_url": "https://api.github.com/users/joelsherrill/repos", "events_url": "https://api.github.com/users/joelsherrill/events{/privacy}", "received_events_url": "https://api.github.com/users/joelsherrill/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b4603fac213fa9dd3a8a82464618c2ca25f8148", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4603fac213fa9dd3a8a82464618c2ca25f8148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b4603fac213fa9dd3a8a82464618c2ca25f8148"}], "stats": {"total": 60, "additions": 52, "deletions": 8}, "files": [{"sha": "0cf552efba789392909b5885c87d717f5cf59895", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9126ef8c80e03e6a32462591d688d7ccfe35ace/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9126ef8c80e03e6a32462591d688d7ccfe35ace/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d9126ef8c80e03e6a32462591d688d7ccfe35ace", "patch": "@@ -1,3 +1,11 @@\n+2008-04-22  Joel Sherrill <joel.sherrill@oarcorp.com>\n+\n+\t* s-osinte-rtems.adb: Add sigalstack function.\n+\t* s-osinte-rtems.ads: Add SO_ONSTACK and sigalstack\n+\tfunction. Add Alternate_Stack and Alternate_Stack_Size.\n+\tAdd missing process_shared field to pthread_condattr_t\n+\tand change ss_low_priority to int from timespec.\n+\n 2008-04-22  Samuel Tardieu  <sam@rfc1149.net>\n \n \t* i-forbla.adb: Link against -llapack and -lblas by default"}, {"sha": "1e4efbc351db0c296bb3c321d86669967b1b3812", "filename": "gcc/ada/s-osinte-rtems.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9126ef8c80e03e6a32462591d688d7ccfe35ace/gcc%2Fada%2Fs-osinte-rtems.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9126ef8c80e03e6a32462591d688d7ccfe35ace/gcc%2Fada%2Fs-osinte-rtems.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-rtems.adb?ref=d9126ef8c80e03e6a32462591d688d7ccfe35ace", "patch": "@@ -135,4 +135,13 @@ package body System.OS_Interface is\n       return 0;\n    end Get_Page_Size;\n \n+   function sigaltstack\n+     (ss  : not null access stack_t;\n+      oss : access stack_t) return int is\n+      pragma Unreferenced (ss);\n+      pragma Unreferenced (oss);\n+   begin\n+      return 0;\n+   end sigaltstack;\n+\n end System.OS_Interface;"}, {"sha": "8d5483b6c38d8bfabc01a94f78cc49fe7e3ae3c7", "filename": "gcc/ada/s-osinte-rtems.ads", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9126ef8c80e03e6a32462591d688d7ccfe35ace/gcc%2Fada%2Fs-osinte-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9126ef8c80e03e6a32462591d688d7ccfe35ace/gcc%2Fada%2Fs-osinte-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-rtems.ads?ref=d9126ef8c80e03e6a32462591d688d7ccfe35ace", "patch": "@@ -35,17 +35,21 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the RTEMS version of this package\n-\n---  These are guesses based on what I think the GNARL team will want to\n---  call the rtems configurations.  We use CPU-rtems for the rtems\n---  configurations.\n+--  This is the RTEMS version of this package.\n+--\n+--  RTEMS target names are of the form CPU-rtems.\n+--  This implementation is designed to work on ALL RTEMS targets.\n+--  The RTEMS implementation is primarily based upon the POSIX threads\n+--  API but there are also bindings to GNAT/RTEMS support routines\n+--  to insulate this code from C API specific details and, in some\n+--  cases, obtain target architecture and BSP specific information\n+--  that is unavailable at the time this package is built.\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n --  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n+--  or remove the pragma Preelaborate.\n --  It is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n@@ -141,6 +145,11 @@ package System.OS_Interface is\n \n    SA_SIGINFO  : constant := 16#02#;\n \n+   SA_ONSTACK : constant := 16#00#;\n+   --  SA_ONSTACK is not defined on RTEMS, but it is refered to in the POSIX\n+   --  implementation of System.Interrupt_Management. Therefore we define a\n+   --  dummy value of zero here so that setting this flag is a nop.\n+\n    SIG_BLOCK   : constant := 1;\n    SIG_UNBLOCK : constant := 2;\n    SIG_SETMASK : constant := 3;\n@@ -249,6 +258,23 @@ package System.OS_Interface is\n    -- Stack --\n    -----------\n \n+   type stack_t is record\n+      ss_sp    : System.Address;\n+      ss_flags : int;\n+      ss_size  : size_t;\n+   end record;\n+   pragma Convention (C, stack_t);\n+\n+   function sigaltstack\n+     (ss  : not null access stack_t;\n+      oss : access stack_t) return int;\n+\n+   Alternate_Stack : aliased System.Address;\n+   --  This is a dummy definition, never used (Alternate_Stack_Size is null)\n+\n+   Alternate_Stack_Size : constant := 0;\n+   --  No alternate signal stack is used on this platform\n+\n    Stack_Base_Available : constant Boolean := False;\n    --  Indicates whether the stack base is available on this target.\n    --  This allows us to share s-osinte.adb between all the FSU/RTEMS\n@@ -386,7 +412,7 @@ package System.OS_Interface is\n \n    type struct_sched_param is record\n       sched_priority      : int;\n-      ss_low_priority     : timespec;\n+      ss_low_priority     : int;\n       ss_replenish_period : timespec;\n       ss_initial_budget   : timespec;\n    end record;\n@@ -512,7 +538,8 @@ private\n    pragma Convention (C, pthread_attr_t);\n \n    type pthread_condattr_t is record\n-      flags        : int;\n+      flags           : int;\n+      process_shared  : int;\n    end record;\n    pragma Convention (C, pthread_condattr_t);\n "}]}