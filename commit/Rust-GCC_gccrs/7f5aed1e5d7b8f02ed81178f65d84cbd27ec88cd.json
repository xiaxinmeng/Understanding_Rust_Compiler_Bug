{"sha": "7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1YWVkMWU1ZDdiOGYwMmVkODExNzhmNjVkODRjYmQyN2VjODhjZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-07T23:56:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-07T23:56:34Z"}, "message": "re PR target/81906 (Calls to rint() wrongly optimized away starting in g++ 6)\n\n\tPR target/81906\n\t* config/i386/i386.c (ix86_expand_rint): Handle flag_rounding_math.\n\n\t* gcc.target/i386/pr81906.c: New test.\n\nFrom-SVN: r255486", "tree": {"sha": "19a103430578ba4a53e3f95d98e6a0aa9aa7770d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19a103430578ba4a53e3f95d98e6a0aa9aa7770d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd/comments", "author": null, "committer": null, "parents": [{"sha": "9b6c97373a0ca04b5888a1c4ca6519c94388da50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b6c97373a0ca04b5888a1c4ca6519c94388da50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b6c97373a0ca04b5888a1c4ca6519c94388da50"}], "stats": {"total": 72, "additions": 66, "deletions": 6}, "files": [{"sha": "58081c1e46ed919c6dc055bd5d31403a28dedda7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "patch": "@@ -1,3 +1,10 @@\n+2017-12-08  Joseph Myers  <joseph@codesourcery.com>\n+\t    Alexander Monakov  <amonakov@ispras.ru>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/81906\n+\t* config/i386/i386.c (ix86_expand_rint): Handle flag_rounding_math.\n+\n 2017-12-07  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* config/aarch64/aarch64.c (aarch64_print_address_internal): Return"}, {"sha": "e323102cef5960d7cf8946612157245cf5ce1862", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "patch": "@@ -44255,20 +44255,25 @@ ix86_expand_lfloorceil (rtx op0, rtx op1, bool do_floor)\n   emit_move_insn (op0, ireg);\n }\n \n-/* Expand rint (IEEE round to nearest) rounding OPERAND1 and storing the\n-   result in OPERAND0.  */\n+/* Expand rint rounding OPERAND1 and storing the result in OPERAND0.  */\n void\n ix86_expand_rint (rtx operand0, rtx operand1)\n {\n   /* C code for the stuff we're doing below:\n \txa = fabs (operand1);\n         if (!isless (xa, 2**52))\n \t  return operand1;\n-        xa = xa + 2**52 - 2**52;\n+        two52 = 2**52;\n+        if (flag_rounding_math)\n+\t  {\n+\t    two52 = copysign (two52, operand1);\n+\t    xa = operand1;\n+\t  }\n+        xa = xa + two52 - two52;\n         return copysign (xa, operand1);\n    */\n   machine_mode mode = GET_MODE (operand0);\n-  rtx res, xa, TWO52, mask;\n+  rtx res, xa, TWO52, two52, mask;\n   rtx_code_label *label;\n \n   res = gen_reg_rtx (mode);\n@@ -44281,8 +44286,16 @@ ix86_expand_rint (rtx operand0, rtx operand1)\n   TWO52 = ix86_gen_TWO52 (mode);\n   label = ix86_expand_sse_compare_and_jump (UNLE, TWO52, xa, false);\n \n-  xa = expand_simple_binop (mode, PLUS, xa, TWO52, NULL_RTX, 0, OPTAB_DIRECT);\n-  xa = expand_simple_binop (mode, MINUS, xa, TWO52, xa, 0, OPTAB_DIRECT);\n+  two52 = TWO52;\n+  if (flag_rounding_math)\n+    {\n+      two52 = gen_reg_rtx (mode);\n+      ix86_sse_copysign_to_positive (two52, TWO52, res, mask);\n+      xa = res;\n+    }\n+\n+  xa = expand_simple_binop (mode, PLUS, xa, two52, NULL_RTX, 0, OPTAB_DIRECT);\n+  xa = expand_simple_binop (mode, MINUS, xa, two52, xa, 0, OPTAB_DIRECT);\n \n   ix86_sse_copysign_to_positive (res, xa, res, mask);\n "}, {"sha": "d12ca43c7a15b2d4f3c29de19c4ffad37c46ea40", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "patch": "@@ -1,5 +1,8 @@\n 2017-12-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/81906\n+\t* gcc.target/i386/pr81906.c: New test.\n+\n \tPR tree-optimization/83075\n \t* gcc.dg/tree-ssa/strncpy-2.c: Use size_t instead of unsigned, add\n \tseparate function with noipa attribute to also verify behavior when"}, {"sha": "6c71bec41c025eb6e3c08e905a922c7f27279872", "filename": "gcc/testsuite/gcc.target/i386/pr81906.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81906.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81906.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81906.c?ref=7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "patch": "@@ -0,0 +1,37 @@\n+/* PR target/81906 */\n+/* { dg-do run { target *-*-linux* *-*-gnu* } }\n+/* { dg-options \"-O2 -frounding-math\" } */\n+\n+#include <fenv.h>\n+\n+int\n+main ()\n+{\n+  #define N 12\n+  double a[N] = { 2.0, 2.25, 2.5, 2.75, 3.5, -2.0, -2.25, -2.5, -2.75, -3.5, 0x2.0p53, -0x2.0p53 };\n+  double b[N], c[N], d[N], e[N];\n+  double be[N] = { 2.0, 2.0, 2.0, 3.0, 4.0, -2.0, -2.0, -2.0, -3.0, -4.0, 0x2.0p53, -0x2.0p53 };\n+  double ce[N] = { 2.0, 2.0, 2.0, 2.0, 3.0, -2.0, -3.0, -3.0, -3.0, -4.0, 0x2.0p53, -0x2.0p53 };\n+  double de[N] = { 2.0, 3.0, 3.0, 3.0, 4.0, -2.0, -2.0, -2.0, -2.0, -3.0, 0x2.0p53, -0x2.0p53 };\n+  double ee[N] = { 2.0, 2.0, 2.0, 2.0, 3.0, -2.0, -2.0, -2.0, -2.0, -3.0, 0x2.0p53, -0x2.0p53 };\n+  asm volatile (\"\" : : \"g\" (a), \"g\" (be), \"g\" (ce), \"g\" (de), \"g\" (ee) : \"memory\");\n+\n+  int i;\n+  fesetround (FE_TONEAREST);\n+  for (i = 0; i < N; ++i)\n+    b[i] = __builtin_rint (a[i]);\n+  fesetround (FE_DOWNWARD);\n+  for (i = 0; i < N; ++i)\n+    c[i] = __builtin_rint (a[i]);\n+  fesetround (FE_UPWARD);\n+  for (i = 0; i < N; ++i)\n+    d[i] = __builtin_rint (a[i]);\n+  fesetround (FE_TOWARDZERO);\n+  for (i = 0; i < N; ++i)\n+    e[i] = __builtin_rint (a[i]);\n+  fesetround (FE_TONEAREST);\n+  for (i = 0; i < N; ++i)\n+    if (b[i] != be[i] || c[i] != ce[i] || d[i] != de[i] || e[i] != ee[i])\n+      __builtin_abort ();\n+  return 0;\n+}"}]}