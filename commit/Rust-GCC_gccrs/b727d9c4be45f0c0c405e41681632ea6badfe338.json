{"sha": "b727d9c4be45f0c0c405e41681632ea6badfe338", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcyN2Q5YzRiZTQ1ZjBjMGM0MDVlNDE2ODE2MzJlYTZiYWRmZTMzOA==", "commit": {"author": {"name": "Ray Chason", "email": "chasonr@newsguy.com", "date": "2013-07-04T08:23:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-07-04T08:23:44Z"}, "message": "re PR libstdc++/57808 (operators == and != for regex_token_iterator need to be const)\n\n2013-07-04  Ray Chason  <chasonr@newsguy.com>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/57808\n\t* include/bits/regex.h (regex_token_iterator<>::operator==,\n\tregex_token_iterator<>::operator!=, regex_token_iterator<>::operator*,\n\tregex_token_iterator<>::operator->): Declare const.\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r200662", "tree": {"sha": "aabe538f98d7a8665885613c46afaabe70ad089d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aabe538f98d7a8665885613c46afaabe70ad089d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b727d9c4be45f0c0c405e41681632ea6badfe338", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b727d9c4be45f0c0c405e41681632ea6badfe338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b727d9c4be45f0c0c405e41681632ea6badfe338", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b727d9c4be45f0c0c405e41681632ea6badfe338/comments", "author": null, "committer": null, "parents": [{"sha": "033d86cc455992f9c72457614cb6d4475dcc3a82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033d86cc455992f9c72457614cb6d4475dcc3a82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/033d86cc455992f9c72457614cb6d4475dcc3a82"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "8af0c2b6539c6874e134b878632d68391fc3c565", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b727d9c4be45f0c0c405e41681632ea6badfe338/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b727d9c4be45f0c0c405e41681632ea6badfe338/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b727d9c4be45f0c0c405e41681632ea6badfe338", "patch": "@@ -1,3 +1,11 @@\n+2013-07-04  Ray Chason  <chasonr@newsguy.com>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/57808\n+\t* include/bits/regex.h (regex_token_iterator<>::operator==,\n+\tregex_token_iterator<>::operator!=, regex_token_iterator<>::operator*,\n+\tregex_token_iterator<>::operator->): Declare const.\n+\n 2013-07-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/stl_list.h (list<>::insert(iterator,"}, {"sha": "432752a789d28000dec6ce8a67cc727a613adf74", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b727d9c4be45f0c0c405e41681632ea6badfe338/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b727d9c4be45f0c0c405e41681632ea6badfe338/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=b727d9c4be45f0c0c405e41681632ea6badfe338", "patch": "@@ -2404,57 +2404,57 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @todo Implement this function.\n        */\n       regex_token_iterator(const regex_token_iterator& __rhs);\n-      \n+\n       /**\n        * @brief Assigns a %regex_token_iterator to another.\n        * @param __rhs [IN] A %regex_token_iterator to copy.\n        * @todo Implement this function.\n        */\n       regex_token_iterator&\n       operator=(const regex_token_iterator& __rhs);\n-      \n+\n       /**\n        * @brief Compares a %regex_token_iterator to another for equality.\n        * @todo Implement this function.\n        */\n       bool\n-      operator==(const regex_token_iterator& __rhs);\n-      \n+      operator==(const regex_token_iterator& __rhs) const;\n+\n       /**\n        * @brief Compares a %regex_token_iterator to another for inequality.\n        * @todo Implement this function.\n        */\n       bool\n-      operator!=(const regex_token_iterator& __rhs);\n-      \n+      operator!=(const regex_token_iterator& __rhs) const;\n+\n       /**\n        * @brief Dereferences a %regex_token_iterator.\n        * @todo Implement this function.\n        */\n       const value_type&\n-      operator*();\n-      \n+      operator*() const;\n+\n       /**\n        * @brief Selects a %regex_token_iterator member.\n        * @todo Implement this function.\n        */\n       const value_type*\n-      operator->();\n-      \n+      operator->() const;\n+\n       /**\n        * @brief Increments a %regex_token_iterator.\n        * @todo Implement this function.\n        */\n       regex_token_iterator&\n       operator++();\n-      \n+\n       /**\n        * @brief Postincrements a %regex_token_iterator.\n        * @todo Implement this function.\n        */\n       regex_token_iterator\n       operator++(int);\n-      \n+\n     private: // data members for exposition only:\n       typedef regex_iterator<_Bi_iter, _Ch_type, _Rx_traits> position_iterator;\n "}]}