{"sha": "1aa234217483f238c07ff819178d4c64e68fa74e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFhMjM0MjE3NDgzZjIzOGMwN2ZmODE5MTc4ZDRjNjRlNjhmYTc0ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T09:52:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T09:52:49Z"}, "message": "[multiple changes]\n\n2010-10-11  Emmanuel Briot  <briot@adacore.com>\n\n\t* sinfo.adb: Use GNAT.HTable rather than System.HTable.\n\t* prj-nmsc.adb: Minor reformatting.\n\n2010-10-11  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_attr.adb (Type_Key): Code simplification.\n\nFrom-SVN: r165289", "tree": {"sha": "ab3bf9bffc28f40076be5787553b8c06db3dcb38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab3bf9bffc28f40076be5787553b8c06db3dcb38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aa234217483f238c07ff819178d4c64e68fa74e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa234217483f238c07ff819178d4c64e68fa74e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aa234217483f238c07ff819178d4c64e68fa74e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa234217483f238c07ff819178d4c64e68fa74e/comments", "author": null, "committer": null, "parents": [{"sha": "9c8e862b2ed66d94be79af62b3a323f902f1032b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8e862b2ed66d94be79af62b3a323f902f1032b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c8e862b2ed66d94be79af62b3a323f902f1032b"}], "stats": {"total": 89, "additions": 57, "deletions": 32}, "files": [{"sha": "803047c098d9970af2ee9d1e195d06e55fc629b9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa234217483f238c07ff819178d4c64e68fa74e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa234217483f238c07ff819178d4c64e68fa74e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1aa234217483f238c07ff819178d4c64e68fa74e", "patch": "@@ -1,3 +1,12 @@\n+2010-10-11  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* sinfo.adb: Use GNAT.HTable rather than System.HTable.\n+\t* prj-nmsc.adb: Minor reformatting.\n+\n+2010-10-11  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_attr.adb (Type_Key): Code simplification.\n+\n 2010-10-11  Tristan Gingold  <gingold@adacore.com>\n \n \t* gcc-interface/utils2.c (maybe_wrap_malloc): Fix crash when allocating"}, {"sha": "845bc083d3e407c17a86e2787b79d98d7c61a460", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 36, "deletions": 16, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa234217483f238c07ff819178d4c64e68fa74e/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa234217483f238c07ff819178d4c64e68fa74e/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=1aa234217483f238c07ff819178d4c64e68fa74e", "patch": "@@ -43,7 +43,7 @@ with Ada.Strings.Maps.Constants; use Ada.Strings.Maps.Constants;\n with GNAT.Case_Util;            use GNAT.Case_Util;\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with GNAT.Dynamic_HTables;\n-with GNAT.Regexp;                use GNAT.Regexp;\n+with GNAT.Regexp;               use GNAT.Regexp;\n with GNAT.Table;\n \n package body Prj.Nmsc is\n@@ -922,9 +922,11 @@ package body Prj.Nmsc is\n                            Data.Tree);\n \n       procedure Found_Project_File (Path : Path_Information; Rank : Natural);\n+      --  Comments required ???\n \n-      procedure Expand_Project_Files is new Expand_Subdirectory_Pattern\n-        (Callback => Found_Project_File);\n+      procedure Expand_Project_Files is\n+        new Expand_Subdirectory_Pattern (Callback => Found_Project_File);\n+      --  Comments required ???\n \n       ------------------------\n       -- Found_Project_File --\n@@ -939,6 +941,8 @@ package body Prj.Nmsc is\n          end if;\n       end Found_Project_File;\n \n+   --  Start of processing for Check_Aggregate_Project\n+\n    begin\n       if Project_Files.Default then\n          Error_Msg_Name_1 := Snames.Name_Project_Files;\n@@ -1044,7 +1048,6 @@ package body Prj.Nmsc is\n       Check_Configuration (Project, Data);\n \n       if Project.Qualifier /= Aggregate then\n-\n          Check_Library_Attributes (Project, Data);\n          Check_Package_Naming (Project, Data);\n          Look_For_Sources (Prj_Data, Data);\n@@ -4962,7 +4965,8 @@ package body Prj.Nmsc is\n       Remove_Source_Dirs : Boolean := False;\n \n       procedure Add_To_Or_Remove_From_Source_Dirs\n-        (Path : Path_Information; Rank : Natural);\n+        (Path : Path_Information;\n+         Rank : Natural);\n       --  When Removed = False, the directory Path_Id to the list of\n       --  source_dirs if not already in the list. When Removed = True,\n       --  removed directory Path_Id if in the list.\n@@ -4975,7 +4979,8 @@ package body Prj.Nmsc is\n       ---------------------------------------\n \n       procedure Add_To_Or_Remove_From_Source_Dirs\n-        (Path : Path_Information; Rank : Natural)\n+        (Path : Path_Information;\n+         Rank : Natural)\n       is\n          List       : String_List_Id;\n          Prev       : String_List_Id;\n@@ -5047,7 +5052,7 @@ package body Prj.Nmsc is\n \n          elsif Remove_Source_Dirs and then List /= Nil_String then\n \n-            --  Remove source dir, if present\n+            --  Remove source dir if present\n \n             if Prev = Nil_String then\n                Project.Source_Dirs :=\n@@ -5232,14 +5237,15 @@ package body Prj.Nmsc is\n          end if;\n \n       elsif Source_Dirs.Default then\n+\n          --  No Source_Dirs specified: the single source directory is the one\n          --  containing the project file.\n \n          Remove_Source_Dirs := False;\n          Add_To_Or_Remove_From_Source_Dirs\n            (Path => (Name         => Project.Directory.Name,\n                      Display_Name => Project.Directory.Display_Name),\n-            Rank            => 1);\n+            Rank => 1);\n \n       else\n          Remove_Source_Dirs := False;\n@@ -6753,16 +6759,20 @@ package body Prj.Nmsc is\n       Visited : Recursive_Dirs.Instance;\n \n       procedure Find_Pattern\n-        (Pattern_Id : Name_Id; Rank : Natural; Location : Source_Ptr);\n+        (Pattern_Id : Name_Id;\n+         Rank       : Natural;\n+         Location   : Source_Ptr);\n       --  Find a specific pattern\n \n       function Recursive_Find_Dirs\n-        (Path : Path_Information; Rank : Natural) return Boolean;\n+        (Path : Path_Information;\n+         Rank : Natural) return Boolean;\n       --  Search all the subdirectories (recursively) of Path.\n       --  Return True if at least one file or directory was processed\n \n       function Subdirectory_Matches\n-        (Path : Path_Information; Rank : Natural) return Boolean;\n+        (Path : Path_Information;\n+         Rank : Natural) return Boolean;\n       --  Called when a matching directory was found. If the user is in fact\n       --  searching for files, we then search for those files matching the\n       --  pattern within the directory.\n@@ -6773,13 +6783,15 @@ package body Prj.Nmsc is\n       --------------------------\n \n       function Subdirectory_Matches\n-        (Path : Path_Information; Rank : Natural) return Boolean\n+        (Path : Path_Information;\n+         Rank : Natural) return Boolean\n       is\n          Dir   : Dir_Type;\n          Name  : String (1 .. 250);\n          Last  : Natural;\n          Found : Path_Information;\n          Success : Boolean := False;\n+\n       begin\n          case Search_For is\n             when Search_Directories =>\n@@ -6819,7 +6831,8 @@ package body Prj.Nmsc is\n       -------------------------\n \n       function Recursive_Find_Dirs\n-        (Path : Path_Information; Rank : Natural) return Boolean\n+        (Path : Path_Information;\n+         Rank : Natural) return Boolean\n       is\n          Path_Str : constant String := Get_Name_String (Path.Display_Name);\n          Dir   : Dir_Type;\n@@ -6858,7 +6871,8 @@ package body Prj.Nmsc is\n                        Directory      => Path_Str,\n                        Resolve_Links  => Resolve_Links)\n                     & Directory_Separator;\n-                  Path2 : Path_Information;\n+                  Path2     : Path_Information;\n+\n                begin\n                   if Is_Directory (Path_Name) then\n                      Name_Len := 0;\n@@ -6888,7 +6902,9 @@ package body Prj.Nmsc is\n       ------------------\n \n       procedure Find_Pattern\n-        (Pattern_Id : Name_Id; Rank : Natural; Location : Source_Ptr)\n+        (Pattern_Id : Name_Id;\n+         Rank       : Natural;\n+         Location   : Source_Ptr)\n       is\n          Pattern     : constant String := Get_Name_String (Pattern_Id);\n          Pattern_End : Natural := Pattern'Last;\n@@ -6898,6 +6914,7 @@ package body Prj.Nmsc is\n          Dir_Exists  : Boolean;\n          Has_Error   : Boolean := False;\n          Success     : Boolean;\n+\n       begin\n          if Current_Verbosity = High then\n             Write_Str (\"Expand_Subdirectory_Pattern (\"\"\");\n@@ -7001,11 +7018,14 @@ package body Prj.Nmsc is\n          end if;\n       end Find_Pattern;\n \n-      --  Start of processing for Expand_Subdirectory_Pattern\n+      --  Local variables\n \n       Pattern_Id : String_List_Id := Patterns;\n       Element    : String_Element;\n       Rank       : Natural := 1;\n+\n+   --  Start of processing for Expand_Subdirectory_Pattern\n+\n    begin\n       while Pattern_Id /= Nil_String loop\n          Element := Data.Tree.String_Elements.Table (Pattern_Id);"}, {"sha": "b07f390465464a285412deee37caaf6d7af94d46", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa234217483f238c07ff819178d4c64e68fa74e/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa234217483f238c07ff819178d4c64e68fa74e/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=1aa234217483f238c07ff819178d4c64e68fa74e", "patch": "@@ -4457,7 +4457,7 @@ package body Sem_Attr is\n          Check_E0;\n          Check_Type;\n          declare\n-            function Type_Key return String;\n+            function Type_Key return String_Id;\n             --  A very preliminary implementation.\n             --  For now, a signature consists of only the type name.\n             --  This is clearly incomplete (e.g., adding a new field to\n@@ -4467,22 +4467,18 @@ package body Sem_Attr is\n             -- Type_Key --\n             --------------\n \n-            function Type_Key return String is\n-\n+            function Type_Key return String_Id is\n                Full_Name : constant String_Id :=\n-                 Fully_Qualified_Name_String (Entity (P));\n-\n-               Signature : String\n-                 (1 .. Integer (String_Length (Full_Name)) - 1);\n-               --  Decrement length to omit trailing NUL\n-\n+                             Fully_Qualified_Name_String (Entity (P));\n             begin\n-               for J in Signature'Range loop\n-                  Signature (J) :=\n-                    Get_Character (Get_String_Char (Full_Name, Int (J)));\n-               end loop;\n+               --  Copy all characters in Full_Name but the trailing NUL\n \n-               return Signature & \"'Type_Key\";\n+               Start_String;\n+               for J in 1 .. String_Length (Full_Name) - 1 loop\n+                  Store_String_Char (Get_String_Char (Full_Name, Int (J)));\n+               end loop;\n+               Store_String_Chars (\"'Type_Key\");\n+               return End_String;\n             end Type_Key;\n \n          begin"}, {"sha": "c6f85b2ede2891c7775325247fca2f494b88ac23", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa234217483f238c07ff819178d4c64e68fa74e/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa234217483f238c07ff819178d4c64e68fa74e/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=1aa234217483f238c07ff819178d4c64e68fa74e", "patch": "@@ -35,7 +35,7 @@ pragma Style_Checks (All_Checks);\n with Atree;  use Atree;\n with Nlists; use Nlists;\n \n-with System.HTable;\n+with GNAT.HTable;\n \n package body Sinfo is\n \n@@ -72,7 +72,7 @@ package body Sinfo is\n    end AS_Hash;\n \n    package Aspect_Specifications_Hash_Table is new\n-     System.HTable.Simple_HTable\n+     GNAT.HTable.Simple_HTable\n        (Header_Num => Hash_Range,\n         Element    => List_Id,\n         No_Element => No_List,"}]}