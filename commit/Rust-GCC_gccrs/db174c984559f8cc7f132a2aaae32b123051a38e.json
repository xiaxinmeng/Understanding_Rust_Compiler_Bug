{"sha": "db174c984559f8cc7f132a2aaae32b123051a38e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIxNzRjOTg0NTU5ZjhjYzdmMTMyYTJhYWFlMzJiMTIzMDUxYTM4ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-08T10:08:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-08T10:08:25Z"}, "message": "[multiple changes]\n\n2017-09-08  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_elab.adb (Check_A_Call): Do not consider\n\treferences to internal variables for SPARK semantics.\n\n2017-09-08  Arnaud Charlet  <charlet@adacore.com>\n\n\t* inline.adb (In_Package_Spec): refine type of\n\tthe parameter from Node_Id to Entity_Id.\n\n2017-09-08  Justin Squirek  <squirek@adacore.com>\n\n\t* exp_ch5.adb (Expand_Formal_Container_Loop):\n\tReset the scope of the loop parameter after it is reanalyzed.\n\n2017-09-08  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_util.ads (Set_Rep_Info): New inline procedure.\n\t* sem_util.adb (Set_Rep_Info): Implement it.\n\t* sem_ch3.adb (Process_Subtype): If the case of a constraint present,\n\talways copy the representation aspects onto the subtype.\n\nFrom-SVN: r251882", "tree": {"sha": "ed9c76360930f6cab44ad74d9d2cb2d9e2be690d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed9c76360930f6cab44ad74d9d2cb2d9e2be690d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db174c984559f8cc7f132a2aaae32b123051a38e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db174c984559f8cc7f132a2aaae32b123051a38e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db174c984559f8cc7f132a2aaae32b123051a38e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db174c984559f8cc7f132a2aaae32b123051a38e/comments", "author": null, "committer": null, "parents": [{"sha": "3070e686074cf1e6f90802ba12e56b5dcf5a12ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3070e686074cf1e6f90802ba12e56b5dcf5a12ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3070e686074cf1e6f90802ba12e56b5dcf5a12ca"}], "stats": {"total": 69, "additions": 61, "deletions": 8}, "files": [{"sha": "98e2678a13bd21d4e2e6a0d5fa941cd1011fec0a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=db174c984559f8cc7f132a2aaae32b123051a38e", "patch": "@@ -1,3 +1,25 @@\n+2017-09-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_elab.adb (Check_A_Call): Do not consider\n+\treferences to internal variables for SPARK semantics.\n+\n+2017-09-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* inline.adb (In_Package_Spec): refine type of\n+\tthe parameter from Node_Id to Entity_Id.\n+\n+2017-09-08  Justin Squirek  <squirek@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Formal_Container_Loop):\n+\tReset the scope of the loop parameter after it is reanalyzed.\n+\n+2017-09-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_util.ads (Set_Rep_Info): New inline procedure.\n+\t* sem_util.adb (Set_Rep_Info): Implement it.\n+\t* sem_ch3.adb (Process_Subtype): If the case of a constraint present,\n+\talways copy the representation aspects onto the subtype.\n+\n 2017-09-08  Georges-Alex Jaloyan  <jaloyan@adacore.com>\n \n \t* g-dynhta.adb, g-dynhta.ads (Get_First_Key, Get_Next_key):"}, {"sha": "d8d22d02af961f160383402cec0e58e52e3bfbfb", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=db174c984559f8cc7f132a2aaae32b123051a38e", "patch": "@@ -3126,8 +3126,14 @@ package body Exp_Ch5 is\n       --  as a legal form of assignment to remedy this side effect.\n \n       Set_Assignment_OK (Name (Advance));\n-\n       Analyze (N);\n+\n+      --  Because we have to analyze the initial declaration of the loop\n+      --  parameter multiple times its scope is incorrectly set at this point\n+      --  to the one surrounding the block statement - so set the scope\n+      --  manually to be the actual block statement.\n+\n+      Set_Scope (Defining_Identifier (Init_Decl), Entity (Identifier (N)));\n    end Expand_Formal_Container_Loop;\n \n    ------------------------------------------"}, {"sha": "7096f7c7431ab008e6ef3fa19f26d9e581a0c646", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=db174c984559f8cc7f132a2aaae32b123051a38e", "patch": "@@ -1187,7 +1187,7 @@ package body Inline is\n       --  Return True if subprogram Id defines a compilation unit\n       --  Shouldn't this be in Sem_Aux???\n \n-      function In_Package_Spec (Id : Node_Id) return Boolean;\n+      function In_Package_Spec (Id : Entity_Id) return Boolean;\n       --  Return True if subprogram Id is defined in the package specification,\n       --  either its visible or private part.\n \n@@ -1292,7 +1292,7 @@ package body Inline is\n       -- In_Package_Spec --\n       ---------------------\n \n-      function In_Package_Spec (Id : Node_Id) return Boolean is\n+      function In_Package_Spec (Id : Entity_Id) return Boolean is\n          P : constant Node_Id := Parent (Subprogram_Spec (Id));\n          --  Parent of the subprogram's declaration\n "}, {"sha": "a1d8f8b8714d89eca5c9331c9ca232ea8f6c0285", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=db174c984559f8cc7f132a2aaae32b123051a38e", "patch": "@@ -21556,9 +21556,11 @@ package body Sem_Ch3 is\n                Error_Msg_N (\"invalid subtype mark in subtype indication\", S);\n          end case;\n \n-         --  Size and Convention are always inherited from the base type\n+         --  Size, Alignment, Representation aspects and Convention are always\n+         --  inherited from the base type.\n \n          Set_Size_Info  (Def_Id,            (Subtype_Mark_Id));\n+         Set_Rep_Info   (Def_Id,            (Subtype_Mark_Id));\n          Set_Convention (Def_Id, Convention (Subtype_Mark_Id));\n \n          return Def_Id;"}, {"sha": "7be57cfce97901d60292ddc830fbf5b85177b190", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=db174c984559f8cc7f132a2aaae32b123051a38e", "patch": "@@ -721,22 +721,25 @@ package body Sem_Elab is\n         and then not Is_Call_Of_Generic_Formal (N)\n       then\n          return;\n-      end if;\n \n       --  If this is a rewrite of a Valid_Scalars attribute, then nothing to\n       --  check, we don't mind in this case if the call occurs before the body\n       --  since this is all generated code.\n \n-      if Nkind (Original_Node (N)) = N_Attribute_Reference\n+      elsif Nkind (Original_Node (N)) = N_Attribute_Reference\n         and then Attribute_Name (Original_Node (N)) = Name_Valid_Scalars\n       then\n          return;\n-      end if;\n \n       --  Intrinsics such as instances of Unchecked_Deallocation do not have\n       --  any body, so elaboration checking is not needed, and would be wrong.\n \n-      if Is_Intrinsic_Subprogram (E) then\n+      elsif Is_Intrinsic_Subprogram (E) then\n+         return;\n+\n+      --  Do not consider references to internal variables for SPARK semantics\n+\n+      elsif Variable_Case and then not Comes_From_Source (E) then\n          return;\n       end if;\n "}, {"sha": "a153e9a04dff62b21c68a527397c887643ed5135", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=db174c984559f8cc7f132a2aaae32b123051a38e", "patch": "@@ -21659,6 +21659,20 @@ package body Sem_Util is\n       end if;\n    end Set_Referenced_Modified;\n \n+   ------------------\n+   -- Set_Rep_Info --\n+   ------------------\n+\n+   procedure Set_Rep_Info (T1, T2 : Entity_Id) is\n+   begin\n+      Set_Is_Atomic               (T1, Is_Atomic (T2));\n+      Set_Is_Independent          (T1, Is_Independent (T2));\n+      Set_Is_Volatile_Full_Access (T1, Is_Volatile_Full_Access (T2));\n+      if Is_Base_Type (T1) then\n+         Set_Is_Volatile          (T1, Is_Volatile (T2));\n+      end if;\n+   end Set_Rep_Info;\n+\n    ----------------------------\n    -- Set_Scope_Is_Transient --\n    ----------------------------"}, {"sha": "d0c3a26e553fa3e41edbc5ac0c2f65dabd764eff", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db174c984559f8cc7f132a2aaae32b123051a38e/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=db174c984559f8cc7f132a2aaae32b123051a38e", "patch": "@@ -2473,6 +2473,12 @@ package Sem_Util is\n    --  (Referenced_As_LHS if Out_Param is False, Referenced_As_Out_Parameter\n    --  if Out_Param is True) is set True, and the other flag set False.\n \n+   procedure Set_Rep_Info (T1, T2 : Entity_Id);\n+   pragma Inline (Set_Rep_Info);\n+   --  Copies the Is_Atomic, Is_Independent and Is_Volatile_Full_Access flags\n+   --  from sub(type) entity T2 to (sub)type entity T1, as well as Is_Volatile\n+   --  if T1 is a base type.\n+\n    procedure Set_Scope_Is_Transient (V : Boolean := True);\n    --  Set the flag Is_Transient of the current scope\n "}]}