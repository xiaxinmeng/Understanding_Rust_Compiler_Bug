{"sha": "e11cddeceab32df198b679c8c9f4347ef7f761e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTExY2RkZWNlYWIzMmRmMTk4YjY3OWM4YzlmNDM0N2VmN2Y3NjFlMg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-11-23T05:40:27Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-11-23T05:40:27Z"}, "message": "Formatting and coment changes\n\nFrom-SVN: r37686", "tree": {"sha": "711e3c444d05bf3b78e254b1faa9584fa4a0931b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/711e3c444d05bf3b78e254b1faa9584fa4a0931b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e11cddeceab32df198b679c8c9f4347ef7f761e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11cddeceab32df198b679c8c9f4347ef7f761e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e11cddeceab32df198b679c8c9f4347ef7f761e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11cddeceab32df198b679c8c9f4347ef7f761e2/comments", "author": null, "committer": null, "parents": [{"sha": "ebb66eb5fa16b04ee0a1d6291815f489fd7d7ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb66eb5fa16b04ee0a1d6291815f489fd7d7ace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebb66eb5fa16b04ee0a1d6291815f489fd7d7ace"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "c09775e37bb8dfc8259ef9c5e35be6892901ada3", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11cddeceab32df198b679c8c9f4347ef7f761e2/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11cddeceab32df198b679c8c9f4347ef7f761e2/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=e11cddeceab32df198b679c8c9f4347ef7f761e2", "patch": "@@ -2155,10 +2155,11 @@\n \n (define_insn \"shl_sext_sub\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=z\")\n-        (sign_extract:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t\t\t    (match_operand:SI 2 \"const_int_operand\" \"n\"))\n-\t\t\t (match_operand:SI 3 \"const_int_operand\" \"n\")\n-\t\t\t (const_int 0)))\n+        (sign_extract:SI\n+\t (ashift:SI (match_operand:SI 1 \"register_operand\" \"0\")\n+\t\t    (match_operand:SI 2 \"const_int_operand\" \"n\"))\n+\t (match_operand:SI 3 \"const_int_operand\" \"n\")\n+\t (const_int 0)))\n    (clobber (reg:SI T_REG))]\n   \"(shl_sext_kind (operands[2], operands[3], 0) & ~1) == 6\"\n   \"#\"\n@@ -2392,7 +2393,7 @@\n \n ;; t/r must come after r/r, lest reload will try to reload stuff like\n ;; (set (subreg:SI (mem:QI (plus:SI (reg:SI SP_REG) (const_int 12)) 0) 0)\n-;; (made from (set (subreg:SI (reg:QI 73) 0) ) into T.\n+;; (made from (set (subreg:SI (reg:QI ###) 0) ) into T.\n (define_insn \"movsi_i\"\n   [(set (match_operand:SI 0 \"general_movdst_operand\" \"=r,r,t,r,r,r,m,<,<,xl,x,l,r\")\n \t(match_operand:SI 1 \"general_movsrc_operand\" \"Q,rI,r,mr,xl,t,r,x,l,r,>,>,i\"))]\n@@ -2418,7 +2419,7 @@\n    (set_attr \"length\" \"*,*,*,*,*,*,*,*,*,*,*,*,*\")])\n \n ;; t/r must come after r/r, lest reload will try to reload stuff like\n-;; (subreg:SI (reg:SF 38 fr14) 0) into T (compiling stdlib/strtod.c -m3e -O2)\n+;; (subreg:SI (reg:SF FR14_REG) 0) into T (compiling stdlib/strtod.c -m3e -O2)\n ;; ??? This allows moves from macl to fpul to be recognized, but these moves\n ;; will require a reload.\n (define_insn \"movsi_ie\"\n@@ -3213,8 +3214,7 @@\n ;; The const_int_operand is distinct for each branch target; it avoids\n ;; unwanted matches with redundant_insn.\n (define_insn \"block_branch_redirect\"\n-  [(set (pc) (unspec [(match_operand 0 \"const_int_operand\" \"\")]\n-\t\t     UNSPEC_BBR))]\n+  [(set (pc) (unspec [(match_operand 0 \"const_int_operand\" \"\")] UNSPEC_BBR))]\n   \"\"\n   \"\"\n   [(set_attr \"length\" \"0\")])\n@@ -3718,7 +3718,7 @@\n   [(set (reg:SI R0_REG) (unspec [(label_ref (match_dup 2))] UNSPEC_MOVA))\n    (parallel [(set (match_dup 0)\n \t      (unspec [(reg:SI R0_REG) (match_dup 1)\n-\t\t        (label_ref (match_dup 2))] UNSPEC_CASESI))\n+\t\t       (label_ref (match_dup 2))] UNSPEC_CASESI))\n \t      (clobber (match_dup 3))])\n    (set (match_dup 0) (plus:SI (match_dup 0) (reg:SI R0_REG)))]\n   \"LABEL_NUSES (operands[2])++;\")"}]}