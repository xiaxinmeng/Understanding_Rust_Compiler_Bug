{"sha": "9b09c4dec4d39938f5b85e20364fd4697fafc91c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIwOWM0ZGVjNGQzOTkzOGY1Yjg1ZTIwMzY0ZmQ0Njk3ZmFmYzkxYw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-01-06T18:19:06Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-01-06T18:19:06Z"}, "message": "re PR fortran/34387 (FAIL: gfortran.dg/optional_dim_2.f90: FE vs library argument missmatch)\n\n2008-01-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/34387\n\t* trans-expr.c (gfc_conv_missing_dummy): Use a temporary to type convert\n\tthe dummy variable expression, test for NULL, and pass the variable\n\taddress to the called function.\n\nFrom-SVN: r131356", "tree": {"sha": "217699e01c2360cf25662d7568e4deeecdf50f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/217699e01c2360cf25662d7568e4deeecdf50f2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b09c4dec4d39938f5b85e20364fd4697fafc91c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b09c4dec4d39938f5b85e20364fd4697fafc91c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b09c4dec4d39938f5b85e20364fd4697fafc91c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b09c4dec4d39938f5b85e20364fd4697fafc91c/comments", "author": null, "committer": null, "parents": [{"sha": "346ecba81ddd1a8555ca5704cbc484144e71f860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/346ecba81ddd1a8555ca5704cbc484144e71f860", "html_url": "https://github.com/Rust-GCC/gccrs/commit/346ecba81ddd1a8555ca5704cbc484144e71f860"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "932527eadf8f0352575d8e037b1383ddbf4e09b7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b09c4dec4d39938f5b85e20364fd4697fafc91c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b09c4dec4d39938f5b85e20364fd4697fafc91c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9b09c4dec4d39938f5b85e20364fd4697fafc91c", "patch": "@@ -1,3 +1,10 @@\n+2008-01-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/34387\n+\t* trans-expr.c (gfc_conv_missing_dummy): Use a temporary to type convert\n+\tthe dummy variable expression, test for NULL, and pass the variable\n+\taddress to the called function.\n+\n 2007-01-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34658"}, {"sha": "65c65e35233af08a7cbbc174a3b4510895d2a8a8", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b09c4dec4d39938f5b85e20364fd4697fafc91c/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b09c4dec4d39938f5b85e20364fd4697fafc91c/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=9b09c4dec4d39938f5b85e20364fd4697fafc91c", "patch": "@@ -154,18 +154,24 @@ gfc_conv_missing_dummy (gfc_se * se, gfc_expr * arg, gfc_typespec ts, int kind)\n \n   present = gfc_conv_expr_present (arg->symtree->n.sym);\n \n-  tmp = build3 (COND_EXPR, TREE_TYPE (se->expr), present, se->expr,\n-\t\t  fold_convert (TREE_TYPE (se->expr), integer_zero_node));\n-  tmp = gfc_evaluate_now (tmp, &se->pre);\n-\n   if (kind > 0)\n     {\n+      /* Create a temporary and convert it to the correct type.  */\n       tmp = gfc_get_int_type (kind);\n-      tmp = fold_convert (tmp, se->expr);\n-      tmp = gfc_evaluate_now (tmp, &se->pre); \n+      tmp = fold_convert (tmp, build_fold_indirect_ref (se->expr));\n+    \n+      /* Test for a NULL value.  */\n+      tmp = build3 (COND_EXPR, TREE_TYPE (tmp), present, tmp, integer_one_node);\n+      tmp = gfc_evaluate_now (tmp, &se->pre);\n+      se->expr = build_fold_addr_expr (tmp);\n+    }\n+  else\n+    {\n+      tmp = build3 (COND_EXPR, TREE_TYPE (se->expr), present, se->expr,\n+\t\t    fold_convert (TREE_TYPE (se->expr), integer_zero_node));\n+      tmp = gfc_evaluate_now (tmp, &se->pre);\n+      se->expr = tmp;\n     }\n-\n-  se->expr = tmp;\n \n   if (ts.type == BT_CHARACTER)\n     {"}]}