{"sha": "bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYyZDBiOGU2MjllZTlmZTUwZWNlNjZkM2IwNWZmYjI1ZThiMjJkNg==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2002-04-07T21:29:01Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2002-04-07T21:29:01Z"}, "message": "re PR c++/5933 (HP-UX: broken MI of virtual classes)\n\n\tPR 5933\n\t* pa.h (ASM_OUTPUT_MI_THUNK): Use indirect jump to target function when\n\tgenerating 32-bit pic code.\n\nFrom-SVN: r52004", "tree": {"sha": "4afb61f8346a004db15b56f19b4b0a20981011fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4afb61f8346a004db15b56f19b4b0a20981011fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6/comments", "author": null, "committer": null, "parents": [{"sha": "eeec38a804baee426e2ecb5b19a94422a24a041b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeec38a804baee426e2ecb5b19a94422a24a041b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeec38a804baee426e2ecb5b19a94422a24a041b"}], "stats": {"total": 77, "additions": 68, "deletions": 9}, "files": [{"sha": "e812e5943866c68a8633d43e0cd80cdc20e95e60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6", "patch": "@@ -1,3 +1,9 @@\n+2002-04-07  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\tPR 5933\n+\t* pa.h (ASM_OUTPUT_MI_THUNK): Use indirect jump to target function when\n+\tgenerating 32-bit pic code.\n+\n 2002-04-06  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* cppinit.c (cpp_create_reader): Initialize"}, {"sha": "62582e2277f7a91c74b8a16e9259d26eb19c8baf", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 62, "deletions": 9, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=bf2d0b8e629ee9fe50ece66d3b05ffb25e8b22d6", "patch": "@@ -861,23 +861,76 @@ extern enum cmp_type hppa_branch_type;\n \n #define ASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION) \\\n { const char *target_name = XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0); \\\n+  static unsigned int current_thunk_number; \\\n+  char label[16]; \\\n+  char *lab; \\\n+  ASM_GENERATE_INTERNAL_LABEL (label, \"LTHN\", current_thunk_number); \\\n+  STRIP_NAME_ENCODING (lab, label); \\\n   STRIP_NAME_ENCODING (target_name, target_name); \\\n+  /* FIXME: total_code_bytes is not handled correctly in files with \\\n+     mi thunks.  */ \\\n   pa_output_function_prologue (FILE, 0); \\\n   if (VAL_14_BITS_P (DELTA)) \\\n     { \\\n-      fprintf (FILE, \"\\tb %s\\n\\tldo \", target_name); \\\n-      fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, DELTA); \\\n-      fprintf (FILE, \"(%%r26),%%r26\\n\"); \\\n+      if (! TARGET_64BIT && ! TARGET_PORTABLE_RUNTIME && flag_pic) \\\n+\t{ \\\n+\t  fprintf (FILE, \"\\taddil LT%%%s,%%r19\\n\", lab); \\\n+\t  fprintf (FILE, \"\\tldw RT%%%s(%%r1),%%r22\\n\", lab); \\\n+\t  fprintf (FILE, \"\\tldw 0(%%sr0,%%r22),%%r22\\n\"); \\\n+\t  fprintf (FILE, \"\\tbb,>=,n %%r22,30,.+16\\n\"); \\\n+\t  fprintf (FILE, \"\\tdepi 0,31,2,%%r22\\n\"); \\\n+\t  fprintf (FILE, \"\\tldw 4(%%sr0,%%r22),%%r19\\n\"); \\\n+\t  fprintf (FILE, \"\\tldw 0(%%sr0,%%r22),%%r22\\n\"); \\\n+\t  fprintf (FILE, \"\\tldsid (%%sr0,%%r22),%%r1\\n\\tmtsp %%r1,%%sr0\\n\"); \\\n+\t  fprintf (FILE, \"\\tbe 0(%%sr0,%%r22)\\n\\tldo \"); \\\n+\t  fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, DELTA); \\\n+\t  fprintf (FILE, \"(%%r26),%%r26\\n\"); \\\n+\t} \\\n+      else \\\n+\t{ \\\n+\t  fprintf (FILE, \"\\tb %s\\n\\tldo \", target_name); \\\n+\t  fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, DELTA); \\\n+\t  fprintf (FILE, \"(%%r26),%%r26\\n\"); \\\n+\t} \\\n     } \\\n   else \\\n     { \\\n-      fprintf (FILE, \"\\taddil L%%\"); \\\n-      fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, DELTA); \\\n-      fprintf (FILE, \",%%r26\\n\\tb %s\\n\\tldo R%%\", target_name); \\\n-      fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, DELTA); \\\n-      fprintf (FILE, \"(%%r1),%%r26\\n\"); \\\n+      if (! TARGET_64BIT && ! TARGET_PORTABLE_RUNTIME && flag_pic) \\\n+\t{ \\\n+\t  fprintf (FILE, \"\\taddil L%%\"); \\\n+\t  fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, DELTA); \\\n+\t  fprintf (FILE, \",%%r26\\n\\tldo R%%\"); \\\n+\t  fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, DELTA); \\\n+\t  fprintf (FILE, \"(%%r1),%%r26\\n\"); \\\n+\t  fprintf (FILE, \"\\taddil LT%%%s,%%r19\\n\", lab); \\\n+\t  fprintf (FILE, \"\\tldw RT%%%s(%%r1),%%r22\\n\", lab); \\\n+\t  fprintf (FILE, \"\\tldw 0(%%sr0,%%r22),%%r22\\n\"); \\\n+\t  fprintf (FILE, \"\\tbb,>=,n %%r22,30,.+16\\n\"); \\\n+\t  fprintf (FILE, \"\\tdepi 0,31,2,%%r22\\n\"); \\\n+\t  fprintf (FILE, \"\\tldw 4(%%sr0,%%r22),%%r19\\n\"); \\\n+\t  fprintf (FILE, \"\\tldw 0(%%sr0,%%r22),%%r22\\n\"); \\\n+\t  fprintf (FILE, \"\\tldsid (%%sr0,%%r22),%%r1\\n\\tmtsp %%r1,%%sr0\\n\"); \\\n+\t  fprintf (FILE, \"\\tbe,n 0(%%sr0,%%r22)\\n\"); \\\n+\t} \\\n+      else \\\n+\t{ \\\n+\t  fprintf (FILE, \"\\taddil L%%\"); \\\n+\t  fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, DELTA); \\\n+\t  fprintf (FILE, \",%%r26\\n\\tb %s\\n\\tldo R%%\", target_name); \\\n+\t  fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, DELTA); \\\n+\t  fprintf (FILE, \"(%%r1),%%r26\\n\"); \\\n+\t} \\\n     } \\\n-  fprintf (FILE, \"\\n\\t.EXIT\\n\\t.PROCEND\\n\"); \\\n+  fprintf (FILE, \"\\t.EXIT\\n\\t.PROCEND\\n\"); \\\n+  if (! TARGET_64BIT && ! TARGET_PORTABLE_RUNTIME && flag_pic) \\\n+    { \\\n+      data_section (); \\\n+      fprintf (FILE, \"\\t.align 4\\n\"); \\\n+      ASM_OUTPUT_INTERNAL_LABEL (FILE, \"LTHN\", current_thunk_number); \\\n+      fprintf (FILE, \"\\t.word P%%%s\\n\", target_name); \\\n+      function_section (THUNK_FNDECL); \\\n+    } \\\n+  current_thunk_number++; \\\n }\n \n /* On HPPA, we emit profiling code as rtl via PROFILE_HOOK rather than"}]}