{"sha": "3508525e5cbee96f7c8df719778434eed62a0797", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUwODUyNWU1Y2JlZTk2ZjdjOGRmNzE5Nzc4NDM0ZWVkNjJhMDc5Nw==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "1999-03-24T21:46:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-24T21:46:18Z"}, "message": "configure.in (AC_PREREQ): Update to 2.13.\n\n\ufffd\n        * configure.in (AC_PREREQ): Update to 2.13.\n        (AC_EXEEXT): Call to find possible file extension.\n        (compiler_name): Use.\n        * configure: Regenerate.\n\nFrom-SVN: r25953", "tree": {"sha": "bab95c7874bc0e1d427accbdf238f6f4380a0f98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bab95c7874bc0e1d427accbdf238f6f4380a0f98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3508525e5cbee96f7c8df719778434eed62a0797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3508525e5cbee96f7c8df719778434eed62a0797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3508525e5cbee96f7c8df719778434eed62a0797", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3508525e5cbee96f7c8df719778434eed62a0797/comments", "author": null, "committer": null, "parents": [{"sha": "411a2e59fa25fbcf09e4e601794420ca08c305ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411a2e59fa25fbcf09e4e601794420ca08c305ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/411a2e59fa25fbcf09e4e601794420ca08c305ee"}], "stats": {"total": 102, "additions": 66, "deletions": 36}, "files": [{"sha": "bd03fb3b463223fbacd31ebf87b359747a8825e3", "filename": "libchill/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3508525e5cbee96f7c8df719778434eed62a0797/libchill%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3508525e5cbee96f7c8df719778434eed62a0797/libchill%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2FChangeLog?ref=3508525e5cbee96f7c8df719778434eed62a0797", "patch": "@@ -1,3 +1,10 @@\n+Wed Mar 24 22:41:28 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n+\n+\t* configure.in (AC_PREREQ): Update to 2.13.\n+\t(AC_EXEEXT): Call to find possible file extension.\n+\t(compiler_name): Use.\n+\t* configure: Regenerate.\n+\n 1999-01-19 08:10 -0500  Zack Weinberg  <zack@rabi.columbia.edu>\n \n \t* Makefile.in: Fix typos in previous change.  "}, {"sha": "ff5e62b3202273a110aeec65130833eb7b9b260d", "filename": "libchill/configure.in", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3508525e5cbee96f7c8df719778434eed62a0797/libchill%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3508525e5cbee96f7c8df719778434eed62a0797/libchill%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fconfigure.in?ref=3508525e5cbee96f7c8df719778434eed62a0797", "patch": "@@ -1,5 +1,5 @@\n # Process this file with autoconf to produce a configure script.\n-#   Copyright (C) 1995, 1997, 1998 Free Software Foundation, Inc.\n+#   Copyright (C) 1995, 1997, 1998, 1999 Free Software Foundation, Inc.\n #   Contributed by Dave Love (d.love@dl.ac.uk).\n #\n #This file is part of GNU CC.\n@@ -19,7 +19,7 @@\n #the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #02111-1307, USA.\n \n-AC_PREREQ(2.12.1)\n+AC_PREREQ(2.13)\n AC_INIT(chillrt0.c)\n \n if test \"${srcdir}\" = \".\" ; then\n@@ -35,29 +35,37 @@ dnl This is needed for a multilibbed build in the source tree so\n dnl that install-sh and config.sub get found.\n AC_CONFIG_AUX_DIR($topsrcdir)\n \n-# If the language specific compiler does not exist, but the \"gcc\" directory does,\n-# we do not build anything. Note, $r is set by the top-level Makefile.\n+# We have to handle 3 cases -- native, cross and canadian cross -- and\n+# the extension returned from this macro needs to be treated as a possible\n+# scenario and not the only one.\n+AC_EXEEXT\n+\n+# If the language specific compiler does not exist, but the \"gcc\" directory \n+# does, we do not build anything. Note, $r is set by the top-level Makefile.\n+# Note that when we look for the compiler, we search both with and without\n+# extension to handle cross and canadian cross builds. \n compiler_name=cc1chill\n rm -f skip-this-dir\n AC_MSG_CHECKING(if compiler $compiler_name has been built)\n AC_CACHE_VAL(chill_cv_compiler_exists,\n-\t[chill_cv_compiler_exists=yes\n-\tif test -n \"$r\"; then\n-\t\tif test -d \"$r\"/gcc; then\n-\t\t\tif test -f \"$r\"/gcc/$compiler_name; then\n-\t\t\t\ttrue\n-\t\t\telse\n-\t\t\t\tchill_cv_compiler_exists=no\n-\t\t\t\techo \"rm -f config.cache config.log multilib.out\" > skip-this-dir\n-\t\t\tfi\n-\t\tfi\n-\tfi\n-\t])\n+[chill_cv_compiler_exists=yes\n+if test -n \"$r\"; then\n+  if test -d \"$r\"/gcc; then\n+    if test -f \"$r\"/gcc/$compiler_name \\\n+       || test -f \"$r\"/gcc/$compiler_name$EXEEXT; then\n+      true\n+    else\n+      chill_cv_compiler_exists=no\n+      echo \"rm -f config.cache config.log multilib.out\" > skip-this-dir\n+    fi\n+  fi\n+fi\n+])\n AC_MSG_RESULT($chill_cv_compiler_exists)\n if test x$chill_cv_compiler_exists = xno\n then\n-\trm -f Makefile conftest* confdefs* core\n-\texit 0\n+  rm -f Makefile conftest* confdefs* core\n+  exit 0\n fi\n \n dnl Checks for programs."}, {"sha": "524eb2696f73ee3d38135c084a73a064dfc051ee", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3508525e5cbee96f7c8df719778434eed62a0797/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3508525e5cbee96f7c8df719778434eed62a0797/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=3508525e5cbee96f7c8df719778434eed62a0797", "patch": "@@ -1,3 +1,10 @@\n+Wed Mar 24 22:41:28 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n+\n+\t* configure.in (AC_PREREQ): Update to 2.13.\n+\t(AC_EXEEXT): Call to find possible file extension.\n+\t(compiler_name): Use.\n+\t* configure: Regenerate.\n+\n 1999-03-17  Craig Burley  <craig@jcb-sc.com>\n \n \tUpdate to Netlib version of 1999-03-17:"}, {"sha": "56ecd94d1d8e3e2ba3aa4e08a4e7bfb308f6a8b6", "filename": "libf2c/configure.in", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3508525e5cbee96f7c8df719778434eed62a0797/libf2c%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3508525e5cbee96f7c8df719778434eed62a0797/libf2c%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fconfigure.in?ref=3508525e5cbee96f7c8df719778434eed62a0797", "patch": "@@ -1,5 +1,5 @@\n # Process this file with autoconf to produce a configure script.\n-#   Copyright (C) 1995, 1997, 1998 Free Software Foundation, Inc.\n+#   Copyright (C) 1995, 1997, 1998, 1999 Free Software Foundation, Inc.\n #   Contributed by Dave Love (d.love@dl.ac.uk).\n #\n #This file is part of GNU Fortran.\n@@ -19,7 +19,7 @@\n #the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #02111-1307, USA.\n \n-AC_PREREQ(2.12.1)\n+AC_PREREQ(2.13)\n AC_INIT(libF77/Version.c)\n \n if test \"${srcdir}\" = \".\"  ; then\n@@ -35,29 +35,37 @@ dnl This is needed for a multilibbed build in the source tree so\n dnl that install-sh and config.sub get found.\n AC_CONFIG_AUX_DIR($topsrcdir)\n \n-# If the language specific compiler does not exist, but the \"gcc\" directory does,\n-# we do not build anything. Note, $r is set by the top-level Makefile.\n+# We have to handle 3 cases -- native, cross and canadian cross -- and\n+# the extension returned from this macro needs to be treated as a possible\n+# scenario and not the only one.\n+AC_EXEEXT\n+\n+# If the language specific compiler does not exist, but the \"gcc\" directory \n+# does, we do not build anything. Note, $r is set by the top-level Makefile.\n+# Note that when we look for the compiler, we search both with and without\n+# extension to handle cross and canadian cross builds. \n compiler_name=f771\n rm -f skip-this-dir\n AC_MSG_CHECKING(if compiler $compiler_name has been built)\n AC_CACHE_VAL(f77_cv_compiler_exists,\n-\t[f77_cv_compiler_exists=yes\n-\tif test -n \"$r\"; then\n-\t\tif test -d \"$r\"/gcc; then\n-\t\t\tif test -f \"$r\"/gcc/$compiler_name; then\n-\t\t\t\ttrue\n-\t\t\telse\n-\t\t\t\tf77_cv_compiler_exists=no\n-\t\t\t\techo \"rm -f config.cache config.log multilib.out\" > skip-this-dir\n-\t\t\tfi\n-\t\tfi\n-\tfi\n-\t])\n+[f77_cv_compiler_exists=yes\n+if test -n \"$r\"; then\n+  if test -d \"$r\"/gcc; then\n+    if test -f \"$r\"/gcc/$compiler_name \\\n+       || test -f \"$r\"/gcc/$compiler_name$EXEEXT; then\n+      true\n+    else\n+      f77_cv_compiler_exists=no\n+      echo \"rm -f config.cache config.log multilib.out\" > skip-this-dir\n+    fi\n+  fi\n+fi\n+])\n AC_MSG_RESULT($f77_cv_compiler_exists)\n if test x$f77_cv_compiler_exists = xno\n then\n-\trm -f Makefile conftest* confdefs* core\n-\texit 0\n+  rm -f Makefile conftest* confdefs* core\n+  exit 0\n fi\n \n dnl Checks for programs."}]}