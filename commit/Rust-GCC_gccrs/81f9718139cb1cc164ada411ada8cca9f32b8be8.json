{"sha": "81f9718139cb1cc164ada411ada8cca9f32b8be8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFmOTcxODEzOWNiMWNjMTY0YWRhNDExYWRhOGNjYTlmMzJiOGJlOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-07T17:33:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-07T17:33:28Z"}, "message": "c++: Fix up constexpr evaluation of deleting dtors [PR100495]\n\nWe do not save bodies of constexpr clones and instead evaluate the bodies\nof the constexpr functions they were cloned from.\nI believe that is just fine for constructors because complete vs. base\nctors differ only in classes that have virtual bases and such constructors\naren't constexpr, similarly complete/base destructors.\nBut as the testcase below shows, for deleting destructors it is not fine,\ndeleting dtors while marked as clones in fact are just artificial functions\nwith synthetized body which calls the user destructor and deallocation.\n\nSo, either we'd need to evaluate the destructor and afterwards synthetize\nand evaluate the deallocation, or we can just save and use the deleting\ndtors bodies.  The latter seems much easier to me.\n\n2021-09-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/100495\n\t* constexpr.c (maybe_save_constexpr_fundef): Save body even for\n\tconstexpr deleting dtors.\n\t(cxx_eval_call_expression): Don't use DECL_CLONED_FUNCTION for\n\tdeleting dtors.\n\n\t* g++.dg/cpp2a/constexpr-new21.C: New test.", "tree": {"sha": "461feb6525f37d4d567b83ad1c346a97d7f2d7d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/461feb6525f37d4d567b83ad1c346a97d7f2d7d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81f9718139cb1cc164ada411ada8cca9f32b8be8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f9718139cb1cc164ada411ada8cca9f32b8be8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81f9718139cb1cc164ada411ada8cca9f32b8be8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f9718139cb1cc164ada411ada8cca9f32b8be8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff7bc505b17e67ba244ca284aa7514a4f0fc27b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff7bc505b17e67ba244ca284aa7514a4f0fc27b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff7bc505b17e67ba244ca284aa7514a4f0fc27b6"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "7772fe62d959226f82b1249e1ef11436ce654754", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f9718139cb1cc164ada411ada8cca9f32b8be8/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f9718139cb1cc164ada411ada8cca9f32b8be8/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=81f9718139cb1cc164ada411ada8cca9f32b8be8", "patch": "@@ -865,7 +865,7 @@ maybe_save_constexpr_fundef (tree fun)\n   if (processing_template_decl\n       || !DECL_DECLARED_CONSTEXPR_P (fun)\n       || cp_function_chain->invalid_constexpr\n-      || DECL_CLONED_FUNCTION_P (fun))\n+      || (DECL_CLONED_FUNCTION_P (fun) && !DECL_DELETING_DESTRUCTOR_P (fun)))\n     return;\n \n   if (!is_valid_constexpr_fn (fun, !DECL_GENERATED_P (fun)))\n@@ -2372,7 +2372,7 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n       *non_constant_p = true;\n       return t;\n     }\n-  if (DECL_CLONED_FUNCTION_P (fun))\n+  if (DECL_CLONED_FUNCTION_P (fun) && !DECL_DELETING_DESTRUCTOR_P (fun))\n     fun = DECL_CLONED_FUNCTION (fun);\n \n   if (is_ubsan_builtin_p (fun))"}, {"sha": "8231e992483465e07cee72315b2e59d15469156a", "filename": "gcc/testsuite/g++.dg/cpp2a/constexpr-new21.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f9718139cb1cc164ada411ada8cca9f32b8be8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-new21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f9718139cb1cc164ada411ada8cca9f32b8be8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-new21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-new21.C?ref=81f9718139cb1cc164ada411ada8cca9f32b8be8", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/100495\n+// { dg-do compile { target c++20 } }\n+\n+struct S {\n+  constexpr virtual ~S () {}\n+};\n+\n+constexpr bool\n+foo ()\n+{\n+  S *p = new S ();\n+  delete p;\n+  return true;\n+}\n+\n+constexpr bool x = foo ();\n+static_assert (x);"}]}