{"sha": "2705a8d66edb092fa6e8b3131049c2d495e4ea21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwNWE4ZDY2ZWRiMDkyZmE2ZThiMzEzMTA0OWMyZDQ5NWU0ZWEyMQ==", "commit": {"author": {"name": "Daniel Krugler", "email": "daniel.kruegler@googlemail.com", "date": "2011-04-16T00:55:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-04-16T00:55:43Z"}, "message": "re PR libstdc++/48635 ([C++0x] unique_ptr<T, D&> moves the deleter instead of copying it)\n\n2011-04-15  Daniel Krugler  <daniel.kruegler@googlemail.com>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/48635\n\t* include/bits/unique_ptr.h (unique_ptr<>::operator=(unique_ptr&&),\n\tunique_ptr<>::operator=(unique_ptr<>&&),\n\tunique_ptr<_Tp[],>::operator=(unique_ptr&&),\n\tunique_ptr<_Tp[],>::operator=(unique_ptr<>&&)): Forward the deleter\n\tinstead of moving it.\n\t* testsuite/20_util/unique_ptr/assign/48635.cc: New.\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r172532", "tree": {"sha": "1c35995374e64e9385bcb00f7a32c670d739ce97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c35995374e64e9385bcb00f7a32c670d739ce97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2705a8d66edb092fa6e8b3131049c2d495e4ea21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2705a8d66edb092fa6e8b3131049c2d495e4ea21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2705a8d66edb092fa6e8b3131049c2d495e4ea21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2705a8d66edb092fa6e8b3131049c2d495e4ea21/comments", "author": {"login": "Dani-Hub", "id": 431432, "node_id": "MDQ6VXNlcjQzMTQzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/431432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dani-Hub", "html_url": "https://github.com/Dani-Hub", "followers_url": "https://api.github.com/users/Dani-Hub/followers", "following_url": "https://api.github.com/users/Dani-Hub/following{/other_user}", "gists_url": "https://api.github.com/users/Dani-Hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dani-Hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dani-Hub/subscriptions", "organizations_url": "https://api.github.com/users/Dani-Hub/orgs", "repos_url": "https://api.github.com/users/Dani-Hub/repos", "events_url": "https://api.github.com/users/Dani-Hub/events{/privacy}", "received_events_url": "https://api.github.com/users/Dani-Hub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "deb9642d054842041402b44d2062d8a5efa40ce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb9642d054842041402b44d2062d8a5efa40ce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deb9642d054842041402b44d2062d8a5efa40ce0"}], "stats": {"total": 97, "additions": 93, "deletions": 4}, "files": [{"sha": "bed5426044cb32f8ba58b84faa43a149a80fb8b6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2705a8d66edb092fa6e8b3131049c2d495e4ea21/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2705a8d66edb092fa6e8b3131049c2d495e4ea21/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2705a8d66edb092fa6e8b3131049c2d495e4ea21", "patch": "@@ -1,3 +1,14 @@\n+2011-04-15  Daniel Krugler  <daniel.kruegler@googlemail.com>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/48635\n+\t* include/bits/unique_ptr.h (unique_ptr<>::operator=(unique_ptr&&),\n+\tunique_ptr<>::operator=(unique_ptr<>&&),\n+\tunique_ptr<_Tp[],>::operator=(unique_ptr&&),\n+\tunique_ptr<_Tp[],>::operator=(unique_ptr<>&&)): Forward the deleter\n+\tinstead of moving it.\n+\t* testsuite/20_util/unique_ptr/assign/48635.cc: New.\n+\n 2011-04-15  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* scripts/extract_symvers.pl: Handle NOTY."}, {"sha": "7df75ffc4bfa6fa0d345bfa87e11e31535aff6aa", "filename": "libstdc++-v3/include/bits/unique_ptr.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2705a8d66edb092fa6e8b3131049c2d495e4ea21/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2705a8d66edb092fa6e8b3131049c2d495e4ea21/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h?ref=2705a8d66edb092fa6e8b3131049c2d495e4ea21", "patch": "@@ -171,7 +171,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       operator=(unique_ptr&& __u)\n       {\n \treset(__u.release());\n-\tget_deleter() = std::move(__u.get_deleter());\n+\tget_deleter() = std::forward<deleter_type>(__u.get_deleter());\n \treturn *this;\n       }\n \n@@ -184,7 +184,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \toperator=(unique_ptr<_Up, _Ep>&& __u)\n \t{\n \t  reset(__u.release());\n-\t  get_deleter() = std::move(__u.get_deleter());\n+\t  get_deleter() = std::forward<deleter_type>(__u.get_deleter());\n \t  return *this;\n \t}\n \n@@ -315,7 +315,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       operator=(unique_ptr&& __u)\n       {\n \treset(__u.release());\n-\tget_deleter() = std::move(__u.get_deleter());\n+\tget_deleter() = std::forward<deleter_type>(__u.get_deleter());\n \treturn *this;\n       }\n \n@@ -324,7 +324,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \toperator=(unique_ptr<_Up, _Ep>&& __u)\n \t{\n \t  reset(__u.release());\n-\t  get_deleter() = std::move(__u.get_deleter());\n+\t  get_deleter() = std::forward<deleter_type>(__u.get_deleter());\n \t  return *this;\n \t}\n "}, {"sha": "99b412b58e80c44dc645ceb4a08ef39d8d0d01a6", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/48635.cc", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2705a8d66edb092fa6e8b3131049c2d495e4ea21/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F48635.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2705a8d66edb092fa6e8b3131049c2d495e4ea21/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F48635.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F48635.cc?ref=2705a8d66edb092fa6e8b3131049c2d495e4ea21", "patch": "@@ -0,0 +1,78 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2011 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+#include <testsuite_hooks.h>\n+\n+struct Deleter\n+{\n+  Deleter() = default;\n+  Deleter(const Deleter&) = default;\n+  Deleter(Deleter&&) = default;\n+  \n+  Deleter&\n+  operator=(const Deleter&)\n+  {\n+    bool test __attribute__((unused)) = true;\n+    VERIFY( true );\n+    return *this;\n+  }\n+\n+  Deleter&\n+  operator=(Deleter&&)\n+  {\n+    bool test __attribute__((unused)) = true;\n+    VERIFY( false );\n+    return *this;\n+  }\n+\n+  template<class T>\n+    void\n+    operator()(T*) const { }\n+};\n+\n+struct DDeleter : Deleter { };\n+\n+// libstdc++/48635\n+void test01()\n+{\n+  Deleter d;\n+\n+  std::unique_ptr<int, Deleter&> p1(nullptr, d), p2(nullptr, d);\n+  p2 = std::move(p1);\n+\n+  DDeleter dd;\n+\n+  std::unique_ptr<int, DDeleter&> p1t(nullptr, dd);\n+  std::unique_ptr<int, Deleter&> p2t(nullptr, d);\n+  p2t = std::move(p1t);\n+\n+  std::unique_ptr<int[], Deleter&> p1a(nullptr, d), p2a(nullptr, d);\n+  p2a = std::move(p1a);\n+\n+  std::unique_ptr<int[], DDeleter&> p1at(nullptr, dd);\n+  std::unique_ptr<int[], Deleter&> p2at(nullptr, d);\n+  p2at = std::move(p1at);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}