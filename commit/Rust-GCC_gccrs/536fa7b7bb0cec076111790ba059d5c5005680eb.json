{"sha": "536fa7b7bb0cec076111790ba059d5c5005680eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM2ZmE3YjdiYjBjZWMwNzYxMTE3OTBiYTA1OWQ1YzUwMDU2ODBlYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-07-29T14:52:00Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-07-29T14:52:00Z"}, "message": "cfg.c, [...]: Fix comment typos.\n\n\t* cfg.c, tree-complex.c, config/frv/frv.c, config/i386/i386.c:\n\tFix comment typos.\n\nFrom-SVN: r102555", "tree": {"sha": "cf43d065d0664019b75751ffca6fa764ee244081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf43d065d0664019b75751ffca6fa764ee244081"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/536fa7b7bb0cec076111790ba059d5c5005680eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536fa7b7bb0cec076111790ba059d5c5005680eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/536fa7b7bb0cec076111790ba059d5c5005680eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536fa7b7bb0cec076111790ba059d5c5005680eb/comments", "author": null, "committer": null, "parents": [{"sha": "b2b800a05257a795446a39ead670ec0c61b70c4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b800a05257a795446a39ead670ec0c61b70c4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2b800a05257a795446a39ead670ec0c61b70c4b"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "ef9d11e897c919383ba4d90458f69c7c1f13eb0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=536fa7b7bb0cec076111790ba059d5c5005680eb", "patch": "@@ -1,3 +1,8 @@\n+2005-07-29  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* cfg.c, tree-complex.c, config/frv/frv.c, config/i386/i386.c:\n+\tFix comment typos.\n+\n 2005-07-29  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-ssa-dom.c (struct opt_stats_d): Add field num_iterations."}, {"sha": "c46ac0b88eeb1b06d9098f63e7befca5dc65dbba", "filename": "gcc/cfg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=536fa7b7bb0cec076111790ba059d5c5005680eb", "patch": "@@ -926,7 +926,7 @@ scale_bbs_frequencies_int (basic_block *bbs, int nbbs, int num, int den)\n   if (num > den)\n     return;\n   /* Assume that the users are producing the fraction from frequencies\n-     that never grow far enought to risk arithmetic overflow.  */\n+     that never grow far enough to risk arithmetic overflow.  */\n   gcc_assert (num < 65536);\n   for (i = 0; i < nbbs; i++)\n     {"}, {"sha": "0731302618b8837aa6642506a9299f70484ac8dd", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=536fa7b7bb0cec076111790ba059d5c5005680eb", "patch": "@@ -7838,7 +7838,7 @@ frv_optimize_membar_local (basic_block bb, struct frv_io *next_io,\n      is null if the membar has already been deleted.\n \n      Note that the initialization here should only be needed to\n-     supress warnings.  */\n+     suppress warnings.  */\n   next_membar = 0;\n \n   /* USED_REGS is the set of registers that are used before the"}, {"sha": "591b8b6a7aaf358cb048ddafa682a93a2c923257", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=536fa7b7bb0cec076111790ba059d5c5005680eb", "patch": "@@ -17490,7 +17490,7 @@ ix86_expand_vector_extract (bool mmx_ok, rtx target, rtx vec, int elt)\n     }\n }\n \n-/* Expand a vector reduction on V4SFmode for SSE1.  FN is the binar\n+/* Expand a vector reduction on V4SFmode for SSE1.  FN is the binary\n    pattern to reduce; DEST is the destination; IN is the input vector.  */\n \n void"}, {"sha": "de231191824d61cd258ee6d3ae101d42ab94e1da", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536fa7b7bb0cec076111790ba059d5c5005680eb/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=536fa7b7bb0cec076111790ba059d5c5005680eb", "patch": "@@ -502,7 +502,7 @@ set_component_ssa_name (tree ssa_name, bool imag_p, tree value)\n     ;\n \n   /* If we've nothing assigned, and the value we're given is already stable,\n-     then install that as the value for this SSA_NAME.  This pre-emptively\n+     then install that as the value for this SSA_NAME.  This preemptively\n      copy-propagates the value, which avoids unnecessary memory allocation.  */\n   else if (is_gimple_min_invariant (value))\n     {"}]}