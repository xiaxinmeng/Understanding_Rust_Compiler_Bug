{"sha": "d8fc036893ff96464d5dd5767a97348a9a4f327c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhmYzAzNjg5M2ZmOTY0NjRkNWRkNTc2N2E5NzM0OGE5YTRmMzI3Yw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-11-21T22:29:34Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-11-21T22:29:34Z"}, "message": "rs6000: rl[wd]imi without shift/rotate (PR68803)\n\nWe didn't have patterns yet for rl[wd]imi insns that do a rotate by 0.\nThis fixes it.\n\n\n\tPR target/68803\n\t* config/rs6000/rs6000.md (*rotlsi3_insert_5, *rotldi3_insert_6,\n\t*rotldi3_insert_7): New define_insns.\n\nFrom-SVN: r242681", "tree": {"sha": "f0452348a7d1c0cc2f02448bd24df5a48f1cc3f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0452348a7d1c0cc2f02448bd24df5a48f1cc3f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8fc036893ff96464d5dd5767a97348a9a4f327c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8fc036893ff96464d5dd5767a97348a9a4f327c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8fc036893ff96464d5dd5767a97348a9a4f327c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8fc036893ff96464d5dd5767a97348a9a4f327c/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d85e598a59f826d0fbd4af684c680b68970e6cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85e598a59f826d0fbd4af684c680b68970e6cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d85e598a59f826d0fbd4af684c680b68970e6cda"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "41772a0bdbf92b2cf2b503f8f23665a75d73e125", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8fc036893ff96464d5dd5767a97348a9a4f327c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8fc036893ff96464d5dd5767a97348a9a4f327c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8fc036893ff96464d5dd5767a97348a9a4f327c", "patch": "@@ -1,3 +1,9 @@\n+2016-11-21  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/68803\n+\t* config/rs6000/rs6000.md (*rotlsi3_insert_5, *rotldi3_insert_6,\n+\t*rotldi3_insert_7): New define_insns.\n+\n 2016-11-21  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.md (movdi_internal32): Change constraints"}, {"sha": "f3d1d7156e3a7245ebb1b3985b2627885ae2297d", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8fc036893ff96464d5dd5767a97348a9a4f327c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8fc036893ff96464d5dd5767a97348a9a4f327c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=d8fc036893ff96464d5dd5767a97348a9a4f327c", "patch": "@@ -3853,6 +3853,50 @@\n }\n   [(set_attr \"type\" \"insert\")])\n \n+(define_insn \"*rotlsi3_insert_5\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(ior:SI (and:SI (match_operand:SI 1 \"gpc_reg_operand\" \"0,r\")\n+\t\t\t(match_operand:SI 2 \"const_int_operand\" \"n,n\"))\n+\t\t(and:SI (match_operand:SI 3 \"gpc_reg_operand\" \"r,0\")\n+\t\t\t(match_operand:SI 4 \"const_int_operand\" \"n,n\"))))]\n+  \"rs6000_is_valid_mask (operands[2], NULL, NULL, SImode)\n+   && UINTVAL (operands[2]) != 0 && UINTVAL (operands[4]) != 0\n+   && UINTVAL (operands[2]) + UINTVAL (operands[4]) + 1 == 0\"\n+  \"@\n+   rlwimi %0,%3,0,%4\n+   rlwimi %0,%1,0,%2\"\n+  [(set_attr \"type\" \"insert\")])\n+\n+(define_insn \"*rotldi3_insert_6\"\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(ior:DI (and:DI (match_operand:DI 1 \"gpc_reg_operand\" \"0\")\n+\t\t\t(match_operand:DI 2 \"const_int_operand\" \"n\"))\n+\t\t(and:DI (match_operand:DI 3 \"gpc_reg_operand\" \"r\")\n+\t\t\t(match_operand:DI 4 \"const_int_operand\" \"n\"))))]\n+  \"exact_log2 (-UINTVAL (operands[2])) > 0\n+   && UINTVAL (operands[2]) + UINTVAL (operands[4]) + 1 == 0\"\n+{\n+  operands[5] = GEN_INT (64 - exact_log2 (-UINTVAL (operands[2])));\n+  return \"rldimi %0,%3,0,%5\";\n+}\n+  [(set_attr \"type\" \"insert\")\n+   (set_attr \"size\" \"64\")])\n+\n+(define_insn \"*rotldi3_insert_7\"\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(ior:DI (and:DI (match_operand:DI 3 \"gpc_reg_operand\" \"r\")\n+\t\t\t(match_operand:DI 4 \"const_int_operand\" \"n\"))\n+\t\t(and:DI (match_operand:DI 1 \"gpc_reg_operand\" \"0\")\n+\t\t\t(match_operand:DI 2 \"const_int_operand\" \"n\"))))]\n+  \"exact_log2 (-UINTVAL (operands[2])) > 0\n+   && UINTVAL (operands[2]) + UINTVAL (operands[4]) + 1 == 0\"\n+{\n+  operands[5] = GEN_INT (64 - exact_log2 (-UINTVAL (operands[2])));\n+  return \"rldimi %0,%3,0,%5\";\n+}\n+  [(set_attr \"type\" \"insert\")\n+   (set_attr \"size\" \"64\")])\n+\n \n ; This handles the important case of multiple-precision shifts.  There is\n ; no canonicalization rule for ASHIFT vs. LSHIFTRT, so two patterns."}]}