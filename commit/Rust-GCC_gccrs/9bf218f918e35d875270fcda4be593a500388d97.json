{"sha": "9bf218f918e35d875270fcda4be593a500388d97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJmMjE4ZjkxOGUzNWQ4NzUyNzBmY2RhNGJlNTkzYTUwMDM4OGQ5Nw==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-11-07T17:37:11Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-11-07T17:37:11Z"}, "message": "arc.c (arc_ifcvt): Use commutativity, e.g.: reg_a := reg_b + reg_a ==> reg_a := reg_a + reg_b\n\n        * config/arc/arc.c (arc_ifcvt): Use commutativity, e.g.:\n        reg_a := reg_b + reg_a  ==>  reg_a := reg_a + reg_b\n\nFrom-SVN: r204534", "tree": {"sha": "847488a56221715a9d1d914ec11c1194e3872936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/847488a56221715a9d1d914ec11c1194e3872936"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bf218f918e35d875270fcda4be593a500388d97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf218f918e35d875270fcda4be593a500388d97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bf218f918e35d875270fcda4be593a500388d97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf218f918e35d875270fcda4be593a500388d97/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89d3d605c34442ebf2717b8c100619bae7401ef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d3d605c34442ebf2717b8c100619bae7401ef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d3d605c34442ebf2717b8c100619bae7401ef9"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "57e276a1593d2643c83ec3c63408c14a0cdc0867", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf218f918e35d875270fcda4be593a500388d97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf218f918e35d875270fcda4be593a500388d97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9bf218f918e35d875270fcda4be593a500388d97", "patch": "@@ -1,3 +1,8 @@\n+2013-11-07  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/arc/arc.c (arc_ifcvt): Use commutativity, e.g.:\n+\treg_a := reg_b + reg_a  ==>  reg_a := reg_a + reg_b\n+\n 2013-11-07  Jeff Law  <law@redhat.com>\n \n \t* doc/invoke.texi (-fisolate-erroneous-paths): Document."}, {"sha": "1e0c25e833d2a5eb2e017d818730701aadcd15fb", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf218f918e35d875270fcda4be593a500388d97/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf218f918e35d875270fcda4be593a500388d97/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=9bf218f918e35d875270fcda4be593a500388d97", "patch": "@@ -8203,6 +8203,30 @@ arc_ifcvt (void)\n \t    {\n \t      /* ??? don't conditionalize if all side effects are dead\n \t\t in the not-execute case.  */\n+\n+\t      /* For commutative operators, we generally prefer to have\n+\t\t the first source match the destination.  */\n+\t      if (GET_CODE (pat) == SET)\n+\t\t{\n+\t\t  rtx src = SET_SRC (pat);\n+\n+\t\t  if (COMMUTATIVE_P (src))\n+\t\t    {\n+\t\t      rtx src0 = XEXP (src, 0);\n+\t\t      rtx src1 = XEXP (src, 1);\n+\t\t      rtx dst = SET_DEST (pat);\n+\n+\t\t      if (rtx_equal_p (src1, dst) && !rtx_equal_p (src0, dst)\n+\t\t\t  /* Leave add_n alone - the canonical form is to\n+\t\t\t     have the complex summand first.  */\n+\t\t\t  && REG_P (src0))\n+\t\t\tpat = gen_rtx_SET (VOIDmode, dst,\n+\t\t\t\t\t   gen_rtx_fmt_ee (GET_CODE (src),\n+\t\t\t\t\t\t\t   GET_MODE (src),\n+\t\t\t\t\t\t\t   src1, src0));\n+\t\t    }\n+\t\t}\n+\n \t      /* dwarf2out.c:dwarf2out_frame_debug_expr doesn't know\n \t\t what to do with COND_EXEC.  */\n \t      if (RTX_FRAME_RELATED_P (insn))"}]}