{"sha": "c56db1005607c9d0fb552280c2065ecbe7bb2b23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU2ZGIxMDA1NjA3YzlkMGZiNTUyMjgwYzIwNjVlY2JlN2JiMmIyMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-07-20T13:36:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-07-20T13:36:30Z"}, "message": "re PR middle-end/18908 (Missed folding opportunities with bools)\n\n2011-07-20  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/18908\n\t* tree.c (integer_all_onesp): Use TYPE_PRECISION, not mode precision.\n\t* tree-ssa-forwprop.c (simplify_bitwise_binary): Remove bogus\n\tADDR_EXPR folding.  Canonicalize X ^ ~0 as ~X.\n\n\t* gcc.dg/tree-ssa/pr18908.c: New testcase.\n\t* gcc.dg/tree-ssa/bitwise-sink.c: Adjust.\n\nFrom-SVN: r176510", "tree": {"sha": "4c128ff41af2ff7489d956b7ab66a144e7334910", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c128ff41af2ff7489d956b7ab66a144e7334910"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c56db1005607c9d0fb552280c2065ecbe7bb2b23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c56db1005607c9d0fb552280c2065ecbe7bb2b23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c56db1005607c9d0fb552280c2065ecbe7bb2b23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c56db1005607c9d0fb552280c2065ecbe7bb2b23/comments", "author": null, "committer": null, "parents": [{"sha": "dca412a1ddaae99a8672bfbed37fe951f486b6bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca412a1ddaae99a8672bfbed37fe951f486b6bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dca412a1ddaae99a8672bfbed37fe951f486b6bc"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "30ff80f152fa1dbaa0fd1e518f8f318acc5b06e5", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56db1005607c9d0fb552280c2065ecbe7bb2b23/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56db1005607c9d0fb552280c2065ecbe7bb2b23/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=c56db1005607c9d0fb552280c2065ecbe7bb2b23", "patch": "@@ -1759,9 +1759,7 @@ integer_all_onesp (const_tree expr)\n   if (!uns)\n     return 0;\n \n-  /* Note that using TYPE_PRECISION here is wrong.  We care about the\n-     actual bits, not the (arbitrary) range of the type.  */\n-  prec = GET_MODE_BITSIZE (TYPE_MODE (TREE_TYPE (expr)));\n+  prec = TYPE_PRECISION (TREE_TYPE (expr));\n   if (prec >= HOST_BITS_PER_WIDE_INT)\n     {\n       HOST_WIDE_INT high_value;"}]}