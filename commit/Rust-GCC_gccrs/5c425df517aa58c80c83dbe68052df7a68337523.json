{"sha": "5c425df517aa58c80c83dbe68052df7a68337523", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM0MjVkZjUxN2FhNThjODBjODNkYmU2ODA1MmRmN2E2ODMzNzUyMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-12-13T00:23:51Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-12-13T00:23:51Z"}, "message": "ggc-zone.c: Follow spelling conventions.\n\n\t* ggc-zone.c: Follow spelling conventions.\n\t* config/rs6000/rs6000.c: Likewise.\n\t* pt.c: Likewise.\n\t* semantics.c: Likewise.\n\t* objc/objc-act.c: Likewise.\n\nFrom-SVN: r74590", "tree": {"sha": "816a4ce1a5b4e54f3860d8775d52a63f0db6d389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/816a4ce1a5b4e54f3860d8775d52a63f0db6d389"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c425df517aa58c80c83dbe68052df7a68337523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c425df517aa58c80c83dbe68052df7a68337523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c425df517aa58c80c83dbe68052df7a68337523", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c425df517aa58c80c83dbe68052df7a68337523/comments", "author": null, "committer": null, "parents": [{"sha": "7764b8fa5349494e02ad34ce7239790c47c50601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7764b8fa5349494e02ad34ce7239790c47c50601", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7764b8fa5349494e02ad34ce7239790c47c50601"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "35e9f5541b3994005e4e384595dfad38d4f59b5c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5c425df517aa58c80c83dbe68052df7a68337523", "patch": "@@ -13667,7 +13667,7 @@ is_microcoded_insn (rtx insn)\n   return false;\n }\n \n-/* The function returns a non-zero value if INSN can be scheduled only\n+/* The function returns a nonzero value if INSN can be scheduled only\n    as the first insn in a dispatch group (\"dispatch-slot restricted\").\n    In this case, the returned value indicates how many dispatch slots\n    the insn occupies (at the beginning of the group)."}, {"sha": "cd293b9fab6087574573d792705c44a3f2971e38", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5c425df517aa58c80c83dbe68052df7a68337523", "patch": "@@ -922,7 +922,7 @@ is_specialization_of_friend (tree decl, tree friend)\n        };\n \n      For this type of template friend, TEMPLATE_DEPTH below will be\n-     non-zero.  To determine if DECL is a friend of FRIEND, we first\n+     nonzero.  To determine if DECL is a friend of FRIEND, we first\n      check if the enclosing class is a specialization of another.  */\n \n   template_depth = template_class_depth (DECL_CONTEXT (friend));"}, {"sha": "574c9b0ebbbe8835520fb28eafe50d34ec3f535c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=5c425df517aa58c80c83dbe68052df7a68337523", "patch": "@@ -1263,7 +1263,7 @@ finish_non_static_data_member (tree decl, tree object, tree qualifying_scope)\n \t    }\n \t}\n \n-      /* If PROCESSING_TEMPLATE_DECL is non-zero here, then\n+      /* If PROCESSING_TEMPLATE_DECL is nonzero here, then\n \t QUALIFYING_SCOPE is also non-null.  Wrap this in a SCOPE_REF\n \t for now.  */\n       if (processing_template_decl)"}, {"sha": "ced786bd23576234165cc247b24b14990dd99112", "filename": "gcc/ggc-zone.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fggc-zone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fggc-zone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-zone.c?ref=5c425df517aa58c80c83dbe68052df7a68337523", "patch": "@@ -268,7 +268,7 @@ typedef struct page_entry\n #endif\n \n   /* Number of bytes on the page unallocated.  Only used during\n-     collection, and even then large pages merely set this non-zero.  */\n+     collection, and even then large pages merely set this nonzero.  */\n   size_t bytes_free;\n \n   /* Context depth of this page.  */"}, {"sha": "c552bada9ded68b672e4ca4c8b5349f4058b1808", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c425df517aa58c80c83dbe68052df7a68337523/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=5c425df517aa58c80c83dbe68052df7a68337523", "patch": "@@ -5654,7 +5654,7 @@ build_message_expr (tree mess)\n \n /* Look up method SEL_NAME that would be suitable for receiver\n    of type 'id' (if IS_CLASS is zero) or 'Class' (if IS_CLASS is\n-   non-zero), and report on any duplicates.  */\n+   nonzero), and report on any duplicates.  */\n \n static tree\n lookup_method_in_hash_lists (tree sel_name, int is_class)"}]}