{"sha": "181f2e99d142db78be636becfe6966fdbef61cb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxZjJlOTlkMTQyZGI3OGJlNjM2YmVjZmU2OTY2ZmRiZWY2MWNiOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-08-01T10:21:49Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-08-01T10:21:49Z"}, "message": "Add memmove to value profiling.\n\n2018-08-01  Martin Liska  <mliska@suse.cz>\n\n        PR value-prof/35543\n\t* value-prof.c (interesting_stringop_to_profile_p):\n        Simplify the code and add BUILT_IN_MEMMOVE.\n\t(gimple_stringops_transform): Likewise.\n2018-08-01  Martin Liska  <mliska@suse.cz>\n\n        PR value-prof/35543\n\t* gcc.dg/tree-prof/val-prof-7.c: Add __builtin_memmove.\n\nFrom-SVN: r263201", "tree": {"sha": "0d354dc225c4450a7c650abe655f83e23517f035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d354dc225c4450a7c650abe655f83e23517f035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/181f2e99d142db78be636becfe6966fdbef61cb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/181f2e99d142db78be636becfe6966fdbef61cb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/181f2e99d142db78be636becfe6966fdbef61cb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/181f2e99d142db78be636becfe6966fdbef61cb8/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00d29b97d9ed9af957f896b8279ae85d2e16deb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00d29b97d9ed9af957f896b8279ae85d2e16deb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00d29b97d9ed9af957f896b8279ae85d2e16deb4"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "a4cb45144c9fbc712d34afd504e0165be29467e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/181f2e99d142db78be636becfe6966fdbef61cb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/181f2e99d142db78be636becfe6966fdbef61cb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=181f2e99d142db78be636becfe6966fdbef61cb8", "patch": "@@ -1,3 +1,10 @@\n+2018-08-01  Martin Liska  <mliska@suse.cz>\n+\n+        PR value-prof/35543\n+\t* value-prof.c (interesting_stringop_to_profile_p):\n+        Simplify the code and add BUILT_IN_MEMMOVE.\n+\t(gimple_stringops_transform): Likewise.\n+\n 2018-08-01  Sam Tebbs  <sam.tebbs@arm.com>\n \n \t* config/aarch64/aarch64-simd.md"}, {"sha": "00af769b225f912257dc876bc7eff0206bb931e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/181f2e99d142db78be636becfe6966fdbef61cb8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/181f2e99d142db78be636becfe6966fdbef61cb8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=181f2e99d142db78be636becfe6966fdbef61cb8", "patch": "@@ -1,3 +1,8 @@\n+2018-08-01  Martin Liska  <mliska@suse.cz>\n+\n+        PR value-prof/35543\n+\t* gcc.dg/tree-prof/val-prof-7.c: Add __builtin_memmove.\n+\n 2018-08-01  Sam Tebbs  <sam.tebbs@arm.com>\n \n \t* gcc.target/aarch64/extract_zero_extend.c: New file."}, {"sha": "bb9dd210eece22c38dd72b24ea1526eb8cb33038", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-7.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/181f2e99d142db78be636becfe6966fdbef61cb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/181f2e99d142db78be636becfe6966fdbef61cb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-7.c?ref=181f2e99d142db78be636becfe6966fdbef61cb8", "patch": "@@ -23,13 +23,19 @@ __attribute__((noinline)) \\\n void memset_test_ ## N (int len) \\\n { \\\n   __builtin_memset (buffer1, 'c', len); \\\n+} \\\n+__attribute__((noinline)) \\\n+void memmove_test_ ## N (int len) \\\n+{ \\\n+  __builtin_memmove (buffer1, buffer2, len); \\\n } \\\n  \\\n void test_stringops_ ## N(int len) \\\n { \\\n   memcpy_test_## N (len); \\\n   mempcpy_test_ ## N (len); \\\n   memset_test_ ## N (len); \\\n+  memmove_test_ ## N (len); \\\n } \\\n  \\\n void test_stringops_with_values_ ## N (int common, int not_common) \\\n@@ -70,3 +76,7 @@ int main() {\n /* { dg-final-use-not-autofdo { scan-ipa-dump \"Single value 8 stringop transformation on __builtin_memset\" \"profile\" } } */\n /* { dg-final-use-not-autofdo { scan-ipa-dump \"Single value 55 stringop transformation on __builtin_memset\" \"profile\" } } */\n /* { dg-final-use-not-autofdo { scan-ipa-dump-times \"Single value 32 stringop transformation on __builtin_memset\" 0 \"profile\" } } */\n+\n+/* { dg-final-use-not-autofdo { scan-ipa-dump \"Single value 8 stringop transformation on __builtin_memmove\" \"profile\" } } */\n+/* { dg-final-use-not-autofdo { scan-ipa-dump \"Single value 55 stringop transformation on __builtin_memmove\" \"profile\" } } */\n+/* { dg-final-use-not-autofdo { scan-ipa-dump-times \"Single value 32 stringop transformation on __builtin_memmove\" 0 \"profile\" } } */"}, {"sha": "a7c4be7a7d8421a705f6117794e2c30338e71305", "filename": "gcc/value-prof.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/181f2e99d142db78be636becfe6966fdbef61cb8/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/181f2e99d142db78be636becfe6966fdbef61cb8/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=181f2e99d142db78be636becfe6966fdbef61cb8", "patch": "@@ -1527,14 +1527,11 @@ interesting_stringop_to_profile_p (gcall *call, int *size_arg)\n   enum built_in_function fcode;\n \n   fcode = DECL_FUNCTION_CODE (gimple_call_fndecl (call));\n-  if (fcode != BUILT_IN_MEMCPY && fcode != BUILT_IN_MEMPCPY\n-      && fcode != BUILT_IN_MEMSET && fcode != BUILT_IN_BZERO)\n-    return false;\n-\n   switch (fcode)\n     {\n      case BUILT_IN_MEMCPY:\n      case BUILT_IN_MEMPCPY:\n+     case BUILT_IN_MEMMOVE:\n        *size_arg = 2;\n        return validate_gimple_arglist (call, POINTER_TYPE, POINTER_TYPE,\n \t\t\t\t       INTEGER_TYPE, VOID_TYPE);\n@@ -1547,7 +1544,7 @@ interesting_stringop_to_profile_p (gcall *call, int *size_arg)\n        return validate_gimple_arglist (call, POINTER_TYPE, INTEGER_TYPE,\n \t\t\t\t       VOID_TYPE);\n      default:\n-       gcc_unreachable ();\n+       return false;\n     }\n }\n \n@@ -1710,6 +1707,7 @@ gimple_stringops_transform (gimple_stmt_iterator *gsi)\n     {\n     case BUILT_IN_MEMCPY:\n     case BUILT_IN_MEMPCPY:\n+    case BUILT_IN_MEMMOVE:\n       src = gimple_call_arg (stmt, 1);\n       src_align = get_pointer_alignment (src);\n       if (!can_move_by_pieces (val, MIN (dest_align, src_align)))"}]}