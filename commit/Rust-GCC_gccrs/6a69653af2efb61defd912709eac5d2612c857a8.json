{"sha": "6a69653af2efb61defd912709eac5d2612c857a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE2OTY1M2FmMmVmYjYxZGVmZDkxMjcwOWVhYzVkMjYxMmM4NTdhOA==", "commit": {"author": {"name": "Catherine Moore", "email": "clm@redhat.com", "date": "2000-12-19T16:10:19Z"}, "committer": {"name": "Catherine Moore", "email": "clm@gcc.gnu.org", "date": "2000-12-19T16:10:19Z"}, "message": "reload1.c (reload_combine): Take multi-hard-regs into account when processing CALL_INSN_FUNCTION_USAGE.\n\n        * reload1.c (reload_combine): Take multi-hard-regs into account\n        when processing CALL_INSN_FUNCTION_USAGE.\n\nFrom-SVN: r38379", "tree": {"sha": "f5d5eb023ac939f0c2bd01b979832b4b7f8b83d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5d5eb023ac939f0c2bd01b979832b4b7f8b83d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a69653af2efb61defd912709eac5d2612c857a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a69653af2efb61defd912709eac5d2612c857a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a69653af2efb61defd912709eac5d2612c857a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a69653af2efb61defd912709eac5d2612c857a8/comments", "author": null, "committer": null, "parents": [{"sha": "3c0b797012946131f412a489be30e4b644a24bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0b797012946131f412a489be30e4b644a24bfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0b797012946131f412a489be30e4b644a24bfb"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "08b5a2d6e68f0a3ccac8c3e262ec76e24032539b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a69653af2efb61defd912709eac5d2612c857a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a69653af2efb61defd912709eac5d2612c857a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a69653af2efb61defd912709eac5d2612c857a8", "patch": "@@ -1,3 +1,8 @@\n+2000-12-19  Catherine Moore  <clm@redhat.com>\n+\n+\t* reload1.c (reload_combine): Take multi-hard-regs into account\n+\twhen processing CALL_INSN_FUNCTION_USAGE.\n+\n 2000-12-19  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* invoke.texi (-print-search-dirs): Make references to cpp refer"}, {"sha": "ee252a61d1bd4d7540b8c005de718932418f3e10", "filename": "gcc/reload1.c", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a69653af2efb61defd912709eac5d2612c857a8/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a69653af2efb61defd912709eac5d2612c857a8/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=6a69653af2efb61defd912709eac5d2612c857a8", "patch": "@@ -8651,20 +8651,27 @@ reload_combine ()\n \n \t  for (link = CALL_INSN_FUNCTION_USAGE (insn); link;\n \t       link = XEXP (link, 1))\n-\t    if (GET_CODE (XEXP (XEXP (link, 0), 0)) == REG)\n-\t      {\n-\t\tunsigned int regno = REGNO (XEXP (XEXP (link, 0), 0));\n+\t    {\n+\t      rtx usage_rtx = XEXP (XEXP (link, 0), 0);\n+\t      if (GET_CODE (usage_rtx) == REG)\n+\t        {\n+\t\t  int i;\n+\t\t  unsigned int start_reg = REGNO (usage_rtx);\n+\t\t  unsigned int num_regs =\n+\t\t\tHARD_REGNO_NREGS (start_reg, GET_MODE (usage_rtx));\n+\t\t  unsigned int end_reg  = start_reg + num_regs - 1;\n+\t\t  for (i = start_reg; i <= end_reg; i++)\n+\t\t    if (GET_CODE (XEXP (link, 0)) == CLOBBER)\n+\t\t      {\n+\t\t        reg_state[i].use_index = RELOAD_COMBINE_MAX_USES;\n+\t\t        reg_state[i].store_ruid = reload_combine_ruid;\n+\t\t      }\n+\t\t    else\n+\t\t      reg_state[i].use_index = -1;\n+\t         }\n+\t     }\n \n-\t\tif (GET_CODE (XEXP (link, 0)) == CLOBBER)\n-\t\t  {\n-\t\t    reg_state[regno].use_index = RELOAD_COMBINE_MAX_USES;\n-\t\t    reg_state[regno].store_ruid = reload_combine_ruid;\n-\t\t  }\n-\t\telse\n-\t\t  reg_state[regno].use_index = -1;\n-\t      }\n \t}\n-\n       else if (GET_CODE (insn) == JUMP_INSN\n \t       && GET_CODE (PATTERN (insn)) != RETURN)\n \t{"}]}