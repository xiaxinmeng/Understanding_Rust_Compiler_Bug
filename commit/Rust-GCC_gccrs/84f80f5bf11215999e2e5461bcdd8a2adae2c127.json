{"sha": "84f80f5bf11215999e2e5461bcdd8a2adae2c127", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRmODBmNWJmMTEyMTU5OTllMmU1NDYxYmNkZDhhMmFkYWUyYzEyNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-21T16:20:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-21T16:20:24Z"}, "message": "[multiple changes]\n\n2014-01-21  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, sem_prag.adb, sem_prag.ads, sem_ch12.adb, sem_res.adb,\n\tsem_ch6.adb, a-except-2005.adb: Minor reformatting.\n\n2014-01-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): When a class-wide\n\tobject is declared, it is rewritten as a renaming of an dynamic\n\texpression that wraps the initial value.  The renaming declaration\n\tis first given an internal name, to prevent collisions with the\n\tentity already declared, and then the name is modified to reflect\n\tthe original one. the modification of the name must preserve\n\tthe source location of the original, to prevent spurious errors\n\twhen compiling with style checks if the declaration involves\n\tmore than one entity.\n\nFrom-SVN: r206887", "tree": {"sha": "04b17f97d18e8ae8d8089ea8f767487bd5f16ed4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04b17f97d18e8ae8d8089ea8f767487bd5f16ed4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84f80f5bf11215999e2e5461bcdd8a2adae2c127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f80f5bf11215999e2e5461bcdd8a2adae2c127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84f80f5bf11215999e2e5461bcdd8a2adae2c127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f80f5bf11215999e2e5461bcdd8a2adae2c127/comments", "author": null, "committer": null, "parents": [{"sha": "6c3c671e4d2659884d01f384723910b0966d2c6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c3c671e4d2659884d01f384723910b0966d2c6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c3c671e4d2659884d01f384723910b0966d2c6d"}], "stats": {"total": 75, "additions": 53, "deletions": 22}, "files": [{"sha": "6bb46e70d24bda03a6ea0a098f109e4a8acae99a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=84f80f5bf11215999e2e5461bcdd8a2adae2c127", "patch": "@@ -1,3 +1,20 @@\n+2014-01-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, sem_prag.adb, sem_prag.ads, sem_ch12.adb, sem_res.adb,\n+\tsem_ch6.adb, a-except-2005.adb: Minor reformatting.\n+\n+2014-01-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): When a class-wide\n+\tobject is declared, it is rewritten as a renaming of an dynamic\n+\texpression that wraps the initial value.  The renaming declaration\n+\tis first given an internal name, to prevent collisions with the\n+\tentity already declared, and then the name is modified to reflect\n+\tthe original one. the modification of the name must preserve\n+\tthe source location of the original, to prevent spurious errors\n+\twhen compiling with style checks if the declaration involves\n+\tmore than one entity.\n+\n 2014-01-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* aspects.adb Add entries for Async_Readers, Async_Writers,"}, {"sha": "4fc60e55b42b1e2dde2cdbf6017eb60a125cd5fc", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=84f80f5bf11215999e2e5461bcdd8a2adae2c127", "patch": "@@ -991,11 +991,14 @@ package body Ada.Exceptions is\n       Message : String := \"\")\n    is\n       X : constant EOA := Exception_Propagation.Allocate_Occurrence;\n+\n    begin\n       Exception_Data.Set_Exception_Msg (X, E, Message);\n+\n       if not ZCX_By_Default then\n          Abort_Defer.all;\n       end if;\n+\n       Complete_And_Propagate_Occurrence (X);\n    end Raise_Exception_Always;\n \n@@ -1527,6 +1530,7 @@ package body Ada.Exceptions is\n       if not ZCX_By_Default then\n          Abort_Defer.all;\n       end if;\n+\n       Save_Occurrence (Excep.all, Get_Current_Excep.all.all);\n       Excep.Machine_Occurrence := Saved_MO;\n       Complete_And_Propagate_Occurrence (Excep);"}, {"sha": "ce7f01fb2d0eea3161c7581e2df670dd9a13f368", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=84f80f5bf11215999e2e5461bcdd8a2adae2c127", "patch": "@@ -5504,7 +5504,9 @@ package body Exp_Ch3 is\n                   --  itypes may have been generated already, and the full\n                   --  chain must be preserved for final freezing. Finally,\n                   --  preserve Comes_From_Source setting, so that debugging\n-                  --  and cross-referencing information is properly kept.\n+                  --  and cross-referencing information is properly kept, and\n+                  --  preserve source location, to prevent spurious errors when\n+                  --  entities are declared (they must have their own Sloc).\n \n                   declare\n                      New_Id    : constant Entity_Id := Defining_Identifier (N);\n@@ -5519,6 +5521,7 @@ package body Exp_Ch3 is\n                      Set_Chars   (Defining_Identifier (N), Chars   (Def_Id));\n                      Set_Homonym (Defining_Identifier (N), Homonym (Def_Id));\n                      Set_Ekind   (Defining_Identifier (N), Ekind   (Def_Id));\n+                     Set_Sloc    (Defining_Identifier (N), Sloc    (Def_Id));\n \n                      Set_Comes_From_Source (Def_Id, False);\n                      Exchange_Entities (Defining_Identifier (N), Def_Id);"}, {"sha": "0e2787f2dce552549433c722ec4779f4e50a2774", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=84f80f5bf11215999e2e5461bcdd8a2adae2c127", "patch": "@@ -9844,6 +9844,9 @@ package body Sem_Ch12 is\n       --  it is not a standard Ada legality rule. A volatile object cannot be\n       --  used as an actual in a generic instantiation.\n \n+      --  Should mention that this is a rule for SPARK only, perhaps with\n+      --  a SPARK RM reference???\n+\n       if GNATprove_Mode and then Is_Volatile_Object (Actual) then\n          Error_Msg_N\n            (\"volatile object cannot act as actual in generic instantiation\","}, {"sha": "99f85cb3319cbfb6f342fc9ad6c3beed06847158", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=84f80f5bf11215999e2e5461bcdd8a2adae2c127", "patch": "@@ -93,8 +93,8 @@ package body Sem_Ch3 is\n \n    procedure Analyze_Variable_Contract (Var_Id : Entity_Id);\n    --  Analyze all delayed aspects chained on the contract of variable Var_Id\n-   --  as if they appeared at the end of the declarative region. The aspects in\n-   --  consideration are:\n+   --  as if they appeared at the end of the declarative region. The aspects\n+   --  to be considered are:\n    --    Async_Readers\n    --    Async_Writers\n    --    Effective_Reads"}, {"sha": "edf2c84322dee8e86719ce4e0e117992cf65d8e7", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=84f80f5bf11215999e2e5461bcdd8a2adae2c127", "patch": "@@ -11121,6 +11121,8 @@ package body Sem_Ch6 is\n          --  as it is not a standard Ada legality rule. A function cannot have\n          --  a volatile formal parameter.\n \n+         --  Need to mention this is a SPARK rule, with SPARK RM reference ???\n+\n          if GNATprove_Mode\n            and then Is_Volatile_Object (Formal)\n            and then Ekind_In (Scope (Formal), E_Function, E_Generic_Function)"}, {"sha": "54ef5f3268aefed0ba78c61ed54a04b1992c5ae0", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=84f80f5bf11215999e2e5461bcdd8a2adae2c127", "patch": "@@ -9526,8 +9526,7 @@ package body Sem_Prag is\n             Null_Seen     : Boolean := False;\n \n             Pack_Id : Entity_Id;\n-            --  The entity of the related package when pragma Abstract_State\n-            --  appears.\n+            --  Entity of related package when pragma Abstract_State appears\n \n             procedure Analyze_Abstract_State (State : Node_Id);\n             --  Verify the legality of a single state declaration. Create and\n@@ -9659,7 +9658,7 @@ package body Sem_Prag is\n \n                begin\n                   --  The external property must be one of the predefined four\n-                  --  reader / writer choices.\n+                  --  reader/writer choices.\n \n                   if Nkind (Prop) /= N_Identifier\n                     or else not Nam_In (Chars (Prop), Name_Async_Readers,\n@@ -9721,8 +9720,7 @@ package body Sem_Prag is\n \n                   Analyze (Par_State);\n \n-                  --  The expression of option Part_Of must denote an abstract\n-                  --  state.\n+                  --  Expression of option Part_Of must denote abstract state\n \n                   if not Is_Entity_Name (Par_State)\n                     or else No (Entity (Par_State))\n@@ -22527,34 +22525,34 @@ package body Sem_Prag is\n    begin\n       --  All properties enabled\n \n-      if AR and then AW and then ER and then EW then\n+      if AR and AW and ER and EW then\n          null;\n \n       --  Async_Readers + Effective_Writes\n       --  Async_Readers + Async_Writers + Effective_Writes\n \n-      elsif AR and then EW and then not ER then\n+      elsif AR and EW and not ER then\n          null;\n \n       --  Async_Writers + Effective_Reads\n       --  Async_Readers + Async_Writers + Effective_Reads\n \n-      elsif AW and then ER and then not EW then\n+      elsif AW and ER and not EW then\n          null;\n \n       --  Async_Readers + Async_Writers\n \n-      elsif AR and then AW and then not ER and then not EW then\n+      elsif AR and AW and not ER and not EW then\n          null;\n \n       --  Async_Readers\n \n-      elsif AR and then not AW and then not ER and then not EW then\n+      elsif AR and not AW and not ER and not EW then\n          null;\n \n       --  Async_Writers\n \n-      elsif AW and then not AR and then not ER and then not EW then\n+      elsif AW and not AR and not ER and not EW then\n          null;\n \n       else"}, {"sha": "6d1a01a6ecc4646491415c26fc43ffe8f277e374", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=84f80f5bf11215999e2e5461bcdd8a2adae2c127", "patch": "@@ -136,8 +136,8 @@ package Sem_Prag is\n       EW   : Boolean);\n    --  Flags AR, AW, ER and EW denote the static values of external properties\n    --  Async_Readers, Async_Writers, Effective_Reads and Effective_Writes. Item\n-   --  is the related variable or state. Ensure the legality of the permutation\n-   --  and if this is not the case, issue an error.\n+   --  is the related variable or state. Ensure legality of the combination and\n+   --  issue an error for an illegal combination.\n \n    function Delay_Config_Pragma_Analyze (N : Node_Id) return Boolean;\n    --  N is a pragma appearing in a configuration pragma file. Most such"}, {"sha": "c308ed752eff885ba5ac6c37fe22a6aea35ec93e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f80f5bf11215999e2e5461bcdd8a2adae2c127/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=84f80f5bf11215999e2e5461bcdd8a2adae2c127", "patch": "@@ -4270,6 +4270,9 @@ package body Sem_Res is\n                   null;\n \n                else\n+                  --  Error message should mention SPARK, and perhaps give\n+                  --  a SPARK RM reference ???\n+\n                   Error_Msg_N\n                     (\"volatile object cannot act as actual in a call\", A);\n                end if;\n@@ -5518,12 +5521,11 @@ package body Sem_Res is\n         and then\n           ((Is_Array_Type (Etype (Nam))\n              and then Covers (Typ, Component_Type (Etype (Nam))))\n-             or else (Is_Access_Type (Etype (Nam))\n-                       and then Is_Array_Type (Designated_Type (Etype (Nam)))\n-                       and then\n-                         Covers\n-                          (Typ,\n-                           Component_Type (Designated_Type (Etype (Nam))))))\n+           or else\n+             (Is_Access_Type (Etype (Nam))\n+               and then Is_Array_Type (Designated_Type (Etype (Nam)))\n+               and then\n+                 Covers (Typ, Component_Type (Designated_Type (Etype (Nam))))))\n       then\n          declare\n             Index_Node : Node_Id;\n@@ -6518,6 +6520,8 @@ package body Sem_Res is\n             Par  := Parent (Par);\n          end loop;\n \n+         --  Message should mention SPARK, and perhaps SPARK RM ref ???\n+\n          if not Usage_OK then\n             Error_Msg_N (\"volatile object cannot appear in this context\", N);\n          end if;"}]}