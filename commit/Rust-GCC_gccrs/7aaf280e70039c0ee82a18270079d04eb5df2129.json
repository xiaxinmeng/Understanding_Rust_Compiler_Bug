{"sha": "7aaf280e70039c0ee82a18270079d04eb5df2129", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FhZjI4MGU3MDAzOWMwZWU4MmExODI3MDA3OWQwNGViNWRmMjEyOQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2005-10-24T02:38:25Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2005-10-24T02:38:25Z"}, "message": "pa-protos.h (get_deferred_plabel): New prototype.\n\n\t* pa-protos.h (get_deferred_plabel): New prototype.\n\t* pa.c (get_plabel): Rename to get_deferred_plabel.  Return plabel.\n\tMake global.\n\t(output_call): Adjust calls.\n\nFrom-SVN: r105838", "tree": {"sha": "0fd48a88f4af67e020da283021fed749e3c9b221", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fd48a88f4af67e020da283021fed749e3c9b221"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7aaf280e70039c0ee82a18270079d04eb5df2129", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aaf280e70039c0ee82a18270079d04eb5df2129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aaf280e70039c0ee82a18270079d04eb5df2129", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aaf280e70039c0ee82a18270079d04eb5df2129/comments", "author": null, "committer": null, "parents": [{"sha": "4fed8f8f5fd09c58902646af609707f59142b69a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fed8f8f5fd09c58902646af609707f59142b69a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fed8f8f5fd09c58902646af609707f59142b69a"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "d27482234edf035ec03e1a9de4a28821daed7fb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aaf280e70039c0ee82a18270079d04eb5df2129/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aaf280e70039c0ee82a18270079d04eb5df2129/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7aaf280e70039c0ee82a18270079d04eb5df2129", "patch": "@@ -1,3 +1,10 @@\n+2005-10-23  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa-protos.h (get_deferred_plabel): New prototype.\n+\t* pa.c (get_plabel): Rename to get_deferred_plabel.  Return plabel.\n+\tMake global.\n+\t(output_call): Adjust calls.\n+\n 2005-10-24  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.c (rs6000_legitimize_tls_address): Explain"}, {"sha": "7422cd9d37806c27ad5551480c5f3e1c23cac42a", "filename": "gcc/config/pa/pa-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aaf280e70039c0ee82a18270079d04eb5df2129/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aaf280e70039c0ee82a18270079d04eb5df2129/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-protos.h?ref=7aaf280e70039c0ee82a18270079d04eb5df2129", "patch": "@@ -132,6 +132,7 @@ extern enum direction function_arg_padding (enum machine_mode, tree);\n extern int non_hard_reg_operand (rtx, enum machine_mode);\n extern int eq_neq_comparison_operator (rtx, enum machine_mode);\n extern int insn_refs_are_delayed (rtx);\n+extern rtx get_deferred_plabel (rtx);\n #endif /* RTX_CODE */\n \n /* Prototype function used in macro CONST_OK_FOR_LETTER_P.  */"}, {"sha": "adeabed8cbac0971334c12c67126024c2086c439", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aaf280e70039c0ee82a18270079d04eb5df2129/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aaf280e70039c0ee82a18270079d04eb5df2129/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=7aaf280e70039c0ee82a18270079d04eb5df2129", "patch": "@@ -127,7 +127,6 @@ static bool pa_scalar_mode_supported_p (enum machine_mode);\n static bool pa_commutative_p (rtx x, int outer_code);\n static void copy_fp_args (rtx) ATTRIBUTE_UNUSED;\n static int length_fp_args (rtx) ATTRIBUTE_UNUSED;\n-static struct deferred_plabel *get_plabel (rtx) ATTRIBUTE_UNUSED;\n static inline void pa_file_start_level (void) ATTRIBUTE_UNUSED;\n static inline void pa_file_start_space (int) ATTRIBUTE_UNUSED;\n static inline void pa_file_start_file (int) ATTRIBUTE_UNUSED;\n@@ -5224,8 +5223,11 @@ pa_hpux64_hpas_file_start (void)\n }\n #undef aputs\n \n-static struct deferred_plabel *\n-get_plabel (rtx symbol)\n+/* Search the deferred plabel list for SYMBOL and return its internal\n+   label.  If an entry for SYMBOL is not found, a new entry is created.  */\n+\n+rtx\n+get_deferred_plabel (rtx symbol)\n {\n   const char *fname = XSTR (symbol, 0);\n   size_t i;\n@@ -5263,7 +5265,7 @@ get_plabel (rtx symbol)\n \tmark_referenced (id);\n     }\n \n-  return &deferred_plabels[i];\n+  return deferred_plabels[i].internal_label;\n }\n \n static void\n@@ -7103,9 +7105,7 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t  /* ??? As far as I can tell, the HP linker doesn't support the\n \t     long pc-relative sequence described in the 64-bit runtime\n \t     architecture.  So, we use a slightly longer indirect call.  */\n-\t  struct deferred_plabel *p = get_plabel (call_dest);\n-\n-\t  xoperands[0] = p->internal_label;\n+\t  xoperands[0] = get_deferred_plabel (call_dest);\n \t  xoperands[1] = gen_label_rtx ();\n \n \t  /* If this isn't a sibcall, we put the load of %r27 into the\n@@ -7232,9 +7232,7 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t\t     essentially an inline implementation of $$dyncall.\n \t\t     We don't actually try to call $$dyncall as this is\n \t\t     as difficult as calling the function itself.  */\n-\t\t  struct deferred_plabel *p = get_plabel (call_dest);\n-\n-\t\t  xoperands[0] = p->internal_label;\n+\t\t  xoperands[0] = get_deferred_plabel (call_dest);\n \t\t  xoperands[1] = gen_label_rtx ();\n \n \t\t  /* Since the call is indirect, FP arguments in registers"}]}