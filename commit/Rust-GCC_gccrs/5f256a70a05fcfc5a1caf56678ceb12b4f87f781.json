{"sha": "5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYyNTZhNzBhMDVmY2ZjNWExY2FmNTY2NzhjZWIxMmI0Zjg3Zjc4MQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-20T00:16:24Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-20T00:16:24Z"}, "message": "Daily bump.", "tree": {"sha": "6526c452d22c98954a704e53d09145415eab6cba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6526c452d22c98954a704e53d09145415eab6cba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/comments", "author": null, "committer": null, "parents": [{"sha": "3279a9a5a9a2e4e17175678cb7b15613495e306e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3279a9a5a9a2e4e17175678cb7b15613495e306e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3279a9a5a9a2e4e17175678cb7b15613495e306e"}], "stats": {"total": 162, "additions": 161, "deletions": 1}, "files": [{"sha": "4f29464b2b6376568b192a672109b7bd65e533f5", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1,3 +1,7 @@\n+2021-03-19  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* texi2pod.pl: Substitute @tie{} with a space for the man pages.\n+\n 2021-03-16  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_update_version.py: Skip one problematic"}, {"sha": "2b518a05e76b07ec6c586b19e24c9b82fadefeee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1,3 +1,71 @@\n+2021-03-19  Pat Haugen  <pthaugen@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (power10_cost): New.\n+\t(rs6000_option_override_internal): Set Power10 costs.\n+\t(rs6000_issue_rate): Set Power10 issue rate.\n+\t* config/rs6000/power10.md: Rewrite for Power10.\n+\n+2021-03-19  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/99663\n+\t* lra-constraints.c (process_address_1): Don't use unknown\n+\tconstraint for address constraint.\n+\n+2021-03-19  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR target/99661\n+\t* config.gcc (powerpc-*-darwin8): Delete the reference to\n+\tthe now removed darwin8.h.\n+\n+2021-03-19  Olivier Hainque  <hainque@adacore.com>\n+\n+\tPR target/99660\n+\t* config/vxworksae.h (VX_CPU_PREFIX): Define.\n+\n+2021-03-19  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/pa.c (import_milli): Use memcpy instead of strncpy.\n+\n+2021-03-19  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/99656\n+\t* tree-vect-slp-patterns.c (linear_loads_p,\n+\tcomplex_add_pattern::matches, is_eq_or_top,\n+\tvect_validate_multiplication, complex_mul_pattern::matches,\n+\tcomplex_fms_pattern::matches): Remove complex_perm_kinds_t.\n+\t* tree-vectorizer.h: (complex_load_perm_t): Removed.\n+\t(slp_tree_to_load_perm_map_t): Use complex_perm_kinds_t instead of\n+\tcomplex_load_perm_t.\n+\n+2021-03-19  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/99652\n+\t* config/i386/i386-options.c (ix86_init_machine_status): Set\n+\tsilent_p to true.\n+\t* config/i386/i386.c (init_cumulative_args): Set silent_p to\n+\tfalse.\n+\t(construct_container): Return early for return and argument\n+\terrors if silent_p is true.\n+\t* config/i386/i386.h (machine_function): Add silent_p.\n+\n+2021-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99593\n+\t* config/arm/constraints.md (Ds): New constraint.\n+\t* config/arm/vec-common.md (mve_vshlq_<supf><mode>): Use w,Ds\n+\tconstraint instead of w,Dm.\n+\n+2021-03-19  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn.c (gcn_parse_amdgpu_hsa_kernel_attribute): Fix quotes\n+\tin error message.\n+\n+2021-03-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/99641\n+\t* fold-const.c (native_encode_initializer) <CONSTRUCTOR>: For an\n+\tarray type, do the computation of the current position in sizetype.\n+\n 2021-03-18  Vladimir N. Makarov  <vmakarov@redhat.com>\n \n \tPR target/99422"}, {"sha": "ceb88dd1088c6b91de80b8c06d924e7ad89111a8", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1 +1 @@\n-20210319\n+20210320"}, {"sha": "70b1be51fa1e1118a51a246da6f74617ce377a51", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1,3 +1,9 @@\n+2021-03-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99614\n+\t* diagnostic-manager.cc (class epath_finder): Add\n+\tDISABLE_COPY_AND_ASSIGN.\n+\n 2021-03-15  Martin Liska  <mliska@suse.cz>\n \n \t* sm-file.cc (get_file_using_fns): Add missing comma in initializer."}, {"sha": "5a3e934084f782b0f1108e6f38212a19823000f3", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1,3 +1,13 @@\n+2021-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/99588\n+\t* c-typeck.c (mark_exp_read): Recognize what build_atomic_assign\n+\twith modifycode NOP_EXPR produces and mark the _Atomic var as read\n+\tif found.\n+\t(build_atomic_assign): For modifycode of NOP_EXPR, use COMPOUND_EXPRs\n+\trather than STATEMENT_LIST.  Otherwise call mark_exp_read on lhs.\n+\tSet TREE_SIDE_EFFECTS on the TARGET_EXPR.\n+\n 2021-03-15  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR c++/99509"}, {"sha": "ec30050364c592f1ea7c852ced32fe3de9f049b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1,3 +1,10 @@\n+2021-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99456\n+\t* constexpr.c (cxx_eval_constant_expression): For CONVERT_EXPR from\n+\tINDIRECT_TYPE_P to ARITHMETIC_TYPE_P, when !ctx->manifestly_const_eval\n+\tdon't diagnose it, set *non_constant_p nor return t.\n+\n 2021-03-19  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/99500"}, {"sha": "51d4329ee1308df92b8dd16c3beec013e71a936a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1,3 +1,10 @@\n+2021-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* frontend-passes.c (inline_limit_check): Add rank_a\n+\targument. If a is rank 1, set the second dimension to 1.\n+\t(inline_matmul_assign): Pass rank_a argument to inline_limit_check.\n+\t(call_external_blas): Likewise.\n+\n 2021-03-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/99345"}, {"sha": "89e587ae034edfd9bc8b1b664acfbe0d679c2f8e", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1,3 +1,7 @@\n+2021-03-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.pot: Regenerate.\n+\n 2021-03-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "ddc15babe8e6cdab7eb1f141498e919816490a96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1,3 +1,50 @@\n+2021-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/99588\n+\t* gcc.dg/Wunused-var-5.c: New test.\n+\t* gcc.dg/Wunused-var-6.c: New test.\n+\n+2021-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* gfortran.dg/inline_matmul_6.f90: Adjust count for\n+\t  _gfortran_matmul.\n+\n+2021-03-19  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/99663\n+\t* gcc.target/s390/pr99663.c: New.\n+\n+2021-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99456\n+\t* g++.dg/opt/pr99456.C: New test.\n+\t* g++.dg/ext/vla22.C: Expect a -Wnarrowing warning for c++11 and\n+\tlater.\n+\n+2021-03-19  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/99656\n+\t* gfortran.dg/vect/pr99656.f90: New test.\n+\n+2021-03-19  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/99652\n+\t* gcc.dg/torture/pr99652-1.c: New test.\n+\t* gcc.dg/torture/pr99652-2.c: Likewise.\n+\t* gcc.target/i386/pr57655.c: Adjusted.\n+\t* gcc.target/i386/pr59794-6.c: Likewise.\n+\t* gcc.target/i386/pr70738-1.c: Likewise.\n+\t* gcc.target/i386/pr96744-1.c: Likewise.\n+\n+2021-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99593\n+\t* g++.target/arm/pr99593.C: New test.\n+\n+2021-03-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g++.dg/lto/pr89335_0.C: Require the linker plugin.\n+\n 2021-03-19  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/99500"}, {"sha": "09e5c2e766ee38f182f385b225ae5506c81fa1d1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f256a70a05fcfc5a1caf56678ceb12b4f87f781/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5f256a70a05fcfc5a1caf56678ceb12b4f87f781", "patch": "@@ -1,3 +1,10 @@\n+2021-03-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/type_traits (is_scoped_enum): Define.\n+\t* include/std/version (__cpp_lib_is_scoped_enum): Define.\n+\t* testsuite/20_util/is_scoped_enum/value.cc: New test.\n+\t* testsuite/20_util/is_scoped_enum/version.cc: New test.\n+\n 2021-03-16  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/99341"}]}