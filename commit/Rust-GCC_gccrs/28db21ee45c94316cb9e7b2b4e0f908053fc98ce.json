{"sha": "28db21ee45c94316cb9e7b2b4e0f908053fc98ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhkYjIxZWU0NWM5NDMxNmNiOWU3YjJiNGUwZjkwODA1M2ZjOThjZQ==", "commit": {"author": {"name": "Tobias Grosser", "email": "grosser@fim.uni-passau.de", "date": "2012-02-15T12:20:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-02-15T12:20:10Z"}, "message": "re PR tree-optimization/50561 (ICE when compiling zlib with -O2 -floop-flatten -floop-strip-mine)\n\n2012-02-15  Tobias Grosser <grosser@fim.uni-passau.de>\n\n\tPR tree-optimization/50561\n\t* graphite-flattening.c (lst_project_loop): Do not\n\tremove old scattering dimensions after flattening.\n\t(lst_do_flatten): Likewise.\n\n\t* gcc.dg/graphite/pr50561.c: New testcase.\n\nFrom-SVN: r184265", "tree": {"sha": "da7f3a977fabcb389928cb8467779eedd99841c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da7f3a977fabcb389928cb8467779eedd99841c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28db21ee45c94316cb9e7b2b4e0f908053fc98ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28db21ee45c94316cb9e7b2b4e0f908053fc98ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28db21ee45c94316cb9e7b2b4e0f908053fc98ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28db21ee45c94316cb9e7b2b4e0f908053fc98ce/comments", "author": {"login": "tobiasgrosser", "id": 521960, "node_id": "MDQ6VXNlcjUyMTk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/521960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasgrosser", "html_url": "https://github.com/tobiasgrosser", "followers_url": "https://api.github.com/users/tobiasgrosser/followers", "following_url": "https://api.github.com/users/tobiasgrosser/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasgrosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasgrosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasgrosser/subscriptions", "organizations_url": "https://api.github.com/users/tobiasgrosser/orgs", "repos_url": "https://api.github.com/users/tobiasgrosser/repos", "events_url": "https://api.github.com/users/tobiasgrosser/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasgrosser/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c578db6dd12d39618ad2500a80bae4ba38cf260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c578db6dd12d39618ad2500a80bae4ba38cf260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c578db6dd12d39618ad2500a80bae4ba38cf260"}], "stats": {"total": 63, "additions": 56, "deletions": 7}, "files": [{"sha": "1e3d36f22f3e18f556808545ce160a65cfff258f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28db21ee45c94316cb9e7b2b4e0f908053fc98ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28db21ee45c94316cb9e7b2b4e0f908053fc98ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28db21ee45c94316cb9e7b2b4e0f908053fc98ce", "patch": "@@ -1,3 +1,10 @@\n+2012-02-15  Tobias Grosser <grosser@fim.uni-passau.de>\n+\n+\tPR tree-optimization/50561\n+\t* graphite-flattening.c (lst_project_loop): Do not\n+\tremove old scattering dimensions after flattening.\n+\t(lst_do_flatten): Likewise.\n+\n 2012-02-15  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* doc/extend.texi (AVR Built-in Functions): Remove doc for"}, {"sha": "33f25e01b03f680493f0b396a81cc8e421598a8c", "filename": "gcc/graphite-flattening.c", "status": "modified", "additions": 35, "deletions": 7, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28db21ee45c94316cb9e7b2b4e0f908053fc98ce/gcc%2Fgraphite-flattening.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28db21ee45c94316cb9e7b2b4e0f908053fc98ce/gcc%2Fgraphite-flattening.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-flattening.c?ref=28db21ee45c94316cb9e7b2b4e0f908053fc98ce", "patch": "@@ -277,12 +277,26 @@ lst_project_loop (lst_p outer, lst_p inner, mpz_t stride)\n       ppl_delete_Linear_Expression (expr);\n \n       /* Remove inner loop and the static schedule of its body.  */\n-      ds = XNEWVEC (ppl_dimension_type, 2);\n-      ds[0] = inner_dim;\n-      ds[1] = inner_dim + 1;\n-      ppl_Polyhedron_remove_space_dimensions (poly, ds, 2);\n-      PBB_NB_SCATTERING_TRANSFORM (pbb) -= 2;\n-      free (ds);\n+      /* FIXME: As long as we use PPL we are not able to remove the old\n+\t scattering dimensions.  The reason is that these dimensions are not\n+\t entirely unused.  They are not necessary as part of the scheduling\n+\t vector, as the earlier dimensions already unambiguously define the\n+\t execution time, however they may still be needed to carry modulo\n+\t constraints as introduced e.g. by strip mining.  The correct solution\n+\t would be to project these dimensions out of the scattering polyhedra.\n+\t In case they are still required to carry modulo constraints they should be kept\n+\t internally as existentially quantified dimensions.  PPL does only support\n+         projection of rational polyhedra, however in this case we need an integer\n+\t projection. With isl this will be trivial to implement.  For now we just\n+\t leave the dimensions. This is a little ugly, but should be correct.  */\n+      if (0) {\n+\tds = XNEWVEC (ppl_dimension_type, 2);\n+\tds[0] = inner_dim;\n+\tds[1] = inner_dim + 1;\n+\tppl_Polyhedron_remove_space_dimensions (poly, ds, 2);\n+\tPBB_NB_SCATTERING_TRANSFORM (pbb) -= 2;\n+\tfree (ds);\n+      }\n     }\n \n   mpz_clear (x);\n@@ -412,7 +426,21 @@ lst_do_flatten (lst_p lst)\n     if (LST_LOOP_P (l))\n       {\n \tres |= lst_flatten_loop (l, zero);\n-\tremove_unused_scattering_dimensions (l);\n+\n+\t/* FIXME: As long as we use PPL we are not able to remove the old\n+\t   scattering dimensions.  The reason is that these dimensions are not\n+\t   entirely unused.  They are not necessary as part of the scheduling\n+\t   vector, as the earlier dimensions already unambiguously define the\n+\t   execution time, however they may still be needed to carry modulo\n+\t   constraints as introduced e.g. by strip mining.  The correct solution\n+\t   would be to project these dimensions out of the scattering polyhedra.\n+\t   In case they are still required to carry modulo constraints they should be kept\n+\t   internally as existentially quantified dimensions.  PPL does only support\n+           projection of rational polyhedra, however in this case we need an integer\n+\t   projection. With isl this will be trivial to implement.  For now we just\n+\t   leave the dimensions. This is a little ugly, but should be correct.  */\n+\tif (0)\n+\t  remove_unused_scattering_dimensions (l);\n       }\n \n   lst_update_scattering (lst);"}, {"sha": "64bdac5cfc25a3759b4fe44b7dc14e9c23b29277", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28db21ee45c94316cb9e7b2b4e0f908053fc98ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28db21ee45c94316cb9e7b2b4e0f908053fc98ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28db21ee45c94316cb9e7b2b4e0f908053fc98ce", "patch": "@@ -1,3 +1,8 @@\n+2012-02-15  Tobias Grosser <grosser@fim.uni-passau.de>\n+\n+\tPR tree-optimization/50561\n+\t* gcc.dg/graphite/pr50561.c: New testcase.\n+\n 2012-02-15  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* gcc.target/avr/torture/builtin_insert_bits-1.c: New test."}, {"sha": "70c6bbcc2a3668e745e3b7cafe623216a906faf7", "filename": "gcc/testsuite/gcc.dg/graphite/pr50561.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28db21ee45c94316cb9e7b2b4e0f908053fc98ce/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr50561.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28db21ee45c94316cb9e7b2b4e0f908053fc98ce/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr50561.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr50561.c?ref=28db21ee45c94316cb9e7b2b4e0f908053fc98ce", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -floop-flatten -floop-strip-mine\" } */\n+\n+void f (unsigned *s)\n+{\n+  int n;\n+  for (n = 0; n < 256; n++)\n+    s[n] = 0;\n+}"}]}