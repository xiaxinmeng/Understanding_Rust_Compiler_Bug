{"sha": "fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIzOWM0ZmU0NDViZWFiMmUyYmY5NDAyYThjY2IzYzU0MWYyYWE1Yw==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-01-20T03:24:08Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-01-20T22:42:02Z"}, "message": "aix: make ctype_inline.h thread-safe and avoid _OBJ_DATA char subscript.\n\ng++.dg/warn/Wstringop-overflow-6.C tests for a bogus overflow warning in\nsystem headers.  This testcase was generating a -Wchar-subscript warning\non AIX because ctype_inline.h was subscripting AIX _OBJ_DATA using a char.\nThe _M_table case cast the subscript to unsigned char, but the _OBJ_DATA\ncase did not.\n\nThe investigation also exposed that AIX has added a thread-safe variant\nof access to __lc_type that had not been applied to the libstdc++\nimplementation.\n\nThis patch casts the subscript to unsigned char and adds the THREAD_SAFE\nvariant.  libstdc++ always is compiled with pthreads, but it is good\nto make the situation explicit and to document the appropriate usage.\n\nBootstrapped on powerpc-ibm-aix7.2.3.0.\n\nlibstdc++-v3/ChangeLog:\n\n\t* config/os/aix/ctype_inline.h (bool ctype<char>:: is): Cast\n\t_OBJ_DATA subscript to unsigned char. Add _THREAD_SAFE access to\n\t__lc_type.\n\t(const char* ctype<char>:: is): Same.", "tree": {"sha": "2d7fc45e1f48f02cbf00a8091319551e82704d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d7fc45e1f48f02cbf00a8091319551e82704d4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "842afc4e289ed3fe69583672c1a180f268d73799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842afc4e289ed3fe69583672c1a180f268d73799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/842afc4e289ed3fe69583672c1a180f268d73799"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "696fcfbf85a634719dfb8c0bd6c767476f526d9d", "filename": "libstdc++-v3/config/os/aix/ctype_inline.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_inline.h?ref=fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c", "patch": "@@ -45,7 +45,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     if(_M_table)\n       return _M_table[static_cast<unsigned char>(__c)] & __m;\n     else\n-      return __OBJ_DATA(__lc_ctype)->mask[__c] & __m;\n+#ifdef _THREAD_SAFE\n+      return __OBJ_DATA((*__lc_ctype_ptr))->mask[static_cast<unsigned char>(__c)] & __m;\n+#else\n+      return __OBJ_DATA(__lc_ctype)->mask[static_cast<unsigned char>(__c)] & __m;\n+#endif\n   }\n \n   const char*\n@@ -57,7 +61,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t*__vec++ = _M_table[static_cast<unsigned char>(*__low++)];\n     else\n       while (__low < __high)\n-        *__vec++ = __OBJ_DATA(__lc_ctype)->mask[*__low++];\n+#ifdef _THREAD_SAFE\n+\t*__vec++ = __OBJ_DATA((*__lc_ctype_ptr))->mask[static_cast<unsigned char>(*__low++)];\n+#else\n+        *__vec++ = __OBJ_DATA(__lc_ctype)->mask[static_cast<unsigned char>(*__low++)];\n+#endif\n     return __high;\n   }\n "}]}