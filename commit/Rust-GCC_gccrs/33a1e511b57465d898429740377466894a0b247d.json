{"sha": "33a1e511b57465d898429740377466894a0b247d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNhMWU1MTFiNTc0NjVkODk4NDI5NzQwMzc3NDY2ODk0YTBiMjQ3ZA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2021-01-28T18:00:56Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2021-02-01T18:19:53Z"}, "message": "libstdc++: Make deque iterator operator- usable with value-init iterators\n\nN3644 implies that operator- can be used on value-init iterators. We now return\n0 if both iterators are value initialized. If only one is value initialized we\nkeep the UB by returning the result of a normal computation which is a meaningless\nvalue.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/70303\n\t* include/bits/stl_deque.h (std::deque<>::operator-(iterator, iterator)):\n\tReturn 0 if both iterators are value-initialized.\n\t* testsuite/23_containers/deque/70303.cc: New test.\n\t* testsuite/23_containers/vector/70303.cc: New test.", "tree": {"sha": "e95166c245283bfb7dd3120a3673ae0ee5e4ff9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e95166c245283bfb7dd3120a3673ae0ee5e4ff9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33a1e511b57465d898429740377466894a0b247d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a1e511b57465d898429740377466894a0b247d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a1e511b57465d898429740377466894a0b247d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a1e511b57465d898429740377466894a0b247d/comments", "author": null, "committer": null, "parents": [{"sha": "11056ab7687f7156846e93557c9171b77713bd7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11056ab7687f7156846e93557c9171b77713bd7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11056ab7687f7156846e93557c9171b77713bd7e"}], "stats": {"total": 152, "additions": 146, "deletions": 6}, "files": [{"sha": "04b70b776218320765d2d2a193432416d723b815", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a1e511b57465d898429740377466894a0b247d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a1e511b57465d898429740377466894a0b247d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=33a1e511b57465d898429740377466894a0b247d", "patch": "@@ -352,9 +352,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       friend difference_type\n       operator-(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT\n       {\n-\treturn difference_type(_S_buffer_size())\n-\t  * (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)\n-\t  + (__y._M_last - __y._M_cur);\n+\tif (__builtin_expect(__x._M_node || __y._M_node, true))\n+\t  return difference_type(_S_buffer_size())\n+\t    * (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)\n+\t    + (__y._M_last - __y._M_cur);\n+\n+\treturn 0;\n       }\n \n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n@@ -366,9 +369,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \toperator-(const _Self& __x,\n \t\t  const _Deque_iterator<_Tp, _RefR, _PtrR>& __y) _GLIBCXX_NOEXCEPT\n \t{\n-\t  return difference_type(_S_buffer_size())\n-\t    * (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)\n-\t    + (__y._M_last - __y._M_cur);\n+\t  if (__builtin_expect(__x._M_node || __y._M_node, true))\n+\t    return difference_type(_S_buffer_size())\n+\t      * (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)\n+\t      + (__y._M_last - __y._M_cur);\n+\n+\t  return 0;\n \t}\n \n       friend _Self"}, {"sha": "e0e6369417008a300a29c1aad9607cb85f718150", "filename": "libstdc++-v3/testsuite/23_containers/deque/70303.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a1e511b57465d898429740377466894a0b247d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F70303.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a1e511b57465d898429740377466894a0b247d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F70303.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F70303.cc?ref=33a1e511b57465d898429740377466894a0b247d", "patch": "@@ -0,0 +1,67 @@\n+// Copyright (C) 2021 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run }\n+\n+#include <deque>\n+#include <testsuite_hooks.h>\n+\n+// PR libstdc++/70303\n+\n+void test01()\n+{\n+  typedef typename std::deque<int>::iterator It;\n+  It it = It();\n+  VERIFY(it == it);\n+  VERIFY(!(it != it));\n+  VERIFY(it - it == 0);\n+  VERIFY(!(it < it));\n+  VERIFY(!(it > it));\n+  VERIFY(it <= it);\n+  VERIFY(it >= it);\n+\n+  typedef typename std::deque<int>::const_iterator CIt;\n+  CIt cit = CIt();\n+  VERIFY(cit == cit);\n+  VERIFY(!(cit != cit));\n+  VERIFY(cit - cit == 0);\n+  VERIFY(!(cit < cit));\n+  VERIFY(!(cit > cit));\n+  VERIFY(cit <= cit);\n+  VERIFY(cit >= cit);\n+\n+  VERIFY(it == cit);\n+  VERIFY(!(it != cit));\n+  VERIFY(cit == it);\n+  VERIFY(!(cit != it));\n+  VERIFY(it - cit == 0);\n+  VERIFY(cit - it == 0);\n+  VERIFY(!(it < cit));\n+  VERIFY(!(it > cit));\n+  VERIFY(it <= cit);\n+  VERIFY(it >= cit);\n+  VERIFY(!(cit < it));\n+  VERIFY(!(cit > it));\n+  VERIFY(cit <= it);\n+  VERIFY(cit >= it);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "af18a0503d8d13101863319234eb8f2f67b395e9", "filename": "libstdc++-v3/testsuite/23_containers/vector/70303.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a1e511b57465d898429740377466894a0b247d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F70303.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a1e511b57465d898429740377466894a0b247d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F70303.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F70303.cc?ref=33a1e511b57465d898429740377466894a0b247d", "patch": "@@ -0,0 +1,67 @@\n+// Copyright (C) 2021 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run }\n+\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+// PR libstdc++/70303\n+\n+void test01()\n+{\n+  typedef typename std::vector<int>::iterator It;\n+  It it = It();\n+  VERIFY(it == it);\n+  VERIFY(!(it != it));\n+  VERIFY(it - it == 0);\n+  VERIFY(!(it < it));\n+  VERIFY(!(it > it));\n+  VERIFY(it <= it);\n+  VERIFY(it >= it);\n+\n+  typedef typename std::vector<int>::const_iterator CIt;\n+  CIt cit = CIt();\n+  VERIFY(cit == cit);\n+  VERIFY(!(cit != cit));\n+  VERIFY(cit - cit == 0);\n+  VERIFY(!(cit < cit));\n+  VERIFY(!(cit > cit));\n+  VERIFY(cit <= cit);\n+  VERIFY(cit >= cit);\n+\n+  VERIFY(it == cit);\n+  VERIFY(!(it != cit));\n+  VERIFY(cit == it);\n+  VERIFY(!(cit != it));\n+  VERIFY(it - cit == 0);\n+  VERIFY(cit - it == 0);\n+  VERIFY(!(it < cit));\n+  VERIFY(!(it > cit));\n+  VERIFY(it <= cit);\n+  VERIFY(it >= cit);\n+  VERIFY(!(cit < it));\n+  VERIFY(!(cit > it));\n+  VERIFY(cit <= it);\n+  VERIFY(cit >= it);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}