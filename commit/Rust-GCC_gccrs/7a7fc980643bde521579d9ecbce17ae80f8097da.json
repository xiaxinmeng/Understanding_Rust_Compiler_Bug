{"sha": "7a7fc980643bde521579d9ecbce17ae80f8097da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E3ZmM5ODA2NDNiZGU1MjE1NzlkOWVjYmNlMTdhZTgwZjgwOTdkYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-10-01T23:57:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-10-01T23:57:18Z"}, "message": "decl.c (check_initializer): Set DECL_NONTRIVIALLY_INITIALIZED_P for a constructor call.\n\n\t* decl.c (check_initializer): Set DECL_NONTRIVIALLY_INITIALIZED_P\n\tfor a constructor call.\n\t(decl_jump_unsafe): So don't bother checking\n\ttype_has_nontrivial_default_init.\n\t* call.c (set_up_extended_ref_temp): Set\n\tDECL_NONTRIVIALLY_INITIALIZED_P.\n\nFrom-SVN: r191948", "tree": {"sha": "fade546f48cfc9f3d33c59f96682e456be1a5368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fade546f48cfc9f3d33c59f96682e456be1a5368"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a7fc980643bde521579d9ecbce17ae80f8097da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a7fc980643bde521579d9ecbce17ae80f8097da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a7fc980643bde521579d9ecbce17ae80f8097da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a7fc980643bde521579d9ecbce17ae80f8097da/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1ffba987b161b6a0b757dcd8e7bca47bc9c27e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ffba987b161b6a0b757dcd8e7bca47bc9c27e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ffba987b161b6a0b757dcd8e7bca47bc9c27e4"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "f868739be6ef1643e474d93f6e78e1d3ba9426a8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a7fc980643bde521579d9ecbce17ae80f8097da/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a7fc980643bde521579d9ecbce17ae80f8097da/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a7fc980643bde521579d9ecbce17ae80f8097da", "patch": "@@ -1,5 +1,12 @@\n 2012-10-01  Jason Merrill  <jason@redhat.com>\n \n+\t* decl.c (check_initializer): Set DECL_NONTRIVIALLY_INITIALIZED_P\n+\tfor a constructor call.\n+\t(decl_jump_unsafe): So don't bother checking\n+\ttype_has_nontrivial_default_init.\n+\t* call.c (set_up_extended_ref_temp): Set\n+\tDECL_NONTRIVIALLY_INITIALIZED_P.\n+\n \t* cp-tree.h (TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK): New.\n \t(DECL_FRIEND_P, DECL_ANTICIPATED): Use it.\n \t(TYPE_FUNCTION_OR_TEMPLATE_DECL_P): New."}, {"sha": "d0492d8deef007a37c013155175c0adbcd65331e", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a7fc980643bde521579d9ecbce17ae80f8097da/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a7fc980643bde521579d9ecbce17ae80f8097da/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=7a7fc980643bde521579d9ecbce17ae80f8097da", "patch": "@@ -8792,6 +8792,9 @@ set_up_extended_ref_temp (tree decl, tree expr, VEC(tree,gc) **cleanups,\n   TARGET_EXPR_INITIAL (expr)\n     = extend_ref_init_temps (decl, TARGET_EXPR_INITIAL (expr), cleanups);\n \n+  /* Any reference temp has a non-trivial initializer.  */\n+  DECL_NONTRIVIALLY_INITIALIZED_P (var) = true;\n+\n   /* If the initializer is constant, put it in DECL_INITIAL so we get\n      static initialization and use in constant expressions.  */\n   init = maybe_constant_init (expr);"}, {"sha": "bfe7ad70e0c0fcae38f591deb7e3289b2d5ea007", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a7fc980643bde521579d9ecbce17ae80f8097da/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a7fc980643bde521579d9ecbce17ae80f8097da/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=7a7fc980643bde521579d9ecbce17ae80f8097da", "patch": "@@ -2271,12 +2271,13 @@ struct GTY((variable_size)) lang_decl {\n \n /* Nonzero for a VAR_DECL means that the variable's initialization (if\n    any) has been processed.  (In general, DECL_INITIALIZED_P is\n-   !DECL_EXTERN, but static data members may be initialized even if\n+   !DECL_EXTERNAL, but static data members may be initialized even if\n    not defined.)  */\n #define DECL_INITIALIZED_P(NODE) \\\n    (TREE_LANG_FLAG_1 (VAR_DECL_CHECK (NODE)))\n \n-/* Nonzero for a VAR_DECL iff an explicit initializer was provided.  */\n+/* Nonzero for a VAR_DECL iff an explicit initializer was provided\n+   or a non-trivial constructor is called.  */\n #define DECL_NONTRIVIALLY_INITIALIZED_P(NODE)\t\\\n    (TREE_LANG_FLAG_3 (VAR_DECL_CHECK (NODE)))\n "}, {"sha": "d0933efc8dd7e80b0fd9b063ba932d85460e047c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a7fc980643bde521579d9ecbce17ae80f8097da/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a7fc980643bde521579d9ecbce17ae80f8097da/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=7a7fc980643bde521579d9ecbce17ae80f8097da", "patch": "@@ -2679,8 +2679,7 @@ decl_jump_unsafe (tree decl)\n \n   type = strip_array_types (type);\n \n-  if (type_has_nontrivial_default_init (TREE_TYPE (decl))\n-      || DECL_NONTRIVIALLY_INITIALIZED_P (decl))\n+  if (DECL_NONTRIVIALLY_INITIALIZED_P (decl))\n     return 2;\n \n   if (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (TREE_TYPE (decl)))\n@@ -5581,6 +5580,11 @@ check_initializer (tree decl, tree init, int flags, VEC(tree,gc) **cleanups)\n \t{\n \t  init_code = build_aggr_init_full_exprs (decl, init, flags);\n \n+\t  /* A constructor call is a non-trivial initializer even if\n+\t     it isn't explicitly written.  */\n+\t  if (TREE_SIDE_EFFECTS (init_code))\n+\t    DECL_NONTRIVIALLY_INITIALIZED_P (decl) = true;\n+\n \t  /* If this is a constexpr initializer, expand_default_init will\n \t     have returned an INIT_EXPR rather than a CALL_EXPR.  In that\n \t     case, pull the initializer back out and pass it down into"}]}