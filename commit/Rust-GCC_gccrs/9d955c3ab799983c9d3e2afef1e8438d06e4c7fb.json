{"sha": "9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ5NTVjM2FiNzk5OTgzYzlkM2UyYWZlZjFlODQzOGQwNmU0YzdmYg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-12-16T15:43:41Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-12-16T15:43:41Z"}, "message": "clix.h (ASM_OUTPUT_ASCII): Avoid signed/unsigned warnings.\n\n\t* clipper/clix.h (ASM_OUTPUT_ASCII): Avoid signed/unsigned\n\twarnings.\n\t* convex.h (ASM_OUTPUT_ASCII): Likewise.\n\t* i370.h (ASM_OUTPUT_ASCII): Likewise.\n\t* i386/att.h (ASM_OUTPUT_ASCII): Likewise.\n\t* i386/i386-interix.h (ASM_OUTPUT_ASCII): Likewise.\n\t* i386/i386elf.h (ASM_OUTPUT_ASCII): Likewise.\n\t* i386/ptx4-i.h (ASM_OUTPUT_ASCII): Likewise.\n\t* i386/sco5.h (ASM_OUTPUT_ASCII): Likewise.\n\t* i386/sun386.h (ASM_OUTPUT_ASCII): Likewise.\n\t* i386/sysv4.h (ASM_OUTPUT_ASCII): Likewise.\n\t* i860/bsd.h (ASM_OUTPUT_ASCII): Likewise.\n\t* m68k/3b1.h (ASM_OUTPUT_ASCII): Likewise.\n\t* m68k/amix.h (ASM_OUTPUT_ASCII): Likewise.\n\t* m68k/atari.h (ASM_OUTPUT_ASCII): Likewise.\n\t* m68k/crds.h (ASM_OUTPUT_ASCII): Likewise.\n\t* m68k/hp320.h (ASM_OUTPUT_ASCII): Likewise.\n\t* m68k/m68kv4.h (ASM_OUTPUT_ASCII): Likewise.\n\t* m68k/mot3300.h (ASM_OUTPUT_ASCII): Likewise.\n\t* m68k/sgs.h (ASM_OUTPUT_ASCII): Likewise.\n\t* m68k/tower-as.h (ASM_OUTPUT_ASCII): Likewise.\n\t* mips/bsd-5.h (ASM_OUTPUT_ASCII): Likewise.\n\t* mips/mips-5.h (ASM_OUTPUT_ASCII): Likewise.\n\t* mips/svr3-5.h (ASM_OUTPUT_ASCII): Likewise.\n\t* mips/svr4-5.h (ASM_OUTPUT_ASCII): Likewise.\n\t* ns32k/encore.h (ASM_OUTPUT_ASCII): Likewise.\n\t* vax/vaxv.h (ASM_OUTPUT_ASCII): Likewise.\n\t* we32k/we32k.h (ASM_OUTPUT_ASCII): Likewise.\n\nFrom-SVN: r48071", "tree": {"sha": "73f4d77a8b06a7befb407d92ab27301e89af01ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73f4d77a8b06a7befb407d92ab27301e89af01ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/comments", "author": null, "committer": null, "parents": [{"sha": "10b2117ec65dfd4dca51d06f4a12a4e31136efd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b2117ec65dfd4dca51d06f4a12a4e31136efd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10b2117ec65dfd4dca51d06f4a12a4e31136efd1"}], "stats": {"total": 173, "additions": 102, "deletions": 71}, "files": [{"sha": "2d33ac980e0579c0f528f965ce01d98de8238172", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -1,5 +1,34 @@\n 2001-12-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* clipper/clix.h (ASM_OUTPUT_ASCII): Avoid signed/unsigned\n+\twarnings.\n+\t* convex.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* i370.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* i386/att.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* i386/i386-interix.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* i386/i386elf.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* i386/ptx4-i.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* i386/sco5.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* i386/sun386.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* i386/sysv4.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* i860/bsd.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* m68k/3b1.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* m68k/amix.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* m68k/atari.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* m68k/crds.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* m68k/hp320.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* m68k/m68kv4.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* m68k/mot3300.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* m68k/sgs.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* m68k/tower-as.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* mips/bsd-5.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* mips/mips-5.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* mips/svr3-5.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* mips/svr4-5.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* ns32k/encore.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* vax/vaxv.h (ASM_OUTPUT_ASCII): Likewise.\n+\t* we32k/we32k.h (ASM_OUTPUT_ASCII): Likewise.\n+\n \t* i386/uwin.h (MD_STARTFILE_PREFIX): Avoid redefinition warnings.\n \t* interix.h (TARGET_MEM_FUNCTIONS): Likewise.\n \t* psos.h (CPP_PREDEFINES): Likewise."}, {"sha": "45f92646cc70fc055027f5624ce4bc911c2d3659", "filename": "gcc/config/clipper/clix.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fclipper%2Fclix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fclipper%2Fclix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclix.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -35,9 +35,9 @@ Boston, MA 02111-1307, USA.  */\n \n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n-  const unsigned char *s;\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\\\n-  for (i = 0, s = (const unsigned char *)(PTR); i < (LEN); s++, i++) \\\n+  const unsigned char *s = (const unsigned char *)(PTR);\\\n+  size_t i, limit = (LEN);\t\t\t\t\\\n+  for (i = 0; i < limit; s++, i++)\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       if ((i % 8) == 0)\t\t\t\t\t\\\n \tfputs (\"\\n\\t.byte\\t\", (FILE));\t\t\t\\"}, {"sha": "c6e025507352eb2e7dc5463882eeb69ecf34ece7", "filename": "gcc/config/convex/convex.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fconvex%2Fconvex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fconvex%2Fconvex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fconvex.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -1312,9 +1312,9 @@ enum reg_class {\n /* This is how to output a string */\n \n #define ASM_OUTPUT_ASCII(FILE,STR,SIZE) do {\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\t\t\\\n+  size_t i, limit = (SIZE);\t\t\t\t\t\t\\\n   fprintf ((FILE), \"\\tds.b \\\"\");\t\t\t\t\t\\\n-  for (i = 0; i < (SIZE); i++) {\t\t\t\t\t\\\n+  for (i = 0; i < limit; i++) {\t\t\t\t\t\t\\\n       register int c = (STR)[i] & 0377;\t\t\t\t\t\\\n       if (c >= ' ' && c < 0177 && c != '\\\\' && c != '\"')\t\t\\\n \t  putc (c, (FILE));\t\t\t\t\t\t\\"}, {"sha": "044fd5ac3d04519fc0c840292d60a41e886bb8a8", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -1232,11 +1232,11 @@ enum reg_class\n \n #define ASM_OUTPUT_ASCII(FILE, PTR, LEN)\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  int i, j;\t\t\t\t\t\t\t\t\\\n-  int c;\t\t\t\t\t\t\t\t\\\n-  for (j = 0, i = 0; i < LEN; j++, i++)\t\t\t\t\t\\\n+  size_t i, limit = (LEN);\t\t\t\t\t\t\\\n+  int j;\t\t\t\t\t\t\t\t\\\n+  for (j = 0, i = 0; i < limit; j++, i++)\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      c = PTR[i];\t\t\t\t\t\t\t\\\n+      int c = (PTR)[i];\t\t\t\t\t\t\t\\\n       if (ISCNTRL (c) || c == '&')\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  if (j % MVS_ASCII_TEXT_LENGTH != 0 )\t\t\t\t\\"}, {"sha": "2726f7ba5b9237c2488ec48ccbaf8281805d2aae", "filename": "gcc/config/i386/att.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fatt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fatt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fatt.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -36,14 +36,14 @@ Boston, MA 02111-1307, USA.  */\n \n /* How to output an ASCII string constant.  */\n \n-#define ASM_OUTPUT_ASCII(FILE, p, size) \\\n+#define ASM_OUTPUT_ASCII(FILE, PTR, SIZE)\t\t\t\\\n do\t\t\t\t\t\t\t\t\\\n-{ int i = 0; \t\t\t\t\t\t\t\\\n-  while (i < (size))\t\t\t\t\t\t\\\n+{ size_t i = 0, limit = (SIZE); \t\t\t\t\\\n+  while (i < limit)\t\t\t\t\t\t\\\n     { if (i%10 == 0) { if (i!=0) fprintf ((FILE), \"\\n\");\t\\\n \t\t       fprintf ((FILE), \"%s\", ASM_BYTE_OP); }\t\\\n       else fprintf ((FILE), \",\");\t\t\t\t\\\n-\tfprintf ((FILE), \"0x%x\", ((p)[i++] & 0377)) ;}\t\t\\\n+\tfprintf ((FILE), \"0x%x\", ((PTR)[i++] & 0377)) ;}\t\\\n       fprintf ((FILE), \"\\n\");\t\t\t\t\t\\\n } while (0)\n "}, {"sha": "962862f0858b9a6487e4ddecf6cfb98403d91f43", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -202,7 +202,7 @@ Boston, MA 02111-1307, USA.  */\n \t    }\t\t\t\t\t\t\t\t\\\n \t  for (p = _ascii_bytes; p < limit && *p != '\\0'; p++)\t\t\\\n \t    continue;\t\t\t\t\t\t\t\\\n-\t  if (p < limit && (p - _ascii_bytes) <= STRING_LIMIT)\t\t\\\n+\t  if (p < limit && (p - _ascii_bytes) <= (long) STRING_LIMIT)\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n \t      if (bytes_in_chunk > 0)\t\t\t\t\t\\\n \t\t{\t\t\t\t\t\t\t\\"}, {"sha": "2bb7b8a058e6d5e833ed0316c7e2a7e7f4548a0a", "filename": "gcc/config/i386/i386elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fi386elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fi386elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386elf.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -138,7 +138,7 @@ do { long value[3];\t\t\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t  for (p = _ascii_bytes; p < limit && *p != '\\0'; p++)\t\t\\\n \t    continue;\t\t\t\t\t\t\t\\\n-\t  if (p < limit && (p - _ascii_bytes) <= STRING_LIMIT)\t\t\\\n+\t  if (p < limit && (p - _ascii_bytes) <= (long) STRING_LIMIT)\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n \t      if (bytes_in_chunk > 0)\t\t\t\t\t\\\n \t\t{\t\t\t\t\t\t\t\\"}, {"sha": "e106b68ace67258c1ff87921d24543a58adb2618", "filename": "gcc/config/i386/ptx4-i.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fptx4-i.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fptx4-i.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fptx4-i.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -123,7 +123,7 @@ do { long value[3];\t\t\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t  for (p = _ascii_bytes; p < limit && *p != '\\0'; p++)\t\t\\\n \t    continue;\t\t\t\t\t\t\t\\\n-\t  if (p < limit && (p - _ascii_bytes) <= STRING_LIMIT)\t\t\\\n+\t  if (p < limit && (p - _ascii_bytes) <= (long) STRING_LIMIT)\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n \t      if (bytes_in_chunk > 0)\t\t\t\t\t\\\n \t\t{\t\t\t\t\t\t\t\\"}, {"sha": "16861a85bf2d970aa06efa894ac700ee4edddcb4", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -336,7 +336,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t  for (p = _ascii_bytes; p < limit && *p != '\\0'; p++)\t\t\\\n \t    continue;\t\t\t\t\t\t\t\\\n-\t  if (p < limit && (p - _ascii_bytes) <= STRING_LIMIT)\t\t\\\n+\t  if (p < limit && (p - _ascii_bytes) <= (long) STRING_LIMIT)\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n \t      if (bytes_in_chunk > 0)\t\t\t\t\t\\\n \t\t{\t\t\t\t\t\t\t\\"}, {"sha": "0487aa510fe5d0e370d4d0258b07061509dee5ea", "filename": "gcc/config/i386/sun386.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fsun386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fsun386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun386.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -41,14 +41,14 @@ Boston, MA 02111-1307, USA.  */\n \n /* How to output an ASCII string constant.  */\n \n-#define ASM_OUTPUT_ASCII(FILE, p, size) \\\n+#define ASM_OUTPUT_ASCII(FILE, PTR, SIZE) \\\n do\t\t\t\t\t\t\t\t\\\n-{ int i = 0; \t\t\t\t\t\t\t\\\n-  while (i < (size))\t\t\t\t\t\t\\\n+{ size_t i = 0, limit = (SIZE); \t\t\t\t\\\n+  while (i < limit)\t\t\t\t\t\t\\\n     { if (i%10 == 0) { if (i!=0) fprintf ((FILE), \"\\n\");\t\\\n \t\t       fprintf ((FILE), \"%s\", ASM_BYTE_OP); }\t\\\n       else fprintf ((FILE), \",\");\t\t\t\t\\\n-      fprintf ((FILE), \"0x%x\", ((p)[i++] & 0377)) ;}\t\t\\\n+      fprintf ((FILE), \"0x%x\", ((PTR)[i++] & 0377)) ;}\t\t\\\n       fprintf ((FILE), \"\\n\");\t\t\t\t\t\\\n } while (0)\n "}, {"sha": "4ccd74bc245108ea10cced4e6465be962609ad4b", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -131,7 +131,7 @@ do { long value[3];\t\t\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t  for (p = _ascii_bytes; p < limit && *p != '\\0'; p++)\t\t\\\n \t    continue;\t\t\t\t\t\t\t\\\n-\t  if (p < limit && (p - _ascii_bytes) <= STRING_LIMIT)\t\t\\\n+\t  if (p < limit && (p - _ascii_bytes) <= (long) STRING_LIMIT)\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n \t      if (bytes_in_chunk > 0)\t\t\t\t\t\\\n \t\t{\t\t\t\t\t\t\t\\"}, {"sha": "f0845ea7940c25a3d9005b0e6028907a4f2fe2d8", "filename": "gcc/config/i860/bsd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi860%2Fbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fi860%2Fbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fbsd.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -7,10 +7,10 @@\n \n #define ASCII_DATA_ASM_OP \"\\t.byte\\t\"\n #define\tASM_OUTPUT_ASCII(f, p, size)\t\\\n-do { register unsigned i;\t\t\\\n+do { register size_t i, limit = (size);\t\\\n   int inside;\t\t\t\t\\\n   inside = FALSE;\t\t\t\\\n-  for (i = 0; i < (size); i++) {\t\\\n+  for (i = 0; i < limit; i++) {\t\\\n     if (i % 64 == 0) {\t\t\t\\\n       if (i != 0) {\t\t\t\\\n \tif (inside)\t\t\t\\"}, {"sha": "d380b405ec2e95160abebbaa87f2865c9ecccbbc", "filename": "gcc/config/m68k/3b1.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2F3b1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2F3b1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2F3b1.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -185,7 +185,7 @@ do {\t\t\t\t\t\\\n /* Yet another null terminated string format.  */\n \n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN) \\\n-  do { register int sp = 0, lp = 0; \\\n+  do { register size_t sp = 0, lp = 0, limit = (LEN); \\\n     fprintf ((FILE), \"\\tbyte\\t\"); \\\n   loop: \\\n     if ((PTR)[sp] > ' ' && ! ((PTR)[sp] & 0x80) && (PTR)[sp] != '\\\\') \\\n@@ -194,7 +194,7 @@ do {\t\t\t\t\t\\\n     else \\\n       { lp += 5; \\\n \tfprintf ((FILE), \"0x%x\", (PTR)[sp]); } \\\n-    if (++sp < (LEN)) \\\n+    if (++sp < limit) \\\n       {\tif (lp > 60) \\\n \t  { lp = 0; \\\n \t    fprintf ((FILE), \"\\n%s\", ASCII_DATA_ASM_OP); }\t\\"}, {"sha": "d1968c028d3581a10834a2bc705093d5ea7f8fd7", "filename": "gcc/config/m68k/amix.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Famix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Famix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Famix.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -100,10 +100,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\\\n-  register int sp = 0, ch;\t\t\t\t\t\\\n+  register size_t sp = 0, limit = (LEN);\t\t\t\\\n   fprintf ((FILE), \"%s\", BYTE_ASM_OP);\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n-    ch = (PTR)[sp];\t\t\t\t\t\t\\\n+    int ch = (PTR)[sp];\t\t\t\t\t\t\\\n     if (ch > ' ' && ! (ch & 0x80) && ch != '\\\\')\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tfprintf ((FILE), \"'%c\", ch);\t\t\t\t\\\n@@ -112,7 +112,7 @@ do {\t\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tfprintf ((FILE), \"0x%x\", ch);\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-    if (++sp < (LEN))\t\t\t\t\t\t\\\n+    if (++sp < limit)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tif ((sp % 10) == 0)\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\\\n@@ -123,7 +123,7 @@ do {\t\t\t\t\t\t\t\t\\\n \t    putc (',', (FILE));\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-  } while (sp < (LEN));\t\t\t\t\t\t\\\n+  } while (sp < limit);\t\t\t\t\t\t\\\n   putc ('\\n', (FILE));\t\t\t\t\t\t\\\n } while (0)\n \f"}, {"sha": "322058ec1e76d42f831e675842f8f568aa6d6d45", "filename": "gcc/config/m68k/atari.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fatari.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fatari.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fatari.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -60,10 +60,10 @@ int switch_table_difference_label_flag;\n #undef ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n-  register int sp = 0, ch;\t\t\t\t\t\\\n+  register size_t sp = 0, limit = (LEN);\t\t\t\\\n   fprintf ((FILE), \"%s\", BYTE_ASM_OP);\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n-    ch = (PTR)[sp];\t\t\t\t\t\t\\\n+    int ch = (PTR)[sp];\t\t\t\t\t\t\\\n     if (ch > ' ' && ! (ch & 0x80) && ch != '\\\\')\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tfprintf ((FILE), \"'%c\", ch);\t\t\t\t\\\n@@ -72,7 +72,7 @@ int switch_table_difference_label_flag;\n       {\t\t\t\t\t\t\t\t\\\n \tfprintf ((FILE), \"0x%x\", ch);\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-    if (++sp < (LEN))\t\t\t\t\t\t\\\n+    if (++sp < limit)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tif ((sp % 10) == 0)\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\\\n@@ -83,7 +83,7 @@ int switch_table_difference_label_flag;\n \t    putc (',', (FILE));\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-  } while (sp < (LEN));\t\t\t\t\t\t\\\n+  } while (sp < limit);\t\t\t\t\t\t\\\n   putc ('\\n', (FILE));\t\t\t\t\t\t\\\n }\n "}, {"sha": "1da17e52212e3850897794496c5dea08029b34f6", "filename": "gcc/config/m68k/crds.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fcrds.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fcrds.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fcrds.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -196,9 +196,9 @@ do { long l[2];\t\t\t\t\t\t\\\n \n #undef  ASM_OUTPUT_ASCII\n #define  ASM_OUTPUT_ASCII(FILE, P , SIZE)\t\t\t\t\\\n-do {  int i;\t\t\t\t\t\t\t\t\\\n+do {  size_t i, limit = (SIZE);\t\t\t\t\t\t\\\n \t  fprintf ((FILE), \"\\t.ascii \\\"\");\t\t\t\t\\\n-\t  for (i = 0; i < (SIZE); i++)\t\t\t\t\t\\\n+\t  for (i = 0; i < limit; i++)\t\t\t\t\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n \t      register int c = (P)[i];\t\t\t\t\t\\\n \t      if (i != 0 && (i / 200) * 200 == i)\t\t\t\\"}, {"sha": "403e4d17dedba4ede46f3b6785ee5b80d3ed55d6", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -549,11 +549,11 @@ do {\t\t\t\t\t\\\n         output_addr_const (FILE, addr);\t\t\t\t\t\\\n     }}\n \n-#define\tASM_OUTPUT_ASCII(f, p, size)\t\\\n-do { register int i;\t\t\t\\\n+#define\tASM_OUTPUT_ASCII(f, p, SIZE)\t\\\n+do { size_t i, limit = (SIZE);\t\t\\\n   int inside;\t\t\t\t\\\n   inside = FALSE;\t\t\t\\\n-  for (i = 0; i < (size); i++) {\t\\\n+  for (i = 0; i < limit; i++) {\t\\\n     if (i % 8 == 0) {\t\t\t\\\n       if (i != 0) {\t\t\t\\\n \tif (inside)\t\t\t\\"}, {"sha": "7b1f0e72fd2aa902a03f7a561ed54de5167fe3bd", "filename": "gcc/config/m68k/m68kv4.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kv4.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -216,10 +216,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\\\n-  register int sp = 0, ch;\t\t\t\t\t\\\n+  register size_t sp = 0, limit = (LEN);\t\t\t\\\n   fprintf ((FILE), \"%s\", BYTE_ASM_OP);\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n-    ch = (PTR)[sp];\t\t\t\t\t\t\\\n+    int ch = (PTR)[sp];\t\t\t\t\t\t\\\n     if (ch > ' ' && ! (ch & 0x80) && ch != '\\\\')\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tfprintf ((FILE), \"'%c\", ch);\t\t\t\t\\\n@@ -228,7 +228,7 @@ do {\t\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tfprintf ((FILE), \"0x%x\", ch);\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-    if (++sp < (LEN))\t\t\t\t\t\t\\\n+    if (++sp < limit)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tif ((sp % 10) == 0)\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\\\n@@ -239,7 +239,7 @@ do {\t\t\t\t\t\t\t\t\\\n \t    putc (',', (FILE));\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-  } while (sp < (LEN));\t\t\t\t\t\t\\\n+  } while (sp < limit);\t\t\t\t\t\t\\\n   putc ('\\n', (FILE));\t\t\t\t\t\t\\\n } while (0)\n "}, {"sha": "1c8da7a98c7ee6226d9ce67e8a9da1f90a2cc934", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -418,7 +418,7 @@ do { long l;\t\t\t\t\t\\\n \n #undef ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN) \\\n-  do { register int sp = 0, lp = 0;\t\t\t\t\\\n+  do { register size_t sp = 0, lp = 0, limit = (LEN);\t\t\\\n     fprintf ((FILE), \"%s\", ASM_BYTE_OP);\t\t\t\\\n   loop:\t\t\t\t\t\t\t\t\\\n     if ((PTR)[sp] > ' ' && ! ((PTR)[sp] & 0x80) && (PTR)[sp] != '\\\\')\t\\\n@@ -427,7 +427,7 @@ do { long l;\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\\\n       { lp += 5;\t\t\t\t\t\t\\\n \tfprintf ((FILE), \"0x%x\", (PTR)[sp]); }\t\t\t\\\n-    if (++sp < (LEN))\t\t\t\t\t\t\\\n+    if (++sp < limit)\t\t\t\t\t\t\\\n       {\tif (lp > 60)\t\t\t\t\t\t\\\n \t  { lp = 0;\t\t\t\t\t\t\\\n \t    fprintf ((FILE), \"\\n%s\", ASCII_DATA_ASM_OP); }\t\\"}, {"sha": "5e4c212c691f8c5ceb5b004ec9e21d665e601ceb", "filename": "gcc/config/m68k/sgs.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fsgs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Fsgs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsgs.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -159,10 +159,10 @@ do {\t\t\t\t\t\t\t\t\\\n \n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\\\n-  register int sp = 0, ch;\t\t\t\t\t\\\n+  register size_t sp = 0, limit = (LEN);\t\t\t\\\n   fprintf ((FILE), \"%s\", BYTE_ASM_OP);\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n-    ch = (PTR)[sp];\t\t\t\t\t\t\\\n+    int ch = (PTR)[sp];\t\t\t\t\t\t\\\n     if (ch > ' ' && ! (ch & 0x80) && ch != '\\\\')\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tfprintf ((FILE), \"'%c\", ch);\t\t\t\t\\\n@@ -171,7 +171,7 @@ do {\t\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tfprintf ((FILE), \"0x%x\", ch);\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-    if (++sp < (LEN))\t\t\t\t\t\t\\\n+    if (++sp < limit)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tif ((sp % 10) == 0)\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\\\n@@ -182,7 +182,7 @@ do {\t\t\t\t\t\t\t\t\\\n \t    putc (',', (FILE));\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n-  } while (sp < (LEN));\t\t\t\t\t\t\\\n+  } while (sp < limit);\t\t\t\t\t\t\\\n   putc ('\\n', (FILE));\t\t\t\t\t\t\\\n } while (0)\n "}, {"sha": "927e92d0af683da9507951b58461d8a1e95ba798", "filename": "gcc/config/m68k/tower-as.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ftower-as.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -90,7 +90,7 @@ Boston, MA 02111-1307, USA.  */\n   fprintf (FILE, \"\\tident\\t\\\"%s\\\" \\n\", NAME)\n \n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN) \\\n-  do { register int sp = 0, lp = 0; \\\n+  do { register size_t sp = 0, lp = 0, limit = (LEN); \\\n     fprintf ((FILE), \"\\tbyte\\t\"); \\\n   loop: \\\n     if ((PTR)[sp] > ' ' && ! ((PTR)[sp] & 0x80) && (PTR)[sp] != '\\\\') \\\n@@ -99,7 +99,7 @@ Boston, MA 02111-1307, USA.  */\n     else \\\n       { lp += 5; \\\n \tfprintf ((FILE), \"0x%x\", (PTR)[sp]); } \\\n-    if (++sp < (LEN)) \\\n+    if (++sp < limit) \\\n       {\tif (lp > 60) \\\n \t  { lp = 0; \\\n \t    fprintf ((FILE), \"\\n\\tbyte\\t\"); }\t\\"}, {"sha": "c7f9127c0df3a6784f0f72b223b405c0bdc121bb", "filename": "gcc/config/mips/bsd-5.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fmips%2Fbsd-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fmips%2Fbsd-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fbsd-5.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -56,8 +56,8 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   const unsigned char *s;\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\\\n-  for (i = 0, s = (const unsigned char *)(PTR); i < (LEN); s++, i++) \\\n+  size_t i, limit = (LEN);\t\t\t\t\\\n+  for (i = 0, s = (const unsigned char *)(PTR); i < limit; s++, i++) \\\n     {\t\t\t\t\t\t\t\\\n       if ((i % 8) == 0)\t\t\t\t\t\\\n \tfputs (\"\\n\\t.byte\\t\", (FILE));\t\t\t\\"}, {"sha": "4f00565854625f9dcf6c5122621c62df530affaa", "filename": "gcc/config/mips/mips-5.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fmips%2Fmips-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fmips%2Fmips-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-5.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -35,8 +35,8 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   const unsigned char *s;\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\\\n-  for (i = 0, s = (const unsigned char *)(PTR); i < (LEN); s++, i++) \\\n+  size_t i, limit = (LEN);\t\t\t\t\\\n+  for (i = 0, s = (const unsigned char *)(PTR); i < limit; s++, i++) \\\n     {\t\t\t\t\t\t\t\\\n       if ((i % 8) == 0)\t\t\t\t\t\\\n \tfputs (\"\\n\\t.byte\\t\", (FILE));\t\t\t\\"}, {"sha": "657841be392382715cc955d387599107b4b32ea4", "filename": "gcc/config/mips/svr3-5.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fmips%2Fsvr3-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fmips%2Fsvr3-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsvr3-5.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -78,8 +78,8 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   const unsigned char *s;\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\\\n-  for (i = 0, s = (const unsigned char *)(PTR); i < (LEN); s++, i++) \\\n+  size_t i, limit = (LEN);\t\t\t\t\t\t\\\n+  for (i = 0, s = (const unsigned char *)(PTR); i < limit; s++, i++) \\\n     {\t\t\t\t\t\t\t\\\n       if ((i % 8) == 0)\t\t\t\t\t\\\n \tfputs (\"\\n\\t.byte\\t\", (FILE));\t\t\t\\"}, {"sha": "875493875d53cfde3d5eb1be9ef8824f256b6547", "filename": "gcc/config/mips/svr4-5.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fmips%2Fsvr4-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fmips%2Fsvr4-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsvr4-5.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -77,8 +77,8 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   const unsigned char *s;\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\\\n-  for (i = 0, s = (const unsigned char *)(PTR); i < (LEN); s++, i++) \\\n+  size_t i, limit = (LEN);\t\t\t\t\\\n+  for (i = 0, s = (const unsigned char *)(PTR); i < limit; s++, i++) \\\n     {\t\t\t\t\t\t\t\\\n       if ((i % 8) == 0)\t\t\t\t\t\\\n \tfputs (\"\\n\\t.byte\\t\", (FILE));\t\t\t\\"}, {"sha": "dd7c14be60fc8dd9e52816b66416dcb0fa85dd07", "filename": "gcc/config/ns32k/encore.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fns32k%2Fencore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fns32k%2Fencore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fencore.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -128,23 +128,25 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define ASM_OUTPUT_ASCII(file, p, size)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\\\n-  for (i = 0; i < (size); i++)\t\t\t\t\\\n+  size_t i, limit = (size);\t\t\t\t\\\n+  for (i = 0; i < limit; i++)\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       register int c = (p)[i];\t\t\t\t\\\n       if ((i / 40) * 40 == i)\t\t\t\t\\\n-      if (i == 0)\t\t\t\t\t\\\n-        fprintf ((file), \"\\t.ascii \\\"\");\t\t\\\n-      else\t\t\t\t\t\t\\\n-        fprintf ((file), \"\\\"\\n\\t.ascii \\\"\");\t\t\\\n+        {\t\t\t\t\t\t\\\n+          if (i == 0)\t\t\t\t\t\\\n+            fprintf ((file), \"\\t.ascii \\\"\");\t\t\\\n+          else\t\t\t\t\t\t\\\n+            fprintf ((file), \"\\\"\\n\\t.ascii \\\"\");\t\\\n+        }\t\t\t\t\t\t\\\n       if (c == '\\\"' || c == '\\\\')\t\t\t\\\n         putc ('\\\\', (file));\t\t\t\t\\\n       if (c >= ' ' && c < 0177)\t\t\t\t\\\n         putc (c, (file));\t\t\t\t\\\n       else\t\t\t\t\t\t\\\n         {\t\t\t\t\t\t\\\n           fprintf ((file), \"\\\\%o\", c);\t\t\t\\\n-          if (i < (size) - 1 && ISDIGIT ((p)[i + 1]))\t\\\n+          if (i < limit - 1 && ISDIGIT ((p)[i + 1]))\t\\\n           fprintf ((file), \"\\\"\\n\\t.ascii \\\"\");\t\t\\\n         }\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\\"}, {"sha": "2a113b3836eabfb7ee3a3eaaa537940c3eb3d786", "filename": "gcc/config/vax/vaxv.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fvax%2Fvaxv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fvax%2Fvaxv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvaxv.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -51,9 +51,9 @@ output_file_directive ((FILE), main_input_filename)\n \n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n-  const unsigned char *s;\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\\\n-  for (i = 0, s = (PTR); i < (LEN); s++, i++)\t\t\\\n+  const unsigned char *s = (const unsigned char *)(PTR);\\\n+  size_t i, limit = (LEN);\t\t\t\t\\\n+  for (i = 0; i < limit; s++, i++)\t\t\\\n     {\t\t\t\t\t\t\t\\\n       if ((i % 8) == 0)\t\t\t\t\t\\\n \tfputs (\"\\n\\t.byte\\t\", (FILE));\t\t\t\\"}, {"sha": "9e15f706a92f378b2e2374a17fac85cb63295530", "filename": "gcc/config/we32k/we32k.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d955c3ab799983c9d3e2afef1e8438d06e4c7fb/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwe32k%2Fwe32k.h?ref=9d955c3ab799983c9d3e2afef1e8438d06e4c7fb", "patch": "@@ -817,8 +817,8 @@ do { union { float f; long l;} tem;\t\t\t\t\\\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)  \\\n do {\t\t\t\t\t\t\t\\\n   const unsigned char *s;\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\\\n-  for (i = 0, s = (const unsigned char *)(PTR); i < (LEN); s++, i++)\t\\\n+  size_t i, limit = (LEN);\t\t\t\t\\\n+  for (i = 0, s = (const unsigned char *)(PTR); i < limit; s++, i++)\t\\\n     {\t\t\t\t\t\t\t\\\n       if ((i % 8) == 0)\t\t\t\t\t\\\n \tfprintf ((FILE),\"%s\\t.byte\\t\",(i?\"\\n\":\"\"));\t\\"}]}