{"sha": "d86e68e2078bb59e4f4c2c73cd111f8fd509bea4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg2ZTY4ZTIwNzhiYjU5ZTRmNGMyYzczY2QxMTFmOGZkNTA5YmVhNA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2017-05-11T20:04:53Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2017-05-11T20:04:53Z"}, "message": "Don't assume __secure_getenv is available\n\nGlibc 2.17 made __secure_getenv an officially supported function, and\nrenamed it secure_getenv. The libgfortran configure has checked for\nboth of these, per\nhttps://sourceware.org/glibc/wiki/Tips_and_Tricks/secure_getenv.\n\nUnfortunately, while the dynamical library (libc.so) retains the\n__secure_getenv symbol for backwards compatibility, the static library\n(libc.a) does not. This means that a libgfortran.a compiled against an\nolder glibc will not work if one tries to link against a newer\nlibc.a. This creates problems for providing gfortran binary\ndistributions that work on as many target systems as possible.\n\nThus, retain the support for __secure_getenv but call it only via a\nweak reference.\n\nRegtested on x86_64-pc-linux-gnu.\n\n2017-05-11  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* libgfortran.h: HAVE_SECURE_GETENV: Don't check\n\tHAVE___SECURE_GETENV.\n\t* environ/runtime.c (secure_getenv): Use __secure_getenv via a\n        weak reference.\n\nFrom-SVN: r247927", "tree": {"sha": "cb9fc3d50011847480cbd27facb04872dc66048d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb9fc3d50011847480cbd27facb04872dc66048d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4/comments", "author": null, "committer": null, "parents": [{"sha": "ea594612f0478c4307b09704e902da89370a1482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea594612f0478c4307b09704e902da89370a1482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea594612f0478c4307b09704e902da89370a1482"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "337daafa5a84a6d63c1f0a3b8141ca511c8414cf", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d86e68e2078bb59e4f4c2c73cd111f8fd509bea4", "patch": "@@ -1,3 +1,10 @@\n+2017-05-11  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* libgfortran.h: HAVE_SECURE_GETENV: Don't check\n+\tHAVE___SECURE_GETENV.\n+\t* environ/runtime.c (secure_getenv): Use __secure_getenv via a\n+        weak reference.\n+\n 2017-05-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n         PR fortran/80687"}, {"sha": "9d9d11728bdb4a6290436ae6f0c3ff728570b369", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=d86e68e2078bb59e4f4c2c73cd111f8fd509bea4", "patch": "@@ -808,9 +808,7 @@ internal_proto(get_unformatted_convert);\n \n /* Secure getenv() which returns NULL if running as SUID/SGID.  */\n #ifndef HAVE_SECURE_GETENV\n-#ifdef HAVE___SECURE_GETENV\n-#define secure_getenv __secure_getenv\n-#elif defined(HAVE_GETUID) && defined(HAVE_GETEUID) \\\n+#if defined(HAVE_GETUID) && defined(HAVE_GETEUID) \\\n   && defined(HAVE_GETGID) && defined(HAVE_GETEGID)\n #define FALLBACK_SECURE_GETENV\n extern char *secure_getenv (const char *);"}, {"sha": "969dcdfcf21c5a07a6d0611e71877918768ac75a", "filename": "libgfortran/runtime/environ.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4/libgfortran%2Fruntime%2Fenviron.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4/libgfortran%2Fruntime%2Fenviron.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fenviron.c?ref=d86e68e2078bb59e4f4c2c73cd111f8fd509bea4", "patch": "@@ -37,9 +37,20 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    provided. */\n \n #ifdef FALLBACK_SECURE_GETENV\n+\n+#if SUPPORTS_WEAKREF && defined(HAVE___SECURE_GETENV)\n+static char* weak_secure_getenv (const char*)\n+  __attribute__((__weakref__(\"__secure_gettime\")));\n+#endif\n+\n char *\n secure_getenv (const char *name)\n {\n+#if SUPPORTS_WEAKREF && defined(HAVE__SECURE_GETENV)\n+  if (weak_secure_getenv)\n+    return weak_secure_getenv (name);\n+#endif\n+\n   if ((getuid () == geteuid ()) && (getgid () == getegid ()))\n     return getenv (name);\n   else"}]}