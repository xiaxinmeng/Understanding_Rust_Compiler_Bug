{"sha": "d6ed6fcc8f85ee3398aeabf2ad750b917986bc92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZlZDZmY2M4Zjg1ZWUzMzk4YWVhYmYyYWQ3NTBiOTE3OTg2YmM5Mg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-02-01T21:47:13Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-02-01T21:47:13Z"}, "message": "index.html: Correct link to libg++ information.\n\n2003-02-01  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* docs/html/faq/index.html:  Correct link to libg++ information.\n\t* docs/html/faq/index.txt:  Regenerated.\n\nFrom-SVN: r62259", "tree": {"sha": "924d03de6fd0596486c0aa34ede3f0421986b0c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/924d03de6fd0596486c0aa34ede3f0421986b0c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92/comments", "author": null, "committer": null, "parents": [{"sha": "5d7bed9d6fd21fe349914dd394b75a353a3e480e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7bed9d6fd21fe349914dd394b75a353a3e480e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7bed9d6fd21fe349914dd394b75a353a3e480e"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "6eb5d1c4bf73a2f074d6b70dfdd67b931153ad4a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d6ed6fcc8f85ee3398aeabf2ad750b917986bc92", "patch": "@@ -1,3 +1,8 @@\n+2003-02-01  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* docs/html/faq/index.html:  Correct link to libg++ information.\n+\t* docs/html/faq/index.txt:  Regenerated.\n+\n 2003-02-01  Paolo Carlini  <pcarlini@unitus.it>\n             Benjamin Kosnik  <bkoz@redhat.com>\n "}, {"sha": "4d40397c60f23a6a87733caa7f54f87f59129076", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=d6ed6fcc8f85ee3398aeabf2ad750b917986bc92", "patch": "@@ -256,7 +256,7 @@ <h2><a name=\"1_7\">1.7 What happened to libg++?  I need that!</a></h2>\n          stuff&quot; classes will probably migrate there.)\n       </p>\n       <p>For the bold and/or desperate, the\n-         <a href=\"http://gcc.gnu.org/fom_serv/cache/33.html\">GCC FAQ</a>\n+         <a href=\"http://gcc.gnu.org/extensions.html\">GCC extensions page</a>\n          describes where to find the last libg++ source.\n       </p>\n \n@@ -504,8 +504,8 @@ <h2><a name=\"3_7\">Threading is broken on i386</a></h2>\n          platforms.  The assembly code accidentally used opcodes that are\n          only available on the i486 and later.  So if you configured GCC\n          to target, for example, i386-linux, but actually used the programs\n-\t on an i686, then you would encounter no problems.  Only when\n-\t actually running the code on a i386 will the problem appear.  \n+         on an i686, then you would encounter no problems.  Only when\n+         actually running the code on a i386 will the problem appear.  \n       </p>\n       <p>This is fixed in 3.2.2.\n       </p>"}, {"sha": "c3e3452d5b188bf981e2259df71b3b3d915cbceb", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ed6fcc8f85ee3398aeabf2ad750b917986bc92/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=d6ed6fcc8f85ee3398aeabf2ad750b917986bc92", "patch": "@@ -177,8 +177,8 @@\n    and happened to be started by members of the Standards Committee.\n    Certain \"useful stuff\" classes will probably migrate there.)\n \n-   For the bold and/or desperate, the [61]GCC FAQ describes where to find\n-   the last libg++ source.\n+   For the bold and/or desperate, the [61]GCC extensions page describes\n+   where to find the last libg++ source.\n      _________________________________________________________________\n \n 1.8 What if I have more questions?\n@@ -714,6 +714,31 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    headers whose directories are not searched directly, e.g.,\n    <sys/stat.h>, <X11/Xlib.h>.\n \n+   The extensions are no longer in the global or std namespaces, instead\n+   they are declared in the __gnu_cxx namespace. For maximum portability,\n+   consider defining a namespace alias to use to talk about extensions,\n+   e.g.:\n+      #ifdef __GNUC__\n+      #if __GNUC__ < 3\n+        #include <hash_map.h>\n+        namespace Sgi { using ::hash_map; }; // inherit globals\n+      #else\n+        #include <ext/hash_map>\n+        #if __GNUC_MINOR__ == 0\n+          namespace Sgi = std;               // GCC 3.0\n+        #else\n+          namespace Sgi = ::__gnu_cxx;       // GCC 3.1 and later\n+        #endif\n+      #endif\n+      #else      // ...  there are other compilers, right?\n+        namespace Sgi = std;\n+      #endif\n+\n+      Sgi::hash_map<int,int> my_map;\n+\n+   This is a bit cleaner than defining typedefs for all the\n+   instantiations you might need.\n+\n    Extensions to the library have [94]their own page.\n      _________________________________________________________________\n \n@@ -895,7 +920,7 @@ References\n   58. http://gcc.gnu.org/libstdc++/\n   59. ../17_intro/contribute.html\n   60. http://www.boost.org/\n-  61. http://gcc.gnu.org/fom_serv/cache/33.html\n+  61. http://gcc.gnu.org/extensions.html\n   62. mailto:libstdc++@gcc.gnu.org\n   63. mailto:pme@gcc.gnu.org\n   64. mailto:gdr@gcc.gnu.org"}]}