{"sha": "1a402dc10d239645f97496dd28d7d470c5edbc65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE0MDJkYzEwZDIzOTY0NWY5NzQ5NmRkMjhkN2Q0NzBjNWVkYmM2NQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-03-04T09:26:45Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-03-04T09:26:45Z"}, "message": "re PR target/14406 (rs6000 abstf2 is broken)\n\n\tPR target/14406\n\t* config/rs6000/rs6000.md (abstf2, abstf2+1): Delete define_insn.\n\t(abstf2, abstf2_internal): New define_expand.\n\nFrom-SVN: r78896", "tree": {"sha": "45b8f293d30af0bc7b21f80fddcaea4b30b7638c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45b8f293d30af0bc7b21f80fddcaea4b30b7638c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a402dc10d239645f97496dd28d7d470c5edbc65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a402dc10d239645f97496dd28d7d470c5edbc65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a402dc10d239645f97496dd28d7d470c5edbc65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a402dc10d239645f97496dd28d7d470c5edbc65/comments", "author": null, "committer": null, "parents": [{"sha": "6a2d136bfdd1ffe83a1feb0aae0c741a7166604b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2d136bfdd1ffe83a1feb0aae0c741a7166604b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2d136bfdd1ffe83a1feb0aae0c741a7166604b"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "337c4c2e747d346bbc25fc0c2255aeed23435384", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a402dc10d239645f97496dd28d7d470c5edbc65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a402dc10d239645f97496dd28d7d470c5edbc65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a402dc10d239645f97496dd28d7d470c5edbc65", "patch": "@@ -1,3 +1,9 @@\n+2004-03-04  Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR target/14406\n+\t* config/rs6000/rs6000.md (abstf2, abstf2+1): Delete define_insn.\n+\t(abstf2, abstf2_internal): New define_expand.\n+\n 2004-03-04  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR optimization/14235"}, {"sha": "29b36d6e4e5a1fab25f3ac58146f13b1d3f9e698", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a402dc10d239645f97496dd28d7d470c5edbc65/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a402dc10d239645f97496dd28d7d470c5edbc65/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=1a402dc10d239645f97496dd28d7d470c5edbc65", "patch": "@@ -8375,35 +8375,40 @@\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"length\" \"8\")])\n \n-(define_insn \"abstf2\"\n+(define_expand \"abstf2\"\n   [(set (match_operand:TF 0 \"gpc_reg_operand\" \"=f\")\n \t(abs:TF (match_operand:TF 1 \"gpc_reg_operand\" \"f\")))]\n   \"(DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_DARWIN)\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_LONG_DOUBLE_128\"\n-  \"*\n+  \"\n {\n-  if (REGNO (operands[0]) == REGNO (operands[1]) + 1)\n-    return \\\"fabs %L0,%L1\\;fabs %0,%1\\\";\n-  else\n-    return \\\"fabs %0,%1\\;fabs %L0,%L1\\\";\n-}\"\n-  [(set_attr \"type\" \"fp\")\n-   (set_attr \"length\" \"8\")])\n+  rtx label = gen_label_rtx ();\n+  emit_insn (gen_abstf2_internal (operands[0], operands[1], label));\n+  emit_label (label);\n+  DONE;\n+}\")\n \n-(define_insn \"\"\n+(define_expand \"abstf2_internal\"\n   [(set (match_operand:TF 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:TF (abs:TF (match_operand:TF 1 \"gpc_reg_operand\" \"f\"))))]\n+\t(match_operand:TF 1 \"gpc_reg_operand\" \"f\"))\n+   (set (match_dup 3) (match_dup 5))\n+   (set (match_dup 5) (abs:DF (match_dup 5)))\n+   (set (match_dup 4) (compare:CCFP (match_dup 3) (match_dup 5)))\n+   (set (pc) (if_then_else (eq (match_dup 4) (const_int 0))\n+\t\t\t   (label_ref (match_operand 2 \"\" \"\"))\n+\t\t\t   (pc)))\n+   (set (match_dup 6) (neg:DF (match_dup 6)))]\n   \"(DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_DARWIN)\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_LONG_DOUBLE_128\"\n-  \"*\n+  \"\n {\n-  if (REGNO (operands[0]) == REGNO (operands[1]) + 1)\n-    return \\\"fnabs %L0,%L1\\;fnabs %0,%1\\\";\n-  else\n-    return \\\"fnabs %0,%1\\;fnabs %L0,%L1\\\";\n-}\"\n-  [(set_attr \"type\" \"fp\")\n-   (set_attr \"length\" \"8\")])\n+  const int hi_word = FLOAT_WORDS_BIG_ENDIAN ? 0 : GET_MODE_SIZE (DFmode);\n+  const int lo_word = FLOAT_WORDS_BIG_ENDIAN ? GET_MODE_SIZE (DFmode) : 0;\n+  operands[3] = gen_reg_rtx (DFmode);\n+  operands[4] = gen_reg_rtx (CCFPmode);\n+  operands[5] = simplify_gen_subreg (DFmode, operands[0], TFmode, hi_word);\n+  operands[6] = simplify_gen_subreg (DFmode, operands[0], TFmode, lo_word);\n+}\")\n \f\n ;; Next come the multi-word integer load and store and the load and store\n ;; multiple insns."}]}