{"sha": "26127932dd7394a8d1cc0c1f55e1de064ba175c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYxMjc5MzJkZDczOTRhOGQxY2MwYzFmNTVlMWRlMDY0YmExNzVjMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-06-07T06:36:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-06-07T06:36:55Z"}, "message": "re PR c/53580 (Internal Segmentation fault in nested \"omp parallel\", \"omp parallel for\" and \"omp parallel for reduction\" Directives)\n\n\tPR middle-end/53580\n\t* omp-low.c (scan_omp): Change first argument to\n\tgimple_seq *, call walk_gimple_seq_mod instead of\n\twalk_gimple_seq.\n\t(scan_sharing_clauses, scan_omp_parallel, scan_omp_task,\n\tscan_omp_for, scan_omp_sections, scan_omp_single,\n\texecute_lower_omp): Adjust callers.\n\t(scan_omp_1_stmt): Likewise.  If check_omp_nesting_restrictions\n\treturns false, replace stmt with GIMPLE_NOP.\n\t(check_omp_nesting_restrictions): Instead of issuing warnings,\n\tissue errors and return false if any errors were reported.\n\n\t* gcc.dg/gomp/nesting-1.c: Expect errors rather than warnings.\n\t* gcc.dg/gomp/critical-4.c: Likewise.\n\t* gfortran.dg/gomp/appendix-a/a.35.1.f90: Likewise.\n\t* gfortran.dg/gomp/appendix-a/a.35.3.f90: Likewise.\n\t* gfortran.dg/gomp/appendix-a/a.35.4.f90: Likewise.\n\t* gfortran.dg/gomp/appendix-a/a.35.6.f90: Likewise.\n\t* c-c++-common/gomp/pr53580.c: New test.\n\n\t* testsuite/libgomp.c/pr26943-2.c: Remove #pragma omp barrier,\n\tuse GOMP_barrier () call instead.\n\t* testsuite/libgomp.c/pr26943-3.c: Likewise.\n\t* testsuite/libgomp.c/pr26943-4.c: Likewise.\n\t* testsuite/libgomp.fortran/vla4.f90: Remove !$omp barrier,\n\tcall GOMP_barrier instead.\n\t* testsuite/libgomp.fortran/vla5.f90: Likewise.\n\nFrom-SVN: r188298", "tree": {"sha": "89f8ace7255b869a0b352a67d12b9eb752a32289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89f8ace7255b869a0b352a67d12b9eb752a32289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26127932dd7394a8d1cc0c1f55e1de064ba175c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26127932dd7394a8d1cc0c1f55e1de064ba175c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26127932dd7394a8d1cc0c1f55e1de064ba175c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26127932dd7394a8d1cc0c1f55e1de064ba175c0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3dbbfcedf63844e454cdb1d0233934ea0d02507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3dbbfcedf63844e454cdb1d0233934ea0d02507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3dbbfcedf63844e454cdb1d0233934ea0d02507"}], "stats": {"total": 254, "additions": 168, "deletions": 86}, "files": [{"sha": "ee090d629656e51d72b6db614b3726b3894dcede", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -1,3 +1,17 @@\n+2012-06-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/53580\n+\t* omp-low.c (scan_omp): Change first argument to\n+\tgimple_seq *, call walk_gimple_seq_mod instead of\n+\twalk_gimple_seq.\n+\t(scan_sharing_clauses, scan_omp_parallel, scan_omp_task,\n+\tscan_omp_for, scan_omp_sections, scan_omp_single,\n+\texecute_lower_omp): Adjust callers.\n+\t(scan_omp_1_stmt): Likewise.  If check_omp_nesting_restrictions\n+\treturns false, replace stmt with GIMPLE_NOP.\n+\t(check_omp_nesting_restrictions): Instead of issuing warnings,\n+\tissue errors and return false if any errors were reported.\n+\n 2012-06-06  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* doc/invoke.texi (fconserve-space): Remove documentation."}, {"sha": "d51715e2843d40de9e3c0faafe27fa82cdf0dff2", "filename": "gcc/omp-low.c", "status": "modified", "additions": 56, "deletions": 40, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -131,7 +131,7 @@ static int taskreg_nesting_level;\n struct omp_region *root_omp_region;\n static bitmap task_shared_vars;\n \n-static void scan_omp (gimple_seq, omp_context *);\n+static void scan_omp (gimple_seq *, omp_context *);\n static tree scan_omp_1_op (tree *, int *, void *);\n \n #define WALK_SUBSTMTS  \\\n@@ -1533,12 +1533,12 @@ scan_sharing_clauses (tree clauses, omp_context *ctx)\n       if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_REDUCTION\n \t  && OMP_CLAUSE_REDUCTION_PLACEHOLDER (c))\n \t{\n-\t  scan_omp (OMP_CLAUSE_REDUCTION_GIMPLE_INIT (c), ctx);\n-\t  scan_omp (OMP_CLAUSE_REDUCTION_GIMPLE_MERGE (c), ctx);\n+\t  scan_omp (&OMP_CLAUSE_REDUCTION_GIMPLE_INIT (c), ctx);\n+\t  scan_omp (&OMP_CLAUSE_REDUCTION_GIMPLE_MERGE (c), ctx);\n \t}\n       else if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE\n \t       && OMP_CLAUSE_LASTPRIVATE_GIMPLE_SEQ (c))\n-\tscan_omp (OMP_CLAUSE_LASTPRIVATE_GIMPLE_SEQ (c), ctx);\n+\tscan_omp (&OMP_CLAUSE_LASTPRIVATE_GIMPLE_SEQ (c), ctx);\n }\n \n /* Create a new name for omp child function.  Returns an identifier.  */\n@@ -1663,7 +1663,7 @@ scan_omp_parallel (gimple_stmt_iterator *gsi, omp_context *outer_ctx)\n   gimple_omp_parallel_set_child_fn (stmt, ctx->cb.dst_fn);\n \n   scan_sharing_clauses (gimple_omp_parallel_clauses (stmt), ctx);\n-  scan_omp (gimple_omp_body (stmt), ctx);\n+  scan_omp (gimple_omp_body_ptr (stmt), ctx);\n \n   if (TYPE_FIELDS (ctx->record_type) == NULL)\n     ctx->record_type = ctx->receiver_decl = NULL;\n@@ -1720,7 +1720,7 @@ scan_omp_task (gimple_stmt_iterator *gsi, omp_context *outer_ctx)\n       create_omp_child_function (ctx, true);\n     }\n \n-  scan_omp (gimple_omp_body (stmt), ctx);\n+  scan_omp (gimple_omp_body_ptr (stmt), ctx);\n \n   if (TYPE_FIELDS (ctx->record_type) == NULL)\n     {\n@@ -1773,15 +1773,15 @@ scan_omp_for (gimple stmt, omp_context *outer_ctx)\n \n   scan_sharing_clauses (gimple_omp_for_clauses (stmt), ctx);\n \n-  scan_omp (gimple_omp_for_pre_body (stmt), ctx);\n+  scan_omp (gimple_omp_for_pre_body_ptr (stmt), ctx);\n   for (i = 0; i < gimple_omp_for_collapse (stmt); i++)\n     {\n       scan_omp_op (gimple_omp_for_index_ptr (stmt, i), ctx);\n       scan_omp_op (gimple_omp_for_initial_ptr (stmt, i), ctx);\n       scan_omp_op (gimple_omp_for_final_ptr (stmt, i), ctx);\n       scan_omp_op (gimple_omp_for_incr_ptr (stmt, i), ctx);\n     }\n-  scan_omp (gimple_omp_body (stmt), ctx);\n+  scan_omp (gimple_omp_body_ptr (stmt), ctx);\n }\n \n /* Scan an OpenMP sections directive.  */\n@@ -1793,7 +1793,7 @@ scan_omp_sections (gimple stmt, omp_context *outer_ctx)\n \n   ctx = new_omp_context (stmt, outer_ctx);\n   scan_sharing_clauses (gimple_omp_sections_clauses (stmt), ctx);\n-  scan_omp (gimple_omp_body (stmt), ctx);\n+  scan_omp (gimple_omp_body_ptr (stmt), ctx);\n }\n \n /* Scan an OpenMP single directive.  */\n@@ -1813,7 +1813,7 @@ scan_omp_single (gimple stmt, omp_context *outer_ctx)\n   TYPE_NAME (ctx->record_type) = name;\n \n   scan_sharing_clauses (gimple_omp_single_clauses (stmt), ctx);\n-  scan_omp (gimple_omp_body (stmt), ctx);\n+  scan_omp (gimple_omp_body_ptr (stmt), ctx);\n \n   if (TYPE_FIELDS (ctx->record_type) == NULL)\n     ctx->record_type = NULL;\n@@ -1823,8 +1823,8 @@ scan_omp_single (gimple stmt, omp_context *outer_ctx)\n \n \n /* Check OpenMP nesting restrictions.  */\n-static void\n-check_omp_nesting_restrictions (gimple  stmt, omp_context *ctx)\n+static bool\n+check_omp_nesting_restrictions (gimple stmt, omp_context *ctx)\n {\n   switch (gimple_code (stmt))\n     {\n@@ -1843,17 +1843,19 @@ check_omp_nesting_restrictions (gimple  stmt, omp_context *ctx)\n \t  case GIMPLE_OMP_TASK:\n \t    if (is_gimple_call (stmt))\n \t      {\n-\t\twarning (0, \"barrier region may not be closely nested inside \"\n-\t\t\t    \"of work-sharing, critical, ordered, master or \"\n-\t\t\t    \"explicit task region\");\n-\t\treturn;\n+\t\terror_at (gimple_location (stmt),\n+\t\t\t  \"barrier region may not be closely nested inside \"\n+\t\t\t  \"of work-sharing, critical, ordered, master or \"\n+\t\t\t  \"explicit task region\");\n+\t\treturn false;\n \t      }\n-\t    warning (0, \"work-sharing region may not be closely nested inside \"\n-\t\t\t\"of work-sharing, critical, ordered, master or explicit \"\n-\t\t\t\"task region\");\n-\t    return;\n+\t    error_at (gimple_location (stmt),\n+\t\t      \"work-sharing region may not be closely nested inside \"\n+\t\t      \"of work-sharing, critical, ordered, master or explicit \"\n+\t\t      \"task region\");\n+\t    return false;\n \t  case GIMPLE_OMP_PARALLEL:\n-\t    return;\n+\t    return true;\n \t  default:\n \t    break;\n \t  }\n@@ -1866,11 +1868,12 @@ check_omp_nesting_restrictions (gimple  stmt, omp_context *ctx)\n \t  case GIMPLE_OMP_SECTIONS:\n \t  case GIMPLE_OMP_SINGLE:\n \t  case GIMPLE_OMP_TASK:\n-\t    warning (0, \"master region may not be closely nested inside \"\n-\t\t\t\"of work-sharing or explicit task region\");\n-\t    return;\n+\t    error_at (gimple_location (stmt),\n+\t\t      \"master region may not be closely nested inside \"\n+\t\t      \"of work-sharing or explicit task region\");\n+\t    return false;\n \t  case GIMPLE_OMP_PARALLEL:\n-\t    return;\n+\t    return true;\n \t  default:\n \t    break;\n \t  }\n@@ -1881,17 +1884,22 @@ check_omp_nesting_restrictions (gimple  stmt, omp_context *ctx)\n \t  {\n \t  case GIMPLE_OMP_CRITICAL:\n \t  case GIMPLE_OMP_TASK:\n-\t    warning (0, \"ordered region may not be closely nested inside \"\n-\t\t\t\"of critical or explicit task region\");\n-\t    return;\n+\t    error_at (gimple_location (stmt),\n+\t\t      \"ordered region may not be closely nested inside \"\n+\t\t      \"of critical or explicit task region\");\n+\t    return false;\n \t  case GIMPLE_OMP_FOR:\n \t    if (find_omp_clause (gimple_omp_for_clauses (ctx->stmt),\n \t\t\t\t OMP_CLAUSE_ORDERED) == NULL)\n-\t      warning (0, \"ordered region must be closely nested inside \"\n+\t      {\n+\t\terror_at (gimple_location (stmt),\n+\t\t\t  \"ordered region must be closely nested inside \"\n \t\t\t  \"a loop region with an ordered clause\");\n-\t    return;\n+\t\treturn false;\n+\t      }\n+\t    return true;\n \t  case GIMPLE_OMP_PARALLEL:\n-\t    return;\n+\t    return true;\n \t  default:\n \t    break;\n \t  }\n@@ -1902,14 +1910,16 @@ check_omp_nesting_restrictions (gimple  stmt, omp_context *ctx)\n \t    && (gimple_omp_critical_name (stmt)\n \t\t== gimple_omp_critical_name (ctx->stmt)))\n \t  {\n-\t    warning (0, \"critical region may not be nested inside a critical \"\n-\t\t\t\"region with the same name\");\n-\t    return;\n+\t    error_at (gimple_location (stmt),\n+\t\t      \"critical region may not be nested inside a critical \"\n+\t\t      \"region with the same name\");\n+\t    return false;\n \t  }\n       break;\n     default:\n       break;\n     }\n+  return true;\n }\n \n \n@@ -1980,14 +1990,20 @@ scan_omp_1_stmt (gimple_stmt_iterator *gsi, bool *handled_ops_p,\n   /* Check the OpenMP nesting restrictions.  */\n   if (ctx != NULL)\n     {\n+      bool remove = false;\n       if (is_gimple_omp (stmt))\n-\tcheck_omp_nesting_restrictions (stmt, ctx);\n+\tremove = !check_omp_nesting_restrictions (stmt, ctx);\n       else if (is_gimple_call (stmt))\n \t{\n \t  tree fndecl = gimple_call_fndecl (stmt);\n \t  if (fndecl && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL\n \t      && DECL_FUNCTION_CODE (fndecl) == BUILT_IN_GOMP_BARRIER)\n-\t    check_omp_nesting_restrictions (stmt, ctx);\n+\t    remove = !check_omp_nesting_restrictions (stmt, ctx);\n+\t}\n+      if (remove)\n+\t{\n+\t  stmt = gimple_build_nop ();\n+\t  gsi_replace (gsi, stmt, false);\n \t}\n     }\n \n@@ -2024,7 +2040,7 @@ scan_omp_1_stmt (gimple_stmt_iterator *gsi, bool *handled_ops_p,\n     case GIMPLE_OMP_ORDERED:\n     case GIMPLE_OMP_CRITICAL:\n       ctx = new_omp_context (stmt, ctx);\n-      scan_omp (gimple_omp_body (stmt), ctx);\n+      scan_omp (gimple_omp_body_ptr (stmt), ctx);\n       break;\n \n     case GIMPLE_BIND:\n@@ -2051,7 +2067,7 @@ scan_omp_1_stmt (gimple_stmt_iterator *gsi, bool *handled_ops_p,\n    clauses found during the scan.  */\n \n static void\n-scan_omp (gimple_seq body, omp_context *ctx)\n+scan_omp (gimple_seq *body_p, omp_context *ctx)\n {\n   location_t saved_location;\n   struct walk_stmt_info wi;\n@@ -2061,7 +2077,7 @@ scan_omp (gimple_seq body, omp_context *ctx)\n   wi.want_locations = true;\n \n   saved_location = input_location;\n-  walk_gimple_seq (body, scan_omp_1_stmt, scan_omp_1_op, &wi);\n+  walk_gimple_seq_mod (body_p, scan_omp_1_stmt, scan_omp_1_op, &wi);\n   input_location = saved_location;\n }\n \f\n@@ -6919,7 +6935,7 @@ execute_lower_omp (void)\n \t\t\t\t delete_omp_context);\n \n   body = gimple_body (current_function_decl);\n-  scan_omp (body, NULL);\n+  scan_omp (&body, NULL);\n   gcc_assert (taskreg_nesting_level == 0);\n \n   if (all_contexts->root)"}, {"sha": "2ba217fc40ccba9114cc97c19b0919837b70d3fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -1,3 +1,14 @@\n+2012-06-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/53580\n+\t* gcc.dg/gomp/nesting-1.c: Expect errors rather than warnings.\n+\t* gcc.dg/gomp/critical-4.c: Likewise.\n+\t* gfortran.dg/gomp/appendix-a/a.35.1.f90: Likewise.\n+\t* gfortran.dg/gomp/appendix-a/a.35.3.f90: Likewise.\n+\t* gfortran.dg/gomp/appendix-a/a.35.4.f90: Likewise.\n+\t* gfortran.dg/gomp/appendix-a/a.35.6.f90: Likewise.\n+\t* c-c++-common/gomp/pr53580.c: New test.\n+\n 2012-06-07  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n \n \tPR c++/51214"}, {"sha": "941a90d22408fee6dbe0be064154fcb34ca9efdb", "filename": "gcc/testsuite/c-c++-common/gomp/pr53580.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr53580.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr53580.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr53580.c?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -0,0 +1,19 @@\n+/* PR middle-end/53580 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp\" } */\n+\n+int\n+main ()\n+{\n+  int x, y, v = 0;\n+\n+#pragma omp parallel\n+  #pragma omp for\n+    for (x = 0; x < 10; x++)\n+      {\n+      #pragma omp for reduction(+: v)\t/* { dg-error \"work-sharing region may not be closely nested inside of work-sharing\" } */\n+\tfor (y = 0; y < 10; y++)\n+\t  v++;\n+      }\n+  return v - 100;\n+}"}, {"sha": "8d4f6a79180f9df615112ab534efe36710cb17c5", "filename": "gcc/testsuite/gcc.dg/gomp/critical-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fcritical-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fcritical-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fcritical-4.c?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -15,14 +15,14 @@ void\n foo2 (void)\n {\n   #pragma omp critical\n-  #pragma omp critical\t\t/* { dg-warning \"with the same name\" } */\n+  #pragma omp critical\t\t/* { dg-error \"with the same name\" } */\n     bar (0);\n }\n \n void\n foo3 (void)\n {\n   #pragma omp critical(foo)\n-  #pragma omp critical(foo)\t/* { dg-warning \"with the same name\" } */\n+  #pragma omp critical(foo)\t/* { dg-error \"with the same name\" } */\n     bar (0);\n }"}, {"sha": "df57ac845f7a86c5c1d3025f2880d577c0d379e0", "filename": "gcc/testsuite/gcc.dg/gomp/nesting-1.c", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fnesting-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fnesting-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fnesting-1.c?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -8,89 +8,89 @@ f1 (void)\n   #pragma omp for\n   for (i = 0; i < 3; i++)\n     {\n-      #pragma omp for\t\t/* { dg-warning \"may not be closely nested\" } */\n+      #pragma omp for\t\t/* { dg-error \"may not be closely nested\" } */\n       for (j = 0; j < 3; j++)\n \t;\n-      #pragma omp sections\t/* { dg-warning \"may not be closely nested\" } */\n+      #pragma omp sections\t/* { dg-error \"may not be closely nested\" } */\n       {\n \t;\n       #pragma omp section\n \t;\n       }\n-      #pragma omp single\t/* { dg-warning \"may not be closely nested\" } */\n+      #pragma omp single\t/* { dg-error \"may not be closely nested\" } */\n \t;\n-    #pragma omp master\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp master\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n-      #pragma omp barrier\t/* { dg-warning \"may not be closely nested\" } */\n+      #pragma omp barrier\t/* { dg-error \"may not be closely nested\" } */\n     }\n   #pragma omp sections\n   {\n-    #pragma omp for\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp for\t\t/* { dg-error \"may not be closely nested\" } */\n     for (j = 0; j < 3; j++)\n       ;\n-    #pragma omp sections\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp sections\t/* { dg-error \"may not be closely nested\" } */\n     {\n       ;\n     #pragma omp section\n       ;\n     }\n-    #pragma omp single\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp single\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n-    #pragma omp master\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp master\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n     #pragma omp section\n       ;\n   }\n   #pragma omp single\n   {\n-    #pragma omp for\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp for\t\t/* { dg-error \"may not be closely nested\" } */\n     for (j = 0; j < 3; j++)\n       ;\n-    #pragma omp sections\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp sections\t/* { dg-error \"may not be closely nested\" } */\n     {\n       ;\n     #pragma omp section\n       ;\n     }\n-    #pragma omp single\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp single\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n-    #pragma omp master\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp master\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n-    #pragma omp barrier\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp barrier\t\t/* { dg-error \"may not be closely nested\" } */\n   }\n   #pragma omp master\n   {\n-    #pragma omp for\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp for\t\t/* { dg-error \"may not be closely nested\" } */\n     for (j = 0; j < 3; j++)\n       ;\n-    #pragma omp sections\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp sections\t/* { dg-error \"may not be closely nested\" } */\n     {\n       ;\n     #pragma omp section\n       ;\n     }\n-    #pragma omp single\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp single\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n     #pragma omp master\n       ;\n-    #pragma omp barrier\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp barrier\t\t/* { dg-error \"may not be closely nested\" } */\n   }\n   #pragma omp task\n   {\n-    #pragma omp for\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp for\t\t/* { dg-error \"may not be closely nested\" } */\n     for (j = 0; j < 3; j++)\n       ;\n-    #pragma omp sections\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp sections\t/* { dg-error \"may not be closely nested\" } */\n     {\n       ;\n     #pragma omp section\n       ;\n     }\n-    #pragma omp single\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp single\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n-    #pragma omp master\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp master\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n-    #pragma omp barrier\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp barrier\t\t/* { dg-error \"may not be closely nested\" } */\n   }\n   #pragma omp parallel\n   {\n@@ -117,20 +117,20 @@ f2 (void)\n   int i, j;\n   #pragma omp ordered\n   {\n-    #pragma omp for\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp for\t\t/* { dg-error \"may not be closely nested\" } */\n     for (j = 0; j < 3; j++)\n       ;\n-    #pragma omp sections\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp sections\t/* { dg-error \"may not be closely nested\" } */\n     {\n       ;\n     #pragma omp section\n       ;\n     }\n-    #pragma omp single\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp single\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n     #pragma omp master\n       ;\n-    #pragma omp barrier\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp barrier\t\t/* { dg-error \"may not be closely nested\" } */\n   }\n }\n \n@@ -139,7 +139,7 @@ f3 (void)\n {\n   #pragma omp critical\n   {\n-    #pragma omp ordered\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp ordered\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n   }\n }\n@@ -149,7 +149,7 @@ f4 (void)\n {\n   #pragma omp task\n   {\n-    #pragma omp ordered\t\t/* { dg-warning \"may not be closely nested\" } */\n+    #pragma omp ordered\t\t/* { dg-error \"may not be closely nested\" } */\n       ;\n   }\n }\n@@ -161,7 +161,7 @@ f5 (void)\n   #pragma omp for\n   for (i = 0; i < 10; i++)\n     {\n-      #pragma omp ordered\t\t/* { dg-warning \"must be closely nested\" } */\n+      #pragma omp ordered\t\t/* { dg-error \"must be closely nested\" } */\n \t;\n     }\n   #pragma omp for ordered\n@@ -190,9 +190,9 @@ f7 (void)\n     #pragma omp critical\n       ;\n   #pragma omp critical (bar)\n-    #pragma omp critical (bar)\t\t/* { dg-warning \"may not be nested\" } */\n+    #pragma omp critical (bar)\t\t/* { dg-error \"may not be nested\" } */\n       ;\n   #pragma omp critical\n-    #pragma omp critical\t\t/* { dg-warning \"may not be nested\" } */\n+    #pragma omp critical\t\t/* { dg-error \"may not be nested\" } */\n       ;\n }"}, {"sha": "71886814ee4af9b90fea629d11e3d5bee11b0180", "filename": "gcc/testsuite/gfortran.dg/gomp/appendix-a/a.35.1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.1.f90?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -10,7 +10,7 @@ SUBROUTINE WRONG1(N)\n !$OMP DO\n           DO I = 1, N\n \t     ! incorrect nesting of loop regions\n-!$OMP DO     ! { dg-warning \"may not be closely nested\" }\n+!$OMP DO     ! { dg-error \"may not be closely nested\" }\n              DO J = 1, N\n                 CALL WORK(I,J)\n              END DO"}, {"sha": "160302a2b17ba90603a580289acf4028f77cf5a0", "filename": "gcc/testsuite/gfortran.dg/gomp/appendix-a/a.35.3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.3.f90?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -7,7 +7,7 @@ SUBROUTINE WRONG3(N)\n !$OMP DO\n           DO I = 1, N\n \t       ! incorrect nesting of regions\n-!$OMP SINGLE   ! { dg-warning \"may not be closely nested\" }\n+!$OMP SINGLE   ! { dg-error \"may not be closely nested\" }\n                CALL WORK(I, 1)\n !$OMP END SINGLE\n           END DO"}, {"sha": "40cf9b92ca5e074f73ddd3a0d25551f9d241b851", "filename": "gcc/testsuite/gfortran.dg/gomp/appendix-a/a.35.4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.4.f90?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -8,7 +8,7 @@ SUBROUTINE WRONG4(N)\n           DO I = 1, N\n              CALL WORK(I, 1)\n ! incorrect nesting of barrier region in a loop region\n-!$OMP BARRIER\t! { dg-warning \"may not be closely nested\" }\n+!$OMP BARRIER\t! { dg-error \"may not be closely nested\" }\n              CALL WORK(I, 2)\n           END DO\n !$OMP END PARALLEL"}, {"sha": "5b94c891dfe43efc482c86cdb94fcfea021dc32e", "filename": "gcc/testsuite/gfortran.dg/gomp/appendix-a/a.35.6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fappendix-a%2Fa.35.6.f90?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -6,7 +6,7 @@ SUBROUTINE WRONG6(N)\n !$OMP SINGLE\n            CALL WORK(N,1)\n ! incorrect nesting of barrier region in a single region\n-!$OMP BARRIER\t! { dg-warning \"may not be closely nested\" }\n+!$OMP BARRIER\t! { dg-error \"may not be closely nested\" }\n             CALL WORK(N,2)\n !$OMP END SINGLE\n !$OMP END PARALLEL"}, {"sha": "df2bfb504509a7ee7d5ef437a0eb4bee1f724388", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -1,3 +1,14 @@\n+2012-06-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/53580\n+\t* testsuite/libgomp.c/pr26943-2.c: Remove #pragma omp barrier,\n+\tuse GOMP_barrier () call instead.\n+\t* testsuite/libgomp.c/pr26943-3.c: Likewise.\n+\t* testsuite/libgomp.c/pr26943-4.c: Likewise.\n+\t* testsuite/libgomp.fortran/vla4.f90: Remove !$omp barrier,\n+\tcall GOMP_barrier instead.\n+\t* testsuite/libgomp.fortran/vla5.f90: Likewise.\n+\n 2012-06-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libgomp/52993"}, {"sha": "2ed21ae963edf8c103bd6855cf269e03d37b41be", "filename": "libgomp/testsuite/libgomp.c/pr26943-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr26943-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr26943-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr26943-2.c?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -3,6 +3,7 @@\n \n extern int omp_set_dynamic (int);\n extern void abort (void);\n+extern void GOMP_barrier (void);\n \n int a = 8, b = 12, c = 16, d = 20, j = 0;\n char e[10] = \"a\", f[10] = \"b\", g[10] = \"c\", h[10] = \"d\";\n@@ -20,7 +21,7 @@ main (void)\n     {\n       if (a != 8 || b != 12 || e[0] != 'a' || f[0] != 'b')\n \tj++;\n-#pragma omp barrier\t/* { dg-warning \"may not be closely nested\" } */\n+      GOMP_barrier ();\n #pragma omp atomic\n       a += i;\n       b += i;\n@@ -31,7 +32,7 @@ main (void)\n       f[0] += i;\n       g[0] = 'g' + i;\n       h[0] = 'h' + i;\n-#pragma omp barrier\t/* { dg-warning \"may not be closely nested\" } */\n+      GOMP_barrier ();\n       if (a != 8 + 6 || b != 12 + i || c != i || d != i)\n \tj += 8;\n       if (e[0] != 'a' + 6 || f[0] != 'b' + i || g[0] != 'g' + i)"}, {"sha": "855a4b274461756559159117bec011b1470d09b3", "filename": "libgomp/testsuite/libgomp.c/pr26943-3.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr26943-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr26943-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr26943-3.c?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -4,6 +4,7 @@\n extern int omp_set_dynamic (int);\n extern int omp_get_thread_num (void);\n extern void abort (void);\n+extern void GOMP_barrier (void);\n \n int a = 8, b = 12, c = 16, d = 20, j = 0, l = 0;\n char e[10] = \"a\", f[10] = \"b\", g[10] = \"c\", h[10] = \"d\";\n@@ -26,7 +27,7 @@ main (void)\n \t{\n \t  if (a != 8 || b != 12 || e[0] != 'a' || f[0] != 'b')\n \t    j++;\n-#pragma omp barrier\t/* { dg-warning \"may not be closely nested\" } */\n+\t  GOMP_barrier ();\n #pragma omp atomic\n \t  a += i;\n \t  b += i;\n@@ -37,7 +38,7 @@ main (void)\n \t  f[0] += i;\n \t  g[0] = 'g' + i;\n \t  h[0] = 'h' + i;\n-#pragma omp barrier\t/* { dg-warning \"may not be closely nested\" } */\n+\t  GOMP_barrier ();\n \t  if (a != 8 + 6 || b != 12 + i || c != i || d != i)\n \t    j += 8;\n \t  if (e[0] != 'a' + 6 || f[0] != 'b' + i || g[0] != 'g' + i)"}, {"sha": "24f253d236d7f0c24d9ffd879a03cdca5d6c4cf2", "filename": "libgomp/testsuite/libgomp.c/pr26943-4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr26943-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr26943-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr26943-4.c?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -4,6 +4,7 @@\n extern int omp_set_dynamic (int);\n extern int omp_get_thread_num (void);\n extern void abort (void);\n+extern void GOMP_barrier (void);\n \n int a = 8, b = 12, c = 16, d = 20, j = 0, l = 0;\n char e[10] = \"a\", f[10] = \"b\", g[10] = \"c\", h[10] = \"d\";\n@@ -27,7 +28,7 @@ main (void)\n \t{\n \t  if (a != 8 || b != 12 || e[0] != 'a' || f[0] != 'b')\n \t    j++;\n-#pragma omp barrier\t/* { dg-warning \"may not be closely nested\" } */\n+\t  GOMP_barrier ();\n #pragma omp atomic\n \t  a += i;\n \t  b += i;\n@@ -38,7 +39,7 @@ main (void)\n \t  f[0] += i;\n \t  g[0] = 'g' + i;\n \t  h[0] = 'h' + i;\n-#pragma omp barrier\t/* { dg-warning \"may not be closely nested\" } */\n+\t  GOMP_barrier ();\n \t  if (a != 8 + 6 || b != 12 + i || c != i || d != i)\n \t    j += 8;\n \t  if (e[0] != 'a' + 6 || f[0] != 'b' + i || g[0] != 'g' + i)"}, {"sha": "0bee30cf817dc105c9f82c7bb0a8aee7d4103796", "filename": "libgomp/testsuite/libgomp.fortran/vla4.f90", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla4.f90?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -10,6 +10,10 @@ end subroutine check\n \n   subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     use omp_lib\n+    interface\n+      subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n+      end subroutine\n+    end interface\n     integer :: n\n     character (len = *) :: c\n     character (len = n) :: d\n@@ -94,7 +98,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     forall (p = 1:2, q = 3:7, r = 1:7) u(p, q, r) = 30 - x - p + q - 2 * r\n     forall (p = 1:5, q = 3:7, p + q .le. 8) v(p, q) = w(1:7)\n     forall (p = 1:5, q = 3:7, p + q .gt. 8) v(p, q) = w(20:26)\n-!$omp barrier\t\t! { dg-warning \"may not be closely nested\" }\n+    call GOMP_barrier\n     y = ''\n     if (x .eq. 0) y = '0'\n     if (x .eq. 1) y = '1'"}, {"sha": "cdd561d39615c39cd952a89be20a270855a10865", "filename": "libgomp/testsuite/libgomp.fortran/vla5.f90", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26127932dd7394a8d1cc0c1f55e1de064ba175c0/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla5.f90?ref=26127932dd7394a8d1cc0c1f55e1de064ba175c0", "patch": "@@ -10,6 +10,10 @@ end subroutine check\n \n   subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     use omp_lib\n+    interface\n+      subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n+      end subroutine\n+    end interface\n     integer :: n\n     character (len = *) :: c\n     character (len = n) :: d\n@@ -66,7 +70,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     forall (p = 1:2, q = 3:7, r = 1:7) u(p, q, r) = 30 - x - p + q - 2 * r\n     forall (p = 1:5, q = 3:7, p + q .le. 8) v(p, q) = w(1:7)\n     forall (p = 1:5, q = 3:7, p + q .gt. 8) v(p, q) = w(20:26)\n-!$omp barrier\t\t! { dg-warning \"may not be closely nested\" }\n+    call GOMP_barrier\n     y = ''\n     if (x .eq. 0) y = '0'\n     if (x .eq. 1) y = '1'"}]}