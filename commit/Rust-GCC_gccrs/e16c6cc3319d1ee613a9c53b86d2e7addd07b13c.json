{"sha": "e16c6cc3319d1ee613a9c53b86d2e7addd07b13c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE2YzZjYzMzMTlkMWVlNjEzYTljNTNiODZkMmU3YWRkZDA3YjEzYw==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-12-12T10:02:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-12T10:02:09Z"}, "message": "[Ada] Fix a number of typos, plus minor reformatting\n\n2019-12-12  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch3.adb, sem_util.adb: Minor reformatting.\n\nFrom-SVN: r279283", "tree": {"sha": "aa556060bd3af9e27fb9935498d33b19e791c372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa556060bd3af9e27fb9935498d33b19e791c372"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5461bed9a1b19840030d47c5ce9b685cd1206c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5461bed9a1b19840030d47c5ce9b685cd1206c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5461bed9a1b19840030d47c5ce9b685cd1206c5"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "3d0ede43d9d13b9c27a9c6cd628e099735182ca0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e16c6cc3319d1ee613a9c53b86d2e7addd07b13c", "patch": "@@ -1,3 +1,7 @@\n+2019-12-12  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch3.adb, sem_util.adb: Minor reformatting.\n+\n 2019-12-12  Bob Duff  <duff@adacore.com>\n \n \t* doc/gnat_ugn/gnat_utility_programs.rst: Update gnatmetric"}, {"sha": "c3b8796fa0849ca9319268b92248dd08f758b763", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=e16c6cc3319d1ee613a9c53b86d2e7addd07b13c", "patch": "@@ -12973,9 +12973,9 @@ package body Sem_Ch3 is\n       then\n          --  If this is a constrained access definition for a record\n          --  component, we leave the type as an unconstrained access,\n-         --  and mark the component so that its actual type is build\n-         --  at a point of use (e.g an assignment statement). THis is\n-         --  handled in sem_util, Build_Actual_Subtype_Of_Component.\n+         --  and mark the component so that its actual type is built\n+         --  at a point of use (e.g., an assignment statement). This\n+         --  is handled in Sem_Util.Build_Actual_Subtype_Of_Component.\n \n          if Desig_Type = Current_Scope\n            and then No (Def_Id)\n@@ -12986,10 +12986,9 @@ package body Sem_Ch3 is\n             Set_Ekind (Desig_Subtype, E_Record_Subtype);\n             Def_Id := Entity (Subtype_Mark (S));\n \n-            --  We indicate that the component has a pet-object\n-            --  constraint for uniform treatment at a point of use,\n-            --  even though the constraint may be independent of\n-            --  discriminants of enclosing type.\n+            --  We indicate that the component has a per-object constraint\n+            --  for treatment at a point of use, even though the constraint\n+            --  may be independent of discriminants of the enclosing type.\n \n             if Nkind (Related_Nod) = N_Component_Declaration then\n                Set_Has_Per_Object_Constraint\n@@ -13003,7 +13002,6 @@ package body Sem_Ch3 is\n             Constrain_Discriminated_Type\n               (Desig_Subtype, S, Related_Nod, For_Access => True);\n             return;\n-\n          end if;\n \n          --  Enforce rule that the constraint is illegal if there is an"}, {"sha": "22ecf2137e61cc8b702cfc90656ab8a438103229", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e16c6cc3319d1ee613a9c53b86d2e7addd07b13c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e16c6cc3319d1ee613a9c53b86d2e7addd07b13c", "patch": "@@ -1200,15 +1200,15 @@ package body Sem_Util is\n       function Build_Access_Record_Constraint (C : List_Id) return List_Id;\n       --  If the record component is a constrained access to the current\n       --  record, the subtype has not been constructed during analysis of\n-      --  the enclosing record type (see Analyze_Access). In that case build\n-      --  a constrainted access subtype after replacing references to the\n-      --  enclosing discriminants by the corresponding discriminant values\n+      --  the enclosing record type (see Analyze_Access). In that case, build\n+      --  a constrained access subtype after replacing references to the\n+      --  enclosing discriminants with the corresponding discriminant values\n       --  of the prefix.\n \n       function Build_Actual_Array_Constraint return List_Id;\n       --  If one or more of the bounds of the component depends on\n       --  discriminants, build  actual constraint using the discriminants\n-      --  of the prefx, as above.\n+      --  of the prefix, as above.\n \n       function Build_Actual_Record_Constraint return List_Id;\n       --  Similar to previous one, for discriminated components constrained\n@@ -1306,7 +1306,7 @@ package body Sem_Util is\n          D_Val       : Node_Id;\n \n       begin\n-         --  Retrieve the constraint from the compomnent declaration, because\n+         --  Retrieve the constraint from the component declaration, because\n          --  the component subtype has not been constructed and the component\n          --  type is an unconstrained access.\n \n@@ -1319,13 +1319,13 @@ package body Sem_Util is\n                Set_Expression (D_Val,\n                  Make_Selected_Component (Loc,\n                    Prefix => New_Copy_Tree (P),\n-                  Selector_Name =>\n+                   Selector_Name =>\n                      New_Occurrence_Of (Entity (Expression (D)), Loc)));\n \n             elsif Denotes_Discriminant (D) then\n                D_Val := Make_Selected_Component (Loc,\n                  Prefix => New_Copy_Tree (P),\n-                Selector_Name => New_Occurrence_Of (Entity (D), Loc));\n+                 Selector_Name => New_Occurrence_Of (Entity (D), Loc));\n \n             else\n                D_Val := New_Copy_Tree (D);\n@@ -1342,7 +1342,7 @@ package body Sem_Util is\n \n    begin\n       --  The subtype does not need to be created for a selected component\n-      --  in a Spec_Expression,\n+      --  in a Spec_Expression.\n \n       if In_Spec_Expression then\n          return Empty;\n@@ -1373,7 +1373,7 @@ package body Sem_Util is\n          end if;\n \n       elsif Nkind (N) = N_Selected_Component then\n-         --  THe entity of the selected compomnent allows us to retrieve\n+         --  The entity of the selected component allows us to retrieve\n          --  the original constraint from its component declaration.\n \n          Sel := Entity (Selector_Name (N));"}]}