{"sha": "326f9a757c64d1d6c37e45184d4da7a44ee720e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI2ZjlhNzU3YzY0ZDFkNmMzN2U0NTE4NGQ0ZGE3YTQ0ZWU3MjBlMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-02-03T16:54:08Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-02-03T16:54:08Z"}, "message": "* misc.c, utils2.c: Fix comment typos.\n\nFrom-SVN: r121547", "tree": {"sha": "0ba5509091de239ba6c90a508163e87e5d5313eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ba5509091de239ba6c90a508163e87e5d5313eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/326f9a757c64d1d6c37e45184d4da7a44ee720e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326f9a757c64d1d6c37e45184d4da7a44ee720e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/326f9a757c64d1d6c37e45184d4da7a44ee720e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326f9a757c64d1d6c37e45184d4da7a44ee720e2/comments", "author": null, "committer": null, "parents": [{"sha": "9f5ed61a800c20ae8b3cda028af18027c2884952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f5ed61a800c20ae8b3cda028af18027c2884952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f5ed61a800c20ae8b3cda028af18027c2884952"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "5641887a2176764d4c6fcd629c1473701a5eb30c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326f9a757c64d1d6c37e45184d4da7a44ee720e2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326f9a757c64d1d6c37e45184d4da7a44ee720e2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=326f9a757c64d1d6c37e45184d4da7a44ee720e2", "patch": "@@ -1,3 +1,7 @@\n+2007-02-03  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* misc.c, utils2.c: Fix comment typos.\n+\n 2007-01-24  Roger Sayle  <roger@eyesopen.com>\n \n \t* decl.c (gnat_to_gnu_entity): Use TREE_OVERFLOW instead of"}, {"sha": "67de3ffa7bcff47256a3c6f1cf0436f6640319af", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326f9a757c64d1d6c37e45184d4da7a44ee720e2/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326f9a757c64d1d6c37e45184d4da7a44ee720e2/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=326f9a757c64d1d6c37e45184d4da7a44ee720e2", "patch": "@@ -776,7 +776,7 @@ gnat_type_max_size (tree gnu_type)\n     {\n       tree max_adasize = max_size (TYPE_ADA_SIZE (gnu_type), true);\n \n-      /* If we have succeded in finding a constant, round it up to the\n+      /* If we have succeeded in finding a constant, round it up to the\n \t type's alignment and return the result in byte units.  */\n \n       if (host_integerp (max_adasize, 1))"}, {"sha": "e987fa9d22d8de6f48ec9affa116588dd5363a44", "filename": "gcc/ada/utils2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326f9a757c64d1d6c37e45184d4da7a44ee720e2/gcc%2Fada%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326f9a757c64d1d6c37e45184d4da7a44ee720e2/gcc%2Fada%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils2.c?ref=326f9a757c64d1d6c37e45184d4da7a44ee720e2", "patch": "@@ -1526,7 +1526,7 @@ gnat_build_constructor (tree type, tree list)\n \n       /* Propagate an NULL_EXPR from the size of the type.  We won't ever\n \t be executing the code we generate here in that case, but handle it\n-\t specially to avoid the cmpiler blowing up.  */\n+\t specially to avoid the compiler blowing up.  */\n       if (TREE_CODE (type) == RECORD_TYPE\n \t  && (0 != (result\n \t\t    = contains_null_expr (DECL_SIZE (TREE_PURPOSE (elmt))))))"}]}