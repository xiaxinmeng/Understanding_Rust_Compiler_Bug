{"sha": "f82ddcaedbfcb7d25208987be6a945bf9a422759", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgyZGRjYWVkYmZjYjdkMjUyMDg5ODdiZTZhOTQ1YmY5YTQyMjc1OQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-05-18T05:35:30Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-05-18T05:35:30Z"}, "message": "rs6000.md (ctrsi_internal3): Delete.\n\n\t* config/rs6000/rs6000.md (ctrsi_internal3): Delete.\n\t(ctrsi_internal4, ctrdi_internal3, ctrdi_internal4): Delete.\n\nFrom-SVN: r81973", "tree": {"sha": "c4b6bd513de623d735408b52f1b4a4f75df86bd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4b6bd513de623d735408b52f1b4a4f75df86bd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f82ddcaedbfcb7d25208987be6a945bf9a422759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f82ddcaedbfcb7d25208987be6a945bf9a422759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f82ddcaedbfcb7d25208987be6a945bf9a422759", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f82ddcaedbfcb7d25208987be6a945bf9a422759/comments", "author": null, "committer": null, "parents": [{"sha": "261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386"}], "stats": {"total": 103, "additions": 5, "deletions": 98}, "files": [{"sha": "96c91ee610677f814ebd8a41afd1c5a0aa33fb67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f82ddcaedbfcb7d25208987be6a945bf9a422759/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f82ddcaedbfcb7d25208987be6a945bf9a422759/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f82ddcaedbfcb7d25208987be6a945bf9a422759", "patch": "@@ -1,3 +1,8 @@\n+2004-05-18  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.md (ctrsi_internal3): Delete.\n+\t(ctrsi_internal4, ctrdi_internal3, ctrdi_internal4): Delete.\n+\n 2004-05-17  Jeff Law  <law@redhat.com>\n \n \t* toplev.h (flag_delete_null_pointer_checks): Move from here to..."}, {"sha": "29d70e9df109d24efdf56f4403d8d1b673873d29", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 0, "deletions": 98, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f82ddcaedbfcb7d25208987be6a945bf9a422759/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f82ddcaedbfcb7d25208987be6a945bf9a422759/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f82ddcaedbfcb7d25208987be6a945bf9a422759", "patch": "@@ -14021,104 +14021,6 @@\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16,16\")])\n \n-;; Similar, but we can use GE since we have a REG_NONNEG.\n-\n-(define_insn \"*ctrsi_internal3\"\n-  [(set (pc)\n-\t(if_then_else (ge (match_operand:SI 1 \"register_operand\" \"c,*r,*r,*r\")\n-\t\t\t  (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))\n-   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n-\t(plus:SI (match_dup 1)\n-\t\t (const_int -1)))\n-   (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n-   (clobber (match_scratch:SI 4 \"=X,X,&r,r\"))]\n-  \"TARGET_32BIT && find_reg_note (insn, REG_NONNEG, 0)\"\n-  \"*\n-{\n-  if (which_alternative != 0)\n-    return \\\"#\\\";\n-  else if (get_attr_length (insn) == 4)\n-    return \\\"{bdn|bdnz} %l0\\\";\n-  else\n-    return \\\"bdz $+8\\;b %l0\\\";\n-}\"\n-  [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"*,12,16,16\")])\n-\n-(define_insn \"*ctrsi_internal4\"\n-  [(set (pc)\n-\t(if_then_else (ge (match_operand:SI 1 \"register_operand\" \"c,*r,*r,*r\")\n-\t\t\t  (const_int 0))\n-\t\t      (pc)\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n-\t(plus:SI (match_dup 1)\n-\t\t (const_int -1)))\n-   (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n-   (clobber (match_scratch:SI 4 \"=X,X,&r,r\"))]\n-  \"TARGET_32BIT && find_reg_note (insn, REG_NONNEG, 0)\"\n-  \"*\n-{\n-  if (which_alternative != 0)\n-    return \\\"#\\\";\n-  else if (get_attr_length (insn) == 4)\n-    return \\\"bdz %l0\\\";\n-  else\n-    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n-}\"\n-  [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"*,12,16,16\")])\n-\n-(define_insn \"*ctrdi_internal3\"\n-  [(set (pc)\n-\t(if_then_else (ge (match_operand:DI 1 \"register_operand\" \"c,*r,*r,*r\")\n-\t\t\t  (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))\n-   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n-\t(plus:DI (match_dup 1)\n-\t\t (const_int -1)))\n-   (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n-   (clobber (match_scratch:DI 4 \"=X,X,&r,r\"))]\n-  \"TARGET_64BIT && find_reg_note (insn, REG_NONNEG, 0)\"\n-  \"*\n-{\n-  if (which_alternative != 0)\n-    return \\\"#\\\";\n-  else if (get_attr_length (insn) == 4)\n-    return \\\"{bdn|bdnz} %l0\\\";\n-  else\n-    return \\\"bdz $+8\\;b %l0\\\";\n-}\"\n-  [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"*,12,16,16\")])\n-\n-(define_insn \"*ctrdi_internal4\"\n-  [(set (pc)\n-\t(if_then_else (ge (match_operand:DI 1 \"register_operand\" \"c,*r,*r,*r\")\n-\t\t\t  (const_int 0))\n-\t\t      (pc)\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n-\t(plus:DI (match_dup 1)\n-\t\t (const_int -1)))\n-   (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n-   (clobber (match_scratch:DI 4 \"=X,X,&r,r\"))]\n-  \"TARGET_64BIT && find_reg_note (insn, REG_NONNEG, 0)\"\n-  \"*\n-{\n-  if (which_alternative != 0)\n-    return \\\"#\\\";\n-  else if (get_attr_length (insn) == 4)\n-    return \\\"bdz %l0\\\";\n-  else\n-    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n-}\"\n-  [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"*,12,16,16\")])\n-\n ;; Similar but use EQ\n \n (define_insn \"*ctrsi_internal5\""}]}