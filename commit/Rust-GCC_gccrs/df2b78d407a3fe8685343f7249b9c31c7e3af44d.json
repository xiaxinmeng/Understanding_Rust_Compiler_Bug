{"sha": "df2b78d407a3fe8685343f7249b9c31c7e3af44d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYyYjc4ZDQwN2EzZmU4Njg1MzQzZjcyNDliOWMzMWM3ZTNhZjQ0ZA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-22T10:30:17Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-22T15:08:46Z"}, "message": "analyzer: fix NULL deref false positives [PR94851]\n\nPR analyzer/94851 reports various false \"NULL dereference\" diagnostics.\nThe first case (comment #1) affects GCC 10.2 but no longer affects\ntrunk; I believe it was fixed by the state rewrite of\nr11-2694-g808f4dfeb3a95f50f15e71148e5c1067f90a126d.\n\nThe patch adds a regression test for this case.\n\nThe other cases (comment #3 and comment #4) still affect trunk.\nIn both cases, the && in a conditional is optimized to bitwise &\n  _1 = p_4 != 0B;\n  _2 = p_4 != q_6(D);\n  _3 = _1 & _2;\nand the analyzer fails to fold this for the case where one (or both) of\nthe conditionals is false, and thus erroneously considers the path where\n\"p\" is non-NULL despite being passed a NULL value.\n\nFix this by implementing folding for this case.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/94851\n\t* region-model-manager.cc\n\t(region_model_manager::maybe_fold_binop): Fold bitwise \"& 0\" to 0.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/94851\n\t* gcc.dg/analyzer/pr94851-1.c: New test.\n\t* gcc.dg/analyzer/pr94851-3.c: New test.\n\t* gcc.dg/analyzer/pr94851-4.c: New test.", "tree": {"sha": "0cb9979014e69b118419c684cfe9f1e1dcf12fe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cb9979014e69b118419c684cfe9f1e1dcf12fe7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df2b78d407a3fe8685343f7249b9c31c7e3af44d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2b78d407a3fe8685343f7249b9c31c7e3af44d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df2b78d407a3fe8685343f7249b9c31c7e3af44d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2b78d407a3fe8685343f7249b9c31c7e3af44d/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c199723d7ed0032db095abc75b82a9710eaa5e56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c199723d7ed0032db095abc75b82a9710eaa5e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c199723d7ed0032db095abc75b82a9710eaa5e56"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "ce949322db7b53d5c0256126527cb7e7363b6c0f", "filename": "gcc/analyzer/region-model-manager.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2b78d407a3fe8685343f7249b9c31c7e3af44d/gcc%2Fanalyzer%2Fregion-model-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2b78d407a3fe8685343f7249b9c31c7e3af44d/gcc%2Fanalyzer%2Fregion-model-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-manager.cc?ref=df2b78d407a3fe8685343f7249b9c31c7e3af44d", "patch": "@@ -451,6 +451,12 @@ region_model_manager::maybe_fold_binop (tree type, enum tree_code op,\n       if (cst1 && integer_onep (cst1))\n \treturn arg0;\n       break;\n+    case BIT_AND_EXPR:\n+      if (cst1)\n+\tif (zerop (cst1) && INTEGRAL_TYPE_P (type))\n+\t  /* \"(ARG0 & 0)\" -> \"0\".  */\n+\t  return get_or_create_constant_svalue (build_int_cst (type, 0));\n+      break;\n     case TRUTH_ANDIF_EXPR:\n     case TRUTH_AND_EXPR:\n       if (cst1)"}, {"sha": "56571318f91eb482f0a61ce6d616c4873616f665", "filename": "gcc/testsuite/gcc.dg/analyzer/pr94851-1.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2b78d407a3fe8685343f7249b9c31c7e3af44d/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94851-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2b78d407a3fe8685343f7249b9c31c7e3af44d/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94851-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94851-1.c?ref=df2b78d407a3fe8685343f7249b9c31c7e3af44d", "patch": "@@ -0,0 +1,46 @@\n+/* { dg-additional-options \"-O2\" } */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+typedef struct AMARK {\n+  struct AMARK *m_next;\n+  char m_name;\n+} AMARK;\n+\n+struct buf {\n+  AMARK *b_amark;\n+};\n+\n+struct buf *curbp;\n+\n+int pamark(void) {\n+  int c;\n+  AMARK *p = curbp->b_amark;\n+  AMARK *last = curbp->b_amark;\n+\n+  c = getchar();\n+\n+  while (p != (AMARK *)NULL && p->m_name != (char)c) {\n+    last = p;\n+    p = p->m_next;\n+  }\n+\n+  if (p != (AMARK *)NULL) {\n+    printf(\"over writing mark %c\\n\", c);\n+  } else {\n+    if ((p = (AMARK *)malloc(sizeof(AMARK))) == (AMARK *)NULL)\n+      return 0;\n+\n+    p->m_next = (AMARK *)NULL;\n+\n+    if (curbp->b_amark == (AMARK *)NULL)\n+      curbp->b_amark = p;\n+    else\n+      last->m_next = p;\n+  }\n+\n+  p->m_name = (char)c;\n+\n+  return 1;\n+}"}, {"sha": "0f953970b00bce4efc2b025db529afdb628128c2", "filename": "gcc/testsuite/gcc.dg/analyzer/pr94851-3.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2b78d407a3fe8685343f7249b9c31c7e3af44d/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94851-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2b78d407a3fe8685343f7249b9c31c7e3af44d/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94851-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94851-3.c?ref=df2b78d407a3fe8685343f7249b9c31c7e3af44d", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-additional-options \"-O1\" } */\n+\n+struct List {\n+    struct List *next;\n+};\n+\n+void foo(struct List *p, struct List *q)\n+{\n+    while (p && p != q){\n+        p = p->next;\n+    }\n+}\n+\n+int main()\n+{\n+    struct List x = {0};\n+    foo(0, &x);\n+    return 0;\n+}\n+"}, {"sha": "2a15a5d7f5bf682dada2b6c7293e976ccebc17bc", "filename": "gcc/testsuite/gcc.dg/analyzer/pr94851-4.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2b78d407a3fe8685343f7249b9c31c7e3af44d/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94851-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2b78d407a3fe8685343f7249b9c31c7e3af44d/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94851-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94851-4.c?ref=df2b78d407a3fe8685343f7249b9c31c7e3af44d", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-additional-options \"-O2\" } */\n+\n+#include <stdlib.h>\n+\n+struct List {\n+    struct List *next;\n+};\n+\n+void foo(struct List *p, struct List *q)\n+{\n+    while (p && p != q){\n+        struct List *next = p->next;\n+        free(p);\n+        p = next;\n+    }\n+}\n+\n+int main()\n+{\n+    struct List x = {0};\n+    foo(NULL, &x);\n+    return 0;\n+}\n+"}]}