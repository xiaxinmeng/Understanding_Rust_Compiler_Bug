{"sha": "abb3f0a989ba263258704a50ca8bc5be8a35c40d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJiM2YwYTk4OWJhMjYzMjU4NzA0YTUwY2E4YmM1YmU4YTM1YzQwZA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-04-09T01:23:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-09T01:23:05Z"}, "message": "flow.c (delete_unreachable_blocks): Do not require an edge to be marked with EDGE_FALLTHRU when...\n\n\t* flow.c (delete_unreachable_blocks): Do not require an edge to\n\tbe marked with EDGE_FALLTHRU when tidying an edge which connects\n\tconsecutive basic blocks.\n\t* flow.c (can_delete_label_p): Do not convert a label into a\n\tdeleted label here.\n\nFrom-SVN: r26306", "tree": {"sha": "7e232abfa4411d0183d3a023adff0be5814cf8b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e232abfa4411d0183d3a023adff0be5814cf8b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abb3f0a989ba263258704a50ca8bc5be8a35c40d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb3f0a989ba263258704a50ca8bc5be8a35c40d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb3f0a989ba263258704a50ca8bc5be8a35c40d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb3f0a989ba263258704a50ca8bc5be8a35c40d/comments", "author": null, "committer": null, "parents": [{"sha": "10ef53b1ab73e5ed13a94c27d4fd1acb90a53fdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ef53b1ab73e5ed13a94c27d4fd1acb90a53fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10ef53b1ab73e5ed13a94c27d4fd1acb90a53fdd"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "d06c3a4e5d9fee229646234a96c5bd241c6e9289", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb3f0a989ba263258704a50ca8bc5be8a35c40d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb3f0a989ba263258704a50ca8bc5be8a35c40d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abb3f0a989ba263258704a50ca8bc5be8a35c40d", "patch": "@@ -1,5 +1,12 @@\n Thu Apr  8 19:20:18 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* flow.c (delete_unreachable_blocks): Do not require an edge to\n+\tbe marked with EDGE_FALLTHRU when tidying an edge which connects\n+\tconsecutive basic blocks.\n+\n+\t* flow.c (can_delete_label_p): Do not convert a label into a\n+\tdeleted label here.\n+\n \t* cse.c (flush_hash_table): New function.\n \t(cse_insn): Flush the hash table when we encounter a volatile asm.\n \t(cse_basic_block): Use flush_hash_table instead of doing it"}, {"sha": "daf357114bc48c99064b87f0e3a08386e8d2bca2", "filename": "gcc/flow.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb3f0a989ba263258704a50ca8bc5be8a35c40d/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb3f0a989ba263258704a50ca8bc5be8a35c40d/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=abb3f0a989ba263258704a50ca8bc5be8a35c40d", "patch": "@@ -1555,12 +1555,21 @@ delete_unreachable_blocks ()\n       basic_block c = BASIC_BLOCK (i);\n       edge s;\n \n-      /* We only need care for simple unconditional jumps, which implies\n-\t a single successor.  */\n+      /* We care about simple conditional or unconditional jumps with\n+\t a single successor.\n+\n+\t If we had a conditional branch to the next instruction when\n+\t find_basic_blocks was called, then there will only be one\n+\t out edge for the block which ended with the conditional\n+\t branch (since we do not create duplicate edges).\n+\n+\t Furthermore, because we create the edge for the jump to the\n+\t label before the fallthrough edge, we will only see the\n+\t jump edge.  So we do not want to check that the edge is a \n+\t FALLTHRU edge.  */\n       if ((s = b->succ) != NULL\n \t  && s->succ_next == NULL\n-\t  && s->dest == c\n-\t  && ! (s->flags & EDGE_FALLTHRU))\n+\t  && s->dest == c)\n \ttidy_fallthru_edge (s, b, c);\n     }\n \n@@ -1823,15 +1832,9 @@ can_delete_label_p (label)\n     if (label == XEXP (x, 0))\n       return 0;\n \n-  /* User declared labels must be preserved, but we can\n-     convert them into a NOTE instead. */\n+  /* User declared labels must be preserved.  */\n   if (LABEL_NAME (label) != 0)\n-    {\n-      PUT_CODE (label, NOTE);\n-      NOTE_LINE_NUMBER (label) = NOTE_INSN_DELETED_LABEL;\n-      NOTE_SOURCE_FILE (label) = 0;\n-      return 0;\n-    }\n+    return 0;\n   \n   return 1;\n }"}]}