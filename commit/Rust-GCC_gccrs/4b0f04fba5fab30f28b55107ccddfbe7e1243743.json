{"sha": "4b0f04fba5fab30f28b55107ccddfbe7e1243743", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIwZjA0ZmJhNWZhYjMwZjI4YjU1MTA3Y2NkZGZiZTdlMTI0Mzc0Mw==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2018-11-19T19:35:51Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2018-11-19T19:35:51Z"}, "message": "re PR rtl-optimization/88033 (ICE on valid code at -O2 and -O3 on x86-64-linux-gnu: in remove_some_program_points_and_update_live_ranges, at lra-lives.c:1179)\n\ngcc/\n\tPR rtl-optimization/88033\n\t* ira-lives.c (non_conflicting_reg_copy_p): Skip copies from a register\n\tto itself.  Use HARD_REGISTER_NUM_P.\n\ngcc/testsuite/\n\tPR rtl-optimization/88033\n\t* gcc.target/i386/pr88033.c: New test.\n\nFrom-SVN: r266282", "tree": {"sha": "f178fa2f69190af963c3c7842cd415fc8bb1734b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f178fa2f69190af963c3c7842cd415fc8bb1734b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b0f04fba5fab30f28b55107ccddfbe7e1243743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b0f04fba5fab30f28b55107ccddfbe7e1243743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b0f04fba5fab30f28b55107ccddfbe7e1243743", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b0f04fba5fab30f28b55107ccddfbe7e1243743/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1fd319753c90f05e026e16c2c83af8f1c6687a5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd319753c90f05e026e16c2c83af8f1c6687a5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fd319753c90f05e026e16c2c83af8f1c6687a5f"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "8bea262a5820cbcc579a04e857b4caba48094319", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b0f04fba5fab30f28b55107ccddfbe7e1243743/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b0f04fba5fab30f28b55107ccddfbe7e1243743/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b0f04fba5fab30f28b55107ccddfbe7e1243743", "patch": "@@ -1,3 +1,9 @@\n+2018-11-19  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR rtl-optimization/88033\n+\t* ira-lives.c (non_conflicting_reg_copy_p): Skip copies from a register\n+\tto itself.  Use HARD_REGISTER_NUM_P.\n+\n 2018-11-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* tree-vect-loop.c (vect_transform_loop): Disable further unrolling"}, {"sha": "f74958f18017228feb5f9292cafb361c04979622", "filename": "gcc/ira-lives.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b0f04fba5fab30f28b55107ccddfbe7e1243743/gcc%2Fira-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b0f04fba5fab30f28b55107ccddfbe7e1243743/gcc%2Fira-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-lives.c?ref=4b0f04fba5fab30f28b55107ccddfbe7e1243743", "patch": "@@ -1083,11 +1083,17 @@ non_conflicting_reg_copy_p (rtx_insn *insn)\n   int src_regno = REGNO (SET_SRC (set));\n   machine_mode mode = GET_MODE (SET_DEST (set));\n \n+  /* By definition, a register does not conflict with itself, therefore we\n+     do not have to handle it specially.  Returning NULL_RTX now, helps\n+     simplify the callers of this function.  */\n+  if (dst_regno == src_regno)\n+    return NULL_RTX;\n+\n   /* Computing conflicts for register pairs is difficult to get right, so\n      for now, disallow it.  */\n-  if ((dst_regno < FIRST_PSEUDO_REGISTER\n+  if ((HARD_REGISTER_NUM_P (dst_regno)\n        && hard_regno_nregs (dst_regno, mode) != 1)\n-      || (src_regno < FIRST_PSEUDO_REGISTER\n+      || (HARD_REGISTER_NUM_P (src_regno)\n \t  && hard_regno_nregs (src_regno, mode) != 1))\n     return NULL_RTX;\n "}, {"sha": "6a659e736802c010b30187d7ed994d7176b05845", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b0f04fba5fab30f28b55107ccddfbe7e1243743/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b0f04fba5fab30f28b55107ccddfbe7e1243743/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b0f04fba5fab30f28b55107ccddfbe7e1243743", "patch": "@@ -1,3 +1,8 @@\n+2018-11-19  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR rtl-optimization/88033\n+\t* gcc.target/i386/pr88033.c: New test.\n+\n 2018-11-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/sve/unroll-1.c: New test."}, {"sha": "d75692c48d7c76d3f265b3550aa38ab87aac2b55", "filename": "gcc/testsuite/gcc.target/i386/pr88033.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b0f04fba5fab30f28b55107ccddfbe7e1243743/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88033.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b0f04fba5fab30f28b55107ccddfbe7e1243743/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88033.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88033.c?ref=4b0f04fba5fab30f28b55107ccddfbe7e1243743", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+main (long a, long *b, long c)\n+{\n+  if (!c)\n+    return 0;\n+  int g;\n+  *b = (g & ~3000000000) < 0 ? a : a - g;\n+  while (1)\n+    ;\n+  return 0;\n+}"}]}