{"sha": "303ec2aa60f39584971f33001fef1c8d80e138ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAzZWMyYWE2MGYzOTU4NDk3MWYzMzAwMWZlZjFjOGQ4MGUxMzhhYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-07T12:28:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-07T12:28:44Z"}, "message": "(assign_stack_temp): Abort if SIZE == -1.\n\nFrom-SVN: r8235", "tree": {"sha": "53eb80dd34b56ccafeebf20b850527bbfdc09f3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53eb80dd34b56ccafeebf20b850527bbfdc09f3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/303ec2aa60f39584971f33001fef1c8d80e138ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303ec2aa60f39584971f33001fef1c8d80e138ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/303ec2aa60f39584971f33001fef1c8d80e138ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303ec2aa60f39584971f33001fef1c8d80e138ac/comments", "author": null, "committer": null, "parents": [{"sha": "6676e72f969d58e2ff882ba1f6725101c74c69e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6676e72f969d58e2ff882ba1f6725101c74c69e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6676e72f969d58e2ff882ba1f6725101c74c69e7"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "00801cd4edc25fc91b74a1430b7f789c2a627864", "filename": "gcc/function.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303ec2aa60f39584971f33001fef1c8d80e138ac/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303ec2aa60f39584971f33001fef1c8d80e138ac/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=303ec2aa60f39584971f33001fef1c8d80e138ac", "patch": "@@ -801,6 +801,11 @@ assign_stack_temp (mode, size, keep)\n {\n   struct temp_slot *p, *best_p = 0;\n \n+  /* If SIZE is -1 it means that somebody tried to allocate a temporary\n+     of a variable size.  */\n+  if (size == -1)\n+    abort ();\n+\n   /* First try to find an available, already-allocated temporary that is the\n      exact size we require.  */\n   for (p = temp_slots; p; p = p->next)"}]}