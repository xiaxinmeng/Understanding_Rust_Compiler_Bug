{"sha": "0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM2NmRmZTk5MzI2MjIwZGJjYjhlMDQ2ZDdlMWU3N2U5YzRhYzEyZA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2005-02-23T19:02:29Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-02-23T19:02:29Z"}, "message": "gfortran.h (gfc_get_namespace): Add second argument to prototype.\n\nfortran/\n* gfortran.h (gfc_get_namespace): Add second argument to prototype.\n* intrinsic.c (gfc_intrinsic_init_1): Pass second argument to\ngfc_get_namespace.\n* module.c (mio_namespace_ref, load_needed): Likewise.\n* parse.c (parse_interface, parse_contained): Likewise.  Here the\ncorrect second argument matters.\n* symbol.c (gfc_get_namespace): Add parent_types argument, only copy\nparent's implicit types if this is set.\n(gfc_symbol_init_2): Pass second argument to gfc_get_namespace.\n* trans-common.c (build_common_decl): Likewise.\n\ntestsuite/\n* gfortran.dg/implicit_3.f90: New test.\n\nFrom-SVN: r95463", "tree": {"sha": "c3dd910bd906ccffa8fb44a3d9043fe315e80a35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3dd910bd906ccffa8fb44a3d9043fe315e80a35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b2117468998909065f7075541593af7ee9d8268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2117468998909065f7075541593af7ee9d8268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b2117468998909065f7075541593af7ee9d8268"}], "stats": {"total": 52, "additions": 41, "deletions": 11}, "files": [{"sha": "d099843cd123f3a8e8425dabda140eabbf45f176", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "patch": "@@ -1,3 +1,16 @@\n+2005-02-23  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* gfortran.h (gfc_get_namespace): Add second argument to prototype.\n+\t* intrinsic.c (gfc_intrinsic_init_1): Pass second argument to\n+\tgfc_get_namespace.\n+\t* module.c (mio_namespace_ref, load_needed): Likewise.\n+\t* parse.c (parse_interface, parse_contained): Likewise.  Here the\n+\tcorrect second argument matters.\n+\t* symbol.c (gfc_get_namespace): Add parent_types argument, only copy\n+\tparent's implicit types if this is set.\n+\t(gfc_symbol_init_2): Pass second argument to gfc_get_namespace.\n+\t* trans-common.c (build_common_decl): Likewise.\n+\n 2005-02-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* intrinsic.h, st.c: Update copyright."}, {"sha": "0778d65c70517f450e658f9eb92794ef95bf7965", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "patch": "@@ -1619,7 +1619,7 @@ void gfc_free_st_label (gfc_st_label *);\n void gfc_define_st_label (gfc_st_label *, gfc_sl_type, locus *);\n try gfc_reference_st_label (gfc_st_label *, gfc_sl_type);\n \n-gfc_namespace *gfc_get_namespace (gfc_namespace *);\n+gfc_namespace *gfc_get_namespace (gfc_namespace *, int);\n gfc_symtree *gfc_new_symtree (gfc_symtree **, const char *);\n gfc_symtree *gfc_find_symtree (gfc_symtree *, const char *);\n gfc_user_op *gfc_get_uop (const char *);"}, {"sha": "f9642c78ac8ab5e80028fa5961bad974e1673ee7", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "patch": "@@ -2241,7 +2241,7 @@ gfc_intrinsic_init_1 (void)\n   nargs = nfunc = nsub = nconv = 0;\n \n   /* Create a namespace to hold the resolved intrinsic symbols.  */\n-  gfc_intrinsic_namespace = gfc_get_namespace (NULL);\n+  gfc_intrinsic_namespace = gfc_get_namespace (NULL, 0);\n \n   sizing = SZ_FUNCS;\n   add_functions ();"}, {"sha": "ff3dcffebf91f91455bd7d350bb47beacf9c9eb7", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "patch": "@@ -2627,7 +2627,7 @@ mio_namespace_ref (gfc_namespace ** nsp)\n       ns = (gfc_namespace *)p->u.pointer;\n       if (ns == NULL)\n \t{\n-\t  ns = gfc_get_namespace (NULL);\n+\t  ns = gfc_get_namespace (NULL, 0);\n \t  associate_integer_pointer (p, ns);\n \t}\n       else\n@@ -2878,7 +2878,7 @@ load_needed (pointer_info * p)\n \t     the namespaces that hold the formal parameters of module\n \t     procedures.  */\n \n-\t  ns = gfc_get_namespace (NULL);\n+\t  ns = gfc_get_namespace (NULL, 0);\n \t  associate_integer_pointer (q, ns);\n \t}\n "}, {"sha": "a3f0ac19539ded0fd7a9e6fa2b96c51327a5f073", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "patch": "@@ -1405,7 +1405,7 @@ parse_interface (void)\n   current_state = COMP_NONE;\n \n loop:\n-  gfc_current_ns = gfc_get_namespace (current_interface.ns);\n+  gfc_current_ns = gfc_get_namespace (current_interface.ns, 0);\n \n   st = next_statement ();\n   switch (st)\n@@ -2170,7 +2170,7 @@ parse_contained (int module)\n \n   do\n     {\n-      gfc_current_ns = gfc_get_namespace (parent_ns);\n+      gfc_current_ns = gfc_get_namespace (parent_ns, 1);\n \n       gfc_current_ns->sibling = parent_ns->contained;\n       parent_ns->contained = gfc_current_ns;"}, {"sha": "efe121111e024017132bd87e55f38f7cef0493ce", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "patch": "@@ -1531,10 +1531,11 @@ gfc_reference_st_label (gfc_st_label * lp, gfc_sl_type type)\n    this case, that symbol has been used as a host associated variable\n    at some previous time.  */\n \n-/* Allocate a new namespace structure.  */\n+/* Allocate a new namespace structure.  Copies the implicit types from\n+   PARENT if PARENT_TYPES is set.  */\n \n gfc_namespace *\n-gfc_get_namespace (gfc_namespace * parent)\n+gfc_get_namespace (gfc_namespace * parent, int parent_types)\n {\n   gfc_namespace *ns;\n   gfc_typespec *ts;\n@@ -1556,7 +1557,7 @@ gfc_get_namespace (gfc_namespace * parent)\n       ns->set_flag[i - 'a'] = 0;\n       ts = &ns->default_type[i - 'a'];\n \n-      if (ns->parent != NULL)\n+      if (parent_types && ns->parent != NULL)\n \t{\n \t  /* Copy parent settings */\n \t  *ts = ns->parent->default_type[i - 'a'];\n@@ -2243,7 +2244,7 @@ void\n gfc_symbol_init_2 (void)\n {\n \n-  gfc_current_ns = gfc_get_namespace (NULL);\n+  gfc_current_ns = gfc_get_namespace (NULL, 0);\n }\n \n "}, {"sha": "35ea80120344b17f4512457baebb82c875736dea", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "patch": "@@ -288,7 +288,7 @@ build_common_decl (gfc_common_head *com, tree union_type, bool is_init)\n \n   /* Create a namespace to store symbols for common blocks.  */\n   if (gfc_common_ns == NULL)\n-    gfc_common_ns = gfc_get_namespace (NULL);\n+    gfc_common_ns = gfc_get_namespace (NULL, 0);\n \n   gfc_get_symbol (com->name, gfc_common_ns, &common_sym);\n   decl = common_sym->backend_decl;"}, {"sha": "e06a9790093860b6d17b7eb200a88df62c14bcdf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "patch": "@@ -1,3 +1,7 @@\n+2005-02-23  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* gfortran.dg/implicit_3.f90: New test.\n+\n 2005-02-23  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* g++.dg/lookup/anon2.C: Don't let access checks make it look like"}, {"sha": "830b8611a9f6817c3981f3f6b36fb333f82d1c06", "filename": "gcc/testsuite/gfortran.dg/implicit_3.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0366dfe99326220dbcb8e046d7e1e77e9c4ac12d/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_3.f90?ref=0366dfe99326220dbcb8e046d7e1e77e9c4ac12d", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+! Verify that INTERFACEs don't inherit the implicit types of the\n+! surrounding namespace.\n+implicit complex (i-k)\n+\n+interface\n+   function f(k,l)\n+     ! k should be default INTEGER \n+     dimension l(k)\n+   end function f\n+end interface\n+end"}]}