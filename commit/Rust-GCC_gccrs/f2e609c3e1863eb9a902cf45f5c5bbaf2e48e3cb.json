{"sha": "f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJlNjA5YzNlMTg2M2ViOWE5MDJjZjQ1ZjVjNWJiYWYyZTQ4ZTNjYg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-06-09T14:24:04Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-06-09T14:24:04Z"}, "message": "re PR tree-optimization/66299 (more optimize opportunity)\n\n\tPR tree-optimization/66299\n\t* match.pd ((CST1 << A) == CST2 -> A == ctz (CST2) - ctz (CST1)\n\t((CST1 << A) != CST2 -> A != ctz (CST2) - ctz (CST1)): New\n\tpatterns.\n\n\t* gcc.dg/pr66299-1.c: New test.\n\t* gcc.dg/pr66299-2.c: New test.\n\t* gcc.dg/pr66299-3.c: New test.\n\nFrom-SVN: r224283", "tree": {"sha": "14dc03fed2ffded69aace39c98c4727955ccd703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14dc03fed2ffded69aace39c98c4727955ccd703"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a9263f7ef63cbaa9c0a4aa98d53372721602090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9263f7ef63cbaa9c0a4aa98d53372721602090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9263f7ef63cbaa9c0a4aa98d53372721602090"}], "stats": {"total": 222, "additions": 222, "deletions": 0}, "files": [{"sha": "b1788a02759220a9022e2a14f1814b528fdd9666", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "patch": "@@ -1,3 +1,10 @@\n+2015-06-09  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/66299\n+\t* match.pd ((CST1 << A) == CST2 -> A == ctz (CST2) - ctz (CST1)\n+\t((CST1 << A) != CST2 -> A != ctz (CST2) - ctz (CST1)): New\n+\tpatterns.\n+\n 2015-06-09  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-slp.c (vect_build_slp_tree_1): Remove bailout on gaps."}, {"sha": "48358a8783d35a7cdaf578b0510f095a9ddb2121", "filename": "gcc/match.pd", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "patch": "@@ -677,6 +677,21 @@ along with GCC; see the file COPYING3.  If not see\n   (cmp (bit_and (lshift integer_onep @0) integer_onep) integer_zerop)\n   (icmp @0 { build_zero_cst (TREE_TYPE (@0)); })))\n \n+/* (CST1 << A) == CST2 -> A == ctz (CST2) - ctz (CST1)\n+   (CST1 << A) != CST2 -> A != ctz (CST2) - ctz (CST1)\n+   if CST2 != 0.  */\n+(for cmp (ne eq)\n+ (simplify\n+  (cmp (lshift INTEGER_CST@0 @1) INTEGER_CST@2)\n+  (with { int cand = wi::ctz (@2) - wi::ctz (@0); }\n+   (if (cand < 0\n+\t|| (!integer_zerop (@2)\n+\t    && wi::ne_p (wi::lshift (@0, cand), @2)))\n+    { constant_boolean_node (cmp == NE_EXPR, type); })\n+   (if (!integer_zerop (@2)\n+\t&& wi::eq_p (wi::lshift (@0, cand), @2))\n+    (cmp @1 { build_int_cst (TREE_TYPE (@1), cand); })))))\n+\n /* Simplifications of conversions.  */\n \n /* Basic strip-useless-type-conversions / strip_nops.  */"}, {"sha": "737dfad8d8cc2f382b77fa21d1926849e2698867", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "patch": "@@ -1,3 +1,10 @@\n+2015-06-09  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/66299\n+\t* gcc.dg/pr66299-1.c: New test.\n+\t* gcc.dg/pr66299-2.c: New test.\n+\t* gcc.dg/pr66299-3.c: New test.\n+\n 2015-06-09  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* g++.dg/ext/pr57735.C: Do not override -mfloat-abi directives"}, {"sha": "e75146bf3eb3bf87e31cd0bcf8a277d50c2b2e22", "filename": "gcc/testsuite/gcc.dg/pr66299-1.c", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66299-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66299-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66299-1.c?ref=f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "patch": "@@ -0,0 +1,92 @@\n+/* PR tree-optimization/66299 */\n+/* { dg-do run } */\n+/* { dg-options \"-fdump-tree-original\" } */\n+\n+void\n+test1 (int x)\n+{\n+  if ((0 << x) != 0\n+      || (1 << x) != 2\n+      || (2 << x) != 4\n+      || (3 << x) != 6\n+      || (4 << x) != 8\n+      || (5 << x) != 10\n+      || (6 << x) != 12\n+      || (7 << x) != 14\n+      || (8 << x) != 16\n+      || (9 << x) != 18\n+      || (10 << x) != 20)\n+    __builtin_abort ();\n+}\n+\n+void\n+test2 (int x)\n+{\n+  if (!((0 << x) == 0\n+\t&& (1 << x) == 4\n+\t&& (2 << x) == 8\n+\t&& (3 << x) == 12\n+\t&& (4 << x) == 16\n+\t&& (5 << x) == 20\n+\t&& (6 << x) == 24\n+\t&& (7 << x) == 28\n+\t&& (8 << x) == 32\n+\t&& (9 << x) == 36\n+\t&& (10 << x) == 40))\n+    __builtin_abort ();\n+}\n+\n+void\n+test3 (unsigned int x)\n+{\n+  if ((0U << x) != 0U\n+      || (1U << x) != 16U\n+      || (2U << x) != 32U\n+      || (3U << x) != 48U\n+      || (4U << x) != 64U\n+      || (5U << x) != 80U\n+      || (6U << x) != 96U\n+      || (7U << x) != 112U\n+      || (8U << x) != 128U\n+      || (9U << x) != 144U\n+      || (10U << x) != 160U)\n+    __builtin_abort ();\n+}\n+\n+void\n+test4 (unsigned int x)\n+{\n+  if (!((0U << x) == 0U\n+\t|| (1U << x) == 8U\n+\t|| (2U << x) == 16U\n+\t|| (3U << x) == 24U\n+\t|| (4U << x) == 32U\n+\t|| (5U << x) == 40U\n+\t|| (6U << x) == 48U\n+\t|| (7U << x) == 56U\n+\t|| (8U << x) == 64U\n+\t|| (9U << x) == 72U\n+\t|| (10U << x) == 80U))\n+    __builtin_abort ();\n+}\n+\n+void\n+test5 (int x)\n+{\n+  if ((0 << x) == 1\n+      || (0 << x) != 0\n+      || (0x8001U << x) != 0x20000U)\n+    __builtin_abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  test1 (1);\n+  test2 (2);\n+  test3 (4U);\n+  test4 (3U);\n+  test5 (17);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"<<\" \"original\" } } */"}, {"sha": "45e92184764e05a63a161ec1aad51451aece9472", "filename": "gcc/testsuite/gcc.dg/pr66299-2.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66299-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66299-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66299-2.c?ref=f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "patch": "@@ -0,0 +1,33 @@\n+/* PR tree-optimization/66299 */\n+/* { dg-do run } */\n+/* { dg-options \"-fdump-tree-optimized -O\" } */\n+\n+void\n+test1 (int x, unsigned u)\n+{\n+  if ((1U << x) != 64\n+      || (2 << x) != u\n+      || (x << x) != 384\n+      || (3 << x) == 9\n+      || (x << 14) != 98304U\n+      || (1 << x) == 14\n+      || (3 << 2) != 12)\n+    __builtin_abort ();\n+}\n+\n+void\n+test2 (int x)\n+{\n+  unsigned int t = ((unsigned int) 1U << x);\n+  if (t != 2U)\n+    __builtin_abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  test1 (6, 128U);\n+  test2 (1);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"<<\" \"optimized\" } } */"}, {"sha": "ffee04972a0eeea5b06d06941d7cadf55cfffa63", "filename": "gcc/testsuite/gcc.dg/pr66299-3.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66299-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66299-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66299-3.c?ref=f2e609c3e1863eb9a902cf45f5c5bbaf2e48e3cb", "patch": "@@ -0,0 +1,68 @@\n+/* PR tree-optimization/66299 */\n+/* { dg-do run } */\n+/* { dg-options \"-fdump-tree-original\" } */\n+\n+void __attribute__ ((noinline, noclone))\n+test1 (int x)\n+{\n+  if ((2 << x) == 1\n+      || (8 << x) == 1\n+      || (8 << x) == 2\n+      || (3072 << x) == 3\n+      || (294912 << x) == 9\n+      || (45056 << x) == 11\n+      || (2176 << x) == 17)\n+    __builtin_abort ();\n+}\n+\n+void __attribute__ ((noinline, noclone))\n+test2 (int x)\n+{\n+  if ((2 << x) != 1\n+      && (8 << x) != 1\n+      && (8 << x) != 2\n+      && (3072 << x) != 3\n+      && (294912 << x) != 9\n+      && (45056 << x) != 11\n+      && (2176 << x) != 17)\n+    ;\n+  else\n+    __builtin_abort ();\n+}\n+\n+void __attribute__ ((noinline, noclone))\n+test3 (int x)\n+{\n+  if ((3 << x) == 4\n+      || (1 << x) == 12\n+      || (40 << x) == 1024\n+      || (2 << x) == 84\n+      || (3 << x) == 16384\n+      || (10 << x) == 6144)\n+    __builtin_abort ();\n+}\n+\n+void __attribute__ ((noinline, noclone))\n+test4 (int x)\n+{\n+  if ((3 << x) != 4\n+      && (1 << x) != 12\n+      && (40 << x) != 1024\n+      && (2 << x) != 84\n+      && (3 << x) != 16384\n+      && (10 << x) != 6144)\n+    ;\n+  else\n+    __builtin_abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  test1 (0);\n+  test2 (1);\n+  test3 (1);\n+  test4 (2);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"(<<|==|!=)\" \"original\" } } */"}]}