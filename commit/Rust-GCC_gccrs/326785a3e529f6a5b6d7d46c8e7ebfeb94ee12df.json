{"sha": "326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI2Nzg1YTNlNTI5ZjZhNWI2ZDdkNDZjOGU3ZWJmZWI5NGVlMTJkZg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-04-16T14:17:15Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-04-16T14:17:15Z"}, "message": "re PR fortran/56969 (ISO_C_BINDING regression with current trunk)\n\n2013-04-16  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/56969\n        * intrinsic.c (gfc_intrinsic_func_interface): Don't set\n        module name to \"(intrinsic)\" for intrinsics from intrinsic\n        modules.\n\n2013-04-16  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/56969\n        * gfortran.dg/c_assoc_5.f90: New.\n\nFrom-SVN: r198000", "tree": {"sha": "0efe60282a26456304b0d261fc5a709269d9bac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0efe60282a26456304b0d261fc5a709269d9bac1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb7062cf8413f9cca68e2befff6ca7559988a688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb7062cf8413f9cca68e2befff6ca7559988a688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb7062cf8413f9cca68e2befff6ca7559988a688"}], "stats": {"total": 84, "additions": 83, "deletions": 1}, "files": [{"sha": "34719a1a9a68e815953cf12a05b56aa84d3636f6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df", "patch": "@@ -1,3 +1,10 @@\n+2013-04-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56969\n+\t* intrinsic.c (gfc_intrinsic_func_interface): Don't set\n+\tmodule name to \"(intrinsic)\" for intrinsics from intrinsic\n+\tmodules.\n+\n 2013-04-15  Tobias Burnus  <burnus@net-b.de>\n \n \t* intrinsic.texi (SYSTEM_CLOCK): Recommend kind=8."}, {"sha": "688332f212b790c60c8bc2cd693b1b9f20342e37", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df", "patch": "@@ -4236,7 +4236,8 @@ gfc_intrinsic_func_interface (gfc_expr *expr, int error_flag)\n \n got_specific:\n   expr->value.function.isym = specific;\n-  gfc_intrinsic_symbol (expr->symtree->n.sym);\n+  if (!expr->symtree->n.sym->module)\n+    gfc_intrinsic_symbol (expr->symtree->n.sym);\n \n   if (!error_flag)\n     gfc_pop_suppress_errors ();"}, {"sha": "deb85a7e36bd59d39d0874b0280aa8c8de024667", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df", "patch": "@@ -1,3 +1,8 @@\n+2013-04-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56969\n+\t* gfortran.dg/c_assoc_5.f90: New.\n+\n 2013-04-16  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* g++.dg/ipa/devirt-c-7.C: Require nonpic effective target."}, {"sha": "105b8f8c398dd345431212f3d58db31eb3171b2b", "filename": "gcc/testsuite/gfortran.dg/c_assoc_5.f90", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_assoc_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_assoc_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_assoc_5.f90?ref=326785a3e529f6a5b6d7d46c8e7ebfeb94ee12df", "patch": "@@ -0,0 +1,69 @@\n+! { dg-do compile }\n+!\n+! PR fortran/56969\n+!\n+! Contributed by Salvatore Filippone\n+!\n+! Was before rejected as the different c_associated weren't recognized to\n+! come from the same module.\n+!\n+module test_mod\n+  use iso_c_binding \n+\n+  type(c_ptr), save :: test_context = c_null_ptr\n+\n+  type, bind(c) :: s_Cmat\n+    type(c_ptr) :: Mat = c_null_ptr\n+  end type s_Cmat\n+\n+  \n+  interface \n+    function FtestCreate(context) &\n+         & bind(c,name=\"FtestCreate\") result(res)\n+      use iso_c_binding\n+      type(c_ptr)    :: context\n+      integer(c_int) :: res\n+    end function FtestCreate\n+  end interface\n+contains\n+  \n+  function initFtest() result(res)\n+    implicit none \n+    integer(c_int) :: res\n+    if (c_associated(test_context)) then \n+      res = 0\n+    else\n+      res = FtestCreate(test_context)\n+    end if\n+  end function initFtest\n+end module test_mod\n+\n+module base_mat_mod\n+  type base_sparse_mat\n+    integer, allocatable :: ia(:)\n+  end type base_sparse_mat\n+end module base_mat_mod\n+\n+module extd_mat_mod\n+\n+  use iso_c_binding\n+  use test_mod\n+  use base_mat_mod\n+\n+  type, extends(base_sparse_mat) :: extd_sparse_mat\n+    type(s_Cmat) :: deviceMat\n+  end type extd_sparse_mat\n+\n+end module extd_mat_mod\n+\n+subroutine extd_foo(a) \n+\n+  use extd_mat_mod\n+  implicit none \n+  class(extd_sparse_mat), intent(inout) :: a\n+\n+  if (c_associated(a%deviceMat%Mat)) then \n+    write(*,*) 'C Associated'\n+  end if\n+\n+end subroutine extd_foo"}]}