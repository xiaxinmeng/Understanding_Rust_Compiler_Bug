{"sha": "411f86ad86df8098934ed6ab530eb4c4f97d435f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDExZjg2YWQ4NmRmODA5ODkzNGVkNmFiNTMwZWI0YzRmOTdkNDM1Zg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-05-13T13:02:33Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-05-13T13:02:33Z"}, "message": "[ARM] Remove builtins for vzup, vuzp, vtrn and cleanup.\n\n\t* config/arm/arm.c (neon_itype): Remove NEON_RESULTPAIR.\n\t(arm_init_neon_builtins): Remove handling of NEON_RESULTPAIR.\n\tRemove associated type declarations and initialisations.\n\t(arm_expand_neon_builtin): Likewise.\n\t(neon_emit_pair_result_insn): Delete.\n\t* config/arm/arm_neon_builtins (vtrn, vzip, vuzp): Delete.\n\t* config/arm/neon.md (neon_vtrn<mode>): Delete.\n\t(neon_vzip<mode>): Likewise.\n\t(neon_vuzp<mode>): Likewise.\n\nFrom-SVN: r210369", "tree": {"sha": "17060b7933fa6c6e79d98e0233eab6a345291173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17060b7933fa6c6e79d98e0233eab6a345291173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/411f86ad86df8098934ed6ab530eb4c4f97d435f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411f86ad86df8098934ed6ab530eb4c4f97d435f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/411f86ad86df8098934ed6ab530eb4c4f97d435f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411f86ad86df8098934ed6ab530eb4c4f97d435f/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ce24424f482604e0a97e1fd963c7c8493cdcb9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ce24424f482604e0a97e1fd963c7c8493cdcb9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ce24424f482604e0a97e1fd963c7c8493cdcb9d"}], "stats": {"total": 155, "additions": 12, "deletions": 143}, "files": [{"sha": "cc6ceb4dce738cdca6734f8e33f1792a701ab30e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411f86ad86df8098934ed6ab530eb4c4f97d435f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411f86ad86df8098934ed6ab530eb4c4f97d435f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=411f86ad86df8098934ed6ab530eb4c4f97d435f", "patch": "@@ -1,3 +1,15 @@\n+2014-05-13  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (neon_itype): Remove NEON_RESULTPAIR.\n+\t(arm_init_neon_builtins): Remove handling of NEON_RESULTPAIR.\n+\tRemove associated type declarations and initialisations.\n+\t(arm_expand_neon_builtin): Likewise.\n+\t(neon_emit_pair_result_insn): Delete.\n+\t* config/arm/arm_neon_builtins (vtrn, vzip, vuzp): Delete.\n+\t* config/arm/neon.md (neon_vtrn<mode>): Delete.\n+\t(neon_vzip<mode>): Likewise.\n+\t(neon_vuzp<mode>): Likewise.\n+\n 2014-05-13  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/60973"}, {"sha": "d968cc02e5897470de7a46404ea172bf06a99d3a", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 107, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411f86ad86df8098934ed6ab530eb4c4f97d435f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411f86ad86df8098934ed6ab530eb4c4f97d435f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=411f86ad86df8098934ed6ab530eb4c4f97d435f", "patch": "@@ -23085,7 +23085,6 @@ typedef enum {\n   NEON_FLOAT_NARROW,\n   NEON_FIXCONV,\n   NEON_SELECT,\n-  NEON_RESULTPAIR,\n   NEON_REINTERP,\n   NEON_VTBL,\n   NEON_VTBX,\n@@ -23550,27 +23549,6 @@ arm_init_neon_builtins (void)\n   tree intCI_type_node;\n   tree intXI_type_node;\n \n-  tree V8QI_pointer_node;\n-  tree V4HI_pointer_node;\n-  tree V2SI_pointer_node;\n-  tree V2SF_pointer_node;\n-  tree V16QI_pointer_node;\n-  tree V8HI_pointer_node;\n-  tree V4SI_pointer_node;\n-  tree V4SF_pointer_node;\n-  tree V2DI_pointer_node;\n-\n-  tree void_ftype_pv8qi_v8qi_v8qi;\n-  tree void_ftype_pv4hi_v4hi_v4hi;\n-  tree void_ftype_pv2si_v2si_v2si;\n-  tree void_ftype_pv2sf_v2sf_v2sf;\n-  tree void_ftype_pdi_di_di;\n-  tree void_ftype_pv16qi_v16qi_v16qi;\n-  tree void_ftype_pv8hi_v8hi_v8hi;\n-  tree void_ftype_pv4si_v4si_v4si;\n-  tree void_ftype_pv4sf_v4sf_v4sf;\n-  tree void_ftype_pv2di_v2di_v2di;\n-\n   tree reinterp_ftype_dreg[NUM_DREG_TYPES][NUM_DREG_TYPES];\n   tree reinterp_ftype_qreg[NUM_QREG_TYPES][NUM_QREG_TYPES];\n   tree dreg_types[NUM_DREG_TYPES], qreg_types[NUM_QREG_TYPES];\n@@ -23696,49 +23674,6 @@ arm_init_neon_builtins (void)\n   (*lang_hooks.types.register_builtin_type) (intXI_type_node,\n \t\t\t\t\t     \"__builtin_neon_xi\");\n \n-  /* Pointers to vector types.  */\n-  V8QI_pointer_node = build_pointer_type (V8QI_type_node);\n-  V4HI_pointer_node = build_pointer_type (V4HI_type_node);\n-  V2SI_pointer_node = build_pointer_type (V2SI_type_node);\n-  V2SF_pointer_node = build_pointer_type (V2SF_type_node);\n-  V16QI_pointer_node = build_pointer_type (V16QI_type_node);\n-  V8HI_pointer_node = build_pointer_type (V8HI_type_node);\n-  V4SI_pointer_node = build_pointer_type (V4SI_type_node);\n-  V4SF_pointer_node = build_pointer_type (V4SF_type_node);\n-  V2DI_pointer_node = build_pointer_type (V2DI_type_node);\n-\n-  /* Operations which return results as pairs.  */\n-  void_ftype_pv8qi_v8qi_v8qi =\n-    build_function_type_list (void_type_node, V8QI_pointer_node, V8QI_type_node,\n-  \t\t\t      V8QI_type_node, NULL);\n-  void_ftype_pv4hi_v4hi_v4hi =\n-    build_function_type_list (void_type_node, V4HI_pointer_node, V4HI_type_node,\n-  \t\t\t      V4HI_type_node, NULL);\n-  void_ftype_pv2si_v2si_v2si =\n-    build_function_type_list (void_type_node, V2SI_pointer_node, V2SI_type_node,\n-  \t\t\t      V2SI_type_node, NULL);\n-  void_ftype_pv2sf_v2sf_v2sf =\n-    build_function_type_list (void_type_node, V2SF_pointer_node, V2SF_type_node,\n-  \t\t\t      V2SF_type_node, NULL);\n-  void_ftype_pdi_di_di =\n-    build_function_type_list (void_type_node, intDI_pointer_node,\n-\t\t\t      neon_intDI_type_node, neon_intDI_type_node, NULL);\n-  void_ftype_pv16qi_v16qi_v16qi =\n-    build_function_type_list (void_type_node, V16QI_pointer_node,\n-\t\t\t      V16QI_type_node, V16QI_type_node, NULL);\n-  void_ftype_pv8hi_v8hi_v8hi =\n-    build_function_type_list (void_type_node, V8HI_pointer_node, V8HI_type_node,\n-  \t\t\t      V8HI_type_node, NULL);\n-  void_ftype_pv4si_v4si_v4si =\n-    build_function_type_list (void_type_node, V4SI_pointer_node, V4SI_type_node,\n-  \t\t\t      V4SI_type_node, NULL);\n-  void_ftype_pv4sf_v4sf_v4sf =\n-    build_function_type_list (void_type_node, V4SF_pointer_node, V4SF_type_node,\n-  \t\t\t      V4SF_type_node, NULL);\n-  void_ftype_pv2di_v2di_v2di =\n-    build_function_type_list (void_type_node, V2DI_pointer_node, V2DI_type_node,\n-\t\t\t      V2DI_type_node, NULL);\n-\n   if (TARGET_CRYPTO && TARGET_HARD_FLOAT)\n   {\n     tree V4USI_type_node =\n@@ -24028,25 +23963,6 @@ arm_init_neon_builtins (void)\n \t  }\n \t  break;\n \n-\tcase NEON_RESULTPAIR:\n-\t  {\n-\t    switch (insn_data[d->code].operand[1].mode)\n-\t      {\n-\t      case V8QImode: ftype = void_ftype_pv8qi_v8qi_v8qi; break;\n-\t      case V4HImode: ftype = void_ftype_pv4hi_v4hi_v4hi; break;\n-\t      case V2SImode: ftype = void_ftype_pv2si_v2si_v2si; break;\n-\t      case V2SFmode: ftype = void_ftype_pv2sf_v2sf_v2sf; break;\n-\t      case DImode: ftype = void_ftype_pdi_di_di; break;\n-\t      case V16QImode: ftype = void_ftype_pv16qi_v16qi_v16qi; break;\n-\t      case V8HImode: ftype = void_ftype_pv8hi_v8hi_v8hi; break;\n-\t      case V4SImode: ftype = void_ftype_pv4si_v4si_v4si; break;\n-\t      case V4SFmode: ftype = void_ftype_pv4sf_v4sf_v4sf; break;\n-\t      case V2DImode: ftype = void_ftype_pv2di_v2di_v2di; break;\n-\t      default: gcc_unreachable ();\n-\t      }\n-\t  }\n-\t  break;\n-\n \tcase NEON_REINTERP:\n \t  {\n \t    /* We iterate over NUM_DREG_TYPES doubleword types,\n@@ -25289,11 +25205,6 @@ arm_expand_neon_builtin (int fcode, tree exp, rtx target)\n       return arm_expand_neon_args (target, icode, 1, type_mode, exp, fcode,\n         NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG, NEON_ARG_STOP);\n \n-    case NEON_RESULTPAIR:\n-      return arm_expand_neon_args (target, icode, 0, type_mode, exp, fcode,\n-        NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG,\n-        NEON_ARG_STOP);\n-\n     case NEON_LANEMUL:\n     case NEON_LANEMULL:\n     case NEON_LANEMULH:\n@@ -25355,24 +25266,6 @@ neon_reinterpret (rtx dest, rtx src)\n   emit_move_insn (dest, gen_lowpart (GET_MODE (dest), src));\n }\n \n-/* Emit code to place a Neon pair result in memory locations (with equal\n-   registers).  */\n-void\n-neon_emit_pair_result_insn (enum machine_mode mode,\n-\t\t\t    rtx (*intfn) (rtx, rtx, rtx, rtx), rtx destaddr,\n-                            rtx op1, rtx op2)\n-{\n-  rtx mem = gen_rtx_MEM (mode, destaddr);\n-  rtx tmp1 = gen_reg_rtx (mode);\n-  rtx tmp2 = gen_reg_rtx (mode);\n-\n-  emit_insn (intfn (tmp1, op1, op2, tmp2));\n-\n-  emit_move_insn (mem, tmp1);\n-  mem = adjust_address (mem, mode, GET_MODE_SIZE (mode));\n-  emit_move_insn (mem, tmp2);\n-}\n-\n /* Set up OPERANDS for a register copy from SRC to DEST, taking care\n    not to early-clobber SRC registers in the process.\n "}, {"sha": "3f64479c2195e9d23f2516822fd6b57e406b6312", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411f86ad86df8098934ed6ab530eb4c4f97d435f/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411f86ad86df8098934ed6ab530eb4c4f97d435f/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=411f86ad86df8098934ed6ab530eb4c4f97d435f", "patch": "@@ -148,9 +148,6 @@ VAR1 (VTBX, vtbx1, v8qi),\n VAR1 (VTBX, vtbx2, v8qi),\n VAR1 (VTBX, vtbx3, v8qi),\n VAR1 (VTBX, vtbx4, v8qi),\n-VAR8 (RESULTPAIR, vtrn, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n-VAR8 (RESULTPAIR, vzip, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n-VAR8 (RESULTPAIR, vuzp, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n VAR5 (REINTERP, vreinterpretv8qi, v8qi, v4hi, v2si, v2sf, di),\n VAR5 (REINTERP, vreinterpretv4hi, v8qi, v4hi, v2si, v2sf, di),\n VAR5 (REINTERP, vreinterpretv2si, v8qi, v4hi, v2si, v2sf, di),"}, {"sha": "22180e5820d06d96d4986e7d4ff450e5de1d91e6", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411f86ad86df8098934ed6ab530eb4c4f97d435f/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411f86ad86df8098934ed6ab530eb4c4f97d435f/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=411f86ad86df8098934ed6ab530eb4c4f97d435f", "patch": "@@ -4140,17 +4140,6 @@\n   [(set_attr \"type\" \"neon_permute<q>\")]\n )\n \n-(define_expand \"neon_vtrn<mode>\"\n-  [(match_operand:SI 0 \"s_register_operand\" \"r\")\n-   (match_operand:VDQW 1 \"s_register_operand\" \"w\")\n-   (match_operand:VDQW 2 \"s_register_operand\" \"w\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_emit_pair_result_insn (<MODE>mode, gen_neon_vtrn<mode>_internal,\n-\t\t\t      operands[0], operands[1], operands[2]);\n-  DONE;\n-})\n-\n (define_expand \"neon_vzip<mode>_internal\"\n   [(parallel\n     [(set (match_operand:VDQW 0 \"s_register_operand\" \"\")\n@@ -4177,17 +4166,6 @@\n   [(set_attr \"type\" \"neon_zip<q>\")]\n )\n \n-(define_expand \"neon_vzip<mode>\"\n-  [(match_operand:SI 0 \"s_register_operand\" \"r\")\n-   (match_operand:VDQW 1 \"s_register_operand\" \"w\")\n-   (match_operand:VDQW 2 \"s_register_operand\" \"w\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_emit_pair_result_insn (<MODE>mode, gen_neon_vzip<mode>_internal,\n-\t\t\t      operands[0], operands[1], operands[2]);\n-  DONE;\n-})\n-\n (define_expand \"neon_vuzp<mode>_internal\"\n   [(parallel\n     [(set (match_operand:VDQW 0 \"s_register_operand\" \"\")\n@@ -4214,17 +4192,6 @@\n   [(set_attr \"type\" \"neon_zip<q>\")]\n )\n \n-(define_expand \"neon_vuzp<mode>\"\n-  [(match_operand:SI 0 \"s_register_operand\" \"r\")\n-   (match_operand:VDQW 1 \"s_register_operand\" \"w\")\n-   (match_operand:VDQW 2 \"s_register_operand\" \"w\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_emit_pair_result_insn (<MODE>mode, gen_neon_vuzp<mode>_internal,\n-\t\t\t      operands[0], operands[1], operands[2]);\n-  DONE;\n-})\n-\n (define_expand \"neon_vreinterpretv8qi<mode>\"\n   [(match_operand:V8QI 0 \"s_register_operand\" \"\")\n    (match_operand:VDX 1 \"s_register_operand\" \"\")]"}]}