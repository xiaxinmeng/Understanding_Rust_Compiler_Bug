{"sha": "2ebfd23067727c451e9cfc42e7c2fffb5ed7f006", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmViZmQyMzA2NzcyN2M0NTFlOWNmYzQyZTdjMmZmZmI1ZWQ3ZjAwNg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1997-08-23T21:41:33Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-08-23T21:41:33Z"}, "message": "Fix typos in m68k configuration files.\n\n\t* m68k/next.h (GO_IF_INDEXABLE_BASE): Fix typo in undef.\n\t* m68k/m68kemb.h (LIB_SPEC): Add missing comment end before it.\n\nFrom-SVN: r14902", "tree": {"sha": "fda597f38140fe730493a81446bdb04b1dc4a0bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fda597f38140fe730493a81446bdb04b1dc4a0bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006/comments", "author": null, "committer": null, "parents": [{"sha": "251ffdee0e7b6aaa030c3797bcd3becfab0f379a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251ffdee0e7b6aaa030c3797bcd3becfab0f379a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251ffdee0e7b6aaa030c3797bcd3becfab0f379a"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "4ec6a68100e348c95f644fad1589deb33ad43a6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ebfd23067727c451e9cfc42e7c2fffb5ed7f006", "patch": "@@ -1,3 +1,8 @@\n+Sat Aug 23 14:36:27 1997  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* m68k/next.h (GO_IF_INDEXABLE_BASE): Fix typo in undef.\n+\t* m68k/m68kemb.h (LIB_SPEC): Add missing comment end before it.\n+\n Sat Aug 23 00:18:22 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* pa.c (pa_reorg): Always put begin_brtab and end_brtab insns"}, {"sha": "4c02e1be6e68ae35c540b6e7d6d9427e99c0a560", "filename": "gcc/config/m68k/m68kemb.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006/gcc%2Fconfig%2Fm68k%2Fm68kemb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006/gcc%2Fconfig%2Fm68k%2Fm68kemb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kemb.h?ref=2ebfd23067727c451e9cfc42e7c2fffb5ed7f006", "patch": "@@ -43,7 +43,7 @@\n   -Amachine(mc68000)\"\n \n /* Override the default LIB_SPEC from gcc.c.  We don't currently support\n-   profiling, or libg.a\n+   profiling, or libg.a.  */\n \n #define LIB_SPEC \"-lc\"\n "}, {"sha": "8391ab50cb1700ad0172c36a4918f7beefac6b82", "filename": "gcc/config/m68k/next.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006/gcc%2Fconfig%2Fm68k%2Fnext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ebfd23067727c451e9cfc42e7c2fffb5ed7f006/gcc%2Fconfig%2Fm68k%2Fnext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnext.h?ref=2ebfd23067727c451e9cfc42e7c2fffb5ed7f006", "patch": "@@ -172,7 +172,7 @@ Boston, MA 02111-1307, USA.  */\n    Previously, references to labels generated pc-relative addressing modes\n    while references to symbol names generated absolute addressing modes.  */\n \n-#undef\tGO_IF_INDEXABLE_BASE(X, ADDR)\n+#undef\tGO_IF_INDEXABLE_BASE\n #define GO_IF_INDEXABLE_BASE(X, ADDR)\t\\\n { if (LEGITIMATE_BASE_REG_P (X)) goto ADDR; }\n "}]}