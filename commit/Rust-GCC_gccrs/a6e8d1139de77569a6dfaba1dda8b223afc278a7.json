{"sha": "a6e8d1139de77569a6dfaba1dda8b223afc278a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZlOGQxMTM5ZGU3NzU2OWE2ZGZhYmExZGRhOGIyMjNhZmMyNzhhNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-30T15:28:31Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-30T15:28:31Z"}, "message": "h8300.c (output_logical_op): Use extu.w if we are clearing the most significant byte.\n\n\t* config/h8300/h8300.c (output_logical_op): Use extu.w if we\n\tare clearing the most significant byte.\n\t(compute_logical_op_length): Update to reflect the change in\n\toutput_logical_op.\n\t(compute_logical_op_cc): Likewise.\n\nFrom-SVN: r60632", "tree": {"sha": "9cd4741ccc8e1f36dd7317a63b7f1d833ab7ea60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cd4741ccc8e1f36dd7317a63b7f1d833ab7ea60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6e8d1139de77569a6dfaba1dda8b223afc278a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6e8d1139de77569a6dfaba1dda8b223afc278a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6e8d1139de77569a6dfaba1dda8b223afc278a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6e8d1139de77569a6dfaba1dda8b223afc278a7/comments", "author": null, "committer": null, "parents": [{"sha": "37bc6ca2649bfa025cede18d9b4a3b3fbc6a4c35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37bc6ca2649bfa025cede18d9b4a3b3fbc6a4c35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37bc6ca2649bfa025cede18d9b4a3b3fbc6a4c35"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "022ef307130a3551b77a8a134215b46642acd4b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6e8d1139de77569a6dfaba1dda8b223afc278a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6e8d1139de77569a6dfaba1dda8b223afc278a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6e8d1139de77569a6dfaba1dda8b223afc278a7", "patch": "@@ -1,3 +1,11 @@\n+2002-12-30  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (output_logical_op): Use extu.w if we\n+\tare clearing the most significant byte.\n+\t(compute_logical_op_length): Update to reflect the change in\n+\toutput_logical_op.\n+\t(compute_logical_op_cc): Likewise.\n+\n 2002-12-29  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md: Give internal names to anonymous"}, {"sha": "e77edaf82a22e8aa70757dd5b5e7c87ac87f826d", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6e8d1139de77569a6dfaba1dda8b223afc278a7/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6e8d1139de77569a6dfaba1dda8b223afc278a7/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=a6e8d1139de77569a6dfaba1dda8b223afc278a7", "patch": "@@ -2151,7 +2151,9 @@ output_logical_op (mode, operands)\n \t  && ((det & 0x0000ffff) != 0)\n \t  && ((det & 0xffff0000) != 0)\n \t  && (code == IOR || det != 0xffffff00)\n-\t  && (code == IOR || det != 0xffff00ff))\n+\t  && (code == IOR || det != 0xffff00ff)\n+\t  && (code != AND || det != 0xff00ff00)\n+\t  && (code != AND || det != 0xff0000ff))\n \t{\n \t  sprintf (insn_buf, \"%s.l\\t%%S2,%%S0\", opname);\n \t  output_asm_insn (insn_buf, operands);\n@@ -2195,6 +2197,13 @@ output_logical_op (mode, operands)\n \t    output_asm_insn ((code == AND)\n \t\t\t     ? \"sub.w\\t%e0,%e0\" : \"not.w\\t%e0\",\n \t\t\t     operands);\n+\t  else if ((TARGET_H8300H || TARGET_H8300S)\n+\t\t   && code == AND\n+\t\t   && (det & 0xffff0000) == 0xff000000)\n+\t    {\n+\t      sprintf (insn_buf, \"extu.w\\t%%e0\", opname);\n+\t      output_asm_insn (insn_buf, operands);\n+\t    }\n \t  else if (TARGET_H8300H || TARGET_H8300S)\n \t    {\n \t      if ((det & 0xffff0000) != 0)\n@@ -2275,7 +2284,9 @@ compute_logical_op_length (mode, operands)\n \t  && ((det & 0x0000ffff) != 0)\n \t  && ((det & 0xffff0000) != 0)\n \t  && (code == IOR || det != 0xffffff00)\n-\t  && (code == IOR || det != 0xffff00ff))\n+\t  && (code == IOR || det != 0xffff00ff)\n+\t  && (code != AND || det != 0xff00ff00)\n+\t  && (code != AND || det != 0xff0000ff))\n \t{\n \t  if (REG_P (operands[2]))\n \t    length += 4;\n@@ -2315,6 +2326,12 @@ compute_logical_op_length (mode, operands)\n \t    {\n \t      length += 2;\n \t    }\n+\t  else if ((TARGET_H8300H || TARGET_H8300S)\n+\t\t   && code == AND\n+\t\t   && (det & 0xffff0000) == 0xff000000)\n+\t    {\n+\t      length += 2;\n+\t    }\n \t  else if (TARGET_H8300H || TARGET_H8300S)\n \t    {\n \t      if ((det & 0xffff0000) != 0)\n@@ -2374,7 +2391,9 @@ compute_logical_op_cc (mode, operands)\n \t  && ((det & 0x0000ffff) != 0)\n \t  && ((det & 0xffff0000) != 0)\n \t  && (code == IOR || det != 0xffffff00)\n-\t  && (code == IOR || det != 0xffff00ff))\n+\t  && (code == IOR || det != 0xffff00ff)\n+\t  && (code != AND || det != 0xff00ff00)\n+\t  && (code != AND || det != 0xff0000ff))\n \t{\n \t  cc = CC_SET_ZNV;\n \t}"}]}