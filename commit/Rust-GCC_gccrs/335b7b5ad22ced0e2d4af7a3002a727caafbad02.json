{"sha": "335b7b5ad22ced0e2d4af7a3002a727caafbad02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM1YjdiNWFkMjJjZWQwZTJkNGFmN2EzMDAyYTcyN2NhYWZiYWQwMg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-03-07T20:27:11Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-03-07T20:27:11Z"}, "message": "rs6000: -mreadonly-in-sdata (PR82411)\n\nThis adds a new option -mreadonly-in-sdata (on by default) that\ncontrols whether readonly data can be put in sdata.  (For EABI this\ndoes nothing, readonly data is put in sdata2 as usual).\n\n\n\tPR target/82411\n\t* config/rs6000/rs6000.c (rs6000_elf_in_small_data_p): Don't put\n\treadonly data in sdata, if that is disabled.\n\t* config/rs6000/sysv4.opt (mreadonly-in-sdata): New option.\n\t* doc/invoke.texi (RS/6000 and PowerPC Options): Document\n\t-mreadonly-in-sdata option.\n\ngcc/testsuite/\n\tPR target/82411\n\t* gcc.target/powerpc/ppc-sdata-2.c: Skip if -mno-readonly-in-sdata.\n\nFrom-SVN: r258340", "tree": {"sha": "a4bd8a280830a3ab698a9a19cb0729d8192b263c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4bd8a280830a3ab698a9a19cb0729d8192b263c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/335b7b5ad22ced0e2d4af7a3002a727caafbad02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/335b7b5ad22ced0e2d4af7a3002a727caafbad02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/335b7b5ad22ced0e2d4af7a3002a727caafbad02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/335b7b5ad22ced0e2d4af7a3002a727caafbad02/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a76acaedcee2e75b16adfa0112632873c1fe2e71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76acaedcee2e75b16adfa0112632873c1fe2e71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a76acaedcee2e75b16adfa0112632873c1fe2e71"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "666985ef00234dde199a92349c2b122c1acda9bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=335b7b5ad22ced0e2d4af7a3002a727caafbad02", "patch": "@@ -1,3 +1,12 @@\n+2018-03-07  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/82411\n+\t* config/rs6000/rs6000.c (rs6000_elf_in_small_data_p): Don't put\n+\treadonly data in sdata, if that is disabled.\n+\t* config/rs6000/sysv4.opt (mreadonly-in-sdata): New option.\n+\t* doc/invoke.texi (RS/6000 and PowerPC Options): Document\n+\t-mreadonly-in-sdata option.\n+\n 2018-03-07  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/84468"}, {"sha": "63f62d47e8b04addb282fe243039a648b48c0209", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=335b7b5ad22ced0e2d4af7a3002a727caafbad02", "patch": "@@ -33259,6 +33259,11 @@ rs6000_elf_in_small_data_p (const_tree decl)\n     }\n   else\n     {\n+      /* If we are told not to put readonly data in sdata, then don't.  */\n+      if (TREE_READONLY (decl) && rs6000_sdata != SDATA_EABI\n+\t  && !rs6000_readonly_in_sdata)\n+\treturn false;\n+\n       HOST_WIDE_INT size = int_size_in_bytes (TREE_TYPE (decl));\n \n       if (size > 0"}, {"sha": "fb03c0ac80ae861b74009122cc0a77268a1d6029", "filename": "gcc/config/rs6000/sysv4.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Fconfig%2Frs6000%2Fsysv4.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Fconfig%2Frs6000%2Fsysv4.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.opt?ref=335b7b5ad22ced0e2d4af7a3002a727caafbad02", "patch": "@@ -27,6 +27,10 @@ msdata=\n Target RejectNegative Joined Var(rs6000_sdata_name)\n Select method for sdata handling.\n \n+mreadonly-in-sdata\n+Target Report Var(rs6000_readonly_in_sdata) Init(1) Save\n+Allow readonly data in sdata.\n+\n mtls-size=\n Target RejectNegative Joined Var(rs6000_tls_size) Enum(rs6000_tls_size)\n Specify bit size of immediate TLS offsets."}, {"sha": "2492148b30f2d5c5c7ab4e2131e71506546910ad", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=335b7b5ad22ced0e2d4af7a3002a727caafbad02", "patch": "@@ -1087,7 +1087,7 @@ See RS/6000 and PowerPC Options.\n -mdlmzb  -mno-dlmzb @gol\n -mprototype  -mno-prototype @gol\n -msim  -mmvme  -mads  -myellowknife  -memb  -msdata @gol\n--msdata=@var{opt}  -mvxworks  -G @var{num} @gol\n+-msdata=@var{opt}  -mreadonly-in-sdata  -mvxworks  -G @var{num} @gol\n -mrecip  -mrecip=@var{opt}  -mno-recip  -mrecip-precision @gol\n -mno-recip-precision @gol\n -mveclibabi=@var{type}  -mfriz  -mno-friz @gol\n@@ -24114,6 +24114,13 @@ On embedded PowerPC systems, put all initialized global and static data\n in the @code{.data} section, and all uninitialized data in the\n @code{.bss} section.\n \n+@item -mreadonly-in-sdata\n+@itemx -mreadonly-in-sdata\n+@opindex mreadonly-in-sdata\n+@opindex mno-readonly-in-sdata\n+Put read-only objects in the @code{.sdata} section as well.  This is the\n+default.\n+\n @item -mblock-move-inline-limit=@var{num}\n @opindex mblock-move-inline-limit\n Inline all block moves (such as calls to @code{memcpy} or structure"}, {"sha": "080164d421a4ca83ed8ce32882e5b8c1bba55a0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=335b7b5ad22ced0e2d4af7a3002a727caafbad02", "patch": "@@ -1,3 +1,8 @@\n+2018-03-07  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/82411\n+\t* gcc.target/powerpc/ppc-sdata-2.c: Skip if -mno-readonly-in-sdata.\n+\n 2018-03-07  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/84468"}, {"sha": "ee77456ca4ff95271ea97d760c7b26930d33aa15", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-sdata-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335b7b5ad22ced0e2d4af7a3002a727caafbad02/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-2.c?ref=335b7b5ad22ced0e2d4af7a3002a727caafbad02", "patch": "@@ -5,6 +5,7 @@\n /* { dg-final { scan-assembler-not \"\\\\.section\\[ \\t\\]\\\\.sdata2,\" } } */\n /* { dg-final { scan-assembler \"sdat@sdarel\\\\(13\\\\)\" } } */\n /* { dg-final { scan-assembler \"sdat2@sdarel\\\\(13\\\\)\" } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mno-readonly-in-sdata\" } { \"\" } } */\n \n \n int sdat = 2;"}]}