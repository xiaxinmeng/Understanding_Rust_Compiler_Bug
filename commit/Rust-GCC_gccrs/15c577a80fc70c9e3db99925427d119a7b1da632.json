{"sha": "15c577a80fc70c9e3db99925427d119a7b1da632", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVjNTc3YTgwZmM3MGM5ZTNkYjk5OTI1NDI3ZDExOWE3YjFkYTYzMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-16T13:56:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-16T13:56:11Z"}, "message": "(left_shift_overflows): Remove; unused.\n\nFrom-SVN: r11021", "tree": {"sha": "c208cbcee523f3096838174f8f27b3e1a77e0177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c208cbcee523f3096838174f8f27b3e1a77e0177"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15c577a80fc70c9e3db99925427d119a7b1da632", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c577a80fc70c9e3db99925427d119a7b1da632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c577a80fc70c9e3db99925427d119a7b1da632", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c577a80fc70c9e3db99925427d119a7b1da632/comments", "author": null, "committer": null, "parents": [{"sha": "3298a1b11fc88045c41f4bcfa5d1e2205cceeb69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3298a1b11fc88045c41f4bcfa5d1e2205cceeb69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3298a1b11fc88045c41f4bcfa5d1e2205cceeb69"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "e4cf9e6487571c820f63824a0ae6a3e12b3f965a", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c577a80fc70c9e3db99925427d119a7b1da632/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c577a80fc70c9e3db99925427d119a7b1da632/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=15c577a80fc70c9e3db99925427d119a7b1da632", "patch": "@@ -84,9 +84,6 @@ static tree strip_compound_expr PROTO((tree, tree));\n #define BRANCH_COST 1\n #endif\n \n-/* Yield nonzero if a signed left shift of A by B bits overflows.  */\n-#define left_shift_overflows(a, b)  ((a)  !=  ((a) << (b)) >> (b))\n-\n /* Suppose A1 + B1 = SUM1, using 2's complement arithmetic ignoring overflow.\n    Suppose A, B and SUM have the same respective signs as A1, B1, and SUM1.\n    Then this yields nonzero if overflow occurred during the addition."}]}