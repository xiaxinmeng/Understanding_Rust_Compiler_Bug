{"sha": "db1077d3073cd525c15c5b957258685bfa224c18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIxMDc3ZDMwNzNjZDUyNWMxNWM1Yjk1NzI1ODY4NWJmYTIyNGMxOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-03-12T09:21:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-03-12T09:21:47Z"}, "message": "re PR rtl-optimization/9888 (-mcpu=k6 -Os produces out of range loop instructions)\n\n\tPR optimization/9888\n\t* config/i386/i386.md (jcc_1): Fix range.\n\t(jcc_2): Likewise.\n\t(jump): LIkewise.\n\t(doloop_end_internal): Likewise.\n\nFrom-SVN: r64230", "tree": {"sha": "2d38520350aaf573f99faa7497e2f8c3d604d343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d38520350aaf573f99faa7497e2f8c3d604d343"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db1077d3073cd525c15c5b957258685bfa224c18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db1077d3073cd525c15c5b957258685bfa224c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db1077d3073cd525c15c5b957258685bfa224c18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db1077d3073cd525c15c5b957258685bfa224c18/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ca23bff71cdeddab002b28c86d09364ea435850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca23bff71cdeddab002b28c86d09364ea435850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ca23bff71cdeddab002b28c86d09364ea435850"}], "stats": {"total": 108, "additions": 100, "deletions": 8}, "files": [{"sha": "f0f4738ad339efedcdb6101206cc9cf0f61a103f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db1077d3073cd525c15c5b957258685bfa224c18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db1077d3073cd525c15c5b957258685bfa224c18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db1077d3073cd525c15c5b957258685bfa224c18", "patch": "@@ -1,3 +1,11 @@\n+2003-03-12  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR optimization/9888\n+\t* config/i386/i386.md (jcc_1): Fix range.\n+\t(jcc_2): Likewise.\n+\t(jump): LIkewise.\n+\t(doloop_end_internal): Likewise.\n+\n 2003-03-12  Danny Smith  <dannysmith@users.sourceforge.net>\n  \n \t* config/i386/winnt.c (DLL_IMPORT_PREFIX): New define."}, {"sha": "01fb3db2d811771f5983fe9f3f29dda2fa0289f2", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db1077d3073cd525c15c5b957258685bfa224c18/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db1077d3073cd525c15c5b957258685bfa224c18/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=db1077d3073cd525c15c5b957258685bfa224c18", "patch": "@@ -13457,9 +13457,9 @@\n    (set_attr \"modrm\" \"0\")\n    (set (attr \"length\")\n \t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int -128))\n+\t\t\t\t  (const_int -126))\n \t\t\t      (lt (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int 124)))\n+\t\t\t\t  (const_int 128)))\n \t     (const_int 2)\n \t     (const_int 6)))])\n \n@@ -13475,9 +13475,9 @@\n    (set_attr \"modrm\" \"0\")\n    (set (attr \"length\")\n \t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int -128))\n+\t\t\t\t  (const_int -126))\n \t\t\t      (lt (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int 124)))\n+\t\t\t\t  (const_int 128)))\n \t     (const_int 2)\n \t     (const_int 6)))])\n \n@@ -13742,9 +13742,9 @@\n   [(set_attr \"type\" \"ibr\")\n    (set (attr \"length\")\n \t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int -128))\n+\t\t\t\t  (const_int -126))\n \t\t\t      (lt (minus (match_dup 0) (pc))\n-\t\t\t\t  (const_int 124)))\n+\t\t\t\t  (const_int 128)))\n \t     (const_int 2)\n \t     (const_int 5)))\n    (set_attr \"modrm\" \"0\")])\n@@ -13868,9 +13868,9 @@\n    (set (attr \"length\")\n \t(if_then_else (and (eq_attr \"alternative\" \"0\")\n \t\t\t   (and (ge (minus (match_dup 0) (pc))\n-\t\t\t            (const_int -128))\n+\t\t\t            (const_int -126))\n \t\t\t        (lt (minus (match_dup 0) (pc))\n-\t\t\t            (const_int 124))))\n+\t\t\t            (const_int 128))))\n \t\t      (const_int 2)\n \t\t      (const_int 16)))\n    ;; We don't know the type before shorten branches.  Optimistically expect"}, {"sha": "3e0633c3ef19c771003f60fae0b61aa9c8523404", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db1077d3073cd525c15c5b957258685bfa224c18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db1077d3073cd525c15c5b957258685bfa224c18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=db1077d3073cd525c15c5b957258685bfa224c18", "patch": "@@ -1,3 +1,7 @@\n+2003-03-12  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/i386-loop-2.c: New test.\n+\n 2003-03-11  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9474"}, {"sha": "3a3e69e98b4f64a3f195eefca8d6785da4baf9a3", "filename": "gcc/testsuite/gcc.dg/i386-loop-2.c", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db1077d3073cd525c15c5b957258685bfa224c18/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-loop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db1077d3073cd525c15c5b957258685bfa224c18/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-loop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-loop-2.c?ref=db1077d3073cd525c15c5b957258685bfa224c18", "patch": "@@ -0,0 +1,80 @@\n+/* PR optimization/9888 */\n+/* Originator: Jim Bray <jb@as220.org> */\n+/* { dg-do run { target i?86-*-* } } */\n+/* { dg-options \"-mtune=k6 -Os\" } */\n+\n+enum reload_type\n+{\n+  RELOAD_FOR_INPUT, RELOAD_FOR_OUTPUT, RELOAD_FOR_INSN,\n+  RELOAD_FOR_INPUT_ADDRESS, RELOAD_FOR_INPADDR_ADDRESS,\n+  RELOAD_FOR_OUTPUT_ADDRESS, RELOAD_FOR_OUTADDR_ADDRESS,\n+  RELOAD_FOR_OPERAND_ADDRESS, RELOAD_FOR_OPADDR_ADDR,\n+  RELOAD_OTHER, RELOAD_FOR_OTHER_ADDRESS\n+};\n+\n+#define FOO_SIZE 3\n+\n+/* My results, varying with FOO_SIZE:\n+   30: asm error \"value of ..fff77 too large:\n+   3 to 29: ....ff7d...\n+   1 to 2: no error.  */\n+\n+struct reload\n+{\n+   int foo[FOO_SIZE];\n+   int opnum; \n+   enum reload_type when_needed;\n+   unsigned int optional:1; \n+   unsigned int secondary_p:1;\n+};\n+\n+#define N_RELOADS  2\n+\n+struct reload rld[N_RELOADS];\n+int n_reloads = N_RELOADS;\n+\n+int main(void)\n+{\n+  int i;\n+\n+  enum reload_type operand_type[1];\n+\n+  enum reload_type address_type[1];\n+\n+  int operand_reloadnum[1];\n+  int goal_alternative_matches[1];\n+\n+  for (i = 0; i < n_reloads; i++)\n+    {\n+      if (rld[i].secondary_p\n+          && rld[i].when_needed == operand_type[rld[i].opnum])\n+        rld[i].when_needed = address_type[rld[i].opnum];\n+\n+      if ((rld[i].when_needed == RELOAD_FOR_INPUT_ADDRESS\n+           || rld[i].when_needed == RELOAD_FOR_OUTPUT_ADDRESS\n+           || rld[i].when_needed == RELOAD_FOR_INPADDR_ADDRESS\n+           || rld[i].when_needed == RELOAD_FOR_OUTADDR_ADDRESS)\n+          && (operand_reloadnum[rld[i].opnum] < 0\n+              || rld[operand_reloadnum[rld[i].opnum]].optional))\n+        {\n+\n+          if (rld[i].when_needed == RELOAD_FOR_INPADDR_ADDRESS\n+              || rld[i].when_needed == RELOAD_FOR_OUTADDR_ADDRESS)\n+            rld[i].when_needed = RELOAD_FOR_OPADDR_ADDR;\n+          else\n+            rld[i].when_needed = RELOAD_FOR_OPERAND_ADDRESS;\n+        }\n+\n+      if ((rld[i].when_needed == RELOAD_FOR_INPUT_ADDRESS\n+           || rld[i].when_needed == RELOAD_FOR_INPADDR_ADDRESS)\n+          && operand_reloadnum[rld[i].opnum] >= 0\n+          && (rld[operand_reloadnum[rld[i].opnum]].when_needed\n+              == RELOAD_OTHER))\n+        rld[i].when_needed = RELOAD_FOR_OTHER_ADDRESS;\n+\n+      if (goal_alternative_matches[rld[i].opnum] >= 0)\n+        rld[i].opnum = goal_alternative_matches[rld[i].opnum];\n+    }\n+\n+  return 0;\n+}"}]}