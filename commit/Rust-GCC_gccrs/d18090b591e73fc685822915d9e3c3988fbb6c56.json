{"sha": "d18090b591e73fc685822915d9e3c3988fbb6c56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE4MDkwYjU5MWU3M2ZjNjg1ODIyOTE1ZDllM2MzOTg4ZmJiNmM1Ng==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-11-05T18:51:33Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-11-05T18:51:33Z"}, "message": "re PR target/55204 (ICE: in extract_insn, at recog.c:2140 (unrecognizable insn) with -O --param loop-invariant-max-bbs-in-loop=0)\n\ngcc/\n\tPR target/55204\n\t* config/i386/i386.c (ix86_address_subreg_operand): Remove stack\n\tpointer check.\n\t(print_reg): Use true_regnum rather than REGNO.\n\t(ix86_print_operand_address): Remove SUBREG handling.\n\nFrom-SVN: r193178", "tree": {"sha": "372465ce35ee5a7b8d7a6bedfe432dda8aca86c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/372465ce35ee5a7b8d7a6bedfe432dda8aca86c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d18090b591e73fc685822915d9e3c3988fbb6c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d18090b591e73fc685822915d9e3c3988fbb6c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d18090b591e73fc685822915d9e3c3988fbb6c56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d18090b591e73fc685822915d9e3c3988fbb6c56/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1bc60b1814a5f0d09a54dbc2b996ceed2d93a89c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc60b1814a5f0d09a54dbc2b996ceed2d93a89c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bc60b1814a5f0d09a54dbc2b996ceed2d93a89c"}], "stats": {"total": 57, "additions": 23, "deletions": 34}, "files": [{"sha": "b0c4fd1fa260eb14e655b2790ca22a7b3421b521", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18090b591e73fc685822915d9e3c3988fbb6c56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18090b591e73fc685822915d9e3c3988fbb6c56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d18090b591e73fc685822915d9e3c3988fbb6c56", "patch": "@@ -1,3 +1,11 @@\n+2012-11-05  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR target/55204\n+\t* config/i386/i386.c (ix86_address_subreg_operand): Remove stack\n+\tpointer check.\n+\t(print_reg): Use true_regnum rather than REGNO.\n+\t(ix86_print_operand_address): Remove SUBREG handling.\n+\n 2012-11-05  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-loop-niter.c (finite_loop_p): Revamp to be just wrapper of"}, {"sha": "2066b894be976d7eaa338d49ce3f88d51c18302c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 15, "deletions": 34, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18090b591e73fc685822915d9e3c3988fbb6c56/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18090b591e73fc685822915d9e3c3988fbb6c56/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d18090b591e73fc685822915d9e3c3988fbb6c56", "patch": "@@ -11784,10 +11784,6 @@ ix86_address_subreg_operand (rtx op)\n   if (GET_MODE_SIZE (mode) > UNITS_PER_WORD)\n     return false;\n \n-  /* simplify_subreg does not handle stack pointer.  */\n-  if (REGNO (op) == STACK_POINTER_REGNUM)\n-    return false;\n-\n   /* Allow only SUBREGs of non-eliminable hard registers.  */\n   return register_no_elim_operand (op, mode);\n }\n@@ -14082,15 +14078,9 @@ void\n print_reg (rtx x, int code, FILE *file)\n {\n   const char *reg;\n+  unsigned int regno;\n   bool duplicated = code == 'd' && TARGET_AVX;\n \n-  gcc_assert (x == pc_rtx\n-\t      || (REGNO (x) != ARG_POINTER_REGNUM\n-\t\t  && REGNO (x) != FRAME_POINTER_REGNUM\n-\t\t  && REGNO (x) != FLAGS_REG\n-\t\t  && REGNO (x) != FPSR_REG\n-\t\t  && REGNO (x) != FPCR_REG));\n-\n   if (ASSEMBLER_DIALECT == ASM_ATT)\n     putc ('%', file);\n \n@@ -14101,6 +14091,13 @@ print_reg (rtx x, int code, FILE *file)\n       return;\n     }\n \n+  regno = true_regnum (x);\n+  gcc_assert (regno != ARG_POINTER_REGNUM\n+\t      && regno != FRAME_POINTER_REGNUM\n+\t      && regno != FLAGS_REG\n+\t      && regno != FPSR_REG\n+\t      && regno != FPCR_REG);\n+\n   if (code == 'w' || MMX_REG_P (x))\n     code = 2;\n   else if (code == 'b')\n@@ -14126,7 +14123,7 @@ print_reg (rtx x, int code, FILE *file)\n     {\n       gcc_assert (TARGET_64BIT);\n       putc ('r', file);\n-      fprint_ul (file, REGNO (x) - FIRST_REX_INT_REG + 8);\n+      fprint_ul (file, regno - FIRST_REX_INT_REG + 8);\n       switch (code)\n \t{\n \t  case 0:\n@@ -14170,24 +14167,24 @@ print_reg (rtx x, int code, FILE *file)\n     case 16:\n     case 2:\n     normal:\n-      reg = hi_reg_name[REGNO (x)];\n+      reg = hi_reg_name[regno];\n       break;\n     case 1:\n-      if (REGNO (x) >= ARRAY_SIZE (qi_reg_name))\n+      if (regno >= ARRAY_SIZE (qi_reg_name))\n \tgoto normal;\n-      reg = qi_reg_name[REGNO (x)];\n+      reg = qi_reg_name[regno];\n       break;\n     case 0:\n-      if (REGNO (x) >= ARRAY_SIZE (qi_high_reg_name))\n+      if (regno >= ARRAY_SIZE (qi_high_reg_name))\n \tgoto normal;\n-      reg = qi_high_reg_name[REGNO (x)];\n+      reg = qi_high_reg_name[regno];\n       break;\n     case 32:\n       if (SSE_REG_P (x))\n \t{\n \t  gcc_assert (!duplicated);\n \t  putc ('y', file);\n-\t  fputs (hi_reg_name[REGNO (x)] + 1, file);\n+\t  fputs (hi_reg_name[regno] + 1, file);\n \t  return;\n \t}\n       break;\n@@ -14943,22 +14940,6 @@ ix86_print_operand_address (FILE *file, rtx addr)\n \n   gcc_assert (ok);\n \n-  if (parts.base && GET_CODE (parts.base) == SUBREG)\n-    {\n-      rtx tmp = SUBREG_REG (parts.base);\n-      parts.base = simplify_subreg (GET_MODE (parts.base),\n-\t\t\t\t    tmp, GET_MODE (tmp), 0);\n-      gcc_assert (parts.base != NULL_RTX);\n-    }\n-\n-  if (parts.index && GET_CODE (parts.index) == SUBREG)\n-    {\n-      rtx tmp = SUBREG_REG (parts.index);\n-      parts.index = simplify_subreg (GET_MODE (parts.index),\n-\t\t\t\t     tmp, GET_MODE (tmp), 0);\n-      gcc_assert (parts.index != NULL_RTX);\n-    }\n-\n   base = parts.base;\n   index = parts.index;\n   disp = parts.disp;"}]}