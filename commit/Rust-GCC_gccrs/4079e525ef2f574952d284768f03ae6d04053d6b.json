{"sha": "4079e525ef2f574952d284768f03ae6d04053d6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA3OWU1MjVlZjJmNTc0OTUyZDI4NDc2OGYwM2FlNmQwNDA1M2Q2Yg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-12-29T19:15:54Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-12-29T19:15:54Z"}, "message": "* stmt.c (expand_asm_operands):  Use new assign_temp function.\n\nFrom-SVN: r10901", "tree": {"sha": "e61c9b281ba52cde48102d824656331f93ace00f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e61c9b281ba52cde48102d824656331f93ace00f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4079e525ef2f574952d284768f03ae6d04053d6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4079e525ef2f574952d284768f03ae6d04053d6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4079e525ef2f574952d284768f03ae6d04053d6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4079e525ef2f574952d284768f03ae6d04053d6b/comments", "author": null, "committer": null, "parents": [{"sha": "e99a03944a16e9092e00d082b639c2b819b0cc10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e99a03944a16e9092e00d082b639c2b819b0cc10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e99a03944a16e9092e00d082b639c2b819b0cc10"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "3090593871b34884db668814a0bc0c64836c6869", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4079e525ef2f574952d284768f03ae6d04053d6b/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4079e525ef2f574952d284768f03ae6d04053d6b/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=4079e525ef2f574952d284768f03ae6d04053d6b", "patch": "@@ -1477,15 +1477,7 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \t}\n       else\n \t{\n-\t  if (TYPE_MODE (type) == BLKmode)\n-\t    {\n-\t      output_rtx[i] = assign_stack_temp (BLKmode,\n-\t\t\t\t\t\t int_size_in_bytes (type), 0);\n-\t      MEM_IN_STRUCT_P (output_rtx[i]) = AGGREGATE_TYPE_P (type);\n-\t    }\n-\t  else\n-\t    output_rtx[i] = gen_reg_rtx (TYPE_MODE (type));\n-\n+\t  output_rtx[i] = assign_temp (type, 0, 0);\n \t  TREE_VALUE (tail) = make_tree (type, output_rtx[i]);\n \t}\n     }\n@@ -1585,10 +1577,8 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \t      || GET_CODE (XVECEXP (body, 3, i)) == CONCAT))\n \t{\n \t  tree type = TREE_TYPE (TREE_VALUE (tail));\n-\t  rtx memloc = assign_stack_temp (TYPE_MODE (type),\n-\t\t\t\t\t  int_size_in_bytes (type), 1);\n+\t  rtx memloc = assign_temp (type, 1, 1);\n \n-\t  MEM_IN_STRUCT_P (memloc) = AGGREGATE_TYPE_P (type);\n \t  emit_move_insn (memloc, XVECEXP (body, 3, i));\n \t  XVECEXP (body, 3, i) = memloc;\n \t}"}]}