{"sha": "51e9d74cb85e9640ce3958bb89fab245f44752c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFlOWQ3NGNiODVlOTY0MGNlMzk1OGJiODlmYWIyNDVmNDQ3NTJjNw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-04-05T14:20:10Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-04-05T14:20:10Z"}, "message": "re PR libfortran/20755 (gfortran - prints the same number with 1p4G12.3 two different ways)\n\n\tPR libfortran/20755\n\t* write.c (write_float): A G edit descriptor may locally change\n\tthe scale factor, but it needs to be restored afterwards.\n\n\t* gfortran.dg/pr20755.f: New test.\n\nFrom-SVN: r97627", "tree": {"sha": "f31db877f1ff6847fae7b39c30d10d28a04bed21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f31db877f1ff6847fae7b39c30d10d28a04bed21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51e9d74cb85e9640ce3958bb89fab245f44752c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e9d74cb85e9640ce3958bb89fab245f44752c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e9d74cb85e9640ce3958bb89fab245f44752c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e9d74cb85e9640ce3958bb89fab245f44752c7/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e9126f35508e7078eeeac4e81ea76a7a37fa1af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9126f35508e7078eeeac4e81ea76a7a37fa1af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e9126f35508e7078eeeac4e81ea76a7a37fa1af"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "3c67aa3e98937c036aa1dcf4f35a7238f0555f6b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e9d74cb85e9640ce3958bb89fab245f44752c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e9d74cb85e9640ce3958bb89fab245f44752c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51e9d74cb85e9640ce3958bb89fab245f44752c7", "patch": "@@ -1,3 +1,8 @@\n+2005-04-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20755\n+\t* gfortran.dg/pr20755.f: New test.\n+\n 2005-04-05  Feng Wang  <fengwang@nudt.edu.cn>\n \n \t* gfortran.dg/pr15959.f90: New test."}, {"sha": "07c72ae4134ed85daad5b1b936cef6a475801c15", "filename": "gcc/testsuite/gfortran.dg/pr20755.f", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e9d74cb85e9640ce3958bb89fab245f44752c7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20755.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e9d74cb85e9640ce3958bb89fab245f44752c7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20755.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20755.f?ref=51e9d74cb85e9640ce3958bb89fab245f44752c7", "patch": "@@ -0,0 +1,10 @@\n+! PR libfortran/20755\n+! { dg-do run }\n+      character*30 s\n+      \n+      write (s,2000) 0.0, 0.02\n+      if (s .ne. \"    0.00       2.000E-02\") call abort\n+      write (s,2000) 0.01, 0.02\n+      if (s .ne. \"   1.000E-02   2.000E-02\") call abort\n+ 2000 format (1P2G12.3)\n+      end"}, {"sha": "51fe4a18ecd1eb0e8544775a65bbbe3c89cefdb7", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e9d74cb85e9640ce3958bb89fab245f44752c7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e9d74cb85e9640ce3958bb89fab245f44752c7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=51e9d74cb85e9640ce3958bb89fab245f44752c7", "patch": "@@ -1,3 +1,9 @@\n+2005-04-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20755\n+\t* write.c (write_float): A G edit descriptor may locally change\n+\tthe scale factor, but it needs to be restored afterwards.\n+\n 2005-04-03  Dale Ranta  <dir@lanl.gov>\n             Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n "}, {"sha": "d97caec8bc7958f71107b046ebc88d75690120b4", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e9d74cb85e9640ce3958bb89fab245f44752c7/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e9d74cb85e9640ce3958bb89fab245f44752c7/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=51e9d74cb85e9640ce3958bb89fab245f44752c7", "patch": "@@ -674,7 +674,7 @@ static void\n write_float (fnode *f, const char *source, int len)\n {\n   double n;\n-  int nb =0, res;\n+  int nb =0, res, save_scale_factor;\n   char * p, fin;\n   fnode *f2 = NULL;\n \n@@ -723,8 +723,10 @@ write_float (fnode *f, const char *source, int len)\n     }\n   else\n     {\n+      save_scale_factor = g.scale_factor;\n       f2 = calculate_G_format(f, n, len, &nb);\n       output_float (f2, n, len);\n+      g.scale_factor = save_scale_factor;\n       if (f2 != NULL)\n         free_mem(f2);\n "}]}