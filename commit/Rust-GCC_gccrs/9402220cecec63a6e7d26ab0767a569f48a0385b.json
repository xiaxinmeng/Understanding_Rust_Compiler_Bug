{"sha": "9402220cecec63a6e7d26ab0767a569f48a0385b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQwMjIyMGNlY2VjNjNhNmU3ZDI2YWIwNzY3YTU2OWY0OGEwMzg1Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-07-19T21:35:12Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-07-19T21:35:12Z"}, "message": "tree-ssa-forwprop.c (combine_conversions): Punt if the RHS of the defining statement is a SSA name that occurs in abnormal...\n\n\t* tree-ssa-forwprop.c (combine_conversions): Punt if the RHS of the\n\tdefining statement is a SSA name that occurs in abnormal PHIs.\n\nFrom-SVN: r189687", "tree": {"sha": "690fb10d1738f67c49fec46cc3c844fa7255f80b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/690fb10d1738f67c49fec46cc3c844fa7255f80b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9402220cecec63a6e7d26ab0767a569f48a0385b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9402220cecec63a6e7d26ab0767a569f48a0385b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9402220cecec63a6e7d26ab0767a569f48a0385b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9402220cecec63a6e7d26ab0767a569f48a0385b/comments", "author": null, "committer": null, "parents": [{"sha": "a3628196ec3dee889444cce725c810e84e36b670", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3628196ec3dee889444cce725c810e84e36b670", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3628196ec3dee889444cce725c810e84e36b670"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "6d7f568dda1a2d4abdb3a21f9dbd9d110c712639", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9402220cecec63a6e7d26ab0767a569f48a0385b", "patch": "@@ -1,3 +1,8 @@\n+2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-ssa-forwprop.c (combine_conversions): Punt if the RHS of the\n+\tdefining statement is a SSA name that occurs in abnormal PHIs.\n+\n 2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple-fold.c (canonicalize_constructor_val): Strip only useless type"}, {"sha": "47ae24c9ae7f9daf93007fadf67e0c73fcdec55b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9402220cecec63a6e7d26ab0767a569f48a0385b", "patch": "@@ -1,3 +1,9 @@\n+2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt25.adb: New test.\n+\t* gnat.dg/opt25_pkg1.ad[sb]: New helper.\n+\t* gnat.dg/opt25_pkg2.ad[sb]: Likewise\n+\n 2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/aggr20.ad[sb]: New test."}, {"sha": "5046d16e3a6e23d2d072b627c7f2b08af21f5511", "filename": "gcc/testsuite/gnat.dg/opt25.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25.adb?ref=9402220cecec63a6e7d26ab0767a569f48a0385b", "patch": "@@ -0,0 +1,17 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+with Opt25_Pkg1;\n+with Opt25_Pkg2;\n+\n+procedure Opt25 (B1, B2 : in out Boolean) is\n+\n+   package Local_Pack_Instance is new Opt25_Pkg1 (Boolean, True);\n+\n+   package Local_Stack is new Opt25_Pkg2 (Integer, 0);\n+\n+   S : Local_Stack.Stack := Local_Stack.Default_Stack;\n+\n+begin\n+   Local_Pack_Instance.Swap (B1, B2);\n+end;"}, {"sha": "c18694f7b5a86352fe168cb0b7cb9debb55f54a0", "filename": "gcc/testsuite/gnat.dg/opt25_pkg1.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg1.adb?ref=9402220cecec63a6e7d26ab0767a569f48a0385b", "patch": "@@ -0,0 +1,10 @@\n+package body Opt25_Pkg1 is\n+\n+   procedure Swap (A, B : in out T) is\n+      Tmp : T := A;\n+   begin\n+      A := B;\n+      B := Tmp;\n+   end Swap;\n+\n+end Opt25_Pkg1;"}, {"sha": "7a96f27494aa7424237efb6e616cad558d8a1a90", "filename": "gcc/testsuite/gnat.dg/opt25_pkg1.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg1.ads?ref=9402220cecec63a6e7d26ab0767a569f48a0385b", "patch": "@@ -0,0 +1,11 @@\n+generic\n+\n+   type T is private;\n+   Init_Value : T;\n+\n+package Opt25_Pkg1 is\n+\n+   Var : T := Init_Value;\n+   procedure Swap (A, B : in out T);\n+\n+end Opt25_Pkg1;"}, {"sha": "164ef33b4de19a0035e6d1e7f85e5b59d3503b19", "filename": "gcc/testsuite/gnat.dg/opt25_pkg2.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg2.adb?ref=9402220cecec63a6e7d26ab0767a569f48a0385b", "patch": "@@ -0,0 +1,8 @@\n+package body Opt25_Pkg2 is\n+\n+   function Default_Stack return Stack is\n+   begin\n+      return Default_Stack_Var;\n+   end Default_Stack;\n+\n+end Opt25_Pkg2;"}, {"sha": "f1273082ca1b7087024b39ad3f01f64a46e2e590", "filename": "gcc/testsuite/gnat.dg/opt25_pkg2.ads", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt25_pkg2.ads?ref=9402220cecec63a6e7d26ab0767a569f48a0385b", "patch": "@@ -0,0 +1,20 @@\n+generic\n+\n+   type Value is private;\n+   Init_Val : Value;\n+\n+package Opt25_Pkg2 is\n+\n+   type Stack (Size : Natural) is private;\n+\n+   function Default_Stack return Stack;\n+\n+private\n+   type Value_Array is array (Natural range <>) of Value;\n+\n+   type Stack (Size : Natural) is record\n+      Store : Value_Array (1 .. Size);\n+   end record;\n+\n+   Default_Stack_Var : Stack (10);\n+end Opt25_Pkg2;"}, {"sha": "c265f71bc93b9479aa8730614660362e4d390758", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9402220cecec63a6e7d26ab0767a569f48a0385b/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=9402220cecec63a6e7d26ab0767a569f48a0385b", "patch": "@@ -2584,6 +2584,11 @@ combine_conversions (gimple_stmt_iterator *gsi)\n       unsigned int final_prec = TYPE_PRECISION (type);\n       int final_unsignedp = TYPE_UNSIGNED (type);\n \n+      /* Don't propagate ssa names that occur in abnormal phis.  */\n+      if (TREE_CODE (defop0) == SSA_NAME\n+\t  && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (defop0))\n+\treturn 0;\n+\n       /* In addition to the cases of two conversions in a row\n \t handled below, if we are converting something to its own\n \t type via an object of identical or wider precision, neither"}]}