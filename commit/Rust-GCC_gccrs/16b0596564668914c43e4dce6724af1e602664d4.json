{"sha": "16b0596564668914c43e4dce6724af1e602664d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZiMDU5NjU2NDY2ODkxNGM0M2U0ZGNlNjcyNGFmMWU2MDI2NjRkNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-07-25T10:50:30Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-07-25T10:50:30Z"}, "message": "Call get_ops just for SSA_NAMEs (PR tree-optimization/71987)\n\n\tPR tree-optimization/71987\n\t* tree-ssa-reassoc.c (maybe_optimize_range_tests): Call get_ops\n\tjust for SSA_NAMEs. Fix GNU coding style.\n\t* gcc.dg/torture/pr71987.c: New test.\n\nFrom-SVN: r238704", "tree": {"sha": "f44c5cd3ee4d5141243b26e7fcc9ad504976a038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f44c5cd3ee4d5141243b26e7fcc9ad504976a038"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16b0596564668914c43e4dce6724af1e602664d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b0596564668914c43e4dce6724af1e602664d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b0596564668914c43e4dce6724af1e602664d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b0596564668914c43e4dce6724af1e602664d4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19bb30c065848fab2edc67f56990704e42345b2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19bb30c065848fab2edc67f56990704e42345b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19bb30c065848fab2edc67f56990704e42345b2b"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "a6755ab614c51d71a8c9b5b527fa0c1b48463928", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0596564668914c43e4dce6724af1e602664d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0596564668914c43e4dce6724af1e602664d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16b0596564668914c43e4dce6724af1e602664d4", "patch": "@@ -1,3 +1,9 @@\n+2016-07-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/71987\n+\t* tree-ssa-reassoc.c (maybe_optimize_range_tests): Call get_ops\n+\tjust for SSA_NAMEs. Fix GNU coding style.\n+\n 2016-07-25  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/64874"}, {"sha": "dcbc5c3e24ec703be83ad813a1cf8b568a464b39", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0596564668914c43e4dce6724af1e602664d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0596564668914c43e4dce6724af1e602664d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16b0596564668914c43e4dce6724af1e602664d4", "patch": "@@ -1,3 +1,7 @@\n+2016-07-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/torture/pr71987.c: New test.\n+\n 2016-07-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/71935"}, {"sha": "87d59383af42d4d6070774cb07e8993d78a1000a", "filename": "gcc/testsuite/gcc.dg/torture/pr71987.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0596564668914c43e4dce6724af1e602664d4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71987.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0596564668914c43e4dce6724af1e602664d4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71987.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71987.c?ref=16b0596564668914c43e4dce6724af1e602664d4", "patch": "@@ -0,0 +1,21 @@\n+/* PR tree-optimization/71987 */\n+\n+int a, b, *c, *d;\n+\n+short fn1 (int p1)\n+{\n+  return a ? p1 : a;\n+}\n+\n+void fn2 ()\n+{\n+  int e, *f = &e;\n+  b = fn1 (d != &e);\n+  c = f;\n+}\n+\n+int main ()\n+{\n+  fn2 ();\n+  return 0;\n+}"}, {"sha": "18cf97806aec3c51193c0476b1309653842242fe", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0596564668914c43e4dce6724af1e602664d4/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0596564668914c43e4dce6724af1e602664d4/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=16b0596564668914c43e4dce6724af1e602664d4", "patch": "@@ -3519,7 +3519,8 @@ maybe_optimize_range_tests (gimple *stmt)\n \t     (or &, corresponding to 1/0 in the phi arguments,\n \t     push into ops the individual range test arguments\n \t     of the bitwise or resp. and, recursively.  */\n-\t  if (!get_ops (rhs, code, &ops,\n+\t  if (TREE_CODE (rhs) == SSA_NAME\n+\t      && !get_ops (rhs, code, &ops,\n \t\t\tloop_containing_stmt (stmt))\n \t      && (TREE_CODE_CLASS (gimple_assign_rhs_code (stmt))\n \t\t  != tcc_comparison)\n@@ -3540,8 +3541,8 @@ maybe_optimize_range_tests (gimple *stmt)\n \t  else if (is_gimple_assign (stmt)\n \t\t   && (TREE_CODE_CLASS (gimple_assign_rhs_code (stmt))\n \t\t       == tcc_comparison)\n-\t\t   &&!get_ops (lhs, code, &ops,\n-\t\t\t       loop_containing_stmt (stmt))\n+\t\t   && !get_ops (lhs, code, &ops,\n+\t\t\t\tloop_containing_stmt (stmt))\n \t\t   && has_single_use (lhs))\n \t    {\n \t      operand_entry *oe = operand_entry_pool.allocate ();"}]}