{"sha": "4cfaec1cefa9e393cceb88fa818c7c2530e75289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNmYWVjMWNlZmE5ZTM5M2NjZWI4OGZhODE4YzdjMjUzMGU3NTI4OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-02-25T06:26:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-02-25T06:26:24Z"}, "message": "re PR c++/33486 (namespace association doesn't handle parallel namespaces)\n\n        * gcc/cp/parser.c (cp_parser_declaration): Handle 'inline namespace'.\n        (cp_parser_namespace_definition): Likewise.\n  \n        PR c++/33486\n        * gcc/cp/name-lookup.c (arg_assoc_namespace): Look down into inline\n        namespaces, too.\n  \n        * libstdc++-v3/include/bits/c++config: Use 'inline namespace'\n        instead of strong using.\n\nFrom-SVN: r132611", "tree": {"sha": "b3e9a71438b63c4eab718359b3976d6d06ff3474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3e9a71438b63c4eab718359b3976d6d06ff3474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cfaec1cefa9e393cceb88fa818c7c2530e75289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cfaec1cefa9e393cceb88fa818c7c2530e75289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cfaec1cefa9e393cceb88fa818c7c2530e75289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cfaec1cefa9e393cceb88fa818c7c2530e75289/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9be0915bde2e7c447889dc651ee561e1d742ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9be0915bde2e7c447889dc651ee561e1d742ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9be0915bde2e7c447889dc651ee561e1d742ee1"}], "stats": {"total": 111, "additions": 85, "deletions": 26}, "files": [{"sha": "3341c1bd48feb7dd7d964873a26714fd6ff3c52f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4cfaec1cefa9e393cceb88fa818c7c2530e75289", "patch": "@@ -1,3 +1,12 @@\n+2008-02-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_declaration): Handle \"inline namespace\".\n+\t(cp_parser_namespace_definition): Likewise.\n+\n+\tPR c++/33486\n+\t* name-lookup.c (arg_assoc_namespace): Look down into inline \n+\tnamespaces, too.\n+\n 2008-02-23  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \t* typeck.c (check_for_casting_away_constness): Use 1 single"}, {"sha": "4a43cfa29eba20fb5d7454cdc2d69e116d0881d0", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=4cfaec1cefa9e393cceb88fa818c7c2530e75289", "patch": "@@ -4419,6 +4419,13 @@ arg_assoc_namespace (struct arg_lookup *k, tree scope)\n     if (arg_assoc_namespace (k, TREE_PURPOSE (value)))\n       return true;\n \n+  /* Also look down into inline namespaces.  */\n+  for (value = DECL_NAMESPACE_USING (scope); value;\n+       value = TREE_CHAIN (value))\n+    if (is_associated_namespace (scope, TREE_PURPOSE (value)))\n+      if (arg_assoc_namespace (k, TREE_PURPOSE (value)))\n+\treturn true;\n+\n   value = namespace_binding (k->name, scope);\n   if (!value)\n     return false;"}, {"sha": "cb0059392a7f4b557fb0adaa5afd2ab2b22f9c28", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=4cfaec1cefa9e393cceb88fa818c7c2530e75289", "patch": "@@ -7737,6 +7737,10 @@ cp_parser_declaration (cp_parser* parser)\n \t       || token2.type == CPP_OPEN_BRACE\n \t       || token2.keyword == RID_ATTRIBUTE))\n     cp_parser_namespace_definition (parser);\n+  /* An inline (associated) namespace definition.  */\n+  else if (token1.keyword == RID_INLINE\n+\t   && token2.keyword == RID_NAMESPACE)\n+    cp_parser_namespace_definition (parser);\n   /* Objective-C++ declaration/definition.  */\n   else if (c_dialect_objc () && OBJC_IS_AT_KEYWORD (token1.keyword))\n     cp_parser_objc_declaration (parser);\n@@ -11562,6 +11566,15 @@ cp_parser_namespace_definition (cp_parser* parser)\n {\n   tree identifier, attribs;\n   bool has_visibility;\n+  bool is_inline;\n+\n+  if (cp_lexer_next_token_is_keyword (parser->lexer, RID_INLINE))\n+    {\n+      is_inline = true;\n+      cp_lexer_consume_token (parser->lexer);\n+    }\n+  else\n+    is_inline = false;\n \n   /* Look for the `namespace' keyword.  */\n   cp_parser_require_keyword (parser, RID_NAMESPACE, \"`namespace'\");\n@@ -11583,6 +11596,21 @@ cp_parser_namespace_definition (cp_parser* parser)\n   /* Start the namespace.  */\n   push_namespace (identifier);\n \n+  /* \"inline namespace\" is equivalent to a stub namespace definition\n+     followed by a strong using directive.  */\n+  if (is_inline)\n+    {\n+      tree namespace = current_namespace;\n+      /* Set up namespace association.  */\n+      DECL_NAMESPACE_ASSOCIATIONS (namespace)\n+\t= tree_cons (CP_DECL_CONTEXT (namespace), NULL_TREE,\n+\t\t     DECL_NAMESPACE_ASSOCIATIONS (namespace));\n+      /* Import the contents of the inline namespace.  */\n+      pop_namespace ();\n+      do_using_directive (namespace);\n+      push_namespace (identifier);\n+    }\n+\n   has_visibility = handle_namespace_attrs (current_namespace, attribs);\n \n   /* Parse the body of the namespace.  */"}, {"sha": "739dc936e405e8d010cd035f29b9b7b2a576bb18", "filename": "gcc/testsuite/g++.dg/lookup/strong-using-1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-1.C?ref=4cfaec1cefa9e393cceb88fa818c7c2530e75289", "patch": "@@ -3,10 +3,9 @@\n // { dg-do compile }\n \n namespace fool {\n-  namespace foo {\n+  inline namespace foo {\n     template <class T> void swap(T, T);\n   }\n-  using namespace foo __attribute__((strong));\n   template <class T> void swap(T);\n }\n "}, {"sha": "5c4b425fa8a8a3da3e693bf07ad7fa9500f3018a", "filename": "gcc/testsuite/g++.dg/lookup/strong-using-2.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-2.C?ref=4cfaec1cefa9e393cceb88fa818c7c2530e75289", "patch": "@@ -3,16 +3,14 @@\n // { dg-do compile }\n \n namespace foo {\n-  namespace foo_impl {\n+  inline namespace foo_impl {\n     class T; // { dg-error \"T\" \"\" }\n   }\n-  using namespace foo_impl __attribute__((strong));\n }\n namespace bar {\n-  namespace bar_impl {\n+  inline namespace bar_impl {\n     class T; // { dg-error \"T\" \"\" }\n   }\n-  using namespace bar_impl __attribute__((strong));\n   using namespace foo;\n }\n namespace baz {"}, {"sha": "17c50329df0ace5cd66b29e1620d3216cd7b6ce3", "filename": "gcc/testsuite/g++.dg/lookup/strong-using-3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-3.C?ref=4cfaec1cefa9e393cceb88fa818c7c2530e75289", "patch": "@@ -3,10 +3,9 @@\n // { dg-do compile }\n \n namespace bar {\n-  namespace foo {\n+  inline namespace foo {\n     template <class T> void f(T, T);\n   }\n-  using namespace foo __attribute__((strong));\n   template <class T> void f(T);\n }\n "}, {"sha": "789c8e34181b5b2378faa0d39de1cb293a673c2c", "filename": "gcc/testsuite/g++.dg/lookup/strong-using-5.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfaec1cefa9e393cceb88fa818c7c2530e75289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-5.C?ref=4cfaec1cefa9e393cceb88fa818c7c2530e75289", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/33486\n+\n+namespace A\n+{\n+  inline namespace B\n+  {\n+    struct T\n+    {\n+      struct U { };\n+      U f();\n+    };\n+  }\n+\n+  inline namespace C\n+  {\n+    void g (T::U);\n+  }\n+}\n+\n+int main()\n+{\n+  A::T t;\n+  g(t.f());\n+}"}, {"sha": "a1550cc4e3e807a8084c7db4de7482ddd855a696", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfaec1cefa9e393cceb88fa818c7c2530e75289/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfaec1cefa9e393cceb88fa818c7c2530e75289/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4cfaec1cefa9e393cceb88fa818c7c2530e75289", "patch": "@@ -1,3 +1,8 @@\n+2008-02-20  Jason Merrill  <jason@redhat.com>\n+\n+\t* include/bits/c++config: Use 'inline namespace' instead of \n+\tstrong using.\n+\n 2008-02-18  Pedro Lamarao <pedro.lamarao@mndfck.org>\n \n \t* include/std/tuple: Fixes for moveable, non-copyable types."}, {"sha": "d42cb9feb47170a792cbf4479031efac8ca46409", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfaec1cefa9e393cceb88fa818c7c2530e75289/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfaec1cefa9e393cceb88fa818c7c2530e75289/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=4cfaec1cefa9e393cceb88fa818c7c2530e75289", "patch": "@@ -180,11 +180,8 @@\n namespace std\n { \n   namespace __norm { } \n-  namespace __debug { }\n-  namespace __cxx1998 { }\n-\n-  using namespace __debug __attribute__ ((strong)); \n-  using namespace __cxx1998 __attribute__ ((strong)); \n+  inline namespace __debug { }\n+  inline namespace __cxx1998 { }\n }\n #endif\n \n@@ -193,34 +190,28 @@ namespace std\n namespace std\n { \n   namespace __norm { } \n-  namespace __parallel { }\n-  namespace __cxx1998 { }\n-\n-  using namespace __parallel __attribute__ ((strong));\n-  using namespace __cxx1998 __attribute__ ((strong)); \n+  inline namespace __parallel { }\n+  inline namespace __cxx1998 { }\n }\n #endif\n \n // Namespace associations for versioning mode.\n #if _GLIBCXX_NAMESPACE_ASSOCIATION_VERSION\n namespace std\n {\n-  namespace _6 { }\n-  using namespace _6 __attribute__ ((strong));\n+  inline namespace _6 { }\n }\n \n namespace __gnu_cxx \n { \n-  namespace _6 { }\n-  using namespace _6 __attribute__ ((strong));\n+  inline namespace _6 { }\n }\n \n namespace std\n {\n   namespace tr1 \n   { \n-    namespace _6 { }\n-    using namespace _6 __attribute__ ((strong));\n+    inline namespace _6 { }\n   }\n }\n #endif\n@@ -235,8 +226,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n # define _GLIBCXX_LDBL_NAMESPACE __gnu_cxx_ldbl128::\n # define _GLIBCXX_BEGIN_LDBL_NAMESPACE namespace __gnu_cxx_ldbl128 {\n # define _GLIBCXX_END_LDBL_NAMESPACE }\n-  namespace __gnu_cxx_ldbl128 { }\n-  using namespace __gnu_cxx_ldbl128 __attribute__((__strong__));\n+  inline namespace __gnu_cxx_ldbl128 { }\n #else\n # define _GLIBCXX_LDBL_NAMESPACE\n # define _GLIBCXX_BEGIN_LDBL_NAMESPACE"}]}