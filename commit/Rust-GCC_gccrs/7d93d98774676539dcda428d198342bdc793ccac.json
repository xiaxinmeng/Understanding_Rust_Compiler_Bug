{"sha": "7d93d98774676539dcda428d198342bdc793ccac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q5M2Q5ODc3NDY3NjUzOWRjZGE0MjhkMTk4MzQyYmRjNzkzY2NhYw==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2006-11-22T00:12:52Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-11-22T00:12:52Z"}, "message": "re PR rtl-optimization/29924 (pr24626-4.c fails on powerpc-aix and others)\n\n\tPR rtl-optimization/29924\n\t* loop-unroll.c (split_edge_and_insert): Handle the case insns is NULL.\n\t(unroll_loop_runtime_iterations): Assert that the argument passed to\n\tsplit_edge_and_insert is not NULL.\n\t* loop-doloop.c (add_test): Ditto.\n\nFrom-SVN: r119078", "tree": {"sha": "c758a5e110c013484ee186033b5a0b2cbd95d424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c758a5e110c013484ee186033b5a0b2cbd95d424"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d93d98774676539dcda428d198342bdc793ccac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d93d98774676539dcda428d198342bdc793ccac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d93d98774676539dcda428d198342bdc793ccac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d93d98774676539dcda428d198342bdc793ccac/comments", "author": null, "committer": null, "parents": [{"sha": "92c59193a16f4bf1731e62a07e0540171269c36e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92c59193a16f4bf1731e62a07e0540171269c36e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92c59193a16f4bf1731e62a07e0540171269c36e"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "8666acc058ccd7d16ca8287fdb3a80189e021df5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d93d98774676539dcda428d198342bdc793ccac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d93d98774676539dcda428d198342bdc793ccac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d93d98774676539dcda428d198342bdc793ccac", "patch": "@@ -1,3 +1,11 @@\n+2006-11-22  Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\tPR rtl-optimization/29924\n+\t* loop-unroll.c (split_edge_and_insert): Handle the case insns is NULL.\n+\t(unroll_loop_runtime_iterations): Assert that the argument passed to\n+\tsplit_edge_and_insert is not NULL.\n+\t* loop-doloop.c (add_test): Ditto.\n+\n 2006-11-22  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* tree-loop-linear.c (linear_transform_loops): Use single_exit accessor"}, {"sha": "004dcfe72f8f7a08a5d49029cb12b55cfa2f5910", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d93d98774676539dcda428d198342bdc793ccac/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d93d98774676539dcda428d198342bdc793ccac/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=7d93d98774676539dcda428d198342bdc793ccac", "patch": "@@ -248,7 +248,7 @@ add_test (rtx cond, edge *e, basic_block dest)\n   do_compare_rtx_and_jump (op0, op1, code, 0, mode, NULL_RTX, NULL_RTX, label);\n \n   jump = get_last_insn ();\n-  if (!JUMP_P (jump))\n+  if (!jump || !JUMP_P (jump))\n     {\n       /* The condition is always false and the jump was optimized out.  */\n       end_sequence ();\n@@ -257,6 +257,10 @@ add_test (rtx cond, edge *e, basic_block dest)\n \n   seq = get_insns ();\n   end_sequence ();\n+\n+  /* There always is at least the jump insn in the sequence.  */\n+  gcc_assert (seq != NULL_RTX);\n+\n   bb = split_edge_and_insert (*e, seq);\n   *e = single_succ_edge (bb);\n "}, {"sha": "2f6f3ba2ad9862569ef000c7115061de48834862", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d93d98774676539dcda428d198342bdc793ccac/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d93d98774676539dcda428d198342bdc793ccac/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=7d93d98774676539dcda428d198342bdc793ccac", "patch": "@@ -899,13 +899,18 @@ decide_unroll_runtime_iterations (struct loop *loop, int flags)\n \t     loop->lpt_decision.times);\n }\n \n-/* Splits edge E and inserts INSNS on it.  */\n+/* Splits edge E and inserts the sequence of instructions INSNS on it, and\n+   returns the newly created block.  If INSNS is NULL_RTX, nothing is changed\n+   and NULL is returned instead.  */\n \n basic_block\n split_edge_and_insert (edge e, rtx insns)\n {\n-  basic_block bb = split_edge (e); \n-  gcc_assert (insns != NULL_RTX);\n+  basic_block bb;\n+\n+  if (!insns)\n+    return NULL;\n+  bb = split_edge (e); \n   emit_insn_after (insns, BB_END (bb));\n   bb->flags |= BB_SUPERBLOCK;\n   return bb;\n@@ -1069,6 +1074,10 @@ unroll_loop_runtime_iterations (struct loops *loops, struct loop *loop)\n \t\t\t\t\t  block_label (preheader), p,\n \t\t\t\t\t  NULL_RTX);\n \n+      /* We rely on the fact that the compare and jump cannot be optimized out,\n+\t and hence the cfg we create is correct.  */\n+      gcc_assert (branch_code != NULL_RTX);\n+\n       swtch = split_edge_and_insert (single_pred_edge (swtch), branch_code);\n       set_immediate_dominator (CDI_DOMINATORS, preheader, swtch);\n       single_pred_edge (swtch)->probability = REG_BR_PROB_BASE - p;\n@@ -1086,6 +1095,7 @@ unroll_loop_runtime_iterations (struct loops *loops, struct loop *loop)\n       branch_code = compare_and_jump_seq (copy_rtx (niter), const0_rtx, EQ,\n \t\t\t\t\t  block_label (preheader), p,\n \t\t\t\t\t  NULL_RTX);\n+      gcc_assert (branch_code != NULL_RTX);\n \n       swtch = split_edge_and_insert (single_succ_edge (swtch), branch_code);\n       set_immediate_dominator (CDI_DOMINATORS, preheader, swtch);"}]}