{"sha": "bcd864336c411357ce36ddb02b1e55fa4b00befd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNkODY0MzM2YzQxMTM1N2NlMzZkZGIwMmIxZTU1ZmE0YjAwYmVmZA==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-09-30T19:23:11Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-09-30T19:23:11Z"}, "message": "(CPP_CPU_SPEC): New. Added for defining the submodel.\n\nFrom-SVN: r12876", "tree": {"sha": "1fc7ab06e0b4fab3685d97962567407229a1f996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fc7ab06e0b4fab3685d97962567407229a1f996"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcd864336c411357ce36ddb02b1e55fa4b00befd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcd864336c411357ce36ddb02b1e55fa4b00befd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcd864336c411357ce36ddb02b1e55fa4b00befd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcd864336c411357ce36ddb02b1e55fa4b00befd/comments", "author": null, "committer": null, "parents": [{"sha": "22b519d5d86d0f68b34405de570e9d73bf73e5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b519d5d86d0f68b34405de570e9d73bf73e5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22b519d5d86d0f68b34405de570e9d73bf73e5d8"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "bb5901977db153139e261f737061f57304df64a6", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcd864336c411357ce36ddb02b1e55fa4b00befd/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcd864336c411357ce36ddb02b1e55fa4b00befd/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=bcd864336c411357ce36ddb02b1e55fa4b00befd", "patch": "@@ -164,7 +164,7 @@ extern int target_flags;\n #define TARGET_USE_Q_REG (ix86_cpu == PROCESSOR_PENTIUM \\\n \t\t\t  || ix86_cpu == PROCESSOR_PENTIUMPRO)\n #define TARGET_USE_ANY_REG (ix86_cpu == PROCESSOR_I486)\n-#define TARGET_CMOVE (ix86_isa == PROCESSOR_PENTIUMPRO)\n+#define TARGET_CMOVE (ix86_arch == PROCESSOR_PENTIUMPRO)\n #define TARGET_DEEP_BRANCH_PREDICTION (ix86_cpu == PROCESSOR_PENTIUMPRO)\n #define TARGET_STACK_PROBE (target_flags & MASK_STACK_PROBE)\n \n@@ -227,11 +227,7 @@ enum processor_type\n \n extern enum processor_type ix86_cpu;\n \n-extern int ix86_isa;\n-\n-/* Define generic processor types based upon current deployment.  */\n-#define PROCESSOR_COMMON  PROCESSOR_I386\n-#define PROCESSOR_COMMON_STRING PROCESSOR_I386_STRING\n+extern int ix86_arch;\n \n /* Define the default processor.  This is overridden by other tm.h files.  */\n #define PROCESSOR_DEFAULT \\\n@@ -262,7 +258,7 @@ extern int ix86_isa;\n    by appending `-m' to the specified name.  */\n #define TARGET_OPTIONS\t\t\t\t\t\t\t\\\n { { \"cpu=\",\t\t&ix86_cpu_string},\t\t\t\t\\\n-  { \"arch=\",\t\t&ix86_isa_string},\t\t\t\t\\\n+  { \"arch=\",\t\t&ix86_arch_string},\t\t\t\t\\\n   { \"reg-alloc=\",\t&i386_reg_alloc_order },\t\t\t\\\n   { \"regparm=\",\t\t&i386_regparm_string },\t\t\t\t\\\n   { \"align-loops=\",\t&i386_align_loops_string },\t\t\t\\\n@@ -305,6 +301,32 @@ extern int ix86_isa;\n %{mpentiumpro:-mcpu=pentiumpro}}\"\n #endif\n \f\n+#ifndef CPP_CPU_SPEC\n+#define CPP_CPU_SPEC \"\\\n+-Di386 -Asystem(unix) -Acpu(i386) -Amachine(i386) \\\n+%{mcpu=i486:-Di486} %{m486:-Di486} \\\n+%{mpentium:-Dpentium -Di586} %{mcpu=pentium:-Dpentium -Di586} \\\n+%{mpentiumpro:-Dpentiumpro -Di686} %{mcpu=pentiumpro:-Dpentiumpro -Di686}\"\n+#endif\n+\n+/* This macro defines names of additional specifications to put in the specs\n+   that can be used in various specifications like CC1_SPEC.  Its definition\n+   is an initializer with a subgrouping for each command option.\n+\n+   Each subgrouping contains a string constant, that defines the\n+   specification name, and a string constant that used by the GNU CC driver\n+   program.\n+\n+   Do not define this macro if it does not need to do anything.  */\n+\n+#ifndef SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS\n+#endif\n+\n+#define EXTRA_SPECS\t\t\t\t\t\t\t\\\n+  { \"cpp_cpu\",\tCPP_CPU_SPEC },\t\t\t\t\t\t\\\n+  SUBTARGET_EXTRA_SPECS\n+\f\n /* target machine storage layout */\n \n /* Define for XFmode extended real floating point support.\n@@ -2637,7 +2659,7 @@ extern void rewrite_address ();\n \n /* Variables in i386.c */\n extern char *ix86_cpu_string;\t\t\t/* for -mcpu=<xxx> */\n-extern char *ix86_isa_string;\t\t\t/* for -mcpu=<xxx> */\n+extern char *ix86_arch_string;\t\t\t/* for -march=<xxx> */\n extern char *i386_reg_alloc_order;\t\t/* register allocation order */\n extern char *i386_regparm_string;\t\t/* # registers to use to pass args */\n extern char *i386_align_loops_string;\t\t/* power of two alignment for loops */"}]}