{"sha": "4d786b72b52efedede1f9f3724d0821ee475ee71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ3ODZiNzJiNTJlZmVkZWRlMWY5ZjM3MjRkMDgyMWVlNDc1ZWU3MQ==", "commit": {"author": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-25T05:26:27Z"}, "committer": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-25T05:26:27Z"}, "message": "make the method get_expr of NegationExpr  keep consistant with other HIR.", "tree": {"sha": "100290dad35671f1bf058241337932ef41306c4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/100290dad35671f1bf058241337932ef41306c4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d786b72b52efedede1f9f3724d0821ee475ee71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d786b72b52efedede1f9f3724d0821ee475ee71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d786b72b52efedede1f9f3724d0821ee475ee71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d786b72b52efedede1f9f3724d0821ee475ee71/comments", "author": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "862722c6889008068f7dacb553ae130843276a02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/862722c6889008068f7dacb553ae130843276a02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/862722c6889008068f7dacb553ae130843276a02"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "8391bc48c802a024cf4273fe9802844e394f4bb3", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d786b72b52efedede1f9f3724d0821ee475ee71/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d786b72b52efedede1f9f3724d0821ee475ee71/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=4d786b72b52efedede1f9f3724d0821ee475ee71", "patch": "@@ -354,7 +354,7 @@ class CompileExpr : public HIRCompileBase\n   void visit (HIR::NegationExpr &expr) override\n   {\n     auto op = expr.get_expr_type ();\n-    auto negated_expr = CompileExpr::Compile (expr.get_expr (), ctx);\n+    auto negated_expr = CompileExpr::Compile (expr.get_expr ().get (), ctx);\n     auto location = expr.get_locus ();\n \n     translated"}, {"sha": "102ab97ad4a6e40f7714200ce940f09638a27941", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d786b72b52efedede1f9f3724d0821ee475ee71/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d786b72b52efedede1f9f3724d0821ee475ee71/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=4d786b72b52efedede1f9f3724d0821ee475ee71", "patch": "@@ -300,8 +300,6 @@ class NegationExpr : public OperatorExpr\n \n   void accept_vis (HIRVisitor &vis) override;\n \n-  Expr *get_expr () { return main_or_left_expr.get (); }\n-\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "90ea595efe3e411fbeaec5be2efd7e4d73c7d6aa", "filename": "gcc/rust/typecheck/rust-hir-const-fold.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d786b72b52efedede1f9f3724d0821ee475ee71/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d786b72b52efedede1f9f3724d0821ee475ee71/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.h?ref=4d786b72b52efedede1f9f3724d0821ee475ee71", "patch": "@@ -341,7 +341,7 @@ class ConstFoldExpr : public ConstFoldBase\n \n   void visit (HIR::NegationExpr &expr) override\n   {\n-    auto negated_expr = ConstFoldExpr::fold (expr.get_expr ());\n+    auto negated_expr = ConstFoldExpr::fold (expr.get_expr ().get ());\n     if (negated_expr == nullptr)\n       return;\n "}, {"sha": "236c7b9c92f29c638ac41eb4d526c6367a611965", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d786b72b52efedede1f9f3724d0821ee475ee71/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d786b72b52efedede1f9f3724d0821ee475ee71/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=4d786b72b52efedede1f9f3724d0821ee475ee71", "patch": "@@ -619,7 +619,8 @@ class TypeCheckExpr : public TypeCheckBase\n \n   void visit (HIR::NegationExpr &expr) override\n   {\n-    auto negated_expr_ty = TypeCheckExpr::Resolve (expr.get_expr (), false);\n+    auto negated_expr_ty\n+      = TypeCheckExpr::Resolve (expr.get_expr ().get (), false);\n \n     // https://doc.rust-lang.org/reference/expressions/operator-expr.html#negation-operators\n     switch (expr.get_expr_type ())"}]}