{"sha": "155d77239f65de05cfbb5dfb17fe26985f0b14c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU1ZDc3MjM5ZjY1ZGUwNWNmYmI1ZGZiMTdmZTI2OTg1ZjBiMTRjMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-10T13:07:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-10T13:07:39Z"}, "message": "(save_for_inline_copying): Put reg_map in function's maybepermanent obstack instead of using alloca...\n\n(save_for_inline_copying): Put reg_map in function's maybepermanent\nobstack instead of using alloca; set regno_reg_rtx to it; delete\nrecently-added copying of this later.\n\nFrom-SVN: r11193", "tree": {"sha": "2490571d407a01d461a398c8069703a77e6f05f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2490571d407a01d461a398c8069703a77e6f05f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/155d77239f65de05cfbb5dfb17fe26985f0b14c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155d77239f65de05cfbb5dfb17fe26985f0b14c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/155d77239f65de05cfbb5dfb17fe26985f0b14c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155d77239f65de05cfbb5dfb17fe26985f0b14c0/comments", "author": null, "committer": null, "parents": [{"sha": "7e735d6f4487bf97da0733d4b6ad3073cf0a53f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e735d6f4487bf97da0733d4b6ad3073cf0a53f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e735d6f4487bf97da0733d4b6ad3073cf0a53f8"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "199fcd95816ca2738f50236289ccc526ff309c94", "filename": "gcc/integrate.c", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155d77239f65de05cfbb5dfb17fe26985f0b14c0/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155d77239f65de05cfbb5dfb17fe26985f0b14c0/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=155d77239f65de05cfbb5dfb17fe26985f0b14c0", "patch": "@@ -1,5 +1,5 @@\n /* Procedure integration for GNU CC.\n-   Copyright (C) 1988, 1991, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 91, 93, 94, 95, 1996 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -391,7 +391,6 @@ save_for_inline_copying (fndecl)\n   int max_uid;\n   rtx first_nonparm_insn;\n   char *new, *new1;\n-  rtx *new2;\n \n   /* Make and emit a return-label if we have not already done so. \n      Do this before recording the bounds on label numbers. */\n@@ -470,16 +469,14 @@ save_for_inline_copying (fndecl)\n      Make these new rtx's now, and install them in regno_reg_rtx, so they\n      will be the official pseudo-reg rtx's for the rest of compilation.  */\n \n-  reg_map = (rtx *) alloca ((max_reg + 1) * sizeof (rtx));\n+  reg_map = (rtx *) savealloc ((max_reg + 1) * sizeof (rtx));\n \n   len = sizeof (struct rtx_def) + (GET_RTX_LENGTH (REG) - 1) * sizeof (rtunion);\n   for (i = max_reg - 1; i > LAST_VIRTUAL_REGISTER; i--)\n     reg_map[i] = (rtx)obstack_copy (function_maybepermanent_obstack,\n \t\t\t\t    regno_reg_rtx[i], len);\n \n-  bcopy ((char *) (reg_map + LAST_VIRTUAL_REGISTER + 1),\n-\t (char *) (regno_reg_rtx + LAST_VIRTUAL_REGISTER + 1),\n-\t (max_reg - (LAST_VIRTUAL_REGISTER + 1)) * sizeof (rtx));\n+  regno_reg_rtx = reg_map;\n \n   /* Likewise each label rtx must have a unique rtx as its copy.  */\n \n@@ -612,13 +609,9 @@ save_for_inline_copying (fndecl)\n   bcopy (regno_pointer_flag, new, regno_pointer_flag_length);\n   new1 = (char *) savealloc (regno_pointer_flag_length);\n   bcopy (regno_pointer_align, new1, regno_pointer_flag_length);\n-  new2 = (rtx *) savealloc (regno_pointer_flag_length * sizeof (rtx));\n-  bcopy ((char *) regno_reg_rtx, (char *) new2,\n-\t regno_pointer_flag_length * sizeof (rtx));\n \n   regno_pointer_flag = new;\n   regno_pointer_align = new1;\n-  regno_reg_rtx = new2;\n \n   set_new_first_and_last_insn (first_insn, last_insn);\n }"}]}