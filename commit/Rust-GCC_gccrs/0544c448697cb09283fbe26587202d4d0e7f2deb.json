{"sha": "0544c448697cb09283fbe26587202d4d0e7f2deb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU0NGM0NDg2OTdjYjA5MjgzZmJlMjY1ODcyMDJkNGQwZTdmMmRlYg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-02-12T16:12:36Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-02-12T16:12:36Z"}, "message": "Pass --32 to GNU assembler for .long foo@GOTOFF check\n\n\tPR target/60151\n\t* configure.ac (HAVE_AS_GOTOFF_IN_DATA): Pass --32 to GNU\n\tassembler.\n\t* configure: Regenerated.\n\nCo-Authored-By: Uros Bizjak <ubizjak@gmail.com>\n\nFrom-SVN: r207731", "tree": {"sha": "1d13851123e3c2c5a4469f72a2b70793159944a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d13851123e3c2c5a4469f72a2b70793159944a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0544c448697cb09283fbe26587202d4d0e7f2deb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0544c448697cb09283fbe26587202d4d0e7f2deb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0544c448697cb09283fbe26587202d4d0e7f2deb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0544c448697cb09283fbe26587202d4d0e7f2deb/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a1701343871501d8e6f8fd3020a9881a1d9aa62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1701343871501d8e6f8fd3020a9881a1d9aa62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a1701343871501d8e6f8fd3020a9881a1d9aa62"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "7ad4d3b4802b3a5304ebcedbf0c92e716f6ffa4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0544c448697cb09283fbe26587202d4d0e7f2deb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0544c448697cb09283fbe26587202d4d0e7f2deb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0544c448697cb09283fbe26587202d4d0e7f2deb", "patch": "@@ -1,3 +1,11 @@\n+2014-02-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/60151\n+\t* configure.ac (HAVE_AS_GOTOFF_IN_DATA): Pass --32 to GNU\n+\tassembler.\n+\t* configure: Regenerated.\n+\n 2014-02-12  Richard Biener  <rguenther@suse.de>\n \n \t* vec.c (vec_prefix::calculate_allocation): Move as"}, {"sha": "3ecd194346ed029b6fc85201ccd7dd362bbe68a6", "filename": "gcc/configure", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0544c448697cb09283fbe26587202d4d0e7f2deb/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0544c448697cb09283fbe26587202d4d0e7f2deb/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=0544c448697cb09283fbe26587202d4d0e7f2deb", "patch": "@@ -25028,6 +25028,10 @@ fi\n \n     # These two are used unconditionally by i386.[ch]; it is to be defined\n     # to 1 if the feature is present, 0 otherwise.\n+    as_ix86_gotoff_in_data_opt=\n+    if test x$gas = xyes; then\n+      as_ix86_gotoff_in_data_opt=\"--32\"\n+    fi\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for GOTOFF in data\" >&5\n $as_echo_n \"checking assembler for GOTOFF in data... \" >&6; }\n if test \"${gcc_cv_as_ix86_gotoff_in_data+set}\" = set; then :\n@@ -25044,7 +25048,7 @@ fi\n \tnop\n \t.data\n \t.long .L0@GOTOFF' > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags $as_ix86_gotoff_in_data_opt -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?"}, {"sha": "402494e5ba320d7441cebe433fa442078a428840", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0544c448697cb09283fbe26587202d4d0e7f2deb/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0544c448697cb09283fbe26587202d4d0e7f2deb/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=0544c448697cb09283fbe26587202d4d0e7f2deb", "patch": "@@ -3867,8 +3867,13 @@ foo:\tnop\n \n     # These two are used unconditionally by i386.[ch]; it is to be defined\n     # to 1 if the feature is present, 0 otherwise.\n+    as_ix86_gotoff_in_data_opt=\n+    if test x$gas = xyes; then\n+      as_ix86_gotoff_in_data_opt=\"--32\"\n+    fi\n     gcc_GAS_CHECK_FEATURE([GOTOFF in data],\n-        gcc_cv_as_ix86_gotoff_in_data, [2,11,0],,\n+      gcc_cv_as_ix86_gotoff_in_data, [2,11,0],\n+      [$as_ix86_gotoff_in_data_opt],\n [\t.text\n .L0:\n \tnop"}]}