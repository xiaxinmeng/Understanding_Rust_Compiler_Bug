{"sha": "ecad0c2519b2e035bea119313b3a9276f37f3db1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNhZDBjMjUxOWIyZTAzNWJlYTExOTMxM2IzYTkyNzZmMzdmM2RiMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T18:52:50Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T18:52:50Z"}, "message": "Traverse expressions when looking for types.\n\nFrom-SVN: r168478", "tree": {"sha": "fa9666998caa876fedd5ff6d10b7002ad61420ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa9666998caa876fedd5ff6d10b7002ad61420ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecad0c2519b2e035bea119313b3a9276f37f3db1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecad0c2519b2e035bea119313b3a9276f37f3db1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecad0c2519b2e035bea119313b3a9276f37f3db1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecad0c2519b2e035bea119313b3a9276f37f3db1/comments", "author": null, "committer": null, "parents": [{"sha": "7516c36883bb2326d8e0c02f5e9415bd66014819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7516c36883bb2326d8e0c02f5e9415bd66014819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7516c36883bb2326d8e0c02f5e9415bd66014819"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "6685156edc02c8d7ddce888c54cb4a4abd7cb894", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecad0c2519b2e035bea119313b3a9276f37f3db1/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecad0c2519b2e035bea119313b3a9276f37f3db1/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=ecad0c2519b2e035bea119313b3a9276f37f3db1", "patch": "@@ -4159,9 +4159,6 @@ Bindings::traverse(Traverse* traverse, bool is_global)\n \t      if (t != NULL\n \t\t  && Type::traverse(t, traverse) == TRAVERSE_EXIT)\n \t\treturn TRAVERSE_EXIT;\n-\t    }\n-\t  if ((traverse_mask & Traverse::traverse_expressions) != 0)\n-\t    {\n \t      if (p->const_value()->traverse_expression(traverse)\n \t\t  == TRAVERSE_EXIT)\n \t\treturn TRAVERSE_EXIT;\n@@ -4188,7 +4185,8 @@ Bindings::traverse(Traverse* traverse, bool is_global)\n \t\treturn TRAVERSE_EXIT;\n \t    }\n \t  if (p->is_variable()\n-\t      && (traverse_mask & Traverse::traverse_expressions) != 0)\n+\t      && ((traverse_mask & Traverse::traverse_types) != 0\n+\t\t  || (traverse_mask & Traverse::traverse_expressions) != 0))\n \t    {\n \t      if (p->var_value()->traverse_expression(traverse)\n \t\t  == TRAVERSE_EXIT)"}, {"sha": "ef34bba174bd48cc1480a512c9619a70edf164f4", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecad0c2519b2e035bea119313b3a9276f37f3db1/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecad0c2519b2e035bea119313b3a9276f37f3db1/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=ecad0c2519b2e035bea119313b3a9276f37f3db1", "patch": "@@ -108,7 +108,8 @@ Statement::traverse_expression_list(Traverse* traverse,\n {\n   if (expr_list == NULL)\n     return TRAVERSE_CONTINUE;\n-  if ((traverse->traverse_mask() & Traverse::traverse_expressions) == 0)\n+  if ((traverse->traverse_mask()\n+       & (Traverse::traverse_types | Traverse::traverse_expressions)) == 0)\n     return TRAVERSE_CONTINUE;\n   return expr_list->traverse(traverse);\n }\n@@ -3010,7 +3011,8 @@ int\n Case_clauses::Case_clause::traverse(Traverse* traverse)\n {\n   if (this->cases_ != NULL\n-      && (traverse->traverse_mask() & Traverse::traverse_expressions) != 0)\n+      && (traverse->traverse_mask()\n+\t  & (Traverse::traverse_types | Traverse::traverse_expressions)) != 0)\n     {\n       if (this->cases_->traverse(traverse) == TRAVERSE_EXIT)\n \treturn TRAVERSE_EXIT;\n@@ -3941,7 +3943,8 @@ int\n Select_clauses::Select_clause::traverse(Traverse* traverse)\n {\n   if (!this->is_lowered_\n-      && (traverse->traverse_mask() & Traverse::traverse_expressions) != 0)\n+      && (traverse->traverse_mask()\n+\t  & (Traverse::traverse_types | Traverse::traverse_expressions)) != 0)\n     {\n       if (this->channel_ != NULL)\n \t{"}]}