{"sha": "ddebdfebad723879a1ff8ee180c791326acd4507", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRlYmRmZWJhZDcyMzg3OWExZmY4ZWUxODBjNzkxMzI2YWNkNDUwNw==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2002-07-19T01:08:43Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2002-07-19T01:08:43Z"}, "message": "Makefile.am: Add SH support.\n\n\t* Makefile.am: Add SH support.\n\t* Makefile.in: Regenerate.\n\t* configure.in (sh-*-linux*, sh[34]*-*-linux*): Add target.\n\t* configure: Regenerate.\n\t* include/ffi.h.in: Add SH support.\n\t* src/sh/ffi.c: New file.\n\t* src/sh/sysv.S: New file.\n\t* src/types.c: Add SH support.\n\nFrom-SVN: r55574", "tree": {"sha": "ecf47f93db6b60de13f358403f95542b017921f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecf47f93db6b60de13f358403f95542b017921f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddebdfebad723879a1ff8ee180c791326acd4507", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddebdfebad723879a1ff8ee180c791326acd4507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddebdfebad723879a1ff8ee180c791326acd4507", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddebdfebad723879a1ff8ee180c791326acd4507/comments", "author": null, "committer": null, "parents": [{"sha": "7e31e4ae78d591684ab93271947be3b8f3f60f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e31e4ae78d591684ab93271947be3b8f3f60f27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e31e4ae78d591684ab93271947be3b8f3f60f27"}], "stats": {"total": 1594, "additions": 1526, "deletions": 68}, "files": [{"sha": "ee4e9b873b6c66b61c2daca5013abb994f8e2436", "filename": "libffi/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=ddebdfebad723879a1ff8ee180c791326acd4507", "patch": "@@ -1,3 +1,14 @@\n+2002-07-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* Makefile.am: Add SH support.\n+\t* Makefile.in: Regenerate.\n+\t* configure.in (sh-*-linux*, sh[34]*-*-linux*): Add target.\n+\t* configure: Regenerate.\n+\t* include/ffi.h.in: Add SH support.\n+\t* src/sh/ffi.c: New file.\n+\t* src/sh/sysv.S: New file.\n+\t* src/types.c: Add SH support.\n+\n 2002-07-16  Bo Thorsen  <bo@suse.de>\n \n \t* src/x86/ffi64.c: New file that adds x86-64 support."}, {"sha": "cafeab71e3a4632b18c3c02f45730e1ca0d229e2", "filename": "libffi/Makefile.am", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=ddebdfebad723879a1ff8ee180c791326acd4507", "patch": "@@ -17,7 +17,8 @@ EXTRA_DIST = LICENSE ChangeLog.v1 src/mips/ffi.c src/mips/n32.S \\\n \t\tsrc/powerpc/darwin.S src/powerpc/aix.S \\\n \t\tsrc/powerpc/darwin_closure.S src/powerpc/aix_closures.S \\\n \t\tsrc/arm/ffi.c src/arm/sysv.S \\\n-\t\tsrc/s390/ffi.c src/s390/sysv.S\n+\t\tsrc/s390/ffi.c src/s390/sysv.S \\\n+\t\tsrc/sh/ffi.c src/sh/sysv.S\n \n VPATH = @srcdir@:@srcdir@/src:@srcdir@/src/@TARGETDIR@\n \n@@ -108,6 +109,7 @@ TARGET_SRC_POWERPC_DARWIN = src/powerpc/ffi_darwin.c src/powerpc/darwin.S src/po\n TARGET_SRC_ARM =  src/arm/sysv.S src/arm/ffi.c\n TARGET_SRC_S390 =  src/s390/sysv.S src/s390/ffi.c\n TARGET_SRC_X86_64 = src/x86/ffi64.c src/x86/unix64.S src/x86/ffi.c src/x86/sysv.S\n+TARGET_SRC_SH =  src/sh/sysv.S src/sh/ffi.c\n \n ##libffi_la_SOURCES = src/debug.c src/prep_cif.c src/types.c $(TARGET_SRC_@TARGET@)\n ## Work around automake deficiency\n@@ -173,6 +175,10 @@ if X86_64\n libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_X86_64)\n libffi_convenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_X86_64)\n endif\n+if SH\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_SH)\n+libfficonvenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_SH)\n+endif\n \n AM_CFLAGS = -fexceptions\n "}, {"sha": "47d1353b2c29ea8ef8673b12f0f9aa257234e884", "filename": "libffi/Makefile.in", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=ddebdfebad723879a1ff8ee180c791326acd4507", "patch": "@@ -98,7 +98,8 @@ EXTRA_DIST = LICENSE ChangeLog.v1 src/mips/ffi.c src/mips/n32.S \\\n \t\tsrc/powerpc/darwin.S src/powerpc/aix.S \\\n \t\tsrc/powerpc/darwin_closure.S src/powerpc/aix_closures.S \\\n \t\tsrc/arm/ffi.c src/arm/sysv.S \\\n-\t\tsrc/s390/ffi.c src/s390/sysv.S\n+\t\tsrc/s390/ffi.c src/s390/sysv.S \\\n+\t\tsrc/sh/ffi.c src/sh/sysv.S\n \n \n VPATH = @srcdir@:@srcdir@/src:@srcdir@/src/@TARGETDIR@\n@@ -179,6 +180,7 @@ TARGET_SRC_POWERPC_DARWIN = src/powerpc/ffi_darwin.c src/powerpc/darwin.S src/po\n TARGET_SRC_ARM = src/arm/sysv.S src/arm/ffi.c\n TARGET_SRC_S390 = src/s390/sysv.S src/s390/ffi.c\n TARGET_SRC_X86_64 = src/x86/ffi64.c src/x86/unix64.S src/x86/ffi.c src/x86/sysv.S\n+TARGET_SRC_SH = src/sh/sysv.S src/sh/ffi.c\n \n libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c \\\n \t\tsrc/raw_api.c src/java_raw_api.c\n@@ -198,6 +200,7 @@ libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c \\\n @ARM_TRUE@libffi_la_SOURCES = @ARM_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)\n @S390_TRUE@libffi_la_SOURCES = @S390_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_S390)\n @X86_64_TRUE@libffi_la_SOURCES = @X86_64_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_X86_64)\n+@SH_TRUE@libffi_la_SOURCES = @SH_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_SH)\n @MIPS_GCC_TRUE@libffi_convenience_la_SOURCES = @MIPS_GCC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_GCC)\n @MIPS_LINUX_TRUE@libffi_convenience_la_SOURCES = @MIPS_LINUX_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_LINUX)\n @MIPS_SGI_TRUE@libffi_convenience_la_SOURCES = @MIPS_SGI_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_SGI)\n@@ -213,6 +216,7 @@ libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c \\\n @ARM_TRUE@libffi_convenience_la_SOURCES = @ARM_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)\n @S390_TRUE@libffi_convenience_la_SOURCES = @S390_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_S390)\n @X86_64_TRUE@libffi_convenience_la_SOURCES = @X86_64_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_X86_64)\n+@SH_TRUE@libffi_convenience_la_SOURCES = @SH_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_SH)\n \n AM_CFLAGS = -fexceptions\n \n@@ -261,6 +265,9 @@ libffi_convenience_la_LIBADD =\n @S390_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @S390_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @S390_TRUE@src/s390/sysv.lo src/s390/ffi.lo\n+@SH_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@SH_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@SH_TRUE@src/sh/sysv.lo src/sh/ffi.lo\n @X86_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @X86_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @X86_TRUE@src/x86/ffi.lo src/x86/sysv.lo\n@@ -311,6 +318,8 @@ libffi_la_LIBADD =\n @X86_64_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @X86_64_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @X86_64_TRUE@src/x86/ffi.lo src/x86/sysv.lo src/x86/unix64.lo src/x86/ffi64.lo\n+@SH_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo src/types.lo \\\n+@SH_TRUE@src/raw_api.lo src/java_raw_api.lo src/sh/sysv.lo src/sh/ffi.lo\n @X86_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo src/types.lo \\\n @X86_TRUE@src/raw_api.lo src/java_raw_api.lo src/x86/ffi.lo \\\n @X86_TRUE@src/x86/sysv.lo"}, {"sha": "0926aa98b7ff99a56b2bde2568c40cbdab609453", "filename": "libffi/configure", "status": "modified", "additions": 78, "deletions": 66, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=ddebdfebad723879a1ff8ee180c791326acd4507", "patch": "@@ -2396,6 +2396,7 @@ rs6000-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n arm*-*-linux-*) TARGET=ARM; TARGETDIR=arm;;\n s390-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n x86_64-*-linux*) TARGET=X86_64; TARGETDIR=x86;;\n+sh-*-linux* | sh34*-*-linux*) TARGET=SH; TARGETDIR=sh;;\n esac\n \n if test $TARGETDIR = unknown; then\n@@ -2538,12 +2539,21 @@ else\n   X86_64_FALSE=\n fi\n \n+\n+if test x$TARGET = xSH; then\n+  SH_TRUE=\n+  SH_FALSE='#'\n+else\n+  SH_TRUE='#'\n+  SH_FALSE=\n+fi\n+\n if test x$TARGET = xMIPS_LINUX; then\n   TARGET=MIPS\n fi\n \n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:2547: checking how to run the C preprocessor\" >&5\n+echo \"configure:2557: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -2558,13 +2568,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 2562 \"configure\"\n+#line 2572 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2568: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2578: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -2575,13 +2585,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 2579 \"configure\"\n+#line 2589 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2585: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2595: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -2592,13 +2602,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -nologo -E\"\n   cat > conftest.$ac_ext <<EOF\n-#line 2596 \"configure\"\n+#line 2606 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2602: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2612: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -2623,20 +2633,20 @@ fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:2627: checking for ANSI C header files\" >&5\n+echo \"configure:2637: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2632 \"configure\"\n+#line 2642 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2640: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2650: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2653,7 +2663,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 2657 \"configure\"\n+#line 2667 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -2671,7 +2681,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 2675 \"configure\"\n+#line 2685 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -2692,7 +2702,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2696 \"configure\"\n+#line 2706 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -2703,7 +2713,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:2707: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2717: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -2729,12 +2739,12 @@ fi\n for ac_func in memcpy\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2733: checking for $ac_func\" >&5\n+echo \"configure:2743: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2738 \"configure\"\n+#line 2748 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2757,7 +2767,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2761: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2771: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2784,19 +2794,19 @@ done\n # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n # for constant arguments.  Useless!\n echo $ac_n \"checking for working alloca.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2788: checking for working alloca.h\" >&5\n+echo \"configure:2798: checking for working alloca.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_alloca_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2793 \"configure\"\n+#line 2803 \"configure\"\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n-if { (eval echo configure:2800: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2810: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_header_alloca_h=yes\n else\n@@ -2817,12 +2827,12 @@ EOF\n fi\n \n echo $ac_n \"checking for alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:2821: checking for alloca\" >&5\n+echo \"configure:2831: checking for alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_alloca_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2826 \"configure\"\n+#line 2836 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef __GNUC__\n@@ -2850,7 +2860,7 @@ int main() {\n char *p = (char *) alloca(1);\n ; return 0; }\n EOF\n-if { (eval echo configure:2854: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2864: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_func_alloca_works=yes\n else\n@@ -2882,12 +2892,12 @@ EOF\n \n \n echo $ac_n \"checking whether alloca needs Cray hooks\"\"... $ac_c\" 1>&6\n-echo \"configure:2886: checking whether alloca needs Cray hooks\" >&5\n+echo \"configure:2896: checking whether alloca needs Cray hooks\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_os_cray'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2891 \"configure\"\n+#line 2901 \"configure\"\n #include \"confdefs.h\"\n #if defined(CRAY) && ! defined(CRAY2)\n webecray\n@@ -2912,12 +2922,12 @@ echo \"$ac_t\"\"$ac_cv_os_cray\" 1>&6\n if test $ac_cv_os_cray = yes; then\n for ac_func in _getb67 GETB67 getb67; do\n   echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2916: checking for $ac_func\" >&5\n+echo \"configure:2926: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2921 \"configure\"\n+#line 2931 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2940,7 +2950,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2944: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2954: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2967,15 +2977,15 @@ done\n fi\n \n echo $ac_n \"checking stack direction for C alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:2971: checking stack direction for C alloca\" >&5\n+echo \"configure:2981: checking stack direction for C alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stack_direction'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_c_stack_direction=0\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2979 \"configure\"\n+#line 2989 \"configure\"\n #include \"confdefs.h\"\n find_stack_direction ()\n {\n@@ -2994,7 +3004,7 @@ main ()\n   exit (find_stack_direction() < 0);\n }\n EOF\n-if { (eval echo configure:2998: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3008: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_stack_direction=1\n else\n@@ -3017,13 +3027,13 @@ fi\n \n \n echo $ac_n \"checking size of short\"\"... $ac_c\" 1>&6\n-echo \"configure:3021: checking size of short\" >&5\n+echo \"configure:3031: checking size of short\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_short'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3027 \"configure\"\n+#line 3037 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3033,7 +3043,7 @@ int main() {\n switch (0) case 0: case (sizeof (short) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3037: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3047: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_short=$ac_size\n else\n@@ -3056,13 +3066,13 @@ EOF\n \n \n echo $ac_n \"checking size of int\"\"... $ac_c\" 1>&6\n-echo \"configure:3060: checking size of int\" >&5\n+echo \"configure:3070: checking size of int\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_int'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3066 \"configure\"\n+#line 3076 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3072,7 +3082,7 @@ int main() {\n switch (0) case 0: case (sizeof (int) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3076: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3086: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_int=$ac_size\n else\n@@ -3095,13 +3105,13 @@ EOF\n \n \n echo $ac_n \"checking size of long\"\"... $ac_c\" 1>&6\n-echo \"configure:3099: checking size of long\" >&5\n+echo \"configure:3109: checking size of long\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3105 \"configure\"\n+#line 3115 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3111,7 +3121,7 @@ int main() {\n switch (0) case 0: case (sizeof (long) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3115: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3125: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_long=$ac_size\n else\n@@ -3134,13 +3144,13 @@ EOF\n \n \n echo $ac_n \"checking size of long long\"\"... $ac_c\" 1>&6\n-echo \"configure:3138: checking size of long long\" >&5\n+echo \"configure:3148: checking size of long long\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long_long'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3144 \"configure\"\n+#line 3154 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3150,7 +3160,7 @@ int main() {\n switch (0) case 0: case (sizeof (long long) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3154: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3164: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_long_long=$ac_size\n else\n@@ -3173,13 +3183,13 @@ EOF\n \n \n echo $ac_n \"checking size of float\"\"... $ac_c\" 1>&6\n-echo \"configure:3177: checking size of float\" >&5\n+echo \"configure:3187: checking size of float\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_float'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3183 \"configure\"\n+#line 3193 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3189,7 +3199,7 @@ int main() {\n switch (0) case 0: case (sizeof (float) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3193: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3203: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_float=$ac_size\n else\n@@ -3212,13 +3222,13 @@ EOF\n \n \n echo $ac_n \"checking size of double\"\"... $ac_c\" 1>&6\n-echo \"configure:3216: checking size of double\" >&5\n+echo \"configure:3226: checking size of double\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_double'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3222 \"configure\"\n+#line 3232 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3228,7 +3238,7 @@ int main() {\n switch (0) case 0: case (sizeof (double) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3232: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3242: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_double=$ac_size\n else\n@@ -3251,13 +3261,13 @@ EOF\n \n \n echo $ac_n \"checking size of long double\"\"... $ac_c\" 1>&6\n-echo \"configure:3255: checking size of long double\" >&5\n+echo \"configure:3265: checking size of long double\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long_double'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3261 \"configure\"\n+#line 3271 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3267,7 +3277,7 @@ int main() {\n switch (0) case 0: case (sizeof (long double) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3271: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3281: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_long_double=$ac_size\n else\n@@ -3291,13 +3301,13 @@ EOF\n \n \n echo $ac_n \"checking size of void *\"\"... $ac_c\" 1>&6\n-echo \"configure:3295: checking size of void *\" >&5\n+echo \"configure:3305: checking size of void *\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_void_p'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3301 \"configure\"\n+#line 3311 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3307,7 +3317,7 @@ int main() {\n switch (0) case 0: case (sizeof (void *) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3311: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3321: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_void_p=$ac_size\n else\n@@ -3330,14 +3340,14 @@ EOF\n \n \n echo $ac_n \"checking whether byte ordering is bigendian\"\"... $ac_c\" 1>&6\n-echo \"configure:3334: checking whether byte ordering is bigendian\" >&5\n+echo \"configure:3344: checking whether byte ordering is bigendian\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_bigendian'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_cv_c_bigendian=unknown\n # See if sys/param.h defines the BYTE_ORDER macro.\n cat > conftest.$ac_ext <<EOF\n-#line 3341 \"configure\"\n+#line 3351 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/param.h>\n@@ -3348,11 +3358,11 @@ int main() {\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:3352: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3362: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   # It does; now see whether it defined to BIG_ENDIAN or not.\n cat > conftest.$ac_ext <<EOF\n-#line 3356 \"configure\"\n+#line 3366 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/param.h>\n@@ -3363,7 +3373,7 @@ int main() {\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:3367: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3377: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_bigendian=yes\n else\n@@ -3383,7 +3393,7 @@ if test \"$cross_compiling\" = yes; then\n    echo $ac_n \"cross-compiling... \" 2>&6 \n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3387 \"configure\"\n+#line 3397 \"configure\"\n #include \"confdefs.h\"\n main () {\n   /* Are we little or big endian?  From Harbison&Steele.  */\n@@ -3396,7 +3406,7 @@ main () {\n   exit (u.c[sizeof (long) - 1] == 1);\n }\n EOF\n-if { (eval echo configure:3400: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3410: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_bigendian=no\n else\n@@ -3414,7 +3424,7 @@ fi\n echo \"$ac_t\"\"$ac_cv_c_bigendian\" 1>&6\n if test $ac_cv_c_bigendian = unknown; then\n echo $ac_n \"checking to probe for byte ordering\"\"... $ac_c\" 1>&6\n-echo \"configure:3418: checking to probe for byte ordering\" >&5\n+echo \"configure:3428: checking to probe for byte ordering\" >&5\n \n cat >conftest.c <<EOF\n short ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n@@ -3464,7 +3474,7 @@ fi\n \n if test x$TARGET = xSPARC; then\n     echo $ac_n \"checking assembler and linker support unaligned pc related relocs\"\"... $ac_c\" 1>&6\n-echo \"configure:3468: checking assembler and linker support unaligned pc related relocs\" >&5\n+echo \"configure:3478: checking assembler and linker support unaligned pc related relocs\" >&5\n if eval \"test \\\"`echo '$''{'libffi_cv_as_sparc_ua_pcrel'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -3474,14 +3484,14 @@ else\n \tCFLAGS=\"$CFLAGS -fpic\"\n \tLDFLAGS=\"$LDFLAGS -shared\"\n \tcat > conftest.$ac_ext <<EOF\n-#line 3478 \"configure\"\n+#line 3488 \"configure\"\n #include \"confdefs.h\"\n asm (\".text; foo: nop; .data; .align 4; .byte 0; .uaword %r_disp32(foo); .text\");\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3485: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3495: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   libffi_cv_as_sparc_ua_pcrel=yes\n else\n@@ -3768,6 +3778,8 @@ s%@S390_TRUE@%$S390_TRUE%g\n s%@S390_FALSE@%$S390_FALSE%g\n s%@X86_64_TRUE@%$X86_64_TRUE%g\n s%@X86_64_FALSE@%$X86_64_FALSE%g\n+s%@SH_TRUE@%$SH_TRUE%g\n+s%@SH_FALSE@%$SH_FALSE%g\n s%@CPP@%$CPP%g\n s%@ALLOCA@%$ALLOCA%g\n s%@TARGET@%$TARGET%g"}, {"sha": "8db663433bcbd7fe4a880657625aaed45eca80d1", "filename": "libffi/configure.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.in?ref=ddebdfebad723879a1ff8ee180c791326acd4507", "patch": "@@ -71,6 +71,7 @@ rs6000-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n arm*-*-linux-*) TARGET=ARM; TARGETDIR=arm;;\n s390-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n x86_64-*-linux*) TARGET=X86_64; TARGETDIR=x86;;\n+sh-*-linux* | sh[34]*-*-linux*) TARGET=SH; TARGETDIR=sh;;\n esac\n \n if test $TARGETDIR = unknown; then\n@@ -92,6 +93,7 @@ AM_CONDITIONAL(POWERPC_DARWIN, test x$TARGET = xPOWERPC_DARWIN)\n AM_CONDITIONAL(ARM, test x$TARGET = xARM)\n AM_CONDITIONAL(S390, test x$TARGET = xS390)\n AM_CONDITIONAL(X86_64, test x$TARGET = xX86_64)\n+AM_CONDITIONAL(SH, test x$TARGET = xSH)\n \n if test x$TARGET = xMIPS_LINUX; then\n   TARGET=MIPS"}, {"sha": "8fc37f56f4ee3c2178e5157c78cc3effb8f990ba", "filename": "libffi/include/ffi.h.in", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Finclude%2Fffi.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Finclude%2Fffi.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi.h.in?ref=ddebdfebad723879a1ff8ee180c791326acd4507", "patch": "@@ -262,6 +262,12 @@ typedef enum ffi_abi {\n   FFI_DEFAULT_ABI = FFI_SYSV,\n #endif\n \n+  /* ---- SuperH ------------------- */\n+#ifdef SH\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+#endif\n+\n   /* Leave this for debugging purposes */\n   FFI_LAST_ABI\n \n@@ -435,6 +441,12 @@ struct ffi_ia64_trampoline_struct {\n #define FFI_TRAMPOLINE_SIZE 24 /* see struct below */ \n #define FFI_NATIVE_RAW_API 0\n \n+#elif defined(SH)\n+\n+#define FFI_CLOSURES 1\n+#define FFI_TRAMPOLINE_SIZE 16\n+#define FFI_NATIVE_RAW_API 0\n+\n #else \n \n #define FFI_CLOSURES 0"}, {"sha": "eb594460dd23ac333841994d6d3706c6d1bf3f40", "filename": "libffi/src/sh/ffi.c", "status": "added", "additions": 722, "deletions": 0, "changes": 722, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fsrc%2Fsh%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fsrc%2Fsh%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh%2Fffi.c?ref=ddebdfebad723879a1ff8ee180c791326acd4507", "patch": "@@ -0,0 +1,722 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c - Copyright (c) 2002 Kaz Kojima\n+   \n+   SuperH Foreign Function Interface \n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#include <stdlib.h>\n+\n+#define NGREGARG 4\n+#if defined(__SH4__)\n+#define NFREGARG 8\n+#endif\n+\n+#if defined(__HITACHI__)\n+#define STRUCT_VALUE_ADDRESS_WITH_ARG 1\n+#else\n+#define STRUCT_VALUE_ADDRESS_WITH_ARG 0\n+#endif\n+\n+/* If the structure has essentialy an unique element, return its type.  */\n+static int\n+simple_type (ffi_type *arg)\n+{\n+  if (arg->type != FFI_TYPE_STRUCT)\n+    return arg->type;\n+  else if (arg->elements[1])\n+    return FFI_TYPE_STRUCT;\n+\n+  return simple_type (arg->elements[0]);\n+}\n+\n+static int\n+return_type (ffi_type *arg)\n+{\n+  unsigned short type;\n+\n+  if (arg->type != FFI_TYPE_STRUCT)\n+    return arg->type;\n+\n+  type = simple_type (arg->elements[0]);\n+  if (! arg->elements[1])\n+    {\n+      switch (type)\n+\t{\n+\tcase FFI_TYPE_SINT8:\n+\tcase FFI_TYPE_UINT8:\n+\tcase FFI_TYPE_SINT16:\n+\tcase FFI_TYPE_UINT16:\n+\tcase FFI_TYPE_SINT32:\n+\tcase FFI_TYPE_UINT32:\n+\t  return FFI_TYPE_INT;\n+\n+\tdefault:\n+\t  return type;\n+\t}\n+    }\n+\n+  /* gcc uses r0/r1 pair for some kind of structures.  */\n+  if (arg->size <= 2 * sizeof (int))\n+    {\n+      int i = 0;\n+      ffi_type *e;\n+\n+      while ((e = arg->elements[i++]))\n+\t{\n+\t  type = simple_type (e);\n+\t  switch (type)\n+\t    {\n+\t    case FFI_TYPE_SINT32:\n+\t    case FFI_TYPE_UINT32:\n+\t    case FFI_TYPE_INT:\n+\t    case FFI_TYPE_FLOAT:\n+\t      return FFI_TYPE_UINT64;\n+\n+\t    default:\n+\t      break;\n+\t    }\n+\t}\n+    }\n+\n+  return FFI_TYPE_STRUCT;\n+}\n+\n+/* ffi_prep_args is called by the assembly routine once stack space\n+   has been allocated for the function's arguments */\n+\n+/*@-exportheader@*/\n+void ffi_prep_args(char *stack, extended_cif *ecif)\n+/*@=exportheader@*/\n+{\n+  register unsigned int i;\n+  register int tmp;\n+  register unsigned int avn;\n+  register void **p_argv;\n+  register char *argp;\n+  register ffi_type **p_arg;\n+  int greg, ireg;\n+#if defined(__SH4__)\n+  int freg = 0;\n+#endif\n+\n+  tmp = 0;\n+  argp = stack;\n+\n+  if (return_type (ecif->cif->rtype) == FFI_TYPE_STRUCT)\n+    {\n+      *(void **) argp = ecif->rvalue;\n+      argp += 4;\n+      ireg = STRUCT_VALUE_ADDRESS_WITH_ARG ? 1 : 0;\n+    }\n+  else\n+    ireg = 0;\n+\n+  /* Set arguments for registers.  */\n+  greg = ireg;\n+  avn = ecif->cif->nargs;\n+  p_argv = ecif->avalue;\n+\n+  for (i = 0, p_arg = ecif->cif->arg_types; i < avn; i++, p_arg++, p_argv++)\n+    {\n+      size_t z;\n+\n+      z = (*p_arg)->size;\n+      if (z < sizeof(int))\n+\t{\n+\t  if (greg++ >= NGREGARG)\n+\t    continue;\n+\n+\t  z = sizeof(int);\n+\t  switch ((*p_arg)->type)\n+\t    {\n+\t    case FFI_TYPE_SINT8:\n+\t      *(signed int *) argp = (signed int)*(SINT8 *)(* p_argv);\n+\t      break;\n+  \n+\t    case FFI_TYPE_UINT8:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT8 *)(* p_argv);\n+\t      break;\n+  \n+\t    case FFI_TYPE_SINT16:\n+\t      *(signed int *) argp = (signed int)*(SINT16 *)(* p_argv);\n+\t      break;\n+  \n+\t    case FFI_TYPE_UINT16:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT16 *)(* p_argv);\n+\t      break;\n+  \n+\t    case FFI_TYPE_STRUCT:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t      break;\n+\n+\t    default:\n+\t      FFI_ASSERT(0);\n+\t    }\n+\t  argp += z;\n+\t}\n+      else if (z == sizeof(int))\n+\t{\n+#if defined(__SH4__)\n+\t  if ((*p_arg)->type == FFI_TYPE_FLOAT)\n+\t    {\n+\t      if (freg++ >= NFREGARG)\n+\t\tcontinue;\n+\t    }\n+\t  else\n+#endif\n+\t    {\n+\t      if (greg++ >= NGREGARG)\n+\t\tcontinue;\n+\t    }\n+\t  *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t  argp += z;\n+\t}\n+#if defined(__SH4__)\n+      else if ((*p_arg)->type == FFI_TYPE_DOUBLE)\n+\t{\n+\t  if (freg + 1 >= NFREGARG)\n+\t    continue;\n+\t  freg = (freg + 1) & ~1;\n+\t  freg += 2;\n+\t  memcpy (argp, *p_argv, z);\n+\t  argp += z;\n+\t}\n+#endif\n+      else\n+\t{\n+\t  int n = (z + sizeof (int) - 1) / sizeof (int);\n+#if defined(__SH4__)\n+\t  if (greg + n - 1 >= NGREGARG)\n+\t    continue;\n+\t  greg += n;\n+#else\n+\t  if (greg >= NGREGARG)\n+\t    continue;\n+\t  else if (greg + n - 1 >= NGREGARG)\n+\t    greg = NGREGARG;\n+\t  else\n+\t    greg += n;\n+#endif\n+\t  memcpy (argp, *p_argv, z);\n+\t  argp += z;\n+\t}\n+    }\n+\n+  /* Set arguments on stack.  */\n+  greg = ireg;\n+#if defined(__SH4__)\n+  freg = 0;\n+#endif\n+  p_argv = ecif->avalue;\n+\n+  for (i = 0, p_arg = ecif->cif->arg_types; i < avn; i++, p_arg++, p_argv++)\n+    {\n+      size_t z;\n+\n+      z = (*p_arg)->size;\n+      if (z < sizeof(int))\n+\t{\n+\t  if (greg++ < NGREGARG)\n+\t    continue;\n+\n+\t  z = sizeof(int);\n+\t  switch ((*p_arg)->type)\n+\t    {\n+\t    case FFI_TYPE_SINT8:\n+\t      *(signed int *) argp = (signed int)*(SINT8 *)(* p_argv);\n+\t      break;\n+  \n+\t    case FFI_TYPE_UINT8:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT8 *)(* p_argv);\n+\t      break;\n+  \n+\t    case FFI_TYPE_SINT16:\n+\t      *(signed int *) argp = (signed int)*(SINT16 *)(* p_argv);\n+\t      break;\n+  \n+\t    case FFI_TYPE_UINT16:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT16 *)(* p_argv);\n+\t      break;\n+  \n+\t    case FFI_TYPE_STRUCT:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t      break;\n+\n+\t    default:\n+\t      FFI_ASSERT(0);\n+\t    }\n+\t  argp += z;\n+\t}\n+      else if (z == sizeof(int))\n+\t{\n+#if defined(__SH4__)\n+\t  if ((*p_arg)->type == FFI_TYPE_FLOAT)\n+\t    {\n+\t      if (freg++ < NFREGARG)\n+\t\tcontinue;\n+\t    }\n+\t  else\n+#endif\n+\t    {\n+\t      if (greg++ < NGREGARG)\n+\t\tcontinue;\n+\t    }\n+\t  *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t  argp += z;\n+\t}\n+#if defined(__SH4__)\n+      else if ((*p_arg)->type == FFI_TYPE_DOUBLE)\n+\t{\n+\t  if (freg + 1 < NFREGARG)\n+\t    {\n+\t      freg = (freg + 1) & ~1;\n+\t      freg += 2;\n+\t      continue;\n+\t    }\n+\t  memcpy (argp, *p_argv, z);\n+\t  argp += z;\n+\t}\n+#endif\n+      else\n+\t{\n+\t  int n = (z + sizeof (int) - 1) / sizeof (int);\n+\t  if (greg + n - 1 < NGREGARG)\n+\t    {\n+\t      greg += n;\n+\t      continue;\n+\t    }\n+#if (! defined(__SH4__))\n+\t  else if (greg < NGREGARG)\n+\t    {\n+\t      greg = NGREGARG;\n+\t      continue;\n+\t    }\n+#endif\n+\t  memcpy (argp, *p_argv, z);\n+\t  argp += z;\n+\t}\n+    }\n+\n+  return;\n+}\n+\n+/* Perform machine dependent cif processing */\n+ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n+{\n+  int i, j;\n+  int size, type;\n+  int n, m;\n+  int greg;\n+#if defined(__SH4__)\n+  int freg = 0;\n+#endif\n+\n+  cif->flags = 0;\n+\n+  greg = ((return_type (cif->rtype) == FFI_TYPE_STRUCT) &&\n+\t  STRUCT_VALUE_ADDRESS_WITH_ARG) ? 1 : 0;\n+\n+#if defined(__SH4__)\n+  for (i = j = 0; i < cif->nargs && j < 12; i++)\n+    {\n+      type = (cif->arg_types)[i]->type;\n+      switch (type)\n+\t{\n+\tcase FFI_TYPE_FLOAT:\n+\t  if (freg >= NFREGARG)\n+\t    continue;\n+\t  freg++;\n+\t  cif->flags += ((cif->arg_types)[i]->type) << (2 * j);\n+\t  j++;\n+\t  break;\n+\n+\tcase FFI_TYPE_DOUBLE:\n+\t  if ((freg + 1) >= NFREGARG)\n+\t    continue;\n+\t  freg = (freg + 1) & ~1;\n+\t  freg += 2;\n+\t  cif->flags += ((cif->arg_types)[i]->type) << (2 * j);\n+\t  j++;\n+\t  break;\n+\t      \n+\tdefault:\n+\t  size = (cif->arg_types)[i]->size;\n+\t  n = (size + sizeof (int) - 1) / sizeof (int);\n+\t  if (greg + n - 1 >= NGREGARG)\n+\t\tcontinue;\n+\t  greg += n;\n+\t  for (m = 0; m < n; m++)\n+\t    cif->flags += FFI_TYPE_INT << (2 * j++);\n+\t  break;\n+\t}\n+    }\n+#else\n+  for (i = j = 0; i < cif->nargs && j < 4; i++)\n+    {\n+      size = (cif->arg_types)[i]->size;\n+      n = (size + sizeof (int) - 1) / sizeof (int);\n+      if (greg >= NGREGARG)\n+\tcontinue;\n+      else if (greg + n - 1 >= NGREGARG)\n+\tgreg = NGREGARG;\n+      else\n+\tgreg += n;\n+      for (m = 0; m < n; m++)\n+        cif->flags += FFI_TYPE_INT << (2 * j++);\n+    }\n+#endif\n+\n+  /* Set the return type flag */\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_STRUCT:\n+      cif->flags += (unsigned) (return_type (cif->rtype)) << 24;\n+      break;\n+\n+    case FFI_TYPE_VOID:\n+    case FFI_TYPE_FLOAT:\n+    case FFI_TYPE_DOUBLE:\n+    case FFI_TYPE_SINT64:\n+    case FFI_TYPE_UINT64:\n+      cif->flags += (unsigned) cif->rtype->type << 24;\n+      break;\n+\n+    default:\n+      cif->flags += FFI_TYPE_INT << 24;\n+      break;\n+    }\n+\n+  return FFI_OK;\n+}\n+\n+/*@-declundef@*/\n+/*@-exportheader@*/\n+extern void ffi_call_SYSV(void (*)(char *, extended_cif *), \n+\t\t\t  /*@out@*/ extended_cif *, \n+\t\t\t  unsigned, unsigned, \n+\t\t\t  /*@out@*/ unsigned *, \n+\t\t\t  void (*fn)());\n+/*@=declundef@*/\n+/*@=exportheader@*/\n+\n+void ffi_call(/*@dependent@*/ ffi_cif *cif, \n+\t      void (*fn)(), \n+\t      /*@out@*/ void *rvalue, \n+\t      /*@dependent@*/ void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return\t*/\n+  /* value address then we need to make one\t\t        */\n+\n+  if ((rvalue == NULL) && \n+      (cif->rtype->type == FFI_TYPE_STRUCT))\n+    {\n+      /*@-sysunrecog@*/\n+      ecif.rvalue = alloca(cif->rtype->size);\n+      /*@=sysunrecog@*/\n+    }\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+\n+  switch (cif->abi) \n+    {\n+    case FFI_SYSV:\n+      /*@-usedef@*/\n+      ffi_call_SYSV(ffi_prep_args, &ecif, cif->bytes, \n+\t\t    cif->flags, ecif.rvalue, fn);\n+      /*@=usedef@*/\n+      break;\n+    default:\n+      FFI_ASSERT(0);\n+      break;\n+    }\n+}\n+\n+extern void ffi_closure_SYSV (void);\n+#if defined(__SH4__)\n+extern void __ic_invalidate (void *line);\n+#endif\n+\n+ffi_status\n+ffi_prep_closure (ffi_closure* closure,\n+\t\t  ffi_cif* cif,\n+\t\t  void (*fun)(ffi_cif*, void*, void**, void*),\n+\t\t  void *user_data)\n+{\n+  unsigned int *tramp;\n+\n+  FFI_ASSERT (cif->abi == FFI_GCC_SYSV);\n+\n+  tramp = (unsigned int *) &closure->tramp[0];\n+#ifdef __LITTLE_ENDIAN__\n+  tramp[0] = 0xd301d202;\n+  tramp[1] = 0x0009422b;\n+#else\n+  tramp[0] = 0xd202d301;\n+  tramp[1] = 0x422b0009;\n+#endif\n+  *(void **) &tramp[2] = (void *)closure;          /* ctx */\n+  *(void **) &tramp[3] = (void *)ffi_closure_SYSV; /* funaddr */\n+\n+  closure->cif = cif;\n+  closure->fun = fun;\n+  closure->user_data = user_data;\n+\n+#if defined(__SH4__)\n+  /* Flush the icache.  */\n+  __ic_invalidate(&closure->tramp[0]);\n+#endif\n+\n+  return FFI_OK;\n+}\n+\n+/* Basically the trampoline invokes ffi_closure_SYSV, and on \n+ * entry, r3 holds the address of the closure.\n+ * After storing the registers that could possibly contain\n+ * parameters to be passed into the stack frame and setting\n+ * up space for a return value, ffi_closure_SYSV invokes the \n+ * following helper function to do most of the work.\n+ */\n+\n+#ifdef __LITTLE_ENDIAN__\n+#define OFS_INT8\t0\n+#define OFS_INT16\t2\n+#else\n+#define OFS_INT8\t3\n+#define OFS_INT16\t2\n+#endif\n+\n+int\n+ffi_closure_helper_SYSV (ffi_closure *closure, void *rvalue, \n+\t\t\t unsigned long *pgr, unsigned long *pfr, \n+\t\t\t unsigned long *pst)\n+{\n+  void **avalue;\n+  ffi_type **p_arg;\n+  int i, avn;\n+  int ireg, greg = 0;\n+#if defined(__SH4__)\n+  int freg = 0;\n+#endif\n+  ffi_cif *cif; \n+  double temp; \n+\n+  cif = closure->cif;\n+  avalue = alloca(cif->nargs * sizeof(void *));\n+\n+  /* Copy the caller's structure return value address so that the closure\n+     returns the data directly to the caller.  */\n+  if (cif->rtype->type == FFI_TYPE_STRUCT)\n+    {\n+      rvalue = *pgr++;\n+      ireg = STRUCT_VALUE_ADDRESS_WITH_ARG ? 1 : 0;\n+    }\n+  else\n+    ireg = 0;\n+\n+  cif = closure->cif;\n+  greg = ireg;\n+  avn = cif->nargs;\n+\n+  /* Grab the addresses of the arguments from the stack frame.  */\n+  for (i = 0, p_arg = cif->arg_types; i < avn; i++, p_arg++)\n+    {\n+      size_t z;\n+\n+      z = (*p_arg)->size;\n+      if (z < sizeof(int))\n+\t{\n+\t  if (greg++ >= NGREGARG)\n+\t    continue;\n+\n+\t  z = sizeof(int);\n+\t  switch ((*p_arg)->type)\n+\t    {\n+\t    case FFI_TYPE_SINT8:\n+\t    case FFI_TYPE_UINT8:\n+\t      avalue[i] = (((char *)pgr) + OFS_INT8);\n+\t      break;\n+  \n+\t    case FFI_TYPE_SINT16:\n+\t    case FFI_TYPE_UINT16:\n+\t      avalue[i] = (((char *)pgr) + OFS_INT16);\n+\t      break;\n+  \n+\t    case FFI_TYPE_STRUCT:\n+\t      avalue[i] = pgr;\n+\t      break;\n+\n+\t    default:\n+\t      FFI_ASSERT(0);\n+\t    }\n+\t  pgr++;\n+\t}\n+      else if (z == sizeof(int))\n+\t{\n+#if defined(__SH4__)\n+\t  if ((*p_arg)->type == FFI_TYPE_FLOAT)\n+\t    {\n+\t      if (freg++ >= NFREGARG)\n+\t\tcontinue;\n+\t      avalue[i] = pfr;\n+\t      pfr++;\n+\t    }\n+\t  else\n+#endif\n+\t    {\n+\t      if (greg++ >= NGREGARG)\n+\t\tcontinue;\n+\t      avalue[i] = pgr;\n+\t      pgr++;\n+\t    }\n+\t}\n+#if defined(__SH4__)\n+      else if ((*p_arg)->type == FFI_TYPE_DOUBLE)\n+\t{\n+\t  if (freg + 1 >= NFREGARG)\n+\t    continue;\n+\t  freg = (freg + 1) & ~1;\n+\t  freg += 2;\n+\t  avalue[i] = pfr;\n+\t  pfr += 2;\n+\t}\n+#endif\n+      else\n+\t{\n+\t  int n = (z + sizeof (int) - 1) / sizeof (int);\n+#if defined(__SH4__)\n+\t  if (greg + n - 1 >= NGREGARG)\n+\t    continue;\n+\t  greg += n;\n+#else\n+\t  if (greg >= NGREGARG)\n+\t    continue;\n+\t  else if (greg + n - 1 >= NGREGARG)\n+\t    greg = NGREGARG;\n+\t  else\n+\t    greg += n;\n+#endif\n+\t  avalue[i] = pgr;\n+\t  pgr += n;\n+\t}\n+    }\n+\n+  greg = ireg;\n+#if defined(__SH4__)\n+  freg = 0;\n+#endif\n+\n+  for (i = 0, p_arg = cif->arg_types; i < avn; i++, p_arg++)\n+    {\n+      size_t z;\n+\n+      z = (*p_arg)->size;\n+      if (z < sizeof(int))\n+\t{\n+\t  if (greg++ < NGREGARG)\n+\t    continue;\n+\n+\t  z = sizeof(int);\n+\t  switch ((*p_arg)->type)\n+\t    {\n+\t    case FFI_TYPE_SINT8:\n+\t    case FFI_TYPE_UINT8:\n+\t      avalue[i] = (((char *)pst) + OFS_INT8);\n+\t      break;\n+  \n+\t    case FFI_TYPE_SINT16:\n+\t    case FFI_TYPE_UINT16:\n+\t      avalue[i] = (((char *)pst) + OFS_INT16);\n+\t      break;\n+  \n+\t    case FFI_TYPE_STRUCT:\n+\t      avalue[i] = pst;\n+\t      break;\n+\n+\t    default:\n+\t      FFI_ASSERT(0);\n+\t    }\n+\t  pst++;\n+\t}\n+      else if (z == sizeof(int))\n+\t{\n+#if defined(__SH4__)\n+\t  if ((*p_arg)->type == FFI_TYPE_FLOAT)\n+\t    {\n+\t      if (freg++ < NFREGARG)\n+\t\tcontinue;\n+\t    }\n+\t  else\n+#endif\n+\t    {\n+\t      if (greg++ < NGREGARG)\n+\t\tcontinue;\n+\t    }\n+\t  avalue[i] = pst;\n+\t  pst++;\n+\t}\n+#if defined(__SH4__)\n+      else if ((*p_arg)->type == FFI_TYPE_DOUBLE)\n+\t{\n+\t  if (freg + 1 < NFREGARG)\n+\t    {\n+\t      freg = (freg + 1) & ~1;\n+\t      freg += 2;\n+\t      continue;\n+\t    }\n+\t  avalue[i] = pst;\n+\t  pst += 2;\n+\t}\n+#endif\n+      else\n+\t{\n+\t  int n = (z + sizeof (int) - 1) / sizeof (int);\n+\t  if (greg + n - 1 < NGREGARG)\n+\t    {\n+\t      greg += n;\n+\t      continue;\n+\t    }\n+#if (! defined(__SH4__))\n+\t  else if (greg < NGREGARG)\n+\t    {\n+\t      greg = NGREGARG;\n+\t      continue;\n+\t    }\n+#endif\n+\t  avalue[i] = pst;\n+\t  pst += n;\n+\t}\n+    }\n+\n+  (closure->fun) (cif, rvalue, avalue, closure->user_data);\n+\n+  /* Tell ffi_closure_osf how to perform return type promotions.  */\n+  return cif->rtype->type;\n+}"}, {"sha": "b6a06b8d15ed3b4668233f0dd413dcee01e54f71", "filename": "libffi/src/sh/sysv.S", "status": "added", "additions": 674, "deletions": 0, "changes": 674, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fsrc%2Fsh%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fsrc%2Fsh%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh%2Fsysv.S?ref=ddebdfebad723879a1ff8ee180c791326acd4507", "patch": "@@ -0,0 +1,674 @@\n+/* -----------------------------------------------------------------------\n+   sysv.S - Copyright (c) 2002 Kaz Kojima\n+   \n+   SuperH Foreign Function Interface \n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+#ifdef HAVE_MACHINE_ASM_H\n+#include <machine/asm.h>\n+#else\n+/* XXX these lose for some platforms, I'm sure. */\n+#define CNAME(x) x\n+#define ENTRY(x) .globl CNAME(x); .type CNAME(x),%function; CNAME(x):\n+#endif\n+\n+#if defined(__HITACHI__)\n+#define STRUCT_VALUE_ADDRESS_WITH_ARG 1\n+#else\n+#define STRUCT_VALUE_ADDRESS_WITH_ARG 0\n+#endif\n+\n+.text\n+\n+\t# r4:\tffi_prep_args\n+\t# r5:\t&ecif\n+\t# r6:\tbytes\n+\t# r7:\tflags\n+\t# sp+0: rvalue\n+\t# sp+4: fn\n+\n+\t# This assumes we are using gas.\n+ENTRY(ffi_call_SYSV)\n+#if defined(__SH4__)\n+\t# Save registers\n+\tmov.l\tr8,@-r15\n+\tmov.l\tr9,@-r15\n+\tmov.l\tr10,@-r15\n+\tmov.l\tr12,@-r15\n+\tmov.l\tr14,@-r15\n+\tsts.l\tpr,@-r15\n+\tmov\tr15,r14\n+\n+\tmov\tr6,r8\n+\tmov\tr7,r9\n+\n+\tsub\tr6,r15\n+\tadd\t#-16,r15\n+\tmov\t#~7,r0\n+\tand\tr0,r15\n+\n+\tmov\tr4,r0\n+\tjsr\t@r0\n+\t mov\tr15,r4\n+\n+\tmov\tr9,r1\n+\tshlr8\tr9\n+\tshlr8\tr9\n+\tshlr8\tr9\n+\n+\tmov\t#FFI_TYPE_STRUCT,r2\n+\tcmp/eq\tr2,r9\n+\tbf\t1f\n+#if STRUCT_VALUE_ADDRESS_WITH_ARG\n+ \tmov.l\t@r15+,r4\n+\tbra\t2f\n+\t mov\t#5,r2\n+#else\n+ \tmov.l\t@r15+,r10\n+#endif\n+1:\n+\tmov\t#4,r2\n+2:\n+\tmov\t#4,r3\n+\n+L_pass:\n+\tcmp/pl\tr8\n+\tbf\tL_call_it\n+\n+\tmov\tr1,r0\n+\tand\t#3,r0\n+\n+L_pass_d:\n+\tcmp/eq\t#FFI_TYPE_DOUBLE,r0\n+\tbf\tL_pass_f\n+\n+\tmov\tr3,r0\n+\tand\t#1,r0\n+\ttst\tr0,r0\n+\tbt\t1f\n+\tadd\t#1,r3\n+1:\n+\tmov\tr15,r0\n+\tand\t#7,r0\n+\ttst\tr0,r0\n+\tbt\t2f\n+\tadd\t#4,r15\n+2:\n+\tmov\t#12,r0\n+\tcmp/hs\tr0,r3\n+\tbt/s\t3f\n+\t shlr2\tr1\n+\tbsr\tL_pop_d\n+\t nop\n+3:\n+\tadd\t#2,r3\n+\tbra\tL_pass\n+\t add\t#-8,r8\n+\n+L_pop_d:\n+\tmov\tr3,r0\n+\tadd\tr0,r0\n+\tadd\tr3,r0\n+\tadd\t#-12,r0\n+\tbraf\tr0\n+\t nop\n+#ifdef __LITTLE_ENDIAN__\n+\tfmov.s\t@r15+,fr5\n+\trts\n+\t fmov.s\t@r15+,fr4\n+\tfmov.s\t@r15+,fr7\n+\trts\n+\t fmov.s\t@r15+,fr6\n+\tfmov.s\t@r15+,fr9\n+\trts\n+\t fmov.s\t@r15+,fr8\n+\tfmov.s\t@r15+,fr11\n+\trts\n+\t fmov.s\t@r15+,fr10\n+#else\n+\tfmov.s\t@r15+,fr4\n+\trts\n+\t fmov.s\t@r15+,fr5\n+\tfmov.s\t@r15+,fr6\n+\trts\n+\t fmov.s\t@r15+,fr7\n+\tfmov.s\t@r15+,fr8\n+\trts\n+\t fmov.s\t@r15+,fr9\n+\tfmov.s\t@r15+,fr10\n+\trts\n+\t fmov.s\t@r15+,fr11\n+#endif\n+\n+L_pass_f:\n+\tcmp/eq\t#FFI_TYPE_FLOAT,r0\n+\tbf\tL_pass_i\n+\n+\tmov\t#12,r0\n+\tcmp/hs\tr0,r3\n+\tbt/s\t2f\n+\t shlr2\tr1\n+\tbsr\tL_pop_f\n+\t nop\n+2:\n+\tadd\t#1,r3\n+\tbra\tL_pass\n+\t add\t#-4,r8\n+\n+L_pop_f:\n+\tmov\tr3,r0\n+\tshll2\tr0\n+\tadd\t#-16,r0\n+\tbraf\tr0\n+\t nop\n+#ifdef __LITTLE_ENDIAN__\n+\trts\n+\t fmov.s\t@r15+,fr5\n+\trts\n+\t fmov.s\t@r15+,fr4\n+\trts\n+\t fmov.s\t@r15+,fr7\n+\trts\n+\t fmov.s\t@r15+,fr6\n+\trts\n+\t fmov.s\t@r15+,fr9\n+\trts\n+\t fmov.s\t@r15+,fr8\n+\trts\n+\t fmov.s\t@r15+,fr11\n+\trts\n+\t fmov.s\t@r15+,fr10\n+#else\n+\trts\n+\t fmov.s\t@r15+,fr4\n+\trts\n+\t fmov.s\t@r15+,fr5\n+\trts\n+\t fmov.s\t@r15+,fr6\n+\trts\n+\t fmov.s\t@r15+,fr7\n+\trts\n+\t fmov.s\t@r15+,fr8\n+\trts\n+\t fmov.s\t@r15+,fr9\n+\trts\n+\t fmov.s\t@r15+,fr10\n+\trts\n+\t fmov.s\t@r15+,fr11\n+#endif\n+\n+L_pass_i:\n+\tcmp/eq\t#FFI_TYPE_INT,r0\n+\tbf\tL_call_it\n+\n+\tmov\t#8,r0\n+\tcmp/hs\tr0,r2\n+\tbt/s\t2f\n+\t shlr2\tr1\n+\tbsr\tL_pop_i\n+\t nop\n+2:\n+\tadd\t#1,r2\n+\tbra\tL_pass\n+\t add\t#-4,r8\n+\n+L_pop_i:\n+\tmov\tr2,r0\n+\tshll2\tr0\n+\tadd\t#-16,r0\n+\tbraf\tr0\n+\t nop\n+\trts\n+\t mov.l\t@r15+,r4\n+\trts\n+\t mov.l\t@r15+,r5\n+\trts\n+\t mov.l\t@r15+,r6\n+\trts\n+\t mov.l\t@r15+,r7\n+\n+L_call_it:\n+\t# call function\n+#if (! STRUCT_VALUE_ADDRESS_WITH_ARG)\n+\tmov\tr10, r2\n+#endif\n+\tmov.l  @(28,r14),r1\n+\tjsr    @r1\n+\t nop\n+\n+L_ret_d:\n+\tmov\t#FFI_TYPE_DOUBLE,r2\n+\tcmp/eq\tr2,r9\n+\tbf\tL_ret_ll\n+\n+\tmov.l\t@(24,r14),r1\n+#ifdef __LITTLE_ENDIAN__\n+\tfmov.s\tfr1,@r1\n+\tadd\t#4,r1\n+\tbra\tL_epilogue\n+\t fmov.s\tfr0,@r1\n+#else\n+\tfmov.s\tfr0,@r1\n+\tadd\t#4,r1\n+\tbra\tL_epilogue\n+\t fmov.s\tfr1,@r1\n+#endif\n+\n+L_ret_ll:\n+\tmov\t#FFI_TYPE_SINT64,r2\n+\tcmp/eq\tr2,r9\n+\tbt/s\t1f\n+\t mov\t#FFI_TYPE_UINT64,r2\n+\tcmp/eq\tr2,r9\n+\tbf\tL_ret_f\n+\n+1:\n+\tmov.l\t@(24,r14),r2\n+\tmov.l\tr0,@r2\n+\tbra\tL_epilogue\n+\t mov.l\tr1,@(4,r2)\n+\n+L_ret_f:\n+\tmov\t#FFI_TYPE_FLOAT,r2\n+\tcmp/eq\tr2,r9\n+\tbf\tL_ret_i\n+\n+\tmov.l\t@(24,r14),r1\n+\tbra\tL_epilogue\n+\t fmov.s\tfr0,@r1\n+\n+L_ret_i:\n+\tmov\t#FFI_TYPE_INT,r2\n+\tcmp/eq\tr2,r9\n+\tbf\tL_epilogue\n+\n+\tmov.l\t@(24,r14),r1\n+\tbra\tL_epilogue\n+\t mov.l\tr0,@r1\n+\n+L_epilogue:\n+\t# Remove the space we pushed for the args\n+\tmov   r14,r15\n+\n+\tlds.l  @r15+,pr\n+\tmov.l  @r15+,r14\n+\tmov.l  @r15+,r12\n+\tmov.l  @r15+,r10\n+\tmov.l  @r15+,r9\n+\trts\n+\t mov.l  @r15+,r8\n+#else\n+\t# Save registers\n+\tmov.l\tr8,@-r15\n+\tmov.l\tr9,@-r15\n+\tmov.l\tr10,@-r15\n+\tmov.l\tr12,@-r15\n+\tmov.l\tr14,@-r15\n+\tsts.l\tpr,@-r15\n+\tmov\tr15,r14\n+\n+\tmov\tr6,r8\n+\tmov\tr7,r9\n+\n+\tsub\tr6,r15\n+\tadd\t#-16,r15\n+\tmov\t#~7,r0\n+\tand\tr0,r15\n+\n+\tmov\tr4,r0\n+\tjsr\t@r0\n+\t mov\tr15,r4\n+\n+\tmov\tr9,r3\n+\tshlr8\tr9\n+\tshlr8\tr9\n+\tshlr8\tr9\n+\n+\tmov\t#FFI_TYPE_STRUCT,r2\n+\tcmp/eq\tr2,r9\n+\tbf\t1f\n+#if STRUCT_VALUE_ADDRESS_WITH_ARG\n+\tmov.l\t@r15+,r4\n+\tbra\t2f\n+\t mov\t#5,r2\n+#else\n+\tmov.l\t@r15+,r10\n+#endif\n+1:\n+\tmov\t#4,r2\n+2:\n+\n+L_pass:\n+\tcmp/pl\tr8\n+\tbf\tL_call_it\n+\n+\tmov\tr3,r0\n+\tand\t#3,r0\n+\n+L_pass_d:\n+\tcmp/eq\t#FFI_TYPE_DOUBLE,r0\n+\tbf\tL_pass_i\n+\n+\tmov\tr15,r0\n+\tand\t#7,r0\n+\ttst\tr0,r0\n+\tbt\t1f\n+\tadd\t#4,r15\n+1:\n+\tmov\t#8,r0\n+\tcmp/hs\tr0,r2\n+\tbt/s\t2f\n+\t shlr2\tr3\n+\tbsr\tL_pop_d\n+\t nop\n+2:\n+\tadd\t#2,r2\n+\tbra\tL_pass\n+\t add\t#-8,r8\n+\n+L_pop_d:\n+\tmov\tr2,r0\n+\tadd\tr0,r0\n+\tadd\tr2,r0\n+\tadd\t#-12,r0\n+\tadd\tr0,r0\n+\tbraf\tr0\n+\t nop\n+\tmov.l\t@r15+,r4\n+\trts\n+\t mov.l\t@r15+,r5\n+\tmov.l\t@r15+,r5\n+\trts\n+\t mov.l\t@r15+,r6\n+\tmov.l\t@r15+,r6\n+\trts\n+\t mov.l\t@r15+,r7\n+\trts\n+\t mov.l\t@r15+,r7\n+\n+L_pass_i:\n+\tmov\t#8,r0\n+\tcmp/hs\tr0,r2\n+\tbt/s\t2f\n+\t shlr2\tr3\n+\tbsr\tL_pop_i\n+\t nop\n+2:\n+\tadd\t#1,r2\n+\tbra\tL_pass\n+\t add\t#-4,r8\n+\n+L_pop_i:\n+\tmov\tr2,r0\n+\tshll2\tr0\n+\tadd\t#-16,r0\n+\tbraf\tr0\n+\t nop\n+\trts\n+\t mov.l\t@r15+,r4\n+\trts\n+\t mov.l\t@r15+,r5\n+\trts\n+\t mov.l\t@r15+,r6\n+\trts\n+\t mov.l\t@r15+,r7\n+\n+L_call_it:\n+\t# call function\n+#if (! STRUCT_VALUE_ADDRESS_WITH_ARG)\n+\tmov\tr10, r2\n+#endif\n+\tmov.l  @(28,r14),r1\n+\tjsr    @r1\n+\t nop\n+\n+L_ret_d:\n+\tmov\t#FFI_TYPE_DOUBLE,r2\n+\tcmp/eq\tr2,r9\n+\tbf\tL_ret_ll\n+\n+\tmov.l\t@(24,r14),r2\n+\tmov.l\tr0,@r2\n+\tbra\tL_epilogue\n+\t mov.l\tr1,@(4,r2)\n+\n+L_ret_ll:\n+\tmov\t#FFI_TYPE_SINT64,r2\n+\tcmp/eq\tr2,r9\n+\tbt/s\t1f\n+\t mov\t#FFI_TYPE_UINT64,r2\n+\tcmp/eq\tr2,r9\n+\tbf\tL_ret_i\n+\n+1:\n+\tmov.l\t@(24,r14),r2\n+\tmov.l\tr0,@r2\n+\tbra\tL_epilogue\n+\t mov.l\tr1,@(4,r2)\n+\n+L_ret_i:\n+\tmov\t#FFI_TYPE_FLOAT,r2\n+\tcmp/eq\tr2,r9\n+\tbt\t1f\n+\tmov\t#FFI_TYPE_INT,r2\n+\tcmp/eq\tr2,r9\n+\tbf\tL_epilogue\n+1:\n+\tmov.l\t@(24,r14),r1\n+\tbra\tL_epilogue\n+\t mov.l\tr0,@r1\n+\n+L_epilogue:\n+\t# Remove the space we pushed for the args\n+\tmov   r14,r15\n+\n+\tlds.l  @r15+,pr\n+\tmov.l  @r15+,r14\n+\tmov.l  @r15+,r12\n+\tmov.l  @r15+,r10\n+\tmov.l  @r15+,r9\n+\trts\n+\t mov.l  @r15+,r8\n+#endif\n+\n+.ffi_call_SYSV_end:\n+        .size    CNAME(ffi_call_SYSV),.ffi_call_SYSV_end-CNAME(ffi_call_SYSV)\n+\n+.globl\tffi_closure_helper_SYSV\n+\n+ENTRY(ffi_closure_SYSV)\n+\tmov.l\tr14,@-r15\n+\tsts.l\tpr,@-r15\n+\n+\t/* Stack layout:\t\n+\t   ...\n+\t   32 bytes (floating register parameters, SH-4 only)\n+\t   16 bytes (register parameters)\n+\t    4 bytes (result)\n+\t    4 bytes (5th arg)\n+\t   <- new stack pointer\n+\t*/\n+#if defined(__SH4__)\n+\tadd\t#-56,r15\n+#else\n+\tadd\t#-24,r15\n+#endif\n+\tmov\tr15,r14\n+\n+\tmov\tr14,r1\n+\tadd\t#24,r1\n+\tmov.l\tr7,@-r1\n+\tmov.l\tr6,@-r1\n+\tmov.l\tr5,@-r1\n+\tmov.l\tr4,@-r1\n+\tmov\tr1,r6\n+\n+#if defined(__SH4__)\n+\tmov\tr14,r1\n+\tadd\t#56,r1\n+#ifdef __LITTLE_ENDIAN__\n+\tfmov.s\tfr10,@-r1\n+\tfmov.s\tfr11,@-r1\n+\tfmov.s\tfr8,@-r1\n+\tfmov.s\tfr9,@-r1\n+\tfmov.s\tfr6,@-r1\n+\tfmov.s\tfr7,@-r1\n+\tfmov.s\tfr4,@-r1\n+\tfmov.s\tfr5,@-r1\n+#else\n+\tfmov.s\tfr11,@-r1\n+\tfmov.s\tfr10,@-r1\n+\tfmov.s\tfr9,@-r1\n+\tfmov.s\tfr8,@-r1\n+\tfmov.s\tfr7,@-r1\n+\tfmov.s\tfr6,@-r1\n+\tfmov.s\tfr5,@-r1\n+\tfmov.s\tfr4,@-r1\n+#endif\n+\tmov\tr1,r7\n+#endif\n+\n+\tmov\tr14,r1\n+\tadd\t#4,r1\n+\tmov\tr1,r5\n+\n+\tmov\tr14,r1\n+#if defined(__SH4__)\n+\tadd\t#64,r1\n+#else\n+\tadd\t#32,r1\n+#endif\n+\tmov.l\tr1,@r14\n+\n+\tmov.l\tL_helper,r0\n+\tjsr\t@r0\n+\t mov\tr3,r4\n+\n+\tshll\tr0\n+\tmov\tr0,r1\n+\tmova\tL_table,r0\n+\tadd\tr1,r0\n+\tmov.w\t@r0,r0\n+\tmov\tr14,r2\n+\tbraf\tr0\n+\t add\t#4,r2\n+0:\n+\t.align 2\n+L_helper:\n+\t.long\tffi_closure_helper_SYSV\n+L_table:\n+\t.short L_case_v - 0b\t/* FFI_TYPE_VOID */\n+\t.short L_case_i - 0b\t/* FFI_TYPE_INT */\n+#if defined(__SH4__)\n+\t.short L_case_f - 0b\t/* FFI_TYPE_FLOAT */\n+\t.short L_case_d - 0b\t/* FFI_TYPE_DOUBLE */\n+\t.short L_case_d - 0b\t/* FFI_TYPE_LONGDOUBLE */\n+#else\n+\t.short L_case_i - 0b\t/* FFI_TYPE_FLOAT */\n+\t.short L_case_ll - 0b\t/* FFI_TYPE_DOUBLE */\n+\t.short L_case_ll - 0b\t/* FFI_TYPE_LONGDOUBLE */\n+#endif\n+\t.short L_case_uq - 0b\t/* FFI_TYPE_UINT8 */\n+\t.short L_case_q - 0b\t/* FFI_TYPE_SINT8 */\n+\t.short L_case_uh - 0b\t/* FFI_TYPE_UINT16 */\n+\t.short L_case_h - 0b\t/* FFI_TYPE_SINT16 */\n+\t.short L_case_i - 0b\t/* FFI_TYPE_UINT32 */\n+\t.short L_case_i - 0b\t/* FFI_TYPE_SINT32 */\n+\t.short L_case_ll - 0b\t/* FFI_TYPE_UINT64 */\n+\t.short L_case_ll - 0b\t/* FFI_TYPE_SINT64 */\n+\t.short L_case_v - 0b\t/* FFI_TYPE_STRUCT */\n+\t.short L_case_i - 0b\t/* FFI_TYPE_POINTER */\n+\n+#if defined(__SH4__)\n+L_case_d:\n+#ifdef __LITTLE_ENDIAN__\n+\tfmov.s\t@r2+,fr1\n+\tbra\tL_case_v\n+\t fmov.s\t@r2,fr0\n+#else\n+\tfmov.s\t@r2+,fr0\n+\tbra\tL_case_v\n+\t fmov.s\t@r2,fr1\n+#endif\n+\n+L_case_f:\n+\tbra\tL_case_v\n+\t fmov.s\t@r2,fr0\n+#endif\n+\t\n+L_case_ll:\n+\tmov.l\t@r2+,r0\n+\tbra\tL_case_v\n+\t mov.l\t@r2,r1\n+\t\n+L_case_i:\n+\tbra\tL_case_v\n+\t mov.l\t@r2,r0\n+\t\n+L_case_q:\n+#ifdef __LITTLE_ENDIAN__\n+#else\n+\tadd\t#3,r2\n+#endif\n+\tbra\tL_case_v\n+\t mov.b\t@r2,r0\n+\n+L_case_uq:\n+#ifdef __LITTLE_ENDIAN__\n+#else\n+\tadd\t#3,r2\n+#endif\n+\tmov.b\t@r2,r0\n+\tbra\tL_case_v\n+\t extu.b r0,r0\n+\n+L_case_h:\n+#ifdef __LITTLE_ENDIAN__\n+#else\n+\tadd\t#2,r2\n+#endif\n+\tbra\tL_case_v\n+\t mov.w\t@r2,r0\n+\n+L_case_uh:\n+#ifdef __LITTLE_ENDIAN__\n+#else\n+\tadd\t#2,r2\n+#endif\n+\tmov.w\t@r2,r0\n+\textu.w\tr0,r0\n+\t/* fall through */\n+\n+L_case_v:\n+#if defined(__SH4__)\n+\tadd\t#56,r15\n+#else\n+\tadd\t#24,r15\n+#endif\n+\tlds.l\t@r15+,pr\n+\trts\n+\t mov.l\t@r15+,r14\n+\n+.ffi_closure_SYSV_end:\n+        .size    CNAME(ffi_closure_SYSV),.ffi_closure_SYSV_end-CNAME(ffi_closure_SYSV)"}, {"sha": "81a2be662211a4b54dad0187a8d010050aa2da62", "filename": "libffi/src/types.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fsrc%2Ftypes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddebdfebad723879a1ff8ee180c791326acd4507/libffi%2Fsrc%2Ftypes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Ftypes.c?ref=ddebdfebad723879a1ff8ee180c791326acd4507", "patch": "@@ -57,6 +57,11 @@ FFI_INTEGRAL_TYPEDEF(pointer, 4, 4, FFI_TYPE_POINTER);\n FFI_INTEGRAL_TYPEDEF(uint64, 8, 4, FFI_TYPE_UINT64);\n FFI_INTEGRAL_TYPEDEF(sint64, 8, 4, FFI_TYPE_SINT64);\n \n+#elif defined SH\n+\n+FFI_INTEGRAL_TYPEDEF(uint64, 8, 4, FFI_TYPE_UINT64);\n+FFI_INTEGRAL_TYPEDEF(sint64, 8, 4, FFI_TYPE_SINT64);\n+\n #else\n \n FFI_INTEGRAL_TYPEDEF(uint64, 8, 8, FFI_TYPE_UINT64);\n@@ -75,6 +80,11 @@ FFI_INTEGRAL_TYPEDEF(longdouble, 12, 4, FFI_TYPE_LONGDOUBLE);\n FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n FFI_INTEGRAL_TYPEDEF(longdouble, 8, 4, FFI_TYPE_LONGDOUBLE);\n \n+#elif defined SH\n+\n+FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n+FFI_INTEGRAL_TYPEDEF(longdouble, 8, 4, FFI_TYPE_LONGDOUBLE);\n+\n #elif defined SPARC\n \n FFI_INTEGRAL_TYPEDEF(double, 8, 8, FFI_TYPE_DOUBLE);"}]}