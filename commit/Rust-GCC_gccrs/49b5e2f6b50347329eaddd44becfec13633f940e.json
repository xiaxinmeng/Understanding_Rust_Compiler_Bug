{"sha": "49b5e2f6b50347329eaddd44becfec13633f940e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDliNWUyZjZiNTAzNDczMjllYWRkZDQ0YmVjZmVjMTM2MzNmOTQwZQ==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2007-11-10T02:53:31Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2007-11-10T02:53:31Z"}, "message": "re PR c++/33510 (Array size of array with size determined by the initializer wrong with packs)\n\n2007-11-09  Douglas Gregor  <doug.gregor@gmail.com>\n\n\tPR c++/33510\n\t* decl.c (cp_complete_array_type): If any of the initializer\n\telements are pack expansions, don't compute the array size yet.\n\n2007-11-09  Douglas Gregor  <doug.gregor@gmail.com>\n\n\tPR c++/33510\n\t* g++.dg/cpp0x/variadic-init.C: New.\n\nFrom-SVN: r130065", "tree": {"sha": "12a659becde0adb05ab03361808179ad887b8a19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12a659becde0adb05ab03361808179ad887b8a19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49b5e2f6b50347329eaddd44becfec13633f940e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b5e2f6b50347329eaddd44becfec13633f940e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49b5e2f6b50347329eaddd44becfec13633f940e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b5e2f6b50347329eaddd44becfec13633f940e/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a4d60af8e910e9117536785dc1a9d665b30a665b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d60af8e910e9117536785dc1a9d665b30a665b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4d60af8e910e9117536785dc1a9d665b30a665b"}], "stats": {"total": 84, "additions": 83, "deletions": 1}, "files": [{"sha": "242f4aec4fd6ba06801e8e533cf5935d502ff1c6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b5e2f6b50347329eaddd44becfec13633f940e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b5e2f6b50347329eaddd44becfec13633f940e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=49b5e2f6b50347329eaddd44becfec13633f940e", "patch": "@@ -1,3 +1,9 @@\n+2007-11-09  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\tPR c++/33510\n+\t* decl.c (cp_complete_array_type): If any of the initializer\n+\telements are pack expansions, don't compute the array size yet.\n+\n 2007-11-08  Andrew Pinski  <pinskia@gmail.com>\n \n \tPR c++/30297:"}, {"sha": "758d95b05bbf1b9caca5fe19e6913a732bfaceb3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b5e2f6b50347329eaddd44becfec13633f940e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b5e2f6b50347329eaddd44becfec13633f940e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=49b5e2f6b50347329eaddd44becfec13633f940e", "patch": "@@ -4331,7 +4331,7 @@ maybe_deduce_size_from_array_init (tree decl, tree init)\n \t  HOST_WIDE_INT i;\n \t  for (i = 0; \n \t       VEC_iterate (constructor_elt, v, i, ce);\n-\t       ++i)\n+\t       ++i) \n \t    if (!check_array_designated_initializer (ce))\n \t      failure = 1;\n \t}\n@@ -6110,6 +6110,9 @@ cp_complete_array_type (tree *ptype, tree initial_value, bool do_default)\n \n   if (initial_value)\n     {\n+      unsigned HOST_WIDE_INT i;\n+      tree value;\n+\n       /* An array of character type can be initialized from a\n \t brace-enclosed string constant.\n \n@@ -6126,6 +6129,18 @@ cp_complete_array_type (tree *ptype, tree initial_value, bool do_default)\n \t      && VEC_length (constructor_elt, v) == 1)\n \t    initial_value = value;\n \t}\n+\n+      /* If any of the elements are parameter packs, we can't actually\n+\t complete this type now because the array size is dependent.  */\n+      if (TREE_CODE (initial_value) == CONSTRUCTOR)\n+\t{\n+\t  FOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (initial_value), \n+\t\t\t\t      i, value)\n+\t    {\n+\t      if (PACK_EXPANSION_P (value))\n+\t\treturn 0;\n+\t    }\n+\t}\n     }\n \n   failure = complete_array_type (ptype, initial_value, do_default);"}, {"sha": "8ca5494d2f66526ce1a2801d8ce560ec4ca4f201", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b5e2f6b50347329eaddd44becfec13633f940e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b5e2f6b50347329eaddd44becfec13633f940e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49b5e2f6b50347329eaddd44becfec13633f940e", "patch": "@@ -1,3 +1,8 @@\n+2007-11-09  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\tPR c++/33510\n+\t* g++.dg/cpp0x/variadic-init.C: New.\n+\n 2007-11-09  Paolo Bonzini  <bonzini@gnu.org>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "34ade85e0f992c8e3d733cf28da6fe50bd2b0930", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-init.C", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b5e2f6b50347329eaddd44becfec13633f940e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-init.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b5e2f6b50347329eaddd44becfec13633f940e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-init.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-init.C?ref=49b5e2f6b50347329eaddd44becfec13633f940e", "patch": "@@ -0,0 +1,56 @@\n+// { dg-do run }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// PR c++/33510\n+#define SIZE_FROM_CTOR\n+extern \"C\" void abort ();\n+\n+template<int M, int N> struct pair\n+{\n+  int i, j;\n+  pair () : i (M), j (N) {}\n+};\n+\n+template<int... M> struct S\n+{\n+  template<int... N> static int *foo ()\n+  {\n+#ifdef SIZE_FROM_CTOR\n+    static int x[] = { (M + N)..., -1 };\n+#else\n+    static int x[1 + sizeof... N] = { (M + N)..., -1 };\n+#endif\n+    return x;\n+  }\n+};\n+\n+template<typename... M> struct R\n+{\n+  template<typename... N> static int *foo ()\n+  {\n+#ifdef SIZE_FROM_CTOR\n+    static int x[] = { (sizeof(M) + sizeof(N))..., -1 };\n+#else\n+    static int x[1 + sizeof... N] = { (sizeof(M) + sizeof(N))..., -1 };\n+#endif\n+    return x;\n+  }\n+};\n+\n+int *bar ()\n+{\n+  return S<0, 1, 2>::foo<0, 1, 2> ();\n+}\n+\n+int *baz ()\n+{\n+  return R<char, short, int>::foo<float, double, long> ();\n+}\n+\n+\n+int main ()\n+{\n+  int *p = bar ();\n+  if (p[0] != 0 || p[1] != 2 || p[2] != 4 || p[3] != -1)\n+    abort ();\n+}"}]}