{"sha": "365202625d2f2d6694dba889ca67498fefb59c68", "node_id": "C_kwDOANBUbNoAKDM2NTIwMjYyNWQyZjJkNjY5NGRiYTg4OWNhNjc0OThmZWZiNTljNjg", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-08-24T07:55:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-08-24T07:55:57Z"}, "message": "preprocessor: Implement C++23 P2437R1 - Support for #warning [PR106646]\n\nOn Thu, Aug 18, 2022 at 11:02:44PM +0000, Joseph Myers wrote:\n> ISO C2x standardizes the existing #warning extension.  Arrange\n> accordingly for it not to be diagnosed with -std=c2x -pedantic, but to\n> be diagnosed with -Wc11-c2x-compat.\n\nAnd here is the corresponding C++ version.\nDon't pedwarn about this for C++23/GNU++23 and tweak the diagnostics\nfor C++ otherwise, + testsuite coverage.\nThe diagnostic wording is similar e.g. to the #elifdef diagnostics.\n\n2022-08-24  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/106646\n\t* init.cc: Implement C++23 P2437R1 - Support for #warning.\n\t(lang_defaults): Set warning_directive for GNUCXX23 and CXX23.\n\t* directives.cc (directive_diagnostics): Use different wording of\n\t#warning pedwarn for C++.\n\n\t* g++.dg/cpp/warning-1.C: New test.\n\t* g++.dg/cpp/warning-2.C: New test.\n\t* g++.dg/cpp/warning-3.C: New test.", "tree": {"sha": "0eb106ecafdb17bdb057a8efc837647c5598fe8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eb106ecafdb17bdb057a8efc837647c5598fe8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/365202625d2f2d6694dba889ca67498fefb59c68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/365202625d2f2d6694dba889ca67498fefb59c68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/365202625d2f2d6694dba889ca67498fefb59c68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/365202625d2f2d6694dba889ca67498fefb59c68/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42301c02e458cdce646ffaf7ea1df502ab2e8ddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42301c02e458cdce646ffaf7ea1df502ab2e8ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42301c02e458cdce646ffaf7ea1df502ab2e8ddc"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "2d857cf747c9012889172af6a3b8110a186c9dec", "filename": "gcc/testsuite/g++.dg/cpp/warning-1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365202625d2f2d6694dba889ca67498fefb59c68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fwarning-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365202625d2f2d6694dba889ca67498fefb59c68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fwarning-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fwarning-1.C?ref=365202625d2f2d6694dba889ca67498fefb59c68", "patch": "@@ -0,0 +1,6 @@\n+// P2437R1 - Support for #warning\n+// { dg-do preprocess }\n+// { dg-options \"-pedantic-errors\" }\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+// { dg-error \"#warning before C\\\\\\+\\\\\\+23 is a GCC extension\" \"pedantic\" { target c++20_down } .-1 }"}, {"sha": "d6d5d9fc0813061f1837ad59ce1d7790dfc8e67a", "filename": "gcc/testsuite/g++.dg/cpp/warning-2.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365202625d2f2d6694dba889ca67498fefb59c68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fwarning-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365202625d2f2d6694dba889ca67498fefb59c68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fwarning-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fwarning-2.C?ref=365202625d2f2d6694dba889ca67498fefb59c68", "patch": "@@ -0,0 +1,6 @@\n+// P2437R1 - Support for #warning\n+// { dg-do preprocess }\n+// { dg-options \"-pedantic\" }\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+// { dg-warning \"#warning before C\\\\\\+\\\\\\+23 is a GCC extension\" \"pedantic\" { target c++20_down } .-1 }"}, {"sha": "1595b4d13053905c1d55590dd80c674472d8e9ad", "filename": "gcc/testsuite/g++.dg/cpp/warning-3.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365202625d2f2d6694dba889ca67498fefb59c68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fwarning-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365202625d2f2d6694dba889ca67498fefb59c68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fwarning-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fwarning-3.C?ref=365202625d2f2d6694dba889ca67498fefb59c68", "patch": "@@ -0,0 +1,6 @@\n+// P2437R1 - Support for #warning\n+// { dg-do preprocess }\n+// { dg-options \"\" }\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+// { dg-bogus \"#warning before C\\\\\\+\\\\\\+23 is a GCC extension\" \"\" { target *-*-* } .-1 }"}, {"sha": "918752f6b1f0f51a24df6ed246d01f90c6187880", "filename": "libcpp/directives.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365202625d2f2d6694dba889ca67498fefb59c68/libcpp%2Fdirectives.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365202625d2f2d6694dba889ca67498fefb59c68/libcpp%2Fdirectives.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.cc?ref=365202625d2f2d6694dba889ca67498fefb59c68", "patch": "@@ -388,8 +388,14 @@ directive_diagnostics (cpp_reader *pfile, const directive *dir, int indented)\n       else if (dir == &dtable[T_WARNING])\n \t{\n \t  if (CPP_PEDANTIC (pfile) && !CPP_OPTION (pfile, warning_directive))\n-\t    cpp_error (pfile, CPP_DL_PEDWARN,\n-\t\t       \"#%s before C2X is a GCC extension\", dir->name);\n+\t    {\n+\t      if (CPP_OPTION (pfile, cplusplus))\n+\t\tcpp_error (pfile, CPP_DL_PEDWARN,\n+\t\t\t   \"#%s before C++23 is a GCC extension\", dir->name);\n+\t      else\n+\t\tcpp_error (pfile, CPP_DL_PEDWARN,\n+\t\t\t   \"#%s before C2X is a GCC extension\", dir->name);\n+\t    }\n \t  else if (CPP_OPTION (pfile, cpp_warn_c11_c2x_compat) > 0)\n \t    cpp_warning (pfile, CPP_W_C11_C2X_COMPAT,\n \t\t\t \"#%s before C2X is a GCC extension\", dir->name);"}, {"sha": "39e7e75f010dcb687e76adc8ab99dfef9e14632e", "filename": "libcpp/init.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365202625d2f2d6694dba889ca67498fefb59c68/libcpp%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365202625d2f2d6694dba889ca67498fefb59c68/libcpp%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.cc?ref=365202625d2f2d6694dba889ca67498fefb59c68", "patch": "@@ -123,8 +123,8 @@ static const struct lang_flags lang_defaults[] =\n   /* CXX17    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      0,   1,     0,   0,   0,      0,      0 },\n   /* GNUCXX20 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0,      0,      0 },\n   /* CXX20    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0,      0,      0 },\n-  /* GNUCXX23 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1,      0,      1 },\n-  /* CXX23    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1,      0,      1 },\n+  /* GNUCXX23 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1,      1,      1 },\n+  /* CXX23    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1,      1,      1 },\n   /* ASM      */  { 0,  0,  1,  0,  0,  0,  0,   0,   0,   0,    0,     0,     0,   0,      0,   0,     0,   0,   0,      0,      0 }\n };\n "}]}