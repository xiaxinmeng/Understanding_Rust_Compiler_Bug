{"sha": "24b9337d1f1b5197b6498dceb9074319be003449", "node_id": "C_kwDOANBUbNoAKDI0YjkzMzdkMWYxYjUxOTdiNjQ5OGRjZWI5MDc0MzE5YmUwMDM0NDk", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-01T20:16:46Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-04T19:59:03Z"}, "message": "Fortran: error recovery simplifying UNPACK for insufficient FIELD [PR107922]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/107922\n\t* simplify.cc (gfc_simplify_unpack): Terminate simplification when\n\tarray-valued argument FIELD does not provide enough elements.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/107922\n\t* gfortran.dg/unpack_field_1.f90: New test.", "tree": {"sha": "b272a62c90b032a32d92fee89b68948b052606d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b272a62c90b032a32d92fee89b68948b052606d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24b9337d1f1b5197b6498dceb9074319be003449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b9337d1f1b5197b6498dceb9074319be003449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b9337d1f1b5197b6498dceb9074319be003449", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b9337d1f1b5197b6498dceb9074319be003449/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98d6e4b6f1011655da19344bc124a3013b9c0134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98d6e4b6f1011655da19344bc124a3013b9c0134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98d6e4b6f1011655da19344bc124a3013b9c0134"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "aff9a1b8ced5e15ae02b06d65eda77f3cc22c6c6", "filename": "gcc/fortran/simplify.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b9337d1f1b5197b6498dceb9074319be003449/gcc%2Ffortran%2Fsimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b9337d1f1b5197b6498dceb9074319be003449/gcc%2Ffortran%2Fsimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.cc?ref=24b9337d1f1b5197b6498dceb9074319be003449", "patch": "@@ -8485,7 +8485,16 @@ gfc_simplify_unpack (gfc_expr *vector, gfc_expr *mask, gfc_expr *field)\n \t    }\n \t}\n       else if (field->expr_type == EXPR_ARRAY)\n-\te = gfc_copy_expr (field_ctor->expr);\n+\t{\n+\t  if (field_ctor)\n+\t    e = gfc_copy_expr (field_ctor->expr);\n+\t  else\n+\t    {\n+\t      /* Not enough elements in array FIELD.  */\n+\t      gfc_free_expr (result);\n+\t      return &gfc_bad_expr;\n+\t    }\n+\t}\n       else\n \te = gfc_copy_expr (field);\n "}, {"sha": "ca3cfbd2bd45b39f4ce8612922b67ffbb06b3763", "filename": "gcc/testsuite/gfortran.dg/unpack_field_1.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b9337d1f1b5197b6498dceb9074319be003449/gcc%2Ftestsuite%2Fgfortran.dg%2Funpack_field_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b9337d1f1b5197b6498dceb9074319be003449/gcc%2Ftestsuite%2Fgfortran.dg%2Funpack_field_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funpack_field_1.f90?ref=24b9337d1f1b5197b6498dceb9074319be003449", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! PR fortran/107922 - ICE in gfc_simplify_unpack\n+! Test error recovery when shapes of FIELD and MASK do not match\n+! Contributed by G.Steinmetz\n+\n+program p\n+  integer, parameter :: a(2) = 1\n+  integer, parameter :: d(3) = 1\n+  logical, parameter :: mask(3) = [.false.,.true.,.false.]\n+  integer, parameter :: b(2) = unpack(a,mask,a)          ! { dg-error \"must have identical shape\" }\n+  integer :: c(3) = unpack(a,[.false.,.true.,.false.],a) ! { dg-error \"must have identical shape\" }\n+  print *, unpack(a,mask,a)                              ! { dg-error \"must have identical shape\" }\n+  print *, unpack(a,mask,d) ! OK\n+  print *, unpack(a,mask,3) ! OK\n+end"}]}