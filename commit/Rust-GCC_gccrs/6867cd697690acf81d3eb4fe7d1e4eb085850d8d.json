{"sha": "6867cd697690acf81d3eb4fe7d1e4eb085850d8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2N2NkNjk3NjkwYWNmODFkM2ViNGZlN2QxZTRlYjA4NTg1MGQ4ZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-04-18T20:09:33Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-04-18T20:09:33Z"}, "message": "Fix coding style and typos.\n\n2018-04-18  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-devirt.c (odr_subtypes_equivalent_p): Fix GNU coding\n\tstyle.\n2018-04-18  Martin Liska  <mliska@suse.cz>\n\n\t* lto.c (lto_read_decls): Fix GNU coding style and typos.\n\nFrom-SVN: r259480", "tree": {"sha": "cceaae03ea4cb0063e82805b5d841cbf697b1ac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cceaae03ea4cb0063e82805b5d841cbf697b1ac6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6867cd697690acf81d3eb4fe7d1e4eb085850d8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6867cd697690acf81d3eb4fe7d1e4eb085850d8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6867cd697690acf81d3eb4fe7d1e4eb085850d8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6867cd697690acf81d3eb4fe7d1e4eb085850d8d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af5975362b21c2a1268aac5b02545de482a2cc7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af5975362b21c2a1268aac5b02545de482a2cc7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af5975362b21c2a1268aac5b02545de482a2cc7c"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "94d2b24e0f38390ebe938a12f56c3edb898ea114", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6867cd697690acf81d3eb4fe7d1e4eb085850d8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6867cd697690acf81d3eb4fe7d1e4eb085850d8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6867cd697690acf81d3eb4fe7d1e4eb085850d8d", "patch": "@@ -1,3 +1,8 @@\n+2018-04-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-devirt.c (odr_subtypes_equivalent_p): Fix GNU coding\n+\tstyle.\n+\n 2018-04-18  Martin Liska  <mliska@suse.cz>\n \n \tRevert"}, {"sha": "308b6e6cdd5dbd5979d0487b9f0af9ad32cb75d7", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6867cd697690acf81d3eb4fe7d1e4eb085850d8d/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6867cd697690acf81d3eb4fe7d1e4eb085850d8d/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=6867cd697690acf81d3eb4fe7d1e4eb085850d8d", "patch": "@@ -685,7 +685,7 @@ odr_subtypes_equivalent_p (tree t1, tree t2,\n       if (!types_same_for_odr (t1, t2, true))\n         return false;\n       /* Limit recursion: If subtypes are ODR types and we know\n-         that they are same, be happy.  */\n+\t that they are same, be happy.  */\n       if (!odr_type_p (t1) || !get_odr_type (t1, true)->odr_violated)\n         return true;\n     }"}, {"sha": "3c6af8f7d16ac1bdd49260baf697d6f24497d607", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6867cd697690acf81d3eb4fe7d1e4eb085850d8d/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6867cd697690acf81d3eb4fe7d1e4eb085850d8d/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=6867cd697690acf81d3eb4fe7d1e4eb085850d8d", "patch": "@@ -1,3 +1,7 @@\n+2018-04-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto.c (lto_read_decls): Fix GNU coding style and typos.\n+\n 2018-04-18  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/83983"}, {"sha": "1c55f3f691adca90bd2f074795c56b103b3b40d7", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6867cd697690acf81d3eb4fe7d1e4eb085850d8d/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6867cd697690acf81d3eb4fe7d1e4eb085850d8d/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=6867cd697690acf81d3eb4fe7d1e4eb085850d8d", "patch": "@@ -1808,9 +1808,9 @@ lto_read_decls (struct lto_file_decl_data *decl_data, const void *data,\n \t\t  num_prevailing_types++;\n \t\t  lto_fixup_prevailing_type (t);\n \n-\t          /* Compute the canonical type of all types.\n-\t\t     Because SCC components ar estreame in random (hash) order\n-\t\t     we may have enountered the type before while registering\n+\t\t  /* Compute the canonical type of all types.\n+\t\t     Because SCC components are streamed in random (hash) order\n+\t\t     we may have encountered the type before while registering\n \t\t     type canonical of a derived type in the same SCC.  */\n \t\t  if (!TYPE_CANONICAL (t))\n \t\t    gimple_register_canonical_type (t);"}]}