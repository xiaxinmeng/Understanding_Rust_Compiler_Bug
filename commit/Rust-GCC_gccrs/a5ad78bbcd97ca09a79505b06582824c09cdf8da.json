{"sha": "a5ad78bbcd97ca09a79505b06582824c09cdf8da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVhZDc4YmJjZDk3Y2EwOWE3OTUwNWIwNjU4MjgyNGMwOWNkZjhkYQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-09-10T12:19:57Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-09-10T12:19:57Z"}, "message": "string.c (compare0): Remove.\n\n\t* runtime/string.c (compare0): Remove.\n\t(find_option): Inline string comparison\n\nFrom-SVN: r164168", "tree": {"sha": "fa6f25463795642a1ae7501b4f99317c4a40ee97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa6f25463795642a1ae7501b4f99317c4a40ee97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5ad78bbcd97ca09a79505b06582824c09cdf8da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ad78bbcd97ca09a79505b06582824c09cdf8da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5ad78bbcd97ca09a79505b06582824c09cdf8da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ad78bbcd97ca09a79505b06582824c09cdf8da/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "996b42ef6a10b944fed3ace4133b165e3265d13c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996b42ef6a10b944fed3ace4133b165e3265d13c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/996b42ef6a10b944fed3ace4133b165e3265d13c"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "bfd829ab9f110ab8991ae663b2035f06582cd290", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad78bbcd97ca09a79505b06582824c09cdf8da/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad78bbcd97ca09a79505b06582824c09cdf8da/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=a5ad78bbcd97ca09a79505b06582824c09cdf8da", "patch": "@@ -1,3 +1,8 @@\n+2010-09-10  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* runtime/string.c (compare0): Remove.\n+\t(find_option): Inline string comparison\n+\n 2010-09-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* acinclude.m4 (LIBGFOR_CHECK_FOR_BROKEN_ISFINITE,"}, {"sha": "a37272011be81b2c3e1e230b6cb5e69785dc0fa7", "filename": "libgfortran/runtime/string.c", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad78bbcd97ca09a79505b06582824c09cdf8da/libgfortran%2Fruntime%2Fstring.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad78bbcd97ca09a79505b06582824c09cdf8da/libgfortran%2Fruntime%2Fstring.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fstring.c?ref=a5ad78bbcd97ca09a79505b06582824c09cdf8da", "patch": "@@ -25,24 +25,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n #include <string.h>\n \n-/* Compare a C-style string with a fortran style string in a case-insensitive\n-   manner.  Used for decoding string options to various statements.  Returns\n-   zero if not equal, nonzero if equal.  */\n-\n-static int\n-compare0 (const char *s1, gfc_charlen_type s1_len, const char *s2)\n-{\n-  gfc_charlen_type len;\n-\n-  /* Strip trailing blanks from the Fortran string.  */\n-  len = fstrlen (s1, s1_len);\n-\n-  if ((size_t) len != strlen(s2))\n-    return 0; /* don't match */\n-\n-  return strncasecmp (s1, s2, len) == 0;\n-}\n-\n \n /* Given a fortran string, return its length exclusive of the trailing\n    spaces.  */\n@@ -116,8 +98,11 @@ int\n find_option (st_parameter_common *cmp, const char *s1, gfc_charlen_type s1_len,\n \t     const st_option * opts, const char *error_message)\n {\n+  /* Strip trailing blanks from the Fortran string.  */\n+  size_t len = (size_t) fstrlen (s1, s1_len);\n+\n   for (; opts->name; opts++)\n-    if (compare0 (s1, s1_len, opts->name))\n+    if (len == strlen(opts->name) && strncasecmp (s1, opts->name, len) == 0)\n       return opts->value;\n \n   generate_error (cmp, LIBERROR_BAD_OPTION, error_message);"}]}