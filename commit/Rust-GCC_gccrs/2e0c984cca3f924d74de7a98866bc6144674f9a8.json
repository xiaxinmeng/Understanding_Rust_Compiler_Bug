{"sha": "2e0c984cca3f924d74de7a98866bc6144674f9a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUwYzk4NGNjYTNmOTI0ZDc0ZGU3YTk4ODY2YmM2MTQ0Njc0ZjlhOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-16T17:15:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-16T17:15:30Z"}, "message": "alias.c (nonoverlapping_memrefs_p): Remove use of IPA type-escape information.\n\n2010-05-16  Richard Guenther  <rguenther@suse.de>\n\n\t* alias.c (nonoverlapping_memrefs_p): Remove use of\n\tIPA type-escape information.\n\nFrom-SVN: r159460", "tree": {"sha": "2594e099977d671504649cb681016ba097da69d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2594e099977d671504649cb681016ba097da69d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e0c984cca3f924d74de7a98866bc6144674f9a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0c984cca3f924d74de7a98866bc6144674f9a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0c984cca3f924d74de7a98866bc6144674f9a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0c984cca3f924d74de7a98866bc6144674f9a8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "329122862022114caf79d97afe2cc89cc8c6412d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329122862022114caf79d97afe2cc89cc8c6412d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329122862022114caf79d97afe2cc89cc8c6412d"}], "stats": {"total": 47, "additions": 15, "deletions": 32}, "files": [{"sha": "71cf0d3c0d2b3c75a5b9b6207dd21b7e8977fcb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0c984cca3f924d74de7a98866bc6144674f9a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0c984cca3f924d74de7a98866bc6144674f9a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e0c984cca3f924d74de7a98866bc6144674f9a8", "patch": "@@ -1,3 +1,8 @@\n+2010-05-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* alias.c (nonoverlapping_memrefs_p): Remove use of\n+\tIPA type-escape information.\n+\n 2010-05-16  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-common.c (c_common_reswords): Add _Static_assert for C."}, {"sha": "a4083a1a13b1e9b43b0dfa5d38f8fa42f43b63f2", "filename": "gcc/alias.c", "status": "modified", "additions": 10, "deletions": 32, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0c984cca3f924d74de7a98866bc6144674f9a8/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0c984cca3f924d74de7a98866bc6144674f9a8/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=2e0c984cca3f924d74de7a98866bc6144674f9a8", "patch": "@@ -2196,43 +2196,21 @@ nonoverlapping_memrefs_p (const_rtx x, const_rtx y)\n   moffsetx = MEM_OFFSET (x);\n   if (TREE_CODE (exprx) == COMPONENT_REF)\n     {\n-      if (TREE_CODE (expry) == VAR_DECL\n-\t  && POINTER_TYPE_P (TREE_TYPE (expry)))\n-\t{\n-\t tree field = TREE_OPERAND (exprx, 1);\n-\t tree fieldcontext = DECL_FIELD_CONTEXT (field);\n-\t if (ipa_type_escape_field_does_not_clobber_p (fieldcontext,\n-\t\t\t\t\t\t       TREE_TYPE (field)))\n-\t   return 1;\n-\t}\n-      {\n-\ttree t = decl_for_component_ref (exprx);\n-\tif (! t)\n-\t  return 0;\n-\tmoffsetx = adjust_offset_for_component_ref (exprx, moffsetx);\n-\texprx = t;\n-      }\n+      tree t = decl_for_component_ref (exprx);\n+      if (! t)\n+\treturn 0;\n+      moffsetx = adjust_offset_for_component_ref (exprx, moffsetx);\n+      exprx = t;\n     }\n \n   moffsety = MEM_OFFSET (y);\n   if (TREE_CODE (expry) == COMPONENT_REF)\n     {\n-      if (TREE_CODE (exprx) == VAR_DECL\n-\t  && POINTER_TYPE_P (TREE_TYPE (exprx)))\n-\t{\n-\t tree field = TREE_OPERAND (expry, 1);\n-\t tree fieldcontext = DECL_FIELD_CONTEXT (field);\n-\t if (ipa_type_escape_field_does_not_clobber_p (fieldcontext,\n-\t\t\t\t\t\t       TREE_TYPE (field)))\n-\t   return 1;\n-\t}\n-      {\n-\ttree t = decl_for_component_ref (expry);\n-\tif (! t)\n-\t  return 0;\n-\tmoffsety = adjust_offset_for_component_ref (expry, moffsety);\n-\texpry = t;\n-      }\n+      tree t = decl_for_component_ref (expry);\n+      if (! t)\n+\treturn 0;\n+      moffsety = adjust_offset_for_component_ref (expry, moffsety);\n+      expry = t;\n     }\n \n   if (! DECL_P (exprx) || ! DECL_P (expry))"}]}