{"sha": "0c15dfc1dc0716d882dda143a172d751367db7ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMxNWRmYzFkYzA3MTZkODgyZGRhMTQzYTE3MmQ3NTEzNjdkYjdlYw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-10-26T15:59:34Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-10-26T15:59:34Z"}, "message": "* config/mcore/mcore.c (mcore_gen_compare): Adjust fallthru comments.\n\nFrom-SVN: r241569", "tree": {"sha": "1ac508a288bbc0ee2526c2f777cb4cdf51046418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ac508a288bbc0ee2526c2f777cb4cdf51046418"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c15dfc1dc0716d882dda143a172d751367db7ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c15dfc1dc0716d882dda143a172d751367db7ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c15dfc1dc0716d882dda143a172d751367db7ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c15dfc1dc0716d882dda143a172d751367db7ec/comments", "author": null, "committer": null, "parents": [{"sha": "1cd20a8fdcb1b425ef73c359c19148a1745b4201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd20a8fdcb1b425ef73c359c19148a1745b4201", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd20a8fdcb1b425ef73c359c19148a1745b4201"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "560ec37e90a83e64e7920ceeea756ad13a95b7b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c15dfc1dc0716d882dda143a172d751367db7ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c15dfc1dc0716d882dda143a172d751367db7ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c15dfc1dc0716d882dda143a172d751367db7ec", "patch": "@@ -1,5 +1,7 @@\n 2016-10-26  Jeff Law  <law@redhat.com>\n \n+\t* config/mcore/mcore.c (mcore_gen_compare): Adjust fallthru comments.\n+\n \t* config/microblaze/microblaze.c (microblaze_function_arg): Adjust\n \tfallthru comment.\n "}, {"sha": "bdb8431edda661c113ac5c205644253d77cd10d6", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c15dfc1dc0716d882dda143a172d751367db7ec/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c15dfc1dc0716d882dda143a172d751367db7ec/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=0c15dfc1dc0716d882dda143a172d751367db7ec", "patch": "@@ -611,7 +611,7 @@ mcore_gen_compare (enum rtx_code code, rtx op0, rtx op1)\n     case EQ:\t/* Use inverted condition, cmpne.  */\n       code = NE;\n       invert = true;\n-      /* Drop through.  */\n+      /* FALLTHRU */\n       \n     case NE:\t/* Use normal condition, cmpne.  */\n       if (GET_CODE (op1) == CONST_INT && ! CONST_OK_FOR_K (INTVAL (op1)))\n@@ -621,7 +621,7 @@ mcore_gen_compare (enum rtx_code code, rtx op0, rtx op1)\n     case LE:\t/* Use inverted condition, reversed cmplt.  */\n       code = GT;\n       invert = true;\n-      /* Drop through.  */\n+      /* FALLTHRU */\n       \n     case GT:\t/* Use normal condition, reversed cmplt.  */\n       if (GET_CODE (op1) == CONST_INT)\n@@ -631,7 +631,7 @@ mcore_gen_compare (enum rtx_code code, rtx op0, rtx op1)\n     case GE:\t/* Use inverted condition, cmplt.  */\n       code = LT;\n       invert = true;\n-      /* Drop through.  */\n+      /* FALLTHRU */\n       \n     case LT:\t/* Use normal condition, cmplt.  */\n       if (GET_CODE (op1) == CONST_INT && \n@@ -646,7 +646,7 @@ mcore_gen_compare (enum rtx_code code, rtx op0, rtx op1)\n       gcc_assert (GET_CODE (op1) != CONST_INT || INTVAL (op1) != 0);\n       code = LEU;\n       invert = true;\n-      /* Drop through.  */\n+      /* FALLTHRU */\n       \n     case LEU:\t/* Use normal condition, reversed cmphs.  */\n       if (GET_CODE (op1) == CONST_INT && INTVAL (op1) != 0)\n@@ -656,7 +656,7 @@ mcore_gen_compare (enum rtx_code code, rtx op0, rtx op1)\n     case LTU:\t/* Use inverted condition, cmphs.  */\n       code = GEU;\n       invert = true;\n-      /* Drop through.  */\n+      /* FALLTHRU */\n       \n     case GEU:\t/* Use normal condition, cmphs.  */\n       if (GET_CODE (op1) == CONST_INT && INTVAL (op1) != 0)"}]}