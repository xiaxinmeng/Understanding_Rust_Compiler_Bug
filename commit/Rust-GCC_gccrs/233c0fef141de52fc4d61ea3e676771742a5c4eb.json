{"sha": "233c0fef141de52fc4d61ea3e676771742a5c4eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMzYzBmZWYxNDFkZTUyZmM0ZDYxZWEzZTY3Njc3MTc0MmE1YzRlYg==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-11-09T17:33:19Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-11-09T17:33:19Z"}, "message": "(TARGET_*): Move it to the beginning of the file.\n\n(CPP_SPEC): Handle -mnosnake.\n\nFrom-SVN: r2722", "tree": {"sha": "ce5fd1018cfa4afef9c8e2955920e5bf5a86ae1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce5fd1018cfa4afef9c8e2955920e5bf5a86ae1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/233c0fef141de52fc4d61ea3e676771742a5c4eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233c0fef141de52fc4d61ea3e676771742a5c4eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/233c0fef141de52fc4d61ea3e676771742a5c4eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233c0fef141de52fc4d61ea3e676771742a5c4eb/comments", "author": null, "committer": null, "parents": [{"sha": "04fdca4a0a6b47dec2640f69c21eefafb6f58ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04fdca4a0a6b47dec2640f69c21eefafb6f58ee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04fdca4a0a6b47dec2640f69c21eefafb6f58ee5"}], "stats": {"total": 92, "additions": 45, "deletions": 47}, "files": [{"sha": "fcfc9010a337a9b4e6d10c7dcc0fab948e00802b", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 45, "deletions": 47, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233c0fef141de52fc4d61ea3e676771742a5c4eb/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233c0fef141de52fc4d61ea3e676771742a5c4eb/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=233c0fef141de52fc4d61ea3e676771742a5c4eb", "patch": "@@ -28,53 +28,6 @@ enum cmp_type\t\t\t\t/* comparison type */\n   CMP_MAX\t\t\t\t/* max comparison type */\n };\n \n-#define DBX_DEBUGGING_INFO\n-#define DEFAULT_GDB_EXTENSIONS 0\n-\n-#if (TARGET_DEFAULT & 1) == 0\n-#define CPP_SPEC \"%{msnake:-D__hp9000s700 -D_PA_RISC1_1}\\\n- %{mpa-risc-1-1:-D__hp9000s700 -D_PA_RISC1_1}\"\n-#else\n-#define CPP_SPEC \"%{!mpa-risc-1-0:-D__hp9000s700 -D_PA_RISC1_1}\"\n-#endif\n-\n-/* Defines for a K&R CC */\n-\n-#ifdef OLD_CC\n-#define CPP_SPEC \"%{!gnu:-nostdinc %{!nostinc:-I/usr/include}} \\\n-  %{gnu:%{nostdinc}} %{!gnu:-traditional} -Dvolatile=__volatile\"\n-#define CC1_SPEC \"%{!gnu:-traditional -fwritable-strings -fno-defer-pop} \\\n-  %{pg:} %{p:}\"\n-#else\n-#define CC1_SPEC \"%{pg:} %{p:}\"\n-#endif\n-  \n-/* Brain-dead loader */\n-#ifdef hpux8\n-#define LINK_SPEC \"-u main -a archive\"\n-#else\n-#define LINK_SPEC \"-u main\"\n-#endif\n-\n-/* Make gcc agree with <machine/ansi.h> */\n-\n-#define SIZE_TYPE \"unsigned int\"\n-#define PTRDIFF_TYPE \"int\"\n-#define WCHAR_TYPE \"short unsigned int\"\n-#define WCHAR_TYPE_SIZE 16\n-\n-/* Omit frame pointer at high optimization levels.  */\n-  \n-#define OPTIMIZATION_OPTIONS(OPTIMIZE) \\\n-{  \t\t\t\t\t\t\t\t\\\n-  if (OPTIMIZE >= 2) \t\t\t\t\t\t\\\n-    flag_omit_frame_pointer = 1;\t\t\t\t\\\n-}\n-\n-/* Names to predefine in the preprocessor for this target machine.  */\n-\n-#define CPP_PREDEFINES \"-Dhppa -Dhp9000s800 -D__hp9000s800 -Dhp9k8 -Dunix -D_HPUX_SOURCE -Dhp9000 -Dhp800 -Dspectrum -DREVARGV\"\n-\n /* Print subsidiary information on the compiler version in use.  */\n \n #define TARGET_VERSION fprintf (stderr, \" (hppa)\");\n@@ -130,7 +83,52 @@ extern int target_flags;\n    {\"long-calls\", 16},\t\\\n    { \"\", TARGET_DEFAULT}}\n \n+#ifndef TARGET_DEFAULT\n #define TARGET_DEFAULT 0\n+#endif\n+\n+#define DBX_DEBUGGING_INFO\n+#define DEFAULT_GDB_EXTENSIONS 0\n+\n+#if (TARGET_DEFAULT & 1) == 0\n+#define CPP_SPEC \"%{msnake:-D__hp9000s700 -D_PA_RISC1_1}\\\n+ %{mpa-risc-1-1:-D__hp9000s700 -D_PA_RISC1_1}\"\n+#else\n+#define CPP_SPEC \"%{!mpa-risc-1-0:-D__hp9000s700 -D_PA_RISC1_1}\\\n+ %{!mnosnake:-D__hp9000s700 -D_PA_RISC1_1}\"\n+#endif\n+\n+/* Defines for a K&R CC */\n+\n+#ifdef OLD_CC\n+#define CPP_SPEC \"%{!gnu:-nostdinc %{!nostinc:-I/usr/include}} \\\n+  %{gnu:%{nostdinc}} %{!gnu:-traditional} -Dvolatile=__volatile\"\n+#define CC1_SPEC \"%{!gnu:-traditional -fwritable-strings -fno-defer-pop} \\\n+  %{pg:} %{p:}\"\n+#else\n+#define CC1_SPEC \"%{pg:} %{p:}\"\n+#endif\n+  \n+#define LINK_SPEC \"-u main\"\n+\n+/* Make gcc agree with <machine/ansi.h> */\n+\n+#define SIZE_TYPE \"unsigned int\"\n+#define PTRDIFF_TYPE \"int\"\n+#define WCHAR_TYPE \"short unsigned int\"\n+#define WCHAR_TYPE_SIZE 16\n+\n+/* Omit frame pointer at high optimization levels.  */\n+  \n+#define OPTIMIZATION_OPTIONS(OPTIMIZE) \\\n+{  \t\t\t\t\t\t\t\t\\\n+  if (OPTIMIZE >= 2) \t\t\t\t\t\t\\\n+    flag_omit_frame_pointer = 1;\t\t\t\t\\\n+}\n+\n+/* Names to predefine in the preprocessor for this target machine.  */\n+\n+#define CPP_PREDEFINES \"-Dhppa -Dhp9000s800 -D__hp9000s800 -Dhp9k8 -Dunix -D_HPUX_SOURCE -Dhp9000 -Dhp800 -Dspectrum -DREVARGV\"\n \f\n /* target machine storage layout */\n "}]}