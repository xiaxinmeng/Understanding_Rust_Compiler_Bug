{"sha": "815c9e8b0734d45a6e5b5a7d50f38d4af7120a8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE1YzllOGIwNzM0ZDQ1YTZlNWI1YTdkNTBmMzhkNGFmNzEyMGE4Yw==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-12-09T06:07:05Z"}, "committer": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-12-09T06:07:05Z"}, "message": "Fixed rust-type-resolution.cc compile error", "tree": {"sha": "095183f5b0439a374798c427ca9110bbc3b05dc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/095183f5b0439a374798c427ca9110bbc3b05dc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/815c9e8b0734d45a6e5b5a7d50f38d4af7120a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815c9e8b0734d45a6e5b5a7d50f38d4af7120a8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/815c9e8b0734d45a6e5b5a7d50f38d4af7120a8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815c9e8b0734d45a6e5b5a7d50f38d4af7120a8c/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e5d54bcb0d9e540fdf063b8602610ec4cc9e155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e5d54bcb0d9e540fdf063b8602610ec4cc9e155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e5d54bcb0d9e540fdf063b8602610ec4cc9e155"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3e2db7f9310f48323f47c0affeff4c85c00d2144", "filename": "gcc/rust/analysis/rust-type-resolution.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815c9e8b0734d45a6e5b5a7d50f38d4af7120a8c/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815c9e8b0734d45a6e5b5a7d50f38d4af7120a8c/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc?ref=815c9e8b0734d45a6e5b5a7d50f38d4af7120a8c", "patch": "@@ -1046,7 +1046,7 @@ TypeResolution::visit (AST::LetStmt &stmt)\n     }\n   else if (stmt.has_type () && !stmt.has_init_expr ())\n     {\n-      inferedType = stmt.type.get ();\n+      inferedType = stmt.get_type ().get ();\n     }\n \n   // TODO check we know what the type is in the scope requires the builtins to"}]}