{"sha": "dc700f497caaf7c36db7220ab6f827b8dcf6a7e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM3MDBmNDk3Y2FhZjdjMzZkYjcyMjBhYjZmODI3YjhkY2Y2YTdlNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-27T00:55:38Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-27T00:55:38Z"}, "message": "Update comment for staticp.\n\nFrom-SVN: r86652", "tree": {"sha": "6c427b8f84f25b3a3314f74ca5ce1571788772a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c427b8f84f25b3a3314f74ca5ce1571788772a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc700f497caaf7c36db7220ab6f827b8dcf6a7e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc700f497caaf7c36db7220ab6f827b8dcf6a7e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc700f497caaf7c36db7220ab6f827b8dcf6a7e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc700f497caaf7c36db7220ab6f827b8dcf6a7e6/comments", "author": null, "committer": null, "parents": [{"sha": "ee8a6a3ee5d35c2e188225c2bbb58c2cca69a2ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8a6a3ee5d35c2e188225c2bbb58c2cca69a2ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee8a6a3ee5d35c2e188225c2bbb58c2cca69a2ab"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "1c5060e5869b0b2b9ebf2ab2d47c2e506f11be29", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc700f497caaf7c36db7220ab6f827b8dcf6a7e6/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc700f497caaf7c36db7220ab6f827b8dcf6a7e6/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=dc700f497caaf7c36db7220ab6f827b8dcf6a7e6", "patch": "@@ -1363,8 +1363,9 @@ array_type_nelts (tree type)\n \t  : fold (build2 (MINUS_EXPR, TREE_TYPE (max), max, min)));\n }\n \f\n-/* Return true if arg is static -- a reference to an object in\n-   static storage.  This is not the same as the C meaning of `static'.  */\n+/* If arg is static -- a reference to an object in static storage -- then\n+   return the object.  This is not the same as the C meaning of `static'.\n+   If arg isn't static, return NULL.  */\n \n tree\n staticp (tree arg)\n@@ -2270,7 +2271,11 @@ do { tree _node = (NODE); \\\n      address of a volatile variable is not volatile.)  If it's a constant,\n      the address is both invariant and constant.  Otherwise it's neither.  */\n   if (TREE_CODE (node) == INDIRECT_REF)\n-    UPDATE_TITCSE (node);\n+    {\n+      /* If this is &((T*)0)->field, then this is a form of addition.  */\n+      if (TREE_CODE (TREE_OPERAND (node, 0)) != INTEGER_CST)\n+\tUPDATE_TITCSE (node);\n+    }\n   else if (DECL_P (node))\n     {\n       if (staticp (node))"}]}