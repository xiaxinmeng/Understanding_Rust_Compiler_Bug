{"sha": "8cc863ca8f48662e9c9339710fa303587479bf71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNjODYzY2E4ZjQ4NjYyZTljOTMzOTcxMGZhMzAzNTg3NDc5YmY3MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-09T08:18:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-09T08:18:47Z"}, "message": "libgomp: Silence false positive -Wmaybe-uninitialized warning [PR99984]\n\npthread_setspecific second argument is const void *, so that one can\ncall it even with pointers to const, but the function only stores the\npointer and does nothing else, so the new assumption of -Wmaybe-uninitialized\nthat functions taking such pointers will read from what those pointers\nwill point to is wrong.  Maybe it would be useful to have some whitelist\nof functions that surely don't do that.\n\nAnyway, in this case it is easy to workaround the warning by moving the\npthread_setspecific call after the initialization without slowing anything\ndown.\n\n2021-04-09  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR libgomp/99984\n\t* team.c (gomp_thread_start): Call pthread_setspecific for\n\t!(defined HAVE_TLS || defined USE_EMUTLS) only after local_thr\n\thas been initialized to avoid false positive warning.", "tree": {"sha": "c757ad06ad7b39f149abde77a4b85920f085fa86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c757ad06ad7b39f149abde77a4b85920f085fa86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cc863ca8f48662e9c9339710fa303587479bf71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc863ca8f48662e9c9339710fa303587479bf71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cc863ca8f48662e9c9339710fa303587479bf71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc863ca8f48662e9c9339710fa303587479bf71/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "019a922063f26784d5a070d9198a1f937b8a8343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019a922063f26784d5a070d9198a1f937b8a8343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/019a922063f26784d5a070d9198a1f937b8a8343"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "ba57152db8a4ccbb13ed74427a2834b9704851df", "filename": "libgomp/team.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc863ca8f48662e9c9339710fa303587479bf71/libgomp%2Fteam.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc863ca8f48662e9c9339710fa303587479bf71/libgomp%2Fteam.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fteam.c?ref=8cc863ca8f48662e9c9339710fa303587479bf71", "patch": "@@ -78,7 +78,6 @@ gomp_thread_start (void *xdata)\n #else\n   struct gomp_thread local_thr;\n   thr = &local_thr;\n-  pthread_setspecific (gomp_tls_key, thr);\n #endif\n   gomp_sem_init (&thr->release, 0);\n \n@@ -92,6 +91,9 @@ gomp_thread_start (void *xdata)\n #ifdef GOMP_NEEDS_THREAD_HANDLE\n   thr->handle = data->handle;\n #endif\n+#if !(defined HAVE_TLS || defined USE_EMUTLS)\n+  pthread_setspecific (gomp_tls_key, thr);\n+#endif\n \n   thr->ts.team->ordered_release[thr->ts.team_id] = &thr->release;\n "}]}