{"sha": "b7ad2f8bacf1036f5b01bebb45088567da987b4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdhZDJmOGJhY2YxMDM2ZjViMDFiZWJiNDUwODg1NjdkYTk4N2I0ZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-07-31T08:49:00Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-07-31T08:49:00Z"}, "message": "class.c (dfs_ctor_vtable_bases_queue_p): Always walk into the shared virtual base, so preserving inheritance graph order.\n\ncp:\n\t* class.c (dfs_ctor_vtable_bases_queue_p): Always walk into\n\tthe shared virtual base, so preserving inheritance graph order.\ntestsuite:\n\t* g++.dg/abi/vbase8-22.C: New test.\n\nFrom-SVN: r44506", "tree": {"sha": "785d6d27be662318b32182b94684cfd98dc9f990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/785d6d27be662318b32182b94684cfd98dc9f990"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7ad2f8bacf1036f5b01bebb45088567da987b4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7ad2f8bacf1036f5b01bebb45088567da987b4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7ad2f8bacf1036f5b01bebb45088567da987b4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7ad2f8bacf1036f5b01bebb45088567da987b4d/comments", "author": null, "committer": null, "parents": [{"sha": "f70961a0e3c6240fec8bd2423896828fc74d8b77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70961a0e3c6240fec8bd2423896828fc74d8b77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f70961a0e3c6240fec8bd2423896828fc74d8b77"}], "stats": {"total": 106, "additions": 95, "deletions": 11}, "files": [{"sha": "b1f52f3c71e0f2ffff02f5cccf0d598c29b700e3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ad2f8bacf1036f5b01bebb45088567da987b4d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ad2f8bacf1036f5b01bebb45088567da987b4d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b7ad2f8bacf1036f5b01bebb45088567da987b4d", "patch": "@@ -1,3 +1,8 @@\n+2001-07-31  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (dfs_ctor_vtable_bases_queue_p): Always walk into\n+\tthe shared virtual base, so preserving inheritance graph order.\n+\n 2001-07-30  Andreas Jaeger  <aj@suse.de>\n \n         * decl2.c: Remove unused var global_temp_name_counter."}, {"sha": "f4aae8ef3d5d5e470f11b17fc4e383cff57f1645", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ad2f8bacf1036f5b01bebb45088567da987b4d/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ad2f8bacf1036f5b01bebb45088567da987b4d/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=b7ad2f8bacf1036f5b01bebb45088567da987b4d", "patch": "@@ -7195,24 +7195,19 @@ dfs_build_secondary_vptr_vtt_inits (binfo, data)\n }\n \n /* dfs_walk_real predicate for building vtables. DATA is a TREE_LIST,\n-   TREE_UNSIGNED indicates that a constructor vtable is being built.\n-   TREE_USED indicates whether marked or unmarked bases should be walked.\n-   TREE_PURPOSE is the TREE_TYPE that dominates the hierarchy.  */\n+   VTT_MARKED_BINFO_P indicates whether marked or unmarked bases\n+   should be walked.  TREE_PURPOSE is the TREE_TYPE that dominates the\n+   hierarchy.  */\n \n static tree\n dfs_ctor_vtable_bases_queue_p (binfo, data)\n      tree binfo;\n      void *data;\n {\n-  if (TREE_VIA_VIRTUAL (binfo) && !BINFO_PRIMARY_P (binfo))\n-    {\n-      tree type = TREE_PURPOSE ((tree) data);\n+  if (TREE_VIA_VIRTUAL (binfo))\n+     /* Get the shared version.  */\n+    binfo = binfo_for_vbase (BINFO_TYPE (binfo), TREE_PURPOSE ((tree) data));\n \n-      /* This is a non-primary virtual base, get the shared version.  */\n-      binfo = binfo_for_vbase (BINFO_TYPE (binfo), type);\n-      if (VTT_TOP_LEVEL_P ((tree) data) && BINFO_PRIMARY_P (binfo))\n-        return NULL_TREE;\n-    }\n   if (!BINFO_MARKED (binfo) == VTT_MARKED_BINFO_P ((tree) data))\n     return NULL_TREE;\n   return binfo;"}, {"sha": "8c8670e42cdc7a3fcaaab03f462e7d73597dd39d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ad2f8bacf1036f5b01bebb45088567da987b4d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ad2f8bacf1036f5b01bebb45088567da987b4d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7ad2f8bacf1036f5b01bebb45088567da987b4d", "patch": "@@ -1,3 +1,7 @@\n+2001-07-31  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/abi/vbase8-22.C: New test.\n+\n 2001-07-31  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n \t* gcc.dg/cpp/macro8.c: New test."}, {"sha": "4edb2b47a8a7a6bf11ab8c6453a76f0addb23e7a", "filename": "gcc/testsuite/g++.dg/abi/vbase8-22.C", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ad2f8bacf1036f5b01bebb45088567da987b4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase8-22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ad2f8bacf1036f5b01bebb45088567da987b4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase8-22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase8-22.C?ref=b7ad2f8bacf1036f5b01bebb45088567da987b4d", "patch": "@@ -0,0 +1,80 @@\n+// { dg-options -w }\n+// { dg-do run }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 27 Jul 2001 <nathan@codesourcery.com>\n+\n+// Origin stefan@space.twc.de\n+// Bug 3145 case 22. Horribly complicated class hierarchy\n+\n+class C0\n+{};\n+class C1\n+ :  public C0\n+{};\n+class C2\n+ :  public C1\n+ ,  virtual public C0\n+{};\n+class C3\n+ :  virtual public C0\n+ ,  virtual public C2\n+ ,  virtual public C1\n+{};\n+class C4\n+ :  virtual public C2\n+ ,  public C1\n+ ,  virtual public C3\n+ ,  public C0\n+{};\n+class C5\n+ :  virtual public C0\n+ ,  virtual public C4\n+ ,  public C1\n+ ,  virtual public C2\n+ ,  virtual public C3\n+{};\n+class C6\n+ :  public C0\n+ ,  virtual public C1\n+ ,  public C5\n+ ,  public C2\n+ ,  virtual public C3\n+ ,  virtual public C4\n+{};\n+class C7\n+ :  virtual public C1\n+ ,  public C5\n+ ,  virtual public C6\n+ ,  virtual public C4\n+ ,  virtual public C3\n+ ,  virtual public C0\n+{};\n+class C8\n+ :  virtual public C6\n+ ,  virtual public C1\n+ ,  virtual public C2\n+ ,  public C3\n+ ,  virtual public C4\n+{};\n+class C9\n+ :  public C4\n+ ,  virtual public C2\n+ ,  virtual public C8\n+ ,  public C3\n+ ,  public C1\n+ ,  public C6\n+ ,  public C5\n+{};\n+main() {\n+  C0 c0;\n+  C1 c1;\n+  C2 c2;\n+  C3 c3;\n+  C4 c4;\n+  C5 c5;\n+  C6 c6;\n+  C7 c7;\n+  C8 c8;\n+  C9 c9;\n+}"}]}