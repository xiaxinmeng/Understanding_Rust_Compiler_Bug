{"sha": "ba29f5de047e868daa725379b32a44a7f5ea97ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEyOWY1ZGUwNDdlODY4ZGFhNzI1Mzc5YjMyYTQ0YTdmNWVhOTdlZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-03-02T06:05:59Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-03-02T06:05:59Z"}, "message": "* config/h8300/h8300.md: Tweak formatting.\n\nFrom-SVN: r78753", "tree": {"sha": "5fb5ad0ba2a88350b1a8fd36092abbbf81da7a1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fb5ad0ba2a88350b1a8fd36092abbbf81da7a1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba29f5de047e868daa725379b32a44a7f5ea97ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba29f5de047e868daa725379b32a44a7f5ea97ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba29f5de047e868daa725379b32a44a7f5ea97ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba29f5de047e868daa725379b32a44a7f5ea97ed/comments", "author": null, "committer": null, "parents": [{"sha": "a5a0ab452a0b871bc6a996ee442fe3b6bf8c038a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a0ab452a0b871bc6a996ee442fe3b6bf8c038a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a0ab452a0b871bc6a996ee442fe3b6bf8c038a"}], "stats": {"total": 58, "additions": 28, "deletions": 30}, "files": [{"sha": "09c964e1ba876bfcf188f05d23ab05f333f2ec38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba29f5de047e868daa725379b32a44a7f5ea97ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba29f5de047e868daa725379b32a44a7f5ea97ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba29f5de047e868daa725379b32a44a7f5ea97ed", "patch": "@@ -1,3 +1,7 @@\n+2004-03-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md: Tweak formatting.\n+\n 2004-03-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (*cmphi_h8300): Rename to"}, {"sha": "6bd51431cb2d8f4987f97f348081d547fede3a0c", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 24, "deletions": 30, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba29f5de047e868daa725379b32a44a7f5ea97ed/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba29f5de047e868daa725379b32a44a7f5ea97ed/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=ba29f5de047e868daa725379b32a44a7f5ea97ed", "patch": "@@ -3543,11 +3543,10 @@\n ;; Convert (A >> B) & C to (A & 255) >> B if C == 255 >> B.\n \n (define_peephole2\n-  [(parallel\n-     [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t   (lshiftrt:HI (match_dup 0)\n-\t\t\t(match_operand:HI 1 \"const_int_operand\" \"\")))\n-      (clobber (match_operand:HI 2 \"\" \"\"))])\n+  [(parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t   (lshiftrt:HI (match_dup 0)\n+\t\t\t\t(match_operand:HI 1 \"const_int_operand\" \"\")))\n+\t      (clobber (match_operand:HI 2 \"\" \"\"))])\n    (set (match_dup 0)\n \t(and:HI (match_dup 0)\n \t\t(match_operand:HI 3 \"const_int_operand\" \"\")))]\n@@ -3565,11 +3564,10 @@\n ;; Convert (A << B) & C to (A & 255) << B if C == 255 << B.\n \n (define_peephole2\n-  [(parallel\n-     [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t   (ashift:HI (match_dup 0)\n-\t\t      (match_operand:HI 1 \"const_int_operand\" \"\")))\n-      (clobber (match_operand:HI 2 \"\" \"\"))])\n+  [(parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t   (ashift:HI (match_dup 0)\n+\t\t\t      (match_operand:HI 1 \"const_int_operand\" \"\")))\n+\t      (clobber (match_operand:HI 2 \"\" \"\"))])\n    (set (match_dup 0)\n \t(and:HI (match_dup 0)\n \t\t(match_operand:HI 3 \"const_int_operand\" \"\")))]\n@@ -3587,11 +3585,10 @@\n ;; Convert (A >> B) & C to (A & 255) >> B if C == 255 >> B.\n \n (define_peephole2\n-  [(parallel\n-     [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t   (lshiftrt:SI (match_dup 0)\n-\t\t\t(match_operand:SI 1 \"const_int_operand\" \"\")))\n-      (clobber (match_operand:SI 2 \"\" \"\"))])\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t   (lshiftrt:SI (match_dup 0)\n+\t\t\t\t(match_operand:SI 1 \"const_int_operand\" \"\")))\n+\t      (clobber (match_operand:SI 2 \"\" \"\"))])\n    (set (match_dup 0)\n \t(and:SI (match_dup 0)\n \t\t(match_operand:SI 3 \"const_int_operand\" \"\")))]\n@@ -3609,11 +3606,10 @@\n ;; Convert (A << B) & C to (A & 255) << B if C == 255 << B.\n \n (define_peephole2\n-  [(parallel\n-     [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t   (ashift:SI (match_dup 0)\n-\t\t      (match_operand:SI 1 \"const_int_operand\" \"\")))\n-      (clobber (match_operand:SI 2 \"\" \"\"))])\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t   (ashift:SI (match_dup 0)\n+\t\t\t      (match_operand:SI 1 \"const_int_operand\" \"\")))\n+\t      (clobber (match_operand:SI 2 \"\" \"\"))])\n    (set (match_dup 0)\n \t(and:SI (match_dup 0)\n \t\t(match_operand:SI 3 \"const_int_operand\" \"\")))]\n@@ -3631,11 +3627,10 @@\n ;; Convert (A >> B) & C to (A & 65535) >> B if C == 65535 >> B.\n \n (define_peephole2\n-  [(parallel\n-     [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t   (lshiftrt:SI (match_dup 0)\n-\t\t\t(match_operand:SI 1 \"const_int_operand\" \"\")))\n-      (clobber (match_operand:SI 2 \"\" \"\"))])\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t   (lshiftrt:SI (match_dup 0)\n+\t\t\t\t(match_operand:SI 1 \"const_int_operand\" \"\")))\n+\t      (clobber (match_operand:SI 2 \"\" \"\"))])\n    (set (match_dup 0)\n \t(and:SI (match_dup 0)\n \t\t(match_operand:SI 3 \"const_int_operand\" \"\")))]\n@@ -3653,11 +3648,10 @@\n ;; Convert (A << B) & C to (A & 65535) << B if C == 65535 << B.\n \n (define_peephole2\n-  [(parallel\n-     [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t   (ashift:SI (match_dup 0)\n-\t\t      (match_operand:SI 1 \"const_int_operand\" \"\")))\n-      (clobber (match_operand:SI 2 \"\" \"\"))])\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t   (ashift:SI (match_dup 0)\n+\t\t\t      (match_operand:SI 1 \"const_int_operand\" \"\")))\n+\t      (clobber (match_operand:SI 2 \"\" \"\"))])\n    (set (match_dup 0)\n \t(and:SI (match_dup 0)\n \t\t(match_operand:SI 3 \"const_int_operand\" \"\")))]"}]}