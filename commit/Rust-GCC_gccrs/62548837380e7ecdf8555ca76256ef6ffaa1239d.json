{"sha": "62548837380e7ecdf8555ca76256ef6ffaa1239d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI1NDg4MzczODBlN2VjZGY4NTU1Y2E3NjI1NmVmNmZmYWExMjM5ZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-04-06T09:21:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:21:03Z"}, "message": "exp_intr.adb (Expand_Exception_Call): Calls to subprograms in GNAT.Current_Exception are not allowed if...\n\n2007-04-06  Robert Dewar  <dewar@adacore.com>\n\t    Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_intr.adb (Expand_Exception_Call): Calls to subprograms in\n\tGNAT.Current_Exception are not allowed if pragma Restrictions\n\t(No_Exception_Propagation) is set and in any case make the associated\n\thandler unsuitable as a target for a local raise statement.\n\t(Expand_Dispatching_Constructor_Call): Replace generation of call to the\n\trun-time subprogram CW_Membership by call to Build_CW_Membership.\n\t(Expand_Dispatching_Constructor_Call): If the dispatching tag is given\n\tby a function call, a temporary must be created before expanding the\n\tConstructor_Call itself, to prevent out-of-order elaboration in the\n\tback-end when stack checking is enabled..\n\nFrom-SVN: r123566", "tree": {"sha": "299de6470d445a43b19266b7afa994a877e2d212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/299de6470d445a43b19266b7afa994a877e2d212"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62548837380e7ecdf8555ca76256ef6ffaa1239d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62548837380e7ecdf8555ca76256ef6ffaa1239d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62548837380e7ecdf8555ca76256ef6ffaa1239d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62548837380e7ecdf8555ca76256ef6ffaa1239d/comments", "author": null, "committer": null, "parents": [{"sha": "8aa23fe306c816b02ff00a1419489b2fd071ae16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa23fe306c816b02ff00a1419489b2fd071ae16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aa23fe306c816b02ff00a1419489b2fd071ae16"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "e15fafc9a8efe8e7bd98aff6562bf61ac90244f4", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62548837380e7ecdf8555ca76256ef6ffaa1239d/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62548837380e7ecdf8555ca76256ef6ffaa1239d/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=62548837380e7ecdf8555ca76256ef6ffaa1239d", "patch": "@@ -29,6 +29,7 @@ with Checks;   use Checks;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Errout;   use Errout;\n+with Exp_Atag; use Exp_Atag;\n with Exp_Ch4;  use Exp_Ch4;\n with Exp_Ch7;  use Exp_Ch7;\n with Exp_Ch11; use Exp_Ch11;\n@@ -41,6 +42,7 @@ with Namet;    use Namet;\n with Nmake;    use Nmake;\n with Nlists;   use Nlists;\n with Restrict; use Restrict;\n+with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n with Sem_Eval; use Sem_Eval;\n@@ -161,7 +163,11 @@ package body Exp_Intr is\n           Parameter_Associations => New_List (Relocate_Node (Param_Arg)));\n \n       --  Establish its controlling tag from the tag passed to the instance\n+      --  The tag may be given by a function call, in which case a temporary\n+      --  should be generated now, to prevent out-of-order insertions during\n+      --  the expansion of that call when stack-checking is enabled.\n \n+      Remove_Side_Effects (Tag_Arg);\n       Set_Controlling_Argument (Cnstr_Call, Relocate_Node (Tag_Arg));\n \n       --  Rewrite and analyze the call to the instance as a class-wide\n@@ -171,7 +177,7 @@ package body Exp_Intr is\n       Analyze_And_Resolve (N, Etype (Act_Constr));\n \n       --  Do not generate a run-time check on the built object if tag\n-      --  checks is suppressed for the result type.\n+      --  checks are suppressed for the result type.\n \n       if Tag_Checks_Suppressed (Etype (Result_Typ)) then\n          null;\n@@ -191,13 +197,12 @@ package body Exp_Intr is\n            Make_Implicit_If_Statement (N,\n              Condition =>\n                Make_Op_Not (Loc,\n-                 Make_DT_Access_Action (Result_Typ,\n-                    Action => CW_Membership,\n-                    Args   => New_List (\n-                      Duplicate_Subexpr (Tag_Arg),\n-                      New_Reference_To (\n+                 Build_CW_Membership (Loc,\n+                   Obj_Tag_Node => Duplicate_Subexpr (Tag_Arg),\n+                   Typ_Tag_Node =>\n+                     New_Reference_To (\n                         Node (First_Elmt (Access_Disp_Table (\n-                                            Root_Type (Result_Typ)))), Loc)))),\n+                                            Root_Type (Result_Typ)))), Loc))),\n              Then_Statements =>\n                New_List (Make_Raise_Statement (Loc,\n                            New_Occurrence_Of (RTE (RE_Tag_Error), Loc)))));\n@@ -231,9 +236,9 @@ package body Exp_Intr is\n    -- Expand_Exception_Call --\n    ---------------------------\n \n-   --  If the function call is not within an exception handler, then the\n-   --  call is replaced by a null string. Otherwise the appropriate routine\n-   --  in Ada.Exceptions is called passing the choice parameter specification\n+   --  If the function call is not within an exception handler, then the call\n+   --  is replaced by a null string. Otherwise the appropriate routine in\n+   --  Ada.Exceptions is called passing the choice parameter specification\n    --  from the enclosing handler. If the enclosing handler lacks a choice\n    --  parameter, then one is supplied.\n \n@@ -258,12 +263,18 @@ package body Exp_Intr is\n          --  Case of in exception handler\n \n          elsif Nkind (P) = N_Exception_Handler then\n-            if No (Choice_Parameter (P)) then\n \n-               --  If no choice parameter present, then put one there. Note\n-               --  that we do not need to put it on the entity chain, since\n-               --  no one will be referencing it by normal visibility methods.\n+            --  Handler cannot be used for a local raise, and furthermore, this\n+            --  is a violation of the No_Exception_Propagation restriction.\n+\n+            Set_Local_Raise_Not_OK (P);\n+            Check_Restriction (No_Exception_Propagation, N);\n \n+            --  If no choice parameter present, then put one there. Note that\n+            --  we do not need to put it on the entity chain, since no one will\n+            --  be referencing it by normal visibility methods.\n+\n+            if No (Choice_Parameter (P)) then\n                E := Make_Defining_Identifier (Loc, New_Internal_Name ('E'));\n                Set_Choice_Parameter (P, E);\n                Set_Ekind (E, E_Variable);"}]}