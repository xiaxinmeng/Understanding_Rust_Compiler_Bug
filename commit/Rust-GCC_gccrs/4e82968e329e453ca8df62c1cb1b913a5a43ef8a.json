{"sha": "4e82968e329e453ca8df62c1cb1b913a5a43ef8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU4Mjk2OGUzMjllNDUzY2E4ZGY2MmMxY2IxYjkxM2E1YTQzZWY4YQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-10T22:59:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-10T22:59:10Z"}, "message": "pa.h (GENERAL_OR_FP_OR_SNAKE_FP_REGS): New register class.\n\n\t* pa.h (GENERAL_OR_FP_OR_SNAKE_FP_REGS): New register class.\n\t(LEGITIMIZE_ADDRESS): No longer show DP relocation.  Simplify.\n\nFrom-SVN: r3184", "tree": {"sha": "ee2e60df7942a15986ec3299c7b3c7df8cfdca96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee2e60df7942a15986ec3299c7b3c7df8cfdca96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e82968e329e453ca8df62c1cb1b913a5a43ef8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e82968e329e453ca8df62c1cb1b913a5a43ef8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e82968e329e453ca8df62c1cb1b913a5a43ef8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e82968e329e453ca8df62c1cb1b913a5a43ef8a/comments", "author": null, "committer": null, "parents": [{"sha": "ac2a94545529758e5648ade68e55a0b5b257c445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2a94545529758e5648ade68e55a0b5b257c445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac2a94545529758e5648ade68e55a0b5b257c445"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "da8a9c636b9c7832ac9aae880b2f12c07a8e6c1b", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e82968e329e453ca8df62c1cb1b913a5a43ef8a/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e82968e329e453ca8df62c1cb1b913a5a43ef8a/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=4e82968e329e453ca8df62c1cb1b913a5a43ef8a", "patch": "@@ -507,11 +507,15 @@ extern int leaf_function;\n      fmpyadd and fmpysub are restricted.\n \n      FP_OR_SNAKE_FP_REGS is for reload_{in,out}di only and isn't used\n-     anywhere else.*/\n+     anywhere else.\n+\n+     GENERAL_OR_FP_OR_SNAKE_FP_REGS is for reload_{in,out}si only and\n+     isn't used anywhereelse.  */\n \n enum reg_class { NO_REGS, R1_REGS, GENERAL_REGS, FP_REGS, GENERAL_OR_FP_REGS,\n   HI_SNAKE_FP_REGS, SNAKE_FP_REGS, GENERAL_OR_SNAKE_FP_REGS,\n-  FP_OR_SNAKE_FP_REGS, SHIFT_REGS, ALL_REGS, LIM_REG_CLASSES}; \n+  FP_OR_SNAKE_FP_REGS, GENERAL_OR_FP_OR_SNAKE_FP_REGS, SHIFT_REGS, \n+  ALL_REGS, LIM_REG_CLASSES}; \n \n #define N_REG_CLASSES (int) LIM_REG_CLASSES\n \n@@ -520,7 +524,8 @@ enum reg_class { NO_REGS, R1_REGS, GENERAL_REGS, FP_REGS, GENERAL_OR_FP_REGS,\n #define REG_CLASS_NAMES \\\n   { \"NO_REGS\", \"R1_REGS\", \"GENERAL_REGS\", \"FP_REGS\", \"GENERAL_OR_FP_REGS\",\\\n     \"HI_SNAKE_FP_REGS\", \"SNAKE_FP_REGS\", \"GENERAL_OR_SNAKE_FP_REGS\",\\\n-    \"FP_OR_SNAKE_FP_REGS\",\"SHIFT_REGS\", \"ALL_REGS\"}\n+    \"FP_OR_SNAKE_FP_REGS\", \"GENERAL_OR_FP_OR_SNAKE_FP_REGS\", \"SHIFT_REGS\",\\\n+    \"ALL_REGS\"}\n \n /* Define which registers fit in which classes.\n    This is an initializer for a vector of HARD_REG_SET\n@@ -537,6 +542,7 @@ enum reg_class { NO_REGS, R1_REGS, GENERAL_REGS, FP_REGS, GENERAL_OR_FP_REGS,\n   {0, 0xffff0000, ~0, 0xffff},\t/* SNAKE_FP_REGS */\t\\\n   {-2, 0xffff0000, ~0, 0xffff},\t/* GENERAL_OR_SNAKE_FP_REGS */\\\n   {0, ~0, ~0, 0xffff},\t\t/* FP_OR_SNAKE_FP_REGS */\\\n+  {-2, ~0, ~0, 0xffff},\t\t/* GENERAL_OR_FP_OR_SNAKE_FP_REGS */\\\n   {0, 0, 0, 0x10000},\t\t/* SHIFT_REGS */\t\\\n   {-2, ~0, ~0, 0x1ffff}}\t/* ALL_REGS */\n \n@@ -566,7 +572,8 @@ enum reg_class { NO_REGS, R1_REGS, GENERAL_REGS, FP_REGS, GENERAL_OR_FP_REGS,\n     ((C) == 'y' ? (TARGET_SNAKE ? HI_SNAKE_FP_REGS : NO_REGS) :\t\\\n      ((C) == 'q' ? SHIFT_REGS :\t\t\t\t\t\\\n       ((C) == 'a' ? R1_REGS :\t\t\t\t\t\\\n-       ((C) == 'z' ? FP_OR_SNAKE_FP_REGS : NO_REGS))))))\n+       ((C) == 'z' ? FP_OR_SNAKE_FP_REGS :\t\t\t\\\n+        ((C) == 'Z' ? GENERAL_OR_FP_OR_SNAKE_FP_REGS : NO_REGS)))))))\n \n /* The letters I, J, K, L and M in a register constraint string\n    can be used to stand for particular ranges of immediate operands.\n@@ -1245,18 +1252,10 @@ extern union tree_node *current_function_decl;\n   if (memory_address_p (MODE, X))\t\t\t\t\\\n     goto WIN;\t\t\t\t\t\t\t\\\n   if (flag_pic) (X) = legitimize_pic_address (X, MODE, gen_reg_rtx (Pmode));\\\n-  else if ((GET_CODE (X) == SYMBOL_REF && read_only_operand (X))\\\n+  else if (GET_CODE (X) == SYMBOL_REF \t\t\t\t\\\n \t    || GET_CODE (X) == LABEL_REF)\t\t\t\\\n     (X) = gen_rtx (LO_SUM, Pmode,\t\t\t\t\\\n \t\t   copy_to_mode_reg (Pmode, gen_rtx (HIGH, Pmode, X)), X); \\\n-  else if (GET_CODE (X) == SYMBOL_REF)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      rtx temp2 = gen_reg_rtx (Pmode);\t\t\t\t\\\n-      emit_insn (gen_rtx (SET, VOIDmode, temp2, \t\t\\\n-\t\t\t  gen_rtx (PLUS, Pmode, gen_rtx (REG, Pmode, 27),\\\n-\t\t\t\t   gen_rtx (HIGH, Pmode, X))));\t\\\n-      (X) = gen_rtx (LO_SUM, Pmode, temp2, X);\t \t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n   if (memory_address_p (MODE, X))\t\t\t\t\\\n     goto WIN;}\n "}]}