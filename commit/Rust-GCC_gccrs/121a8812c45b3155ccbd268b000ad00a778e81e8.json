{"sha": "121a8812c45b3155ccbd268b000ad00a778e81e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIxYTg4MTJjNDViMzE1NWNjYmQyNjhiMDAwYWQwMGE3NzhlODFlOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-21T08:21:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-21T08:21:52Z"}, "message": "libgomp: Hopefully avoid false positive warnings in env.c on solaris\n\n> the patch also breaks bootstrap on both i386-pc-solaris2.11 and\n> sparc-sun-solaris2.11:\n>\n> /vol/gcc/src/hg/master/local/libgomp/env.c: In function 'initialize_env':\n> /vol/gcc/src/hg/master/local/libgomp/env.c:414:16: error: 'new_offload' may be used uninitialized in this function [-Werror=maybe-uninitialized]\n>   414 |       *offload = new_offload;\n>       |       ~~~~~~~~~^~~~~~~~~~~~~\n> /vol/gcc/src/hg/master/local/libgomp/env.c:384:30: note: 'new_offload' was declared here\n>   384 |   enum gomp_target_offload_t new_offload;\n>       |                              ^~~~~~~~~~~\n\nI can't reproduce that, but I fail to see why we need two separate\nvariables, one with actual value and one tracking if the value is valid.\n\nSo, I'm going with:\n\n2020-10-21  Jakub Jelinek  <jakub@redhat.com>\n\n\t* env.c (parse_target_offload): Change new_offload var type to int,\n\tpreinitialize to -1, remove found var and test new_offload != -1\n\tinstead of found.", "tree": {"sha": "af92e526851805c8e1c4eedd7b3da0b209f954ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af92e526851805c8e1c4eedd7b3da0b209f954ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/121a8812c45b3155ccbd268b000ad00a778e81e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/121a8812c45b3155ccbd268b000ad00a778e81e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/121a8812c45b3155ccbd268b000ad00a778e81e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/121a8812c45b3155ccbd268b000ad00a778e81e8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bae73ca5222381861a29202c88ce5cfe675b6753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae73ca5222381861a29202c88ce5cfe675b6753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae73ca5222381861a29202c88ce5cfe675b6753"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "ab22525570929d50bdba0d9c386af390b072ba20", "filename": "libgomp/env.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/121a8812c45b3155ccbd268b000ad00a778e81e8/libgomp%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/121a8812c45b3155ccbd268b000ad00a778e81e8/libgomp%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fenv.c?ref=121a8812c45b3155ccbd268b000ad00a778e81e8", "patch": "@@ -380,8 +380,7 @@ static void\n parse_target_offload (const char *name, enum gomp_target_offload_t *offload)\n {\n   const char *env;\n-  bool found = false;\n-  enum gomp_target_offload_t new_offload;\n+  int new_offload = -1;\n \n   env = getenv (name);\n   if (env == NULL)\n@@ -392,24 +391,21 @@ parse_target_offload (const char *name, enum gomp_target_offload_t *offload)\n   if (strncasecmp (env, \"default\", 7) == 0)\n     {\n       env += 7;\n-      found = true;\n       new_offload = GOMP_TARGET_OFFLOAD_DEFAULT;\n     }\n   else if (strncasecmp (env, \"mandatory\", 9) == 0)\n     {\n       env += 9;\n-      found = true;\n       new_offload = GOMP_TARGET_OFFLOAD_MANDATORY;\n     }\n   else if (strncasecmp (env, \"disabled\", 8) == 0)\n     {\n       env += 8;\n-      found = true;\n       new_offload = GOMP_TARGET_OFFLOAD_DISABLED;\n     }\n   while (isspace ((unsigned char) *env))\n     ++env;\n-  if (found && *env == '\\0')\n+  if (new_offload != -1 && *env == '\\0')\n     {\n       *offload = new_offload;\n       return;"}]}