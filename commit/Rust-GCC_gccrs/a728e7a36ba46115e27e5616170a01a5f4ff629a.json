{"sha": "a728e7a36ba46115e27e5616170a01a5f4ff629a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcyOGU3YTM2YmE0NjExNWUyN2U1NjE2MTcwYTAxYTVmNGZmNjI5YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-15T00:49:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-15T00:49:22Z"}, "message": "Use pc instead of unknown, for pc clones.\n\nRMS:\n\nUse pc instead of unknown, for pc clones.\nUse -linux-gnu for Linux-based GNU systems.\n\nFrom-SVN: r12717", "tree": {"sha": "c82d498f0bd728f4520b59e87c99fa28f49a34ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c82d498f0bd728f4520b59e87c99fa28f49a34ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a728e7a36ba46115e27e5616170a01a5f4ff629a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a728e7a36ba46115e27e5616170a01a5f4ff629a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a728e7a36ba46115e27e5616170a01a5f4ff629a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a728e7a36ba46115e27e5616170a01a5f4ff629a/comments", "author": null, "committer": null, "parents": [{"sha": "12670d88691f53ee48e56c6684ffd9b3b692bc41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12670d88691f53ee48e56c6684ffd9b3b692bc41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12670d88691f53ee48e56c6684ffd9b3b692bc41"}], "stats": {"total": 64, "additions": 44, "deletions": 20}, "files": [{"sha": "9cd91011625bfe600a538ffb431b268dfe713928", "filename": "gcc/config.sub", "status": "modified", "additions": 44, "deletions": 20, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a728e7a36ba46115e27e5616170a01a5f4ff629a/gcc%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a728e7a36ba46115e27e5616170a01a5f4ff629a/gcc%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.sub?ref=a728e7a36ba46115e27e5616170a01a5f4ff629a", "patch": "@@ -41,6 +41,8 @@\n # The goal of this file is to map all the various variations of a given\n # machine specification into a single specification in the form:\n #\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n+# or in some cases, the newer four-part form:\n+#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n # It is wrong to echo any other type of specification.\n \n if [ x$1 = x ]\n@@ -62,11 +64,21 @@ case $1 in\n \t;;\n esac\n \n-# Separate what the user gave into CPU-COMPANY and OS (if any).\n-basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n-if [ $basic_machine != $1 ]\n-then os=`echo $1 | sed 's/.*-/-/'`\n-else os=; fi\n+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).\n+# Here we must recognize all the valid KERNEL-OS combinations.\n+maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n+case $maybe_os in\n+  linux-gnu*)\n+    os=-$maybe_os\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n+    ;;\n+  *)\n+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n+    if [ $basic_machine != $1 ]\n+    then os=`echo $1 | sed 's/.*-/-/'`\n+    else os=; fi\n+    ;;\n+esac\n \n ### Let's recognize common machines as not being operating systems so\n ### that things like config.sub decstation-3100 work.  We also\n@@ -91,33 +103,33 @@ case $os in\n \t\t;;\n \t-sco5)\n \t\tos=sco3.2v5\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n \t-sco4)\n \t\tos=-sco3.2v4\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n \t-sco3.2.[4-9]*)\n \t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n \t-sco3.2v[4-9]*)\n \t\t# Don't forget version if it is 3.2v4 or newer.\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n \t-sco*)\n \t\tos=-sco3.2v2\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n \t-isc)\n \t\tos=-isc2.2\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n \t-clix*)\n \t\tbasic_machine=clipper-intergraph\n \t\t;;\n \t-isc*)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n \t-lynx*)\n \t\tos=-lynxos\n@@ -137,7 +149,7 @@ esac\n case $basic_machine in\n \t# Recognize the basic CPU types without company name.\n \t# Some are omitted here because they have special meanings below.\n-\ttahoe | i[3456]86 | i860 | m68k | m68000 | m88k | ns32k | arm \\\n+\ttahoe | i860 | m68k | m68000 | m88k | ns32k | arm \\\n \t\t| arme[lb] | pyramid \\\n \t\t| tron | a29k | 580 | i960 | h8300 | hppa1.0 | hppa1.1 \\\n \t\t| alpha | we32k | ns16k | clipper | i370 | sh \\\n@@ -146,6 +158,12 @@ case $basic_machine in\n \t\t| sparc | sparclet | sparclite | sparc64)\n \t\tbasic_machine=$basic_machine-unknown\n \t\t;;\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti[3456]86)\n+\t  basic_machine=$basic_machine-pc\n+\t  ;;\n \t# Object if more than one company name word.\n \t*-*-*)\n \t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n@@ -325,19 +343,19 @@ case $basic_machine in\n \t\t;;\n # I'm not sure what \"Sysv32\" means.  Should this be sysv3.2?\n \ti[3456]86v32)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n \t\tos=-sysv32\n \t\t;;\n \ti[3456]86v4*)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n \t\tos=-sysv4\n \t\t;;\n \ti[3456]86v)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n \t\tos=-sysv\n \t\t;;\n \ti[3456]86sol2)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-unknown/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n \t\tos=-solaris2\n \t\t;;\n \tiris | iris4d)\n@@ -635,6 +653,8 @@ esac\n if [ x\"$os\" != x\"\" ]\n then\n case $os in\n+        # First match some system type aliases\n+        # that might get confused with valid system types.\n \t# -solaris* is a basic system type, with this one exception.\n \t-solaris1 | -solaris1.*)\n \t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n@@ -646,7 +666,7 @@ case $os in\n \t\tos=-sysv4\n \t\t;;\n \t-gnu/linux*)\n-\t\tos=`echo $os | sed -e 's|gnu/linux|linux|'`\n+\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n \t\t;;\n \t# First accept the basic system types.\n \t# The portable systems comes first.\n@@ -657,14 +677,18 @@ case $os in\n \t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -solaris* | -sym* \\\n \t      | -amigados* | -msdos* | -newsos* | -unicos* | -aof* | -aos* \\\n \t      | -nindy* | -vxworks* | -ebmon* | -hms* | -mvs* | -clix* \\\n-\t      | -riscos* | -linux* | -uniplus* | -iris* | -rtu* | -xenix* \\\n+\t      | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n \t      | -hiux* | -386bsd* | -netbsd* | -freebsd* | -riscix* \\\n \t      | -lynxos* | -bosx* | -nextstep* | -cxux* | -aout* | -elf* \\\n \t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n \t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n-\t      | -cygwin32* | -pe* | -psos* | -moss* | -proelf* | -rtems*)\n+\t      | -cygwin32* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n+\t      | -linux-gnu*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n+\t-linux*)\n+\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n+\t\t;;\n \t-sunos5*)\n \t\tos=`echo $os | sed -e 's|sunos5|solaris2|'`\n \t\t;;"}]}