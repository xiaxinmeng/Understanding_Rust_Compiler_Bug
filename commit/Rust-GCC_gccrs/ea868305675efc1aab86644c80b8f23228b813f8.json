{"sha": "ea868305675efc1aab86644c80b8f23228b813f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4NjgzMDU2NzVlZmMxYWFiODY2NDRjODBiOGYyMzIyOGI4MTNmOA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2011-03-04T22:59:07Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-03-04T22:59:07Z"}, "message": "re PR target/47986 (gcc.c-torture/execute/20040709-1.c fails with non-delegitimized UNSPEC)\n\n\tPR target/47986\n\t* config/rs6000/rs6000.c (rs6000_delegitimize_address): Handle\n\tfull cmodel medium/large lo_sum + high addresses.\n\nFrom-SVN: r170687", "tree": {"sha": "e739008a93f3c1b46205efebc50f58cba25448d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e739008a93f3c1b46205efebc50f58cba25448d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea868305675efc1aab86644c80b8f23228b813f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea868305675efc1aab86644c80b8f23228b813f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea868305675efc1aab86644c80b8f23228b813f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea868305675efc1aab86644c80b8f23228b813f8/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed4f96af593f3ac7fa5926fa31052bb97118534d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4f96af593f3ac7fa5926fa31052bb97118534d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed4f96af593f3ac7fa5926fa31052bb97118534d"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "9cb86c6641d1b1274e86e7344add36ca2fc248d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea868305675efc1aab86644c80b8f23228b813f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea868305675efc1aab86644c80b8f23228b813f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea868305675efc1aab86644c80b8f23228b813f8", "patch": "@@ -1,3 +1,9 @@\n+2011-03-05  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/47986\n+\t* config/rs6000/rs6000.c (rs6000_delegitimize_address): Handle\n+\tfull cmodel medium/large lo_sum + high addresses.\n+\n 2011-03-04  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.c (s390_decompose_address): Reject non-literal"}, {"sha": "fd80f8b8ac28292a9c3c344550df9bec0e9e274a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea868305675efc1aab86644c80b8f23228b813f8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea868305675efc1aab86644c80b8f23228b813f8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ea868305675efc1aab86644c80b8f23228b813f8", "patch": "@@ -6248,17 +6248,23 @@ rs6000_delegitimize_address (rtx orig_x)\n   if (MEM_P (x))\n     x = XEXP (x, 0);\n \n-  if ((GET_CODE (x) == PLUS\n-       || GET_CODE (x) == LO_SUM)\n-      && GET_CODE (XEXP (x, 0)) == REG\n-      && (REGNO (XEXP (x, 0)) == TOC_REGISTER\n-\t  || TARGET_MINIMAL_TOC\n-\t  || TARGET_CMODEL != CMODEL_SMALL)\n+  if (GET_CODE (x) == (TARGET_CMODEL != CMODEL_SMALL ? LO_SUM : PLUS)\n       && GET_CODE (XEXP (x, 1)) == CONST)\n     {\n       y = XEXP (XEXP (x, 1), 0);\n       if (GET_CODE (y) == UNSPEC\n-          && XINT (y, 1) == UNSPEC_TOCREL)\n+          && XINT (y, 1) == UNSPEC_TOCREL\n+\t  && ((GET_CODE (XEXP (x, 0)) == REG\n+\t       && (REGNO (XEXP (x, 0)) == TOC_REGISTER\n+\t\t   || TARGET_MINIMAL_TOC\n+\t\t   || TARGET_CMODEL != CMODEL_SMALL))\n+\t      || (TARGET_CMODEL != CMODEL_SMALL\n+\t\t  && GET_CODE (XEXP (x, 0)) == PLUS\n+\t\t  && GET_CODE (XEXP (XEXP (x, 0), 0)) == REG\n+\t\t  && REGNO (XEXP (XEXP (x, 0), 0)) == TOC_REGISTER\n+\t\t  && GET_CODE (XEXP (XEXP (x, 0), 1)) == HIGH\n+\t\t  && rtx_equal_p (XEXP (x, 1),\n+\t\t\t\t  XEXP (XEXP (XEXP (x, 0), 1), 0)))))\n \t{\n \t  y = XVECEXP (y, 0, 0);\n \t  if (!MEM_P (orig_x))"}]}