{"sha": "aa33d725018cde8ab90b73e355114343be9072ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEzM2Q3MjUwMThjZGU4YWI5MGI3M2UzNTUxMTQzNDNiZTkwNzJjZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-06-20T09:42:39Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-06-20T09:42:39Z"}, "message": "3.cc: New.\n\n2004-06-20  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/27_io/basic_istream/ignore/char/3.cc: New.\n\nFrom-SVN: r83408", "tree": {"sha": "0efe9d7b2506937efcb7ca6f287054b11960c0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0efe9d7b2506937efcb7ca6f287054b11960c0c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa33d725018cde8ab90b73e355114343be9072ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa33d725018cde8ab90b73e355114343be9072ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa33d725018cde8ab90b73e355114343be9072ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa33d725018cde8ab90b73e355114343be9072ce/comments", "author": null, "committer": null, "parents": [{"sha": "5a5086621e8751f9666cf0a3d5956149202e1487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5086621e8751f9666cf0a3d5956149202e1487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5086621e8751f9666cf0a3d5956149202e1487"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "4b3583294123acad670ee9077b115d7c79c397cf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa33d725018cde8ab90b73e355114343be9072ce/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa33d725018cde8ab90b73e355114343be9072ce/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=aa33d725018cde8ab90b73e355114343be9072ce", "patch": "@@ -1,3 +1,7 @@\n+2004-06-20  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/27_io/basic_istream/ignore/char/3.cc: New.\n+\n 2004-06-18  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/mt_allocator (__mt_alloc<>::_Tune): Add _M_align,"}, {"sha": "ed2880a472f022cd90fe82a128ea2a168a68e33e", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/char/3.cc", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa33d725018cde8ab90b73e355114343be9072ce/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa33d725018cde8ab90b73e355114343be9072ce/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fchar%2F3.cc?ref=aa33d725018cde8ab90b73e355114343be9072ce", "patch": "@@ -0,0 +1,97 @@\n+// 2004-06-20  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <fstream>\n+#include <limits>\n+#include <testsuite_hooks.h>\n+\n+// istream& ignore(streamsize n)\n+void\n+test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  const char filename[] =\"istream_unformatted-1.txt\";\n+  ios_base::iostate state1, state2;\n+\n+  ifstream ifstrm;\n+  ifstrm.open(filename);  \n+\n+  state1 = ifstrm.rdstate();\n+  VERIFY( state1 == ios_base::goodbit );\n+  VERIFY( ifstrm.peek() == '1' );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+\n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(1);\n+  VERIFY( ifstrm.gcount() == 1 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == '2' );\n+\n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(10);\n+  VERIFY( ifstrm.gcount() == 10 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == '1' );\n+\n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(100);\n+  VERIFY( ifstrm.gcount() == 100 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == '2' );\n+  \n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(1000);\n+  VERIFY( ifstrm.gcount() == 1000 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == '1' );\n+  \n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(10000);\n+  VERIFY( ifstrm.gcount() == 10000 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == '2' );\n+\n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(numeric_limits<streamsize>::max());\n+  VERIFY( ifstrm.gcount() == 5389 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 != state2 );\n+  VERIFY( state2 == ios_base::eofbit );\n+}\n+\n+int \n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}