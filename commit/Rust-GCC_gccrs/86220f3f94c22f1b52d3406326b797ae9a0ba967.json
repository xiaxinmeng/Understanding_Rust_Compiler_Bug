{"sha": "86220f3f94c22f1b52d3406326b797ae9a0ba967", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYyMjBmM2Y5NGMyMmYxYjUyZDM0MDYzMjZiNzk3YWU5YTBiYTk2Nw==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2011-10-20T13:56:12Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2011-10-20T13:56:12Z"}, "message": "exception.cc (parse_lsda_header): hardcode ttype_encoding for older ARM EABI toolchains.\n\n2011-10-17  Paul Brook  <paul@codesourcery.com>\n\n        * exception.cc (parse_lsda_header): hardcode ttype_encoding for older\n        ARM EABI toolchains.\n        (get_ttype_entry) Remove __ARM_EABI_UNWINDER__ variant.\n\nFrom-SVN: r180254", "tree": {"sha": "1930855e20b442b11112e68a4046d974d71f6320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1930855e20b442b11112e68a4046d974d71f6320"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86220f3f94c22f1b52d3406326b797ae9a0ba967", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86220f3f94c22f1b52d3406326b797ae9a0ba967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86220f3f94c22f1b52d3406326b797ae9a0ba967", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86220f3f94c22f1b52d3406326b797ae9a0ba967/comments", "author": null, "committer": null, "parents": [{"sha": "6b2de4c7d8fac7d98a3e152f3905849ac55109fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2de4c7d8fac7d98a3e152f3905849ac55109fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b2de4c7d8fac7d98a3e152f3905849ac55109fe"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "7ff941e459f9e7142f83c4a5ef0362eeab48bf2b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86220f3f94c22f1b52d3406326b797ae9a0ba967/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86220f3f94c22f1b52d3406326b797ae9a0ba967/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=86220f3f94c22f1b52d3406326b797ae9a0ba967", "patch": "@@ -1,3 +1,9 @@\n+2011-10-17  Paul Brook  <paul@codesourcery.com>\n+\n+\t* exception.cc (parse_lsda_header): hardcode ttype_encoding for older\n+\tARM EABI toolchains.\n+\t(get_ttype_entry) Remove __ARM_EABI_UNWINDER__ variant.\n+\n 2011-10-16  Uros Bizjak  <ubizjak@gmail.com>\n \t    Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "56f25ad44be5adb6198676bfa6c9743e4981fc07", "filename": "libjava/exception.cc", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86220f3f94c22f1b52d3406326b797ae9a0ba967/libjava%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86220f3f94c22f1b52d3406326b797ae9a0ba967/libjava%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fexception.cc?ref=86220f3f94c22f1b52d3406326b797ae9a0ba967", "patch": "@@ -161,6 +161,11 @@ parse_lsda_header (_Unwind_Context *context, const unsigned char *p,\n   info->ttype_encoding = *p++;\n   if (info->ttype_encoding != DW_EH_PE_omit)\n     {\n+#if _GLIBCXX_OVERRIDE_TTYPE_ENCODING\n+      /* Older ARM EABI toolchains set this value incorrectly, so use a\n+\t hardcoded OS-specific format.  */\n+  info->ttype_encoding = _GLIBCXX_OVERRIDE_TTYPE_ENCODING;\n+#endif\n       p = read_uleb128 (p, &tmp);\n       info->TType = p + tmp;\n     }\n@@ -176,21 +181,6 @@ parse_lsda_header (_Unwind_Context *context, const unsigned char *p,\n   return p;\n }\n \n-#ifdef __ARM_EABI_UNWINDER__\n-\n-static void **\n-get_ttype_entry(_Unwind_Context *, lsda_header_info* info, _uleb128_t i)\n-{\n-  _Unwind_Ptr ptr;\n-\n-  ptr = (_Unwind_Ptr) (info->TType - (i * 4));\n-  ptr = _Unwind_decode_target2(ptr);\n-  \n-  return reinterpret_cast<void **>(ptr);\n-}\n-\n-#else\n-\n static void **\n get_ttype_entry (_Unwind_Context *context, lsda_header_info *info, long i)\n {\n@@ -202,8 +192,6 @@ get_ttype_entry (_Unwind_Context *context, lsda_header_info *info, long i)\n   return reinterpret_cast<void **>(ptr);\n }\n \n-#endif\n-\n // Using a different personality function name causes link failures\n // when trying to mix code using different exception handling models.\n #ifdef SJLJ_EXCEPTIONS"}]}