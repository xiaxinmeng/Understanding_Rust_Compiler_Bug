{"sha": "3621a7bb5795ad4e47b30e1a8a06f1abe2b3b036", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYyMWE3YmI1Nzk1YWQ0ZTQ3YjMwZTFhOGEwNmYxYWJlMmIzYjAzNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-20T18:49:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-20T18:49:46Z"}, "message": "libstdc++: Fix indentation in <semaphore>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/semaphore: Fix indentation.", "tree": {"sha": "ca42bcf342614471c588f3279fd0d66e42f3909a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca42bcf342614471c588f3279fd0d66e42f3909a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3621a7bb5795ad4e47b30e1a8a06f1abe2b3b036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3621a7bb5795ad4e47b30e1a8a06f1abe2b3b036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3621a7bb5795ad4e47b30e1a8a06f1abe2b3b036", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3621a7bb5795ad4e47b30e1a8a06f1abe2b3b036/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b01af02b50761bbe4e078c60d030912ab359c9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b01af02b50761bbe4e078c60d030912ab359c9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b01af02b50761bbe4e078c60d030912ab359c9a"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "9648c3da7ce60bb785df83b606466e79682ea8ad", "filename": "libstdc++-v3/include/std/semaphore", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3621a7bb5795ad4e47b30e1a8a06f1abe2b3b036/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsemaphore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3621a7bb5795ad4e47b30e1a8a06f1abe2b3b036/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsemaphore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsemaphore?ref=3621a7bb5795ad4e47b30e1a8a06f1abe2b3b036", "patch": "@@ -87,7 +87,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{ return _M_sem._M_try_acquire_until(__atime); }\n     };\n \n- using binary_semaphore = std::counting_semaphore<1>;\n+  using binary_semaphore = std::counting_semaphore<1>;\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n #endif // __cpp_lib_atomic_wait"}]}