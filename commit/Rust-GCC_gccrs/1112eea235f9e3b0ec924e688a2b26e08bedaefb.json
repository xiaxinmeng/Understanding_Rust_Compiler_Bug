{"sha": "1112eea235f9e3b0ec924e688a2b26e08bedaefb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTExMmVlYTIzNWY5ZTNiMGVjOTI0ZTY4OGEyYjI2ZTA4YmVkYWVmYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1990-10-26T03:10:24Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1990-10-26T03:10:24Z"}, "message": "Initial revision\n\nFrom-SVN: r15", "tree": {"sha": "dfe8d9dab0717a986e27d1069fea8d6f566a0aee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfe8d9dab0717a986e27d1069fea8d6f566a0aee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1112eea235f9e3b0ec924e688a2b26e08bedaefb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1112eea235f9e3b0ec924e688a2b26e08bedaefb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1112eea235f9e3b0ec924e688a2b26e08bedaefb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1112eea235f9e3b0ec924e688a2b26e08bedaefb/comments", "author": null, "committer": null, "parents": [{"sha": "1fa2d22f8ededc1d44b12ba124b7e3bc37433635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa2d22f8ededc1d44b12ba124b7e3bc37433635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fa2d22f8ededc1d44b12ba124b7e3bc37433635"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "912a23987108d893939bbf239d11d16b9cc9d4fc", "filename": "gcc/ginclude/va-spur.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1112eea235f9e3b0ec924e688a2b26e08bedaefb/gcc%2Fginclude%2Fva-spur.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1112eea235f9e3b0ec924e688a2b26e08bedaefb/gcc%2Fginclude%2Fva-spur.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-spur.h?ref=1112eea235f9e3b0ec924e688a2b26e08bedaefb", "patch": "@@ -0,0 +1,55 @@\n+/*  varargs.h for SPUR */\n+\n+/* NB.  This is NOT the definition needed for the new ANSI proposed\n+   standard */\n+ \n+\n+struct __va_struct { char __regs[20]; };\n+\n+#define va_alist __va_regs, __va_stack\n+\n+/* In GCC version 2, we want an ellipsis at the end of the declaration\n+   of the argument list.  GCC version 1 can't parse it.  */\n+\n+#if __GNUC__ > 1\n+#define __va_ellipsis ...\n+#else\n+#define __va_ellipsis\n+#endif\n+\n+/* The ... causes current_function_varargs to be set in cc1.  */\n+#define va_dcl struct __va_struct __va_regs; int __va_stack; \n+\n+typedef struct {\n+    int __pnt;\n+    char *__regs;\n+    char *__stack;\n+} va_list;\n+\n+#define va_start(pvar) \\\n+     ((pvar).__pnt = 0, (pvar).__regs = __va_regs.__regs, \\\n+      (pvar).__stack = (char *) &__va_stack)\n+#define va_end(pvar)\n+\n+#define va_arg(pvar,type)  \\\n+    ({  type __va_result; \\\n+        if ((pvar).__pnt >= 20) { \\\n+           __va_result = *( (type *) ((pvar).__stack + (pvar).__pnt - 20)); \\\n+\t   (pvar).__pnt += (sizeof(type) + 7) & ~7; \\\n+\t} \\\n+\telse if ((pvar).__pnt + sizeof(type) > 20) { \\\n+\t   __va_result = * (type *) (pvar).__stack; \\\n+\t   (pvar).__pnt = 20 + ( (sizeof(type) + 7) & ~7); \\\n+\t} \\\n+\telse if (sizeof(type) == 8) { \\\n+\t   union {double d; int i[2];} __u; \\\n+\t   __u.i[0] = *(int *) ((pvar).__regs + (pvar).__pnt); \\\n+\t   __u.i[1] = *(int *) ((pvar).__regs + (pvar).__pnt + 4); \\\n+\t   __va_result = * (type *) &__u; \\\n+\t   (pvar).__pnt += 8; \\\n+\t} \\\n+\telse { \\\n+\t   __va_result = * (type *) ((pvar).__regs + (pvar).__pnt); \\\n+\t   (pvar).__pnt += (sizeof(type) + 3) & ~3; \\\n+\t} \\\n+\t__va_result; })"}]}