{"sha": "3cd58c0fae56c8092a3542d60fdefaee08d87b27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NkNThjMGZhZTU2YzgwOTJhMzU0MmQ2MGZkZWZhZWUwOGQ4N2IyNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-01-26T14:50:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-01-26T14:50:03Z"}, "message": "re PR middle-end/64764 (internal compiler error: in is_value_included_in, at tree-ssa-uninit.c:942)\n\n2015-01-26  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/64764\n\t* tree-ssa-uninit.c (is_pred_expr_subset_of): Handle\n\tcombining two BIT_AND_EXPR predicates.\n\n\t* gcc.dg/uninit-19.c: New testcase.\n\nFrom-SVN: r220111", "tree": {"sha": "7dda80279fc13188e5fbef3b9399771004a83eb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dda80279fc13188e5fbef3b9399771004a83eb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cd58c0fae56c8092a3542d60fdefaee08d87b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd58c0fae56c8092a3542d60fdefaee08d87b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cd58c0fae56c8092a3542d60fdefaee08d87b27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd58c0fae56c8092a3542d60fdefaee08d87b27/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96af01aea54e4a3b3ab855dd7c3028710eafa5ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96af01aea54e4a3b3ab855dd7c3028710eafa5ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96af01aea54e4a3b3ab855dd7c3028710eafa5ab"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "a5676178d76bdcbaabb179bf6404cd75919fbcd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd58c0fae56c8092a3542d60fdefaee08d87b27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd58c0fae56c8092a3542d60fdefaee08d87b27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cd58c0fae56c8092a3542d60fdefaee08d87b27", "patch": "@@ -1,8 +1,14 @@\n+2015-01-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/64764\n+\t* tree-ssa-uninit.c (is_pred_expr_subset_of): Handle\n+\tcombining two BIT_AND_EXPR predicates.\n+\n 2015-01-26  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/64754\n \t* tree-ssa-structalias.c (new_var_info): Initialize ruid.\n----\n+\n 2015-01-26  Terry Guo  <terry.guo@arm.com>\n \n \t* config/arm/arm.c (arm_file_start): Update the assignment of"}, {"sha": "9c526b7a4bce02410e27a2b1f4da4f25d9493213", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd58c0fae56c8092a3542d60fdefaee08d87b27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd58c0fae56c8092a3542d60fdefaee08d87b27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3cd58c0fae56c8092a3542d60fdefaee08d87b27", "patch": "@@ -1,3 +1,8 @@\n+2015-01-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/64764\n+\t* gcc.dg/uninit-19.c: New testcase.\n+\n 2015-01-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* lib/target-supports.exp (check_effective_target_vect64): Add"}, {"sha": "3113cabe89da255e28cce6b26634a0640559c41d", "filename": "gcc/testsuite/gcc.dg/uninit-19.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd58c0fae56c8092a3542d60fdefaee08d87b27/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd58c0fae56c8092a3542d60fdefaee08d87b27/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-19.c?ref=3cd58c0fae56c8092a3542d60fdefaee08d87b27", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\r\n+/* { dg-options \"-O -Wuninitialized\" } */\r\n+\r\n+int a, l, m;\r\n+float *b;\r\n+float c, d, e, g, h;\r\n+unsigned char i, k;\r\n+void\r\n+fn1 (int p1, float *f1, float *f2, float *f3, unsigned char *c1, float *f4,\r\n+     unsigned char *c2, float *p10)\r\n+{\r\n+  if (p1 & 8)\r\n+    b[3] = p10[a];  /* { dg-warning \"may be used uninitialized\" } */\r\n+}\r\n+\r\n+void\r\n+fn2 ()\r\n+{\r\n+  float *n;\r\n+  if (l & 6)\r\n+    n = &c + m;\r\n+  fn1 (l, &d, &e, &g, &i, &h, &k, n);\r\n+}\r"}, {"sha": "d04c185cc82559a495beaf7e548d8549b9f4a7c2", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd58c0fae56c8092a3542d60fdefaee08d87b27/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd58c0fae56c8092a3542d60fdefaee08d87b27/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=3cd58c0fae56c8092a3542d60fdefaee08d87b27", "patch": "@@ -1377,7 +1377,8 @@ is_pred_expr_subset_of (pred_info expr1, pred_info expr2)\n   if (expr2.invert)\n     code2 = invert_tree_comparison (code2, false);\n \n-  if (code1 == EQ_EXPR && code2 == BIT_AND_EXPR)\n+  if ((code1 == EQ_EXPR || code1 == BIT_AND_EXPR)\n+      && code2 == BIT_AND_EXPR)\n     return wi::eq_p (expr1.pred_rhs,\n \t\t     wi::bit_and (expr1.pred_rhs, expr2.pred_rhs));\n "}]}