{"sha": "d808ecdd4e263f2d19a2decafbff945a4bc5d447", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgwOGVjZGQ0ZTI2M2YyZDE5YTJkZWNhZmJmZjk0NWE0YmM1ZDQ0Nw==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2015-02-10T00:00:54Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2015-02-10T00:00:54Z"}, "message": "re PR target/64761 (-freorder-blocks-and-partition causes some failures on SH)\n\nPR target/64761\n[SH] Add jump insn for -freorder-blocks-and-partition.  Don't degrade\n-freorder-blocks-and-partition to -freorder-blocks even when unwinding\nis enabled.\n\n* [SH] Add jump insn for -freorder-blocks-and-partition.\n\nFrom-SVN: r220553", "tree": {"sha": "f5e45246b2bac61e9f0a97eaf0f0b7d0dfa138c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5e45246b2bac61e9f0a97eaf0f0b7d0dfa138c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d808ecdd4e263f2d19a2decafbff945a4bc5d447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d808ecdd4e263f2d19a2decafbff945a4bc5d447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d808ecdd4e263f2d19a2decafbff945a4bc5d447", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d808ecdd4e263f2d19a2decafbff945a4bc5d447/comments", "author": null, "committer": null, "parents": [{"sha": "cf6186e9f26494264c27e6620f4b3860a079832a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6186e9f26494264c27e6620f4b3860a079832a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf6186e9f26494264c27e6620f4b3860a079832a"}], "stats": {"total": 54, "additions": 31, "deletions": 23}, "files": [{"sha": "5981be87a1de7a8a274946d3d77719282fc66be1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808ecdd4e263f2d19a2decafbff945a4bc5d447/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808ecdd4e263f2d19a2decafbff945a4bc5d447/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d808ecdd4e263f2d19a2decafbff945a4bc5d447", "patch": "@@ -1,3 +1,13 @@\n+2015-02-09  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/64761\n+\t* config/sh/sh.c (sh_option_override): Don't change\n+\t-freorder-blocks-and-partition to -freorder-blocks even when\n+\tunwinding is enabled.\n+\t(sh_can_follow_jump): Return false if the followee jump is\n+\ta crossing jump when -freorder-blocks-and-partition is specified.\n+\t* config/sh/sh.md (*jump_compact_crossing): New insn.\n+\n 2015-02-09  Joern Rennecke  <joern.rennecke@embecosm.com>\n \t    Kaz Kojima  <kkojima@gcc.gnu.org>\n "}, {"sha": "2afd44ebde61fb41d0e4b9b43400f8479ee93bb5", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 8, "deletions": 23, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808ecdd4e263f2d19a2decafbff945a4bc5d447/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808ecdd4e263f2d19a2decafbff945a4bc5d447/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=d808ecdd4e263f2d19a2decafbff945a4bc5d447", "patch": "@@ -1065,29 +1065,6 @@ sh_option_override (void)\n       TARGET_ACCUMULATE_OUTGOING_ARGS = 1;\n     }\n \n-  /* Unwinding with -freorder-blocks-and-partition does not work on this\n-     architecture, because it requires far jumps to label crossing between\n-     hot/cold sections which are rejected on this architecture.  */\n-  if (flag_reorder_blocks_and_partition)\n-    {\n-      if (flag_exceptions)\n-\t{\n-\t  inform (input_location, \n-\t\t  \"-freorder-blocks-and-partition does not work with \"\n-\t\t  \"exceptions on this architecture\");\n-\t  flag_reorder_blocks_and_partition = 0;\n-\t  flag_reorder_blocks = 1;\n-\t}\n-      else if (flag_unwind_tables)\n-\t{\n-\t  inform (input_location,\n-\t\t  \"-freorder-blocks-and-partition does not support unwind \"\n-\t\t  \"info on this architecture\");\n-\t  flag_reorder_blocks_and_partition = 0;\n-\t  flag_reorder_blocks = 1;\n-\t}\n-    }\n-\n   /*  Adjust loop, jump and function alignment values (in bytes), if those\n       were not specified by the user using -falign-loops, -falign-jumps\n       and -falign-functions options.\n@@ -10828,6 +10805,14 @@ mark_constant_pool_use (rtx x)\n static bool\n sh_can_follow_jump (const rtx_insn *branch1, const rtx_insn *branch2)\n {\n+  /* Don't follow if BRANCH2 is possible to be a jump crossing between\n+     hot and cold partitions.  */\n+  if (TARGET_SH1\n+      && flag_reorder_blocks_and_partition\n+      && simplejump_p (branch2)\n+      && CROSSING_JUMP_P (branch2))\n+    return false;\n+\n   if (flag_expensive_optimizations && simplejump_p (branch2))\n     {\n       rtx dest = XEXP (SET_SRC (single_set (branch2)), 0);"}, {"sha": "fe372b15bf7865818d6f16124d24a84aa88a566c", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808ecdd4e263f2d19a2decafbff945a4bc5d447/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808ecdd4e263f2d19a2decafbff945a4bc5d447/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=d808ecdd4e263f2d19a2decafbff945a4bc5d447", "patch": "@@ -9358,6 +9358,19 @@ label:\n   [(set_attr \"type\" \"jump\")\n    (set_attr \"needs_delay_slot\" \"yes\")])\n \n+(define_insn \"*jump_compact_crossing\"\n+  [(set (pc)\n+\t(label_ref (match_operand 0 \"\" \"\")))]\n+  \"TARGET_SH1\n+   && flag_reorder_blocks_and_partition\n+   && CROSSING_JUMP_P (insn)\"\n+{\n+  /* The length is 16 if the delay slot is unfilled.  */\n+  return output_far_jump(insn, operands[0]);\n+}\n+  [(set_attr \"type\" \"jump\")\n+   (set_attr \"length\" \"16\")])\n+\n ;; ??? It would be much saner to explicitly use the scratch register\n ;; in the jump insn, and have indirect_jump_scratch only set it,\n ;; but fill_simple_delay_slots would refuse to do delay slot filling"}]}