{"sha": "8c11f2693e3f55d7fbf37642c3e75d03a9e58013", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMxMWYyNjkzZTNmNTVkN2ZiZjM3NjQyYzNlNzVkMDNhOWU1ODAxMw==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2019-01-30T11:26:31Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2019-01-30T11:26:31Z"}, "message": "Cache effective-target llvm_binutils result.\n\n2019-01-30  Andrew Stubbs  <ams@codesourcery.com>\n\n\tPR testsuite/88920\n\n\tgcc/testsuite/\n\t* lib/target-supports.exp: Cache result.\n\nFrom-SVN: r268384", "tree": {"sha": "50dc3df2b73b8d7e156a63b20d993b706c801667", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50dc3df2b73b8d7e156a63b20d993b706c801667"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c11f2693e3f55d7fbf37642c3e75d03a9e58013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c11f2693e3f55d7fbf37642c3e75d03a9e58013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c11f2693e3f55d7fbf37642c3e75d03a9e58013", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c11f2693e3f55d7fbf37642c3e75d03a9e58013/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "787e2debb8cb88138626ad7802c485f8b2c0694b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/787e2debb8cb88138626ad7802c485f8b2c0694b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/787e2debb8cb88138626ad7802c485f8b2c0694b"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "e41b4e2500c91471540441ad80a6696db5f70856", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c11f2693e3f55d7fbf37642c3e75d03a9e58013/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c11f2693e3f55d7fbf37642c3e75d03a9e58013/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c11f2693e3f55d7fbf37642c3e75d03a9e58013", "patch": "@@ -1,3 +1,9 @@\n+2019-01-30  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\tPR testsuite/88920\n+\n+\t* lib/target-supports.exp: Cache result.\n+\n 2019-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/89105"}, {"sha": "a0b4b99067f9ae225bde3b6bc719e89e1ea8e0e1", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c11f2693e3f55d7fbf37642c3e75d03a9e58013/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c11f2693e3f55d7fbf37642c3e75d03a9e58013/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=8c11f2693e3f55d7fbf37642c3e75d03a9e58013", "patch": "@@ -9263,6 +9263,7 @@ foreach N {df} {\n \n # Return 1 if this target uses an LLVM assembler and/or linker\n proc check_effective_target_llvm_binutils { } {\n-    return [expr { [istarget amdgcn*-*-*]\n-\t\t   || [check_effective_target_offload_gcn] } ]\n+    return [check_cached_effective_target llvm_binutils {\n+\t      expr { [istarget amdgcn*-*-*]\n+\t\t     || [check_effective_target_offload_gcn] }}]\n }"}]}