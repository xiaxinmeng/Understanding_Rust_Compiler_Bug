{"sha": "a9f53b60f16ea7db457e996b039587fa0b2b6213", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlmNTNiNjBmMTZlYTdkYjQ1N2U5OTZiMDM5NTg3ZmEwYjJiNjIxMw==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-26T15:45:00Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-26T15:45:00Z"}, "message": "[ARM/AArch64][testsuite] Add vmla_n and vmls_n tests.\n\n2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmlX_n.inc: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmla_n.c: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmls_n.c: New file.\n\nFrom-SVN: r220118", "tree": {"sha": "9d4ad547747944b2924e046b398760753a8206ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d4ad547747944b2924e046b398760753a8206ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9f53b60f16ea7db457e996b039587fa0b2b6213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f53b60f16ea7db457e996b039587fa0b2b6213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9f53b60f16ea7db457e996b039587fa0b2b6213", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f53b60f16ea7db457e996b039587fa0b2b6213/comments", "author": null, "committer": null, "parents": [{"sha": "f4d988f497450d0ca38d775ee316a63d6c571844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d988f497450d0ca38d775ee316a63d6c571844", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4d988f497450d0ca38d775ee316a63d6c571844"}], "stats": {"total": 141, "additions": 141, "deletions": 0}, "files": [{"sha": "4d5b5a665bced1ca60a7c104e44ae0c0090d3706", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f53b60f16ea7db457e996b039587fa0b2b6213/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f53b60f16ea7db457e996b039587fa0b2b6213/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9f53b60f16ea7db457e996b039587fa0b2b6213", "patch": "@@ -1,3 +1,9 @@\n+2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmlX_n.inc: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmla_n.c: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmls_n.c: New file.\n+\n 2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vXXXhn.inc: New file."}, {"sha": "375023a77cf38775e2a162395fc846600cec652e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmlX_n.inc", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f53b60f16ea7db457e996b039587fa0b2b6213/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlX_n.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f53b60f16ea7db457e996b039587fa0b2b6213/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlX_n.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlX_n.inc?ref=a9f53b60f16ea7db457e996b039587fa0b2b6213", "patch": "@@ -0,0 +1,87 @@\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+#define DECL_VMLX_N(VAR)\t\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, float, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, float, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 4)\n+\n+  /* vector_res = vmlx_n(vector, vector2, val),\n+     then store the result.  */\n+#define TEST_VMLX_N1(INSN, Q, T1, T2, W, N, V)          \\\n+  VECT_VAR(vector_res, T1, W, N) =                      \\\n+    INSN##Q##_n_##T2##W(VECT_VAR(vector, T1, W, N),     \\\n+\t\t\tVECT_VAR(vector2, T1, W, N),    \\\n+\t\t\tV);                             \\\n+  vst1##Q##_##T2##W(VECT_VAR(result, T1, W, N),         \\\n+\t\t    VECT_VAR(vector_res, T1, W, N))\n+\n+#define TEST_VMLX_N(INSN, Q, T1, T2, W, N, V)\t\\\n+  TEST_VMLX_N1(INSN, Q, T1, T2, W, N, V)\n+\n+  DECL_VMLX_N(vector);\n+  DECL_VMLX_N(vector2);\n+  DECL_VMLX_N(vector_res);\n+\n+  clean_results ();\n+\n+  VLOAD(vector, buffer, , int, s, 16, 4);\n+  VLOAD(vector, buffer, , int, s, 32, 2);\n+  VLOAD(vector, buffer, , uint, u, 16, 4);\n+  VLOAD(vector, buffer, , uint, u, 32, 2);\n+  VLOAD(vector, buffer, , float, f, 32, 2);\n+  VLOAD(vector, buffer, q, int, s, 16, 8);\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector, buffer, q, float, f, 32, 4);\n+\n+  VDUP(vector2, , int, s, 16, 4, 0x55);\n+  VDUP(vector2, , int, s, 32, 2, 0x55);\n+  VDUP(vector2, , uint, u, 16, 4, 0x55);\n+  VDUP(vector2, , uint, u, 32, 2, 0x55);\n+  VDUP(vector2, , float, f, 32, 2, 55.2f);\n+  VDUP(vector2, q, int, s, 16, 8, 0x55);\n+  VDUP(vector2, q, int, s, 32, 4, 0x55);\n+  VDUP(vector2, q, uint, u, 16, 8, 0x55);\n+  VDUP(vector2, q, uint, u, 32, 4, 0x55);\n+  VDUP(vector2, q, float, f, 32, 4, 55.9f);\n+\n+  /* Choose multiplier arbitrarily.  */\n+  TEST_VMLX_N(INSN_NAME, , int, s, 16, 4, 0x11);\n+  TEST_VMLX_N(INSN_NAME, , int, s, 32, 2, 0x22);\n+  TEST_VMLX_N(INSN_NAME, , uint, u, 16, 4, 0x33);\n+  TEST_VMLX_N(INSN_NAME, , uint, u, 32, 2, 0x44);\n+  TEST_VMLX_N(INSN_NAME, , float, f, 32, 2, 22.3f);\n+  TEST_VMLX_N(INSN_NAME, q, int, s, 16, 8, 0x55);\n+  TEST_VMLX_N(INSN_NAME, q, int, s, 32, 4, 0x66);\n+  TEST_VMLX_N(INSN_NAME, q, uint, u, 16, 8, 0x77);\n+  TEST_VMLX_N(INSN_NAME, q, uint, u, 32, 4, 0x88);\n+  TEST_VMLX_N(INSN_NAME, q, float, f, 32, 4, 66.7f);\n+\n+  CHECK(TEST_MSG, int, 16, 4, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, \"\");\n+  CHECK_FP(TEST_MSG, float, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK_FP(TEST_MSG, float, 32, 4, PRIx32, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+  return 0;\n+}"}, {"sha": "8e88aad24648b977bf41e16303cdeeb3e9e19979", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmla_n.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f53b60f16ea7db457e996b039587fa0b2b6213/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmla_n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f53b60f16ea7db457e996b039587fa0b2b6213/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmla_n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmla_n.c?ref=a9f53b60f16ea7db457e996b039587fa0b2b6213", "patch": "@@ -0,0 +1,23 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vmla\n+#define TEST_MSG \"VMLA_N\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x595, 0x596, 0x597, 0x598 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xb3a, 0xb3b };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x10df, 0x10e0, 0x10e1, 0x10e2 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x1684, 0x1685 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x4497deb8, 0x4497feb8 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0x1c29, 0x1c2a, 0x1c2b, 0x1c2c,\n+\t\t\t\t\t0x1c2d, 0x1c2e, 0x1c2f, 0x1c30 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x21ce, 0x21cf, 0x21d0, 0x21d1 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x2773, 0x2774, 0x2775, 0x2776,\n+\t\t\t\t\t 0x2777, 0x2778, 0x2779, 0x277a };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x2d18, 0x2d19, 0x2d1a, 0x2d1b };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x4568087b, 0x4568187b,\n+\t\t\t\t\t   0x4568287b, 0x4568387b };\n+\n+#include \"vmlX_n.inc\""}, {"sha": "228673b47239bfc75dfdeecf2de4c115f2541541", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmls_n.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f53b60f16ea7db457e996b039587fa0b2b6213/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmls_n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f53b60f16ea7db457e996b039587fa0b2b6213/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmls_n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmls_n.c?ref=a9f53b60f16ea7db457e996b039587fa0b2b6213", "patch": "@@ -0,0 +1,25 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vmls\n+#define TEST_MSG \"VMLS_N\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xfa4b, 0xfa4c, 0xfa4d, 0xfa4e };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xfffff4a6, 0xfffff4a7 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xef01, 0xef02, 0xef03, 0xef04 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xffffe95c, 0xffffe95d };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0xc49bdeb8, 0xc49bbeb8 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xe3b7, 0xe3b8, 0xe3b9, 0xe3ba,\n+\t\t\t\t\t0xe3bb, 0xe3bc, 0xe3bd, 0xe3be };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffde12, 0xffffde13,\n+\t\t\t\t\t0xffffde14, 0xffffde15 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xd86d, 0xd86e, 0xd86f, 0xd870,\n+\t\t\t\t\t 0xd871, 0xd872, 0xd873, 0xd874 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffffd2c8, 0xffffd2c9,\n+\t\t\t\t\t 0xffffd2ca, 0xffffd2cb };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0xc56a087b, 0xc569f87b,\n+\t\t\t\t\t   0xc569e87b, 0xc569d87b };\n+\n+#include \"vmlX_n.inc\""}]}