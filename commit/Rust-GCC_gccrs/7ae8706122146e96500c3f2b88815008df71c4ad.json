{"sha": "7ae8706122146e96500c3f2b88815008df71c4ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FlODcwNjEyMjE0NmU5NjUwMGMzZjJiODg4MTUwMDhkZjcxYzRhZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-02-02T05:05:41Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-02-02T05:05:41Z"}, "message": "argh, forgot to commit changelog\n\nFrom-SVN: r31752", "tree": {"sha": "d7426a58393cd8abae87ca5827eb44c30977120a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7426a58393cd8abae87ca5827eb44c30977120a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ae8706122146e96500c3f2b88815008df71c4ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae8706122146e96500c3f2b88815008df71c4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ae8706122146e96500c3f2b88815008df71c4ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae8706122146e96500c3f2b88815008df71c4ad/comments", "author": null, "committer": null, "parents": [{"sha": "15f724f6c2e730c4fae208488eecd633843509f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f724f6c2e730c4fae208488eecd633843509f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15f724f6c2e730c4fae208488eecd633843509f2"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "9ffd2c0b09b72e41f093d528d10b4c1dd3ff736f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae8706122146e96500c3f2b88815008df71c4ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae8706122146e96500c3f2b88815008df71c4ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ae8706122146e96500c3f2b88815008df71c4ad", "patch": "@@ -1,3 +1,44 @@\n+2000-02-01  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* frame.c (find_fde): Convert for loop to do-while so compiler\n+\tsees it's always executed at least once.\n+\t* libgcc2.c (BBINBUFSIZE): Kill.\n+\t(__bb_init_prg): Use fgets.\n+\t(__bb_exit_trace_func): Don't paste strings.\n+\t* unroll.c (unroll_loop): Initialize unroll_type, not\n+\tunroll_number, and tweak logic to match.\n+\n+\t* i386.c (ix86_expand_int_movcc): Add explicit 'return 0' in\n+\tall failure paths.\n+\t(ix86_flags_dependant): Likewise.  Disentangle control flow.\n+\t(ix86_sched_reorder): Break guts out to\n+\tix86_sched_reorder_pentium and ix86_sched_reorder_ppro.\n+\t(ix86_sched_reorder_ppro): Initialize pair2 and insnp before\n+\tany possible use.\n+\n+\t* i386.h (MACHINE_STATE_SAVE, MACHINE_STATE_RESTORE): Don't\n+\tuse string concatenation.  Don't save and restore esi.\n+\n+\t* fixinc/Makefile.in (fixincl.sh): Don't depend on inclhack.def.\n+\t(machname.h): Remove script to separate file.  Use two-step\n+\tsequence so target is not created if script fails.\n+\t* fixinc/gen-machname.h: New file.  Handle case where no non-reserved\n+\tidentifiers are defined.\n+\t* fixinc/fixlib.c (mn_get_regexps): Return a flag: if MN_NAME_PAT is\n+\tan empty string, machine_name doesn't need to do anything at\n+\tall.\n+\t(is_cxx_header): Add more cases to regexp.\n+\t* fixinc/fixlib.h: Update prototype.\n+\t* fixinc/fixtests.c, fixinc/fixfixes.c: Update callers of\n+\tmn_get_regexps.\n+\t* fixinc/fixincl.c: Define NO_BOGOSITY.\n+\n+\t* fixinc/inclhack.def (no_double_slash, else_endif_label): Ifdef out.\n+\t(hp_sysfile): Add missing comma.\n+\t(math_exception): Put the wrapper ifdefs at the beginning and\n+\tthe end of the file.\n+\t* fixinc/fixincl.x, fixinc/inclhack.sh: Regenerate.\n+\n 2000-02-01  Richard Henderson  <rth@cygnus.com>\n \n \t* sparc.c (fp_zero_operand): Turn into a normal predicate."}]}