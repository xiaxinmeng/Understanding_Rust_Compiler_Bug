{"sha": "6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVhMmJkNDdkZDUwZmRmNTBlNWI3MWU3MzQ5ZGFlMDk0ZjI5MjBmZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-04-07T17:48:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-04-07T17:48:52Z"}, "message": "re PR c++/25185 (deep typedef substitution in error message)\n\n\tPR c++/25185\n\t* c-common.h, c-common.c: Add flag_pretty_templates.\n\t* c-opts.c (c_common_handle_option): Set it.\n\t* c.opt: Add -fno-pretty-templates.\n\t* doc/invoke.texi (C++ Dialect Options): Likewise.\n\n\t* error.c (dump_function_decl): Don't pretty-print templates\n\tif -fno-pretty-templates.\n\t(count_non_default_template_args): Print all args if\n\t-fno-pretty-templates.\n\nFrom-SVN: r145697", "tree": {"sha": "aaa87a15f5942f4f114e17e7f79c23571f506e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaa87a15f5942f4f114e17e7f79c23571f506e9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5"}], "stats": {"total": 77, "additions": 75, "deletions": 2}, "files": [{"sha": "6f448917444d41e2cfee2ed949f00631b0e10c02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -1,3 +1,11 @@\n+2009-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/25185\n+\t* c-common.h, c-common.c: Add flag_pretty_templates.\n+\t* c-opts.c (c_common_handle_option): Set it.\n+\t* c.opt: Add -fno-pretty-templates.\n+\t* doc/invoke.texi (C++ Dialect Options): Likewise.\n+\n 2009-04-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/ia64/ia64.c (ia64_builtins): Add IA64_BUILTIN_HUGE_VALQ."}, {"sha": "3d114550fa253c49e4edf61e860621f594c14eec", "filename": "gcc/c-common.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -593,6 +593,11 @@ int flag_enforce_eh_specs = 1;\n \n int flag_threadsafe_statics = 1;\n \n+/* Nonzero if we want to pretty-print template specializations as the\n+   template signature followed by the arguments.  */\n+\n+int flag_pretty_templates = 1;\n+\n /* Nonzero means warn about implicit declarations.  */\n \n int warn_implicit = 1;"}, {"sha": "0d85a936e72c821f2e24f32294fc3a4dcc76fad6", "filename": "gcc/c-common.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -695,6 +695,11 @@ extern int flag_enforce_eh_specs;\n \n extern int flag_threadsafe_statics;\n \n+/* Nonzero if we want to pretty-print template specializations as the\n+   template signature followed by the arguments.  */\n+\n+extern int flag_pretty_templates;\n+\n /* Nonzero means warn about implicit declarations.  */\n \n extern int warn_implicit;"}, {"sha": "54edf302ab0bf5128d46b28ff805eb95313643ef", "filename": "gcc/c-opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -808,6 +808,10 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       flag_threadsafe_statics = value;\n       break;\n \n+    case OPT_fpretty_templates:\n+      flag_pretty_templates = value;\n+      break;\n+\n     case OPT_fzero_link:\n       flag_zero_link = value;\n       break;"}, {"sha": "3f1cd1301a0722a598b2cd6a477da3800af31a7f", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -716,6 +716,10 @@ fpreprocessed\n C ObjC C++ ObjC++\n Treat the input file as already preprocessed\n \n+fpretty-templates\n+C++ ObjC++\n+-fno-pretty-templates Do not pretty-print template specializations as the template signature followed by the arguments\n+\n freplace-objc-classes\n ObjC ObjC++\n Used in Fix-and-Continue mode to indicate that object files may be swapped in at runtime"}, {"sha": "08daf462594ac6112331bb5808e88efe63e484fb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -1,3 +1,11 @@\n+2009-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/25185\n+\t* error.c (dump_function_decl): Don't pretty-print templates\n+\tif -fno-pretty-templates.\n+\t(count_non_default_template_args): Print all args if\n+\t-fno-pretty-templates.\n+\n 2009-04-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/35146"}, {"sha": "fc32d99b50e616d6048f0b3b1581e8c599711a6d", "filename": "gcc/cp/error.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -163,7 +163,7 @@ count_non_default_template_args (tree args, tree params)\n   int n = TREE_VEC_LENGTH (args);\n   int last;\n \n-  if (params == NULL_TREE)\n+  if (params == NULL_TREE || !flag_pretty_templates)\n     return n;\n \n   for (last = n - 1; last >= 0; --last)\n@@ -1206,7 +1206,8 @@ dump_function_decl (tree t, int flags)\n   exceptions = TYPE_RAISES_EXCEPTIONS (TREE_TYPE (t));\n \n   /* Pretty print template instantiations only.  */\n-  if (DECL_USE_TEMPLATE (t) && DECL_TEMPLATE_INFO (t))\n+  if (DECL_USE_TEMPLATE (t) && DECL_TEMPLATE_INFO (t)\n+      && flag_pretty_templates)\n     {\n       tree tmpl;\n "}, {"sha": "b5d795a104be5b168497a98de4117d5cfab10eea", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -188,6 +188,7 @@ in the following sections.\n -fno-implement-inlines  -fms-extensions @gol\n -fno-nonansi-builtins  -fno-operator-names @gol\n -fno-optional-diags  -fpermissive @gol\n+-fno-pretty-templates @gol\n -frepo  -fno-rtti  -fstats  -ftemplate-depth-@var{n} @gol\n -fno-threadsafe-statics -fuse-cxa-atexit  -fno-weak  -nostdinc++ @gol\n -fno-default-inline  -fvisibility-inlines-hidden @gol\n@@ -1834,6 +1835,19 @@ Downgrade some diagnostics about nonconformant code from errors to\n warnings.  Thus, using @option{-fpermissive} will allow some\n nonconforming code to compile.\n \n+@item -fno-pretty-templates\n+@opindex fno-pretty-templates\n+When an error message refers to a specialization of a function\n+template, the compiler will normally print the signature of the\n+template followed by the template arguments and any typedefs or\n+typenames in the signature (e.g. @code{void f(T) [with T = int]}\n+rather than @code{void f(int)}) so that it's clear which template is\n+involved.  When an error message refers to a specialization of a class\n+template, the compiler will omit any template arguments which match\n+the default template arguments for that template.  If either of these\n+behaviors make it harder to understand the error message rather than\n+easier, using @option{-fno-pretty-templates} will disable them.\n+\n @item -frepo\n @opindex frepo\n Enable automatic template instantiation at link time.  This option also"}, {"sha": "a48515af9b57a594168cb9428a1bcd2eab76391b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -1,3 +1,8 @@\n+2009-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/25185\n+\t* g++.dg/template/error40.C: New.\n+\n 2009-04-07  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/38152"}, {"sha": "f449832063fc5bc40278e91df86887dec5840d3f", "filename": "gcc/testsuite/g++.dg/template/error40.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2bd47dd50fdf50e5b71e7349dae094f2920fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror40.C?ref=6ea2bd47dd50fdf50e5b71e7349dae094f2920fe", "patch": "@@ -0,0 +1,19 @@\n+// { dg-options \"-fno-pretty-templates\" }\n+\n+template <class T, int N=0, int X=1>\n+struct A\n+{\n+};\n+\n+void foo(void)\n+{\n+  A<void> a = 0;\t\t// { dg-error \"A<void, 0, 1>\" }\n+}\n+\n+template <class T> T f(T);\t    // { dg-message \"int f<int>.int.\" }\n+template <class T> T f(T, int = 0); // { dg-message \"\" }\n+\n+int main()\n+{\n+  f(1);\t\t\t\t// { dg-error \"\" }\n+}"}]}