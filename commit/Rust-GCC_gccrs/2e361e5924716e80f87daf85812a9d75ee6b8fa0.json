{"sha": "2e361e5924716e80f87daf85812a9d75ee6b8fa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUzNjFlNTkyNDcxNmU4MGY4N2RhZjg1ODEyYTlkNzVlZTZiOGZhMA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.co.uk", "date": "2000-09-18T17:12:32Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "2000-09-18T17:12:32Z"}, "message": "Avoid problems with reloading fpul in HImode\n\nFrom-SVN: r36499", "tree": {"sha": "c63e1ab6d9acae9d0dfa35d61a70a69b92498b0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c63e1ab6d9acae9d0dfa35d61a70a69b92498b0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e361e5924716e80f87daf85812a9d75ee6b8fa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e361e5924716e80f87daf85812a9d75ee6b8fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e361e5924716e80f87daf85812a9d75ee6b8fa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e361e5924716e80f87daf85812a9d75ee6b8fa0/comments", "author": null, "committer": null, "parents": [{"sha": "0fb8cb90e8f8979cf534368dd2f955ccb89cc22c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb8cb90e8f8979cf534368dd2f955ccb89cc22c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb8cb90e8f8979cf534368dd2f955ccb89cc22c"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "11ce53b6a0217600252c8aa005dc6a46e0b77e71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e361e5924716e80f87daf85812a9d75ee6b8fa0", "patch": "@@ -3,6 +3,12 @@\n \t* reload1.c (forget_old_reloads_1): If a hard reg is stored, clear\n \tits entry in spill_reg_store.\n \t* config/sh/lib1funcs.ams (movstr_i4 functions): Always compile in.\n+\t* sh.c (reg_no_subreg_operand): New function.\n+\t* sh-protos.h (reg_no_subreg_operand): Declare it.\n+\t* sh.h (PREDICATE_CODES): Add it.\n+\t* sh.md (floatsisf2_i4, floatsidf2_i, extendsfdf2_i4): Use it for\n+\tinput operand that needs to be in fpul.\n+\t(fix_truncsfsi2, fix_truncsfsi2_i4): Use register_operand for output.\n \n 2000-09-18  Alexandre Oliva  <aoliva@redhat.com>\n "}, {"sha": "e643d08f9bc74904d4bdaef1eb8890723ca8f078", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=2e361e5924716e80f87daf85812a9d75ee6b8fa0", "patch": "@@ -81,6 +81,7 @@ extern int system_reg_operand PARAMS ((rtx, enum machine_mode));\n extern int general_movsrc_operand PARAMS ((rtx, enum machine_mode));\n extern int general_movdst_operand PARAMS ((rtx, enum machine_mode));\n extern int arith_reg_operand PARAMS ((rtx, enum machine_mode));\n+extern int reg_no_subreg_operand PARAMS ((rtx, enum machine_mode));\n extern int fp_arith_reg_operand PARAMS ((rtx, enum machine_mode));\n extern int fp_extended_operand PARAMS ((rtx, enum machine_mode));\n extern int arith_operand PARAMS ((rtx, enum machine_mode));"}, {"sha": "bd2a3828de2ee511cf16340024d0e7a4267e28c2", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=2e361e5924716e80f87daf85812a9d75ee6b8fa0", "patch": "@@ -4645,6 +4645,20 @@ general_movdst_operand (op, mode)\n   return general_operand (op, mode);\n }\n \n+/* Accept a register, but not a subreg of any kind.  This allows us to\n+   avoid pathological cases in reload wrt data movement common in \n+   int->fp conversion.  */\n+\n+int\n+reg_no_subreg_operand (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  if (GET_CODE (op) == SUBREG)\n+    return 0;\n+  return register_operand (op, mode);\n+}\n+\n /* Returns 1 if OP is a normal arithmetic register.  */\n \n int"}, {"sha": "eac81287f4a4c895cbb9aa42f245f3d476b97cce", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=2e361e5924716e80f87daf85812a9d75ee6b8fa0", "patch": "@@ -2231,6 +2231,7 @@ extern struct rtx_def *fpscr_rtx;\n #define PREDICATE_CODES \\\n   {\"arith_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\t\\\n   {\"arith_reg_operand\", {SUBREG, REG}},\t\t\t\t\t\\\n+  {\"reg_no_subreg_operand\", {REG}},\t\t\t\t\t\\\n   {\"arith_reg_or_0_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n   {\"binary_float_operator\", {PLUS, MULT}},\t\t\t\t\\\n   {\"commutative_float_operator\", {PLUS, MULT}},\t\t\t\t\\"}, {"sha": "59ec818dedabf3ff6b3f11b6635fc4ee9fa5917b", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e361e5924716e80f87daf85812a9d75ee6b8fa0/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=2e361e5924716e80f87daf85812a9d75ee6b8fa0", "patch": "@@ -4235,7 +4235,7 @@ else\n \n (define_insn \"floatsisf2_i4\"\n   [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(float:SF (match_operand:SI 1 \"register_operand\" \"y\")))\n+\t(float:SF (match_operand:SI 1 \"reg_no_subreg_operand\" \"y\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"float\t%1,%0\"\n@@ -4251,7 +4251,7 @@ else\n ;;  [(set_attr \"type\" \"fp\")])\n \n (define_expand \"fix_truncsfsi2\"\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=y\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=y\")\n \t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E\"\n   \"\n@@ -4264,7 +4264,7 @@ else\n }\")\n \n (define_insn \"fix_truncsfsi2_i4\"\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=y\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=y\")\n \t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n@@ -4490,7 +4490,7 @@ else\n \n (define_insn \"floatsidf2_i\"\n   [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(float:DF (match_operand:SI 1 \"register_operand\" \"y\")))\n+\t(float:DF (match_operand:SI 1 \"reg_no_subreg_operand\" \"y\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"float\t%1,%0\"\n@@ -4634,7 +4634,7 @@ else\n \n (define_insn \"extendsfdf2_i4\"\n   [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(float_extend:DF (match_operand:SF 1 \"register_operand\" \"y\")))\n+\t(float_extend:DF (match_operand:SF 1 \"reg_no_subreg_operand\" \"y\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcnvsd  %1,%0\""}]}