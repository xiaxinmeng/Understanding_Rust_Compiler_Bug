{"sha": "d2f3ffba9a32449f59973e11b846de08c2683583", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJmM2ZmYmE5YTMyNDQ5ZjU5OTczZTExYjg0NmRlMDhjMjY4MzU4Mw==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-07-29T15:22:07Z"}, "committer": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-07-29T15:22:07Z"}, "message": "tree-vrp.c (compare_range_with_value): Return true or false for ~[VAL_1...\n\n2005-07-29  James A. Morrison  <phython@gcc.gnu.org>\n\n        * tree-vrp.c (compare_range_with_value): Return true or false\n        for ~[VAL_1, VAL_2] OP VAL if VAL_1 <= VAL <= VAL_2 for NE_EXPR and\n        EQ_EXPR respectively.\n\nFrom-SVN: r102558", "tree": {"sha": "d9660d0e09f0dad3cad64576be6dbc0999cb14c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9660d0e09f0dad3cad64576be6dbc0999cb14c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2f3ffba9a32449f59973e11b846de08c2683583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f3ffba9a32449f59973e11b846de08c2683583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f3ffba9a32449f59973e11b846de08c2683583", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f3ffba9a32449f59973e11b846de08c2683583/comments", "author": null, "committer": null, "parents": [{"sha": "9e4eb5598d347211a5a50b791bcbea863dfba49b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4eb5598d347211a5a50b791bcbea863dfba49b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e4eb5598d347211a5a50b791bcbea863dfba49b"}], "stats": {"total": 71, "additions": 68, "deletions": 3}, "files": [{"sha": "6ddd4325c68ccb19027303a5a95798cd106b54da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2f3ffba9a32449f59973e11b846de08c2683583", "patch": "@@ -1,3 +1,9 @@\n+2005-07-29  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\t* tree-vrp.c (compare_range_with_value): Return true or false\n+\tfor ~[VAL_1, VAL_2] OP VAL if VAL_1 <= VAL <= VAL_2 for NE_EXPR and\n+\tEQ_EXPR respectively.\n+\n 2005-07-29  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* cfg.c, tree-complex.c, config/frv/frv.c, config/i386/i386.c:"}, {"sha": "cf45c8aef58b6bcbd25e191efc2d9fc011a67ee3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d2f3ffba9a32449f59973e11b846de08c2683583", "patch": "@@ -1,3 +1,8 @@\n+2005-07-29  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\t* gcc.dg/tree-ssa/vrp19.c: New test.\n+\t* gcc.dg/tree-ssa-vrp20.c: New test.\n+\n 2005-07-29  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/22240"}, {"sha": "45a85fafe1b863014f8062fae184a4bdf31d282a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp19.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp19.c?ref=d2f3ffba9a32449f59973e11b846de08c2683583", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fwrapv -O1 -ftree-vrp -fdump-tree-vrp\" } */\n+\n+#include <limits.h>\n+extern void abort ();\n+extern void exit (int);\n+\n+int f (int a) {\n+\tif (a != INT_MIN) {\n+\t\ta = a > 0 ? a : -a;\n+\t\tif (a < 0)\n+\t\t  return 1;\n+\t}\n+\treturn 0;\n+}\n+\n+int g (int b) {\n+\tif (b != INT_MIN) {\n+\t\tb = b > 0 ? b : -b;\n+\t\tif (b >= 0)\n+\t\t  return 0;\n+\t}\n+\treturn 1;\n+}\n+/* { dg-final { scan-tree-dump \"Folding predicate a_. < 0 to 0\" \"vrp\" } } */\n+/* { dg-final { scan-tree-dump \"Folding predicate b_. >= 0 to 1\" \"vrp\" } } */\n+/* { dg-final { cleanup-tree-dump \"vrp\" } } */"}, {"sha": "91c195b3b4de402dd322ca830dddd4bc280c387d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp20.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp20.c?ref=d2f3ffba9a32449f59973e11b846de08c2683583", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fwrapv -O1 -ftree-vrp -fdump-tree-vrp\" } */\n+\n+extern void abort ();\n+extern void exit (int);\n+\n+int f (int a) {\n+\tif (a != 0) {\n+\t\ta = a > 0 ? a : -a;\n+\t\tif (a == 0)\n+\t\t  return 1;\n+\t\treturn 0;\n+\t}\n+\treturn 0;\n+}\n+\n+int g (int b) {\n+\tif (b != 0) {\n+\t\tb = b > 0 ? b : -b;\n+\t\tif (b != 0)\n+\t\t  return 0;\n+\t}\n+\treturn 1;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Folding predicate a_. == 0 to 0\" \"vrp\" } } */\n+/* { dg-final { scan-tree-dump \"Folding predicate b_. != 0 to 1\" \"vrp\" } } */\n+/* { dg-final { cleanup-tree-dump \"vrp\" } } */"}, {"sha": "68960e547f6fa8fff9d0b70a8c9e807bf5982642", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f3ffba9a32449f59973e11b846de08c2683583/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=d2f3ffba9a32449f59973e11b846de08c2683583", "patch": "@@ -1753,9 +1753,8 @@ compare_range_with_value (enum tree_code comp, value_range_t *vr, tree val)\n \t  || comp == LE_EXPR)\n \treturn NULL_TREE;\n \n-      /* ~[VAL, VAL] == VAL is always false.  */\n-      if (compare_values (vr->min, val) == 0\n-\t  && compare_values (vr->max, val) == 0)\n+      /* ~[VAL_1, VAL_2] OP VAL is known if VAL_1 <= VAL <= VAL_2.  */\n+      if (value_inside_range (val, vr) == 1)\n \treturn (comp == NE_EXPR) ? boolean_true_node : boolean_false_node;\n \n       return NULL_TREE;"}]}