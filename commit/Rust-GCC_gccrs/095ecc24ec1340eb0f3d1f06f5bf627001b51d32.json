{"sha": "095ecc24ec1340eb0f3d1f06f5bf627001b51d32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk1ZWNjMjRlYzEzNDBlYjBmM2QxZjA2ZjViZjYyNzAwMWI1MWQzMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenth@gcc.gnu.org", "date": "2005-06-01T18:43:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-06-01T18:43:02Z"}, "message": "tree.h (fold_indirect_ref_1): Export from fold-const.c.\n\n2005-06-01  Richard Guenther  <rguenth@gcc.gnu.org>\n\n\t* tree.h (fold_indirect_ref_1): Export from fold-const.c.\n\t* fold-const.c (fold_indirect_ref_1): No longer static.\n\t* tree-inline.c (copy_body_r): Use fold_indirect_ref_1 for\n\tfolding, if possible.\n\nFrom-SVN: r100458", "tree": {"sha": "991227bc41638e17a027fb12fa3ce93c50321a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/991227bc41638e17a027fb12fa3ce93c50321a30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/095ecc24ec1340eb0f3d1f06f5bf627001b51d32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/095ecc24ec1340eb0f3d1f06f5bf627001b51d32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/095ecc24ec1340eb0f3d1f06f5bf627001b51d32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/095ecc24ec1340eb0f3d1f06f5bf627001b51d32/comments", "author": null, "committer": null, "parents": [{"sha": "82c0180d7797e3602a7069dbf5696b487be5d7d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c0180d7797e3602a7069dbf5696b487be5d7d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c0180d7797e3602a7069dbf5696b487be5d7d8"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "29603148a2c447097b55473d6dd1a9822a0d8e25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095ecc24ec1340eb0f3d1f06f5bf627001b51d32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095ecc24ec1340eb0f3d1f06f5bf627001b51d32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=095ecc24ec1340eb0f3d1f06f5bf627001b51d32", "patch": "@@ -1,3 +1,10 @@\n+2005-06-01  Richard Guenther  <rguenth@gcc.gnu.org>\n+\n+\t* tree.h (fold_indirect_ref_1): Export from fold-const.c.\n+\t* fold-const.c (fold_indirect_ref_1): No longer static.\n+\t* tree-inline.c (copy_body_r): Use fold_indirect_ref_1 for\n+\tfolding, if possible.\n+\n 2005-06-01  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* common.opt (fjump-tables): New."}, {"sha": "ad5039bba6eb541619b24f1219c4da1ab0b3c414", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095ecc24ec1340eb0f3d1f06f5bf627001b51d32/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095ecc24ec1340eb0f3d1f06f5bf627001b51d32/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=095ecc24ec1340eb0f3d1f06f5bf627001b51d32", "patch": "@@ -11508,7 +11508,7 @@ build_fold_addr_expr (tree t)\n    of an indirection through OP0, or NULL_TREE if no simplification is\n    possible.  */\n \n-static tree\n+tree\n fold_indirect_ref_1 (tree type, tree op0)\n {\n   tree sub = op0;"}, {"sha": "28bdf6cc47886de913379617139fedfe65dc7d9a", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095ecc24ec1340eb0f3d1f06f5bf627001b51d32/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095ecc24ec1340eb0f3d1f06f5bf627001b51d32/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=095ecc24ec1340eb0f3d1f06f5bf627001b51d32", "patch": "@@ -615,13 +615,17 @@ copy_body_r (tree *tp, int *walk_subtrees, void *data)\n \t         it manually here as we'll eventually get ADDR_EXPRs\n \t\t which lie about their types pointed to.  In this case\n \t\t build_fold_indirect_ref wouldn't strip the INDIRECT_REF,\n-\t\t but we absolutely rely on that.  */\n-\t      if (TREE_CODE ((tree)n->value) == ADDR_EXPR)\n-\t\t*tp = TREE_OPERAND ((tree)n->value, 0);\n-\t      else\n-\t        *tp = build1 (INDIRECT_REF,\n-\t\t\t      TREE_TYPE (TREE_TYPE ((tree)n->value)),\n-\t\t\t      (tree)n->value);\n+\t\t but we absolutely rely on that.  As fold_indirect_ref\n+\t         does other useful transformations, try that first, though.  */\n+\t      tree type = TREE_TYPE (TREE_TYPE ((tree)n->value));\n+\t      *tp = fold_indirect_ref_1 (type, (tree)n->value);\n+\t      if (! *tp)\n+\t        {\n+\t\t  if (TREE_CODE ((tree)n->value) == ADDR_EXPR)\n+\t\t    *tp = TREE_OPERAND ((tree)n->value, 0);\n+\t          else\n+\t            *tp = build1 (INDIRECT_REF, type, (tree)n->value);\n+\t\t}\n \t      *walk_subtrees = 0;\n \t      return NULL;\n \t    }"}, {"sha": "c9fdb9336c3b1539407a7fcfbae8b6ce469fd21a", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095ecc24ec1340eb0f3d1f06f5bf627001b51d32/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095ecc24ec1340eb0f3d1f06f5bf627001b51d32/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=095ecc24ec1340eb0f3d1f06f5bf627001b51d32", "patch": "@@ -3539,6 +3539,7 @@ extern tree fold_convert (tree, tree);\n extern tree fold_single_bit_test (enum tree_code, tree, tree, tree);\n extern tree fold_ignored_result (tree);\n extern tree fold_abs_const (tree, tree);\n+extern tree fold_indirect_ref_1 (tree, tree);\n \n extern tree force_fit_type (tree, int, bool, bool);\n "}]}