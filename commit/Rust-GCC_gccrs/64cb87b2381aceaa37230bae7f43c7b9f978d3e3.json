{"sha": "64cb87b2381aceaa37230bae7f43c7b9f978d3e3", "node_id": "C_kwDOANBUbNoAKDY0Y2I4N2IyMzgxYWNlYWEzNzIzMGJhZTdmNDNjN2I5Zjk3OGQzZTM", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-07-22T11:15:50Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-07-22T19:25:38Z"}, "message": "xtensa: Optimize \"bitwise AND NOT with imm\" followed by \"branch if (not) equal to zero\"\n\nThe RTL combiner will transform \"if ((x & C) == C) goto label;\"\ninto \"if ((~x & C) == 0) goto label;\" and will try to match it with\nthe insn patterns.\n\n    /* example */\n    void test_0(int a) {\n      if ((char)a == 255)\n        foo();\n    }\n    void test_1(int a) {\n      if ((unsigned short)a == 0xFFFF)\n        foo();\n    }\n    void test_2(int a) {\n      if ((a & 0x00003F80) != 0x00003F80)\n        foo();\n    }\n\n    ;; before\n    test_0:\n\textui\ta2, a2, 0, 8\n\tmovi\ta3, 0xff\n\tbne\ta2, a3, .L1\n\tj.l\tfoo, a9\n    .L1:\n\tret.n\n    test_1:\n\tmovi.n\ta3, -1\n\textui\ta2, a2, 0, 16\n\textui\ta3, a3, 16, 16\n\tbne\ta2, a3, .L3\n\tj.l\tfoo, a9\n    .L3:\n\tret.n\n    test_2:\n\tmovi\ta3, 0x80\n\textui\ta2, a2, 7, 7\n\taddmi\ta3, a3, 0x3f00\n\tslli\ta2, a2, 7\n\tbeq\ta2, a3, .L5\n\tj.l\tfoo, a9\n    .L5:\n\tret.n\n\n    ;; after\n    test_0:\n\tmovi\ta3, 0xff\n\tbnall\ta2, a3, .L1\n\tj.l\tfoo, a9\n    .L1:\n\tret.n\n    test_1:\n\tmovi.n\ta3, -1\n\textui\ta3, a3, 16, 16\n\tbnall\ta2, a3, .L3\n\tj.l\tfoo, a9\n    .L3:\n\tret.n\n    test_2:\n\tmovi\ta3, 0x80\n\taddmi\ta3, a3, 0x3f00\n\tball\ta2, a3, .L5\n\tj.l\tfoo, a9\n    .L5:\n\tret.n\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.md (*masktrue_const_bitcmpl):\n\tAdd a new insn_and_split pattern, and a few split patterns for\n\tspacial cases.", "tree": {"sha": "cecb4747879ad3afa80f418cee67b3c3738da96c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cecb4747879ad3afa80f418cee67b3c3738da96c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64cb87b2381aceaa37230bae7f43c7b9f978d3e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64cb87b2381aceaa37230bae7f43c7b9f978d3e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64cb87b2381aceaa37230bae7f43c7b9f978d3e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64cb87b2381aceaa37230bae7f43c7b9f978d3e3/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf1725610526fe347d2530455b32affc033fd7fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf1725610526fe347d2530455b32affc033fd7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf1725610526fe347d2530455b32affc033fd7fc"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "899ce2755aa2a12676e43f3860b6c02de0036930", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cb87b2381aceaa37230bae7f43c7b9f978d3e3/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cb87b2381aceaa37230bae7f43c7b9f978d3e3/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=64cb87b2381aceaa37230bae7f43c7b9f978d3e3", "patch": "@@ -1714,6 +1714,90 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3\")])\n \n+(define_insn_and_split \"*masktrue_const_bitcmpl\"\n+  [(set (pc)\n+\t(if_then_else (match_operator 3 \"boolean_operator\"\n+\t\t\t[(and:SI (not:SI (match_operand:SI 0 \"register_operand\" \"r\"))\n+\t\t\t\t (match_operand:SI 1 \"const_int_operand\" \"i\"))\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"exact_log2 (INTVAL (operands[1])) < 0\"\n+  \"#\"\n+  \"&& can_create_pseudo_p ()\"\n+  [(set (match_dup 4)\n+\t(match_dup 1))\n+   (set (pc)\n+\t(if_then_else (match_op_dup 3\n+\t\t\t[(and:SI (not:SI (match_dup 0))\n+\t\t\t\t (match_dup 4))\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_dup 2))\n+\t\t      (pc)))]\n+{\n+  operands[4] = gen_reg_rtx (SImode);\n+}\n+  [(set_attr \"type\"\t\"jump\")\n+   (set_attr \"mode\"\t\"none\")\n+   (set (attr \"length\")\n+\t(if_then_else (match_test \"TARGET_DENSITY\n+\t\t\t\t   && IN_RANGE (INTVAL (operands[1]), -32, 95)\")\n+\t\t      (const_int 5)\n+\t\t      (if_then_else (match_test \"xtensa_simm12b (INTVAL (operands[1]))\")\n+\t\t\t\t    (const_int 6)\n+\t\t\t\t    (const_int 10))))])\n+\n+(define_split\n+  [(set (pc)\n+\t(if_then_else (match_operator 2 \"boolean_operator\"\n+\t\t\t[(subreg:HQI (not:SI (match_operand:SI 0 \"register_operand\")) 0)\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_operand 1 \"\"))\n+\t\t      (pc)))]\n+  \"!BYTES_BIG_ENDIAN\"\n+  [(set (pc)\n+\t(if_then_else (match_op_dup 2\n+\t\t\t[(and:SI (not:SI (match_dup 0))\n+\t\t\t\t (match_dup 3))\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_dup 1))\n+\t\t      (pc)))]\n+{\n+  operands[3] = GEN_INT ((1 << GET_MODE_BITSIZE (<MODE>mode)) - 1);\n+})\n+\n+(define_split\n+  [(set (pc)\n+\t(if_then_else (match_operator 2 \"boolean_operator\"\n+\t\t\t[(subreg:HI (not:SI (match_operand:SI 0 \"register_operand\")) 2)\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_operand 1 \"\"))\n+\t\t      (pc)))]\n+  \"BYTES_BIG_ENDIAN\"\n+  [(set (pc)\n+\t(if_then_else (match_op_dup 2\n+\t\t\t[(and:SI (not:SI (match_dup 0))\n+\t\t\t\t (const_int 65535))\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_dup 1))\n+\t\t      (pc)))])\n+\n+(define_split\n+  [(set (pc)\n+\t(if_then_else (match_operator 2 \"boolean_operator\"\n+\t\t\t[(subreg:QI (not:SI (match_operand:SI 0 \"register_operand\")) 3)\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_operand 1 \"\"))\n+\t\t      (pc)))]\n+  \"BYTES_BIG_ENDIAN\"\n+  [(set (pc)\n+\t(if_then_else (match_op_dup 2\n+\t\t\t[(and:SI (not:SI (match_dup 0))\n+\t\t\t\t (const_int 255))\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_dup 1))\n+\t\t      (pc)))])\n+\n (define_insn_and_split \"*masktrue_const_pow2_minus_one\"\n   [(set (pc)\n \t(if_then_else (match_operator 4 \"boolean_operator\""}]}