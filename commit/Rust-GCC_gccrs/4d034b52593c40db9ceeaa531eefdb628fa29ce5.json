{"sha": "4d034b52593c40db9ceeaa531eefdb628fa29ce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQwMzRiNTI1OTNjNDBkYjljZWVhYTUzMWVlZmRiNjI4ZmEyOWNlNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-18T22:29:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-18T22:29:45Z"}, "message": "runtime: always initialize str field in __go_string_slice result\n    \n    Reviewed-on: https://go-review.googlesource.com/64110\n\nFrom-SVN: r252953", "tree": {"sha": "14d9534e0e34d1b35748d66ef2e1d01619fde7f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14d9534e0e34d1b35748d66ef2e1d01619fde7f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d034b52593c40db9ceeaa531eefdb628fa29ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d034b52593c40db9ceeaa531eefdb628fa29ce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d034b52593c40db9ceeaa531eefdb628fa29ce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d034b52593c40db9ceeaa531eefdb628fa29ce5/comments", "author": null, "committer": null, "parents": [{"sha": "e1227692dde1874906f7b07fd60101336efdc0fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1227692dde1874906f7b07fd60101336efdc0fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1227692dde1874906f7b07fd60101336efdc0fa"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "27bcb6e252df6ce836eeca43f1cace60dfd7d964", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d034b52593c40db9ceeaa531eefdb628fa29ce5/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d034b52593c40db9ceeaa531eefdb628fa29ce5/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=4d034b52593c40db9ceeaa531eefdb628fa29ce5", "patch": "@@ -1,4 +1,4 @@\n-abe58fdc529378706d65d6b22e4871646eb9023e\n+be69546afcac182cc93c569bc96665f0ef72d66a\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "d51c24937811583a7fefafe22b2d2eb1396a0b11", "filename": "libgo/runtime/go-strslice.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d034b52593c40db9ceeaa531eefdb628fa29ce5/libgo%2Fruntime%2Fgo-strslice.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d034b52593c40db9ceeaa531eefdb628fa29ce5/libgo%2Fruntime%2Fgo-strslice.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-strslice.c?ref=4d034b52593c40db9ceeaa531eefdb628fa29ce5", "patch": "@@ -18,10 +18,13 @@ __go_string_slice (String s, intgo start, intgo end)\n   if (start > len || end < start || end > len)\n     runtime_panicstring (\"string index out of bounds\");\n   ret.len = end - start;\n-  // If the length of the new string is zero, don't adjust the str\n-  // field.  This ensures that we don't create a pointer to the next\n-  // memory block, and thus keep it live unnecessarily.\n-  if (ret.len > 0)\n+  // If the length of the new string is zero, the str field doesn't\n+  // matter, so just set it to nil.  This avoids the problem of\n+  // s.str + start pointing just past the end of the string,\n+  // which may keep the next memory block alive unnecessarily.\n+  if (ret.len == 0)\n+    ret.str = nil;\n+  else\n     ret.str = s.str + start;\n   return ret;\n }"}]}