{"sha": "b429fdf002777908ae76c5de195e5403fa6cb398", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQyOWZkZjAwMjc3NzkwOGFlNzZjNWRlMTk1ZTU0MDNmYTZjYjM5OA==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2000-12-16T07:57:21Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2000-12-16T07:57:21Z"}, "message": "pt.c (unify): Handle when both ARG and PARM are BOUND_TEMPLATE_TEMPLATE_PARM.\n\n\t* pt.c (unify): Handle when both ARG and PARM are\n\tBOUND_TEMPLATE_TEMPLATE_PARM.\n\n\t* g++.old-deja/g++.pt/ttp65.C: New test.\n\nFrom-SVN: r38301", "tree": {"sha": "5ac6505cdb0c3badcafb5fe18a3cdcd0972f1968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ac6505cdb0c3badcafb5fe18a3cdcd0972f1968"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b429fdf002777908ae76c5de195e5403fa6cb398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b429fdf002777908ae76c5de195e5403fa6cb398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b429fdf002777908ae76c5de195e5403fa6cb398", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b429fdf002777908ae76c5de195e5403fa6cb398/comments", "author": null, "committer": null, "parents": [{"sha": "c2beae77c6e8fb2bd655bfc0c88bd29b162916b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2beae77c6e8fb2bd655bfc0c88bd29b162916b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2beae77c6e8fb2bd655bfc0c88bd29b162916b1"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "f94fdc1ad9d1ae8c707f4eb5c5650c636021b3f3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b429fdf002777908ae76c5de195e5403fa6cb398/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b429fdf002777908ae76c5de195e5403fa6cb398/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b429fdf002777908ae76c5de195e5403fa6cb398", "patch": "@@ -1,3 +1,8 @@\n+2000-12-15  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* pt.c (unify): Handle when both ARG and PARM are\n+\tBOUND_TEMPLATE_TEMPLATE_PARM.\n+\n 2000-12-15  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* pt.c (reduce_template_parm_level): Set DECL_ARTIFICIAL and"}, {"sha": "3a0096e503c85c8837b9a7bb4dba517bfcb692ef", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b429fdf002777908ae76c5de195e5403fa6cb398/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b429fdf002777908ae76c5de195e5403fa6cb398/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b429fdf002777908ae76c5de195e5403fa6cb398", "patch": "@@ -8417,16 +8417,18 @@ unify (tparms, targs, parm, arg, strict)\n \n       if (TREE_CODE (parm) == BOUND_TEMPLATE_TEMPLATE_PARM)\n \t{\n-\t  /* ARG must be constructed from a template class.  */\n-\t  if (TREE_CODE (arg) != RECORD_TYPE || !CLASSTYPE_TEMPLATE_INFO (arg))\n+\t  /* ARG must be constructed from a template class or a template\n+\t     template parameter.  */\n+\t  if (TREE_CODE (arg) != BOUND_TEMPLATE_TEMPLATE_PARM\n+\t      && (TREE_CODE (arg) != RECORD_TYPE || !CLASSTYPE_TEMPLATE_INFO (arg)))\n \t    return 1;\n \n \t  {\n \t    tree parmtmpl = TYPE_TI_TEMPLATE (parm);\n \t    tree parmvec = TYPE_TI_ARGS (parm);\n-\t    tree argvec = CLASSTYPE_TI_ARGS (arg);\n+\t    tree argvec = TYPE_TI_ARGS (arg);\n \t    tree argtmplvec\n-\t      = DECL_INNERMOST_TEMPLATE_PARMS (CLASSTYPE_TI_TEMPLATE (arg));\n+\t      = DECL_INNERMOST_TEMPLATE_PARMS (TYPE_TI_TEMPLATE (arg));\n \t    int i;\n \n \t    /* The parameter and argument roles have to be switched here \n@@ -8455,7 +8457,7 @@ unify (tparms, targs, parm, arg, strict)\n \t\t  return 1;\n \t      }\n \t  }\n-\t  arg = CLASSTYPE_TI_TEMPLATE (arg);\n+\t  arg = TYPE_TI_TEMPLATE (arg);\n \n \t  /* Fall through to deduce template name.  */\n \t}"}, {"sha": "3b8b153c2b9a1f1bd8f42f1f04b629e83be85ae3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b429fdf002777908ae76c5de195e5403fa6cb398/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b429fdf002777908ae76c5de195e5403fa6cb398/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b429fdf002777908ae76c5de195e5403fa6cb398", "patch": "@@ -1,3 +1,7 @@\n+2000-12-15  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* g++.old-deja/g++.pt/ttp65.C: New test.\n+\n 2000-12-15  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* g++.old-deja/g++.pt/ttp64.C: New test."}, {"sha": "9f4507ac688adc004bbb22fb9e84ea8393653340", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ttp65.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b429fdf002777908ae76c5de195e5403fa6cb398/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp65.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b429fdf002777908ae76c5de195e5403fa6cb398/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp65.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp65.C?ref=b429fdf002777908ae76c5de195e5403fa6cb398", "patch": "@@ -0,0 +1,38 @@\n+// Build don't link:\n+\n+// Copyright (C) 2000 Free Software Foundation\n+// Contributed by Kriang Lerdsuwanakij <lerdsuwa@users.sourceforge.net>\n+\n+// Bug: We used reject template unification of two bound template template\n+// parameters.\n+\n+template <class T, class U=int> class C\n+{\n+};\n+\n+template <class T, class U> void f(C<T,U> c)\n+{\n+}\n+\n+template <class T> void f(C<T> c)\n+{\n+}\n+\n+template <template<class,class=int> class C, class T, class U>\n+void g(C<T,U> c)\n+{\n+}\n+\n+template <template<class,class=int> class C, class T> void g(C<T> c)\n+{\n+}\n+\n+int main()\n+{\n+  C<int,char> c1;\n+  f(c1);\n+  g(c1);\n+  C<int,int> c2;\n+  f(c2);\n+  g(c2);\n+}"}]}