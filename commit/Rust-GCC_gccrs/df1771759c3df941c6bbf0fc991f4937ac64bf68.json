{"sha": "df1771759c3df941c6bbf0fc991f4937ac64bf68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYxNzcxNzU5YzNkZjk0MWM2YmJmMGZjOTkxZjQ5MzdhYzY0YmY2OA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-09-06T09:46:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T09:46:21Z"}, "message": "a-cbprqu.ads, [...]: Mark all entities as Implementation_Defined\n\n2011-09-06  Robert Dewar  <dewar@adacore.com>\n\n\t* a-cbprqu.ads, a-cbsyqu.ads, a-cuprqu.ads, a-cusyqu.ads,\n\ta-intnam-aix.ads, a-intnam-darwin.ads, a-intnam-dummy.ads,\n\ta-intnam-freebsd.ads, a-intnam-hpux.ads, a-intnam-irix.ads,\n\ta-intnam-linux.ads, a-intnam-lynxos.ads, a-intnam-mingw.ads,\n\ta-intnam-solaris.ads, a-intnam-tru64.ads,\n\ta-intnam-vms.ads, a-intnam-vxworks.ads, a-intnam.ads, interfac.ads,\n\tcstand.adb, s-maccod.ads: Mark all entities as Implementation_Defined\n\t* einfo.ads, einfo.adb (Is_Implementation_Defined): New flag\n\t* par-prag.adb: Add dummy entry for pragma Implementation_Defined\n\t* s-rident.ads: Add new restriction No_Implementation_Identifiers\n\tAdd new profile No_Implementation_Extensions\n\t* sem_prag.adb: Implement pragma Implementation_Defined Implement\n\tprofile No_Implementation_Extensions\n\t* sem_util.adb: Minor reformatting (Set_Entity_With_Style_Check):\n\tCheck violation of restriction No_Implementation_Identifiers\n\t* snames.ads-tmpl: Add entries for pragma Implementation_Defined\n\tAdd entry for Name_No_Implementation_Extensions\n\n2011-09-06  Robert Dewar  <dewar@adacore.com>\n\n\t* impunit.ads: Minor reformatting.\n\nFrom-SVN: r178579", "tree": {"sha": "429554c33a252597717aa37c4679a670f6ad5586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/429554c33a252597717aa37c4679a670f6ad5586"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df1771759c3df941c6bbf0fc991f4937ac64bf68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1771759c3df941c6bbf0fc991f4937ac64bf68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df1771759c3df941c6bbf0fc991f4937ac64bf68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1771759c3df941c6bbf0fc991f4937ac64bf68/comments", "author": null, "committer": null, "parents": [{"sha": "b991dd43aec9631d880de87f66ea9383d1c81f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b991dd43aec9631d880de87f66ea9383d1c81f1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b991dd43aec9631d880de87f66ea9383d1c81f1f"}], "stats": {"total": 343, "additions": 290, "deletions": 53}, "files": [{"sha": "270e0bfec64963c339233275bb25bb67e173a155", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -1,3 +1,27 @@\n+2011-09-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-cbprqu.ads, a-cbsyqu.ads, a-cuprqu.ads, a-cusyqu.ads,\n+\ta-intnam-aix.ads, a-intnam-darwin.ads, a-intnam-dummy.ads,\n+\ta-intnam-freebsd.ads, a-intnam-hpux.ads, a-intnam-irix.ads,\n+\ta-intnam-linux.ads, a-intnam-lynxos.ads, a-intnam-mingw.ads,\n+\ta-intnam-solaris.ads, a-intnam-tru64.ads,\n+\ta-intnam-vms.ads, a-intnam-vxworks.ads, a-intnam.ads, interfac.ads,\n+\tcstand.adb, s-maccod.ads: Mark all entities as Implementation_Defined\n+\t* einfo.ads, einfo.adb (Is_Implementation_Defined): New flag\n+\t* par-prag.adb: Add dummy entry for pragma Implementation_Defined\n+\t* s-rident.ads: Add new restriction No_Implementation_Identifiers\n+\tAdd new profile No_Implementation_Extensions\n+\t* sem_prag.adb: Implement pragma Implementation_Defined Implement\n+\tprofile No_Implementation_Extensions\n+\t* sem_util.adb: Minor reformatting (Set_Entity_With_Style_Check):\n+\tCheck violation of restriction No_Implementation_Identifiers\n+\t* snames.ads-tmpl: Add entries for pragma Implementation_Defined\n+\tAdd entry for Name_No_Implementation_Extensions\n+\n+2011-09-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* impunit.ads: Minor reformatting.\n+\n 2011-09-06  Robert Dewar  <dewar@adacore.com>\n \n \t* ali.adb, sem_ch13.adb, lib-xref.adb: Minor reformatting."}, {"sha": "589ee31389454ff4cffe2aa31edaed60db4cec62", "filename": "gcc/ada/a-cbprqu.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-cbprqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-cbprqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbprqu.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--            Copyright (C) 2011, Free Software Foundation, Inc.            --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -54,6 +54,10 @@ generic\n package Ada.Containers.Bounded_Priority_Queues is\n    pragma Preelaborate;\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    package Implementation is\n \n       type List_Type (Capacity : Count_Type) is tagged limited private;\n@@ -111,7 +115,6 @@ package Ada.Containers.Bounded_Priority_Queues is\n       function Peak_Use return Count_Type;\n \n    private\n-\n       List : Implementation.List_Type (Capacity);\n \n    end Queue;"}, {"sha": "8d25359469d31e74996f3eedc54704d544060c30", "filename": "gcc/ada/a-cbsyqu.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-cbsyqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-cbsyqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbsyqu.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--            Copyright (C) 2011, Free Software Foundation, Inc.            --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -44,6 +44,10 @@ generic\n package Ada.Containers.Bounded_Synchronized_Queues is\n    pragma Preelaborate;\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    package Implementation is\n \n       type List_Type (Capacity : Count_Type) is tagged limited private;"}, {"sha": "d31c8824458624fecf8b9f7b1c19340abfd18425", "filename": "gcc/ada/a-cuprqu.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-cuprqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-cuprqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cuprqu.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--            Copyright (C) 2011, Free Software Foundation, Inc.            --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -52,6 +52,10 @@ generic\n package Ada.Containers.Unbounded_Priority_Queues is\n    pragma Preelaborate;\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    package Implementation is\n \n       type List_Type is tagged limited private;"}, {"sha": "98337a03587610f6d6aa985a799da603015c88dc", "filename": "gcc/ada/a-cusyqu.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-cusyqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-cusyqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cusyqu.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--            Copyright (C) 2011, Free Software Foundation, Inc.            --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -44,6 +44,10 @@ generic\n package Ada.Containers.Unbounded_Synchronized_Queues is\n    pragma Preelaborate;\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    package Implementation is\n \n       type List_Type is tagged limited private;"}, {"sha": "308f55f82b5e5616e7e4fdb435e4335487e5e2d9", "filename": "gcc/ada/a-intnam-aix.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-aix.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -52,6 +52,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases. Also, for all signal names that are not supported on\n    --  the current system the value of the corresponding constant will be zero."}, {"sha": "4610876490f955985fca1d4e5c1cf856ae33b50e", "filename": "gcc/ada/a-intnam-darwin.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-darwin.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,6 +46,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases. Also, for all signal names that are not supported on the\n    --  current system the value of the corresponding constant will be zero."}, {"sha": "6e71411de2eb4123ea5a94ea5e884b6c88e940e4", "filename": "gcc/ada/a-intnam-dummy.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-dummy.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-dummy.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-dummy.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                           (No Tasking Version)                           --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,6 +40,10 @@\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    DUMMY_INTERRUPT_1 : constant Interrupt_ID := 1;\n    DUMMY_INTERRUPT_2 : constant Interrupt_ID := 2;\n "}, {"sha": "7362f9f156acf6f19f70b545b8cbd850edae6022", "filename": "gcc/ada/a-intnam-freebsd.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-freebsd.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,6 +35,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases. Also, for all signal names that are not supported on\n    --  the current system the value of the corresponding constant will be zero."}, {"sha": "db061a96b5ce5a1eefb311e4fb2385191e539215", "filename": "gcc/ada/a-intnam-hpux.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-hpux.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,6 +47,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases. Also, for all signal names that are not supported on\n    --  the current system the value of the corresponding constant will be zero."}, {"sha": "65859c091cdc870ae7c17a9b7576691d3067180d", "filename": "gcc/ada/a-intnam-irix.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-irix.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can redistribute it  and/or modify it  under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,6 +53,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases. Also, for all signal names that are not supported on\n    --  the current system the value of the corresponding constant will be zero."}, {"sha": "5003c20461ae5ecefb5de189e4e4315d4706e0df", "filename": "gcc/ada/a-intnam-linux.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-linux.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -52,6 +52,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases. Also, for all signal names that are not supported on the\n    --  current system the value of the corresponding constant will be zero."}, {"sha": "c4e714c8696b4415fa616475df7c72d6284985da", "filename": "gcc/ada/a-intnam-lynxos.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-lynxos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-lynxos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-lynxos.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,6 +44,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases.\n "}, {"sha": "3a2bcdc179f8b525ebd427825749d58eeae54bf8", "filename": "gcc/ada/a-intnam-mingw.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-mingw.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1997-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,6 +38,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases. Also, for all signal names that are not supported on the\n    --  current system the value of the corresponding constant will be zero."}, {"sha": "3ed974e7d4c729db2736531b493ff2cc2b40a0fe", "filename": "gcc/ada/a-intnam-solaris.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-solaris.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,6 +49,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases. Also, for all signal names that are not supported on the\n    --  current system the value of the corresponding constant will be zero."}, {"sha": "3ea1a4afd7cac9c2ae70bf7b0b431b57675b00cf", "filename": "gcc/ada/a-intnam-tru64.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-tru64.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,6 +44,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    --  Beware that the mapping of names to signals may be many-to-one. There\n    --  may be aliases. Also, for all signal names that are not supported on the\n    --  current system the value of the corresponding constant will be zero."}, {"sha": "30f98d334661adaf9744e520dc414987235059ae", "filename": "gcc/ada/a-intnam-vms.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-vms.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,6 +38,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    package OS renames System.OS_Interface;\n \n    Interrupt_ID_0   : constant Interrupt_ID := OS.Interrupt_ID_0;"}, {"sha": "0c043f45a0773670ec9490abe4244ea3dcbb6870", "filename": "gcc/ada/a-intnam-vxworks.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-vxworks.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,6 +35,10 @@ with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    subtype Hardware_Interrupts is Interrupt_ID\n      range Interrupt_ID'First .. System.OS_Interface.Max_HW_Interrupt;\n    --  Range of values that can be used for hardware interrupts"}, {"sha": "f50c46a0df0682d53f3323b8d9637b62e43c6361", "filename": "gcc/ada/a-intnam.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fa-intnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -23,6 +23,10 @@\n \n package Ada.Interrupts.Names is\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    DUMMY_INTERRUPT_1 : constant Interrupt_ID := 1;\n    DUMMY_INTERRUPT_2 : constant Interrupt_ID := 2;\n "}, {"sha": "ce46e0f28097eaa54d424467bc8627f31e9f53a0", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -442,8 +442,10 @@ package body CStand is\n       begin\n          --  Create type definition nodes for predefined float types\n \n-         Copy_Float_Type (Standard_Short_Float,\n-           Find_Back_End_Float_Type (\"float\"));\n+         Copy_Float_Type\n+           (Standard_Short_Float,\n+            Find_Back_End_Float_Type (\"float\"));\n+         Set_Is_Implementation_Defined (Standard_Short_Float);\n \n          Copy_Float_Type (Standard_Float, Standard_Short_Float);\n \n@@ -476,6 +478,7 @@ package body CStand is\n                LLF := Standard_Long_Float;\n             end if;\n \n+            Set_Is_Implementation_Defined (Standard_Long_Long_Float);\n             Copy_Float_Type (Standard_Long_Long_Float, LLF);\n \n             Append_Elmt (Standard_Long_Long_Float, Predefined_Float_Types);\n@@ -670,9 +673,11 @@ package body CStand is\n \n       Build_Signed_Integer_Type\n         (Standard_Long_Long_Integer, Standard_Long_Long_Integer_Size);\n+      Set_Is_Implementation_Defined (Standard_Long_Long_Integer);\n \n       Create_Unconstrained_Base_Type\n         (Standard_Short_Short_Integer, E_Signed_Integer_Subtype);\n+      Set_Is_Implementation_Defined (Standard_Short_Short_Integer);\n \n       Create_Unconstrained_Base_Type\n         (Standard_Short_Integer, E_Signed_Integer_Subtype);\n@@ -685,6 +690,7 @@ package body CStand is\n \n       Create_Unconstrained_Base_Type\n         (Standard_Long_Long_Integer, E_Signed_Integer_Subtype);\n+      Set_Is_Implementation_Defined (Standard_Short_Short_Integer);\n \n       Create_Float_Types;\n "}, {"sha": "4cbd4c5cb44497b6b9ea410b55c421ef6f7dabdb", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -523,8 +523,7 @@ package body Einfo is\n    --    Has_Implicit_Dereference        Flag251\n    --    Is_Processed_Transient          Flag252\n    --    Has_Anonymous_Master            Flag253\n-\n-   --    (unused)                        Flag254\n+   --    Is_Implementation_Defined       Flag254\n \n    -----------------------\n    -- Local subprograms --\n@@ -1880,6 +1879,11 @@ package body Einfo is\n       return Flag7 (Id);\n    end Is_Immediately_Visible;\n \n+   function Is_Implementation_Defined (Id : E) return B is\n+   begin\n+      return Flag254 (Id);\n+   end Is_Implementation_Defined;\n+\n    function Is_Imported (Id : E) return B is\n    begin\n       return Flag24 (Id);\n@@ -4408,6 +4412,11 @@ package body Einfo is\n       Set_Flag7 (Id, V);\n    end Set_Is_Immediately_Visible;\n \n+   procedure Set_Is_Implementation_Defined (Id : E; V : B := True) is\n+   begin\n+      Set_Flag254 (Id, V);\n+   end Set_Is_Implementation_Defined;\n+\n    procedure Set_Is_Imported (Id : E; V : B := True) is\n    begin\n       Set_Flag24 (Id, V);\n@@ -7564,6 +7573,7 @@ package body Einfo is\n       W (\"Is_Hidden\",                       Flag57  (Id));\n       W (\"Is_Hidden_Open_Scope\",            Flag171 (Id));\n       W (\"Is_Immediately_Visible\",          Flag7   (Id));\n+      W (\"Is_Implementation_Defined\",       Flag254 (Id));\n       W (\"Is_Imported\",                     Flag24  (Id));\n       W (\"Is_Inlined\",                      Flag11  (Id));\n       W (\"Is_Instantiated\",                 Flag126 (Id));"}, {"sha": "c366e0274b31ecde42b86f52149c3d874aa2277a", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -2292,6 +2292,12 @@ package Einfo is\n --       Present in all entities. Set if entity is immediately visible, i.e.\n --       is defined in some currently open scope (RM 8.3(4)).\n \n+--    Is_Implementation_Defined (Flag254)\n+--       Present in all entities. Set if a pragma Implementation_Defined is\n+--       applied to the pragma. Used to mark all implementation defined\n+--       identifiers in standard library packages, and to implement the\n+--       restriction No_Implementation_Identifiers.\n+\n --    Is_Imported (Flag24)\n --       Present in all entities. Set if the entity is imported. For now we\n --       only allow the import of exceptions, functions, procedures, packages.\n@@ -4804,6 +4810,7 @@ package Einfo is\n    --    Is_Hidden                           (Flag57)\n    --    Is_Hidden_Open_Scope                (Flag171)\n    --    Is_Immediately_Visible              (Flag7)\n+   --    Is_Implementation_Defined           (Flag254)\n    --    Is_Imported                         (Flag24)\n    --    Is_Inlined                          (Flag11)\n    --    Is_Internal                         (Flag17)\n@@ -6226,6 +6233,7 @@ package Einfo is\n    function Is_Hidden                           (Id : E) return B;\n    function Is_Hidden_Open_Scope                (Id : E) return B;\n    function Is_Immediately_Visible              (Id : E) return B;\n+   function Is_Implementation_Defined           (Id : E) return B;\n    function Is_Imported                         (Id : E) return B;\n    function Is_Inlined                          (Id : E) return B;\n    function Is_Interface                        (Id : E) return B;\n@@ -6820,6 +6828,7 @@ package Einfo is\n    procedure Set_Is_Hidden                       (Id : E; V : B := True);\n    procedure Set_Is_Hidden_Open_Scope            (Id : E; V : B := True);\n    procedure Set_Is_Immediately_Visible          (Id : E; V : B := True);\n+   procedure Set_Is_Implementation_Defined       (Id : E; V : B := True);\n    procedure Set_Is_Imported                     (Id : E; V : B := True);\n    procedure Set_Is_Inlined                      (Id : E; V : B := True);\n    procedure Set_Is_Interface                    (Id : E; V : B := True);\n@@ -7545,6 +7554,7 @@ package Einfo is\n    pragma Inline (Is_Hidden);\n    pragma Inline (Is_Hidden_Open_Scope);\n    pragma Inline (Is_Immediately_Visible);\n+   pragma Inline (Is_Implementation_Defined);\n    pragma Inline (Is_Imported);\n    pragma Inline (Is_Incomplete_Or_Private_Type);\n    pragma Inline (Is_Incomplete_Type);\n@@ -7967,6 +7977,7 @@ package Einfo is\n    pragma Inline (Set_Is_Hidden);\n    pragma Inline (Set_Is_Hidden_Open_Scope);\n    pragma Inline (Set_Is_Immediately_Visible);\n+   pragma Inline (Set_Is_Implementation_Defined);\n    pragma Inline (Set_Is_Imported);\n    pragma Inline (Set_Is_Inlined);\n    pragma Inline (Set_Is_Interface);"}, {"sha": "5cce6435290f9a98de31b99440a2d40eb3c4340b", "filename": "gcc/ada/impunit.ads", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fimpunit.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fimpunit.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,53 +23,53 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains data and functions used to determine if a given\n---  unit is an internal unit intended only for use by the implementation\n---  and which should not be directly WITH'ed by user code. It also checks\n---  for Ada 05 units that should only be WITH'ed in Ada 05 mode.\n+--  This package contains data and functions used to determine if a given unit\n+--  is an internal unit intended only for use by the implementation and which\n+--  should not be directly WITH'ed by user code. It also checks for Ada 05\n+--  units that should only be WITH'ed in Ada 05 mode.\n \n with Types; use Types;\n \n package Impunit is\n \n    type Kind_Of_Unit is\n      (Implementation_Unit,\n-      --  Unit from predefined library intended to be used only by the\n-      --  compiler generated code, or from the implementation of the run time.\n-      --  Use of such a unit generates a warning unless the client is compiled\n-      --  with the -gnatg switch. If we are being super strict, this should be\n-      --  an error for the case of Ada units, but that seems over strenuous.\n+      --  Unit from predefined library intended to be used only by the compiler\n+      --  generated code, or from the implementation of the run time. Use of\n+      --  such a unit generates a warning unless the client is compiled with\n+      --  the -gnatg switch. If we are being super strict, this should be an\n+      --  error for the case of Ada units, but that seems over strenuous.\n \n       Not_Predefined_Unit,\n       --  This is not a predefined unit, so no checks are needed\n \n       Ada_95_Unit,\n-      --  This unit is defined in the Ada 95 RM, and can be freely with'ed\n-      --  in both Ada 95 mode and Ada 05 mode. Note that in Ada 83 mode, no\n-      --  child units are allowed, so you can't even name such a unit.\n+      --  This unit is defined in the Ada 95 RM, and can be freely with'ed in\n+      --  both Ada 95 mode and Ada 05 mode. Note that in Ada 83 mode, no child\n+      --  units are allowed, so you can't even name such a unit.\n \n       Ada_2005_Unit,\n-      --  This unit is defined in the Ada 2005 RM. Withing this unit from a\n+      --  This unit is defined in the Ada 2005 RM. Withing this unit from an\n       --  Ada 95 mode program will generate a warning (again, strictly speaking\n       --  this should be an error, but that seems over-strenuous).\n \n       Ada_2012_Unit);\n-      --  This unit is defined in the Ada 2012 RM. Withing this unit from a Ada\n-      --  95 mode or Ada 2005 program will generate a warning (again, strictly\n+      --  This unit is defined in the Ada 2012 RM. Withing this unit from an\n+      --  Ada 95 or 2005 mode program will generate a warning (again, strictly\n       --  speaking this should be an error, but that seems over-strenuous).\n \n    function Get_Kind_Of_Unit (U : Unit_Number_Type) return Kind_Of_Unit;\n    --  Given the unit number of a unit, this function determines the type\n    --  of the unit, as defined above. If the result is Implementation_Unit,\n    --  then the name of a possible atlernative equivalent unit is placed in\n-   --  Error_Msg_String/Slen on return. If there is no alternative name, or\n-   --  if the result is not Implementation_Unit, then Error_Msg_Slen is zero\n-   --  on return, indicating that no alternative name was found.\n+   --  Error_Msg_String/Slen on return. If there is no alternative name, or if\n+   --  the result is not Implementation_Unit, then Error_Msg_Slen is zero on\n+   --  return, indicating that no alternative name was found.\n \n    function Is_Known_Unit (Nam : Node_Id) return Boolean;\n    --  Nam is the possible name of a child unit, represented as a selected\n-   --  component node. This function determines whether the name matches\n-   --  one of the known library units, and if so, returns True. If the name\n-   --  does not match any known library unit, False is returned.\n+   --  component node. This function determines whether the name matches one of\n+   --  the known library units, and if so, returns True. If the name does not\n+   --  match any known library unit, False is returned.\n \n end Impunit;"}, {"sha": "810366d57631e6b7a306239498e1b52fdf8f9485", "filename": "gcc/ada/interfac.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Finterfac.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Finterfac.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finterfac.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -36,6 +36,10 @@\n package Interfaces is\n    pragma Pure;\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    type Integer_8  is range -2 **  7 .. 2 **  7 - 1;\n    for Integer_8'Size use  8;\n "}, {"sha": "5ed6553546ff501fa85a76d2050c32918bf5d49e", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -1149,6 +1149,7 @@ begin\n            Pragma_Finalize_Storage_Only         |\n            Pragma_Float_Representation          |\n            Pragma_Ident                         |\n+           Pragma_Implementation_Defined        |\n            Pragma_Implemented                   |\n            Pragma_Implicit_Packing              |\n            Pragma_Import                        |"}, {"sha": "a95e319cb988ef57404e9457fe753db17187bf20", "filename": "gcc/ada/s-maccod.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fs-maccod.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fs-maccod.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-maccod.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,10 @@\n package System.Machine_Code is\n    pragma Pure;\n \n+   --  All identifiers in this unit are implementation defined\n+\n+   pragma Implementation_Defined;\n+\n    type Asm_Input_Operand  is private;\n    type Asm_Output_Operand is private;\n    --  These types are never used directly, they are declared only so that"}, {"sha": "df68e303ff825d9f8440971dc9622d3eee4441e5", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -126,6 +126,7 @@ package System.Rident is\n \n       Immediate_Reclamation,                   -- (RM H.4(10))\n       No_Implementation_Attributes,            -- Ada 2005 AI-257\n+      No_Implementation_Identifiers,           -- Ada 2012 AI-246\n       No_Implementation_Pragmas,               -- Ada 2005 AI-257\n       No_Implementation_Restrictions,          -- GNAT\n       No_Implicit_Aliasing,                    -- GNAT\n@@ -310,12 +311,21 @@ package System.Rident is\n    -- Profile Definitions and Data --\n    ----------------------------------\n \n-   type Profile_Name is (No_Profile, Ravenscar, Restricted);\n+   --  Note: to add a profile, modify the following declarations appropriately,\n+   --  add Name_xxx to Snames, and add a branch to the conditions for pragmas\n+   --  Profile and Profile_Warnings in the body of Sem_Prag.\n+\n+   type Profile_Name is\n+     (No_Profile,\n+      No_Implementation_Extensions,\n+      Ravenscar,\n+      Restricted);\n    --  Names of recognized profiles. No_Profile is used to indicate that a\n    --  restriction came from pragma Restrictions[_Warning], as opposed to\n    --  pragma Profile[_Warning].\n \n-   subtype Profile_Name_Actual is Profile_Name range Ravenscar .. Restricted;\n+   subtype Profile_Name_Actual is Profile_Name\n+     range No_Implementation_Extensions .. Restricted;\n    --  Actual used profile names\n \n    type Profile_Data is record\n@@ -334,9 +344,24 @@ package System.Rident is\n \n    Profile_Info : constant array (Profile_Name_Actual) of Profile_Data :=\n \n+                    (No_Implementation_Extensions =>\n+                        --  Restrictions for Restricted profile\n+\n+                       (Set   =>\n+                          (No_Implementation_Attributes    => True,\n+                           No_Implementation_Identifiers   => True,\n+                           No_Implementation_Pragmas       => True,\n+                           No_Implementation_Restrictions  => True,\n+                           others                          => False),\n+\n+                        --  Value settings for Restricted profile (none\n+\n+                        Value =>\n+                          (others                          => 0)),\n+\n                      --  Restricted Profile\n \n-                    (Restricted =>\n+                     Restricted =>\n \n                         --  Restrictions for Restricted profile\n "}, {"sha": "0c204cd29cb092653b53523ad61c748a3605d0a9", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 59, "deletions": 4, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -1052,6 +1052,7 @@ package body Sem_Prag is\n                if Is_Compilation_Unit (Ent) then\n                   declare\n                      Decl : constant Node_Id := Unit_Declaration_Node (Ent);\n+\n                   begin\n                      --  Case of pragma placed immediately after spec\n \n@@ -4885,7 +4886,8 @@ package body Sem_Prag is\n \n                   --  For the pragma case, climb homonym chain. This is\n                   --  what implements allowing the pragma in the renaming\n-                  --  case, with the result applying to the ancestors.\n+                  --  case, with the result applying to the ancestors, and\n+                  --  also allows Inline to apply to all previous homonyms.\n \n                   if not From_Aspect_Specification (N) then\n                      while Present (Homonym (Subp))\n@@ -9120,6 +9122,42 @@ package body Sem_Prag is\n             end;\n          end Ident;\n \n+         ----------------------------\n+         -- Implementation_Defined --\n+         ----------------------------\n+\n+         --  pragma Implementation_Defined (local_NAME);\n+\n+         --  Marks previously declared entity as implementation defined. For\n+         --  an overloaded entity, applies to the most recent homonym.\n+\n+         --  pragma Implementation_Defined;\n+\n+         --  The form with no arguments appears anywhere within a scope, most\n+         --  typically a package spec, and indicates that all entities that are\n+         --  defined within the package spec are Implementation_Defined.\n+\n+         when Pragma_Implementation_Defined => Implementation_Defined : declare\n+            Ent : Entity_Id;\n+\n+         begin\n+            Check_No_Identifiers;\n+\n+            --  Form with no arguments\n+\n+            if Arg_Count = 0 then\n+               Set_Is_Implementation_Defined (Current_Scope);\n+\n+            --  Form with one argument\n+\n+            else\n+               Check_Arg_Count (1);\n+               Check_Arg_Is_Local_Name (Arg1);\n+               Ent := Entity (Get_Pragma_Arg (Arg1));\n+               Set_Is_Implementation_Defined (Ent);\n+            end if;\n+         end Implementation_Defined;\n+\n          -----------------\n          -- Implemented --\n          -----------------\n@@ -10092,8 +10130,8 @@ package body Sem_Prag is\n             --  private part of a package spec and apply to a completion.\n \n             elsif Ekind_In (Typ, E_Private_Type,\n-                                     E_Record_Type_With_Private,\n-                                     E_Limited_Private_Type)\n+                                 E_Record_Type_With_Private,\n+                                 E_Limited_Private_Type)\n             then\n                null;\n \n@@ -12160,12 +12198,21 @@ package body Sem_Prag is\n \n             declare\n                Argx : constant Node_Id := Get_Pragma_Arg (Arg1);\n+\n             begin\n                if Chars (Argx) = Name_Ravenscar then\n                   Set_Ravenscar_Profile (N);\n+\n                elsif Chars (Argx) = Name_Restricted then\n                   Set_Profile_Restrictions\n-                    (Restricted, N, Warn => Treat_Restrictions_As_Warnings);\n+                    (Restricted,\n+                     N, Warn => Treat_Restrictions_As_Warnings);\n+\n+               elsif Chars (Argx) = Name_No_Implementation_Extensions then\n+                  Set_Profile_Restrictions\n+                    (No_Implementation_Extensions,\n+                     N, Warn => Treat_Restrictions_As_Warnings);\n+\n                else\n                   Error_Pragma_Arg (\"& is not a valid profile\", Argx);\n                end if;\n@@ -12187,11 +12234,18 @@ package body Sem_Prag is\n \n             declare\n                Argx : constant Node_Id := Get_Pragma_Arg (Arg1);\n+\n             begin\n                if Chars (Argx) = Name_Ravenscar then\n                   Set_Profile_Restrictions (Ravenscar, N, Warn => True);\n+\n                elsif Chars (Argx) = Name_Restricted then\n                   Set_Profile_Restrictions (Restricted, N, Warn => True);\n+\n+               elsif Chars (Argx) = Name_No_Implementation_Extensions then\n+                  Set_Profile_Restrictions\n+                    (No_Implementation_Extensions, N, Warn => True);\n+\n                else\n                   Error_Pragma_Arg (\"& is not a valid profile\", Argx);\n                end if;\n@@ -14648,6 +14702,7 @@ package body Sem_Prag is\n       Pragma_Finalize_Storage_Only         =>  0,\n       Pragma_Float_Representation          =>  0,\n       Pragma_Ident                         => -1,\n+      Pragma_Implementation_Defined        => -1,\n       Pragma_Implemented                   => -1,\n       Pragma_Implicit_Packing              =>  0,\n       Pragma_Import                        => +2,"}, {"sha": "8bbffd9399797b9a147706c37e54eb85e288c730", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -12139,8 +12139,31 @@ package body Sem_Util is\n       Nod        : Node_Id;\n \n    begin\n+      --  Unconditionally set the entity\n+\n       Set_Entity (N, Val);\n \n+      --  Check for No_Implementation_Identifiers\n+\n+      if Restriction_Check_Required (No_Implementation_Identifiers) then\n+\n+         --  We have an implementation defined entity if it is marked as\n+         --  implementation defined, or is defined in a package marked as\n+         --  implementation defined. However, library packages themselves\n+         --  are excluded (we don't want to flag Interfaces itself, just\n+         --  the entities within it).\n+\n+         if (Is_Implementation_Defined (Val)\n+              and then not (Ekind_In (Val, E_Package, E_Generic_Package)\n+                              and then Is_Library_Level_Entity (Val)))\n+           or else Is_Implementation_Defined (Scope (Val))\n+         then\n+            Check_Restriction (No_Implementation_Identifiers, N);\n+         end if;\n+      end if;\n+\n+      --  Do the style check\n+\n       if Style_Check\n         and then not Suppress_Style_Checks (Val)\n         and then not In_Instance"}, {"sha": "fea05ef415b5893db3c8b8af759800a8dc40b374", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1771759c3df941c6bbf0fc991f4937ac64bf68/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=df1771759c3df941c6bbf0fc991f4937ac64bf68", "patch": "@@ -459,6 +459,7 @@ package Snames is\n    Name_External                       : constant Name_Id := N + $; -- GNAT\n    Name_Finalize_Storage_Only          : constant Name_Id := N + $; -- GNAT\n    Name_Ident                          : constant Name_Id := N + $; -- VMS\n+   Name_Implementation_Defined         : constant Name_Id := N + $; -- GNAT\n    Name_Implemented                    : constant Name_Id := N + $; -- Ada 12\n    Name_Import                         : constant Name_Id := N + $;\n    Name_Import_Exception               : constant Name_Id := N + $; -- VMS\n@@ -659,6 +660,7 @@ package Snames is\n    Name_No_Dependence                  : constant Name_Id := N + $;\n    Name_No_Dynamic_Attachment          : constant Name_Id := N + $;\n    Name_No_Dynamic_Interrupts          : constant Name_Id := N + $;\n+   Name_No_Implementation_Extensions   : constant Name_Id := N + $;\n    Name_No_Requeue                     : constant Name_Id := N + $;\n    Name_No_Requeue_Statements          : constant Name_Id := N + $;\n    Name_No_Task_Attributes             : constant Name_Id := N + $;\n@@ -1612,6 +1614,7 @@ package Snames is\n       Pragma_External,\n       Pragma_Finalize_Storage_Only,\n       Pragma_Ident,\n+      Pragma_Implementation_Defined,\n       Pragma_Implemented,\n       Pragma_Import,\n       Pragma_Import_Exception,"}]}