{"sha": "73a187c146fc166d75bbcacccfb8470b455fdfca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNhMTg3YzE0NmZjMTY2ZDc1YmJjYWNjY2ZiODQ3MGI0NTVmZGZjYQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-24T19:40:36Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-24T19:40:36Z"}, "message": "flow.c: (life_analysis): Mark HARD_FRAME_POINTER_REGNUM as live at the end of the function.\n\n* flow.c: (life_analysis): Mark HARD_FRAME_POINTER_REGNUM as live at\nthe end of the function.\n(insn_dead_p): Don't delete insns that set the hard frame pointer.\n(mark_set_1): Don't add death information about\nHARD_FRAME_POINTER_REGNUM.\n(mark_used_regs, case REG): Don't put HARD_FRAME_POINTER_REGNUM in\nregs_ever_live.  Don't mark it as needed either.\n* function.c: (instantiate_virtual_regs_1, case MEM): references to\nMEM via the hard frame pointer shouldn't be copied.\n\nFrom-SVN: r5455", "tree": {"sha": "b3981a3b28094f007a0573f25092fd7e0def7ca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3981a3b28094f007a0573f25092fd7e0def7ca4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73a187c146fc166d75bbcacccfb8470b455fdfca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a187c146fc166d75bbcacccfb8470b455fdfca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73a187c146fc166d75bbcacccfb8470b455fdfca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a187c146fc166d75bbcacccfb8470b455fdfca/comments", "author": null, "committer": null, "parents": [{"sha": "11c50c5efd0f85b2ae515d7b4fd6c3d6ae5d3ecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c50c5efd0f85b2ae515d7b4fd6c3d6ae5d3ecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11c50c5efd0f85b2ae515d7b4fd6c3d6ae5d3ecf"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "d230708244957f9ae5b80aefa1a2c7aec5cb77d6", "filename": "gcc/flow.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a187c146fc166d75bbcacccfb8470b455fdfca/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a187c146fc166d75bbcacccfb8470b455fdfca/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=73a187c146fc166d75bbcacccfb8470b455fdfca", "patch": "@@ -876,6 +876,17 @@ life_analysis (f, nregs)\n       basic_block_new_live_at_end[n_basic_blocks - 1]\n \t[FRAME_POINTER_REGNUM / REGSET_ELT_BITS]\n \t  |= (REGSET_ELT_TYPE) 1 << (FRAME_POINTER_REGNUM % REGSET_ELT_BITS);\n+#if FRAME_POINTER_REGNUM != HARD_FRAME_POINTER_REGNUM\n+      /* If they are different, also mark the hard frame pointer as live */\n+      basic_block_live_at_end[n_basic_blocks - 1]\n+\t[HARD_FRAME_POINTER_REGNUM / REGSET_ELT_BITS]\n+\t  |= (REGSET_ELT_TYPE) 1 << (HARD_FRAME_POINTER_REGNUM\n+\t\t\t\t     % REGSET_ELT_BITS);\n+      basic_block_new_live_at_end[n_basic_blocks - 1]\n+\t[HARD_FRAME_POINTER_REGNUM / REGSET_ELT_BITS]\n+\t  |= (REGSET_ELT_TYPE) 1 << (HARD_FRAME_POINTER_REGNUM\n+\t\t\t\t     % REGSET_ELT_BITS);\n+#endif      \n       }\n \n   /* Mark all global registers as being live at the end of the function\n@@ -1549,6 +1560,9 @@ insn_dead_p (x, needed, call_ok)\n \t  if ((regno < FIRST_PSEUDO_REGISTER && global_regs[regno])\n \t      /* Make sure insns to set frame pointer aren't deleted.  */\n \t      || regno == FRAME_POINTER_REGNUM\n+#if FRAME_POINTER_REGNUM != HARD_FRAME_POINTER_REGNUM\n+\t      || regno == HARD_FRAME_POINTER_REGNUM\n+#endif\n #if FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n \t      /* Make sure insns to set arg pointer are never deleted\n \t\t (if the arg pointer isn't fixed, there will be a USE for\n@@ -1776,6 +1790,9 @@ mark_set_1 (needed, dead, x, insn, significant)\n \n   if (GET_CODE (reg) == REG\n       && (regno = REGNO (reg), regno != FRAME_POINTER_REGNUM)\n+#if FRAME_POINTER_REGNUM != HARD_FRAME_POINTER_REGNUM\n+      && regno != HARD_FRAME_POINTER_REGNUM\n+#endif\n #if FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n       && ! (regno == ARG_POINTER_REGNUM && fixed_regs[regno])\n #endif\n@@ -2176,6 +2193,9 @@ mark_used_regs (needed, live, x, final, insn)\n \t    /* For stack ptr or fixed arg pointer,\n \t       nothing below can be necessary, so waste no more time.  */\n \t    if (regno == STACK_POINTER_REGNUM\n+#if FRAME_POINTER_REGNUM != HARD_FRAME_POINTER_REGNUM\n+\t\t|| regno == HARD_FRAME_POINTER_REGNUM\n+#endif\n #if FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n \t\t|| (regno == ARG_POINTER_REGNUM && fixed_regs[regno])\n #endif\n@@ -2340,6 +2360,9 @@ mark_used_regs (needed, live, x, final, insn)\n \n \tif (GET_CODE (testreg) == REG\n \t    && (regno = REGNO (testreg), regno != FRAME_POINTER_REGNUM)\n+#if FRAME_POINTER_REGNUM != HARD_FRAME_POINTER_REGNUM\n+\t    && regno != HARD_FRAME_POINTER_REGNUM\n+#endif\n #if FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n \t    && ! (regno == ARG_POINTER_REGNUM && fixed_regs[regno])\n #endif"}]}