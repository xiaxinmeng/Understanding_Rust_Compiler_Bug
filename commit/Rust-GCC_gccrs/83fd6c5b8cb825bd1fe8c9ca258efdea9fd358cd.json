{"sha": "83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNmZDZjNWI4Y2I4MjViZDFmZThjOWNhMjU4ZWZkZWE5ZmQzNThjZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-10-15T22:08:46Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-10-15T22:08:46Z"}, "message": "intrinsic.texi (OpenMP Modules): Update to OpenMPv4.\n\ngcc/fortran/\n2013-10-16  Tobias Burnus  <burnus@net-b.de>\n\n        * intrinsic.texi (OpenMP Modules): Update to OpenMPv4.\n        Document omp_proc_bind_kind.\n\nlibgomp/\n2013-10-16  Tobias Burnus  <burnus@net-b.de>\n\n        * libgomp.texi: (Runtime Library Routines): Update references\n        * for\n        OpenMP 4.0. Add omp_get_cancellation, omp_get_default_device,\n        omp_get_num_devices, omp_get_num_teams, omp_get_proc_bind,\n        omp_get_team_num, omp_is_initial_device, omp_set_default_device.\n        (Environment Variables): Update references for OpenMP 4.0. Add\n        OMP_CANCELLATION, OMP_DEFAULT_DEVICE, OMP_PLACES.\n        Move OMP_DISPLAY_ENV and OMP_PROC_BIND up to be in alphabetical\n        order.\n\nFrom-SVN: r203635", "tree": {"sha": "f6c17207d711b47ac83a387764212c8707a2408a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6c17207d711b47ac83a387764212c8707a2408a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf7b5747bb33b0333786dfcc015e0f23136e5f18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7b5747bb33b0333786dfcc015e0f23136e5f18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf7b5747bb33b0333786dfcc015e0f23136e5f18"}], "stats": {"total": 670, "additions": 499, "deletions": 171}, "files": [{"sha": "ee6b8ed770adcb2e80aeed006947cc331f93be46", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd", "patch": "@@ -1,3 +1,8 @@\n+2013-10-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* intrinsic.texi (OpenMP Modules): Update to OpenMPv4.\n+\tDocument omp_proc_bind_kind.\n+\n 2013-10-15  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/58652"}, {"sha": "18bd4d241b26e998cf65fabef495f549ecb4950c", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd", "patch": "@@ -13177,7 +13177,7 @@ Both are equivalent to the value @code{NULL} in C.\n @section OpenMP Modules @code{OMP_LIB} and @code{OMP_LIB_KINDS}\n @table @asis\n @item @emph{Standard}:\n-OpenMP Application Program Interface v3.1\n+OpenMP Application Program Interface v4.0\n @end table\n \n \n@@ -13190,24 +13190,26 @@ the named constants defined in the modules are listed\n below.\n \n For details refer to the actual\n-@uref{http://www.openmp.org/mp-documents/spec31.pdf,\n-OpenMP Application Program Interface v3.1}.\n+@uref{http://www.openmp.org/mp-documents/OpenMP4.0.0.pdf,\n+OpenMP Application Program Interface v4.0}.\n \n @code{OMP_LIB_KINDS} provides the following scalar default-integer\n named constants:\n \n @table @asis\n @item @code{omp_lock_kind}\n @item @code{omp_nest_lock_kind}\n+@item @code{omp_proc_bind_kind}\n @item @code{omp_sched_kind}\n @end table\n \n @code{OMP_LIB} provides the scalar default-integer\n named constant @code{openmp_version} with a value of the form\n @var{yyyymm}, where @code{yyyy} is the year and @var{mm} the month\n-of the OpenMP version; for OpenMP v3.1 the value is @code{201107}.\n+of the OpenMP version; for OpenMP v3.1 the value is @code{201107}\n+and for OpenMP v4.0 the value is @code{201307}.\n \n-And the following scalar integer named constants of the\n+The following scalar integer named constants of the\n kind @code{omp_sched_kind}:\n \n @table @asis\n@@ -13216,3 +13218,14 @@ kind @code{omp_sched_kind}:\n @item @code{omp_sched_guided}\n @item @code{omp_sched_auto}\n @end table\n+\n+And the following scalar integer named constants of the \n+kind @code{omp_proc_bind_kind}:\n+\n+@table @asis\n+@item @code{omp_proc_bind_false}\n+@item @code{omp_proc_bind_true}\n+@item @code{omp_proc_bind_master}\n+@item @code{omp_proc_bind_close}\n+@item @code{omp_proc_bind_spread}\n+@end table"}, {"sha": "e04c56a45a2c06861e9f2e9df6bca8c2c2510d5c", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd", "patch": "@@ -1,3 +1,14 @@\n+2013-10-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* libgomp.texi: (Runtime Library Routines): Update references for\n+\tOpenMP 4.0. Add omp_get_cancellation, omp_get_default_device,\n+\tomp_get_num_devices, omp_get_num_teams, omp_get_proc_bind,\n+\tomp_get_team_num, omp_is_initial_device, omp_set_default_device.\n+\t(Environment Variables): Update references for OpenMP 4.0. Add\n+\tOMP_CANCELLATION, OMP_DEFAULT_DEVICE, OMP_PLACES.\n+\tMove OMP_DISPLAY_ENV and OMP_PROC_BIND up to be in alphabetical\n+\torder.\n+\n 2013-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* env.c (parse_bind_var): Initialize value to avoid"}, {"sha": "ba430fc9fd754f7df1bbd1da0229eb00fd660e60", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 465, "deletions": 166, "changes": 631, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=83fd6c5b8cb825bd1fe8c9ca258efdea9fd358cd", "patch": "@@ -106,17 +106,17 @@ for multi-platform shared-memory parallel programming in C/C++ and Fortran.\n @chapter Enabling OpenMP\n \n To activate the OpenMP extensions for C/C++ and Fortran, the compile-time \n-flag @command{-fopenmp} must be specified. This enables the OpenMP directive\n+flag @command{-fopenmp} must be specified.  This enables the OpenMP directive\n @code{#pragma omp} in C/C++ and @code{!$omp} directives in free form, \n @code{c$omp}, @code{*$omp} and @code{!$omp} directives in fixed form, \n @code{!$} conditional compilation sentinels in free form and @code{c$},\n-@code{*$} and @code{!$} sentinels in fixed form, for Fortran. The flag also\n+@code{*$} and @code{!$} sentinels in fixed form, for Fortran.  The flag also\n arranges for automatic linking of the OpenMP runtime library \n (@ref{Runtime Library Routines}).\n \n A complete description of all OpenMP directives accepted may be found in \n the @uref{http://www.openmp.org, OpenMP Application Program Interface} manual,\n-version 3.1.\n+version 4.0.\n \n \n @c ---------------------------------------------------------------------\n@@ -126,30 +126,37 @@ version 3.1.\n @node Runtime Library Routines\n @chapter Runtime Library Routines\n \n-The runtime routines described here are defined by section 3 of the OpenMP \n-specifications in version 3.1. The routines are structured in following\n+The runtime routines described here are defined by Section 3 of the OpenMP\n+specification in version 4.0.  The routines are structured in following\n three parts:\n \n-Control threads, processors and the parallel environment.\n-\n-They have C linkage, and don't throw exceptions.\n+Control threads, processors and the parallel environment.  They have C\n+linkage, and do not throw exceptions.\n \n @menu\n * omp_get_active_level::        Number of active parallel regions\n * omp_get_ancestor_thread_num:: Ancestor thread ID\n+* omp_get_cancellation::        Whether cancellation support is enabled\n+* omp_get_default_device::      Get the default device for target regions\n * omp_get_dynamic::             Dynamic teams setting\n * omp_get_level::               Number of parallel regions\n * omp_get_max_active_levels::   Maximum number of active regions\n * omp_get_max_threads::         Maximum number of threads of parallel region\n * omp_get_nested::              Nested parallel regions\n+* omp_get_num_devices::         Number of target devices\n * omp_get_num_procs::           Number of processors online\n+* omp_get_num_teams::           Number of teams\n * omp_get_num_threads::         Size of the active team\n+* omp_get_proc_bind::           Whether theads may be moved between CPUs\n * omp_get_schedule::            Obtain the runtime scheduling method\n+* omp_get_team_num::            Get team number\n * omp_get_team_size::           Number of threads in a team\n * omp_get_thread_limit::        Maximum number of threads\n * omp_get_thread_num::          Current thread ID\n * omp_in_parallel::             Whether a parallel region is active\n * omp_in_final::                Whether in final or included task region\n+* omp_is_initial_device::       Whether executing on the host device\n+* omp_set_default_device::      Set the default device for target regions\n * omp_set_dynamic::             Enable/disable dynamic teams\n * omp_set_max_active_levels::   Limits the number of active parallel regions\n * omp_set_nested::              Enable/disable nested parallel regions\n@@ -202,7 +209,7 @@ which enclose the calling call.\n @ref{omp_get_level}, @ref{omp_get_max_active_levels}, @ref{omp_set_max_active_levels}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.19.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.20.\n @end table\n \n \n@@ -212,7 +219,7 @@ which enclose the calling call.\n @table @asis\n @item @emph{Description}:\n This function returns the thread identification number for the given\n-nesting level of the current thread. For values of @var{level} outside\n+nesting level of the current thread.  For values of @var{level} outside\n zero to @code{omp_get_level} -1 is returned; if @var{level} is\n @code{omp_get_level} the result is identical to @code{omp_get_thread_num}.\n \n@@ -231,7 +238,60 @@ zero to @code{omp_get_level} -1 is returned; if @var{level} is\n @ref{omp_get_level}, @ref{omp_get_thread_num}, @ref{omp_get_team_size}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.17.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.18.\n+@end table\n+\n+\n+\n+@node omp_get_cancellation\n+@section @code{omp_get_cancellation} -- Whether cancellation support is enabled\n+@table @asis\n+@item @emph{Description}:\n+This function returns @code{true} if cancellation is activated, @code{false}\n+otherwise.  Here, @code{true} and @code{false} represent their language-specific\n+counterparts.  Unless @env{OMP_CANCELLATION} is set true, cancellations are\n+deactivated.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_cancellation(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{logical function omp_get_cancellation()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{OMP_CANCELLATION}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.9.\n+@end table\n+\n+\n+\n+@node omp_get_default_device\n+@section @code{omp_get_default_device} -- Get the default device for target regions\n+@table @asis\n+@item @emph{Description}:\n+Get the default device for target regions without device clause.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_default_device(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer function omp_get_default_device()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{OMP_DEFAULT_DEVICE}, @ref{omp_set_default_device}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.24.\n @end table\n \n \n@@ -245,8 +305,8 @@ Here, @code{true} and @code{false} represent their language-specific\n counterparts.\n \n The dynamic team setting may be initialized at startup by the \n-@code{OMP_DYNAMIC} environment variable or at runtime using \n-@code{omp_set_dynamic}. If undefined, dynamic adjustment is \n+@env{OMP_DYNAMIC} environment variable or at runtime using\n+@code{omp_set_dynamic}.  If undefined, dynamic adjustment is\n disabled by default.\n \n @item @emph{C/C++}:\n@@ -263,7 +323,7 @@ disabled by default.\n @ref{omp_set_dynamic}, @ref{OMP_DYNAMIC}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.8.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.8.\n @end table\n \n \n@@ -289,7 +349,7 @@ which enclose the calling call.\n @ref{omp_get_active_level}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.16.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.17.\n @end table\n \n \n@@ -314,7 +374,7 @@ This function obtains the maximum allowed number of nested, active parallel regi\n @ref{omp_set_max_active_levels}, @ref{omp_get_active_level}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.15.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.16.\n @end table\n \n \n@@ -340,7 +400,7 @@ that does not use the clause @code{num_threads}.\n @ref{omp_set_num_threads}, @ref{omp_set_dynamic}, @ref{omp_get_thread_limit}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.3.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.3.\n @end table\n \n \n@@ -350,12 +410,12 @@ that does not use the clause @code{num_threads}.\n @table @asis\n @item @emph{Description}:\n This function returns @code{true} if nested parallel regions are\n-enabled, @code{false} otherwise. Here, @code{true} and @code{false} \n+enabled, @code{false} otherwise.  Here, @code{true} and @code{false}\n represent their language-specific counterparts.\n \n Nested parallel regions may be initialized at startup by the \n-@code{OMP_NESTED} environment variable or at runtime using \n-@code{omp_set_nested}. If undefined, nested parallel regions are\n+@env{OMP_NESTED} environment variable or at runtime using\n+@code{omp_set_nested}.  If undefined, nested parallel regions are\n disabled by default.\n \n @item @emph{C/C++}:\n@@ -372,7 +432,29 @@ disabled by default.\n @ref{omp_set_nested}, @ref{OMP_NESTED}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.10.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.11.\n+@end table\n+\n+\n+\n+@node omp_get_num_devices\n+@section @code{omp_get_num_devices} -- Number of target devices\n+@table @asis\n+@item @emph{Description}:\n+Returns the number of target devices.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_num_devices(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer function omp_get_num_devices()}\n+@end multitable\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.25.\n @end table\n \n \n@@ -381,7 +463,7 @@ disabled by default.\n @section @code{omp_get_num_procs} -- Number of processors online\n @table @asis\n @item @emph{Description}:\n-Returns the number of processors online.\n+Returns the number of processors online on that device.\n \n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n@@ -394,7 +476,29 @@ Returns the number of processors online.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.5.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.5.\n+@end table\n+\n+\n+\n+@node omp_get_num_teams\n+@section @code{omp_get_num_teams} -- Number of teams\n+@table @asis\n+@item @emph{Description}:\n+Returns the number of teams in the current team region.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_num_teams(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer function omp_get_num_teams()}\n+@end multitable\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.26.\n @end table\n \n \n@@ -403,14 +507,14 @@ Returns the number of processors online.\n @section @code{omp_get_num_threads} -- Size of the active team\n @table @asis\n @item @emph{Description}:\n-Returns the number of threads in the current team. In a sequential section of \n+Returns the number of threads in the current team.  In a sequential section of\n the program @code{omp_get_num_threads} returns 1.\n \n The default team size may be initialized at startup by the \n-@code{OMP_NUM_THREADS} environment variable. At runtime, the size \n+@env{OMP_NUM_THREADS} environment variable.  At runtime, the size\n of the current team may be set either by the @code{NUM_THREADS}\n-clause or by @code{omp_set_num_threads}. If none of the above were \n-used to define a specific value and @code{OMP_DYNAMIC} is disabled,\n+clause or by @code{omp_set_num_threads}.  If none of the above were\n+used to define a specific value and @env{OMP_DYNAMIC} is disabled,\n one thread per CPU online is used.\n \n @item @emph{C/C++}:\n@@ -427,7 +531,35 @@ one thread per CPU online is used.\n @ref{omp_get_max_threads}, @ref{omp_set_num_threads}, @ref{OMP_NUM_THREADS}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.2.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.2.\n+@end table\n+\n+\n+\n+@node omp_get_proc_bind\n+@section @code{omp_get_proc_bind} -- Whether theads may be moved between CPUs\n+@table @asis\n+@item @emph{Description}:\n+This functions returns the currently active thread affinity policy, which is\n+set via @env{OMP_PROC_BIND}.  Possible values are @code{omp_proc_bind_false},\n+@code{omp_proc_bind_true}, @code{omp_proc_bind_master},\n+@code{omp_proc_bind_close} and @code{omp_proc_bind_spread}.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{omp_proc_bind_t omp_get_proc_bind(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer(kind=omp_proc_bind_kind) function omp_get_proc_bind()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{OMP_PROC_BIND}, @ref{OMP_PLACES}, @ref{GOMP_CPU_AFFINITY},\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.22.\n @end table\n \n \n@@ -436,19 +568,19 @@ one thread per CPU online is used.\n @section @code{omp_get_schedule} -- Obtain the runtime scheduling method\n @table @asis\n @item @emph{Description}:\n-Obtain the runtime scheduling method. The @var{kind} argument will be\n+Obtain the runtime scheduling method.  The @var{kind} argument will be\n set to the value @code{omp_sched_static}, @code{omp_sched_dynamic},\n-@code{omp_sched_guided} or @code{omp_sched_auto}. The second argument,\n+@code{omp_sched_guided} or @code{omp_sched_auto}.  The second argument,\n @var{modifier}, is set to the chunk size.\n \n @item @emph{C/C++}\n @multitable @columnfractions .20 .80\n-@item @emph{Prototype}: @tab @code{void omp_schedule(omp_sched_t *kind, int *modifier);}\n+@item @emph{Prototype}: @tab @code{void omp_get_schedule(omp_sched_t *kind, int *modifier);}\n @end multitable\n \n @item @emph{Fortran}:\n @multitable @columnfractions .20 .80\n-@item @emph{Interface}: @tab @code{subroutine omp_schedule(kind, modifier)}\n+@item @emph{Interface}: @tab @code{subroutine omp_get_schedule(kind, modifier)}\n @item                   @tab @code{integer(kind=omp_sched_kind) kind}\n @item                   @tab @code{integer modifier}\n @end multitable\n@@ -457,7 +589,29 @@ set to the value @code{omp_sched_static}, @code{omp_sched_dynamic},\n @ref{omp_set_schedule}, @ref{OMP_SCHEDULE}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.12.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.13.\n+@end table\n+\n+\n+\n+@node omp_get_team_num\n+@section @code{omp_get_team_num} -- Get team number\n+@table @asis\n+@item @emph{Description}:\n+Returns the team number of the calling thread.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_team_num(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer function omp_get_team_num()}\n+@end multitable\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.27.\n @end table\n \n \n@@ -467,7 +621,7 @@ set to the value @code{omp_sched_static}, @code{omp_sched_dynamic},\n @table @asis\n @item @emph{Description}:\n This function returns the number of threads in a thread team to which\n-either the current thread or its ancestor belongs. For values of @var{level}\n+either the current thread or its ancestor belongs.  For values of @var{level}\n outside zero to @code{omp_get_level}, -1 is returned; if @var{level} is zero,\n 1 is returned, and for @code{omp_get_level}, the result is identical\n to @code{omp_get_num_threads}.\n@@ -487,7 +641,7 @@ to @code{omp_get_num_threads}.\n @ref{omp_get_num_threads}, @ref{omp_get_level}, @ref{omp_get_ancestor_thread_num}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.18.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.19.\n @end table\n \n \n@@ -512,19 +666,19 @@ Return the maximum number of threads of the program.\n @ref{omp_get_max_threads}, @ref{OMP_THREAD_LIMIT}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.13.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.14.\n @end table\n \n \n \n-@node omp_get_thread_num \n+@node omp_get_thread_num\n @section @code{omp_get_thread_num} -- Current thread ID\n @table @asis\n @item @emph{Description}:\n Returns a unique thread identification number within the current team.\n In a sequential parts of the program, @code{omp_get_thread_num}\n-always returns 0. In parallel regions the return value varies\n-from 0 to @code{omp_get_num_threads}-1 inclusive. The return \n+always returns 0.  In parallel regions the return value varies\n+from 0 to @code{omp_get_num_threads}-1 inclusive.  The return\n value of the master thread of a team is always 0.\n \n @item @emph{C/C++}:\n@@ -541,7 +695,7 @@ value of the master thread of a team is always 0.\n @ref{omp_get_num_threads}, @ref{omp_get_ancestor_thread_num}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.4.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.4.\n @end table\n \n \n@@ -550,8 +704,8 @@ value of the master thread of a team is always 0.\n @section @code{omp_in_parallel} -- Whether a parallel region is active\n @table @asis\n @item @emph{Description}:\n-This function returns @code{true} if currently running in parallel, \n-@code{false} otherwise. Here, @code{true} and @code{false} represent \n+This function returns @code{true} if currently running in parallel,\n+@code{false} otherwise.  Here, @code{true} and @code{false} represent\n their language-specific counterparts.\n \n @item @emph{C/C++}:\n@@ -565,7 +719,7 @@ their language-specific counterparts.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.6.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.6.\n @end table\n \n \n@@ -574,7 +728,7 @@ their language-specific counterparts.\n @table @asis\n @item @emph{Description}:\n This function returns @code{true} if currently running in a final\n-or included task region, @code{false} otherwise. Here, @code{true}\n+or included task region, @code{false} otherwise.  Here, @code{true}\n and @code{false} represent their language-specific counterparts.\n \n @item @emph{C/C++}:\n@@ -588,16 +742,68 @@ and @code{false} represent their language-specific counterparts.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.20.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.21.\n @end table\n \n \n+\n+@node omp_is_initial_device\n+@section @code{omp_is_initial_device} -- Whether executing on the host device\n+@table @asis\n+@item @emph{Description}:\n+This function returns @code{true} if currently running on the host device,\n+@code{false} otherwise.  Here, @code{true} and @code{false} represent\n+their language-specific counterparts.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_is_initial_device(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{logical function omp_is_initial_device()}\n+@end multitable\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.28.\n+@end table\n+\n+\n+\n+@node omp_set_default_device\n+@section @code{omp_set_default_device} -- Set the default device for target regions\n+@table @asis\n+@item @emph{Description}:\n+Set the default device for target regions without device clause.  The argument\n+shall be a nonnegative device number.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{void omp_set_default_device(int device_num);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{subroutine omp_set_default_device(device_num)}\n+@item                   @tab @code{integer device_num}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{OMP_DEFAULT_DEVICE}, @ref{omp_get_default_device}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.23.\n+@end table\n+\n+\n+\n @node omp_set_dynamic\n @section @code{omp_set_dynamic} -- Enable/disable dynamic teams\n @table @asis\n @item @emph{Description}:\n Enable or disable the dynamic adjustment of the number of threads \n-within a team. The function takes the language-specific equivalent\n+within a team.  The function takes the language-specific equivalent\n of @code{true} and @code{false}, where @code{true} enables dynamic \n adjustment of team sizes and @code{false} disables it.\n \n@@ -616,7 +822,7 @@ adjustment of team sizes and @code{false} disables it.\n @ref{OMP_DYNAMIC}, @ref{omp_get_dynamic}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.7.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.7.\n @end table\n \n \n@@ -643,7 +849,7 @@ parallel regions.\n @ref{omp_get_max_active_levels}, @ref{omp_get_active_level}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.14.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.15.\n @end table\n \n \n@@ -653,7 +859,7 @@ parallel regions.\n @table @asis\n @item @emph{Description}:\n Enable or disable nested parallel regions, i.e., whether team members\n-are allowed to create new teams. The function takes the language-specific \n+are allowed to create new teams.  The function takes the language-specific\n equivalent of @code{true} and @code{false}, where @code{true} enables \n dynamic adjustment of team sizes and @code{false} disables it.\n \n@@ -672,7 +878,7 @@ dynamic adjustment of team sizes and @code{false} disables it.\n @ref{OMP_NESTED}, @ref{omp_get_nested}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.9.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.10.\n @end table\n \n \n@@ -682,8 +888,8 @@ dynamic adjustment of team sizes and @code{false} disables it.\n @table @asis\n @item @emph{Description}:\n Specifies the number of threads used by default in subsequent parallel \n-sections, if those do not specify a @code{num_threads} clause. The \n-argument of @code{omp_set_num_threads} shall be a positive integer. \n+sections, if those do not specify a @code{num_threads} clause.  The\n+argument of @code{omp_set_num_threads} shall be a positive integer.\n \n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n@@ -700,7 +906,7 @@ argument of @code{omp_set_num_threads} shall be a positive integer.\n @ref{OMP_NUM_THREADS}, @ref{omp_get_num_threads}, @ref{omp_get_max_threads}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.1.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.1.\n @end table\n \n \n@@ -709,16 +915,16 @@ argument of @code{omp_set_num_threads} shall be a positive integer.\n @section @code{omp_set_schedule} -- Set the runtime scheduling method\n @table @asis\n @item @emph{Description}:\n-Sets the runtime scheduling method. The @var{kind} argument can have the\n+Sets the runtime scheduling method.  The @var{kind} argument can have the\n value @code{omp_sched_static}, @code{omp_sched_dynamic},\n-@code{omp_sched_guided} or @code{omp_sched_auto}. Except for\n+@code{omp_sched_guided} or @code{omp_sched_auto}.  Except for\n @code{omp_sched_auto}, the chunk size is set to the value of\n @var{modifier} if positive, or to the default value if zero or negative.\n For @code{omp_sched_auto} the @var{modifier} argument is ignored.\n \n @item @emph{C/C++}\n @multitable @columnfractions .20 .80\n-@item @emph{Prototype}: @tab @code{void omp_set_schedule(omp_sched_t *kind, int *modifier);}\n+@item @emph{Prototype}: @tab @code{void omp_set_schedule(omp_sched_t kind, int modifier);}\n @end multitable\n \n @item @emph{Fortran}:\n@@ -733,7 +939,7 @@ For @code{omp_sched_auto} the @var{modifier} argument is ignored.\n @ref{OMP_SCHEDULE}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.2.11.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.2.12.\n @end table\n \n \n@@ -742,7 +948,7 @@ For @code{omp_sched_auto} the @var{modifier} argument is ignored.\n @section @code{omp_init_lock} -- Initialize simple lock\n @table @asis\n @item @emph{Description}:\n-Initialize a simple lock.  After initialization, the lock is in \n+Initialize a simple lock.  After initialization, the lock is in\n an unlocked state.\n \n @item @emph{C/C++}:\n@@ -760,7 +966,7 @@ an unlocked state.\n @ref{omp_destroy_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.1.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.1.\n @end table\n \n \n@@ -770,8 +976,8 @@ an unlocked state.\n @table @asis\n @item @emph{Description}:\n Before setting a simple lock, the lock variable must be initialized by \n-@code{omp_init_lock}. The calling thread is blocked until the lock \n-is available. If the lock is already held by the current thread, \n+@code{omp_init_lock}.  The calling thread is blocked until the lock \n+is available.  If the lock is already held by the current thread, \n a deadlock occurs.\n \n @item @emph{C/C++}:\n@@ -789,7 +995,7 @@ a deadlock occurs.\n @ref{omp_init_lock}, @ref{omp_test_lock}, @ref{omp_unset_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.3.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.3.\n @end table\n \n \n@@ -799,9 +1005,9 @@ a deadlock occurs.\n @table @asis\n @item @emph{Description}:\n Before setting a simple lock, the lock variable must be initialized by \n-@code{omp_init_lock}. Contrary to @code{omp_set_lock}, @code{omp_test_lock} \n-does not block if the lock is not available. This function returns \n-@code{true} upon success, @code{false} otherwise. Here, @code{true} and \n+@code{omp_init_lock}.  Contrary to @code{omp_set_lock}, @code{omp_test_lock} \n+does not block if the lock is not available.  This function returns\n+@code{true} upon success, @code{false} otherwise.  Here, @code{true} and\n @code{false} represent their language-specific counterparts.\n \n @item @emph{C/C++}:\n@@ -819,7 +1025,7 @@ does not block if the lock is not available. This function returns\n @ref{omp_init_lock}, @ref{omp_set_lock}, @ref{omp_set_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.5.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.5.\n @end table\n \n \n@@ -829,9 +1035,9 @@ does not block if the lock is not available. This function returns\n @table @asis\n @item @emph{Description}:\n A simple lock about to be unset must have been locked by @code{omp_set_lock}\n-or @code{omp_test_lock} before. In addition, the lock must be held by the \n-thread calling @code{omp_unset_lock}. Then, the lock becomes unlocked. If one \n-or more threads attempted to set the lock before, one of them is chosen to, \n+or @code{omp_test_lock} before.  In addition, the lock must be held by the\n+thread calling @code{omp_unset_lock}.  Then, the lock becomes unlocked.  If one\n+or more threads attempted to set the lock before, one of them is chosen to,\n again, set the lock to itself.\n \n @item @emph{C/C++}:\n@@ -849,7 +1055,7 @@ again, set the lock to itself.\n @ref{omp_set_lock}, @ref{omp_test_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.4.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.4.\n @end table\n \n \n@@ -858,7 +1064,7 @@ again, set the lock to itself.\n @section @code{omp_destroy_lock} -- Destroy simple lock\n @table @asis\n @item @emph{Description}:\n-Destroy a simple lock. In order to be destroyed, a simple lock must be \n+Destroy a simple lock.  In order to be destroyed, a simple lock must be\n in the unlocked state. \n \n @item @emph{C/C++}:\n@@ -876,7 +1082,7 @@ in the unlocked state.\n @ref{omp_init_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.2.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.2.\n @end table\n \n \n@@ -885,7 +1091,7 @@ in the unlocked state.\n @section @code{omp_init_nest_lock} -- Initialize nested lock\n @table @asis\n @item @emph{Description}:\n-Initialize a nested lock.  After initialization, the lock is in \n+Initialize a nested lock.  After initialization, the lock is in\n an unlocked state and the nesting count is set to zero.\n \n @item @emph{C/C++}:\n@@ -903,7 +1109,7 @@ an unlocked state and the nesting count is set to zero.\n @ref{omp_destroy_nest_lock}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.1.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.1.\n @end table\n \n \n@@ -912,8 +1118,8 @@ an unlocked state and the nesting count is set to zero.\n @table @asis\n @item @emph{Description}:\n Before setting a nested lock, the lock variable must be initialized by \n-@code{omp_init_nest_lock}. The calling thread is blocked until the lock \n-is available. If the lock is already held by the current thread, the \n+@code{omp_init_nest_lock}.  The calling thread is blocked until the lock\n+is available.  If the lock is already held by the current thread, the\n nesting count for the lock is incremented.\n \n @item @emph{C/C++}:\n@@ -931,7 +1137,7 @@ nesting count for the lock is incremented.\n @ref{omp_init_nest_lock}, @ref{omp_unset_nest_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.3.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.3.\n @end table\n \n \n@@ -941,10 +1147,10 @@ nesting count for the lock is incremented.\n @table @asis\n @item @emph{Description}:\n Before setting a nested lock, the lock variable must be initialized by \n-@code{omp_init_nest_lock}. Contrary to @code{omp_set_nest_lock}, \n+@code{omp_init_nest_lock}.  Contrary to @code{omp_set_nest_lock},\n @code{omp_test_nest_lock} does not block if the lock is not available. \n If the lock is already held by the current thread, the new nesting count \n-is returned. Otherwise, the return value equals zero.\n+is returned.  Otherwise, the return value equals zero.\n \n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n@@ -962,7 +1168,7 @@ is returned. Otherwise, the return value equals zero.\n @ref{omp_init_lock}, @ref{omp_set_lock}, @ref{omp_set_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.5.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.5.\n @end table\n \n \n@@ -972,9 +1178,9 @@ is returned. Otherwise, the return value equals zero.\n @table @asis\n @item @emph{Description}:\n A nested lock about to be unset must have been locked by @code{omp_set_nested_lock}\n-or @code{omp_test_nested_lock} before. In addition, the lock must be held by the \n-thread calling @code{omp_unset_nested_lock}. If the nesting count drops to zero, the \n-lock becomes unlocked. If one ore more threads attempted to set the lock before, \n+or @code{omp_test_nested_lock} before.  In addition, the lock must be held by the\n+thread calling @code{omp_unset_nested_lock}.  If the nesting count drops to zero, the\n+lock becomes unlocked.  If one ore more threads attempted to set the lock before,\n one of them is chosen to, again, set the lock to itself.\n \n @item @emph{C/C++}:\n@@ -992,7 +1198,7 @@ one of them is chosen to, again, set the lock to itself.\n @ref{omp_set_nest_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.4.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.4.\n @end table\n \n \n@@ -1001,7 +1207,7 @@ one of them is chosen to, again, set the lock to itself.\n @section @code{omp_destroy_nest_lock} -- Destroy nested lock\n @table @asis\n @item @emph{Description}:\n-Destroy a nested lock. In order to be destroyed, a nested lock must be \n+Destroy a nested lock.  In order to be destroyed, a nested lock must be\n in the unlocked state and its nesting count must equal zero.\n \n @item @emph{C/C++}:\n@@ -1019,7 +1225,7 @@ in the unlocked state and its nesting count must equal zero.\n @ref{omp_init_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.3.2.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.3.2.\n @end table\n \n \n@@ -1045,7 +1251,7 @@ successive clock ticks.\n @ref{omp_get_wtime}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.4.2.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.4.2.\n @end table\n \n \n@@ -1054,7 +1260,7 @@ successive clock ticks.\n @section @code{omp_get_wtime} -- Elapsed wall clock time\n @table @asis\n @item @emph{Description}:\n-Elapsed wall clock time in seconds. The time is measured per thread, no \n+Elapsed wall clock time in seconds.  The time is measured per thread, no\n guarantee can be made that two distinct threads measure the same time.\n Time is measured from some \"time in the past\", which is an arbitrary time\n guaranteed not to change during the execution of the program.\n@@ -1073,7 +1279,7 @@ guaranteed not to change during the execution of the program.\n @ref{omp_get_wtick}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v3.1}, section 3.4.1.\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 3.4.1.\n @end table\n \n \n@@ -1090,37 +1296,96 @@ section 4 of the OpenMP specification in version 4.0, while those\n beginning with @env{GOMP_} are GNU extensions.\n \n @menu\n+* OMP_CANCELLATION::      Set whether cancellation is activated\n+* OMP_DISPLAY_ENV::       Show OpenMP version and environment variables\n+* OMP_DEFAULT_DEVICE::    Set the device used in target regions\n * OMP_DYNAMIC::           Dynamic adjustment of threads\n * OMP_MAX_ACTIVE_LEVELS:: Set the maximum number of nested parallel regions\n * OMP_NESTED::            Nested parallel regions\n * OMP_NUM_THREADS::       Specifies the number of threads to use\n+* OMP_PROC_BIND::         Whether theads may be moved between CPUs\n+* OMP_PLACES::            Specifies on which CPUs the theads should be placed\n * OMP_STACKSIZE::         Set default thread stack size\n * OMP_SCHEDULE::          How threads are scheduled\n * OMP_THREAD_LIMIT::      Set the maximum number of threads\n * OMP_WAIT_POLICY::       How waiting threads are handled\n-* OMP_DISPLAY_ENV::       Show OpenMP version and environment variables\n-* OMP_PROC_BIND::         Whether theads may be moved between CPUs\n * GOMP_CPU_AFFINITY::     Bind threads to specific CPUs\n * GOMP_STACKSIZE::        Set default thread stack size\n * GOMP_SPINCOUNT::        Set the busy-wait spin count\n @end menu\n \n \n+@node OMP_CANCELLATION\n+@section @env{OMP_CANCELLATION} -- Set whether cancellation is activated\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+If set to @code{TRUE}, the cancellation is activated.  If set to @code{FALSE} or\n+if unset, cancellation is disabled and the @code{cancel} construct is ignored.\n+\n+@item @emph{See also}:\n+@ref{omp_get_cancellation}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.11\n+@end table\n+\n+\n+\n+@node OMP_DISPLAY_ENV\n+@section @env{OMP_DISPLAY_ENV} -- Show OpenMP version and environment variables\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+If set to @code{TRUE}, the OpenMP version number and the values\n+associated with the OpenMP environment variables are printed to @code{stderr}.\n+If set to @code{VERBOSE}, it additionally shows the value of the environment\n+variables which are GNU extensions.  If undefined or set to @code{FALSE},\n+this information will not be shown.\n+\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.12\n+@end table\n+\n+\n+\n+@node OMP_DEFAULT_DEVICE\n+@section @env{OMP_DEFAULT_DEVICE} -- Set the device used in target regions\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+Set to choose the device which is used in a @code{target} region, unless the\n+value is overridden by @code{omp_set_default_device} or by a @code{device}\n+clause.  The value shall be the nonnegative device number. If no device with\n+the given device number exists, the code is executed on the host.  If unset,\n+device number 0 will be used.\n+\n+\n+@item @emph{See also}:\n+@ref{omp_get_default_device}, @ref{omp_set_default_device},\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.11\n+@end table\n+\n+\n+\n @node OMP_DYNAMIC\n @section @env{OMP_DYNAMIC} -- Dynamic adjustment of threads\n @cindex Environment Variable\n @table @asis\n @item @emph{Description}:\n Enable or disable the dynamic adjustment of the number of threads \n-within a team. The value of this environment variable shall be \n-@code{TRUE} or @code{FALSE}. If undefined, dynamic adjustment is\n+within a team.  The value of this environment variable shall be \n+@code{TRUE} or @code{FALSE}.  If undefined, dynamic adjustment is\n disabled by default.\n \n @item @emph{See also}:\n @ref{omp_set_dynamic}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, section 4.3\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.3\n @end table\n \n \n@@ -1131,14 +1396,14 @@ disabled by default.\n @table @asis\n @item @emph{Description}:\n Specifies the initial value for the maximum number of nested parallel\n-regions. The value of this variable shall be a positive integer.\n+regions.  The value of this variable shall be a positive integer.\n If undefined, the number of active levels is unlimited.\n \n @item @emph{See also}:\n @ref{omp_set_max_active_levels}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, section 4.9\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.9\n @end table\n \n \n@@ -1150,15 +1415,15 @@ If undefined, the number of active levels is unlimited.\n @table @asis\n @item @emph{Description}:\n Enable or disable nested parallel regions, i.e., whether team members\n-are allowed to create new teams. The value of this environment variable \n-shall be @code{TRUE} or @code{FALSE}. If undefined, nested parallel \n+are allowed to create new teams.  The value of this environment variable \n+shall be @code{TRUE} or @code{FALSE}.  If undefined, nested parallel \n regions are disabled by default.\n \n @item @emph{See also}:\n @ref{omp_set_nested}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, section 4.6\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.6\n @end table\n \n \n@@ -1169,16 +1434,85 @@ regions are disabled by default.\n @cindex Implementation specific setting\n @table @asis\n @item @emph{Description}:\n-Specifies the default number of threads to use in parallel regions. The \n+Specifies the default number of threads to use in parallel regions.  The \n value of this variable shall be a comma-separated list of positive integers;\n the value specified the number of threads to use for the corresponding nested\n-level. If undefined one thread per CPU is used.\n+level.  If undefined one thread per CPU is used.\n \n @item @emph{See also}:\n @ref{omp_set_num_threads}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, section 4.2\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.2\n+@end table\n+\n+\n+\n+@node OMP_PLACES\n+@section @env{OMP_PLACES} -- Specifies on which CPUs the theads should be placed\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+The thread placement can be either specified using an abstract name or by an\n+explicit list of the places.  The abstract names @code{threads}, @code{cores}\n+and @code{sockets} can be optionally followed by a positive number in\n+parentheses, which denotes the how many places shall be created.  With\n+@code{threads} each place corresponds to a single hardware thread; @code{cores}\n+to a single core with the corresponding number of hardware threads; and with\n+@code{sockets} the place corresponds to a single socket.  The resulting\n+placement can be shown by setting the @env{OMP_DISPLAY_ENV} environment\n+variable.\n+\n+Alternatively, the placement can be specified explicitly as comma-separated\n+list of places.  A place is specified by set of nonnegative numbers in curly\n+braces, denoting the denoting the hardware threads.  The hardware threads\n+belonging to a place can either be specified as comma-separated list of\n+nonnegative thread numbers or using an interval.  Multiple places can also be\n+either specified by a comma-separated list of places or by an interval.  To\n+specify an interval, a colon followed by the count is placed after after\n+the hardware thread number or the place.  Optionally, the length can be\n+followed by a colon and the stride number -- otherwise a unit stride is\n+assumed.  For instance, the following specifies the same places list:\n+@code{\"@{0,1,2@}, @{3,4,6@}, @{7,8,9@}, @{10,11,12@}\"};\n+@code{\"@{0:3@}, @{3:3@}, @{7:3@}, @{10:3@}\"}; and @code{\"@{0:2@}:4:3\"}.\n+\n+If @env{OMP_PLACES} and @env{GOMP_CPU_AFFINITY} are unset and\n+@env{OMP_PROC_BIND} is either unset or @code{false}, threads may be moved\n+between CPUs following no placement policy.\n+\n+@item @emph{See also}:\n+@ref{OMP_PROC_BIND}, @ref{GOMP_CPU_AFFINITY}, @ref{omp_get_proc_bind},\n+@ref{OMP_DISPLAY_ENV}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.5\n+@end table\n+\n+\n+\n+@node OMP_PROC_BIND\n+@section @env{OMP_PROC_BIND} -- Whether theads may be moved between CPUs\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+Specifies whether threads may be moved between processors.  If set to\n+@code{TRUE}, OpenMP theads should not be moved; if set to @code{FALSE}\n+they may be moved.  Alternatively, a comma separated list with the\n+values @code{MASTER}, @code{CLOSE} and @code{SPREAD} can be used to specify\n+the thread affinity policy for the corresponding nesting level.  With\n+@code{MASTER} the worker threads are in the same place partition as the\n+master thread.  With @code{CLOSE} those are kept close to the master thread\n+in contiguous place partitions.  And with @code{SPREAD} a sparse distribution\n+across the place partitions is used.\n+\n+When undefined, @env{OMP_PROC_BIND} defaults to @code{TRUE} when\n+@env{OMP_PLACES} or @env{GOMP_CPU_AFFINITY} is set and @code{FALSE} otherwise.\n+\n+@item @emph{See also}:\n+@ref{OMP_PLACES}, @ref{GOMP_CPU_AFFINITY}, @ref{omp_get_proc_bind}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.4\n @end table\n \n \n@@ -1192,14 +1526,14 @@ level. If undefined one thread per CPU is used.\n Allows to specify @code{schedule type} and @code{chunk size}. \n The value of the variable shall have the form: @code{type[,chunk]} where\n @code{type} is one of @code{static}, @code{dynamic}, @code{guided} or @code{auto}\n-The optional @code{chunk} size shall be a positive integer. If undefined,\n+The optional @code{chunk} size shall be a positive integer.  If undefined,\n dynamic scheduling and a chunk size of 1 is used.\n \n @item @emph{See also}:\n @ref{omp_set_schedule}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, sections 2.7.1 and 4.1\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Sections 2.7.1 and 4.1\n @end table\n \n \n@@ -1212,14 +1546,14 @@ dynamic scheduling and a chunk size of 1 is used.\n Set the default thread stack size in kilobytes, unless the number\n is suffixed by @code{B}, @code{K}, @code{M} or @code{G}, in which\n case the size is, respectively, in bytes, kilobytes, megabytes\n-or gigabytes. This is different from @code{pthread_attr_setstacksize}\n-which gets the number of bytes as an argument. If the stack size cannot\n+or gigabytes.  This is different from @code{pthread_attr_setstacksize}\n+which gets the number of bytes as an argument.  If the stack size cannot\n be set due to system constraints, an error is reported and the initial\n-stack size is left unchanged. If undefined, the stack size is system\n+stack size is left unchanged.  If undefined, the stack size is system\n dependent.\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, section 4.7\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.7\n @end table\n \n \n@@ -1229,16 +1563,15 @@ dependent.\n @cindex Environment Variable\n @table @asis\n @item @emph{Description}:\n-Specifies the number of threads to use for the whole program. The\n-value of this variable shall be a positive integer. If undefined,\n+Specifies the number of threads to use for the whole program.  The\n+value of this variable shall be a positive integer.  If undefined,\n the number of threads is not limited.\n \n @item @emph{See also}:\n-@ref{OMP_NUM_THREADS}\n-@ref{omp_get_thread_limit}\n+@ref{OMP_NUM_THREADS}, @ref{omp_get_thread_limit}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, section 4.10\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.10\n @end table\n \n \n@@ -1248,53 +1581,17 @@ the number of threads is not limited.\n @cindex Environment Variable\n @table @asis\n @item @emph{Description}:\n-Specifies whether waiting threads should be active or passive. If\n+Specifies whether waiting threads should be active or passive.  If\n the value is @code{PASSIVE}, waiting threads should not consume CPU\n power while waiting; while the value is @code{ACTIVE} specifies that\n-they should. If undefined, threads wait actively for a short time\n+they should.  If undefined, threads wait actively for a short time\n before waiting passively.\n \n @item @emph{See also}:\n @ref{GOMP_SPINCOUNT}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, section 4.8\n-@end table\n-\n-\n-\n-@node OMP_PROC_BIND\n-@section @env{OMP_PROC_BIND} -- Whether theads may be moved between CPUs\n-@cindex Environment Variable\n-@table @asis\n-@item @emph{Description}:\n-Specifies whether threads may be moved between processors. If set to\n-@code{TRUE}, OpenMP theads should not be moved, if set to @code{FALSE}\n-they may be moved. If undefined, threads may move between processors.\n-\n-@item @emph{See also}:\n-@ref{GOMP_CPU_AFFINITY}\n-\n-@item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, section 4.4\n-@end table\n-\n-\n-\n-@node OMP_DISPLAY_ENV\n-@section @env{OMP_DISPLAY_ENV} -- Show OpenMP version and environment variables\n-@cindex Environment Variable\n-@table @asis\n-@item @emph{Description}:\n-If set to @code{TRUE}, the OpenMP version number and the values\n-associated with the OpenMP environment variables are printed to @code{stderr}.\n-If set to @code{VERBOSE}, it additionally shows the value of the environment\n-variables which are GNU extensions. If undefined or set to @code{FALSE},\n-this information will not be shown.\n-\n-\n-@item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v4.0}, section 4.12\n+@uref{http://www.openmp.org/, OpenMP specification v4.0}, Section 4.8\n @end table\n \n \n@@ -1304,28 +1601,30 @@ this information will not be shown.\n @cindex Environment Variable\n @table @asis\n @item @emph{Description}:\n-Binds threads to specific CPUs. The variable should contain a space-separated\n-or comma-separated list of CPUs. This list may contain different kinds of \n+Binds threads to specific CPUs.  The variable should contain a space-separated\n+or comma-separated list of CPUs.  This list may contain different kinds of \n entries: either single CPU numbers in any order, a range of CPUs (M-N) \n-or a range with some stride (M-N:S).  CPU numbers are zero based. For example,\n+or a range with some stride (M-N:S).  CPU numbers are zero based.  For example,\n @code{GOMP_CPU_AFFINITY=\"0 3 1-2 4-15:2\"} will bind the initial thread\n to CPU 0, the second to CPU 3, the third to CPU 1, the fourth to \n CPU 2, the fifth to CPU 4, the sixth through tenth to CPUs 6, 8, 10, 12,\n and 14 respectively and then start assigning back from the beginning of\n the list.  @code{GOMP_CPU_AFFINITY=0} binds all threads to CPU 0.\n \n There is no GNU OpenMP library routine to determine whether a CPU affinity \n-specification is in effect. As a workaround, language-specific library \n+specification is in effect.  As a workaround, language-specific library \n functions, e.g., @code{getenv} in C or @code{GET_ENVIRONMENT_VARIABLE} in \n Fortran, may be used to query the setting of the @code{GOMP_CPU_AFFINITY} \n-environment variable. A defined CPU affinity on startup cannot be changed \n+environment variable.  A defined CPU affinity on startup cannot be changed \n or disabled during the runtime of the application.\n \n-If this environment variable is omitted, the host system will handle the\n-assignment of threads to CPUs. \n+If both @env{GOMP_CPU_AFFINITY} and @env{OMP_PROC_BIND} are set,\n+@env{OMP_PROC_BIND} has a higher precedence.  If neither has been set and\n+@env{OMP_PROC_BIND} is unset, or when @env{OMP_PROC_BIND} is set to\n+@code{FALSE}, the host system will handle the assignment of threads to CPUs.\n \n @item @emph{See also}:\n-@ref{OMP_PROC_BIND}\n+@ref{OMP_PLACES}, @ref{OMP_PROC_BIND}\n @end table\n \n \n@@ -1336,10 +1635,10 @@ assignment of threads to CPUs.\n @cindex Implementation specific setting\n @table @asis\n @item @emph{Description}:\n-Set the default thread stack size in kilobytes. This is different from\n+Set the default thread stack size in kilobytes.  This is different from\n @code{pthread_attr_setstacksize} which gets the number of bytes as an \n-argument. If the stack size cannot be set due to system constraints, an \n-error is reported and the initial stack size is left unchanged. If undefined,\n+argument.  If the stack size cannot be set due to system constraints, an \n+error is reported and the initial stack size is left unchanged.  If undefined,\n the stack size is system dependent.\n \n @item @emph{See also}:\n@@ -1361,9 +1660,9 @@ GCC Patches Mailinglist}\n @table @asis\n @item @emph{Description}:\n Determines how long a threads waits actively with consuming CPU power\n-before waiting passively without consuming CPU power. The value may be\n+before waiting passively without consuming CPU power.  The value may be\n either @code{INFINITE}, @code{INFINITY} to always wait actively or an\n-integer which gives the number of spins of the busy-wait loop. The\n+integer which gives the number of spins of the busy-wait loop.  The\n integer may optionally be followed by the following suffixes acting\n as multiplication factors: @code{k} (kilo, thousand), @code{M} (mega,\n million), @code{G} (giga, billion), or @code{T} (tera, trillion).\n@@ -1778,7 +2077,7 @@ becomes\n @chapter Reporting Bugs\n \n Bugs in the GNU OpenMP implementation should be reported via \n-@uref{http://gcc.gnu.org/bugzilla/, bugzilla}.  For all cases, please add \n+@uref{http://gcc.gnu.org/bugzilla/, Bugzilla}.  For all cases, please add \n \"openmp\" to the keywords field in the bug report.\n \n "}]}