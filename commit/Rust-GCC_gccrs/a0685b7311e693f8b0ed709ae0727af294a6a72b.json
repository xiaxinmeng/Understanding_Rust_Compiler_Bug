{"sha": "a0685b7311e693f8b0ed709ae0727af294a6a72b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA2ODViNzMxMWU2OTNmOGIwZWQ3MDlhZTA3MjdhZjI5NGE2YTcyYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-05-19T21:02:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-05-19T21:02:16Z"}, "message": "* typeck.c (merge_types): Preserve memfn quals.\n\nFrom-SVN: r159598", "tree": {"sha": "1f4e82ff0763474f40d38c31b992865c037a7f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f4e82ff0763474f40d38c31b992865c037a7f04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0685b7311e693f8b0ed709ae0727af294a6a72b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0685b7311e693f8b0ed709ae0727af294a6a72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0685b7311e693f8b0ed709ae0727af294a6a72b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0685b7311e693f8b0ed709ae0727af294a6a72b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "93e1ddcf9c8f4b8b64d0e53bd4a4f306eb70bdd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e1ddcf9c8f4b8b64d0e53bd4a4f306eb70bdd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e1ddcf9c8f4b8b64d0e53bd4a4f306eb70bdd4"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "6dd97bb23eb5940f9faf82d8d01b43d18d4d766f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0685b7311e693f8b0ed709ae0727af294a6a72b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0685b7311e693f8b0ed709ae0727af294a6a72b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a0685b7311e693f8b0ed709ae0727af294a6a72b", "patch": "@@ -1,5 +1,7 @@\n 2010-05-19  Jason Merrill  <jason@redhat.com>\n \n+\t* typeck.c (merge_types): Preserve memfn quals.\n+\n \t* decl.c (grokdeclarator): Don't check quals on fn type.\n \t* typeck.c (cp_apply_type_quals_to_decl): Likewise.\n \t* tree.c (cp_build_qualified_type_real): Simplify qualifier checking."}, {"sha": "a46b218700da04730f173f0c4bc84775e23b5590", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0685b7311e693f8b0ed709ae0727af294a6a72b/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0685b7311e693f8b0ed709ae0727af294a6a72b/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=a0685b7311e693f8b0ed709ae0727af294a6a72b", "patch": "@@ -810,6 +810,7 @@ merge_types (tree t1, tree t2)\n \ttree valtype = merge_types (TREE_TYPE (t1), TREE_TYPE (t2));\n \ttree p1 = TYPE_ARG_TYPES (t1);\n \ttree p2 = TYPE_ARG_TYPES (t2);\n+\ttree parms;\n \ttree rval, raises;\n \n \t/* Save space: see if the result is identical to one of the args.  */\n@@ -821,21 +822,25 @@ merge_types (tree t1, tree t2)\n \t/* Simple way if one arg fails to specify argument types.  */\n \tif (p1 == NULL_TREE || TREE_VALUE (p1) == void_type_node)\n \t  {\n-\t    rval = build_function_type (valtype, p2);\n-\t    if ((raises = TYPE_RAISES_EXCEPTIONS (t2)))\n-\t      rval = build_exception_variant (rval, raises);\n-\t    return cp_build_type_attribute_variant (rval, attributes);\n+\t    parms = p2;\n+\t    raises = TYPE_RAISES_EXCEPTIONS (t2);\n \t  }\n-\traises = TYPE_RAISES_EXCEPTIONS (t1);\n-\tif (p2 == NULL_TREE || TREE_VALUE (p2) == void_type_node)\n+\telse if (p2 == NULL_TREE || TREE_VALUE (p2) == void_type_node)\n \t  {\n-\t    rval = build_function_type (valtype, p1);\n-\t    if (raises)\n-\t      rval = build_exception_variant (rval, raises);\n-\t    return cp_build_type_attribute_variant (rval, attributes);\n+\t    parms = p1;\n+\t    raises = TYPE_RAISES_EXCEPTIONS (t1);\n+\t  }\n+\telse\n+\t  {\n+\t    parms = commonparms (p1, p2);\n+\t    /* In cases where we're merging a real declaration with a\n+\t       built-in declaration, t1 is the real one.  */\n+\t    raises = TYPE_RAISES_EXCEPTIONS (t1);\n \t  }\n \n-\trval = build_function_type (valtype, commonparms (p1, p2));\n+\trval = build_function_type (valtype, parms);\n+\tgcc_assert (type_memfn_quals (t1) == type_memfn_quals (t2));\n+\trval = apply_memfn_quals (rval, type_memfn_quals (t1));\n \tt1 = build_exception_variant (rval, raises);\n \tbreak;\n       }"}, {"sha": "3d12129edd878a7a03d657bed6267a9c270e82b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0685b7311e693f8b0ed709ae0727af294a6a72b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0685b7311e693f8b0ed709ae0727af294a6a72b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0685b7311e693f8b0ed709ae0727af294a6a72b", "patch": "@@ -1,5 +1,7 @@\n 2010-05-19  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/parse/fn-typedef2.C: New.\n+\n \t* g++.dg/other/cv_func.C: Don't expect errors about cv-qualified\n \tfunction type.\n "}, {"sha": "c9c7f060d01f19b5cba0c83c8267b2848a99c2af", "filename": "gcc/testsuite/g++.dg/parse/fn-typedef2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0685b7311e693f8b0ed709ae0727af294a6a72b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffn-typedef2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0685b7311e693f8b0ed709ae0727af294a6a72b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffn-typedef2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffn-typedef2.C?ref=a0685b7311e693f8b0ed709ae0727af294a6a72b", "patch": "@@ -0,0 +1,7 @@\n+// Test that merge_types preserves fn cv-quals.\n+\n+typedef void ft() const;\n+typedef void V;\n+typedef V ft() const;\n+\n+ft f;\t\t\t\t// { dg-error \"qualified\" }"}]}