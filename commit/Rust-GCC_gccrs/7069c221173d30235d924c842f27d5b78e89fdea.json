{"sha": "7069c221173d30235d924c842f27d5b78e89fdea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2OWMyMjExNzNkMzAyMzVkOTI0Yzg0MmYyN2Q1Yjc4ZTg5ZmRlYQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-11-08T19:24:41Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-11-08T19:24:41Z"}, "message": "atomicity.h: Provide atomic __exchange_and_add and __atomic_add.\n\n2002-11-07  Phil Edwards  <pme@gcc.gnu.org>\n            Richard Earnshaw  <rearnsha@arm.com>\n\n\t* config/cpu/generic/atomicity.h:  Provide atomic __exchange_and_add\n\tand __atomic_add.\n\nCo-Authored-By: Richard Earnshaw <rearnsha@arm.com>\n\nFrom-SVN: r58929", "tree": {"sha": "c7f543d86d5a82e9a59d5ac7b9fc9e12e499f6ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7f543d86d5a82e9a59d5ac7b9fc9e12e499f6ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7069c221173d30235d924c842f27d5b78e89fdea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7069c221173d30235d924c842f27d5b78e89fdea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7069c221173d30235d924c842f27d5b78e89fdea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7069c221173d30235d924c842f27d5b78e89fdea/comments", "author": null, "committer": null, "parents": [{"sha": "bce582242d4393e0c2ad15f97b6df65038f4ca3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce582242d4393e0c2ad15f97b6df65038f4ca3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bce582242d4393e0c2ad15f97b6df65038f4ca3b"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "bf57cd766de5821abcc8739ebf3b43570c899dc1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7069c221173d30235d924c842f27d5b78e89fdea/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7069c221173d30235d924c842f27d5b78e89fdea/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7069c221173d30235d924c842f27d5b78e89fdea", "patch": "@@ -1,3 +1,9 @@\n+2002-11-07  Phil Edwards  <pme@gcc.gnu.org>\n+            Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/cpu/generic/atomicity.h:  Provide atomic __exchange_and_add\n+\tand __atomic_add.\n+\n 2002-11-08  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* config/locale/gnu/monetary_members.cc"}, {"sha": "2cf6c3ced68c7ebbda329e46f4b4bb4f8159527b", "filename": "libstdc++-v3/config/cpu/generic/atomicity.h", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7069c221173d30235d924c842f27d5b78e89fdea/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7069c221173d30235d924c842f27d5b78e89fdea/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomicity.h?ref=7069c221173d30235d924c842f27d5b78e89fdea", "patch": "@@ -1,6 +1,6 @@\n // Low-level functions for atomic operations: Generic version  -*- C++ -*-\n \n-// Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,22 +30,37 @@\n #ifndef _BITS_ATOMICITY_H\n #define _BITS_ATOMICITY_H\t1\n \n+#include <bits/gthr.h>\n+\n typedef int _Atomic_word;\n \n+namespace __gnu_cxx\n+{\n+  __gthread_mutex_t _Atomic_add_mutex __attribute__ ((__weak__))\n+                                                      = __GTHREAD_MUTEX_INIT;\n+}\n+\n static inline _Atomic_word\n __attribute__ ((__unused__))\n-__exchange_and_add (_Atomic_word* __mem, int __val)\n+__exchange_and_add (volatile _Atomic_word* __mem, int __val)\n {\n-  _Atomic_word __result = *__mem;\n-  *__mem += __val;\n+   _Atomic_word __result;\n+\n+   __gthread_mutex_lock (&__gnu_cxx::_Atomic_add_mutex);\n+\n+   __result = *__mem;\n+   *__mem += __val;\n+\n+  __gthread_mutex_unlock (&__gnu_cxx::_Atomic_add_mutex);\n   return __result;\n }\n \n+\n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (_Atomic_word* __mem, int __val)\n+__atomic_add (volatile _Atomic_word* __mem, int __val)\n {\n-  *__mem += __val;\n+  (void) __exchange_and_add (__mem, __val);\n }\n \n #endif /* atomicity.h */"}]}