{"sha": "9771644a91afe5c53b0433eaedb1d9976f77d856", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc3MTY0NGE5MWFmZTVjNTNiMDQzM2VhZWRiMWQ5OTc2Zjc3ZDg1Ng==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-04-23T12:26:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-04-23T12:26:43Z"}, "message": "re PR libstdc++/53080 (tuple interface to std::array doesn't check bounds)\n\n2012-04-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/53080\n\t* include/std/array (tuple_element, get): static_assert I < N.\n\t* testsuite/23_containers/array/tuple_interface/tuple_element_neg.cc:\n\tNew.\n\t* testsuite/23_containers/array/tuple_interface/get_neg.cc: Likewise.\n\t* testsuite/23_containers/array/tuple_interface/tuple_element.cc: Fix.\n\nFrom-SVN: r186702", "tree": {"sha": "c583993f5c7e4cd8411fa5936793efa6ca573929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c583993f5c7e4cd8411fa5936793efa6ca573929"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9771644a91afe5c53b0433eaedb1d9976f77d856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9771644a91afe5c53b0433eaedb1d9976f77d856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9771644a91afe5c53b0433eaedb1d9976f77d856", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9771644a91afe5c53b0433eaedb1d9976f77d856/comments", "author": null, "committer": null, "parents": [{"sha": "ff5be0e34e72b6f752da6ad73be280a514bc78b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff5be0e34e72b6f752da6ad73be280a514bc78b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff5be0e34e72b6f752da6ad73be280a514bc78b0"}], "stats": {"total": 111, "additions": 91, "deletions": 20}, "files": [{"sha": "b47289ea75bcf61528296d0ba8e84b89356c07e7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9771644a91afe5c53b0433eaedb1d9976f77d856", "patch": "@@ -1,3 +1,12 @@\n+2012-04-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/53080\n+\t* include/std/array (tuple_element, get): static_assert I < N.\n+\t* testsuite/23_containers/array/tuple_interface/tuple_element_neg.cc:\n+\tNew.\n+\t* testsuite/23_containers/array/tuple_interface/get_neg.cc: Likewise.\n+\t* testsuite/23_containers/array/tuple_interface/tuple_element.cc: Fix.\n+\n 2012-04-23  Chris Jefferson  <chris@bubblescope.net>\n \n \tPR testsuite/53046"}, {"sha": "e895dd7fc67f26249fb2994dd177c6c30e67900f", "filename": "libstdc++-v3/include/std/array", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray?ref=9771644a91afe5c53b0433eaedb1d9976f77d856", "patch": "@@ -1,6 +1,7 @@\n // <array> -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011, 2012\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -261,23 +262,35 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     class tuple_element;\n \n   template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n-    struct tuple_element<_Int, array<_Tp, _Nm> >\n-    { typedef _Tp type; };\n+    struct tuple_element<_Int, array<_Tp, _Nm>>\n+    {\n+      static_assert(_Int < _Nm, \"index is out of bounds\");\n+      typedef _Tp type;\n+    };\n \n   template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n     constexpr _Tp&\n     get(array<_Tp, _Nm>& __arr) noexcept\n-    { return __arr._M_instance[_Int]; }\n+    {\n+      static_assert(_Int < _Nm, \"index is out of bounds\");\n+      return __arr._M_instance[_Int];\n+    }\n \n   template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n     constexpr _Tp&&\n     get(array<_Tp, _Nm>&& __arr) noexcept\n-    { return std::move(get<_Int>(__arr)); }\n+    {\n+      static_assert(_Int < _Nm, \"index is out of bounds\");\n+      return std::move(get<_Int>(__arr));\n+    }\n \n   template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n     constexpr const _Tp&\n     get(const array<_Tp, _Nm>& __arr) noexcept\n-    { return __arr._M_instance[_Int]; }\n+    {\n+      static_assert(_Int < _Nm, \"index is out of bounds\");\n+      return __arr._M_instance[_Int];\n+    }\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace"}, {"sha": "ecc25bf83878e634ad2c00667dcb92dd15e0ec9c", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/get_neg.cc", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_neg.cc?ref=9771644a91afe5c53b0433eaedb1d9976f77d856", "patch": "@@ -0,0 +1,32 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <array>\n+\n+std::array<int, 1> a{};\n+const std::array<int, 1> ca{};\n+\n+int n1 = std::get<1>(a);\n+int n2 = std::get<1>(std::move(a));\n+int n3 = std::get<1>(ca);\n+\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 275 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 283 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 291 }"}, {"sha": "9ab5d8b95c69f7631cbecd57bca9bd0e000c74b1", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/tuple_element.cc", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element.cc?ref=9771644a91afe5c53b0433eaedb1d9976f77d856", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n //\n-// Copyright (C) 2011 Free Software Foundation, Inc.\n+// Copyright (C) 2011, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,19 +27,11 @@ test01()\n   bool test __attribute__((unused)) = true;\n   using namespace std;\n \n-  {\n-    const size_t len = 3;\n-    typedef array<int, len> array_type;\n-    VERIFY( (is_same<tuple_element<0, array_type>::type, int>::value == true) );\n-    VERIFY( (is_same<tuple_element<1, array_type>::type, int>::value == true) );\n-    VERIFY( (is_same<tuple_element<2, array_type>::type, int>::value == true) );\n-  }\n-\n-  {\n-    const size_t len = 0;\n-    typedef array<int, len> array_type;\n-    VERIFY( (is_same<tuple_element<0, array_type>::type, int>::value == true) );\n-  }\n+  const size_t len = 3;\n+  typedef array<int, len> array_type;\n+  VERIFY( (is_same<tuple_element<0, array_type>::type, int>::value == true) );\n+  VERIFY( (is_same<tuple_element<1, array_type>::type, int>::value == true) );\n+  VERIFY( (is_same<tuple_element<2, array_type>::type, int>::value == true) );\n }\n \n int main()"}, {"sha": "72638138106a8c5bdcbdfff7053e85de676f9be0", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/tuple_element_neg.cc", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9771644a91afe5c53b0433eaedb1d9976f77d856/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_neg.cc?ref=9771644a91afe5c53b0433eaedb1d9976f77d856", "patch": "@@ -0,0 +1,25 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <array>\n+\n+typedef std::tuple_element<1, std::array<int, 1>>::type type;\n+\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 267 }"}]}