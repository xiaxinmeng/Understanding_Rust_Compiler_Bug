{"sha": "4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZjYjUyYzRlZjA5ZDFiMGY5ZjdhZmViNjBjY2YwNDBjZmFhMTI2Mg==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2019-02-07T10:05:57Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2019-02-07T10:05:57Z"}, "message": "Arm: Fix NEON REG to REG reload failures. (PR/target 88850) \n\nWe currently return cost 2 for NEON REG to REG moves, which would be incorrect\nfor 64 bit moves.  We currently don't have a pattern for this in the neon_move\nalternatives because this is a bit of a special case.  We would almost never\nwant it to use this r -> r pattern unless it really has no choice.\n\nAs such we add a new neon r -> r move pattern but also hide it from being used\nto determine register preferences and also disparage it during LRA.\n\ngcc/ChangeLog:\n\n\tPR/target 88850\n\t* config/arm/neon.md (*neon_mov<mode>): Add r -> r case.\n\ngcc/testsuite/ChangeLog:\n\n\tPR/target 88850\n\t* gcc.target/arm/pr88850.c: New test.\n\nFrom-SVN: r268612", "tree": {"sha": "55511b4681cc25c631e9558c463aad79842959e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55511b4681cc25c631e9558c463aad79842959e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51e6029f6994e9185f6ba931402bd7f64f891237", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e6029f6994e9185f6ba931402bd7f64f891237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e6029f6994e9185f6ba931402bd7f64f891237"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "3ac46690dda589e833638912ff484437c8e00fe0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262", "patch": "@@ -1,3 +1,8 @@\n+2019-02-07  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR/target 88850\n+\t* config/arm/neon.md (*neon_mov<mode>): Add r -> r case.\n+\n 2019-02-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/neon.md (neon_<sup>dot<vsi2qi>):"}, {"sha": "de9ae43849038b3cf75feceec36429d5c40c63f2", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262", "patch": "@@ -25,9 +25,9 @@\n \n (define_insn \"*neon_mov<mode>\"\n   [(set (match_operand:VDX 0 \"nonimmediate_operand\"\n-\t  \"=w,Un,w, w,  ?r,?w,?r, ?Us\")\n+\t  \"=w,Un,w, w,  ?r,?w,?r, ?Us,*r\")\n \t(match_operand:VDX 1 \"general_operand\"\n-\t  \" w,w, Dn,Uni, w, r, Usi,r\"))]\n+\t  \" w,w, Dn,Uni, w, r, Usi,r,*r\"))]\n   \"TARGET_NEON\n    && (register_operand (operands[0], <MODE>mode)\n        || register_operand (operands[1], <MODE>mode))\"\n@@ -57,16 +57,17 @@\n     case 2: gcc_unreachable ();\n     case 4: return \"vmov\\t%Q0, %R0, %P1  @ <mode>\";\n     case 5: return \"vmov\\t%P0, %Q1, %R1  @ <mode>\";\n+    case 8: return \"#\";\n     default: return output_move_double (operands, true, NULL);\n     }\n }\n  [(set_attr \"type\" \"neon_move<q>,neon_store1_1reg,neon_move<q>,\\\n                     neon_load1_1reg, neon_to_gp<q>,neon_from_gp<q>,\\\n-                    neon_load1_2reg, neon_store1_2reg\")\n-  (set_attr \"length\" \"4,4,4,4,4,4,8,8\")\n-  (set_attr \"arm_pool_range\"     \"*,*,*,1020,*,*,1020,*\")\n-  (set_attr \"thumb2_pool_range\"     \"*,*,*,1018,*,*,1018,*\")\n-  (set_attr \"neg_pool_range\" \"*,*,*,1004,*,*,1004,*\")])\n+                    neon_load1_2reg, neon_store1_2reg, multiple\")\n+  (set_attr \"length\" \"4,4,4,4,4,4,8,8,8\")\n+  (set_attr \"arm_pool_range\"     \"*,*,*,1020,*,*,1020,*,*\")\n+  (set_attr \"thumb2_pool_range\"     \"*,*,*,1018,*,*,1018,*,*\")\n+  (set_attr \"neg_pool_range\" \"*,*,*,1004,*,*,1004,*,*\")])\n \n (define_insn \"*neon_mov<mode>\"\n   [(set (match_operand:VQXMOV 0 \"nonimmediate_operand\""}, {"sha": "6c6fe2762214c56e0d44db875cfce9945e410640", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262", "patch": "@@ -1,3 +1,8 @@\n+2019-02-07  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR/target 88850\n+\t* gcc.target/arm/pr88850.c: New test.\n+\n 2019-02-07  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR c++/86218"}, {"sha": "66d0e9e620aef4f092a33ead79521901b5d89636", "filename": "gcc/testsuite/gcc.target/arm/pr88850.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr88850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr88850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr88850.c?ref=4fcb52c4ef09d1b0f9f7afeb60ccf040cfaa1262", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/88850 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=armv7-a -mfloat-abi=softfp -mfpu=neon -fdump-rtl-final\" } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+\n+typedef __builtin_neon_qi int8x8_t __attribute__ ((__vector_size__ (8)));\n+void bar (int8x8_t, int8x8_t);\n+\n+void\n+foo (int8x8_t x, int8x8_t y)\n+{\n+ bar (y, x);\n+}\n+\n+void foo2 (int8x8_t x)\n+{\n+  int8x8_t y;\n+  bar (y, x);\n+}\n+\n+/* Check that these 64-bit moves are done in SI.  */\n+/* { dg-final { scan-rtl-dump \"_movsi_vfp\" \"final\" } } */"}]}