{"sha": "266fbb797168bffea7bf23c20c2a5562d73bb8ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY2ZmJiNzk3MTY4YmZmZWE3YmYyM2MyMGMyYTU1NjJkNzNiYjhjYQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2011-10-18T08:57:39Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2011-10-18T08:57:39Z"}, "message": "re PR tree-optimization/50672 (ice: verify_ssa failed: no immediate_use list)\n\n2011-10-18  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/50672\n\t* tree-ssa-dce.c (mark_virtual_operand_for_renaming): New function,\n\tfactored out of ...\n\t(mark_virtual_phi_result_for_renaming): Use\n\tmark_virtual_operand_for_renaming.\n\t* tree-flow.h (mark_virtual_operand_for_renaming): Declare.\n\t* tree-ssa-tail-merge.c (release_last_vdef): New function.\n\t(purge_bbs): Add update_vops parameter.  Call release_last_vdef for each\n\tdeleted basic block.\n\t(tail_merge_optimize): Add argument to call to purge_bbs.\n\nFrom-SVN: r180126", "tree": {"sha": "3b1b6394f8dab21f1dae90612735039580316aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b1b6394f8dab21f1dae90612735039580316aaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/266fbb797168bffea7bf23c20c2a5562d73bb8ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266fbb797168bffea7bf23c20c2a5562d73bb8ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266fbb797168bffea7bf23c20c2a5562d73bb8ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266fbb797168bffea7bf23c20c2a5562d73bb8ca/comments", "author": null, "committer": null, "parents": [{"sha": "cab35794426a18f99a26d47b2c94546569cfacc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab35794426a18f99a26d47b2c94546569cfacc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab35794426a18f99a26d47b2c94546569cfacc1"}], "stats": {"total": 95, "additions": 78, "deletions": 17}, "files": [{"sha": "5ef215e47ee99f65ac9e946e5351fec102bf9898", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266fbb797168bffea7bf23c20c2a5562d73bb8ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266fbb797168bffea7bf23c20c2a5562d73bb8ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=266fbb797168bffea7bf23c20c2a5562d73bb8ca", "patch": "@@ -1,3 +1,16 @@\n+2011-10-18  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/50672\n+\t* tree-ssa-dce.c (mark_virtual_operand_for_renaming): New function,\n+\tfactored out of ...\n+\t(mark_virtual_phi_result_for_renaming): Use\n+\tmark_virtual_operand_for_renaming.\n+\t* tree-flow.h (mark_virtual_operand_for_renaming): Declare.\n+\t* tree-ssa-tail-merge.c (release_last_vdef): New function.\n+\t(purge_bbs): Add update_vops parameter.  Call release_last_vdef for each\n+\tdeleted basic block.\n+\t(tail_merge_optimize): Add argument to call to purge_bbs.\n+\n 2011-10-18  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/50716"}, {"sha": "dcfbb9da628b018c77ab0f76af6a714767c75371", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266fbb797168bffea7bf23c20c2a5562d73bb8ca/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266fbb797168bffea7bf23c20c2a5562d73bb8ca/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=266fbb797168bffea7bf23c20c2a5562d73bb8ca", "patch": "@@ -715,6 +715,7 @@ bool stmt_dominates_stmt_p (gimple, gimple);\n void mark_virtual_ops_for_renaming (gimple);\n \n /* In tree-ssa-dce.c */\n+void mark_virtual_operand_for_renaming (tree);\n void mark_virtual_phi_result_for_renaming (gimple);\n \n /* In tree-ssa-threadedge.c */"}, {"sha": "5a6a38e63e9a4bfe7f98d94d8a2d7d970a29402a", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266fbb797168bffea7bf23c20c2a5562d73bb8ca/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266fbb797168bffea7bf23c20c2a5562d73bb8ca/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=266fbb797168bffea7bf23c20c2a5562d73bb8ca", "patch": "@@ -982,38 +982,47 @@ propagate_necessity (struct edge_list *el)\n     }\n }\n \n-/* Replace all uses of result of PHI by underlying variable and mark it\n+/* Replace all uses of NAME by underlying variable and mark it\n    for renaming.  */\n \n void\n-mark_virtual_phi_result_for_renaming (gimple phi)\n+mark_virtual_operand_for_renaming (tree name)\n {\n   bool used = false;\n   imm_use_iterator iter;\n   use_operand_p use_p;\n   gimple stmt;\n-  tree result_ssa, result_var;\n+  tree name_var;\n+\n+  name_var = SSA_NAME_VAR (name);\n+  FOR_EACH_IMM_USE_STMT (stmt, iter, name)\n+    {\n+      FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n+        SET_USE (use_p, name_var);\n+      update_stmt (stmt);\n+      used = true;\n+    }\n+  if (used)\n+    mark_sym_for_renaming (name_var);\n+}\n \n+/* Replace all uses of result of PHI by underlying variable and mark it\n+   for renaming.  */\n+\n+void\n+mark_virtual_phi_result_for_renaming (gimple phi)\n+{\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file, \"Marking result for renaming : \");\n       print_gimple_stmt (dump_file, phi, 0, TDF_SLIM);\n       fprintf (dump_file, \"\\n\");\n     }\n \n-  result_ssa = gimple_phi_result (phi);\n-  result_var = SSA_NAME_VAR (result_ssa);\n-  FOR_EACH_IMM_USE_STMT (stmt, iter, result_ssa)\n-    {\n-      FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n-        SET_USE (use_p, result_var);\n-      update_stmt (stmt);\n-      used = true;\n-    }\n-  if (used)\n-    mark_sym_for_renaming (result_var);\n+  mark_virtual_operand_for_renaming (gimple_phi_result (phi));\n }\n \n+\n /* Remove dead PHI nodes from block BB.  */\n \n static bool"}, {"sha": "529388c1b220333fec612c7f6fe2e6b058b19469", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 41, "deletions": 3, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266fbb797168bffea7bf23c20c2a5562d73bb8ca/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266fbb797168bffea7bf23c20c2a5562d73bb8ca/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=266fbb797168bffea7bf23c20c2a5562d73bb8ca", "patch": "@@ -773,18 +773,56 @@ same_succ_flush_bbs (bitmap bbs)\n     }\n }\n \n+/* Release the last vdef in BB, either normal or phi result.  */\n+\n+static void\n+release_last_vdef (basic_block bb)\n+{\n+  gimple_stmt_iterator i;\n+\n+  for (i = gsi_last_bb (bb); !gsi_end_p (i); gsi_prev_nondebug (&i))\n+    {\n+      gimple stmt = gsi_stmt (i);\n+      if (gimple_vdef (stmt) == NULL_TREE)\n+\tcontinue;\n+\n+      mark_virtual_operand_for_renaming (gimple_vdef (stmt));\n+      return;\n+    }\n+\n+  for (i = gsi_start_phis (bb); !gsi_end_p (i); gsi_next (&i))\n+    {\n+      gimple phi = gsi_stmt (i);\n+      tree res = gimple_phi_result (phi);\n+\n+      if (is_gimple_reg (res))\n+\tcontinue;\n+\n+      mark_virtual_phi_result_for_renaming (phi);\n+      return;\n+    }\n+  \n+}\n+\n /* Delete all deleted_bbs.  */\n \n static void\n-purge_bbs (void)\n+purge_bbs (bool update_vops)\n {\n   unsigned int i;\n   bitmap_iterator bi;\n+  basic_block bb;\n \n   same_succ_flush_bbs (deleted_bbs);\n \n   EXECUTE_IF_SET_IN_BITMAP (deleted_bbs, 0, i, bi)\n-    delete_basic_block (BASIC_BLOCK (i));\n+    {\n+      bb = BASIC_BLOCK (i);\n+      if (!update_vops)\n+\trelease_last_vdef (bb);\n+\n+      delete_basic_block (bb);\n+    }\n \n   bitmap_and_compl_into (deleted_bb_preds, deleted_bbs);\n   bitmap_clear (deleted_bbs);\n@@ -1665,7 +1703,7 @@ tail_merge_optimize (unsigned int todo)\n \tbreak;\n \n       free_dominance_info (CDI_DOMINATORS);\n-      purge_bbs ();\n+      purge_bbs (update_vops);\n \n       if (iteration_nr == max_iterations)\n \tbreak;"}]}