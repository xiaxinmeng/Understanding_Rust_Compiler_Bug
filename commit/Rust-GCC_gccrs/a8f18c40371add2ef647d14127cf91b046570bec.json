{"sha": "a8f18c40371add2ef647d14127cf91b046570bec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThmMThjNDAzNzFhZGQyZWY2NDdkMTQxMjdjZjkxYjA0NjU3MGJlYw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-07-11T09:42:23Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-07-11T09:42:23Z"}, "message": "In gcc/objc/: 2011-07-11 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/objc/:\n2011-07-11  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-encoding.h (obstack.h): Do not include.\n\t(util_obstack, util_firstobj): Do not declare.\n\t(encode_field_decl): Updated prototype to return a tree and take a\n\tsingle tree argument.  Updated comments.\n\t* objc-encoding.c (util_obstack, util_firstobj): Made static.\n\t(objc_encoding_init): New.\n\t(encode_field_decl): Existing function renamed to encode_field and\n\tmade static.  New encode_field_decl wrapper function added.\n\t(encode_aggregate_fields): Update call to encode_field_decl to\n\tcall encode_field.\n\t* objc-next-runtime-abi-02.c (obstack.h): Do not include.\n\t(util_obstack, util_firstobj): Do not declare.\n\t(build_v2_ivar_list_initializer): Updated call to\n\tencode_field_decl.\n\t* objc-runtime-shared-support.c (obstack.h): Do not include.\n\t(util_obstack, util_firstobj): Do not declare.\n\t(build_ivar_list_initializer): Updated call to encode_field_decl.\n\t* objc-act.c (objc_init): Use objc_encoding_init.\n\t* Make-lang.in (objc/objc-runtime-shared-support.o): Do not depend\n\ton OBSTACK_H.\n\t(objc/objc-gnu-runtime-abi-01.o): Likewise.\n\t(objc/objc-next-runtime-abi-01.o): Likewise.\n\t(objc/objc-next-runtime-abi-02.o): Likewise.\n\t(objc/objc-act.o): Likewise.\n\t\nIn gcc/objcp/:\n2011-07-11  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* Make-lang.in (objcp/objc-runtime-shared-support.o): Do not\n\tdepend on OBSTACK_H.\n\t(objcp/objc-gnu-runtime-abi-01.o): Likewise.\n\t(objcp/objc-next-runtime-abi-01.o): Likewise.\n\t(objcp/objc-next-runtime-abi-02.o): Likewise.\n\t(objcp/objcp-act.o): Likewise.\n\nFrom-SVN: r176139", "tree": {"sha": "024ae2d04e639fefc111192785d29753f43e2712", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/024ae2d04e639fefc111192785d29753f43e2712"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8f18c40371add2ef647d14127cf91b046570bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f18c40371add2ef647d14127cf91b046570bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f18c40371add2ef647d14127cf91b046570bec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f18c40371add2ef647d14127cf91b046570bec/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18970372c2159a1ad63e58f1683a01d2bcf3a86f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18970372c2159a1ad63e58f1683a01d2bcf3a86f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18970372c2159a1ad63e58f1683a01d2bcf3a86f"}], "stats": {"total": 144, "additions": 78, "deletions": 66}, "files": [{"sha": "b5cae8e0de5e8dbeeef3dc24084095d1f406e040", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=a8f18c40371add2ef647d14127cf91b046570bec", "patch": "@@ -1,3 +1,30 @@\n+2011-07-11  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-encoding.h (obstack.h): Do not include.\n+\t(util_obstack, util_firstobj): Do not declare.\n+\t(encode_field_decl): Updated prototype to return a tree and take a\n+\tsingle tree argument.  Updated comments.\n+\t* objc-encoding.c (util_obstack, util_firstobj): Made static.\n+\t(objc_encoding_init): New.\n+\t(encode_field_decl): Existing function renamed to encode_field and\n+\tmade static.  New encode_field_decl wrapper function added.\n+\t(encode_aggregate_fields): Update call to encode_field_decl to\n+\tcall encode_field.\n+\t* objc-next-runtime-abi-02.c (obstack.h): Do not include.\n+\t(util_obstack, util_firstobj): Do not declare.\n+\t(build_v2_ivar_list_initializer): Updated call to\n+\tencode_field_decl.\n+\t* objc-runtime-shared-support.c (obstack.h): Do not include.\n+\t(util_obstack, util_firstobj): Do not declare.\n+\t(build_ivar_list_initializer): Updated call to encode_field_decl.\n+\t* objc-act.c (objc_init): Use objc_encoding_init.\n+\t* Make-lang.in (objc/objc-runtime-shared-support.o): Do not depend\n+\ton OBSTACK_H.\n+\t(objc/objc-gnu-runtime-abi-01.o): Likewise.\n+\t(objc/objc-next-runtime-abi-01.o): Likewise.\n+\t(objc/objc-next-runtime-abi-02.o): Likewise.\n+\t(objc/objc-act.o): Likewise.\n+\t\n 2011-07-04  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tRefactored encoding code into objc-encoding.h and objc-encoding.c."}, {"sha": "f9b3907fe1cd0b0a57925008ebae1ba583713831", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=a8f18c40371add2ef647d14127cf91b046570bec", "patch": "@@ -88,7 +88,6 @@ objc/objc-runtime-shared-support.o : objc/objc-runtime-shared-support.c \\\n    gt-objc-objc-runtime-shared-support.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    objc/objc-encoding.h \\\n    objc/objc-next-metadata-tags.h \\\n    objc/objc-runtime-shared-support.h\n@@ -97,7 +96,6 @@ objc/objc-gnu-runtime-abi-01.o: objc/objc-gnu-runtime-abi-01.c \\\n    gt-objc-objc-gnu-runtime-abi-01.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    toplev.h \\\n    objc/objc-encoding.h \\\n    objc/objc-runtime-hooks.h \\\n@@ -107,7 +105,6 @@ objc/objc-next-runtime-abi-01.o: objc/objc-next-runtime-abi-01.c \\\n    gt-objc-objc-next-runtime-abi-01.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    $(TARGET_H) output.h \\\n    objc/objc-encoding.h \\\n    objc/objc-next-metadata-tags.h \\\n@@ -118,7 +115,6 @@ objc/objc-next-runtime-abi-02.o: objc/objc-next-runtime-abi-02.c \\\n    gt-objc-objc-next-runtime-abi-02.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    $(TARGET_H) \\\n    objc/objc-encoding.h \\\n    objc/objc-next-metadata-tags.h \\\n@@ -129,7 +125,6 @@ objc/objc-act.o : objc/objc-act.c \\\n    gt-objc-objc-act.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    toplev.h $(FUNCTION_H) output.h debug.h $(LANGHOOKS_DEF_H) \\\n    $(HASHTAB_H) $(GIMPLE_H) \\\n    $(C_PRAGMA_H) $(C_TARGET_H) \\"}, {"sha": "72a486d9c832521fcc7ff35baa66305c72b2b74d", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=a8f18c40371add2ef647d14127cf91b046570bec", "patch": "@@ -381,9 +381,7 @@ objc_init (void)\n   /* Set up stuff used by FE parser and all runtimes.  */\n   errbuf = XNEWVEC (char, 1024 * 10);\n   hash_init ();\n-  /* TODO: Use objc_encoding_init().  */\n-  gcc_obstack_init (&util_obstack);\n-  util_firstobj = (char *) obstack_finish (&util_obstack);\n+  objc_encoding_init ();\n   /* ... and then check flags and set-up for the selected runtime ... */\n   if (flag_next_runtime && flag_objc_abi >= 2)\n     ok = objc_next_runtime_abi_02_init (&runtime);"}, {"sha": "10171fdd2c59214c7e78e5eb1b284714fcbda417", "filename": "gcc/objc/objc-encoding.c", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-encoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-encoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-encoding.c?ref=a8f18c40371add2ef647d14127cf91b046570bec", "patch": "@@ -53,18 +53,24 @@ along with GCC; see the file COPYING3.  If not see\n /* Set up for use of obstacks.  */\n #include \"obstack.h\"\n \n-/* This obstack is used to accumulate the encoding of a data type.\n-   TODO: Make this static.  */\n-struct obstack util_obstack;\n+/* This obstack is used to accumulate the encoding of a data type.  */\n+static struct obstack util_obstack;\n \n /* This points to the beginning of obstack contents, so we can free\n-   the whole contents.  TODO: Make this static.  */\n-char *util_firstobj;\n+   the whole contents.  */\n+static char *util_firstobj;\n+\n+void objc_encoding_init (void)\n+{\n+  gcc_obstack_init (&util_obstack);\n+  util_firstobj = (char *) obstack_finish (&util_obstack);\n+}\n \n int generating_instance_variables = 0;\n \n static void encode_type_qualifiers (tree);\n static void encode_type (tree, int, int);\n+static void encode_field (tree field_decl, int curtype, int format);\n \n static tree\n objc_method_parm_type (tree type)\n@@ -470,7 +476,7 @@ encode_aggregate_fields (tree type, bool pointed_to, int curtype, int format)\n \t  obstack_1grow (&util_obstack, '\"');\n         }\n \n-      encode_field_decl (field, curtype, format);\n+      encode_field (field, curtype, format);\n     }\n }\n \n@@ -802,8 +808,8 @@ encode_gnu_bitfield (int position, tree type, int size)\n   obstack_grow (&util_obstack, buffer, strlen (buffer));\n }\n \n-void\n-encode_field_decl (tree field_decl, int curtype, int format)\n+static void\n+encode_field (tree field_decl, int curtype, int format)\n {\n #ifdef OBJCPLUS\n   /* C++ static members, and things that are not fields at all,\n@@ -828,6 +834,25 @@ encode_field_decl (tree field_decl, int curtype, int format)\n     encode_type (TREE_TYPE (field_decl), curtype, format);\n }\n \n+tree\n+encode_field_decl (tree field_decl)\n+{\n+  tree result;\n+\n+  encode_field (field_decl,\n+\t\tobstack_object_size (&util_obstack),\n+\t\tOBJC_ENCODE_DONT_INLINE_DEFS);\n+  \n+  /* Null terminate string.  */\n+  obstack_1grow (&util_obstack, 0);\n+\n+  /* Get identifier for the string.  */\n+  result = get_identifier (XOBFINISH (&util_obstack, char *));\n+  obstack_free (&util_obstack, util_firstobj);\n+\n+  return result;\n+}\n+\n /* This routine encodes the attribute of the input PROPERTY according\n    to following formula:\n "}, {"sha": "18ea4d2e5ff9dadbdd3dc0f5f890ee75dfdbfb67", "filename": "gcc/objc/objc-encoding.h", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-encoding.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-encoding.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-encoding.h?ref=a8f18c40371add2ef647d14127cf91b046570bec", "patch": "@@ -22,25 +22,10 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_OBJC_ENCODING_H\n #define GCC_OBJC_ENCODING_H\n \n-/* TODO: Hide the following obstack code in objc-encoding.c, and have\n-   a objc_encoding_init() that is called by objc_init() to set them\n-   up.  */\n-\n-/* Set up for use of obstacks.  */\n-#include \"obstack.h\"\n-\n-/* This obstack is used to accumulate the encoding of a data type.  */\n-extern struct obstack util_obstack;\n-\n-/* This points to the beginning of obstack contents, so we can free\n-   the whole contents.  */\n-extern char *util_firstobj;\n-\n-/* This will be used to initialize the obstacks used by encoding.  It\n+/* This is used to initialize the obstacks used by encoding.  It\n    should be called before any encoding function is used.  It is\n    usually done in objc_init().  */\n-/* extern void objc_encoding_init (void); */\n-\n+extern void objc_encoding_init (void);\n \n /* Encode a method prototype.  The format is described in\n    gcc/doc/objc.texi, section 'Method signatures'.  */\n@@ -57,8 +42,10 @@ extern tree objc_build_encode_expr (tree type);\n /* Encode the attributes of a property.  */\n extern tree objc_v2_encode_prop_attr (tree property);\n \n-/* Encode the type of a field.  */\n-extern void encode_field_decl (tree field_decl, int curtype, int format);\n+/* Encode the type of a field.  Return an identifier with the type\n+   encoding for the field.  The type encoding is a null-terminated\n+   string.  */\n+extern tree encode_field_decl (tree field_decl);\n \n /* Tells \"encode_pointer/encode_aggregate\" whether we are generating\n    type descriptors for instance variables (as opposed to methods)."}, {"sha": "8bdd7f1c1901811290582e7cf4d970cf2200f117", "filename": "gcc/objc/objc-next-runtime-abi-02.c", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c?ref=a8f18c40371add2ef647d14127cf91b046570bec", "patch": "@@ -50,13 +50,8 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"ggc.h\"\n #include \"target.h\"\n-#include \"obstack.h\"\n #include \"tree-iterator.h\"\n \n-/* These are only used for encoding ivars.  */\n-extern struct obstack util_obstack;\n-extern char *util_firstobj;\n-\n #include \"objc-runtime-hooks.h\"\n #include \"objc-runtime-shared-support.h\"\n #include \"objc-encoding.h\"\n@@ -2852,15 +2847,9 @@ build_v2_ivar_list_initializer (tree class_name, tree type, tree field_decl)\n \t\t\t\t\t\tmeth_var_names));\n \n       /* Set type.  */\n-      encode_field_decl (field_decl,\n-\t\t\t obstack_object_size (&util_obstack),\n-\t\t\t OBJC_ENCODE_DONT_INLINE_DEFS);\n-      /* Null terminate string.  */\n-      obstack_1grow (&util_obstack, 0);\n-      id = add_objc_string (get_identifier (XOBFINISH (&util_obstack, char *)),\n+      id = add_objc_string (encode_field_decl (field_decl),\n                             meth_var_types);\n       CONSTRUCTOR_APPEND_ELT (ivar, NULL_TREE, id);\n-      obstack_free (&util_obstack, util_firstobj);\n \n       /* Set alignment.  */\n       val = DECL_ALIGN_UNIT (field_decl);"}, {"sha": "7d478d97beafc84778b8951ac47548198acd7e4c", "filename": "gcc/objc/objc-runtime-shared-support.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-runtime-shared-support.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjc%2Fobjc-runtime-shared-support.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-runtime-shared-support.c?ref=a8f18c40371add2ef647d14127cf91b046570bec", "patch": "@@ -41,12 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"objcp-decl.h\"\n #endif  /* OBJCPLUS */\n \n-#include \"obstack.h\"\n-\n-/* These are only used for encoding ivars.  */\n-extern struct obstack util_obstack;\n-extern char *util_firstobj;\n-\n /* Hooks for string decls etc.  */\n #include \"objc-runtime-hooks.h\"\n \n@@ -551,16 +545,9 @@ build_ivar_list_initializer (tree type, tree field_decl)\n \tCONSTRUCTOR_APPEND_ELT (ivar, NULL_TREE, build_int_cst (NULL_TREE, 0));\n \n       /* Set type.  */\n-      encode_field_decl (field_decl,\n-\t\t\t obstack_object_size (&util_obstack),\n-\t\t\t OBJC_ENCODE_DONT_INLINE_DEFS);\n-\n-      /* Null terminate string.  */\n-      obstack_1grow (&util_obstack, 0);\n-      id = add_objc_string (get_identifier (XOBFINISH (&util_obstack, char *)),\n+      id = add_objc_string (encode_field_decl (field_decl),\n                             meth_var_types);\n       CONSTRUCTOR_APPEND_ELT (ivar, NULL_TREE, id);\n-      obstack_free (&util_obstack, util_firstobj);\n \n       /* Set offset.  */\n       CONSTRUCTOR_APPEND_ELT (ivar, NULL_TREE, byte_position (field_decl));"}, {"sha": "51ab2a5016a44763cebbce61006c4b94e658acba", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=a8f18c40371add2ef647d14127cf91b046570bec", "patch": "@@ -1,3 +1,12 @@\n+2011-07-11  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* Make-lang.in (objcp/objc-runtime-shared-support.o): Do not\n+\tdepend on OBSTACK_H.\n+\t(objcp/objc-gnu-runtime-abi-01.o): Likewise.\n+\t(objcp/objc-next-runtime-abi-01.o): Likewise.\n+\t(objcp/objc-next-runtime-abi-02.o): Likewise.\n+\t(objcp/objcp-act.o): Likewise.\n+\n 2011-07-04  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* Make-lang.in (OBJCXX_OBJS): Added objc-encoding.o."}, {"sha": "3dac1735e157445aa6293a9f8463b62dcad3626d", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f18c40371add2ef647d14127cf91b046570bec/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=a8f18c40371add2ef647d14127cf91b046570bec", "patch": "@@ -92,7 +92,6 @@ objcp/objc-runtime-shared-support.o : objc/objc-runtime-shared-support.c \\\n    gt-objc-objc-runtime-shared-support.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    objc/objc-encoding.h \\\n    objc/objc-next-metadata-tags.h \\\n    objc/objc-runtime-shared-support.h \\\n@@ -104,7 +103,6 @@ objcp/objc-gnu-runtime-abi-01.o: objc/objc-gnu-runtime-abi-01.c \\\n    gt-objc-objc-gnu-runtime-abi-01.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    toplev.h \\\n    objc/objc-encoding.h \\\n    objc/objc-runtime-hooks.h \\\n@@ -117,7 +115,6 @@ objcp/objc-next-runtime-abi-01.o: objc/objc-next-runtime-abi-01.c \\\n    gt-objc-objc-next-runtime-abi-01.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    $(TARGET_H) output.h \\\n    objc/objc-encoding.h \\\n    objc/objc-next-metadata-tags.h \\\n@@ -131,7 +128,6 @@ objcp/objc-next-runtime-abi-02.o: objc/objc-next-runtime-abi-02.c \\\n    gt-objc-objc-next-runtime-abi-02.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    $(TARGET_H) \\\n    objc/objc-encoding.h \\\n    objc/objc-next-metadata-tags.h \\\n@@ -148,7 +144,6 @@ objcp/objcp-act.o : objc/objc-act.c \\\n    gt-objc-objc-act.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_H) $(FLAGS_H) input.h \\\n-   $(OBSTACK_H) \\\n    toplev.h $(FUNCTION_H) output.h debug.h $(LANGHOOKS_DEF_H) \\\n    $(HASHTAB_H) $(GIMPLE_H) \\\n    $(RTL_H) $(EXPR_H) $(TARGET_H) \\"}]}