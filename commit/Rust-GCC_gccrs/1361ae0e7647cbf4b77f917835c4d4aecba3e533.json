{"sha": "1361ae0e7647cbf4b77f917835c4d4aecba3e533", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM2MWFlMGU3NjQ3Y2JmNGI3N2Y5MTc4MzVjNGQ0YWVjYmEzZTUzMw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2019-12-30T21:34:35Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2019-12-30T21:34:35Z"}, "message": "Refine definitions for wchar_t/wint_t on VxWorks\n\nThis change refines the VxWorks macro definitions configuring\nwchar_t to accommodate the VxWorks7 environment, where wchar_t\nis now typically a 32bit type.\n\nWe also ensure that the definitions for wint_t are always based\non those for wchar_t, so the two remain in sync in environments\nwhere WCHAR_TYPE is redefined for a specific CPU architecture.\n\n2019-12-30  Alexandre Oliva  <oliva@adacore.com>\n           Olivier Hainque  <hainque@adacore.com>\n\n\t* config/vx-common.h (WCHAR_TYPE_SIZE): 32 on VxWorks 7.\n\t(WCHAR_TYPE): Pick accordingly.\n\t(WINT_TYPE_SIZE): Define in terms of WCHAR_TYPE_SIZE.\n\t(WINT_TYPE): Define in terms of WCHAR_TYPE.\n\nCo-Authored-By: Olivier Hainque <hainque@adacore.com>\n\nFrom-SVN: r279780", "tree": {"sha": "7c9e9d0fdbb8143a6b7f96fae688fd9d2a83ff89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c9e9d0fdbb8143a6b7f96fae688fd9d2a83ff89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1361ae0e7647cbf4b77f917835c4d4aecba3e533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1361ae0e7647cbf4b77f917835c4d4aecba3e533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1361ae0e7647cbf4b77f917835c4d4aecba3e533", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1361ae0e7647cbf4b77f917835c4d4aecba3e533/comments", "author": null, "committer": null, "parents": [{"sha": "4e6bcaa6622f03a709bf0472ffda2f2bd2e17682", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e6bcaa6622f03a709bf0472ffda2f2bd2e17682", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e6bcaa6622f03a709bf0472ffda2f2bd2e17682"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "252e921d22821d717349827d9dacd3bacf83b252", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1361ae0e7647cbf4b77f917835c4d4aecba3e533/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1361ae0e7647cbf4b77f917835c4d4aecba3e533/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1361ae0e7647cbf4b77f917835c4d4aecba3e533", "patch": "@@ -1,3 +1,11 @@\n+2019-12-30  Alexandre Oliva  <oliva@adacore.com>\n+            Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/vx-common.h (WCHAR_TYPE_SIZE): 32 on VxWorks 7.\n+\t(WCHAR_TYPE): Pick accordingly.\n+\t(WINT_TYPE_SIZE): Define in terms of WCHAR_TYPE_SIZE.\n+\t(WINT_TYPE): Define in terms of WCHAR_TYPE.\n+\n 2019-12-30  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/vx-common.h: Minor reorganization and add"}, {"sha": "594db5122ac3052d36219b679ecd20733cfe89cd", "filename": "gcc/config/vx-common.h", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1361ae0e7647cbf4b77f917835c4d4aecba3e533/gcc%2Fconfig%2Fvx-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1361ae0e7647cbf4b77f917835c4d4aecba3e533/gcc%2Fconfig%2Fvx-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvx-common.h?ref=1361ae0e7647cbf4b77f917835c4d4aecba3e533", "patch": "@@ -43,17 +43,32 @@ along with GCC; see the file COPYING3.  If not see\n \n /* ----------------------- Common type descriptions -----------------------  */\n \n-/* VxWorks uses wchar_t == unsigned short (UCS2) on all architectures.  */\n+/* Regardless of the target architecture, VxWorks uses a signed 32bit\n+   integer for wchar_t starting with vx7 SR06xx.  An unsigned short\n+   otherwise.  */\n+#if TARGET_VXWORKS7\n+\n+#undef WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE 32\n #undef WCHAR_TYPE\n-#define WCHAR_TYPE \"short unsigned int\"\n+#define WCHAR_TYPE (TARGET_VXWORKS64 ? \"int\" : \"long int\")\n+\n+#else\n+\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 16\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE \"short unsigned int\"\n \n-/* Likewise wint_t.  */\n-#undef WINT_TYPE\n-#define WINT_TYPE \"short unsigned int\"\n+#endif\n+\n+/* The VxWorks headers base wint_t on the definitions used for wchar_t.\n+   Do the same here to make sure they remain in sync, in case WCHAR_TYPE\n+   gets redefined for a specific CPU architecture.  */\n #undef WINT_TYPE_SIZE\n-#define WINT_TYPE_SIZE 16\n+#define WINT_TYPE_SIZE WCHAR_TYPE_SIZE\n+#undef WINT_TYPE\n+#define WINT_TYPE WCHAR_TYPE\n \n /* ---------------------- Debug and unwind info formats ------------------  */\n "}]}