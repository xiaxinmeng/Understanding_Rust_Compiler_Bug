{"sha": "88cffa1a07d04187be1975238dfdca51a8ef5d65", "node_id": "C_kwDOANBUbNoAKDg4Y2ZmYTFhMDdkMDQxODdiZTE5NzUyMzhkZmRjYTUxYThlZjVkNjU", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-04-01T15:28:37Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-04-04T11:37:19Z"}, "message": "[libgomp/testsuite] Fix libgomp.fortran/examples-4/declare_target-{1,2}.f90\n\nThe test-cases libgomp.fortran/examples-4/declare_target-{1,2}.f90 mean to\nset an nvptx-specific limit using offload_target_nvptx, but also change\nbehaviour for amd.\n\nThat is, there is now a difference in behaviour between:\n- a compiler configured for GCN offloading, and\n- a compiler configured for both GCN and nvptx offloading.\n\nFix this by using instead on_device_arch_nvptx.\n\nTested on x86_64 with nvptx accelerator.\n\nlibgomp/ChangeLog:\n\n2022-04-04  Tom de Vries  <tdevries@suse.de>\n\n\t* testsuite/libgomp.fortran/examples-4/declare_target-1.f90: Use\n\ton_device_arch_nvptx instead of offload_target_nvptx.\n\t* testsuite/libgomp.fortran/examples-4/declare_target-2.f90: Same.", "tree": {"sha": "d98d105622aad833f00c9c393ba7b0e98e948081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d98d105622aad833f00c9c393ba7b0e98e948081"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88cffa1a07d04187be1975238dfdca51a8ef5d65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88cffa1a07d04187be1975238dfdca51a8ef5d65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88cffa1a07d04187be1975238dfdca51a8ef5d65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88cffa1a07d04187be1975238dfdca51a8ef5d65/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "376cf6d19cdcb791a4257bc1cafabfae89227683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/376cf6d19cdcb791a4257bc1cafabfae89227683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/376cf6d19cdcb791a4257bc1cafabfae89227683"}], "stats": {"total": 62, "additions": 38, "deletions": 24}, "files": [{"sha": "5fbf03606ca3f081a6946043563633f45446c22a", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-1.f90", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88cffa1a07d04187be1975238dfdca51a8ef5d65/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88cffa1a07d04187be1975238dfdca51a8ef5d65/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90?ref=88cffa1a07d04187be1975238dfdca51a8ef5d65", "patch": "@@ -1,16 +1,6 @@\n ! { dg-do run }\n-! { dg-additional-options \"-cpp\" }\n-! Reduced from 25 to 23, otherwise execution runs out of thread stack on\n-! Nvidia Titan V.\n-! Reduced from 23 to 22, otherwise execution runs out of thread stack on\n-! Nvidia T400 (2GB variant), when run with GOMP_NVPTX_JIT=-O0.\n-! Reduced from 22 to 20, otherwise execution runs out of thread stack on\n-! Nvidia RTX A2000 (6GB variant), when run with GOMP_NVPTX_JIT=-O0.\n-! { dg-additional-options \"-DREC_DEPTH=20\" { target { offload_target_nvptx } } } */\n-\n-#ifndef REC_DEPTH\n-#define REC_DEPTH 25\n-#endif\n+! { dg-additional-sources ../on_device_arch.c }\n+! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n \n module e_53_1_mod\n   integer :: THRESHOLD = 20\n@@ -38,6 +28,23 @@ integer function fib_wrapper (n)\n \n program e_53_1\n   use e_53_1_mod, only : fib, fib_wrapper\n+  integer :: REC_DEPTH = 25\n+\n+  interface\n+    integer function on_device_arch_nvptx() bind(C)\n+    end function on_device_arch_nvptx\n+  end interface\n+\n+  if (on_device_arch_nvptx () /= 0) then\n+     ! Reduced from 25 to 23, otherwise execution runs out of thread stack on\n+     ! Nvidia Titan V.\n+     ! Reduced from 23 to 22, otherwise execution runs out of thread stack on\n+     ! Nvidia T400 (2GB variant), when run with GOMP_NVPTX_JIT=-O0.\n+     ! Reduced from 22 to 20, otherwise execution runs out of thread stack on\n+     ! Nvidia RTX A2000 (6GB variant), when run with GOMP_NVPTX_JIT=-O0.\n+     REC_DEPTH = 20\n+  end if\n+\n   if (fib (15) /= fib_wrapper (15)) stop 1\n   if (fib (REC_DEPTH) /= fib_wrapper (REC_DEPTH)) stop 2\n end program"}, {"sha": "1bcdac97e233023f91b79ceeeb28ce4f9ceb823c", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-2.f90", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88cffa1a07d04187be1975238dfdca51a8ef5d65/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88cffa1a07d04187be1975238dfdca51a8ef5d65/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90?ref=88cffa1a07d04187be1975238dfdca51a8ef5d65", "patch": "@@ -1,20 +1,27 @@\n ! { dg-do run }\n-! { dg-additional-options \"-cpp\" }\n-! Reduced from 25 to 23, otherwise execution runs out of thread stack on\n-! Nvidia Titan V.\n-! Reduced from 23 to 22, otherwise execution runs out of thread stack on\n-! Nvidia T400 (2GB variant), when run with GOMP_NVPTX_JIT=-O0.\n-! Reduced from 22 to 18, otherwise execution runs out of thread stack on\n-! Nvidia RTX A2000 (6GB variant), when run with GOMP_NVPTX_JIT=-O0.\n-! { dg-additional-options \"-DREC_DEPTH=18\" { target { offload_target_nvptx } } } */\n-\n-#ifndef REC_DEPTH\n-#define REC_DEPTH 25\n-#endif\n+! { dg-additional-sources ../on_device_arch.c }\n+! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n \n program e_53_2\n   !$omp declare target (fib)\n   integer :: x, fib\n+  integer :: REC_DEPTH = 25\n+\n+  interface\n+    integer function on_device_arch_nvptx() bind(C)\n+    end function on_device_arch_nvptx\n+  end interface\n+\n+  if (on_device_arch_nvptx () /= 0) then\n+     ! Reduced from 25 to 23, otherwise execution runs out of thread stack on\n+     ! Nvidia Titan V.\n+     ! Reduced from 23 to 22, otherwise execution runs out of thread stack on\n+     ! Nvidia T400 (2GB variant), when run with GOMP_NVPTX_JIT=-O0.\n+     ! Reduced from 22 to 18, otherwise execution runs out of thread stack on\n+     ! Nvidia RTX A2000 (6GB variant), when run with GOMP_NVPTX_JIT=-O0.\n+     REC_DEPTH = 18\n+  end if\n+\n   !$omp target map(from: x)\n     x = fib (REC_DEPTH)\n   !$omp end target"}]}