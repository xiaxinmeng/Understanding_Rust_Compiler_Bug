{"sha": "acbce66755fe7b7e252103c12102ef5d8b193321", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNiY2U2Njc1NWZlN2I3ZTI1MjEwM2MxMjEwMmVmNWQ4YjE5MzMyMQ==", "commit": {"author": {"name": "Ken Raeburn", "email": "raeburn@cygnus.com", "date": "1998-02-26T13:45:45Z"}, "committer": {"name": "Ken Raeburn", "email": "raeburn@gcc.gnu.org", "date": "1998-02-26T13:45:45Z"}, "message": "regclass.c (init_reg_sets): Move init of move cost tables...\n\n* regclass.c (init_reg_sets): Move init of move cost tables...\n(init_reg_sets_1): ...to here.\n\nFrom-SVN: r18273", "tree": {"sha": "e06f7acdfdfbfffc61e840bf158051154cca6816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e06f7acdfdfbfffc61e840bf158051154cca6816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acbce66755fe7b7e252103c12102ef5d8b193321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbce66755fe7b7e252103c12102ef5d8b193321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acbce66755fe7b7e252103c12102ef5d8b193321", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbce66755fe7b7e252103c12102ef5d8b193321/comments", "author": null, "committer": null, "parents": [{"sha": "5cd4989aa1eb12c71d7d8555ccdf59a1ff974e6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd4989aa1eb12c71d7d8555ccdf59a1ff974e6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd4989aa1eb12c71d7d8555ccdf59a1ff974e6a"}], "stats": {"total": 71, "additions": 38, "deletions": 33}, "files": [{"sha": "ccd60ef8186f7af31609e8eb1385fc04c9d55939", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbce66755fe7b7e252103c12102ef5d8b193321/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbce66755fe7b7e252103c12102ef5d8b193321/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acbce66755fe7b7e252103c12102ef5d8b193321", "patch": "@@ -1,3 +1,8 @@\n+1998-02-26  Ken Raeburn  <raeburn@cygnus.com>\n+\n+\t* regclass.c (init_reg_sets): Move init of move cost tables...\n+\t(init_reg_sets_1): ...to here.\n+\n Thu Feb 26 00:13:21 1998  Ian Lance Taylor  <ian@cygnus.com>\n \n \t* choose-temp.c: Fix handling of sys/file.h to work in libiberty."}, {"sha": "d43940d6976b011881c73503c056a7768449a0e9", "filename": "gcc/regclass.c", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbce66755fe7b7e252103c12102ef5d8b193321/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbce66755fe7b7e252103c12102ef5d8b193321/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=acbce66755fe7b7e252103c12102ef5d8b193321", "patch": "@@ -318,38 +318,6 @@ init_reg_sets ()\n \t}\n     }\n \n-  /* Initialize the move cost table.  Find every subset of each class\n-     and take the maximum cost of moving any subset to any other.  */\n-\n-  for (i = 0; i < N_REG_CLASSES; i++)\n-    for (j = 0; j < N_REG_CLASSES; j++)\n-      {\n-\tint cost = i == j ? 2 : REGISTER_MOVE_COST (i, j);\n-\tenum reg_class *p1, *p2;\n-\n-\tfor (p2 = &reg_class_subclasses[j][0]; *p2 != LIM_REG_CLASSES; p2++)\n-\t  if (*p2 != i)\n-\t    cost = MAX (cost, REGISTER_MOVE_COST (i, *p2));\n-\n-\tfor (p1 = &reg_class_subclasses[i][0]; *p1 != LIM_REG_CLASSES; p1++)\n-\t  {\n-\t    if (*p1 != j)\n-\t      cost = MAX (cost, REGISTER_MOVE_COST (*p1, j));\n-\n-\t    for (p2 = &reg_class_subclasses[j][0];\n-\t\t *p2 != LIM_REG_CLASSES; p2++)\n-\t      if (*p1 != *p2)\n-\t\tcost = MAX (cost, REGISTER_MOVE_COST (*p1, *p2));\n-\t  }\n-\n-\tmove_cost[i][j] = cost;\n-\n-\tif (reg_class_subset_p (i, j))\n-\t  cost = 0;\n-\n-\tmay_move_cost[i][j] = cost;\n-      }\n-\n   /* Do any additional initialization regsets may need */\n   INIT_ONCE_REG_SET ();\n }\n@@ -360,7 +328,7 @@ init_reg_sets ()\n static void\n init_reg_sets_1 ()\n {\n-  register int i;\n+  register int i, j;\n \n   /* This macro allows the fixed or call-used registers\n      to depend on target flags.  */\n@@ -393,6 +361,38 @@ init_reg_sets_1 ()\n       if (CLASS_LIKELY_SPILLED_P (REGNO_REG_CLASS (i)))\n \tSET_HARD_REG_BIT (losing_caller_save_reg_set, i);\n     }\n+\n+  /* Initialize the move cost table.  Find every subset of each class\n+     and take the maximum cost of moving any subset to any other.  */\n+\n+  for (i = 0; i < N_REG_CLASSES; i++)\n+    for (j = 0; j < N_REG_CLASSES; j++)\n+      {\n+\tint cost = i == j ? 2 : REGISTER_MOVE_COST (i, j);\n+\tenum reg_class *p1, *p2;\n+\n+\tfor (p2 = &reg_class_subclasses[j][0]; *p2 != LIM_REG_CLASSES; p2++)\n+\t  if (*p2 != i)\n+\t    cost = MAX (cost, REGISTER_MOVE_COST (i, *p2));\n+\n+\tfor (p1 = &reg_class_subclasses[i][0]; *p1 != LIM_REG_CLASSES; p1++)\n+\t  {\n+\t    if (*p1 != j)\n+\t      cost = MAX (cost, REGISTER_MOVE_COST (*p1, j));\n+\n+\t    for (p2 = &reg_class_subclasses[j][0];\n+\t\t *p2 != LIM_REG_CLASSES; p2++)\n+\t      if (*p1 != *p2)\n+\t\tcost = MAX (cost, REGISTER_MOVE_COST (*p1, *p2));\n+\t  }\n+\n+\tmove_cost[i][j] = cost;\n+\n+\tif (reg_class_subset_p (i, j))\n+\t  cost = 0;\n+\n+\tmay_move_cost[i][j] = cost;\n+      }\n }\n \n /* Compute the table of register modes."}]}