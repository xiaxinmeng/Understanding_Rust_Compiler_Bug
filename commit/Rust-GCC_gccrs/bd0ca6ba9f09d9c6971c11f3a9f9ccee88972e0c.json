{"sha": "bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQwY2E2YmE5ZjA5ZDljNjk3MWMxMWYzYTlmOWNjZWU4ODk3MmUwYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-01-14T11:13:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-01-14T11:13:09Z"}, "message": "fixlib.h (verbose_level, [...]): Mark extern.\n\n2013-01-14  Richard Biener  <rguenther@suse.de>\n\n\t* fixlib.h (verbose_level, fixinc_mode): Mark extern.\n\nFrom-SVN: r195142", "tree": {"sha": "89171f440f6d1f9567832f39ca3d9b2609e95cd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89171f440f6d1f9567832f39ca3d9b2609e95cd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ffc195810f00c4fe4552910c0c37c3572dfb918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffc195810f00c4fe4552910c0c37c3572dfb918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ffc195810f00c4fe4552910c0c37c3572dfb918"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "d518b4d315bd914c02b5c0262988d29991c240ee", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c", "patch": "@@ -1,3 +1,7 @@\n+2013-01-14  Richard Biener  <rguenther@suse.de>\n+\n+\t* fixlib.h (verbose_level, fixinc_mode): Mark extern.\n+\n 2012-10-29  Bruce Korb  <bkorb@gnu.org>\n \n \t* README: testing wrap and replacement fixes is pointless."}, {"sha": "45fe5a3cdb23adaf026320e46101249d000121ec", "filename": "fixincludes/fixlib.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c/fixincludes%2Ffixlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c/fixincludes%2Ffixlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixlib.h?ref=bd0ca6ba9f09d9c6971c11f3a9f9ccee88972e0c", "patch": "@@ -223,7 +223,7 @@ typedef enum {\n   VERB_EVERYTHING\n } te_verbose;\n \n-te_verbose  verbose_level;\n+extern te_verbose  verbose_level;\n \n #define VLEVEL(l)  ((unsigned int) verbose_level >= (unsigned int) l)\n #define NOT_SILENT VLEVEL(VERB_FIXES)\n@@ -233,7 +233,7 @@ typedef enum {\n   TESTING_ON  = 1\n } fixinc_mode_t;\n \n-fixinc_mode_t fixinc_mode;\n+extern fixinc_mode_t fixinc_mode;\n \n #ifdef HAVE_MMAP_FILE\n #define UNLOAD_DATA() do { if (curr_data_mapped) { \\"}]}