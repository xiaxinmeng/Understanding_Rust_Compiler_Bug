{"sha": "47cf37f924571be13c4d4a911acafc9363daf9c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdjZjM3ZjkyNDU3MWJlMTNjNGQ0YTkxMWFjYWZjOTM2M2RhZjljMA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-04-07T23:07:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-07T23:07:06Z"}, "message": "h8300.c (h8300_adjust_insn_length): Avoid trying to recognize USE, CLOBBER or SEQUENCE insns.\n\n       * h8300.c (h8300_adjust_insn_length): Avoid trying to recognize\n       USE, CLOBBER or SEQUENCE insns.\n       * unroll.c (unroll_loop): For HAVE_cc0 machines, adjust copy_end_luid\n       to account for the uncopied insn that sets cc0 at the end of the loop.\n\nFrom-SVN: r26283", "tree": {"sha": "10383f39e505fddd7e5828eb29ff34a3d902f032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10383f39e505fddd7e5828eb29ff34a3d902f032"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47cf37f924571be13c4d4a911acafc9363daf9c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47cf37f924571be13c4d4a911acafc9363daf9c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47cf37f924571be13c4d4a911acafc9363daf9c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47cf37f924571be13c4d4a911acafc9363daf9c0/comments", "author": null, "committer": null, "parents": [{"sha": "a45f333130536a0dcfb468a6b49e6e81c5fab882", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45f333130536a0dcfb468a6b49e6e81c5fab882", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a45f333130536a0dcfb468a6b49e6e81c5fab882"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "9497b2b08b383c27e997533fecc2bb431c526930", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47cf37f924571be13c4d4a911acafc9363daf9c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47cf37f924571be13c4d4a911acafc9363daf9c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47cf37f924571be13c4d4a911acafc9363daf9c0", "patch": "@@ -13,6 +13,12 @@ Tue Apr  6 17:49:49 1999  Philip Blundell  <pb@nexus.co.uk>\n \n Wed Apr  7 14:07:34 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* h8300.c (h8300_adjust_insn_length): Avoid trying to recognize\n+\tUSE, CLOBBER or SEQUENCE insns.\n+\n+\t* unroll.c (unroll_loop): For HAVE_cc0 machines, adjust copy_end_luid\n+\tto account for the uncopied insn that sets cc0 at the end of the loop.\n+\n \t* unroll.c (copy_loop_body): Always ensure at least two insns\n \tare in the copied loop.\n "}, {"sha": "b181ae0f6216f4f2324a803b4777956f45d12d40", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47cf37f924571be13c4d4a911acafc9363daf9c0/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47cf37f924571be13c4d4a911acafc9363daf9c0/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=47cf37f924571be13c4d4a911acafc9363daf9c0", "patch": "@@ -3033,6 +3033,12 @@ h8300_adjust_insn_length (insn, length)\n {\n   rtx pat;\n \n+  /* We must filter these ou before calling get_attr_adjust_length.  */\n+  if (GET_CODE (PATTERN (insn)) == USE\n+      || GET_CODE (PATTERN (insn)) == CLOBBER\n+      || GET_CODE (PATTERN (insn)) == SEQUENCE)\n+    return 0;\n+\n   if (get_attr_adjust_length (insn) == ADJUST_LENGTH_NO)\n     return 0;\n "}, {"sha": "f1080aae701f9ba8f0e5f8960ebb83bd860f1e62", "filename": "gcc/unroll.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47cf37f924571be13c4d4a911acafc9363daf9c0/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47cf37f924571be13c4d4a911acafc9363daf9c0/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=47cf37f924571be13c4d4a911acafc9363daf9c0", "patch": "@@ -790,6 +790,14 @@ unroll_loop (loop_end, insn_count, loop_start, end_insert_before,\n        since it will also be used outside the loop.  */\n     if (GET_CODE (copy_end) == JUMP_INSN)\n       copy_end_luid--;\n+\n+    /* If we have a target that uses cc0, then we also must not duplicate\n+       the insn that sets cc0 before the jump insn.  */\n+#ifdef HAVE_cc0\n+    if (GET_CODE (copy_end) == JUMP_INSN)\n+      copy_end_luid--;\n+#endif\n+\n     /* If copy_start points to the NOTE that starts the loop, then we must\n        use the next luid, because invariant pseudo-regs moved out of the loop\n        have their lifetimes modified to start here, but they are not safe"}]}