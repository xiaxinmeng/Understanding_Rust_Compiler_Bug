{"sha": "a95f708ec32470ae773950928c3fb1962d0ec86e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk1ZjcwOGVjMzI0NzBhZTc3Mzk1MDkyOGMzZmIxOTYyZDBlYzg2ZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-05-22T10:35:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T10:35:33Z"}, "message": "sem_ch3.adb, [...]: Remove incorrect hyphen in non-binary.\n\n2015-05-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, sem_intr.adb, exp_ch4.adb, s-rannum.adb,\n\tsem_eval.adb, s-fatgen.adb, s-expmod.ads: Remove incorrect hyphen in\n\tnon-binary.\n\t* exp_util.adb: Add comment.\n\t* osint-c.ads, osint-c.adb (Set_Library_Info_Name): Move from spec to\n\tbody.\n\t(Set_File_Name): New name for the above.\n\t(Create_C_File, Create_H_File, Write_C_File_Info, Write_H_File_Info,\n\tClose_C_File, Close_H_File): New procedure.\n\t* osint.adb: Minor reformatting.\n\t* osint.ads: Minor comment updates.\n\nFrom-SVN: r223540", "tree": {"sha": "fa4c9d7df72ccb3394febcf7e6ee1497f550fec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa4c9d7df72ccb3394febcf7e6ee1497f550fec9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a95f708ec32470ae773950928c3fb1962d0ec86e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95f708ec32470ae773950928c3fb1962d0ec86e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a95f708ec32470ae773950928c3fb1962d0ec86e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95f708ec32470ae773950928c3fb1962d0ec86e/comments", "author": null, "committer": null, "parents": [{"sha": "c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca"}], "stats": {"total": 213, "additions": 161, "deletions": 52}, "files": [{"sha": "fd598d4af197c2558203b8864afeaa4589ac4025", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -1,3 +1,17 @@\n+2015-05-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, sem_intr.adb, exp_ch4.adb, s-rannum.adb,\n+\tsem_eval.adb, s-fatgen.adb, s-expmod.ads: Remove incorrect hyphen in\n+\tnon-binary.\n+\t* exp_util.adb: Add comment.\n+\t* osint-c.ads, osint-c.adb (Set_Library_Info_Name): Move from spec to\n+\tbody.\n+\t(Set_File_Name): New name for the above.\n+\t(Create_C_File, Create_H_File, Write_C_File_Info, Write_H_File_Info,\n+\tClose_C_File, Close_H_File): New procedure.\n+\t* osint.adb: Minor reformatting.\n+\t* osint.ads: Minor comment updates.\n+\n 2015-05-22  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch4.adb: Minor rewording."}, {"sha": "a2b938d311fe913414638cf951b8b2655f31a385", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -7674,7 +7674,7 @@ package body Exp_Ch4 is\n         and then Esize (Root_Type (Exptyp)) <= Esize (Standard_Integer)\n \n         --  This transformation is not applicable for a modular type with a\n-        --  non-binary modulus because we do not handle modular reduction in\n+        --  nonbinary modulus because we do not handle modular reduction in\n         --  a correct manner if we attempt this transformation in this case.\n \n         and then not Non_Binary_Modulus (Typ)\n@@ -7826,8 +7826,8 @@ package body Exp_Ch4 is\n \n       if Is_Modular_Integer_Type (Rtyp) then\n \n-         --  Non-binary case, we call the special exponentiation routine for\n-         --  the non-binary case, converting the argument to Long_Long_Integer\n+         --  Nonbinary case, we call the special exponentiation routine for\n+         --  the nonbinary case, converting the argument to Long_Long_Integer\n          --  and passing the modulus value. Then the result is converted back\n          --  to the base type.\n \n@@ -9078,7 +9078,7 @@ package body Exp_Ch4 is\n       --  where Bits is the shift count mod Esize (the mod operation here\n       --  deals with ludicrous large shift counts, which are apparently OK).\n \n-      --  What about non-binary modulus ???\n+      --  What about nonbinary modulus ???\n \n       declare\n          Loc : constant Source_Ptr := Sloc (N);\n@@ -9131,7 +9131,7 @@ package body Exp_Ch4 is\n       --  where Bits is the shift count mod Esize (the mod operation here\n       --  deals with ludicrous large shift counts, which are apparently OK).\n \n-      --  What about non-binary modulus ???\n+      --  What about nonbinary modulus ???\n \n       declare\n          Loc : constant Source_Ptr := Sloc (N);\n@@ -9268,7 +9268,7 @@ package body Exp_Ch4 is\n       --  to the word size, since in this case (not (Shift_Right (Mask, bits)))\n       --  generates all 1'bits.\n \n-      --  What about non-binary modulus ???\n+      --  What about nonbinary modulus ???\n \n       declare\n          Loc   : constant Source_Ptr := Sloc (N);"}, {"sha": "ccb594b398759452948c72f8345949aaeaad6fd2", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -2658,7 +2658,10 @@ package body Exp_Util is\n \n          Next_Elmt (Prim);\n \n-         --  Raise Program_Error if no primitive found\n+         --  Raise Program_Error if no primitive found. ???This doesn't work as\n+         --  advertised if there are no primitives. But fixing that breaks\n+         --  Is_Init_Proc_Of in Exp_Ch7, which is expecting Empty in some\n+         --  cases.\n \n          if No (Prim) then\n             raise Program_Error;"}, {"sha": "6f53ae366e83cd508e3b5d49d97665e8413a530a", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 92, "deletions": 19, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,30 @@ package body Osint.C is\n    --  output file and Suffix is the desired suffix (dg/rep/xxx for debug/\n    --  repinfo/list file where xxx is specified extension.\n \n+   procedure Set_File_Name (Ext : String);\n+   --  Sets a default file name from the main compiler source name. Ext is\n+   --  the extension, e.g. \"ali\" for a library information file. Used by\n+   --  Create_Output_Library_Info, and by the version of Read_Library_Info that\n+   --  takes a default file name, and also by Create_C_File and Create_H_File.\n+   --  The name is in Name_Buffer (with length in Name_Len) on return.\n+\n+   ------------------\n+   -- Close_C_File --\n+   ------------------\n+\n+   procedure Close_C_File is\n+      Status : Boolean;\n+\n+   begin\n+      Close (Output_FD, Status);\n+\n+      if not Status then\n+         Fail\n+           (\"error while closing file \"\n+            & Get_Name_String (Output_File_Name));\n+      end if;\n+   end Close_C_File;\n+\n    ----------------------\n    -- Close_Debug_File --\n    ----------------------\n@@ -62,6 +86,23 @@ package body Osint.C is\n       end if;\n    end Close_Debug_File;\n \n+   ------------------\n+   -- Close_H_File --\n+   ------------------\n+\n+   procedure Close_H_File is\n+      Status : Boolean;\n+\n+   begin\n+      Close (Output_FD, Status);\n+\n+      if not Status then\n+         Fail\n+           (\"error while closing file \"\n+            & Get_Name_String (Output_File_Name));\n+      end if;\n+   end Close_H_File;\n+\n    ---------------------\n    -- Close_List_File --\n    ---------------------\n@@ -157,6 +198,18 @@ package body Osint.C is\n       return Result;\n    end Create_Auxiliary_File;\n \n+   -------------------\n+   -- Create_C_File --\n+   -------------------\n+\n+   procedure Create_C_File is\n+      Dummy : Boolean;\n+   begin\n+      Set_File_Name (\"c\");\n+      Delete_File (Name_Buffer (1 .. Name_Len), Dummy);\n+      Create_File_And_Check (Output_FD, Text);\n+   end Create_C_File;\n+\n    -----------------------\n    -- Create_Debug_File --\n    -----------------------\n@@ -166,17 +219,28 @@ package body Osint.C is\n       return Create_Auxiliary_File (Src, \"dg\");\n    end Create_Debug_File;\n \n+   -------------------\n+   -- Create_H_File --\n+   -------------------\n+\n+   procedure Create_H_File is\n+      Dummy : Boolean;\n+   begin\n+      Set_File_Name (\"h\");\n+      Delete_File (Name_Buffer (1 .. Name_Len), Dummy);\n+      Create_File_And_Check (Output_FD, Text);\n+   end Create_H_File;\n+\n    ----------------------\n    -- Create_List_File --\n    ----------------------\n \n    procedure Create_List_File (S : String) is\n-      F : File_Name_Type;\n-      pragma Warnings (Off, F);\n+      Dummy : File_Name_Type;\n    begin\n       if S (S'First) = '.' then\n-         F := Create_Auxiliary_File (Current_Main, S (S'First + 1 .. S'Last));\n-\n+         Dummy :=\n+           Create_Auxiliary_File (Current_Main, S (S'First + 1 .. S'Last));\n       else\n          Name_Buffer (1 .. S'Length) := S;\n          Name_Len := S'Length + 1;\n@@ -192,7 +256,7 @@ package body Osint.C is\n    procedure Create_Output_Library_Info is\n       Dummy : Boolean;\n    begin\n-      Set_Library_Info_Name;\n+      Set_File_Name (ALI_Suffix.all);\n       Delete_File (Name_Buffer (1 .. Name_Len), Dummy);\n       Create_File_And_Check (Output_FD, Text);\n    end Create_Output_Library_Info;\n@@ -203,7 +267,7 @@ package body Osint.C is\n \n    procedure Open_Output_Library_Info is\n    begin\n-      Set_Library_Info_Name;\n+      Set_File_Name (ALI_Suffix.all);\n       Open_File_To_Append_And_Check (Output_FD, Text);\n    end Open_Output_Library_Info;\n \n@@ -213,7 +277,6 @@ package body Osint.C is\n \n    procedure Create_Repinfo_File (Src : String) is\n       Discard : File_Name_Type;\n-      pragma Warnings (Off, Discard);\n    begin\n       Name_Buffer (1 .. Src'Length) := Src;\n       Name_Len := Src'Length;\n@@ -263,23 +326,21 @@ package body Osint.C is\n    -- Read_Library_Info --\n    -----------------------\n \n-   --  Version with default file name\n-\n    procedure Read_Library_Info\n      (Name : out File_Name_Type;\n       Text : out Text_Buffer_Ptr)\n    is\n    begin\n-      Set_Library_Info_Name;\n+      Set_File_Name (ALI_Suffix.all);\n       Name := Name_Find;\n       Text := Read_Library_Info (Name, Fatal_Err => False);\n    end Read_Library_Info;\n \n-   ---------------------------\n-   -- Set_Library_Info_Name --\n-   ---------------------------\n+   -------------------\n+   -- Set_File_Name --\n+   -------------------\n \n-   procedure Set_Library_Info_Name is\n+   procedure Set_File_Name (Ext : String) is\n       Dot_Index : Natural;\n \n    begin\n@@ -372,10 +433,10 @@ package body Osint.C is\n       end if;\n \n       Name_Buffer (Dot_Index) := '.';\n-      Name_Buffer (Dot_Index + 1 .. Dot_Index + 3) := ALI_Suffix.all;\n-      Name_Buffer (Dot_Index + 4) := ASCII.NUL;\n-      Name_Len := Dot_Index + 3;\n-   end Set_Library_Info_Name;\n+      Name_Buffer (Dot_Index + 1 .. Dot_Index + Ext'Length) := Ext;\n+      Name_Buffer (Dot_Index + Ext'Length + 1) := ASCII.NUL;\n+      Name_Len := Dot_Index + Ext'Length + 1;\n+   end Set_File_Name;\n \n    ---------------------------------\n    -- Set_Output_Object_File_Name --\n@@ -463,12 +524,24 @@ package body Osint.C is\n       Tree_Write_Initialize (Output_FD);\n    end Tree_Create;\n \n+   -----------------------\n+   -- Write_C_File_Info --\n+   -----------------------\n+\n+   procedure Write_C_File_Info (Info : String) renames Write_Info;\n+\n    -----------------------\n    -- Write_Debug_Info --\n    -----------------------\n \n    procedure Write_Debug_Info (Info : String) renames Write_Info;\n \n+   -----------------------\n+   -- Write_H_File_Info --\n+   -----------------------\n+\n+   procedure Write_H_File_Info (Info : String) renames Write_Info;\n+\n    ------------------------\n    -- Write_Library_Info --\n    ------------------------"}, {"sha": "550d4e58a71ba7b9df4d80ff3e375dcd692f9aea", "filename": "gcc/ada/osint-c.ads", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fosint-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fosint-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.ads?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -116,12 +116,6 @@ package Osint.C is\n    --  information file for the main source file being compiled. See section\n    --  above for a discussion of how library information files are stored.\n \n-   procedure Set_Library_Info_Name;\n-   --  Sets a default ALI file name from the main compiler source name. Used by\n-   --  Create_Output_Library_Info, and by the version of Read_Library_Info that\n-   --  takes a default file name. The name is in Name_Buffer (with length in\n-   --  Name_Len) on return from the call.\n-\n    procedure Create_Output_Library_Info;\n    --  Creates the output library information file for the source file which\n    --  is currently being compiled (i.e. the file which was most recently\n@@ -155,6 +149,34 @@ package Osint.C is\n    --  text is returned in Text. If the file does not exist, then Text is\n    --  set to null.\n \n+   --------------------------\n+   -- C Translation Output --\n+   --------------------------\n+\n+   --  These routines are used by the compiler when the C translation option\n+   --  is activated to write *.c and *.h files to the current object directory.\n+   --  Each routine exists in a C and an H form for the two kinds of files.\n+   --  Only one of these files can be written at a time.\n+\n+   procedure Create_C_File;\n+   procedure Create_H_File;\n+   --  Creates the *.c or *.h file for the source file which is currently\n+   --  being compiled (i.e. the file which was most recently returned by\n+   --  Next_Main_Source).\n+\n+   procedure Write_C_File_Info (Info : String);\n+   procedure Write_H_File_Info (Info : String);\n+   --  Writes the contents of the referenced string to the *.c or *.h file for\n+   --  the main source file currently being compiled (i.e. the file which was\n+   --  most recently opened with a call to Read_Next_File). Info represents\n+   --  a line in the file with a line termination character at the end (which\n+   --  is not present in the info string).\n+\n+   procedure Close_C_File;\n+   procedure Close_H_File;\n+   --  Closes the file created by Create_C_File or Create_H file, flushing any\n+   --  buffers etc. from writes by Write_C_File and Write_H_File;\n+\n    ----------------------\n    -- List File Output --\n    ----------------------"}, {"sha": "6fc9071c88725c77245ebe34f41d3d8c008d48be", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3284,12 +3284,9 @@ package body Osint is\n \n    procedure Write_With_Check (A  : Address; N  : Integer) is\n       Ignore : Boolean;\n-      pragma Warnings (Off, Ignore);\n-\n    begin\n       if N = Write (Output_FD, A, N) then\n          return;\n-\n       else\n          Write_Str (\"error: disk full writing \");\n          Write_Name_Decoded (Output_File_Name);"}, {"sha": "5d25798f0dde5b8a147aa6f080b157ae8c8ba786", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -693,7 +693,8 @@ private\n    --  The suffix used for the target object files\n \n    Output_FD : File_Descriptor;\n-   --  File descriptor for current library info, list, tree, or binder output\n+   --  File descriptor for current library info, list, tree, C, H, or binder\n+   --  output. Only one of these is open at a time, so we need only one FD.\n \n    Output_File_Name : File_Name_Type;\n    --  File_Name_Type for name of open file whose FD is in Output_FD, the name\n@@ -759,8 +760,8 @@ private\n    --  for this file. This routine merely constructs the name.\n \n    procedure Write_Info (Info : String);\n-   --  Implementation of Write_Binder_Info, Write_Debug_Info and\n-   --  Write_Library_Info (identical)\n+   --  Implement Write_Binder_Info, Write_Debug_Info, Write_C_File_Info,\n+   --  Write_H_File_Info, and Write_Library_Info (identical)\n \n    procedure Write_With_Check (A : Address; N  : Integer);\n    --  Writes N bytes from buffer starting at address A to file whose FD is"}, {"sha": "be7851bc4fa9603ba4fd0917253c61fcf80bc534", "filename": "gcc/ada/s-expmod.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fs-expmod.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fs-expmod.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-expmod.ads?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1992-2014, Free Software Foundation, Inc.        --\n+--           Copyright (C) 1992-2015, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This function performs exponentiation of a modular type with non-binary\n+--  This function performs exponentiation of a modular type with nonbinary\n --  modulus values. Arithmetic is done in Long_Long_Unsigned, with explicit\n --  accounting for the modulus value which is passed as the second argument.\n --  Note that 1 is a binary modulus (2**0), so the compiler should not (and"}, {"sha": "57703f4ff6ecc2795dbe2cba7a7f2c3e83ca22a5", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,7 +30,7 @@\n ------------------------------------------------------------------------------\n \n --  The implementation here is portable to any IEEE implementation. It does\n---  not handle non-binary radix, and also assumes that model numbers and\n+--  not handle nonbinary radix, and also assumes that model numbers and\n --  machine numbers are basically identical, which is not true of all possible\n --  floating-point implementations. On a non-IEEE machine, this body must be\n --  specialized appropriately, or better still, its generic instantiations"}, {"sha": "acebbaf8a6b9badbea28ed98974a5358ecf6bd4b", "filename": "gcc/ada/s-rannum.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fs-rannum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fs-rannum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rannum.adb?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -241,7 +241,7 @@ is\n       --  integers. Assuming that Real'Machine_Radix = 2, it can deliver all\n       --  machine values of type Real (as implied by Real'Machine_Mantissa and\n       --  Real'Machine_Emin), which is not true of the standard method (to\n-      --  which we fall back for non-binary radix): computing Real(<random\n+      --  which we fall back for nonbinary radix): computing Real(<random\n       --  integer>) / (<max random integer>+1). To do so, we first extract an\n       --  (M-1)-bit significand (where M is Real'Machine_Mantissa), and then\n       --  decide on a normalized exponent by repeated coin flips, decrementing"}, {"sha": "30c35c20a98b0c1bea4bae3cc973b364057bfbb5", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -18490,7 +18490,7 @@ package body Sem_Ch3 is\n             Set_Modular_Size (Bits);\n             return;\n \n-         --  Non-binary case\n+         --  Nonbinary case\n \n          elsif M_Val < 2 ** Bits then\n             Check_SPARK_05_Restriction (\"modulus should be a power of 2\", T);\n@@ -18505,7 +18505,7 @@ package body Sem_Ch3 is\n                return;\n \n             else\n-               --  In the non-binary case, set size as per RM 13.3(55)\n+               --  In the nonbinary case, set size as per RM 13.3(55)\n \n                Set_Modular_Size (Bits);\n                return;"}, {"sha": "ebfa49243c3ef8b4e39060c4f45d651311c103e1", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -177,7 +177,7 @@ package body Sem_Eval is\n    function From_Bits (B : Bits; T : Entity_Id) return Uint;\n    --  Converts a bit string of length B'Length to a Uint value to be used for\n    --  a target of type T, which is a modular type. This procedure includes the\n-   --  necessary reduction by the modulus in the case of a non-binary modulus\n+   --  necessary reduction by the modulus in the case of a nonbinary modulus\n    --  (for a binary modulus, the bit string is the right length any way so all\n    --  is well).\n \n@@ -2936,7 +2936,7 @@ package body Sem_Eval is\n       begin\n          --  Negation is equivalent to subtracting from the modulus minus one.\n          --  For a binary modulus this is equivalent to the ones-complement of\n-         --  the original value. For non-binary modulus this is an arbitrary\n+         --  the original value. For a nonbinary modulus this is an arbitrary\n          --  but consistent definition.\n \n          if Is_Modular_Integer_Type (Typ) then"}, {"sha": "69a1d5ffd8d5bfcb925578c3566ef2b5f8db759d", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95f708ec32470ae773950928c3fb1962d0ec86e/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=a95f708ec32470ae773950928c3fb1962d0ec86e", "patch": "@@ -434,8 +434,7 @@ package body Sem_Intr is\n          return;\n \n       elsif Non_Binary_Modulus (Typ1) then\n-         Errint\n-           (\"shifts not allowed for non-binary modular types\", Ptyp1, N);\n+         Errint (\"shifts not allowed for nonbinary modular types\", Ptyp1, N);\n \n       --  For modular type, modulus must be 2**8, 2**16, 2**32, or 2**64.\n       --  Don't apply to generic types, since we may not have a modulus value."}]}