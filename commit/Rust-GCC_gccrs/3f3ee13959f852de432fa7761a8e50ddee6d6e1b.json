{"sha": "3f3ee13959f852de432fa7761a8e50ddee6d6e1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YzZWUxMzk1OWY4NTJkZTQzMmZhNzc2MWE4ZTUwZGRlZTZkNmUxYg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-06-14T09:39:33Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-06-17T08:29:28Z"}, "message": "Add debugging helpers for ranger.\n\nThese are debugging aids for help in debugging ranger based passes.\n\ngcc/ChangeLog:\n\n\t* gimple-range.cc (debug_seed_ranger): New.\n\t(dump_ranger): New.\n\t(debug_ranger): New.", "tree": {"sha": "bb0623ca0151d68f6f7d8831e1735948fa3f68ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb0623ca0151d68f6f7d8831e1735948fa3f68ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f3ee13959f852de432fa7761a8e50ddee6d6e1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3ee13959f852de432fa7761a8e50ddee6d6e1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f3ee13959f852de432fa7761a8e50ddee6d6e1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3ee13959f852de432fa7761a8e50ddee6d6e1b/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dfa4fe9f1a089b2b3906c83e22a1b39c49d937c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dfa4fe9f1a089b2b3906c83e22a1b39c49d937c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dfa4fe9f1a089b2b3906c83e22a1b39c49d937c"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "58109701f2f06d54745252fdb8e3c40418d40415", "filename": "gcc/gimple-range.cc", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3ee13959f852de432fa7761a8e50ddee6d6e1b/gcc%2Fgimple-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3ee13959f852de432fa7761a8e50ddee6d6e1b/gcc%2Fgimple-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.cc?ref=3f3ee13959f852de432fa7761a8e50ddee6d6e1b", "patch": "@@ -1662,4 +1662,83 @@ disable_ranger (struct function *fun)\n   fun->x_range_query = &global_ranges;\n }\n \n+// =========================================\n+// Debugging helpers.\n+// =========================================\n+\n+// Query all statements in the IL to precalculate computable ranges in RANGER.\n+\n+static DEBUG_FUNCTION void\n+debug_seed_ranger (gimple_ranger &ranger)\n+{\n+  // Recalculate SCEV to make sure the dump lists everything.\n+  if (scev_initialized_p ())\n+    {\n+      scev_finalize ();\n+      scev_initialize ();\n+    }\n+\n+  basic_block bb;\n+  int_range_max r;\n+  gimple_stmt_iterator gsi;\n+  FOR_EACH_BB_FN (bb, cfun)\n+    for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+      {\n+\tgimple *stmt = gsi_stmt (gsi);\n+\n+\tif (is_gimple_debug (stmt))\n+\t  continue;\n+\n+\tranger.range_of_stmt (r, stmt);\n+      }\n+}\n+\n+// Dump all that ranger knows for the current function.\n+\n+DEBUG_FUNCTION void\n+dump_ranger (FILE *out)\n+{\n+  gimple_ranger ranger;\n+  debug_seed_ranger (ranger);\n+  ranger.dump (out);\n+}\n+\n+DEBUG_FUNCTION void\n+debug_ranger ()\n+{\n+  dump_ranger (stderr);\n+}\n+\n+// Dump all that ranger knows on a path of BBs.\n+//\n+// Note that the blocks are in reverse order, thus the exit block is\n+// path[0].\n+\n+DEBUG_FUNCTION void\n+dump_ranger (FILE *dump_file, const vec<basic_block> &path)\n+{\n+  if (path.length () == 0)\n+    {\n+      fprintf (dump_file, \"empty\\n\");\n+      return;\n+    }\n+\n+  gimple_ranger ranger;\n+  debug_seed_ranger (ranger);\n+\n+  unsigned i = path.length ();\n+  do\n+    {\n+      i--;\n+      ranger.dump_bb (dump_file, path[i]);\n+    }\n+  while (i > 0);\n+}\n+\n+DEBUG_FUNCTION void\n+debug_ranger (const vec<basic_block> &path)\n+{\n+  dump_ranger (stderr, path);\n+}\n+\n #include \"gimple-range-tests.cc\""}]}