{"sha": "6b692ad7bd93797953906b93a72c8a6675e95112", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI2OTJhZDdiZDkzNzk3OTUzOTA2YjkzYTcyYzhhNjY3NWU5NTExMg==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2004-01-12T21:19:26Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-01-12T21:19:26Z"}, "message": "libjava.exp: Add LD_LIBRARY_PATH_32/64 to get proper path setting for Ssolaris 32/64-bit testing.\n\n2004-01-12  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* lib/libjava.exp: Add LD_LIBRARY_PATH_32/64 to get proper\n\tpath setting for Ssolaris 32/64-bit testing.\n\tReorganize LD_LIBRARY_PATH setting.\n\nFrom-SVN: r75762", "tree": {"sha": "9151aeb2cd199fe9cdc37170815ac3792345a711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9151aeb2cd199fe9cdc37170815ac3792345a711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b692ad7bd93797953906b93a72c8a6675e95112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b692ad7bd93797953906b93a72c8a6675e95112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b692ad7bd93797953906b93a72c8a6675e95112", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b692ad7bd93797953906b93a72c8a6675e95112/comments", "author": null, "committer": null, "parents": [{"sha": "4139f34d38fddb3eb28c219a6921ac46b05497fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4139f34d38fddb3eb28c219a6921ac46b05497fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4139f34d38fddb3eb28c219a6921ac46b05497fd"}], "stats": {"total": 45, "additions": 27, "deletions": 18}, "files": [{"sha": "6d958a7a059fd795debdd7bbf718228764d89009", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b692ad7bd93797953906b93a72c8a6675e95112/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b692ad7bd93797953906b93a72c8a6675e95112/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=6b692ad7bd93797953906b93a72c8a6675e95112", "patch": "@@ -1,3 +1,9 @@\n+2004-01-12  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* lib/libjava.exp: Add LD_LIBRARY_PATH_32/64 to get proper\n+\tpath setting for Ssolaris 32/64-bit testing.\n+\tReorganize LD_LIBRARY_PATH setting.\n+\n 2004-01-09  Andrew Haley  <aph@redhat.com>\n \n \t* lib/libjava.exp (bytecompile_file): Log compile command."}, {"sha": "31937c3a1e07ddf752a1b9c35bdb893506f3ced5", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b692ad7bd93797953906b93a72c8a6675e95112/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b692ad7bd93797953906b93a72c8a6675e95112/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=6b692ad7bd93797953906b93a72c8a6675e95112", "patch": "@@ -175,16 +175,20 @@ proc libjava_init { args } {\n \n     if [info exists env(LD_LIBRARY_PATH)] {\n \tset original_ld_library_path $env(LD_LIBRARY_PATH)\n+\t# For HP-UX.\n+    } elseif [info exists env(SHLIB_PATH)] {\n+\tset original_ld_library_path $env(SHLIB_PATH)\n+\t# For Darwin.\n+    } elseif [info exists env(DYLD_LIBRARY_PATH)] {\n+\tset original_ld_library_path $env(DYLD_LIBRARY_PATH)\n+\t# For Solaris 32 bit.\n+    } elseif [info exists env(LD_LIBRARY_PATH_32)] {\n+\tset original_ld_library_path $env(LD_LIBRARY_PATH_32)\n+\t# For Solaris 64 bit.\n+    } elseif [info exists env(LD_LIBRARY_PATH_64)] {\n+\tset original_ld_library_path $env(LD_LIBRARY_PATH_64)\n     } else {\n-\tif [info exists env(SHLIB_PATH)] {\n-\t    set original_ld_library_path $env(SHLIB_PATH)\n-\t} else {\n-\t    if [info exists env(DYLD_LIBRARY_PATH)] {\n-\t\tset original_ld_library_path $env(DYLD_LIBRARY_PATH)\n-\t    } else {\n-\t\tset original_ld_library_path \"\"\n-\t    }\n-\t}\n+\tset original_ld_library_path \"\"\n     }\n \n     set wrapper_file \"\";\n@@ -363,8 +367,6 @@ proc libjava_arguments {{mode compile}} {\n     # Set variables the dynamic linker looks at.\n     global original_ld_library_path\n     setenv LD_LIBRARY_PATH \"$ld_library_path:$original_ld_library_path\"\n-    setenv SHLIB_PATH \"$ld_library_path:$original_ld_library_path\"\n-    setenv DYLD_LIBRARY_PATH \"$ld_library_path:$original_ld_library_path\"\n \n     verbose \"LD_LIBRARY_PATH = $env(LD_LIBRARY_PATH)\"\n \n@@ -460,8 +462,6 @@ proc gcj_invoke {program expectFile ld_library_additions} {\n   append newval :$lib_path\n \n   setenv LD_LIBRARY_PATH $newval\n-  setenv SHLIB_PATH $newval\n-  setenv DYLD_LIBRARY_PATH $newval\n \n   verbose \"LD_LIBRARY_PATH=$env(LD_LIBRARY_PATH)\"\n \n@@ -471,8 +471,6 @@ proc gcj_invoke {program expectFile ld_library_additions} {\n \n   # Restore setting\n   setenv LD_LIBRARY_PATH $lib_path\n-  setenv SHLIB_PATH $lib_path\n-  setenv DYLD_LIBRAY_PATH $lib_path\n \n   if {$status != \"pass\"} {\n     verbose \"got $output\"\n@@ -909,12 +907,17 @@ proc default_libjava_start { } {\n # called LD_LIBRARYN32_PATH (for the N32 ABI) and LD_LIBRARY64_PATH\n # (for the 64-bit ABI).  The right way to do this would be to modify\n # unix.exp -- but that's not an option since it's part of DejaGNU\n-# proper, so we do it here, by trickery.  We really only need to do \n-# this on IRIX, but it shouldn't hurt to do it anywhere else.\n-\n+# proper, so we do it here, by trickery.\n+# The same applies to darwin (DYLD_LIBRARY_PATH), solaris 32 bit\n+# (LD_LIBRARY_PATH_32), solaris 64 bit (LD_LIBRARY_PATH_64), and HP-UX\n+# (SHLIB_PATH).\n proc ${tool}_set_ld_library_path { name element op } {\n   setenv LD_LIBRARYN32_PATH [getenv LD_LIBRARY_PATH]\n   setenv LD_LIBRARY64_PATH [getenv LD_LIBRARY_PATH]\n+  setenv SHLIB_PATH [getenv LD_LIBRARY_PATH]\n+  setenv DYLD_LIBRARY_PATH [getenv LD_LIBRARY_PATH]\n+  setenv LD_LIBRARY_PATH_32 [getenv LD_LIBRARY_PATH]\n+  setenv LD_LIBRARY_PATH_64 [getenv LD_LIBRARY_PATH]\n }\n \n trace variable env(LD_LIBRARY_PATH) w ${tool}_set_ld_library_path"}]}