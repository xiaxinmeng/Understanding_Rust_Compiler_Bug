{"sha": "84d7e312850d998ff35abe95cd812143e41cea3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRkN2UzMTI4NTBkOTk4ZmYzNWFiZTk1Y2Q4MTIxNDNlNDFjZWEzZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-02-28T13:55:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-02-28T13:55:32Z"}, "message": "* ChangeLog: Fix whitespace.\n\nFrom-SVN: r208223", "tree": {"sha": "0d5ea772dc67d12a641a05c96b031068f864fb30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d5ea772dc67d12a641a05c96b031068f864fb30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84d7e312850d998ff35abe95cd812143e41cea3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d7e312850d998ff35abe95cd812143e41cea3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84d7e312850d998ff35abe95cd812143e41cea3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d7e312850d998ff35abe95cd812143e41cea3d/comments", "author": null, "committer": null, "parents": [{"sha": "fba7c56424a5ffc8e098c7b4638c19f2545ef2be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba7c56424a5ffc8e098c7b4638c19f2545ef2be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba7c56424a5ffc8e098c7b4638c19f2545ef2be"}], "stats": {"total": 50, "additions": 20, "deletions": 30}, "files": [{"sha": "6916348cd9cce53d33ba628a41549c550a1eef11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 30, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84d7e312850d998ff35abe95cd812143e41cea3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84d7e312850d998ff35abe95cd812143e41cea3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84d7e312850d998ff35abe95cd812143e41cea3d", "patch": "@@ -4,8 +4,7 @@\n \t* tree-cfgcleanup.c (tree_forwarder_block_p): Restrict\n \tprevious fix and only allow to remove trivial pre-headers\n \tand latches.  Also honor LOOPS_MAY_HAVE_MULTIPLE_LATCHES.\n-\t(remove_forwarder_block): Properly update the latch of\n-\ta loop.\n+\t(remove_forwarder_block): Properly update the latch of a loop.\n \n 2014-02-28  Alexandre Oliva <aoliva@redhat.com>\n \n@@ -53,7 +52,7 @@\n \tPR rtl-optimization/52714\n \t* combine.c (try_combine): When splitting an unrecognized PARALLEL\n \tinto two independent simple sets, if I3 is a jump, ensure the\n-\tpattern we place into I3 is a (set (pc) ...)\n+\tpattern we place into I3 is a (set (pc) ...).\n \n 2014-02-27  Mikael Pettersson  <mikpe@it.uu.se>\n \t    Jeff Law  <law@redhat.com>\n@@ -132,9 +131,8 @@\n 2014-02-26  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR target/60280\n-\t* tree-cfgcleanup.c (tree_forwarder_block_p): Protect loop\n-\tpreheaders and latches only if requested.  Fix latch if it\n-\tis removed.\n+\t* tree-cfgcleanup.c (tree_forwarder_block_p): Protect loop preheaders\n+\tand latches only if requested.  Fix latch if it is removed.\n \t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Set\n \tLOOPS_HAVE_PREHEADERS.\n \n@@ -177,11 +175,10 @@\n \t(PTA_PREFETCHWT1): New.\n \t(ix86_option_override_internal): Handle PTA_PREFETCHWT1.\n \t(ix86_valid_target_attribute_inner_p): Handle OPT_mprefetchwt1.\n-\t* config/i386/i386.h (TARGET_PREFETCHWT1), (TARGET_PREFETCHWT1_P):\n-\t  New.\n+\t* config/i386/i386.h (TARGET_PREFETCHWT1, TARGET_PREFETCHWT1_P): New.\n \t* config/i386/i386.md (prefetch): Check TARGET_PREFETCHWT1\n \t(*prefetch_avx512pf_<mode>_: Change into ...\n-\t (*prefetch_prefetchwt1_<mode>: This.\n+\t(*prefetch_prefetchwt1_<mode>: This.\n \t* config/i386/i386.opt (mprefetchwt1): New.\n \t* config/i386/xmmintrin.h (_mm_hint): Add _MM_HINT_ET1.\n \t(_mm_prefetch): Handle intent to write.\n@@ -193,8 +190,7 @@\n \t* emit-rtl.c (mem_attrs_htab): Remove.\n \t(mem_attrs_htab_hash): Likewise.\n \t(mem_attrs_htab_eq): Likewise.\n-\t(set_mem_attrs): Always allocate new mem-attrs when something\n-\tchanged.\n+\t(set_mem_attrs): Always allocate new mem-attrs when something changed.\n \t(init_emit_once): Do not allocate mem_attrs_htab.\n \n 2014-02-25  Richard Biener  <rguenther@suse.de>\n@@ -315,16 +311,15 @@\n \n 2014-02-23  David Holsgrove <david.holsgrove@xilinx.com>\n \n-\t* /config/microblaze/microblaze.c: Add microblaze_asm_output_mi_thunk\n-\tand define TARGET_ASM_OUTPUT_MI_THUNK and\n-\tTARGET_ASM_CAN_OUTPUT_MI_THUNK.\n+\t* /config/microblaze/microblaze.c: Add microblaze_asm_output_mi_thunk,\n+\tdefine TARGET_ASM_OUTPUT_MI_THUNK and TARGET_ASM_CAN_OUTPUT_MI_THUNK.\n \n 2014-02-23  David Holsgrove <david.holsgrove@xilinx.com>\n \n \t* config/microblaze/predicates.md: Add cmp_op predicate.\n-\t* config/microblaze/microblaze.md: Add branch_compare instruction \n+\t* config/microblaze/microblaze.md: Add branch_compare instruction\n \twhich uses cmp_op predicate and emits cmp insn before branch.\n-\t* config/microblaze/microblaze.c (microblaze_emit_compare): Rename \n+\t* config/microblaze/microblaze.c (microblaze_emit_compare): Rename\n \tto microblaze_expand_conditional_branch and consolidate logic.\n \t(microblaze_expand_conditional_branch): emit branch_compare\n \tinsn instead of handling cmp op separate from branch insn.\n@@ -350,8 +345,7 @@\n 2014-02-22  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/avr/avr.c (avr_can_eliminate): Allow elimination from\n-\tARG_POINTER_REGNUM\n-\tto STACK_POINTER_REGNUM if !frame_pointer_needed.\n+\tARG_POINTER_REGNUM to STACK_POINTER_REGNUM if !frame_pointer_needed.\n \t* config/avr/avr.c (ELIMINABLE_REGS): Add elimination from\n \tARG_POINTER_REGNUM to STACK_POINTER_REGNUM.\n \n@@ -371,8 +365,7 @@\n 2014-02-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/altivec.md (altivec_lvxl): Rename as\n-\t*altivec_lvxl_<mode>_internal and use VM2 iterator instead of\n-\tV4SI.\n+\t*altivec_lvxl_<mode>_internal and use VM2 iterator instead of V4SI.\n \t(altivec_lvxl_<mode>): New define_expand incorporating\n \t-maltivec=be semantics where needed.\n \t(altivec_lvx): Rename as *altivec_lvx_<mode>_internal.\n@@ -387,16 +380,14 @@\n \t-maltivec=be semantics where needed.\n \t* config/rs6000/rs6000-builtin.def: Add new built-in definitions\n \tLVXL_V2DF, LVXL_V2DI, LVXL_V4SF, LVXL_V4SI, LVXL_V8HI, LVXL_V16QI,\n-\tLVX_V2DF, LVX_V2DI, LVX_V4SF, LVX_V4SI, LVX_V8HI, LVX_V16QI,\n-\tSTVX_V2DF, STVX_V2DI, STVX_V4SF, STVX_V4SI, STVX_V8HI, STVX_V16QI,\n-\tSTVXL_V2DF, STVXL_V2DI, STVXL_V4SF, STVXL_V4SI, STVXL_V8HI,\n-\tSTVXL_V16QI.\n+\tLVX_V2DF, LVX_V2DI, LVX_V4SF, LVX_V4SI, LVX_V8HI, LVX_V16QI, STVX_V2DF,\n+\tSTVX_V2DI, STVX_V4SF, STVX_V4SI, STVX_V8HI, STVX_V16QI, STVXL_V2DF,\n+\tSTVXL_V2DI, STVXL_V4SF, STVXL_V4SI, STVXL_V8HI, STVXL_V16QI.\n \t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Replace\n \tALTIVEC_BUILTIN_LVX with ALTIVEC_BUILTIN_LVX_<MODE> throughout;\n \tsimilarly for ALTIVEC_BUILTIN_LVXL, ALTIVEC_BUILTIN_STVX, and\n \tALTIVEC_BUILTIN_STVXL.\n-\t* config/rs6000/rs6000-protos.h (altivec_expand_lvx_be): New\n-\tprototype.\n+\t* config/rs6000/rs6000-protos.h (altivec_expand_lvx_be): New prototype.\n \t(altivec_expand_stvx_be): Likewise.\n \t* config/rs6000/rs6000.c (swap_selector_for_mode): New function.\n \t(altivec_expand_lvx_be): Likewise.\n@@ -406,8 +397,7 @@\n \tALTIVEC_BUILTIN_LVXL_<MODE>, and ALTIVEC_BUILTIN_LVX_<MODE>.\n \t(altivec_init_builtins): Add definitions for\n \t__builtin_altivec_lvxl_<mode>, __builtin_altivec_lvx_<mode>,\n-\t__builtin_altivec_stvx_<mode>, and\n-\t__builtin_altivec_stvxl_<mode>.\n+\t__builtin_altivec_stvx_<mode>, and __builtin_altivec_stvxl_<mode>.\n \n 2014-02-21  Catherine Moore  <clm@codesourcery.com>\n \n@@ -492,8 +482,8 @@\n \t    Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config/nios2/nios2.md (unspec): Add UNSPEC_PIC_GOTOFF_SYM enum.\n-\t* config/nios2/nios2.c (nios2_function_profiler):\n-\tAdd -fPIC (flag_pic == 2) support.\n+\t* config/nios2/nios2.c (nios2_function_profiler): Add\n+\t-fPIC (flag_pic == 2) support.\n \t(nios2_handle_custom_fpu_cfg): Fix warning parameter.\n \t(nios2_large_offset_p): New function.\n \t(nios2_unspec_reloc_p): Move up position, update to use"}]}