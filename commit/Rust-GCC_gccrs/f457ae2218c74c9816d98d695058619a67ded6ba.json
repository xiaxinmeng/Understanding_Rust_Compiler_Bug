{"sha": "f457ae2218c74c9816d98d695058619a67ded6ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ1N2FlMjIxOGM3NGM5ODE2ZDk4ZDY5NTA1ODYxOWE2N2RlZDZiYQ==", "commit": {"author": {"name": "Bin Bin Lv", "email": "shlb@linux.ibm.com", "date": "2020-03-12T02:25:31Z"}, "committer": {"name": "Bin Bin Lv", "email": "shlb@linux.ibm.com", "date": "2020-03-12T02:25:31Z"}, "message": "[rs6000] Fix a wrong GC issue\n\nThe source file rs6000.c was split up into several smaller source files\nthrough commit 1acf024.  However, variable \"altivec_builtin_mask_for_load\" and\n\"builtin_mode_to_type[MAX_MACHINE_MODE][2]\" were marked with the wrong syntax\n\"GTY(([options])) type name\", which led these two variables were not marked as\nroots correctly and wrongly GCed.  And when \"altivec_builtin_mask_for_load\"\nwas wrongly GCed, the compiling for openJDK is failed with ICEs enabling\nprecompiled header under mcpu=power7.  So roots must be declared using one of\nthe following syntaxes: \"extern GTY(([options])) type name;\" and \"static\nGTY(([options])) type name;\".\n\nAnd the following patch adds variable \"altivec_builtin_mask_for_load\" and\n\"builtin_mode_to_type[MAX_MACHINE_MODE][2]\" into the roots array.\n\nBootstrap and regression tests were done on powerpc64le-linux-gnu (LE) with no\nregressions.\n\ngcc/ChangeLog\n\n2020-03-11  Bin Bin Lv  <shlb@linux.ibm.com>\n\n\t* config/rs6000/rs6000-internal.h (altivec_builtin_mask_for_load,\n\tbuiltin_mode_to_type): Remove the declaration.\n\t* config/rs6000/rs6000.h (altivec_builtin_mask_for_load,\n\tbuiltin_mode_to_type): Add an extern GTY(()) declaration.\n\t* config/rs6000/rs6000.c (altivec_builtin_mask_for_load,\n\tbuiltin_mode_to_type): Remove the GTY(()) declaration.", "tree": {"sha": "1ff5d71d96b26d6cf855fb150f8ec17a5c76e7a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ff5d71d96b26d6cf855fb150f8ec17a5c76e7a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f457ae2218c74c9816d98d695058619a67ded6ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f457ae2218c74c9816d98d695058619a67ded6ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f457ae2218c74c9816d98d695058619a67ded6ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f457ae2218c74c9816d98d695058619a67ded6ba/comments", "author": null, "committer": null, "parents": [{"sha": "9c1281d98639e8291570fd367c9d22f350509513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c1281d98639e8291570fd367c9d22f350509513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c1281d98639e8291570fd367c9d22f350509513"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "d331b9e3e3c101176b7500a927690ef440a194cc", "filename": "gcc/config/rs6000/rs6000-internal.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457ae2218c74c9816d98d695058619a67ded6ba/gcc%2Fconfig%2Frs6000%2Frs6000-internal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457ae2218c74c9816d98d695058619a67ded6ba/gcc%2Fconfig%2Frs6000%2Frs6000-internal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-internal.h?ref=f457ae2218c74c9816d98d695058619a67ded6ba", "patch": "@@ -187,7 +187,5 @@ extern bool rs6000_passes_long_double;\n extern bool rs6000_passes_vector;\n extern bool rs6000_returns_struct;\n extern bool cpu_builtin_p;\n-extern GTY(()) tree builtin_mode_to_type[MAX_MACHINE_MODE][2];\n-extern GTY(()) tree altivec_builtin_mask_for_load;\n \n #endif"}, {"sha": "24598aff6636a21e16fc21af0ac151590c3858e9", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457ae2218c74c9816d98d695058619a67ded6ba/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457ae2218c74c9816d98d695058619a67ded6ba/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f457ae2218c74c9816d98d695058619a67ded6ba", "patch": "@@ -99,7 +99,7 @@\n #endif\n \n /* Support targetm.vectorize.builtin_mask_for_load.  */\n-GTY(()) tree altivec_builtin_mask_for_load;\n+tree altivec_builtin_mask_for_load;\n \n #ifdef USING_ELFOS_H\n /* Counter for labels which are to be placed in .fixup.  */\n@@ -196,7 +196,7 @@ enum reg_class rs6000_constraints[RS6000_CONSTRAINT_MAX];\n int rs6000_vector_align[NUM_MACHINE_MODES];\n \n /* Map selected modes to types for builtins.  */\n-GTY(()) tree builtin_mode_to_type[MAX_MACHINE_MODE][2];\n+tree builtin_mode_to_type[MAX_MACHINE_MODE][2];\n \n /* What modes to automatically generate reciprocal divide estimate (fre) and\n    reciprocal sqrt (frsqrte) for.  */"}, {"sha": "79b3dd6e3a5174f8e7c1756a9cf7cb797299d673", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457ae2218c74c9816d98d695058619a67ded6ba/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457ae2218c74c9816d98d695058619a67ded6ba/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=f457ae2218c74c9816d98d695058619a67ded6ba", "patch": "@@ -2490,6 +2490,9 @@ extern GTY(()) tree rs6000_builtin_types[RS6000_BTI_MAX];\n extern GTY(()) tree rs6000_builtin_decls[RS6000_BUILTIN_COUNT];\n \n #ifndef USED_FOR_TARGET\n+extern GTY(()) tree builtin_mode_to_type[MAX_MACHINE_MODE][2];\n+extern GTY(()) tree altivec_builtin_mask_for_load;\n+\n /* A C structure for machine-specific, per-function data.\n    This is added to the cfun structure.  */\n typedef struct GTY(()) machine_function"}]}