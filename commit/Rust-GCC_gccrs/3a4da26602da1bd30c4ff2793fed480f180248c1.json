{"sha": "3a4da26602da1bd30c4ff2793fed480f180248c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E0ZGEyNjYwMmRhMWJkMzBjNGZmMjc5M2ZlZDQ4MGYxODAyNDhjMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-08-22T13:02:39Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-08-22T13:02:39Z"}, "message": "[1/2] Fix bogus double reduction (PR 86725)\n\nThis patch is the first part of the fix for PR 86725.  We would\ntreat x_1 in:\n\n    outer1:\n      x_1 = PHI <x_4(outer2), ...>;\n      ...\n\n    inner:\n      x_2 = ...x_1...;\n      ...\n      x_3 = ...;\n      ...\n\n    outer2:\n      x_4 = PHI <x_3(inner)>;\n      ...\n\nas a double reduction without checking what kind of statement x_2 is.\nIn practice it has to be a phi, since for other x_2, x_1 would simply\nbe a loop invariant that gets used for every inner loop iteration.\n\nThe idea with doing this patch first is that, by checking x_2 really\nis a phi, we can hand off the validation of the rest of the reduction\nto the phi analysis in the inner loop.\n\nThe test case is a variant of the one in the PR.\n\n2018-08-22  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR tree-optimization/86725\n\t* tree-vect-loop.c (vect_is_simple_reduction): When treating\n\tan outer loop phi as a double reduction, make sure that the\n\tsingle user of the phi result is an inner loop phi.\n\ngcc/testsuite/\n\tPR tree-optimization/86725\n\t* gcc.dg/vect/no-scevccp-pr86725-1.c: New test.\n\nFrom-SVN: r263773", "tree": {"sha": "fc168da2cf5421fba469e6139e74375a1579bf2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc168da2cf5421fba469e6139e74375a1579bf2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a4da26602da1bd30c4ff2793fed480f180248c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4da26602da1bd30c4ff2793fed480f180248c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a4da26602da1bd30c4ff2793fed480f180248c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4da26602da1bd30c4ff2793fed480f180248c1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "203942b8af64926d787b4a545184866f9572978d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203942b8af64926d787b4a545184866f9572978d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/203942b8af64926d787b4a545184866f9572978d"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "63779d362c2ec3f2de921d94c12bdf58dbebe193", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4da26602da1bd30c4ff2793fed480f180248c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4da26602da1bd30c4ff2793fed480f180248c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a4da26602da1bd30c4ff2793fed480f180248c1", "patch": "@@ -1,3 +1,10 @@\n+2018-08-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/86725\n+\t* tree-vect-loop.c (vect_is_simple_reduction): When treating\n+\tan outer loop phi as a double reduction, make sure that the\n+\tsingle user of the phi result is an inner loop phi.\n+\n 2018-08-22  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-data-refs.c (vect_analyze_group_access_1): Convert"}, {"sha": "3117afaa82d693466cb251a70c1ac76fb3adda6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4da26602da1bd30c4ff2793fed480f180248c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4da26602da1bd30c4ff2793fed480f180248c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a4da26602da1bd30c4ff2793fed480f180248c1", "patch": "@@ -1,3 +1,8 @@\n+2018-08-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/86725\n+\t* gcc.dg/vect/no-scevccp-pr86725-1.c: New test.\n+\n 2018-08-22  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.dg/vect/vect-avg-16.c: New test."}, {"sha": "3bc63a6552b2ad25dcedf929d195381c54f0fb23", "filename": "gcc/testsuite/gcc.dg/vect/no-scevccp-pr86725-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4da26602da1bd30c4ff2793fed480f180248c1/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-scevccp-pr86725-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4da26602da1bd30c4ff2793fed480f180248c1/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-scevccp-pr86725-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-scevccp-pr86725-1.c?ref=3a4da26602da1bd30c4ff2793fed480f180248c1", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O -w\" } */\n+\n+int foo;\n+int\n+nr (int xe, int z)\n+{\n+  int oo, wo = 0;\n+\n+  for (oo = 0; oo < 4; ++oo)\n+    {\n+      int qq;\n+\n+      int old_wo = wo;\n+      for (qq = 0; qq < 2; ++qq)\n+        {\n+          wo = z + qq + old_wo;\n+          xe += wo;\n+        }\n+    }\n+  foo = wo;\n+  return xe;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"double reduction: wo\" \"vect\" } } */\n+/* { dg-final { scan-tree-dump-not \"OUTER LOOP VECTORIZED\" \"vect\" } } */"}, {"sha": "f21d995fdb9c0b2d6551c7c120bb0385ed274f95", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4da26602da1bd30c4ff2793fed480f180248c1/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4da26602da1bd30c4ff2793fed480f180248c1/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=3a4da26602da1bd30c4ff2793fed480f180248c1", "patch": "@@ -2992,6 +2992,7 @@ vect_is_simple_reduction (loop_vec_info loop_info, stmt_vec_info phi_info,\n           && loop->inner\n           && flow_bb_inside_loop_p (loop->inner, gimple_bb (def1))\n           && is_gimple_assign (def1)\n+\t  && is_a <gphi *> (phi_use_stmt)\n \t  && flow_bb_inside_loop_p (loop->inner, gimple_bb (phi_use_stmt)))\n         {\n           if (dump_enabled_p ())"}]}