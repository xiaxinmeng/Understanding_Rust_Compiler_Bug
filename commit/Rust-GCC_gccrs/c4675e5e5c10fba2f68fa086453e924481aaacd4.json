{"sha": "c4675e5e5c10fba2f68fa086453e924481aaacd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ2NzVlNWU1YzEwZmJhMmY2OGZhMDg2NDUzZTkyNDQ4MWFhYWNkNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-06-14T00:47:38Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-06-14T00:47:38Z"}, "message": "compiler: Avoid unnecessary interface conversions.\n\nFrom-SVN: r188545", "tree": {"sha": "121f3148c1a3b20c45aa825c7900b44bac0799a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/121f3148c1a3b20c45aa825c7900b44bac0799a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4675e5e5c10fba2f68fa086453e924481aaacd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4675e5e5c10fba2f68fa086453e924481aaacd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4675e5e5c10fba2f68fa086453e924481aaacd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4675e5e5c10fba2f68fa086453e924481aaacd4/comments", "author": null, "committer": null, "parents": [{"sha": "f7a70512cbff7adae1fec817be6d98d0ef5666fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a70512cbff7adae1fec817be6d98d0ef5666fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7a70512cbff7adae1fec817be6d98d0ef5666fa"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "a2ac98703b44aaa687ff32392fa51aef35177bd8", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4675e5e5c10fba2f68fa086453e924481aaacd4/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4675e5e5c10fba2f68fa086453e924481aaacd4/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=c4675e5e5c10fba2f68fa086453e924481aaacd4", "patch": "@@ -168,7 +168,8 @@ Expression::convert_for_assignment(Translate_context* context, Type* lhs_type,\n   if (lhs_type_tree == error_mark_node)\n     return error_mark_node;\n \n-  if (lhs_type != rhs_type && lhs_type->interface_type() != NULL)\n+  if (lhs_type->forwarded() != rhs_type->forwarded()\n+      && lhs_type->interface_type() != NULL)\n     {\n       if (rhs_type->interface_type() == NULL)\n \treturn Expression::convert_type_to_interface(context, lhs_type,\n@@ -179,7 +180,8 @@ Expression::convert_for_assignment(Translate_context* context, Type* lhs_type,\n \t\t\t\t\t\t\t  rhs_type, rhs_tree,\n \t\t\t\t\t\t\t  false, location);\n     }\n-  else if (lhs_type != rhs_type && rhs_type->interface_type() != NULL)\n+  else if (lhs_type->forwarded() != rhs_type->forwarded()\n+\t   && rhs_type->interface_type() != NULL)\n     return Expression::convert_interface_to_type(context, lhs_type, rhs_type,\n \t\t\t\t\t\t rhs_tree, location);\n   else if (lhs_type->is_slice_type() && rhs_type->is_nil_type())"}]}