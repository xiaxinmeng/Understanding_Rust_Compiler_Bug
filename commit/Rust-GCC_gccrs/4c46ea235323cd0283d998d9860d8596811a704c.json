{"sha": "4c46ea235323cd0283d998d9860d8596811a704c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM0NmVhMjM1MzIzY2QwMjgzZDk5OGQ5ODYwZDg1OTY4MTFhNzA0Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-01-09T11:13:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-01-09T11:13:07Z"}, "message": "re PR inline-asm/8832 (traditional \"asm volatile\" code is illegally optimized)\n\n\tPR inline-asm/8832\n\t* tree.h (expand_asm): New prototype.\n\t* stmt.c (expand_asm): Set the MEM_VOLATILE_P flag if instructed\n\tto do so.\n\t* c-semantics (genrtl_asm_stmt): Pass the RID_VOLATILE qualifier\n\tdown to expand_asm.\n\t* c-typeck.c (simple_asm_stmt): Set the RID_VOLATILE qualifier.\n\t* rtlanal.c (volatile_insn_p) [ASM_INPUT]: Test the MEM_VOLATILE_P flag.\n\t(volatile_refs_p) [ASM_INPUT]: Likewise.\n\t(side_effects_p) [ASM_INPUT]: Likewise.\n\nFrom-SVN: r61099", "tree": {"sha": "111c11b5a4cc31685a7092d95fa33e235dc2f666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/111c11b5a4cc31685a7092d95fa33e235dc2f666"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c46ea235323cd0283d998d9860d8596811a704c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c46ea235323cd0283d998d9860d8596811a704c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c46ea235323cd0283d998d9860d8596811a704c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c46ea235323cd0283d998d9860d8596811a704c/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f56e86bd9c96aed9d101e8f3893719fb29866c58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f56e86bd9c96aed9d101e8f3893719fb29866c58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f56e86bd9c96aed9d101e8f3893719fb29866c58"}], "stats": {"total": 76, "additions": 60, "deletions": 16}, "files": [{"sha": "96ca06396ff3c910ebf4865bb3fca9c1ffc1ba2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c46ea235323cd0283d998d9860d8596811a704c", "patch": "@@ -1,3 +1,16 @@\n+2003-01-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR inline-asm/8832\n+\t* tree.h (expand_asm): New prototype.\n+\t* stmt.c (expand_asm): Set the MEM_VOLATILE_P flag if instructed\n+\tto do so.\n+\t* c-semantics (genrtl_asm_stmt): Pass the RID_VOLATILE qualifier\n+\tdown to expand_asm.\n+\t* c-typeck.c (simple_asm_stmt): Set the RID_VOLATILE qualifier.\n+\t* rtlanal.c (volatile_insn_p) [ASM_INPUT]: Test the MEM_VOLATILE_P flag.\n+\t(volatile_refs_p) [ASM_INPUT]: Likewise.\n+\t(side_effects_p) [ASM_INPUT]: Likewise.\n+\n Thu Jan  9 12:00:36 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (*mul*): FIx constraints; remove confused comment; fix"}, {"sha": "769c1165d4a35a62498c5f1378cb2e4f63304326", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=4c46ea235323cd0283d998d9860d8596811a704c", "patch": "@@ -749,7 +749,7 @@ genrtl_asm_stmt (cv_qualifier, string, output_operands,\n \n   emit_line_note (input_filename, lineno);\n   if (asm_input_p)\n-    expand_asm (string);\n+    expand_asm (string, cv_qualifier != NULL_TREE);\n   else\n     c_expand_asm_operands (string, output_operands, input_operands, \n \t\t\t   clobbers, cv_qualifier != NULL_TREE,"}, {"sha": "87703a730795a0e8b01d389f9838881f4da51de6", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=4c46ea235323cd0283d998d9860d8596811a704c", "patch": "@@ -6853,9 +6853,9 @@ simple_asm_stmt (expr)\n     {\n       tree stmt;\n \n-      stmt = add_stmt (build_stmt (ASM_STMT, NULL_TREE, expr,\n-\t\t\t\t   NULL_TREE, NULL_TREE,\n-\t\t\t\t   NULL_TREE));\n+      /* Simple asm statements are treated as volatile.  */\n+      stmt = add_stmt (build_stmt (ASM_STMT, ridpointers[(int) RID_VOLATILE],\n+\t\t\t\t   expr, NULL_TREE, NULL_TREE, NULL_TREE));\n       ASM_INPUT_P (stmt) = 1;\n       return stmt;\n     }"}, {"sha": "030682e43f909bbc2a2410473c5a98aeef5a3b6d", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=4c46ea235323cd0283d998d9860d8596811a704c", "patch": "@@ -2237,7 +2237,6 @@ volatile_insn_p (x)\n     case REG:\n     case SCRATCH:\n     case CLOBBER:\n-    case ASM_INPUT:\n     case ADDR_VEC:\n     case ADDR_DIFF_VEC:\n     case CALL:\n@@ -2248,6 +2247,7 @@ volatile_insn_p (x)\n  /* case TRAP_IF: This isn't clear yet.  */\n       return 1;\n \n+    case ASM_INPUT:\n     case ASM_OPERANDS:\n       if (MEM_VOLATILE_P (x))\n \treturn 1;\n@@ -2304,7 +2304,6 @@ volatile_refs_p (x)\n     case REG:\n     case SCRATCH:\n     case CLOBBER:\n-    case ASM_INPUT:\n     case ADDR_VEC:\n     case ADDR_DIFF_VEC:\n       return 0;\n@@ -2313,6 +2312,7 @@ volatile_refs_p (x)\n       return 1;\n \n     case MEM:\n+    case ASM_INPUT:\n     case ASM_OPERANDS:\n       if (MEM_VOLATILE_P (x))\n \treturn 1;\n@@ -2368,7 +2368,6 @@ side_effects_p (x)\n     case PC:\n     case REG:\n     case SCRATCH:\n-    case ASM_INPUT:\n     case ADDR_VEC:\n     case ADDR_DIFF_VEC:\n       return 0;\n@@ -2391,6 +2390,7 @@ side_effects_p (x)\n       return 1;\n \n     case MEM:\n+    case ASM_INPUT:\n     case ASM_OPERANDS:\n       if (MEM_VOLATILE_P (x))\n \treturn 1;"}, {"sha": "ac0aa15bef2952a267a2a77649008abac207ee72", "filename": "gcc/stmt.c", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=4c46ea235323cd0283d998d9860d8596811a704c", "patch": "@@ -1098,18 +1098,26 @@ n_occurrences (c, s)\n }\n \f\n /* Generate RTL for an asm statement (explicit assembler code).\n-   BODY is a STRING_CST node containing the assembler code text,\n-   or an ADDR_EXPR containing a STRING_CST.  */\n+   STRING is a STRING_CST node containing the assembler code text,\n+   or an ADDR_EXPR containing a STRING_CST.  VOL nonzero means the\n+   insn is volatile; don't optimize it.  */\n \n void\n-expand_asm (body)\n-     tree body;\n+expand_asm (string, vol)\n+     tree string;\n+     int vol;\n {\n-  if (TREE_CODE (body) == ADDR_EXPR)\n-    body = TREE_OPERAND (body, 0);\n+  rtx body;\n+\n+  if (TREE_CODE (string) == ADDR_EXPR)\n+    string = TREE_OPERAND (string, 0);\n+\n+  body = gen_rtx_ASM_INPUT (VOIDmode, TREE_STRING_POINTER (string));\n+\n+  MEM_VOLATILE_P (body) = vol;\n \n-  emit_insn (gen_rtx_ASM_INPUT (VOIDmode,\n-\t\t\t\tTREE_STRING_POINTER (body)));\n+  emit_insn (body);\n+  \n   clear_last_expr ();\n }\n "}, {"sha": "8063cf3a40db5fe8ce06a36125c315931b031b91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c46ea235323cd0283d998d9860d8596811a704c", "patch": "@@ -1,3 +1,7 @@\n+2003-01-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tgcc.dg/old-style-asm-1.c: New test.\n+\n 2003-01-09  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* gcc.c-torture/compile/20030109-1.c: New test."}, {"sha": "006cf0949b088ec1592274284f93dc082326f664", "filename": "gcc/testsuite/gcc.dg/old-style-asm-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Ftestsuite%2Fgcc.dg%2Fold-style-asm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Ftestsuite%2Fgcc.dg%2Fold-style-asm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fold-style-asm-1.c?ref=4c46ea235323cd0283d998d9860d8596811a704c", "patch": "@@ -0,0 +1,19 @@\n+/* PR inline-asm/8832 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* Verify that GCC doesn't optimize\n+   old style asm instructions.  */\n+\n+void foo(int v)\n+{\n+  if (v)\n+    asm (\"dummy1\");\n+\n+  asm (\"dummy2\");\n+\n+  if (v)\n+    asm (\"dummy3\");\n+}\n+\n+/* { dg-final { scan-assembler \"L2\" } } */"}, {"sha": "6075d83b87f041de63e4e9117c4c9ff829077c66", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c46ea235323cd0283d998d9860d8596811a704c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=4c46ea235323cd0283d998d9860d8596811a704c", "patch": "@@ -2835,7 +2835,7 @@ extern void expand_decl_init\t\t\tPARAMS ((tree));\n extern void clear_last_expr\t\t\tPARAMS ((void));\n extern void expand_label\t\t\tPARAMS ((tree));\n extern void expand_goto\t\t\t\tPARAMS ((tree));\n-extern void expand_asm\t\t\t\tPARAMS ((tree));\n+extern void expand_asm\t\t\t\tPARAMS ((tree, int));\n extern void expand_start_cond\t\t\tPARAMS ((tree, int));\n extern void expand_end_cond\t\t\tPARAMS ((void));\n extern void expand_start_else\t\t\tPARAMS ((void));"}]}