{"sha": "cbcf989d7f0543b2c391268bd625b6624c198608", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JjZjk4OWQ3ZjA1NDNiMmMzOTEyNjhiZDYyNWI2NjI0YzE5ODYwOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-11T10:41:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-11T10:41:55Z"}, "message": "(layout_record): After copying the offsets of a field that is an anonymous union to the offsets of the fields of that union...\n\n(layout_record): After copying the offsets of a field that is an\nanonymous union to the offsets of the fields of that union, zero the\noffset of the anonymous field in case it is used to access the inner\nfields.\n\nFrom-SVN: r4083", "tree": {"sha": "e39f2dcb2d72bb374752915aa99acabc270ffeb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e39f2dcb2d72bb374752915aa99acabc270ffeb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbcf989d7f0543b2c391268bd625b6624c198608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbcf989d7f0543b2c391268bd625b6624c198608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbcf989d7f0543b2c391268bd625b6624c198608", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbcf989d7f0543b2c391268bd625b6624c198608/comments", "author": null, "committer": null, "parents": [{"sha": "0a5cbff6d4d8aaae40d37e526e1fcbfdc42c12b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a5cbff6d4d8aaae40d37e526e1fcbfdc42c12b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a5cbff6d4d8aaae40d37e526e1fcbfdc42c12b3"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "f57c69ef72626bada4158d38b5d7de8c051b730f", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbcf989d7f0543b2c391268bd625b6624c198608/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbcf989d7f0543b2c391268bd625b6624c198608/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=cbcf989d7f0543b2c391268bd625b6624c198608", "patch": "@@ -435,7 +435,17 @@ layout_record (rec)\n \tDECL_FIELD_BITPOS (field) = size_int (const_size);\n \n       /* If this field is an anonymous union,\n-\t give each union-member the same position as the union has.  */\n+\t give each union-member the same position as the union has.\n+\n+\t ??? This is a real kludge because it makes the structure\n+\t of the types look strange.  This feature is only used by\n+\t C++, which should have build_component_ref build two\n+\t COMPONENT_REF operations, one for the union and one for\n+\t the inner field.  We set the offset of this field to zero\n+\t so that either the old or the correct method will work.\n+\t Setting DECL_FIELD_CONTEXT is wrong unless the inner fields are\n+\t moved into the type of this field, but nothing seems to break\n+\t by doing this.  This kludge should be removed after 2.4.  */\n \n       if (DECL_NAME (field) == 0\n \t  && TREE_CODE (TREE_TYPE (field)) == UNION_TYPE)\n@@ -446,6 +456,8 @@ layout_record (rec)\n \t      DECL_FIELD_CONTEXT (uelt) = DECL_FIELD_CONTEXT (field);\n \t      DECL_FIELD_BITPOS (uelt) = DECL_FIELD_BITPOS (field);\n \t    }\n+\n+\t  DECL_FIELD_BITPOS (field) = integer_zero_node;\n \t}\n \n       /* Now add size of this field to the size of the record.  */"}]}