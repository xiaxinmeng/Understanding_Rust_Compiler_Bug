{"sha": "2878027c64d62b29091f5a816d95b4ad8830210d", "node_id": "C_kwDOANBUbNoAKDI4NzgwMjdjNjRkNjJiMjkwOTFmNWE4MTZkOTViNGFkODgzMDIxMGQ", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-03-08T07:52:10Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-16T08:42:02Z"}, "message": "[Ada] Couple of small consistency tweaks\n\nThis aligns Analyze_Negation and Analyze_Unary_Op with the other similar\nprocedures in Sem_Ch4.  No functional changes.\n\ngcc/ada/\n\n\t* sem_ch4.adb (Analyze_Negation): Minor tweak.\n\t(Analyze_Unary_Op): Likewise.", "tree": {"sha": "564ee8166986efed96b4184368cffd260c4893a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/564ee8166986efed96b4184368cffd260c4893a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2878027c64d62b29091f5a816d95b4ad8830210d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2878027c64d62b29091f5a816d95b4ad8830210d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2878027c64d62b29091f5a816d95b4ad8830210d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2878027c64d62b29091f5a816d95b4ad8830210d/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82ca7489e71d4792b5f242c144bc5bf7b4c4b2c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ca7489e71d4792b5f242c144bc5bf7b4c4b2c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ca7489e71d4792b5f242c144bc5bf7b4c4b2c6"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "84b7ce199b11b44f670e495fff886edc2d57f1b8", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2878027c64d62b29091f5a816d95b4ad8830210d/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2878027c64d62b29091f5a816d95b4ad8830210d/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=2878027c64d62b29091f5a816d95b4ad8830210d", "patch": "@@ -3461,16 +3461,25 @@ package body Sem_Ch4 is\n    ----------------------\n \n    procedure Analyze_Negation (N : Node_Id) is\n-      R     : constant Node_Id := Right_Opnd (N);\n-      Op_Id : Entity_Id := Entity (N);\n+      R : constant Node_Id := Right_Opnd (N);\n+\n+      Op_Id : Entity_Id;\n \n    begin\n       Set_Etype (N, Any_Type);\n       Candidate_Type := Empty;\n \n       Analyze_Expression (R);\n \n-      if Present (Op_Id) then\n+      --  If the entity is already set, the node is the instantiation of a\n+      --  generic node with a non-local reference, or was manufactured by a\n+      --  call to Make_Op_xxx. In either case the entity is known to be valid,\n+      --  and we do not need to collect interpretations, instead we just get\n+      --  the single possible interpretation.\n+\n+      if Present (Entity (N)) then\n+         Op_Id := Entity (N);\n+\n          if Ekind (Op_Id) = E_Operator then\n             Find_Negation_Types (R, Op_Id, N);\n          else\n@@ -6067,16 +6076,25 @@ package body Sem_Ch4 is\n    ----------------------\n \n    procedure Analyze_Unary_Op (N : Node_Id) is\n-      R     : constant Node_Id := Right_Opnd (N);\n-      Op_Id : Entity_Id := Entity (N);\n+      R : constant Node_Id := Right_Opnd (N);\n+\n+      Op_Id : Entity_Id;\n \n    begin\n       Set_Etype (N, Any_Type);\n       Candidate_Type := Empty;\n \n       Analyze_Expression (R);\n \n-      if Present (Op_Id) then\n+      --  If the entity is already set, the node is the instantiation of a\n+      --  generic node with a non-local reference, or was manufactured by a\n+      --  call to Make_Op_xxx. In either case the entity is known to be valid,\n+      --  and we do not need to collect interpretations, instead we just get\n+      --  the single possible interpretation.\n+\n+      if Present (Entity (N)) then\n+         Op_Id := Entity (N);\n+\n          if Ekind (Op_Id) = E_Operator then\n             Find_Unary_Types (R, Op_Id,  N);\n          else"}]}