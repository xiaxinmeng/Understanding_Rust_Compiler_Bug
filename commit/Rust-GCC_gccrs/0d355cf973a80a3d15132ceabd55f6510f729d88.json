{"sha": "0d355cf973a80a3d15132ceabd55f6510f729d88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQzNTVjZjk3M2E4MGEzZDE1MTMyY2VhYmQ1NWY2NTEwZjcyOWQ4OA==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2016-07-13T21:34:52Z"}, "committer": {"name": "Matthew Fortune", "email": "mpf@gcc.gnu.org", "date": "2016-07-13T21:34:52Z"}, "message": "Fix return type handling for Proxy classes\n\nlibjava/\n\n\t* java/lang/reflect/natVMProxy.cc (unbox): Use ffi_arg for\n\tinteger return types smaller than a word.\n\t* testsuite/libjava.jar/ReturnInvocationHandler.java: New file.\n\t* testsuite/libjava.jar/ReturnProxyTest.jar: Likewise.\n\t* testsuite/libjava.jar/ReturnProxyTest.java: Likewise.\n\t* testsuite/libjava.jar/ReturnProxyTest.out: Likewise.\n\t* testsuite/libjava.jar/ReturnProxyTest.xfail: Likewise.\n\t* testsuite/libjava.jar/ReturnTypes.java: Likewise.\n\t* testsuite/libjava.jar/ReturnTypesImpl.java: Likewise.\n\nFrom-SVN: r238312", "tree": {"sha": "11cf9820abde4b603bbec44402852023a55e10fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11cf9820abde4b603bbec44402852023a55e10fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d355cf973a80a3d15132ceabd55f6510f729d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d355cf973a80a3d15132ceabd55f6510f729d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d355cf973a80a3d15132ceabd55f6510f729d88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d355cf973a80a3d15132ceabd55f6510f729d88/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "845a4b727a88af8f4008e24e1a02ce49607bd91a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845a4b727a88af8f4008e24e1a02ce49607bd91a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845a4b727a88af8f4008e24e1a02ce49607bd91a"}], "stats": {"total": 122, "additions": 117, "deletions": 5}, "files": [{"sha": "f7c282f9bd1cfc0c130ef8e155c3e585a9356888", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0d355cf973a80a3d15132ceabd55f6510f729d88", "patch": "@@ -1,3 +1,15 @@\n+2016-07-13  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\t* java/lang/reflect/natVMProxy.cc (unbox): Use ffi_arg for\n+\tinteger return types smaller than a word.\n+\t* testsuite/libjava.jar/ReturnInvocationHandler.java: New file.\n+\t* testsuite/libjava.jar/ReturnProxyTest.jar: Likewise.\n+\t* testsuite/libjava.jar/ReturnProxyTest.java: Likewise.\n+\t* testsuite/libjava.jar/ReturnProxyTest.out: Likewise.\n+\t* testsuite/libjava.jar/ReturnProxyTest.xfail: Likewise.\n+\t* testsuite/libjava.jar/ReturnTypes.java: Likewise.\n+\t* testsuite/libjava.jar/ReturnTypesImpl.java: Likewise.\n+\n 2016-07-13  Matthew Fortune  <matthew.fortune@imgtec.com>\n \n \t* interpret-run.cc: Use ffi_arg for FFI integer return types."}, {"sha": "19cde207835c116acf5e40e198f7d5c86cc22e0e", "filename": "libjava/java/lang/reflect/natVMProxy.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Fjava%2Flang%2Freflect%2FnatVMProxy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Fjava%2Flang%2Freflect%2FnatVMProxy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatVMProxy.cc?ref=0d355cf973a80a3d15132ceabd55f6510f729d88", "patch": "@@ -272,17 +272,17 @@ unbox (jobject o, jclass klass, void *rvalue, FFI_TYPE type)\n   if (klass == JvPrimClass (byte))\n     {\n       _Jv_CheckCast (&Byte::class$, o);\n-      *(jbyte*)rvalue = ((Byte*)o)->byteValue();\n+      *(ffi_arg*)rvalue = ((Byte*)o)->byteValue();\n     }\n   else if (klass == JvPrimClass (short))\n     {\n       _Jv_CheckCast (&Short::class$, o);\n-      *(jshort*)rvalue = ((Short*)o)->shortValue();\n+      *(ffi_arg*)rvalue = ((Short*)o)->shortValue();\n     }\n   else if (klass == JvPrimClass (int))\n     {\n       _Jv_CheckCast (&Integer::class$, o);\n-      *(jint*)rvalue = ((Integer*)o)->intValue();\n+      *(ffi_arg*)rvalue = ((Integer*)o)->intValue();\n     }\n   else if (klass == JvPrimClass (long))\n     {\n@@ -302,12 +302,12 @@ unbox (jobject o, jclass klass, void *rvalue, FFI_TYPE type)\n   else if (klass == JvPrimClass (boolean))\n     {\n       _Jv_CheckCast (&Boolean::class$, o);\n-      *(jboolean*)rvalue = ((Boolean*)o)->booleanValue();\n+      *(ffi_arg*)rvalue = ((Boolean*)o)->booleanValue();\n     }\n   else if (klass == JvPrimClass (char))\n     {\n       _Jv_CheckCast (&Character::class$, o);\n-      *(jchar*)rvalue = ((Character*)o)->charValue();\n+      *(ffi_arg*)rvalue = ((Character*)o)->charValue();\n     }\n   else\n     JvFail (\"Bad ffi type in proxy\");"}, {"sha": "18b52b73a55c370e6baa4a1b3a20ed876d8d2ff1", "filename": "libjava/testsuite/libjava.jar/ReturnInvocationHandler.java", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnInvocationHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnInvocationHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2FReturnInvocationHandler.java?ref=0d355cf973a80a3d15132ceabd55f6510f729d88", "patch": "@@ -0,0 +1,24 @@\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.Method;\n+\n+public class ReturnInvocationHandler implements InvocationHandler\n+{\n+  private Object obj;\n+  public ReturnInvocationHandler(Object obj)\n+  {\n+    this.obj = obj;\n+  }\n+  public Object invoke(Object proxy, Method m, Object[] args) throws Throwable\n+  {\n+    Object result;\n+    try\n+    {\n+      result = m.invoke(obj, args);\n+    }\n+    catch (Exception e)\n+    {\n+      throw e;\n+    }\n+    return result;\n+  }\n+}"}, {"sha": "00daabeccc8f28d1ccde9d8bea763874ab9351a7", "filename": "libjava/testsuite/libjava.jar/ReturnProxyTest.jar", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.jar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.jar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.jar?ref=0d355cf973a80a3d15132ceabd55f6510f729d88"}, {"sha": "bdd0ba93355107380537dfd63a82a98305dfc700", "filename": "libjava/testsuite/libjava.jar/ReturnProxyTest.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.java?ref=0d355cf973a80a3d15132ceabd55f6510f729d88", "patch": "@@ -0,0 +1,27 @@\n+import java.lang.reflect.Proxy;\n+\n+public class ReturnProxyTest\n+{\n+  public static void main(String[] args)\n+  {\n+    ReturnTypes orig = new ReturnTypesImpl();\n+    Object o = Proxy.newProxyInstance(orig.getClass().getClassLoader(),\n+\t\t\t\t      new Class<?>[] { ReturnTypes.class },\n+\t\t\t\t      new ReturnInvocationHandler(orig));\n+    ReturnTypes rt = (ReturnTypes)o;\n+\n+    System.out.println(orig.getBoolean());\n+    System.out.println(orig.getChar());\n+    System.out.println(orig.getByte());\n+    System.out.println(orig.getShort());\n+    System.out.println(orig.getInt());\n+    System.out.println(orig.getLong());\n+\n+    System.out.println(rt.getBoolean());\n+    System.out.println(rt.getChar());\n+    System.out.println(rt.getByte());\n+    System.out.println(rt.getShort());\n+    System.out.println(rt.getInt());\n+    System.out.println(rt.getLong());\n+  }\n+}"}, {"sha": "b141f06fe40a7438ceebd8a133e4a90c37bc9672", "filename": "libjava/testsuite/libjava.jar/ReturnProxyTest.out", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.out?ref=0d355cf973a80a3d15132ceabd55f6510f729d88", "patch": "@@ -0,0 +1,12 @@\n+false\n+a\n+-1\n+-1\n+-1\n+-1\n+false\n+a\n+-1\n+-1\n+-1\n+-1"}, {"sha": "73ffe1d5217d9abdb7a53e62724bda6ee296d75f", "filename": "libjava/testsuite/libjava.jar/ReturnProxyTest.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2FReturnProxyTest.xfail?ref=0d355cf973a80a3d15132ceabd55f6510f729d88", "patch": "@@ -0,0 +1 @@\n+main=ReturnProxyTest"}, {"sha": "9fbd6bd1529ca932437e9dda542bda0c64cee075", "filename": "libjava/testsuite/libjava.jar/ReturnTypes.java", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnTypes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnTypes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2FReturnTypes.java?ref=0d355cf973a80a3d15132ceabd55f6510f729d88", "patch": "@@ -0,0 +1,9 @@\n+public interface ReturnTypes\n+{\n+  public short getShort();\n+  public char getChar();\n+  public byte getByte();\n+  public int getInt();\n+  public long getLong();\n+  public boolean getBoolean();\n+}"}, {"sha": "33fab1b5dc0926b508f783f6d716c19fdcbf693e", "filename": "libjava/testsuite/libjava.jar/ReturnTypesImpl.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnTypesImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d355cf973a80a3d15132ceabd55f6510f729d88/libjava%2Ftestsuite%2Flibjava.jar%2FReturnTypesImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2FReturnTypesImpl.java?ref=0d355cf973a80a3d15132ceabd55f6510f729d88", "patch": "@@ -0,0 +1,27 @@\n+public class ReturnTypesImpl implements ReturnTypes\n+{\n+  public short getShort()\n+  {\n+    return -1;\n+  }\n+  public char getChar()\n+  {\n+    return 'a';\n+  }\n+  public byte getByte()\n+  {\n+    return -1;\n+  }\n+  public int getInt()\n+  {\n+    return -1;\n+  }\n+  public long getLong()\n+  {\n+    return -1;\n+  }\n+  public boolean getBoolean()\n+  {\n+    return false;\n+  }\n+}"}]}