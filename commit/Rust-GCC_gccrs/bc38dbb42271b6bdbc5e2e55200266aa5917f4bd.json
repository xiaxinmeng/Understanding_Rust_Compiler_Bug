{"sha": "bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMzOGRiYjQyMjcxYjZiZGJjNWUyZTU1MjAwMjY2YWE1OTE3ZjRiZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-13T13:08:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-13T13:08:51Z"}, "message": "[multiple changes]\n\n2015-11-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch9.adb, exp_fixd.adb, exp_util.adb, g-debpoo.adb,\n\timpunit.adb, scos.ads, sem_ch4.adb, sem_prag.adb,\n\ts-stchop-vxworks.adb: Minor reformatting.\n\n2015-11-13  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-rident.ads (Profile_Info): Enable Pure_Barriers for\n\tGNAT_Extended_Ravenscar.\n\n2015-11-13  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch6.adb (Check_Private_Overriding): Detect the special\n\tcase where the overriding subprogram is overriding a subprogram\n\tthat was declared in the same private part.\n\nFrom-SVN: r230314", "tree": {"sha": "f5547227256fa9497786ff77c30314fb8e931f30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5547227256fa9497786ff77c30314fb8e931f30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/comments", "author": null, "committer": null, "parents": [{"sha": "b512289ba21e751f7d294f4945a9e0616b5b40ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b512289ba21e751f7d294f4945a9e0616b5b40ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b512289ba21e751f7d294f4945a9e0616b5b40ab"}], "stats": {"total": 404, "additions": 222, "deletions": 182}, "files": [{"sha": "d34ba295968d5261412b1ea81d014cabb8b21cbd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -1,3 +1,20 @@\n+2015-11-13  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch9.adb, exp_fixd.adb, exp_util.adb, g-debpoo.adb,\n+\timpunit.adb, scos.ads, sem_ch4.adb, sem_prag.adb,\n+\ts-stchop-vxworks.adb: Minor reformatting.\n+\n+2015-11-13  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-rident.ads (Profile_Info): Enable Pure_Barriers for\n+\tGNAT_Extended_Ravenscar.\n+\n+2015-11-13  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Private_Overriding): Detect the special\n+\tcase where the overriding subprogram is overriding a subprogram\n+\tthat was declared in the same private part.\n+\n 2015-11-13  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch9.adb: Minor reformatting and typo fixes."}, {"sha": "80057627936e918cf176fd14063f3a2e47d2f447", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -6370,18 +6370,20 @@ package body Exp_Ch9 is\n \n       function Is_Simple_Barrier_Name (N : Node_Id) return Boolean is\n          Renamed : Node_Id;\n-      begin\n-         if not Expander_Active then\n-            return Scope (Entity (N)) = Current_Scope;\n \n+      begin\n          --  Check for case of _object.all.field (note that the explicit\n          --  dereference gets inserted by analyze/expand of _object.field).\n \n-         else\n+         if Expander_Active then\n             Renamed := Renamed_Object (Entity (N));\n-            return Present (Renamed)\n-              and then Nkind (Renamed) = N_Selected_Component\n-              and then Chars (Prefix (Prefix (Renamed))) = Name_uObject;\n+\n+            return\n+              Present (Renamed)\n+                and then Nkind (Renamed) = N_Selected_Component\n+                and then Chars (Prefix (Prefix (Renamed))) = Name_uObject;\n+         else\n+            return Scope (Entity (N)) = Current_Scope;\n          end if;\n       end Is_Simple_Barrier_Name;\n \n@@ -6392,19 +6394,18 @@ package body Exp_Ch9 is\n       function Is_Pure_Barrier (N : Node_Id) return Traverse_Result is\n       begin\n          case Nkind (N) is\n-            when N_Identifier\n-              | N_Expanded_Name =>\n-\n+            when N_Expanded_Name |\n+                 N_Identifier    =>\n                if No (Entity (N)) then\n                   return Abandon;\n                end if;\n \n                case Ekind (Entity (N)) is\n-                  when E_Constant\n-                    | E_Discriminant\n-                    | E_Named_Integer\n-                    | E_Named_Real\n-                    | E_Enumeration_Literal =>\n+                  when E_Constant            |\n+                       E_Discriminant        |\n+                       E_Named_Integer       |\n+                       E_Named_Real          |\n+                       E_Enumeration_Literal =>\n                      return OK;\n \n                   when E_Variable =>\n@@ -6416,13 +6417,13 @@ package body Exp_Ch9 is\n                      null;\n                end case;\n \n-            when N_Integer_Literal\n-              | N_Real_Literal\n-              | N_Character_Literal =>\n+            when N_Integer_Literal   |\n+                 N_Real_Literal      |\n+                 N_Character_Literal =>\n                return OK;\n \n-            when N_Op_Boolean\n-              | N_Op_Not =>\n+            when N_Op_Boolean |\n+                 N_Op_Not     =>\n                if Ekind (Entity (N)) = E_Operator then\n                   return OK;\n                end if;"}, {"sha": "89aaf26ef4438dc23e1afb7129c274bf6e062a41", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -1692,9 +1692,10 @@ package body Exp_Fixd is\n    --  result cases, and faster.\n \n    procedure Expand_Convert_Float_To_Fixed (N : Node_Id) is\n-      Rng_Check   : constant Boolean   := Do_Range_Check (N);\n       Expr        : constant Node_Id   := Expression (N);\n+      Orig_N      : constant Node_Id   := Original_Node (N);\n       Result_Type : constant Entity_Id := Etype (N);\n+      Rng_Check   : constant Boolean   := Do_Range_Check (N);\n       Small       : constant Ureal     := Small_Value (Result_Type);\n       Truncate    : Boolean;\n \n@@ -1704,27 +1705,31 @@ package body Exp_Fixd is\n       if Small = Ureal_1 then\n          Set_Result (N, Expr, Rng_Check, Trunc => True);\n \n-      --  Normal case where multiply is required\n-      --  Rounding is truncating for decimal fixed point types only,\n-      --  see RM 4.6(29), except if the conversion comes from an attribute\n-      --  reference 'Round (RM 3.5.10 (14)): The attribute is implemented\n-      --  by means of a conversion that must round.\n+      --  Normal case where multiply is required. Rounding is truncating\n+      --  for decimal fixed point types only, see RM 4.6(29), except if the\n+      --  conversion comes from an attribute reference 'Round (RM 3.5.10 (14)):\n+      --  The attribute is implemented by means of a conversion that must\n+      --  round.\n \n       else\n          if Is_Decimal_Fixed_Point_Type (Result_Type) then\n-            Truncate := Nkind (Original_Node (N)) /= N_Attribute_Reference\n-               or else Get_Attribute_Id (Attribute_Name (Original_Node (N)))\n-                /= Attribute_Round;\n+            Truncate :=\n+              Nkind (Orig_N) /= N_Attribute_Reference\n+                or else Get_Attribute_Id\n+                          (Attribute_Name (Orig_N)) /= Attribute_Round;\n          else\n             Truncate := False;\n          end if;\n \n-         Set_Result (N,\n-           Build_Multiply (N,\n-             Fpt_Value (Expr),\n-             Real_Literal (N, Ureal_1 / Small)),\n-             Rng_Check,\n-             Trunc => Truncate);\n+         Set_Result\n+           (N     => N,\n+            Expr  =>\n+              Build_Multiply\n+                (N => N,\n+                 L => Fpt_Value (Expr),\n+                 R => Real_Literal (N, Ureal_1 / Small)),\n+            Rchk  => Rng_Check,\n+            Trunc => Truncate);\n       end if;\n    end Expand_Convert_Float_To_Fixed;\n "}, {"sha": "0b9543a6beabd0cbf845dc7037be547c9b6b2eb5", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -1672,8 +1672,8 @@ package body Exp_Util is\n    function Containing_Package_With_Ext_Axioms\n      (E : Entity_Id) return Entity_Id\n    is\n+      Decl                  : Node_Id;\n       First_Ax_Parent_Scope : Entity_Id;\n-      Decl : Node_Id;\n \n    begin\n       --  E is the package or generic package which is externally axiomatized"}, {"sha": "8ed8d0e277b48542e86acb131ea4de8562fbafcb", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 75, "deletions": 76, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -31,13 +31,13 @@\n \n with GNAT.IO; use GNAT.IO;\n \n-with System.Address_Image;\n with System.CRTL;\n with System.Memory;     use System.Memory;\n with System.Soft_Links; use System.Soft_Links;\n \n with System.Traceback_Entries;\n \n+with GNAT.Debug_Utilities; use GNAT.Debug_Utilities;\n with GNAT.HTable;\n with GNAT.Traceback; use GNAT.Traceback;\n \n@@ -226,8 +226,8 @@ package body GNAT.Debug_Pools is\n       --  data, and does not include the header of that block.\n    end record;\n \n-   function Header_Of (Address : System.Address)\n-      return Allocation_Header_Access;\n+   function Header_Of\n+     (Address : System.Address) return Allocation_Header_Access;\n    pragma Inline (Header_Of);\n    --  Return the header corresponding to a previously allocated address\n \n@@ -294,7 +294,7 @@ package body GNAT.Debug_Pools is\n    --  up to the first one in the range:\n    --    Ignored_Frame_Start .. Ignored_Frame_End\n \n-   procedure Stdout_Put      (S : String);\n+   procedure Stdout_Put (S : String);\n    --  Wrapper for Put that ensures we always write to stdout instead of the\n    --  current output file defined in GNAT.IO.\n \n@@ -306,8 +306,7 @@ package body GNAT.Debug_Pools is\n      (Output_File : File_Type;\n       Prefix      : String;\n       Traceback   : Traceback_Htable_Elem_Ptr);\n-   --  Output Prefix & Traceback & EOL.\n-   --  Print nothing if Traceback is null.\n+   --  Output Prefix & Traceback & EOL. Print nothing if Traceback is null.\n \n    procedure Print_Address (File : File_Type; Addr : Address);\n    --  Output System.Address without using secondary stack.\n@@ -479,37 +478,11 @@ package body GNAT.Debug_Pools is\n    -------------------\n \n    procedure Print_Address (File : File_Type; Addr : Address) is\n-      type My_Address is mod Memory_Size;\n-      function To_My_Address is new Ada.Unchecked_Conversion\n-        (System.Address, My_Address);\n-      Address_To_Print : My_Address := To_My_Address (Addr);\n-      type Hexadecimal_Element is range 0 .. 15;\n-      Hexadecimal_Characters : constant array\n-      (Hexadecimal_Element) of Character :=\n-        ('0', '1', '2', '3', '4', '5', '6', '7',\n-         '8', '9', 'A', 'B', 'C', 'D', 'E', 'F');\n-      pragma Warnings\n-        (Off, \"types for unchecked conversion have different sizes\");\n-      function To_Hexadecimal_Element is new Ada.Unchecked_Conversion\n-        (My_Address, Hexadecimal_Element);\n-      pragma Warnings\n-        (On, \"types for unchecked conversion have different sizes\");\n-      Number_Of_Hexadecimal_Characters_In_Address : constant Natural :=\n-        Standard'Address_Size / 4;\n-      type Hexadecimal_Elements_Range is\n-        range 1 .. Number_Of_Hexadecimal_Characters_In_Address;\n-      Hexadecimal_Elements : array (Hexadecimal_Elements_Range) of\n-        Hexadecimal_Element;\n    begin\n-      for Index in Hexadecimal_Elements_Range loop\n-         Hexadecimal_Elements (Index) :=\n-           To_Hexadecimal_Element (Address_To_Print mod 16);\n-         Address_To_Print := Address_To_Print / 16;\n-      end loop;\n-      Put (File, \"0x\");\n-      for Index in reverse Hexadecimal_Elements_Range loop\n-         Put (File, Hexadecimal_Characters (Hexadecimal_Elements (Index)));\n-      end loop;\n+      --  Warning: secondary stack cannot be used here. When System.Memory\n+      --  implementation uses Debug_Pool, Print_Address can be called during\n+      --  secondary stack creation for foreign threads.\n+      Put (File, Image_C (Addr));\n    end Print_Address;\n \n    --------------\n@@ -544,14 +517,20 @@ package body GNAT.Debug_Pools is\n    begin\n       if Traceback = null then\n          declare\n-            Tr  : aliased Tracebacks_Array (1 .. Depth + Max_Ignored_Levels);\n-            Start, Len : Natural;\n+            Len   : Natural;\n+            Start : Natural;\n+            Trace : aliased Tracebacks_Array (1 .. Depth + Max_Ignored_Levels);\n \n          begin\n-            Call_Chain (Tr, Len);\n-            Skip_Levels (Depth, Tr, Start, Len,\n-                         Ignored_Frame_Start, Ignored_Frame_End);\n-            Print (Tr (Start .. Len));\n+            Call_Chain (Trace, Len);\n+            Skip_Levels\n+              (Depth               => Depth,\n+               Trace               => Trace,\n+               Start               => Start,\n+               Len                 => Len,\n+               Ignored_Frame_Start => Ignored_Frame_Start,\n+               Ignored_Frame_End   => Ignored_Frame_End);\n+            Print (Trace (Start .. Len));\n          end;\n \n       else\n@@ -613,16 +592,24 @@ package body GNAT.Debug_Pools is\n \n       declare\n          Disable_Exit_Value : constant Boolean := Disable;\n-         Trace : aliased Tracebacks_Array\n-                  (1 .. Integer (Pool.Stack_Trace_Depth) + Max_Ignored_Levels);\n-         Len, Start   : Natural;\n+\n          Elem  : Traceback_Htable_Elem_Ptr;\n+         Len   : Natural;\n+         Start : Natural;\n+         Trace : aliased Tracebacks_Array\n+                   (1 .. Integer (Pool.Stack_Trace_Depth) +\n+                      Max_Ignored_Levels);\n \n       begin\n          Disable := True;\n          Call_Chain (Trace, Len);\n-         Skip_Levels (Pool.Stack_Trace_Depth, Trace, Start, Len,\n-                      Ignored_Frame_Start, Ignored_Frame_End);\n+         Skip_Levels\n+           (Depth               => Pool.Stack_Trace_Depth,\n+            Trace               => Trace,\n+            Start               => Start,\n+            Len                 => Len,\n+            Ignored_Frame_Start => Ignored_Frame_Start,\n+            Ignored_Frame_End   => Ignored_Frame_End);\n \n          --  Check if the traceback is already in the table\n \n@@ -632,14 +619,16 @@ package body GNAT.Debug_Pools is\n          --  If not, insert it\n \n          if Elem = null then\n-            Elem := new Traceback_Htable_Elem'\n-              (Traceback => new Tracebacks_Array'(Trace (Start .. Len)),\n-               Count       => 1,\n-               Kind        => Kind,\n-               Total       => Byte_Count (Size),\n-               Frees       => 0,\n-               Total_Frees => 0,\n-               Next        => null);\n+            Elem :=\n+              new Traceback_Htable_Elem'\n+                    (Traceback   =>\n+                       new Tracebacks_Array'(Trace (Start .. Len)),\n+                     Count       => 1,\n+                     Kind        => Kind,\n+                     Total       => Byte_Count (Size),\n+                     Frees       => 0,\n+                     Total_Frees => 0,\n+                     Next        => null);\n             Backtrace_Htable.Set (Elem);\n \n          else\n@@ -674,10 +663,10 @@ package body GNAT.Debug_Pools is\n       Validity_Divisor  : constant := Storage_Alignment * System.Storage_Unit;\n \n       Max_Validity_Byte_Index : constant :=\n-                                 Memory_Chunk_Size / Validity_Divisor;\n+                                  Memory_Chunk_Size / Validity_Divisor;\n \n-      subtype Validity_Byte_Index is Integer_Address\n-                                      range 0 .. Max_Validity_Byte_Index - 1;\n+      subtype Validity_Byte_Index is\n+        Integer_Address range 0 .. Max_Validity_Byte_Index - 1;\n \n       type Byte is mod 2 ** System.Storage_Unit;\n \n@@ -833,15 +822,20 @@ package body GNAT.Debug_Pools is\n             if Allow_Unhandled_Memory then\n                if Ptr.Handled = No_Validity_Bits_Part then\n                   Ptr.Handled :=\n-                     To_Pointer (Alloc (size_t (Max_Validity_Byte_Index)));\n-                  Memset (Ptr.Handled.all'Address, 0,\n-                          size_t (Max_Validity_Byte_Index));\n+                    To_Pointer (Alloc (size_t (Max_Validity_Byte_Index)));\n+                  Memset\n+                    (A => Ptr.Handled.all'Address,\n+                     C => 0,\n+                     N => size_t (Max_Validity_Byte_Index));\n                end if;\n+\n                Ptr.Handled (Offset / System.Storage_Unit) :=\n-                  Ptr.Handled (Offset / System.Storage_Unit) or Bit;\n+                 Ptr.Handled (Offset / System.Storage_Unit) or Bit;\n             end if;\n          end Set_Handled;\n \n+      --  Start of processing for Set_Valid\n+\n       begin\n          if Ptr = No_Validity_Bits then\n \n@@ -851,10 +845,12 @@ package body GNAT.Debug_Pools is\n             if Value then\n                Ptr := new Validity_Bits;\n                Ptr.Valid :=\n-                  To_Pointer (Alloc (size_t (Max_Validity_Byte_Index)));\n+                 To_Pointer (Alloc (size_t (Max_Validity_Byte_Index)));\n                Validy_Htable.Set (Block_Number, Ptr);\n-               Memset (Ptr.Valid.all'Address, 0,\n-                       size_t (Max_Validity_Byte_Index));\n+               Memset\n+                 (A => Ptr.Valid.all'Address,\n+                  C => 0,\n+                  N => size_t (Max_Validity_Byte_Index));\n                Ptr.Valid (Offset / System.Storage_Unit) := Bit;\n                Set_Handled;\n             end if;\n@@ -870,7 +866,6 @@ package body GNAT.Debug_Pools is\n             end if;\n          end if;\n       end Set_Valid;\n-\n    end Validity;\n \n    --------------\n@@ -883,7 +878,6 @@ package body GNAT.Debug_Pools is\n       Size_In_Storage_Elements : Storage_Count;\n       Alignment                : Storage_Count)\n    is\n-\n       pragma Unreferenced (Alignment);\n       --  Ignored, we always force Storage_Alignment\n \n@@ -926,7 +920,7 @@ package body GNAT.Debug_Pools is\n       --  which is expensive.\n \n       if Pool.Logically_Deallocated >\n-        Byte_Count (Pool.Maximum_Logically_Freed_Memory)\n+           Byte_Count (Pool.Maximum_Logically_Freed_Memory)\n       then\n          Free_Physically (Pool);\n       end if;\n@@ -967,8 +961,9 @@ package body GNAT.Debug_Pools is\n       --  For the purpose of computing Storage_Address, we just do as if the\n       --  header was located first, followed by the alignment padding:\n \n-      Storage_Address := To_Address\n-        (Align (To_Integer (P.all'Address) + Integer_Address (Header_Offset)));\n+      Storage_Address :=\n+        To_Address (Align (To_Integer (P.all'Address) +\n+                      Integer_Address (Header_Offset)));\n       --  Computation is done in Integer_Address, not Storage_Offset, because\n       --  the range of Storage_Offset may not be large enough.\n \n@@ -977,9 +972,13 @@ package body GNAT.Debug_Pools is\n       pragma Assert (Storage_Address + Size_In_Storage_Elements\n                      <= P.all'Address + P'Length);\n \n-      Trace := Find_Or_Create_Traceback\n-        (Pool, Alloc, Size_In_Storage_Elements,\n-         Allocate_Label'Address, Code_Address_For_Allocate_End);\n+      Trace :=\n+        Find_Or_Create_Traceback\n+          (Pool                => Pool,\n+           Kind                => Alloc,\n+           Size                => Size_In_Storage_Elements,\n+           Ignored_Frame_Start => Allocate_Label'Address,\n+           Ignored_Frame_End   => Code_Address_For_Allocate_End);\n \n       pragma Warnings (Off);\n       --  Turn warning on alignment for convert call off. We know that in fact\n@@ -1846,7 +1845,7 @@ package body GNAT.Debug_Pools is\n                  Byte_Count'Image (Data.Total) & \") \");\n \n             for T in Data.Traceback'Range loop\n-               Put (\"0x\" & Address_Image (PC_For (Data.Traceback (T))) & ' ');\n+               Put (Image_C (PC_For (Data.Traceback (T))) & ' ');\n             end loop;\n \n             Put_Line (\"\");\n@@ -1872,7 +1871,7 @@ package body GNAT.Debug_Pools is\n \n             if Header.Alloc_Traceback /= null then\n                for T in Header.Alloc_Traceback.Traceback'Range loop\n-                  Put (\"0x\" & Address_Image\n+                  Put (Image_C\n                        (PC_For (Header.Alloc_Traceback.Traceback (T))) & ' ');\n                end loop;\n             end if;\n@@ -2010,7 +2009,7 @@ package body GNAT.Debug_Pools is\n             end;\n \n             for J in Max (M).Traceback'Range loop\n-               Put (\" 0x\" & Address_Image (PC_For (Max (M).Traceback (J))));\n+               Put (Image_C (PC_For (Max (M).Traceback (J))));\n             end loop;\n \n             New_Line;"}, {"sha": "62947b4f078d9a5a32b52ffba5482dd7c89c85ea", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -649,8 +649,8 @@ package body Impunit is\n       --  Ada/System/Interfaces are all Ada 95 units\n \n       if File = \"ada.ads\"\n-        or else File = \"system.ads\"\n         or else File = \"interfac.ads\"\n+        or else File = \"system.ads\"\n       then\n          return Ada_95_Unit;\n       end if;\n@@ -726,9 +726,9 @@ package body Impunit is\n       --  Only remaining special possibilities are children of System.RPC and\n       --  System.Garlic and special files of the form System.Aux...\n \n-      if File (1 .. 5) = \"s-rpc\"\n+      if File (1 .. 5) = \"s-aux\"\n         or else File (1 .. 5) = \"s-gar\"\n-        or else File (1 .. 5) = \"s-aux\"\n+        or else File (1 .. 5) = \"s-rpc\"\n       then\n          return Ada_95_Unit;\n       end if;"}, {"sha": "f8ecb6743016f320e0df79dbc1a20c969e01595a", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -543,7 +543,7 @@ package System.Rident is\n                            No_Select_Statements             => True,\n                            No_Specific_Termination_Handlers => True,\n                            No_Task_Termination              => True,\n-                           Simple_Barriers                  => True,\n+                           Pure_Barriers                    => True,\n                            others                           => False),\n \n                         --  Value settings for Ravenscar (same as Restricted)"}, {"sha": "8afa535a64328699be0d7f4c7cd49f51b0bd6a28", "filename": "gcc/ada/s-stchop-vxworks.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fs-stchop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fs-stchop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop-vxworks.adb?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -131,15 +131,16 @@ package body System.Stack_Checking.Operations is\n       Get_Stack_Info (Stack_Info'Access);\n \n       if Stack_Grows_Down then\n-         Limit := Stack_Info.Base - Storage_Offset (Stack_Info.Size)\n-           + Storage_Offset'(16#12_000#);\n+         Limit :=\n+           Stack_Info.Base - Storage_Offset (Stack_Info.Size) +\n+             Storage_Offset'(16#12_000#);\n       else\n-         Limit := Stack_Info.Base + Storage_Offset (Stack_Info.Size)\n-           - Storage_Offset'(16#12_000#);\n+         Limit :=\n+           Stack_Info.Base + Storage_Offset (Stack_Info.Size) -\n+             Storage_Offset'(16#12_000#);\n       end if;\n \n       Stack_Limit := Limit;\n-\n    end Set_Stack_Limit_For_Current_Task;\n \n end System.Stack_Checking.Operations;"}, {"sha": "da5cc47c5adf7579080581a6f8135cfca83fd48e", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -361,7 +361,7 @@ package SCOs is\n    end record;\n \n    No_Source_Location : constant Source_Location :=\n-     (No_Line_Number, No_Column_Number);\n+                          (No_Line_Number, No_Column_Number);\n \n    type SCO_Table_Entry is record\n       From : Source_Location := No_Source_Location;"}, {"sha": "999a78bd36adf84f5284b1deb54c00d2e68ebbc1", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -2192,9 +2192,9 @@ package body Sem_Ch4 is\n                Get_Next_Interp (I, It);\n             end loop;\n \n-            --  If no valid interpretation has been found, then the type of\n-            --  the ELSE expression does not match any interpretation of\n-            --  the THEN expression.\n+            --  If no valid interpretation has been found, then the type of the\n+            --  ELSE expression does not match any interpretation of the THEN\n+            --  expression.\n \n             if Etype (N) = Any_Type then\n                Error_Msg_N\n@@ -4665,20 +4665,19 @@ package body Sem_Ch4 is\n            and then not Is_Entity_Name (Name)\n            and then Nkind (Name) /= N_Explicit_Dereference\n          then\n-            Error_Msg_NE (\"invalid reference to internal operation \"\n-               & \"of some object of type&\", N, Type_To_Use);\n+            Error_Msg_NE\n+              (\"invalid reference to internal operation of some object of \"\n+               & \"type &\", N, Type_To_Use);\n             Set_Entity (Sel, Any_Id);\n-            Set_Etype (Sel, Any_Type);\n+            Set_Etype  (Sel, Any_Type);\n             return;\n          end if;\n \n          --  If there is no visible entity with the given name or none of the\n          --  visible entities are plausible interpretations, check whether\n          --  there is some other primitive operation with that name.\n \n-         if Ada_Version >= Ada_2005\n-           and then Is_Tagged_Type (Prefix_Type)\n-         then\n+         if Ada_Version >= Ada_2005 and then Is_Tagged_Type (Prefix_Type) then\n             if (Etype (N) = Any_Type\n                   or else not Has_Candidate)\n               and then Try_Object_Operation (N)\n@@ -4710,13 +4709,12 @@ package body Sem_Ch4 is\n             if Has_Candidate\n               and then Is_Concurrent_Type (Prefix_Type)\n               and then Nkind (Parent (N)) = N_Procedure_Call_Statement\n-\n+            then\n                --  Duplicate the call. This is required to avoid problems with\n                --  the tree transformations performed by Try_Object_Operation.\n                --  Set properly the parent of the copied call, because it is\n                --  about to be reanalyzed.\n \n-            then\n                declare\n                   Par : constant Node_Id := New_Copy_Tree (Parent (N));\n \n@@ -7305,20 +7303,16 @@ package body Sem_Ch4 is\n                   Nam : constant Entity_Id := Current_Entity (Sel);\n \n                begin\n-                  if Present (Nam)\n-                    and then Is_Overloadable (Nam)\n-                  then\n-                     if Nkind (Parent (Parent (Par)))\n-                        = N_Procedure_Call_Statement\n+                  if Present (Nam) and then Is_Overloadable (Nam) then\n+                     if Nkind (Parent (Parent (Par))) =\n+                          N_Procedure_Call_Statement\n                      then\n                         return False;\n \n-                     else\n-                        if Ekind (Nam) = E_Function\n-                          and then Present (First_Formal (Nam))\n-                        then\n-                           return Ekind (First_Formal (Nam)) = E_In_Parameter;\n-                        end if;\n+                     elsif Ekind (Nam) = E_Function\n+                       and then Present (First_Formal (Nam))\n+                     then\n+                        return Ekind (First_Formal (Nam)) = E_In_Parameter;\n                      end if;\n                   end if;\n                end;"}, {"sha": "abc125680a7070fd11261aaae03d5e7c8bc71674", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -8759,6 +8759,11 @@ package body Sem_Ch6 is\n             --  True if S overrides a function in the visible part. The\n             --  overridden function could be explicitly or implicitly declared.\n \n+            function Parent_Is_Private return Boolean;\n+            --  This detects the special case where the overriding subprogram\n+            --  is overriding a subprogram that was declared in the same\n+            --  private part. That case is illegal by 3.9.3(10).\n+\n             function Overrides_Visible_Function\n               (Partial_View : Entity_Id) return Boolean\n             is\n@@ -8797,6 +8802,14 @@ package body Sem_Ch6 is\n                return False;\n             end Overrides_Visible_Function;\n \n+            function Parent_Is_Private return Boolean is\n+               S_Decl : constant Node_Id := Parent (Parent (S));\n+               Overridden_Decl : constant Node_Id :=\n+                 Parent (Parent (Overridden_Operation (S)));\n+            begin\n+               return In_Same_List (Overridden_Decl, S_Decl);\n+            end Parent_Is_Private;\n+\n          --  Start of processing for Check_Private_Overriding\n \n          begin\n@@ -8808,10 +8821,11 @@ package body Sem_Ch6 is\n                if Is_Abstract_Type (T)\n                  and then Is_Abstract_Subprogram (S)\n                  and then (not Is_Overriding\n-                            or else not Is_Abstract_Subprogram (E))\n+                             or else not Is_Abstract_Subprogram (E)\n+                             or else Parent_Is_Private)\n                then\n                   Error_Msg_N (\"abstract subprograms must be visible \"\n-                               & \"(RM 3.9.3(10))!\", S);\n+                                 & \"(RM 3.9.3(10))!\", S);\n \n                elsif Ekind (S) = E_Function then\n                   declare"}, {"sha": "9a67e2600526f5b15cd30ee6221ab114ce85fb7b", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 45, "deletions": 36, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc38dbb42271b6bdbc5e2e55200266aa5917f4bd/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=bc38dbb42271b6bdbc5e2e55200266aa5917f4bd", "patch": "@@ -9660,11 +9660,6 @@ package body Sem_Prag is\n       --      No_Dependence => System.Multiprocessors.Dispatching_Domains\n \n       procedure Set_Ravenscar_Profile (Profile : Profile_Name; N : Node_Id) is\n-         Prefix_Entity   : Entity_Id;\n-         Selector_Entity : Entity_Id;\n-         Prefix_Node     : Node_Id;\n-         Node            : Node_Id;\n-\n          procedure Set_Error_Msg_To_Profile_Name;\n          --  Set Error_Msg_String and Error_Msg_Strlen to the name of the\n          --  profile.\n@@ -9674,16 +9669,26 @@ package body Sem_Prag is\n          -----------------------------------\n \n          procedure Set_Error_Msg_To_Profile_Name is\n-            Pragma_Args     : constant List_Id :=\n-                                Pragma_Argument_Associations (N);\n-            Profile_Name    : constant Node_Id :=\n-                                Get_Pragma_Arg (First (Pragma_Args));\n+            Prof_Nam : constant Node_Id :=\n+                         Get_Pragma_Arg\n+                           (First (Pragma_Argument_Associations (N)));\n+\n          begin\n-            Get_Name_String (Chars (Profile_Name));\n-            Adjust_Name_Case (Sloc (Profile_Name));\n+            Get_Name_String (Chars (Prof_Nam));\n+            Adjust_Name_Case (Sloc (Prof_Nam));\n             Error_Msg_Strlen := Name_Len;\n             Error_Msg_String (1 .. Name_Len) := Name_Buffer (1 .. Name_Len);\n          end Set_Error_Msg_To_Profile_Name;\n+\n+         --  Local variables\n+\n+         Nod     : Node_Id;\n+         Pref    : Node_Id;\n+         Pref_Id : Node_Id;\n+         Sel_Id  : Node_Id;\n+\n+      --  Start of processing for Set_Ravenscar_Profile\n+\n       begin\n          --  pragma Task_Dispatching_Policy (FIFO_Within_Priorities)\n \n@@ -9747,52 +9752,56 @@ package body Sem_Prag is\n          --    No_Dependence => Ada.Execution_Time.Group_Budget\n          --    No_Dependence => Ada.Execution_Time.Timers\n \n+         --  ??? The use of Name_Buffer here is suspicious. The names should\n+         --  be registered in snames.ads-tmpl and used to build the qualified\n+         --  names of units.\n+\n          if Ada_Version >= Ada_2005 then\n             Name_Buffer (1 .. 3) := \"ada\";\n             Name_Len := 3;\n \n-            Prefix_Entity := Make_Identifier (Loc, Name_Find);\n+            Pref_Id := Make_Identifier (Loc, Name_Find);\n \n             Name_Buffer (1 .. 14) := \"execution_time\";\n             Name_Len := 14;\n \n-            Selector_Entity := Make_Identifier (Loc, Name_Find);\n+            Sel_Id := Make_Identifier (Loc, Name_Find);\n \n-            Prefix_Node :=\n+            Pref :=\n               Make_Selected_Component\n                 (Sloc          => Loc,\n-                 Prefix        => Prefix_Entity,\n-                 Selector_Name => Selector_Entity);\n+                 Prefix        => Pref_Id,\n+                 Selector_Name => Sel_Id);\n \n             Name_Buffer (1 .. 13) := \"group_budgets\";\n             Name_Len := 13;\n \n-            Selector_Entity := Make_Identifier (Loc, Name_Find);\n+            Sel_Id := Make_Identifier (Loc, Name_Find);\n \n-            Node :=\n+            Nod :=\n               Make_Selected_Component\n                 (Sloc          => Loc,\n-                 Prefix        => Prefix_Node,\n-                 Selector_Name => Selector_Entity);\n+                 Prefix        => Pref,\n+                 Selector_Name => Sel_Id);\n \n             Set_Restriction_No_Dependence\n-              (Unit    => Node,\n+              (Unit    => Nod,\n                Warn    => Treat_Restrictions_As_Warnings,\n                Profile => Ravenscar);\n \n             Name_Buffer (1 .. 6) := \"timers\";\n             Name_Len := 6;\n \n-            Selector_Entity := Make_Identifier (Loc, Name_Find);\n+            Sel_Id := Make_Identifier (Loc, Name_Find);\n \n-            Node :=\n+            Nod :=\n               Make_Selected_Component\n                 (Sloc          => Loc,\n-                 Prefix        => Prefix_Node,\n-                 Selector_Name => Selector_Entity);\n+                 Prefix        => Pref,\n+                 Selector_Name => Sel_Id);\n \n             Set_Restriction_No_Dependence\n-              (Unit    => Node,\n+              (Unit    => Nod,\n                Warn    => Treat_Restrictions_As_Warnings,\n                Profile => Ravenscar);\n          end if;\n@@ -9805,32 +9814,32 @@ package body Sem_Prag is\n             Name_Buffer (1 .. 6) := \"system\";\n             Name_Len := 6;\n \n-            Prefix_Entity := Make_Identifier (Loc, Name_Find);\n+            Pref_Id := Make_Identifier (Loc, Name_Find);\n \n             Name_Buffer (1 .. 15) := \"multiprocessors\";\n             Name_Len := 15;\n \n-            Selector_Entity := Make_Identifier (Loc, Name_Find);\n+            Sel_Id := Make_Identifier (Loc, Name_Find);\n \n-            Prefix_Node :=\n+            Pref :=\n               Make_Selected_Component\n                 (Sloc          => Loc,\n-                 Prefix        => Prefix_Entity,\n-                 Selector_Name => Selector_Entity);\n+                 Prefix        => Pref_Id,\n+                 Selector_Name => Sel_Id);\n \n             Name_Buffer (1 .. 19) := \"dispatching_domains\";\n             Name_Len := 19;\n \n-            Selector_Entity := Make_Identifier (Loc, Name_Find);\n+            Sel_Id := Make_Identifier (Loc, Name_Find);\n \n-            Node :=\n+            Nod :=\n               Make_Selected_Component\n                 (Sloc          => Loc,\n-                 Prefix        => Prefix_Node,\n-                 Selector_Name => Selector_Entity);\n+                 Prefix        => Pref,\n+                 Selector_Name => Sel_Id);\n \n             Set_Restriction_No_Dependence\n-              (Unit    => Node,\n+              (Unit    => Nod,\n                Warn    => Treat_Restrictions_As_Warnings,\n                Profile => Ravenscar);\n          end if;"}]}