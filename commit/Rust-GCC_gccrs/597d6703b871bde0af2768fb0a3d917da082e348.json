{"sha": "597d6703b871bde0af2768fb0a3d917da082e348", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk3ZDY3MDNiODcxYmRlMGFmMjc2OGZiMGEzZDkxN2RhMDgyZTM0OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-04-12T17:20:22Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-04-12T17:20:22Z"}, "message": "Makefile.in (GTFILES): Move functions.h after tree.h.\n\n\t* Makefile.in (GTFILES): Move functions.h after tree.h.\n\t* function.c (reset_block_changes, record_block_change,\n\tcheck_block_change, free_block_changes): Use VEC instead of\n\tVARRAY.\n\t* function.h (function): Change the type of\n\tib_boundaries_block to VEC(tree,gc) *.\n\t* tree-inline.c (copy_cfg_body): Initialize\n\tib_boundaries_block to NULL instead of (varray_type) 0.\n\nFrom-SVN: r112894", "tree": {"sha": "66d8f4e05e0515b85712607dfa5be28d35e0661b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66d8f4e05e0515b85712607dfa5be28d35e0661b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/597d6703b871bde0af2768fb0a3d917da082e348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597d6703b871bde0af2768fb0a3d917da082e348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/597d6703b871bde0af2768fb0a3d917da082e348", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597d6703b871bde0af2768fb0a3d917da082e348/comments", "author": null, "committer": null, "parents": [{"sha": "dacb336e10d3679e72c7a6e3d6a3ff9601234e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dacb336e10d3679e72c7a6e3d6a3ff9601234e5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dacb336e10d3679e72c7a6e3d6a3ff9601234e5e"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "63ddbf5ad455e8d27829be6dfb75b0412e70baba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=597d6703b871bde0af2768fb0a3d917da082e348", "patch": "@@ -9,6 +9,15 @@\n \tfirst_partition to VEC(int,heap) *.\n \t(tpa_first_partition): Use VEC instead of VARRAY.\n \n+\t* Makefile.in (GTFILES): Move functions.h after tree.h.\n+\t* function.c (reset_block_changes, record_block_change,\n+\tcheck_block_change, free_block_changes): Use VEC instead of\n+\tVARRAY.\n+\t* function.h (function): Change the type of\n+\tib_boundaries_block to VEC(tree,gc) *.\n+\t* tree-inline.c (copy_cfg_body): Initialize\n+\tib_boundaries_block to NULL instead of (varray_type) 0.\n+\n 2006-04-12  Roger Sayle  <roger@eyesopen.com>\n \n \t* expr.c (emit_group_store): Correct operand order in call to"}, {"sha": "68db99cf3ee944f72bbcbf169e404bfe5d73fca8", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=597d6703b871bde0af2768fb0a3d917da082e348", "patch": "@@ -2803,8 +2803,8 @@ s-constrs-h: $(MD_DEPS) build/genpreds$(build_exeext)\n GTFILES = $(srcdir)/input.h $(srcdir)/coretypes.h \\\n   $(CPP_ID_DATA_H) $(host_xm_file_list) \\\n   $(tm_file_list) $(HASHTAB_H) $(SPLAY_TREE_H) $(srcdir)/bitmap.h \\\n-  $(srcdir)/coverage.c $(srcdir)/function.h $(srcdir)/rtl.h \\\n-  $(srcdir)/optabs.h $(srcdir)/tree.h $(srcdir)/libfuncs.h $(SYMTAB_H) \\\n+  $(srcdir)/coverage.c $(srcdir)/rtl.h \\\n+  $(srcdir)/optabs.h $(srcdir)/tree.h $(srcdir)/function.h $(srcdir)/libfuncs.h $(SYMTAB_H) \\\n   $(srcdir)/real.h $(srcdir)/varray.h $(srcdir)/insn-addr.h $(srcdir)/hwint.h \\\n   $(srcdir)/ipa-reference.h $(srcdir)/output.h \\\n   $(srcdir)/cselib.h $(srcdir)/basic-block.h  $(srcdir)/cgraph.h \\"}, {"sha": "26c99fa9e56cc6e8c344b88e8ae4989c4f929a7c", "filename": "gcc/function.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=597d6703b871bde0af2768fb0a3d917da082e348", "patch": "@@ -5518,8 +5518,8 @@ reposition_prologue_and_epilogue_notes (rtx f ATTRIBUTE_UNUSED)\n void\n reset_block_changes (void)\n {\n-  VARRAY_TREE_INIT (cfun->ib_boundaries_block, 100, \"ib_boundaries_block\");\n-  VARRAY_PUSH_TREE (cfun->ib_boundaries_block, NULL_TREE);\n+  cfun->ib_boundaries_block = VEC_alloc (tree, gc, 100);\n+  VEC_quick_push (tree, cfun->ib_boundaries_block, NULL_TREE);\n }\n \n /* Record the boundary for BLOCK.  */\n@@ -5535,13 +5535,12 @@ record_block_change (tree block)\n   if(!cfun->ib_boundaries_block)\n     return;\n \n-  last_block = VARRAY_TOP_TREE (cfun->ib_boundaries_block);\n-  VARRAY_POP (cfun->ib_boundaries_block);\n+  last_block = VEC_pop (tree, cfun->ib_boundaries_block);\n   n = get_max_uid ();\n-  for (i = VARRAY_ACTIVE_SIZE (cfun->ib_boundaries_block); i < n; i++)\n-    VARRAY_PUSH_TREE (cfun->ib_boundaries_block, last_block);\n+  for (i = VEC_length (tree, cfun->ib_boundaries_block); i < n; i++)\n+    VEC_safe_push (tree, gc, cfun->ib_boundaries_block, last_block);\n \n-  VARRAY_PUSH_TREE (cfun->ib_boundaries_block, block);\n+  VEC_safe_push (tree, gc, cfun->ib_boundaries_block, block);\n }\n \n /* Finishes record of boundaries.  */\n@@ -5556,17 +5555,17 @@ check_block_change (rtx insn, tree *block)\n {\n   unsigned uid = INSN_UID (insn);\n \n-  if (uid >= VARRAY_ACTIVE_SIZE (cfun->ib_boundaries_block))\n+  if (uid >= VEC_length (tree, cfun->ib_boundaries_block))\n     return;\n \n-  *block = VARRAY_TREE (cfun->ib_boundaries_block, uid);\n+  *block = VEC_index (tree, cfun->ib_boundaries_block, uid);\n }\n \n /* Releases the ib_boundaries_block records.  */\n void\n free_block_changes (void)\n {\n-  cfun->ib_boundaries_block = NULL;\n+  VEC_free (tree, gc, cfun->ib_boundaries_block);\n }\n \n /* Returns the name of the current function.  */"}, {"sha": "859709f609c860209f369517710ba59d5d28d0cd", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=597d6703b871bde0af2768fb0a3d917da082e348", "patch": "@@ -346,7 +346,7 @@ struct function GTY(())\n   location_t function_end_locus;\n \n   /* Array mapping insn uids to blocks.  */\n-  struct varray_head_tag *ib_boundaries_block;\n+  VEC(tree,gc) *ib_boundaries_block;\n \n   /* The variables unexpanded so far.  */\n   tree unexpanded_var_list;"}, {"sha": "a6ee6edc0ce7c8966ef7a69e6cac72c3d3f96ca7", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597d6703b871bde0af2768fb0a3d917da082e348/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=597d6703b871bde0af2768fb0a3d917da082e348", "patch": "@@ -893,7 +893,7 @@ copy_cfg_body (copy_body_data * id, gcov_type count, int frequency,\n       *new_cfun = *DECL_STRUCT_FUNCTION (callee_fndecl);\n       new_cfun->cfg = NULL;\n       new_cfun->decl = new_fndecl = copy_node (callee_fndecl);\n-      new_cfun->ib_boundaries_block = (varray_type) 0;\n+      new_cfun->ib_boundaries_block = NULL;\n       DECL_STRUCT_FUNCTION (new_fndecl) = new_cfun;\n       push_cfun (new_cfun);\n       init_empty_tree_cfg ();"}]}