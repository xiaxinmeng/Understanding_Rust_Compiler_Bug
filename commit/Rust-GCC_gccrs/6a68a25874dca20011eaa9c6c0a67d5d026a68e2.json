{"sha": "6a68a25874dca20011eaa9c6c0a67d5d026a68e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE2OGEyNTg3NGRjYTIwMDExZWFhOWM2YzBhNjdkNWQwMjZhNjhlMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-19T08:41:44Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-19T08:41:44Z"}, "message": "mips.c (build_mips16_function_stub): Load the target address into $1 before transfering the arguments.\n\ngcc/\n\t* config/mips/mips.c (build_mips16_function_stub): Load the\n\ttarget address into $1 before transfering the arguments.\n\tDon't use \".set noreorder\".\n\t(build_mips16_call_stub): Likewise.\n\nFrom-SVN: r129476", "tree": {"sha": "b48c319648b2875542800c0480a83a1b2b927e70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b48c319648b2875542800c0480a83a1b2b927e70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a68a25874dca20011eaa9c6c0a67d5d026a68e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a68a25874dca20011eaa9c6c0a67d5d026a68e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a68a25874dca20011eaa9c6c0a67d5d026a68e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a68a25874dca20011eaa9c6c0a67d5d026a68e2/comments", "author": null, "committer": null, "parents": [{"sha": "5b372d333746bac155f9ed14d57e2cbb93508078", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b372d333746bac155f9ed14d57e2cbb93508078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b372d333746bac155f9ed14d57e2cbb93508078"}], "stats": {"total": 54, "additions": 23, "deletions": 31}, "files": [{"sha": "e0f6a4e2850d48da97b04ea73c542dcdb43852a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a68a25874dca20011eaa9c6c0a67d5d026a68e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a68a25874dca20011eaa9c6c0a67d5d026a68e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a68a25874dca20011eaa9c6c0a67d5d026a68e2", "patch": "@@ -1,3 +1,10 @@\n+2007-10-19  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.c (build_mips16_function_stub): Load the\n+\ttarget address into $1 before transfering the arguments.\n+\tDon't use \".set noreorder\".\n+\t(build_mips16_call_stub): Likewise.\n+\n 2007-10-19  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.c (mips_output_32bit_xfer): New function."}, {"sha": "4ee701cd2668c7c7cbf7de9a6b9d00a04cd36b6d", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 16, "deletions": 31, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a68a25874dca20011eaa9c6c0a67d5d026a68e2/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a68a25874dca20011eaa9c6c0a67d5d026a68e2/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=6a68a25874dca20011eaa9c6c0a67d5d026a68e2", "patch": "@@ -5200,26 +5200,18 @@ build_mips16_function_stub (void)\n   assemble_name (asm_out_file, stubname);\n   fputs (\":\\n\", asm_out_file);\n \n-  /* We don't want the assembler to insert any nops here.  */\n-  fprintf (asm_out_file, \"\\t.set\\tnoreorder\\n\");\n-\n-  mips_output_args_xfer (current_function_args_info.fp_code, 'f');\n-\n+  /* Load the address of the MIPS16 function into $at.  Do this first so\n+     that targets with coprocessor interlocks can use an MFC1 to fill the\n+     delay slot.  */\n   fprintf (asm_out_file, \"\\t.set\\tnoat\\n\");\n   fprintf (asm_out_file, \"\\tla\\t%s,\", reg_names[GP_REG_FIRST + 1]);\n   assemble_name (asm_out_file, fnname);\n   fprintf (asm_out_file, \"\\n\");\n-  fprintf (asm_out_file, \"\\tjr\\t%s\\n\", reg_names[GP_REG_FIRST + 1]);\n-  fprintf (asm_out_file, \"\\t.set\\tat\\n\");\n \n-  /* Unfortunately, we can't fill the jump delay slot.  We can't fill\n-     with one of the mfc1 instructions, because the result is not\n-     available for one instruction, so if the very first instruction\n-     in the function refers to the register, it will see the wrong\n-     value.  */\n-  fprintf (asm_out_file, \"\\tnop\\n\");\n+  mips_output_args_xfer (current_function_args_info.fp_code, 'f');\n \n-  fprintf (asm_out_file, \"\\t.set\\treorder\\n\");\n+  fprintf (asm_out_file, \"\\tjr\\t%s\\n\", reg_names[GP_REG_FIRST + 1]);\n+  fprintf (asm_out_file, \"\\t.set\\tat\\n\");\n \n   if (!FUNCTION_NAME_ALREADY_DECLARED)\n     {\n@@ -5418,32 +5410,29 @@ build_mips16_call_stub (rtx retval, rtx fn, rtx arg_size, int fp_code)\n \t do it, since we can't generate 32-bit code during a 16-bit\n \t compilation.  */\n \n-      /* We don't want the assembler to insert any nops here.  */\n-      fprintf (asm_out_file, \"\\t.set\\tnoreorder\\n\");\n-\n-      mips_output_args_xfer (fp_code, 't');\n-\n       if (! fpret)\n \t{\n+\t  /* Load the address of the MIPS16 function into $at.  Do this\n+\t     first so that targets with coprocessor interlocks can use\n+\t     an MFC1 to fill the delay slot.  */\n \t  fprintf (asm_out_file, \"\\t.set\\tnoat\\n\");\n \t  fprintf (asm_out_file, \"\\tla\\t%s,%s\\n\", reg_names[GP_REG_FIRST + 1],\n \t\t   fnname);\n+\t}\n+\n+      mips_output_args_xfer (fp_code, 't');\n+\n+      if (! fpret)\n+\t{\n+\t  /* Jump to the previously-loaded address.  */\n \t  fprintf (asm_out_file, \"\\tjr\\t%s\\n\", reg_names[GP_REG_FIRST + 1]);\n \t  fprintf (asm_out_file, \"\\t.set\\tat\\n\");\n-\t  /* Unfortunately, we can't fill the jump delay slot.  We\n-\t     can't fill with one of the mtc1 instructions, because the\n-\t     result is not available for one instruction, so if the\n-\t     very first instruction in the function refers to the\n-\t     register, it will see the wrong value.  */\n-\t  fprintf (asm_out_file, \"\\tnop\\n\");\n \t}\n       else\n \t{\n \t  fprintf (asm_out_file, \"\\tmove\\t%s,%s\\n\",\n \t\t   reg_names[GP_REG_FIRST + 18], reg_names[GP_REG_FIRST + 31]);\n \t  fprintf (asm_out_file, \"\\tjal\\t%s\\n\", fnname);\n-\t  /* As above, we can't fill the delay slot.  */\n-\t  fprintf (asm_out_file, \"\\tnop\\n\");\n \t  switch (GET_MODE (retval))\n \t    {\n \t    case SCmode:\n@@ -5480,12 +5469,8 @@ build_mips16_call_stub (rtx retval, rtx fn, rtx arg_size, int fp_code)\n \t      gcc_unreachable ();\n \t    }\n \t  fprintf (asm_out_file, \"\\tj\\t%s\\n\", reg_names[GP_REG_FIRST + 18]);\n-\t  /* As above, we can't fill the delay slot.  */\n-\t  fprintf (asm_out_file, \"\\tnop\\n\");\n \t}\n \n-      fprintf (asm_out_file, \"\\t.set\\treorder\\n\");\n-\n #ifdef ASM_DECLARE_FUNCTION_SIZE\n       ASM_DECLARE_FUNCTION_SIZE (asm_out_file, stubname, stubdecl);\n #endif"}]}