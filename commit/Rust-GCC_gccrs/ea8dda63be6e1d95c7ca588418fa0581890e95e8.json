{"sha": "ea8dda63be6e1d95c7ca588418fa0581890e95e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4ZGRhNjNiZTZlMWQ5NWM3Y2E1ODg0MThmYTA1ODE4OTBlOTVlOA==", "commit": {"author": {"name": "Brooks Moses", "email": "brooks.moses@codesourcery.com", "date": "2007-01-05T01:26:27Z"}, "committer": {"name": "Brooks Moses", "email": "brooks@gcc.gnu.org", "date": "2007-01-05T01:26:27Z"}, "message": "intrinsic.texi: Minor cleanup, reflowing overlong paragraphs, and correcting whitespace.\n\n* intrinsic.texi: Minor cleanup, reflowing overlong\nparagraphs, and correcting whitespace.\n\nFrom-SVN: r120467", "tree": {"sha": "566d179eedbb30a276abf7506902f82694cee98e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/566d179eedbb30a276abf7506902f82694cee98e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea8dda63be6e1d95c7ca588418fa0581890e95e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8dda63be6e1d95c7ca588418fa0581890e95e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8dda63be6e1d95c7ca588418fa0581890e95e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8dda63be6e1d95c7ca588418fa0581890e95e8/comments", "author": null, "committer": null, "parents": [{"sha": "bc5b7642ebbab37d2a56a4d3de13571a4e5584ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc5b7642ebbab37d2a56a4d3de13571a4e5584ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc5b7642ebbab37d2a56a4d3de13571a4e5584ae"}], "stats": {"total": 77, "additions": 51, "deletions": 26}, "files": [{"sha": "cb41850968afe9d3bc602c457fc578394f701836", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8dda63be6e1d95c7ca588418fa0581890e95e8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8dda63be6e1d95c7ca588418fa0581890e95e8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ea8dda63be6e1d95c7ca588418fa0581890e95e8", "patch": "@@ -1,3 +1,8 @@\n+2007-01-04  Brooks Moses  <brooks.moses@codesourcery.com>\n+\n+\t* intrinsic.texi: Minor cleanup, reflowing overlong\n+\tparagraphs, and correcting whitespace.\n+\n 2007-01-04  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* intrinsic.texi (LBOUND): Add documentation."}, {"sha": "077fa876360521c257ceee3526abcdb8e4ee81c4", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 46, "deletions": 26, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8dda63be6e1d95c7ca588418fa0581890e95e8/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8dda63be6e1d95c7ca588418fa0581890e95e8/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=ea8dda63be6e1d95c7ca588418fa0581890e95e8", "patch": "@@ -16,7 +16,7 @@ included in the gfdl(7) man page.\n Some basic guidelines for editing this document:\n \n   (1) The intrinsic procedures are to be listed in alphabetical order.\n-  (2) The generic name is to be use.\n+  (2) The generic name is to be used.\n   (3) The specific names are included in the function index and in a\n       table at the end of the node (See ABS entry).\n   (4) Try to maintain the same style for each entry.\n@@ -288,7 +288,8 @@ implemented both a function and a subroutine.  Both classes\n have been implemented in @command{gfortran} for backwards compatibility\n with @command{g77}.  It is noted here that these functions and subroutines\n cannot be intermixed in a given subprogram.  In the descriptions that follow,\n-the applicable option(s) is noted.\n+the applicable standard for each intrinsic procedure is noted.\n+\n \n \n @node ABORT\n@@ -1384,7 +1385,8 @@ Elemental function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .80\n-@item @var{X} @tab The type shall be @code{REAL(*)} with a magnitude that is less than or equal to one.\n+@item @var{X} @tab The type shall be @code{REAL(*)} with a magnitude\n+that is less than or equal to one.\n @end multitable\n \n @item @emph{Return value}:\n@@ -1874,7 +1876,8 @@ Non-elemental subroutine\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .80\n-@item @var{PATH}   @tab The type shall be @code{CHARACTER(*)} and shall specify a valid path within the file system.\n+@item @var{PATH}   @tab The type shall be @code{CHARACTER(*)} and shall\n+                        specify a valid path within the file system.\n @item @var{STATUS} @tab (Optional) status flag. Returns 0 on success, \n                         a system specific and non-zero error code otherwise.\n @end multitable\n@@ -1989,8 +1992,11 @@ Elemental function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .80\n-@item @var{X} @tab The type may be @code{INTEGER(*)}, @code{REAL(*)}, or @code{COMPLEX(*)}.\n-@item @var{Y} @tab Optional, allowed if @var{X} is not @code{COMPLEX(*)}.  May be @code{INTEGER(*)} or @code{REAL(*)}. \n+@item @var{X} @tab The type may be @code{INTEGER(*)}, @code{REAL(*)},\n+                   or @code{COMPLEX(*)}.\n+@item @var{Y} @tab Optional, allowed if @var{X} is not\n+                   @code{COMPLEX(*)}.  May be @code{INTEGER(*)}\n+\t\t   or @code{REAL(*)}. \n @item @var{KIND} @tab Optional scaler integer initialization expression.\n @end multitable\n \n@@ -2501,7 +2507,8 @@ Elemental function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .80\n-@item @var{X} @tab The type shall be @code{INTEGER(*)}, @code{REAL(*)}, or @code{COMPLEX(*)}.\n+@item @var{X} @tab The type shall be @code{INTEGER(*)}, @code{REAL(*)},\n+                   or @code{COMPLEX(*)}.\n @end multitable\n \n @item @emph{Return value}:\n@@ -2547,8 +2554,10 @@ Elemental function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .80\n-@item @var{X} @tab The type may be @code{INTEGER(*)}, @code{REAL(*)}, or @code{COMPLEX(*)}.\n-@item @var{Y} @tab Optional if @var{X} is not @code{COMPLEX(*)}. May be @code{INTEGER(*)} or @code{REAL(*)}. \n+@item @var{X} @tab The type may be @code{INTEGER(*)}, @code{REAL(*)},\n+                   or @code{COMPLEX(*)}.\n+@item @var{Y} @tab Optional if @var{X} is not @code{COMPLEX(*)}. May be\n+                   @code{INTEGER(*)} or @code{REAL(*)}. \n @end multitable\n \n @item @emph{Return value}:\n@@ -4000,7 +4009,8 @@ END PROGRAM\n @item @emph{See also}:\n GNU Fortran 77 compatibility function: @ref{IARGC}\n \n-F2003 functions and subroutines: @ref{GET_COMMAND}, @ref{GET_COMMAND_ARGUMENT}, @ref{COMMAND_ARGUMENT_COUNT}\n+F2003 functions and subroutines: @ref{GET_COMMAND}, @ref{GET_COMMAND_ARGUMENT},\n+@ref{COMMAND_ARGUMENT_COUNT}\n @end table\n \n \n@@ -4606,7 +4616,8 @@ See @ref{GETARG}\n @item @emph{See also}:\n GNU Fortran 77 compatibility subroutine: @ref{GETARG}\n \n-F2003 functions and subroutines: @ref{GET_COMMAND}, @ref{GET_COMMAND_ARGUMENT}, @ref{COMMAND_ARGUMENT_COUNT}\n+F2003 functions and subroutines: @ref{GET_COMMAND}, @ref{GET_COMMAND_ARGUMENT},\n+@ref{COMMAND_ARGUMENT_COUNT}\n @end table\n \n \n@@ -4955,8 +4966,9 @@ Elemental function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .80\n-@item @var{X} @tab shall be of type @code{INTEGER(*)}, @code{REAL(*)} or @code{COMPLEX(*)}\n-@item @var{KIND}  @tab (Optional) @var{KIND} shall be a scalar integer.\n+@item @var{X} @tab shall be of type @code{INTEGER(*)}, @code{REAL(*)} or\n+@code{COMPLEX(*)} @item @var{KIND}  @tab (Optional) @var{KIND} shall be\n+a scalar integer.\n @end multitable\n \n @item @emph{Return value}:\n@@ -5488,10 +5500,12 @@ otherwise, based on the ASCII ordering.\n \n @table @asis\n @item @emph{Description}:\n-Makes a (hard) link from file @var{PATH1} to @var{PATH2}. A null character (@code{CHAR(0)}) can be used to mark the\n-end of the names in @var{PATH1} and @var{PATH2}; otherwise, trailing blanks in the file names are\n-ignored.  If the @var{STATUS} argument is supplied, it contains 0 on success or a nonzero error code\n-upon return; see @code{link(2)}.\n+Makes a (hard) link from file @var{PATH1} to @var{PATH2}. A null\n+character (@code{CHAR(0)}) can be used to mark the end of the names in\n+@var{PATH1} and @var{PATH2}; otherwise, trailing blanks in the file\n+names are ignored.  If the @var{STATUS} argument is supplied, it\n+contains 0 on success or a nonzero error code upon return; see\n+@code{link(2)}.\n \n @item @emph{Standard}:\n GNU extension\n@@ -5682,6 +5696,8 @@ end program test_loc\n @end smallexample\n @end table\n \n+\n+\n @node LOG\n @section @code{LOG} --- Logarithm function\n @cindex @code{LOG} intrinsic\n@@ -5785,6 +5801,7 @@ end program test_log10\n @end table\n \n \n+\n @node LOGICAL\n @section @code{LOGICAL} --- Convert to logical type\n @cindex @code{LOGICAL} intrinsic\n@@ -5816,7 +5833,7 @@ Elemental function\n @cindex @code{LSHIFT} intrinsic\n @cindex bit operations\n \n-Not yet implemented in GNU Fortran.\n+Intrinsic implemented, documentation pending.\n \n @table @asis\n @item @emph{Description}:\n@@ -5880,7 +5897,7 @@ To stat an open file: @ref{FSTAT}, to stat a file: @ref{STAT}\n @cindex @code{LTIME} intrinsic\n @cindex time, conversion function\n \n-Not yet implemented in GNU Fortran.\n+Intrinsic implemented, documentation pending.\n \n @table @asis\n @item @emph{Description}:\n@@ -6428,8 +6445,10 @@ Subroutine\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .80\n-@item @var{SRC} @tab @code{ALLOCATABLE}, @code{INTENT(INOUT)}, may be of any type and kind.\n-@item @var{DEST} @tab @code{ALLOCATABLE}, @code{INTENT(OUT)}, shall be of the same type, kind and rank as @var{SRC}\n+@item @var{SRC}  @tab @code{ALLOCATABLE}, @code{INTENT(INOUT)}, may be\n+                      of any type and kind.\n+@item @var{DEST} @tab @code{ALLOCATABLE}, @code{INTENT(OUT)}, shall be\n+                      of the same type, kind and rank as @var{SRC}\n @end multitable\n \n @item @emph{Return value}:\n@@ -7206,7 +7225,7 @@ The value returned is equal to\n @cindex @code{RSHIFT} intrinsic\n @cindex bit operations\n \n-Not yet implemented in GNU Fortran.\n+Intrinsic implemented, documentation pending.\n \n @table @asis\n @item @emph{Description}:\n@@ -8419,10 +8438,11 @@ Subroutine\n \n @table @asis\n @item @emph{Description}:\n-Unlinks the file @var{PATH}. A null character (@code{CHAR(0)}) can be used to mark the\n-end of the name in @var{PATH}; otherwise, trailing blanks in the file name are\n-ignored.  If the @var{STATUS} argument is supplied, it contains 0 on success or a nonzero error code\n-upon return; see @code{link(2)}.\n+Unlinks the file @var{PATH}. A null character (@code{CHAR(0)}) can be\n+used to mark the end of the name in @var{PATH}; otherwise, trailing\n+blanks in the file name are ignored.  If the @var{STATUS} argument is\n+supplied, it contains 0 on success or a nonzero error code upon return;\n+see @code{link(2)}.\n \n @item @emph{Standard}:\n GNU extension"}]}