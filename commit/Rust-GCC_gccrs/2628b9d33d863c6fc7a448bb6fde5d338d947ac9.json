{"sha": "2628b9d33d863c6fc7a448bb6fde5d338d947ac9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYyOGI5ZDMzZDg2M2M2ZmM3YTQ0OGJiNmZkZTVkMzM4ZDk0N2FjOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-25T15:16:38Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-25T15:16:38Z"}, "message": "(print_search_dirs): New variable.\n\n(build_search_list): New function.\n(putenv_from_prefixes): Call it.\n(option_map): New option --print-search-dirs.\n(process_command): Handle it.\n(main): Print installation directory and exec/startfile_prefixes if\n--print-search-dirs given.\n\nFrom-SVN: r9085", "tree": {"sha": "257e64df9b6e4a1f2fc8d751797fa2d80fee3cb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/257e64df9b6e4a1f2fc8d751797fa2d80fee3cb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2628b9d33d863c6fc7a448bb6fde5d338d947ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2628b9d33d863c6fc7a448bb6fde5d338d947ac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2628b9d33d863c6fc7a448bb6fde5d338d947ac9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2628b9d33d863c6fc7a448bb6fde5d338d947ac9/comments", "author": null, "committer": null, "parents": [{"sha": "b2a68403f8fcd2d66848eae8f512ca7d8985c72b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a68403f8fcd2d66848eae8f512ca7d8985c72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a68403f8fcd2d66848eae8f512ca7d8985c72b"}], "stats": {"total": 58, "additions": 47, "deletions": 11}, "files": [{"sha": "07fba7593fa317fad10ba1b9ebec35e59420c39f", "filename": "gcc/gcc.c", "status": "modified", "additions": 47, "deletions": 11, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2628b9d33d863c6fc7a448bb6fde5d338d947ac9/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2628b9d33d863c6fc7a448bb6fde5d338d947ac9/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=2628b9d33d863c6fc7a448bb6fde5d338d947ac9", "patch": "@@ -184,6 +184,11 @@ extern int execv (), execvp ();\n \n #define MIN_FATAL_STATUS 1\n \n+/* Flag saying to print the directories gcc will search through looking for\n+   programs, libraries, etc.  */\n+\n+static int print_search_dirs;\n+\n /* Flag saying to print the full filename of this file\n    as found through our usual search mechanism.  */\n \n@@ -255,6 +260,8 @@ struct path_prefix;\n \n static void set_spec\t\tPROTO((char *, char *));\n static struct compiler *lookup_compiler PROTO((char *, int, char *));\n+static char *build_search_list\tPROTO((struct path_prefix *, char *, int));\n+static void putenv_from_prefixes PROTO((struct path_prefix *, char *));\n static char *find_a_file\tPROTO((struct path_prefix *, char *, int));\n static void add_prefix\t\tPROTO((struct path_prefix *, char *, int, int, int *));\n static char *skip_whitespace\tPROTO((char *));\n@@ -904,6 +911,7 @@ struct option_map option_map[] =\n    {\"--pipe\", \"-pipe\", 0},\n    {\"--prefix\", \"-B\", \"a\"},\n    {\"--preprocess\", \"-E\", 0},\n+   {\"--print-search-dirs\", \"-print-search-dirs\", 0},\n    {\"--print-file-name\", \"-print-file-name=\", \"aj\"},\n    {\"--print-libgcc-file-name\", \"-print-libgcc-file-name\", 0},\n    {\"--print-missing-file-dependencies\", \"-MG\", 0},\n@@ -1715,27 +1723,33 @@ putenv (str)\n #endif\t/* HAVE_PUTENV */\n \n \f\n-/* Rebuild the COMPILER_PATH and LIBRARY_PATH environment variables for collect.  */\n+/* Build a list of search directories from PATHS.\n+   PREFIX is a string to prepend to the list.\n+   If CHECK_DIR_P is non-zero we ensure the directory exists.\n+   This is used mostly by putenv_from_prefixes so we use `collect_obstack'.\n+   It is also used by the --print-search-dirs flag.  */\n \n-static void\n-putenv_from_prefixes (paths, env_var)\n+static char *\n+build_search_list (paths, prefix, check_dir_p)\n      struct path_prefix *paths;\n-     char *env_var;\n+     char *prefix;\n+     int check_dir_p;\n {\n   int suffix_len = (machine_suffix) ? strlen (machine_suffix) : 0;\n   int just_suffix_len\n     = (just_machine_suffix) ? strlen (just_machine_suffix) : 0;\n   int first_time = TRUE;\n   struct prefix_list *pprefix;\n \n-  obstack_grow (&collect_obstack, env_var, strlen (env_var));\n+  obstack_grow (&collect_obstack, prefix, strlen (prefix));\n \n   for (pprefix = paths->plist; pprefix != 0; pprefix = pprefix->next)\n     {\n       int len = strlen (pprefix->prefix);\n \n       if (machine_suffix\n-\t  && is_directory (pprefix->prefix, machine_suffix, 0))\n+\t  && (!check_dir_p\n+\t      || is_directory (pprefix->prefix, machine_suffix, 0)))\n \t{\n \t  if (!first_time)\n \t    obstack_1grow (&collect_obstack, PATH_SEPARATOR);\n@@ -1747,7 +1761,8 @@ putenv_from_prefixes (paths, env_var)\n \n       if (just_machine_suffix\n \t  && pprefix->require_machine_suffix == 2\n-\t  && is_directory (pprefix->prefix, just_machine_suffix, 0))\n+\t  && (!check_dir_p\n+\t      || is_directory (pprefix->prefix, just_machine_suffix, 0)))\n \t{\n \t  if (!first_time)\n \t    obstack_1grow (&collect_obstack, PATH_SEPARATOR);\n@@ -1768,9 +1783,18 @@ putenv_from_prefixes (paths, env_var)\n \t}\n     }\n   obstack_1grow (&collect_obstack, '\\0');\n-  putenv (obstack_finish (&collect_obstack));\n+  return obstack_finish (&collect_obstack);\n }\n \n+/* Rebuild the COMPILER_PATH and LIBRARY_PATH environment variables for collect.  */\n+\n+static void\n+putenv_from_prefixes (paths, env_var)\n+     struct path_prefix *paths;\n+     char *env_var;\n+{\n+  putenv (build_search_list (paths, env_var, 1));\n+}\n \f\n /* Search for NAME using the prefix list PREFIXES.  MODE is passed to\n    access to check permissions.\n@@ -2588,12 +2612,14 @@ process_command (argc, argv)\n \t  printf (\"%s\\n\", spec_machine);\n \t  exit  (0);\n \t}\n+      else if (! strcmp (argv[i], \"-print-search-dirs\"))\n+\tprint_search_dirs = 1;\n       else if (! strcmp (argv[i], \"-print-libgcc-file-name\"))\n-\t  print_file_name = \"libgcc.a\";\n+\tprint_file_name = \"libgcc.a\";\n       else if (! strncmp (argv[i], \"-print-file-name=\", 17))\n-\t  print_file_name = argv[i] + 17;\n+\tprint_file_name = argv[i] + 17;\n       else if (! strncmp (argv[i], \"-print-prog-name=\", 17))\n-\t  print_prog_name = argv[i] + 17;\n+\tprint_prog_name = argv[i] + 17;\n       else if (! strcmp (argv[i], \"-print-multi-lib\"))\n \tprint_multi_lib = 1;\n       else if (! strcmp (argv[i], \"-print-multi-directory\"))\n@@ -2853,6 +2879,8 @@ process_command (argc, argv)\n \t;\n       else if (! strncmp (argv[i], \"-Wp,\", 4))\n \t;\n+      else if (! strcmp (argv[i], \"-print-search-dirs\"))\n+\t;\n       else if (! strcmp (argv[i], \"-print-libgcc-file-name\"))\n \t;\n       else if (! strncmp (argv[i], \"-print-file-name=\", 17))\n@@ -4411,6 +4439,14 @@ main (argc, argv)\n \n   /* Obey some of the options.  */\n \n+  if (print_search_dirs)\n+    {\n+      printf (\"install: %s%s\\n\", standard_exec_prefix, machine_suffix);\n+      printf (\"programs: %s\\n\", build_search_list (&exec_prefixes, \"\", 0));\n+      printf (\"libraries: %s\\n\", build_search_list (&startfile_prefixes, \"\", 0));\n+      exit (0);\n+    }\n+\n   if (print_file_name)\n     {\n       printf (\"%s\\n\", find_file (print_file_name));"}]}