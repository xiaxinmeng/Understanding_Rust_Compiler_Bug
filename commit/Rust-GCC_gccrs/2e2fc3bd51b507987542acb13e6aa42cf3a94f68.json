{"sha": "2e2fc3bd51b507987542acb13e6aa42cf3a94f68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUyZmMzYmQ1MWI1MDc5ODc1NDJhY2IxM2U2YWE0MmNmM2E5NGY2OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-07-31T17:52:38Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-07-31T17:52:38Z"}, "message": "compiler: Don't allow builtin function values.\n\n    \n    According to the spec, http://golang.org/ref/spec#Built-in_functions:\n    \"built-in functions do not have standard Go types, so they can only\n    appear in call expressions; they cannot be used as function values.\"\n    \n    Fixes golang/go#11570.\n    \n    Reviewed-on: https://go-review.googlesource.com/12543\n\nFrom-SVN: r226448", "tree": {"sha": "0ae30aae68ac2ad7743476883cba3bddde373e20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae30aae68ac2ad7743476883cba3bddde373e20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e2fc3bd51b507987542acb13e6aa42cf3a94f68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2fc3bd51b507987542acb13e6aa42cf3a94f68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e2fc3bd51b507987542acb13e6aa42cf3a94f68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2fc3bd51b507987542acb13e6aa42cf3a94f68/comments", "author": null, "committer": null, "parents": [{"sha": "d459fde28f3d37e03d87b221b504a525ddb58665", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d459fde28f3d37e03d87b221b504a525ddb58665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d459fde28f3d37e03d87b221b504a525ddb58665"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "caf0af58f1bef895094bf087e52df107a41f4476", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2fc3bd51b507987542acb13e6aa42cf3a94f68/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2fc3bd51b507987542acb13e6aa42cf3a94f68/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=2e2fc3bd51b507987542acb13e6aa42cf3a94f68", "patch": "@@ -1,4 +1,4 @@\n-9931f2c150e2da4b7d468db332823d8ef4fb8c34\n+4c676d965c19b9c5d5e5049d0f8070502e9c27b0\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "0824102ccc16b4011729fd9f254aebb4671c9ee0", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2fc3bd51b507987542acb13e6aa42cf3a94f68/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2fc3bd51b507987542acb13e6aa42cf3a94f68/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=2e2fc3bd51b507987542acb13e6aa42cf3a94f68", "patch": "@@ -3154,6 +3154,28 @@ Check_types_traverse::variable(Named_object* named_object)\n \t\t     reason.c_str());\n \t  var->clear_init();\n \t}\n+      else if (init != NULL\n+               && init->func_expression() != NULL)\n+        {\n+          Named_object* no = init->func_expression()->named_object();\n+          Function_type* fntype;\n+          if (no->is_function())\n+            fntype = no->func_value()->type();\n+          else if (no->is_function_declaration())\n+            fntype = no->func_declaration_value()->type();\n+          else\n+            go_unreachable();\n+\n+          // Builtin functions cannot be used as function values for variable\n+          // initialization.\n+          if (fntype->is_builtin())\n+            {\n+              error_at(init->location(),\n+                       \"invalid use of special builtin function %qs; \"\n+                       \"must be called\",\n+                       no->message_name().c_str());\n+            }\n+        }\n       else if (!var->is_used()\n \t       && !var->is_global()\n \t       && !var->is_parameter()"}]}