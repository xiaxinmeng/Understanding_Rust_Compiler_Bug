{"sha": "9d0bb2ea718b444970519eb7faae8123c282501d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQwYmIyZWE3MThiNDQ0OTcwNTE5ZWI3ZmFhZTgxMjNjMjgyNTAxZA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-01-20T21:15:13Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-01-20T21:15:13Z"}, "message": "create_testsuite_files: Add testsuite/experimental in the list of folders to search for tests.\n\n2014-01-20  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* scripts/create_testsuite_files: Add testsuite/experimental in\n\tthe list of folders to search for tests.\n\t* include/experimental/string_view\n\t(basic_string_view<>::operator[]): Comment _GLIBCXX_DEBUG_ASSERT,\n\tincompatible with constexpr qualifier.\n\t(basic_string_view<>::front()): Likewise.\n\t(basic_string_view<>::back()): Likewise.\n\t* testsuite/experimental/string_view/element_access/wchar_t/2.cc:\n\tMerge dg-options directives into one.\n\t* testsuite/experimental/string_view/element_access/char/2.cc:\n\tLikewise. Remove invalid experimental namespace scope on\n\tstring_view_type.\n\nFrom-SVN: r206859", "tree": {"sha": "e4106a7a2cc8170f5861acb025611a4721a35a5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4106a7a2cc8170f5861acb025611a4721a35a5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d0bb2ea718b444970519eb7faae8123c282501d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0bb2ea718b444970519eb7faae8123c282501d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d0bb2ea718b444970519eb7faae8123c282501d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0bb2ea718b444970519eb7faae8123c282501d/comments", "author": null, "committer": null, "parents": [{"sha": "1cf11770053ce827551849ab721edccb17b4fdde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf11770053ce827551849ab721edccb17b4fdde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cf11770053ce827551849ab721edccb17b4fdde"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "c25e0f31b5ccaa05def5003aa0ba67d1a5716c25", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0bb2ea718b444970519eb7faae8123c282501d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0bb2ea718b444970519eb7faae8123c282501d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9d0bb2ea718b444970519eb7faae8123c282501d", "patch": "@@ -1,3 +1,18 @@\n+2014-01-20  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* scripts/create_testsuite_files: Add testsuite/experimental in\n+\tthe list of folders to search for tests.\n+\t* include/experimental/string_view\n+\t(basic_string_view<>::operator[]): Comment _GLIBCXX_DEBUG_ASSERT,\n+\tincompatible with constexpr qualifier.\n+\t(basic_string_view<>::front()): Likewise.\n+\t(basic_string_view<>::back()): Likewise.\n+\t* testsuite/experimental/string_view/element_access/wchar_t/2.cc:\n+\tMerge dg-options directives into one.\n+\t* testsuite/experimental/string_view/element_access/char/2.cc:\n+\tLikewise. Remove invalid experimental namespace scope on\n+\tstring_view_type.\n+\n 2014-01-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/56267"}, {"sha": "ab6943d806bce74129c74d9448f57a6fe93c7f48", "filename": "libstdc++-v3/include/experimental/string_view", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0bb2ea718b444970519eb7faae8123c282501d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0bb2ea718b444970519eb7faae8123c282501d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view?ref=9d0bb2ea718b444970519eb7faae8123c282501d", "patch": "@@ -181,7 +181,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr const _CharT&\n       operator[](size_type __pos) const\n       {\n-\t_GLIBCXX_DEBUG_ASSERT(__pos <= this->_M_len);\n+\t// TODO: Assert to restore in a way compatible with the constexpr.\n+\t// _GLIBCXX_DEBUG_ASSERT(__pos <= this->_M_len);\n \treturn *(this->_M_str + __pos);\n       }\n \n@@ -200,14 +201,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr const _CharT&\n       front() const\n       {\n-\t_GLIBCXX_DEBUG_ASSERT(this->_M_len > 0);\n+\t// TODO: Assert to restore in a way compatible with the constexpr.\n+\t// _GLIBCXX_DEBUG_ASSERT(this->_M_len > 0);\n \treturn *this->_M_str;\n       }\n \n       constexpr const _CharT&\n       back() const\n       {\n-\t_GLIBCXX_DEBUG_ASSERT(this->_M_len > 0);\n+\t// TODO: Assert to restore in a way compatible with the constexpr.\n+\t// _GLIBCXX_DEBUG_ASSERT(this->_M_len > 0);\n \treturn *(this->_M_str + this->_M_len - 1);\n       }\n "}, {"sha": "ef2fcc0e5d5eca2b8709e98eb9270dbeaf30f251", "filename": "libstdc++-v3/testsuite/experimental/string_view/element_access/char/2.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0bb2ea718b444970519eb7faae8123c282501d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0bb2ea718b444970519eb7faae8123c282501d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2F2.cc?ref=9d0bb2ea718b444970519eb7faae8123c282501d", "patch": "@@ -1,6 +1,5 @@\n-// { dg-options \"-std=gnu++1y\" }\n // { dg-do run { xfail *-*-* } }\n-// { dg-options \"-O0\" }\n+// { dg-options \"-std=gnu++1y -O0\" }\n // { dg-require-debug-mode \"\" }\n \n // Copyright (C) 2013-2014 Free Software Foundation, Inc.\n@@ -26,6 +25,6 @@ int\n main()\n {\n   typedef std::experimental::string_view string_view_type;\n-  experimental::string_view_type s;\n+  string_view_type s;\n   s[0]; // abort\n }"}, {"sha": "4ffa7ddfe3806e972026509616a40dbadbb0bedd", "filename": "libstdc++-v3/testsuite/experimental/string_view/element_access/wchar_t/2.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0bb2ea718b444970519eb7faae8123c282501d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0bb2ea718b444970519eb7faae8123c282501d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2F2.cc?ref=9d0bb2ea718b444970519eb7faae8123c282501d", "patch": "@@ -1,6 +1,5 @@\n-// { dg-options \"-std=gnu++1y\" }\n // { dg-do run { xfail *-*-* } }\n-// { dg-options \"-O0\" }\n+// { dg-options \"-std=gnu++1y -O0\" }\n // { dg-require-debug-mode \"\" }\n \n // Copyright (C) 2013-2014 Free Software Foundation, Inc."}]}