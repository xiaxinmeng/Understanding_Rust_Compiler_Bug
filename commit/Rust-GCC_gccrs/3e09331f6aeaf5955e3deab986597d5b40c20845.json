{"sha": "3e09331f6aeaf5955e3deab986597d5b40c20845", "node_id": "C_kwDOANBUbNoAKDNlMDkzMzFmNmFlYWY1OTU1ZTNkZWFiOTg2NTk3ZDViNDBjMjA4NDU", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@embecosm.com", "date": "2021-11-15T03:14:31Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@embecosm.com", "date": "2021-11-15T03:14:31Z"}, "message": "VAX: Implement the `-mlra' command-line option\n\nAdd the the `-mlra' command-line option for the VAX target, with the\nusual semantics of enabling Local Register Allocation, off by default.\n\nLRA remains unstable with the VAX target, with numerous ICEs throughout\nthe testsuite and worse code produced overall where successful, however\nthe presence of a command line option to enable it makes it easier to\nexperiment with it as the compiler does not have to be rebuilt to flip\nbetween the old reload and LRA.\n\n\tgcc/\n\t* config/vax/vax.c (vax_lra_p): New prototype and function.\n\t(TARGET_LRA_P): Wire it.\n\t* config/vax/vax.opt (mlra): New option.\n\t* doc/invoke.texi (Option Summary, VAX Options): Document the\n\tnew option.", "tree": {"sha": "54234469f6a033b8d4dd1390e699558c26c6fc3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54234469f6a033b8d4dd1390e699558c26c6fc3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e09331f6aeaf5955e3deab986597d5b40c20845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e09331f6aeaf5955e3deab986597d5b40c20845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e09331f6aeaf5955e3deab986597d5b40c20845", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e09331f6aeaf5955e3deab986597d5b40c20845/comments", "author": {"login": "maciej-w-rozycki", "id": 117297942, "node_id": "U_kgDOBv3TFg", "avatar_url": "https://avatars.githubusercontent.com/u/117297942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maciej-w-rozycki", "html_url": "https://github.com/maciej-w-rozycki", "followers_url": "https://api.github.com/users/maciej-w-rozycki/followers", "following_url": "https://api.github.com/users/maciej-w-rozycki/following{/other_user}", "gists_url": "https://api.github.com/users/maciej-w-rozycki/gists{/gist_id}", "starred_url": "https://api.github.com/users/maciej-w-rozycki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maciej-w-rozycki/subscriptions", "organizations_url": "https://api.github.com/users/maciej-w-rozycki/orgs", "repos_url": "https://api.github.com/users/maciej-w-rozycki/repos", "events_url": "https://api.github.com/users/maciej-w-rozycki/events{/privacy}", "received_events_url": "https://api.github.com/users/maciej-w-rozycki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "maciej-w-rozycki", "id": 117297942, "node_id": "U_kgDOBv3TFg", "avatar_url": "https://avatars.githubusercontent.com/u/117297942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maciej-w-rozycki", "html_url": "https://github.com/maciej-w-rozycki", "followers_url": "https://api.github.com/users/maciej-w-rozycki/followers", "following_url": "https://api.github.com/users/maciej-w-rozycki/following{/other_user}", "gists_url": "https://api.github.com/users/maciej-w-rozycki/gists{/gist_id}", "starred_url": "https://api.github.com/users/maciej-w-rozycki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maciej-w-rozycki/subscriptions", "organizations_url": "https://api.github.com/users/maciej-w-rozycki/orgs", "repos_url": "https://api.github.com/users/maciej-w-rozycki/repos", "events_url": "https://api.github.com/users/maciej-w-rozycki/events{/privacy}", "received_events_url": "https://api.github.com/users/maciej-w-rozycki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b85a03ae11b157d60ddf93b71632efe0bde3bafd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b85a03ae11b157d60ddf93b71632efe0bde3bafd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b85a03ae11b157d60ddf93b71632efe0bde3bafd"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "cf77db35398c0df9b3df9467324ef4cb6f55f786", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e09331f6aeaf5955e3deab986597d5b40c20845/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e09331f6aeaf5955e3deab986597d5b40c20845/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=3e09331f6aeaf5955e3deab986597d5b40c20845", "patch": "@@ -62,6 +62,7 @@ static rtx vax_function_arg (cumulative_args_t, const function_arg_info &);\n static void vax_function_arg_advance (cumulative_args_t,\n \t\t\t\t      const function_arg_info &);\n static rtx vax_struct_value_rtx (tree, int);\n+static bool vax_lra_p (void);\n static void vax_asm_trampoline_template (FILE *);\n static void vax_trampoline_init (rtx, tree, rtx);\n static poly_int64 vax_return_pops_args (tree, tree, poly_int64);\n@@ -114,7 +115,7 @@ static HOST_WIDE_INT vax_starting_frame_offset (void);\n #define TARGET_STRUCT_VALUE_RTX vax_struct_value_rtx\n \n #undef TARGET_LRA_P\n-#define TARGET_LRA_P hook_bool_void_false\n+#define TARGET_LRA_P vax_lra_p\n \n #undef TARGET_LEGITIMATE_ADDRESS_P\n #define TARGET_LEGITIMATE_ADDRESS_P vax_legitimate_address_p\n@@ -1221,6 +1222,14 @@ vax_struct_value_rtx (tree fntype ATTRIBUTE_UNUSED,\n   return gen_rtx_REG (Pmode, VAX_STRUCT_VALUE_REGNUM);\n }\n \n+/* Return true if we use LRA instead of reload pass.  */\n+\n+static bool\n+vax_lra_p (void)\n+{\n+  return TARGET_LRA;\n+}\n+\n /* Output integer move instructions.  */\n \n bool"}, {"sha": "712ba3a6c9e0d1bfc35d9e3f775f956c02ed9e29", "filename": "gcc/config/vax/vax.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e09331f6aeaf5955e3deab986597d5b40c20845/gcc%2Fconfig%2Fvax%2Fvax.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e09331f6aeaf5955e3deab986597d5b40c20845/gcc%2Fconfig%2Fvax%2Fvax.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.opt?ref=3e09331f6aeaf5955e3deab986597d5b40c20845", "patch": "@@ -42,6 +42,10 @@ munix\n Target RejectNegative Mask(UNIX_ASM)\n Generate code for UNIX assembler.\n \n+mlra\n+Target Mask(LRA)\n+Enable Local Register Allocation.\n+\n mvaxc-alignment\n Target RejectNegative Mask(VAXC_ALIGNMENT)\n Use VAXC structure conventions."}, {"sha": "2d9c1782f332433b7949b74c37e15b9df42a04d8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e09331f6aeaf5955e3deab986597d5b40c20845/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e09331f6aeaf5955e3deab986597d5b40c20845/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3e09331f6aeaf5955e3deab986597d5b40c20845", "patch": "@@ -1364,7 +1364,7 @@ See RS/6000 and PowerPC Options.\n -mbig-switch}\n \n @emph{VAX Options}\n-@gccoptlist{-mg  -mgnu  -munix}\n+@gccoptlist{-mg  -mgnu  -munix  -mlra}\n \n @emph{Visium Options}\n @gccoptlist{-mdebug  -msim  -mfpu  -mno-fpu  -mhard-float  -msoft-float @gol\n@@ -30523,6 +30523,13 @@ GNU assembler is being used.\n @item -mg\n @opindex mg\n Output code for G-format floating-point numbers instead of D-format.\n+\n+@item -mlra\n+@itemx -mno-lra\n+@opindex mlra\n+@opindex mno-lra\n+Enable Local Register Allocation.  This is still experimental for the VAX,\n+so by default the compiler uses standard reload.\n @end table\n \n @node Visium Options"}]}