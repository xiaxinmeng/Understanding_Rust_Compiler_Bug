{"sha": "4e190cf35ce351b8470aced608eebfba027c9564", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUxOTBjZjM1Y2UzNTFiODQ3MGFjZWQ2MDhlZWJmYmEwMjdjOTU2NA==", "commit": {"author": {"name": "Christopher Faylor", "email": "cgf@cygnus.com", "date": "2001-02-03T04:17:58Z"}, "committer": {"name": "Christopher Faylor", "email": "cgf@gcc.gnu.org", "date": "2001-02-03T04:17:58Z"}, "message": "cygwin.h (CPP_SPEC): Reorganize YA to better handle cross compilation environment.\n\n* config/i386/cygwin.h (CPP_SPEC): Reorganize YA to better handle cross\ncompilation environment.\n* config/i386/t-cygwin (T_CPPFLAGS): Define CYGWIN_CROSS_DIR to allow control\nover location of cygwin includes and libs.\n\nFrom-SVN: r39426", "tree": {"sha": "d3fb4e9de1aebf90cf7d5746c0f035b9930a45ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3fb4e9de1aebf90cf7d5746c0f035b9930a45ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e190cf35ce351b8470aced608eebfba027c9564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e190cf35ce351b8470aced608eebfba027c9564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e190cf35ce351b8470aced608eebfba027c9564", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e190cf35ce351b8470aced608eebfba027c9564/comments", "author": null, "committer": null, "parents": [{"sha": "c98f0cdb547eb7608d3bb2ff4f3dbdfb829fd429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98f0cdb547eb7608d3bb2ff4f3dbdfb829fd429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98f0cdb547eb7608d3bb2ff4f3dbdfb829fd429"}], "stats": {"total": 69, "additions": 29, "deletions": 40}, "files": [{"sha": "cb97f0884ffb725044848856d619f1e01d8d2823", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e190cf35ce351b8470aced608eebfba027c9564/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e190cf35ce351b8470aced608eebfba027c9564/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e190cf35ce351b8470aced608eebfba027c9564", "patch": "@@ -1,3 +1,10 @@\n+Fri Feb  2 23:15:29 2001  Christopher Faylor <cgf@cygnus.com>\n+\n+\t* config/i386/cygwin.h (CPP_SPEC): Reorganize YA to better handle cross\n+\tcompilation environment.\n+\t* config/i386/t-cygwin (T_CPPFLAGS): Define CYGWIN_CROSS_DIR to allow\n+\tcontrol over location of cygwin includes and libs.\n+\n 2001-02-03  Michael Hayes  <m.hayes@elec.canterbury.ac.nz)\n \n \t* c4x.h\t(HARD_REGNO_CALL_PART_CLOBBERED): Fix typo."}, {"sha": "32fa987937a61667e60c87b200a0a25586d774cf", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 20, "deletions": 40, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e190cf35ce351b8470aced608eebfba027c9564/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e190cf35ce351b8470aced608eebfba027c9564/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=4e190cf35ce351b8470aced608eebfba027c9564", "patch": "@@ -81,40 +81,26 @@ Boston, MA 02111-1307, USA. */\n #undef LIBGCC_SPEC\n #define LIBGCC_SPEC \"%{mno-cygwin: %{mthreads:-lmingwthrd} -lmingw32} -lgcc %{mno-cygwin:-lmoldname -lmsvcrt}\"\n \n-#undef STARTFILE_SPEC\n-\n-#undef CPP_SPEC\n #ifdef CROSS_COMPILE\n-#define STARTFILE_SPEC \"%{shared|mdll: %{mno-cygwin:dllcrt2%O%s}} \\\n-  %{!shared: %{!mdll: %{!mno-cygwin:crt0%O%s} \\\n-    %{mno-cygwin:-L../../../../i686-pc-cygwin/lib/mingw mingw/crt2%O%s} \\\n-  %{pg:gcrt0%O%s}}}\"\n-#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\\n-  -D__stdcall=__attribute__((__stdcall__)) \\\n-  -D__cdecl=__attribute__((__cdecl__)) \\\n-  %{!ansi:-D_stdcall=__attribute__((__stdcall__)) \\\n-    -D_cdecl=__attribute__((__cdecl__))} \\\n-  -D__declspec(x)=__attribute__((x)) \\\n-  -D__i386__ -D__i386 \\\n-  %{!mno-cygwin:-D__CYGWIN32__ -D__CYGWIN__ -Dunix -D__unix__ -D__unix \\\n-    -isystem /usr/local/native-include \\\n-    -idirafter /usr/native-include} \\\n-  %{mno-win32: %{mno-cygwin: %emno-cygwin and mno-win32 are not compatible}} \\\n-  %{!mno-win32:-D_WIN32 -DWINNT -isystem /usr/include/w32api} \\\n-  %{mno-cygwin:-DWIN32 -D__WIN32__ -D__MINGW32__=0.2 \\\n-    %{mthreads:-D_MT} \\\n-    -isystem /usr/local/native-include/mingw \\\n-    -idirafter /usr/native-include/mingw \\\n-    -iwithprefixbefore ../../../../mingw/include/g++-3 \\\n-    -iwithprefixbefore ../../../../mingw/include \\\n-    -iwithprefixbefore ../../../../mingw32/include/g++-3 \\\n-    -iwithprefixbefore ../../../../mingw32/include } \\\n-   %{!mno-win32:-DWIN32 -D_WIN32 -D__WIN32 -D__WIN32__ -DWINNT \\\n-     -idirafter /usr/include/w32api}\"\n+#define CYGWIN_INCLUDES \"-idirafter\" CYGWIN_CROSS_DIR \"/include\"\n+#define CYGWIN_W32API \"-I\" CYGWIN_CROSS_DIR \"/include/w32api\"\n+#define CYGWIN_LIB CYGWIN_CROSS_DIR \"/lib\"\n+#define MINGW_LIBS \"-L\" CYGWIN_CROSS_DIR \"/lib/mingw\"\n+#define MINGW_INCLUDES \"-I\" CYGWIN_CROSS_DIR \"/include/mingw\"\n #else\n+#define CYGWIN_INCLUDES \"-isystem /usr/local/include -idirafter /usr/include\"\n+#define CYGWIN_W32API \"-I/usr/include/w32api\"\n+#define CYGWIN_LIB \"/usr/lib\"\n+#define MINGW_LIBS \"-L/usr/local/lib/mingw -L/usr/lib/mingw\"\n+#define MINGW_INCLUDES \"-isystem /usr/local/include/mingw -idirafter /usr/include/mingw\"\n+#endif\n+\n+#undef STARTFILE_SPEC\n #define STARTFILE_SPEC \"%{shared|mdll: %{mno-cygwin:dllcrt2%O%s}} \\\n-  %{!shared: %{!mdll: %{!mno-cygwin:crt0%O%s} %{mno-cygwin:-L/usr/local/lib/mingw -L/usr/lib/mingw mingw/crt2%O%s} \\\n+  %{!shared: %{!mdll: %{!mno-cygwin:crt0%O%s} %{mno-cygwin:\" MINGW_LIBS \" mingw/crt2%O%s} \\\n   %{pg:gcrt0%O%s}}}\"\n+\n+#undef CPP_SPEC\n #define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n@@ -123,21 +109,15 @@ Boston, MA 02111-1307, USA. */\n   -D__declspec(x)=__attribute__((x)) \\\n   -D__i386__ -D__i386 \\\n   %{!mno-cygwin:-D__CYGWIN32__ -D__CYGWIN__ -Dunix -D__unix__ -D__unix \\\n-    -isystem /usr/local/include \\\n-    -idirafter /usr/include} \\\n+    \" CYGWIN_INCLUDES \"} \\\n   %{mno-win32: %{mno-cygwin: %emno-cygwin and mno-win32 are not compatible}} \\\n-  %{mno-cygwin:-DWIN32 -D_WIN32 -D__WIN32 -D__WIN32__ -DWINNT \\\n-    -D__MINGW32__=0.3 -D__MSVCRT__ \\\n-    %{mthreads:-D_MT} \\\n-    -isystem /usr/local/include/mingw \\\n-    -idirafter /usr/include/mingw \\\n+  %{mno-cygwin:-DWIN32 -D_WIN32 -D__WIN32 -D__WIN32__ -DWINNT -D__MSVCRT__ \\\n+    -D__MINGW32__=0.3 %{mthreads:-D_MT} \" MINGW_INCLUDES CYGWIN_W32API \"\\\n     -iwithprefixbefore ../../../../mingw/include/g++-3 \\\n     -iwithprefixbefore ../../../../mingw/include \\\n     -iwithprefixbefore ../../../../mingw32/include/g++-3 \\\n     -iwithprefixbefore ../../../../mingw32/include } \\\n-   %{!mno-win32:-DWIN32 -D_WIN32 -D__WIN32 -D__WIN32__ -DWINNT \\\n-     -idirafter /usr/include/w32api}\"\n-#endif\n+   %{!mno-win32:-DWIN32 -D_WIN32 -D__WIN32 -D__WIN32__ -DWINNT \" CYGWIN_W32API \"}\"\n \n /* This macro defines names of additional specifications to put in the specs\n    that can be used in various specifications like CC1_SPEC.  Its definition"}, {"sha": "9f7714356c5deb19729efad0438ef01fd2a89303", "filename": "gcc/config/i386/t-cygwin", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e190cf35ce351b8470aced608eebfba027c9564/gcc%2Fconfig%2Fi386%2Ft-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e190cf35ce351b8470aced608eebfba027c9564/gcc%2Fconfig%2Fi386%2Ft-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygwin?ref=4e190cf35ce351b8470aced608eebfba027c9564", "patch": "@@ -7,6 +7,8 @@ LIB1ASMFUNCS = _chkstk\n # the build, it may not be installed yet.\n LIMITS_H_TEST = true\n \n+T_CPPFLAGS=-DCYGWIN_CROSS_DIR=\\\"$(libsubdir)/$(unlibsubdir)/..`echo $(exec_prefix) | sed -e 's|^$(prefix)||' -e 's|/[^/]*|/..|g'`\\\"\n+\n # If we are building next to winsup, this will let us find the real\n # limits.h when building libgcc2.  Otherwise, winsup must be installed\n # first."}]}