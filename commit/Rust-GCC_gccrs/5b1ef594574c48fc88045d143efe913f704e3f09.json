{"sha": "5b1ef594574c48fc88045d143efe913f704e3f09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIxZWY1OTQ1NzRjNDhmYzg4MDQ1ZDE0M2VmZTkxM2Y3MDRlM2YwOQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2001-01-02T00:58:27Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-01-02T00:58:27Z"}, "message": "loop.c (add_label_notes): Increment the label usage count when a note is added to an insn which refers to...\n\n\n        * loop.c (add_label_notes): Increment the label usage count when\n        a note is added to an insn which refers to a CODE_LABEL.\n        * gcse.c (add_label_notes): Likewise.\n\nFrom-SVN: r38603", "tree": {"sha": "c12363c0e9a70d4af1ff930ffa68b983b514f4e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c12363c0e9a70d4af1ff930ffa68b983b514f4e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b1ef594574c48fc88045d143efe913f704e3f09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1ef594574c48fc88045d143efe913f704e3f09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b1ef594574c48fc88045d143efe913f704e3f09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1ef594574c48fc88045d143efe913f704e3f09/comments", "author": null, "committer": null, "parents": [{"sha": "5be1aac9125764200d1c8a430cb8e580998c96d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be1aac9125764200d1c8a430cb8e580998c96d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5be1aac9125764200d1c8a430cb8e580998c96d2"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "f25661a6025d0ea496b1a9e17fcb86cc68d11d88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1ef594574c48fc88045d143efe913f704e3f09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1ef594574c48fc88045d143efe913f704e3f09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b1ef594574c48fc88045d143efe913f704e3f09", "patch": "@@ -1,3 +1,9 @@\n+2001-01-01  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+        * loop.c (add_label_notes): Increment the label usage count when\n+        a note is added to an insn which refers to a CODE_LABEL.\n+        * gcse.c (add_label_notes): Likewise.\n+\n 2001-01-01  Andreas Jaeger  <aj@suse.de>\n \n \t* loop.c (scan_loop): Use xmalloc to allocate movables."}, {"sha": "f423c5ec27d7d2971d80741515f091dac91b575f", "filename": "gcc/gcse.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1ef594574c48fc88045d143efe913f704e3f09/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1ef594574c48fc88045d143efe913f704e3f09/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=5b1ef594574c48fc88045d143efe913f704e3f09", "patch": "@@ -1,6 +1,6 @@\n /* Global common subexpression elimination/Partial redundancy elimination\n    and global constant/copy propagation for GNU compiler.\n-   Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -4839,8 +4839,9 @@ one_pre_gcse_pass (pass)\n }\n \f\n /* If X contains any LABEL_REF's, add REG_LABEL notes for them to INSN.\n-   We have to add REG_LABEL notes, because the following loop optimization\n-   pass requires them.  */\n+   If notes are added to an insn which references a CODE_LABEL, the\n+   LABEL_NUSES count is incremented.  We have to add REG_LABEL notes,\n+   because the following loop optimization pass requires them.  */\n \n /* ??? This is very similar to the loop.c add_label_notes function.  We\n    could probably share code here.  */\n@@ -4868,6 +4869,8 @@ add_label_notes (x, insn)\n \n       REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_LABEL, XEXP (x, 0),\n \t\t\t\t\t    REG_NOTES (insn));\n+      if (LABEL_P (XEXP (x, 0)))\n+        LABEL_NUSES (XEXP (x, 0))++;\n       return;\n     }\n "}, {"sha": "a504ed65c885934c18ed0810793ed40eda3ca009", "filename": "gcc/loop.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1ef594574c48fc88045d143efe913f704e3f09/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1ef594574c48fc88045d143efe913f704e3f09/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=5b1ef594574c48fc88045d143efe913f704e3f09", "patch": "@@ -1594,7 +1594,8 @@ rtx_equal_for_loop_p (x, y, movables, regs)\n }\n \f\n /* If X contains any LABEL_REF's, add REG_LABEL notes for them to all\n-  insns in INSNS which use the reference.  */\n+   insns in INSNS which use the reference.  LABEL_NUSES for CODE_LABEL\n+   references is incremented once for each added note. */\n \n static void\n add_label_notes (x, insns)\n@@ -1615,8 +1616,12 @@ add_label_notes (x, insns)\n          mark_jump_label for additional information).  */\n       for (insn = insns; insn; insn = NEXT_INSN (insn))\n \tif (reg_mentioned_p (XEXP (x, 0), insn))\n-\t  REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_LABEL, XEXP (x, 0),\n-\t\t\t\t\t\tREG_NOTES (insn));\n+\t  {\n+\t    REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_LABEL, XEXP (x, 0),\n+\t\t\t\t\t\t  REG_NOTES (insn));\n+\t    if (LABEL_P (XEXP (x, 0)))\n+\t      LABEL_NUSES (XEXP (x, 0))++;\n+\t  }\n     }\n \n   fmt = GET_RTX_FORMAT (code);"}]}