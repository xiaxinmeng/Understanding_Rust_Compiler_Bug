{"sha": "3378b6fa11d580d859b6bc8af7a5228fed4ff791", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM3OGI2ZmExMWQ1ODBkODU5YjZiYzhhZjdhNTIyOGZlZDRmZjc5MQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2010-02-18T21:04:40Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2010-02-18T21:04:40Z"}, "message": "Improve wording..\n\nFrom-SVN: r156875", "tree": {"sha": "2ce8802988342e13fbbb2618a82ede3639146451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ce8802988342e13fbbb2618a82ede3639146451"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3378b6fa11d580d859b6bc8af7a5228fed4ff791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3378b6fa11d580d859b6bc8af7a5228fed4ff791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3378b6fa11d580d859b6bc8af7a5228fed4ff791", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3378b6fa11d580d859b6bc8af7a5228fed4ff791/comments", "author": null, "committer": null, "parents": [{"sha": "1ff6b2c8c471291a07ba054ddbd18acb9dd69d7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff6b2c8c471291a07ba054ddbd18acb9dd69d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ff6b2c8c471291a07ba054ddbd18acb9dd69d7a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f9fa00ff98345c4f546590e838f873d0914b371c", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3378b6fa11d580d859b6bc8af7a5228fed4ff791/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3378b6fa11d580d859b6bc8af7a5228fed4ff791/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=3378b6fa11d580d859b6bc8af7a5228fed4ff791", "patch": "@@ -2636,7 +2636,7 @@ struct GTY(()) tree_decl_minimal {\n    || TREE_CODE (DECL_CONTEXT (EXP)) == TRANSLATION_UNIT_DECL)\n \n /* Nonzero for a decl that is decorated using attribute used.\n-   This indicates compiler tools that this decl needs to be preserved.  */\n+   This indicates to compiler tools that this decl needs to be preserved.  */\n #define DECL_PRESERVE_P(DECL) \\\n   DECL_COMMON_CHECK (DECL)->decl_common.preserve_flag\n "}]}