{"sha": "fbaef11f45f0eb6585b11f3e85023dd0631788d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJhZWYxMWY0NWYwZWI2NTg1YjExZjNlODUwMjNkZDA2MzE3ODhkMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-01T08:18:50Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-01T08:18:50Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r659", "tree": {"sha": "8fb0dae87dc62e7521c9d405524a172bd48deb92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb0dae87dc62e7521c9d405524a172bd48deb92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbaef11f45f0eb6585b11f3e85023dd0631788d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbaef11f45f0eb6585b11f3e85023dd0631788d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbaef11f45f0eb6585b11f3e85023dd0631788d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbaef11f45f0eb6585b11f3e85023dd0631788d2/comments", "author": null, "committer": null, "parents": [{"sha": "f8ffe7dcf4a4b85dc08647b30b1ae48d81937354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ffe7dcf4a4b85dc08647b30b1ae48d81937354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8ffe7dcf4a4b85dc08647b30b1ae48d81937354"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "62cbf7efa73d8a865425fc6e096c93ce4e2414e6", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbaef11f45f0eb6585b11f3e85023dd0631788d2/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbaef11f45f0eb6585b11f3e85023dd0631788d2/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=fbaef11f45f0eb6585b11f3e85023dd0631788d2", "patch": "@@ -854,11 +854,11 @@ __transfer_from_trampoline ()\t\t\\\n \n /* Go to ADDR if X is a valid address not using indexing.\n    (This much is the easy part.)  */\n-#define GO_IF_INDEXING(X, ADDR)  \\\n+#define GO_IF_INDEXING(X, MODE, ADDR)  \\\n { register rtx xfoob = (X);\t\t\t\t\t\t\\\n-  if (GET_CODE (xfoob) == PLUS && INDEX_TERM_P (XEXP (xfoob, 0)))\t\\\n+  if (GET_CODE (xfoob) == PLUS && INDEX_TERM_P (XEXP (xfoob, 0), MODE))\t\\\n     GO_IF_INDEXABLE_ADDRESS (XEXP (xfoob, 1), ADDR);\t\t\t\\\n-  if (GET_CODE (xfoob) == PLUS && INDEX_TERM_P (XEXP (xfoob, 1)))\t\\\n+  if (GET_CODE (xfoob) == PLUS && INDEX_TERM_P (XEXP (xfoob, 1), MODE))\t\\\n     GO_IF_INDEXABLE_ADDRESS (XEXP (xfoob, 0), ADDR); }\t\t\t\\\n \n #define GO_IF_INDEXABLE_ADDRESS(X, ADDR) \\\n@@ -900,7 +900,7 @@ __transfer_from_trampoline ()\t\t\\\n       else if (CONSTANT_ADDRESS_NO_LABEL_P (XEXP (xfooy, 0))\t\t\\\n \t  && GET_CODE (XEXP (xfooy, 1)) == PLUS)\t\t\t\\\n \txfooy = XEXP (xfooy, 1);\t\t\t\t\t\\\n-      GO_IF_INDEXING (xfooy, ADDR);\t\t\t\t\t\\\n+      GO_IF_INDEXING (xfooy, MODE, ADDR);\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else if (INDEX_TERM_P (xfooy, MODE))\t\t\t\t\t\\\n     goto ADDR;\t\t\t\t\t\t\t\t\\"}]}