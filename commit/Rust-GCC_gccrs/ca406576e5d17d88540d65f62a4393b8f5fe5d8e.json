{"sha": "ca406576e5d17d88540d65f62a4393b8f5fe5d8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E0MDY1NzZlNWQxN2Q4ODU0MGQ2NWY2MmE0MzkzYjhmNWZlNWQ4ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-09-30T12:22:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-09-30T12:22:00Z"}, "message": "re PR tree-optimization/58554 (Revision 202619 causes runtime failure in CPU2006 benchmark 445.gobmk)\n\n2013-09-30  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/58554\n\t* tree-loop-distribution.c (classify_partition): Require unconditionally\n\texecuted stores for memcpy and memset recognition.\n\t(tree_loop_distribution): Calculate dominance info.\n\n\t* gcc.dg/torture/pr58554.c: New testcase.\n\nFrom-SVN: r203031", "tree": {"sha": "14ae4862a70d9aa3e0fc5cebe6c7a743ce4249e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14ae4862a70d9aa3e0fc5cebe6c7a743ce4249e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca406576e5d17d88540d65f62a4393b8f5fe5d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca406576e5d17d88540d65f62a4393b8f5fe5d8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca406576e5d17d88540d65f62a4393b8f5fe5d8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca406576e5d17d88540d65f62a4393b8f5fe5d8e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92d649c492db02b2fa470a1762503120661d0431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d649c492db02b2fa470a1762503120661d0431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d649c492db02b2fa470a1762503120661d0431"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "1d4720b014cbcecb98ee1962de1370f756ff1388", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca406576e5d17d88540d65f62a4393b8f5fe5d8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca406576e5d17d88540d65f62a4393b8f5fe5d8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca406576e5d17d88540d65f62a4393b8f5fe5d8e", "patch": "@@ -1,3 +1,10 @@\n+2013-09-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/58554\n+\t* tree-loop-distribution.c (classify_partition): Require unconditionally\n+\texecuted stores for memcpy and memset recognition.\n+\t(tree_loop_distribution): Calculate dominance info.\n+\n 2013-09-30  Venkataramanan Kumar  <venkataramanan.kumar@linaro.org>\n \n \t* config/aarch64/aarch64.h (MCOUNT_NAME): Define."}, {"sha": "75ac73a99debd08fa733992e96ebe9adfadd667d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca406576e5d17d88540d65f62a4393b8f5fe5d8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca406576e5d17d88540d65f62a4393b8f5fe5d8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca406576e5d17d88540d65f62a4393b8f5fe5d8e", "patch": "@@ -1,3 +1,8 @@\n+2013-09-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/58554\n+\t* gcc.dg/torture/pr58554.c: New testcase.\n+\n 2013-09-30  Simon Cook  <simon.cook@embecosm.com>\n \t    Joern Rennecke  <joern.rennecke@embecosm.com>\n "}, {"sha": "269171ae941688e7c96ebba5bc2f1843a71e70cf", "filename": "gcc/testsuite/gcc.dg/torture/pr58554.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca406576e5d17d88540d65f62a4393b8f5fe5d8e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58554.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca406576e5d17d88540d65f62a4393b8f5fe5d8e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58554.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58554.c?ref=ca406576e5d17d88540d65f62a4393b8f5fe5d8e", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+void __attribute__((noinline,noclone))\n+clear_board(unsigned char *board, int board_size)\n+{\n+  int k;\n+  for (k = 0; k < 421; k++)\n+    if (k < board_size )\n+      board[k] = 3;\n+}\n+int main()\n+{\n+  unsigned char board[421];\n+  board[420] = 1;\n+  clear_board (board, 420);\n+  if (board[420] != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "964131a1950e6dc37b79124d97fbf7d16dda5b84", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca406576e5d17d88540d65f62a4393b8f5fe5d8e/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca406576e5d17d88540d65f62a4393b8f5fe5d8e/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=ca406576e5d17d88540d65f62a4393b8f5fe5d8e", "patch": "@@ -1206,7 +1206,9 @@ classify_partition (loop_p loop, struct graph *rdg, partition_t partition)\n \t  && !SSA_NAME_IS_DEFAULT_DEF (rhs)\n \t  && flow_bb_inside_loop_p (loop, gimple_bb (SSA_NAME_DEF_STMT (rhs))))\n \treturn;\n-      if (!adjacent_dr_p (single_store))\n+      if (!adjacent_dr_p (single_store)\n+\t  || !dominated_by_p (CDI_DOMINATORS,\n+\t\t\t      loop->latch, gimple_bb (stmt)))\n \treturn;\n       partition->kind = PKIND_MEMSET;\n       partition->main_dr = single_store;\n@@ -1222,7 +1224,9 @@ classify_partition (loop_p loop, struct graph *rdg, partition_t partition)\n       if (!adjacent_dr_p (single_store)\n \t  || !adjacent_dr_p (single_load)\n \t  || !operand_equal_p (DR_STEP (single_store),\n-\t\t\t       DR_STEP (single_load), 0))\n+\t\t\t       DR_STEP (single_load), 0)\n+\t  || !dominated_by_p (CDI_DOMINATORS,\n+\t\t\t      loop->latch, gimple_bb (store)))\n \treturn;\n       /* Now check that if there is a dependence this dependence is\n          of a suitable form for memmove.  */\n@@ -1719,6 +1723,7 @@ tree_loop_distribution (void)\n \t{\n \t  if (!cd)\n \t    {\n+\t      calculate_dominance_info (CDI_DOMINATORS);\n \t      calculate_dominance_info (CDI_POST_DOMINATORS);\n \t      cd = new control_dependences (create_edge_list ());\n \t      free_dominance_info (CDI_POST_DOMINATORS);"}]}