{"sha": "4021f4a1715a176805628c1dbe284617ff3e4a5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAyMWY0YTE3MTVhMTc2ODA1NjI4YzFkYmUyODQ2MTdmZjNlNGE1Zg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-28T15:51:25Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-28T15:51:25Z"}, "message": "re PR tree-optimization/44687 (ICE: in tree_nrv, at tree-nrv.c:155 with -fprofile-generate)\n\n\n\tPR tree-optimization/44687\n\t* gcc.c-torture/compile/pr44687.c\n\tPR tree-optimization/44687\n\t* ipa-split.c (split_function): Use DECL_RESULT to store return value.\n\nFrom-SVN: r161500", "tree": {"sha": "566ef297863c2c3d100bc051850712fb8da54486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/566ef297863c2c3d100bc051850712fb8da54486"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4021f4a1715a176805628c1dbe284617ff3e4a5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4021f4a1715a176805628c1dbe284617ff3e4a5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4021f4a1715a176805628c1dbe284617ff3e4a5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4021f4a1715a176805628c1dbe284617ff3e4a5f/comments", "author": null, "committer": null, "parents": [{"sha": "621f418948dd050f09735532c098e46eaa1dfd69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/621f418948dd050f09735532c098e46eaa1dfd69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/621f418948dd050f09735532c098e46eaa1dfd69"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "5bf683a82609121d933d479e824d7cc1b4409c91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4021f4a1715a176805628c1dbe284617ff3e4a5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4021f4a1715a176805628c1dbe284617ff3e4a5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4021f4a1715a176805628c1dbe284617ff3e4a5f", "patch": "@@ -1,3 +1,8 @@\n+2010-06-28  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/44687\n+\t* ipa-split.c (split_function): Use DECL_RESULT to store return value.\n+\n 2010-06-28  Martin Jambor  <mjambor@suse.cz>\n \n \tPR c++/44535"}, {"sha": "78895d0ab337c7c4ea0aa938ae8e0f55ac53f1ac", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4021f4a1715a176805628c1dbe284617ff3e4a5f/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4021f4a1715a176805628c1dbe284617ff3e4a5f/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=4021f4a1715a176805628c1dbe284617ff3e4a5f", "patch": "@@ -928,9 +928,7 @@ split_function (struct split_point *split_point)\n \t  gimple ret;\n \t  if (!VOID_TYPE_P (TREE_TYPE (TREE_TYPE (current_function_decl))))\n \t    {\n-\t      retval\n-\t        = create_tmp_var (TREE_TYPE (TREE_TYPE (current_function_decl)),\n-\t\t\t\t  \"RET\");\n+\t      retval = DECL_RESULT (current_function_decl);\n \t      if (is_gimple_reg (retval))\n \t\tretval = make_ssa_name (retval, call);\n \t      gimple_call_set_lhs (call, retval);"}, {"sha": "d61073a3c542edf16f549d1093e7f5972afa95ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4021f4a1715a176805628c1dbe284617ff3e4a5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4021f4a1715a176805628c1dbe284617ff3e4a5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4021f4a1715a176805628c1dbe284617ff3e4a5f", "patch": "@@ -1,3 +1,8 @@\n+2010-06-28  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/44687\n+\t* gcc.c-torture/compile/pr44687.c\n+\n 2010-06-28  Martin Jambor  <mjambor@suse.cz>\n \n \tPR c++/44535"}, {"sha": "f59c2efd0f50bcf54ef4e7f2d8a8756fa2bfb335", "filename": "gcc/testsuite/gcc.c-torture/compile/pr44687.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4021f4a1715a176805628c1dbe284617ff3e4a5f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44687.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4021f4a1715a176805628c1dbe284617ff3e4a5f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44687.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44687.c?ref=4021f4a1715a176805628c1dbe284617ff3e4a5f", "patch": "@@ -0,0 +1,32 @@\n+typedef int int32_t;                                                                                                                                                   \n+typedef unsigned char uint8_t;                                                                                                                                         \n+struct S0                                                                                                                                                              \n+{                                                                                                                                                                      \n+  uint8_t f0;                                                                                                                                                          \n+};                                                                                                                                                                     \n+struct S0 *g_18[7][5][1][1] = {                                                                                                                                        \n+};                                                                                                                                                                     \n+                                                                                                                                                                       \n+struct S0 **g_17 = &g_18[0][3][0][0];                                                                                                                                  \n+int32_t g_86;                                                                                                                                                          \n+struct S0 func_72 (uint8_t p_73, struct S0 p_74);                                                                                                                      \n+                                                                                                                                                                       \n+void int326 (struct S0 **p_67, int32_t p_68, int32_t * *const p_69,                                                                                                    \n+        struct S0 *p_70)                                                                                                                                               \n+{                                                                                                                                                                      \n+  struct S0 l_95 = {                                                                                                                                                   \n+    -1L                                                                                                                                                                \n+  };                                                                                                                                                                   \n+  func_72 (1L, func_72 (0, l_95));                                                                                                                                     \n+}                                                                                                                                                                      \n+                                                                                                                                                                       \n+struct S0                                                                                                                                                              \n+func_72 (uint8_t p_73, struct S0 p_74)                                                                                                                                 \n+{                                                                                                                                                                      \n+  int32_t *l_85 = &g_86;                                                                                                                                               \n+  if (*l_85)                                                                                                                                                           \n+  lbl_94:*l_85 ^= 0;                                                                                                                                                   \n+  if (g_86)                                                                                                                                                            \n+    goto lbl_94;                                                                                                                                                       \n+  return **g_17;                                                                                                                                                       \n+}   "}]}