{"sha": "acc1708cf088b47919785e6a50fa7a636b3fb82b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNjMTcwOGNmMDg4YjQ3OTE5Nzg1ZTZhNTBmYTdhNjM2YjNmYjgyYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-06-22T06:59:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-15T09:39:07Z"}, "message": "[Ada] Warn on unknown aspect\n\ngcc/ada/\n\n\t* par-ch13.adb (Get_Aspect_Specifications): Generate a warning\n\trather than an error on unknown aspects unless -gnatd2 is used.\n\t(Aspect_Specifications_Present): Improve detection of unknown\n\taspects.\n\t* debug.adb (Debug_Flag_2): Update document.", "tree": {"sha": "cc9e63ebe789d3cb1661f377693d0c80c5c98698", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc9e63ebe789d3cb1661f377693d0c80c5c98698"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acc1708cf088b47919785e6a50fa7a636b3fb82b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc1708cf088b47919785e6a50fa7a636b3fb82b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc1708cf088b47919785e6a50fa7a636b3fb82b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc1708cf088b47919785e6a50fa7a636b3fb82b/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2c8f0d0428e178120f78ae62107dd608cf8ccfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2c8f0d0428e178120f78ae62107dd608cf8ccfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2c8f0d0428e178120f78ae62107dd608cf8ccfd"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "bbdaf3b3781f48c4d0e2c66ace222d1c3f0c3e4a", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc1708cf088b47919785e6a50fa7a636b3fb82b/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc1708cf088b47919785e6a50fa7a636b3fb82b/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=acc1708cf088b47919785e6a50fa7a636b3fb82b", "patch": "@@ -1032,6 +1032,9 @@ package body Debug is\n    --       flag also suppresses the additional messages explaining why a\n    --       non-static expression is non-static (see Sem_Eval.Why_Not_Static).\n    --       This avoids having to worry about these messages in ACATS testing.\n+   --       Finally, this flag is also used for strict legality check, in\n+   --       particular it will generate an error instead a warning when\n+   --       encountering an unknown pragma.\n \n    --  d3   Causes Comperr to dump the contents of the node for which an abort\n    --       was detected (normally only the Node_Id of the node is output)."}, {"sha": "459d7fe0701270ecc4413b6f18783b1ff3da6128", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc1708cf088b47919785e6a50fa7a636b3fb82b/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc1708cf088b47919785e6a50fa7a636b3fb82b/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=acc1708cf088b47919785e6a50fa7a636b3fb82b", "patch": "@@ -153,9 +153,7 @@ package body Ch13 is\n             Result := True;\n          else\n             Scan; -- past identifier\n-            Result := Token = Tok_Arrow or else\n-                      Token = Tok_Comma or else\n-                      Token = Tok_Semicolon;\n+            Result := Token in Tok_Arrow | Tok_Comma | Tok_Is | Tok_Semicolon;\n          end if;\n \n       --  If earlier than Ada 2012, check for valid aspect identifier (possibly\n@@ -178,7 +176,7 @@ package body Ch13 is\n             --  defaulted True value. Further checks when analyzing aspect\n             --  specification, which may include further aspects.\n \n-            elsif Token = Tok_Comma or else Token = Tok_Semicolon then\n+            elsif Token in Tok_Comma | Tok_Semicolon then\n                Result := True;\n \n             elsif Token = Tok_Apostrophe then\n@@ -265,7 +263,8 @@ package body Ch13 is\n          --  The aspect mark is not recognized\n \n          if A_Id = No_Aspect then\n-            Error_Msg_N (\"& is not a valid aspect identifier\", Token_Node);\n+            Error_Msg_Warn := not Debug_Flag_2;\n+            Error_Msg_N (\"<<& is not a valid aspect identifier\", Token_Node);\n             OK := False;\n \n             --  Check bad spelling\n@@ -274,7 +273,7 @@ package body Ch13 is\n                if Is_Bad_Spelling_Of (Token_Name, Aspect_Names (J)) then\n                   Error_Msg_Name_1 := Aspect_Names (J);\n                   Error_Msg_N -- CODEFIX\n-                    (\"\\possible misspelling of%\", Token_Node);\n+                    (\"\\<<possible misspelling of%\", Token_Node);\n                   exit;\n                end if;\n             end loop;"}]}