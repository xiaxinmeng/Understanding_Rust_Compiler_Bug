{"sha": "f9b9832837b65046a8f01c18597cf615ff61db40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjliOTgzMjgzN2I2NTA0NmE4ZjAxYzE4NTk3Y2Y2MTVmZjYxZGI0MA==", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2020-08-20T14:18:51Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2020-08-20T14:18:51Z"}, "message": "libgomp: adjust nvptx_free callback context checking\n\nChange test for CUDA callback context in nvptx_free() from using\nGOMP_PLUGIN_acc_thread () into checking for CUDA_ERROR_NOT_PERMITTED,\nfor the former only works for OpenACC, but not OpenMP offloading.\n\n2020-08-20  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\tlibgomp/\n\t* plugin/plugin-nvptx.c (nvptx_free):\n\tChange \"GOMP_PLUGIN_acc_thread () == NULL\" test into check of\n\tCUDA_ERROR_NOT_PERMITTED status for cuMemGetAddressRange. Adjust\n\tcomments.", "tree": {"sha": "15f85186a732ae278e234b344ac376071eea3b39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15f85186a732ae278e234b344ac376071eea3b39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9b9832837b65046a8f01c18597cf615ff61db40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b9832837b65046a8f01c18597cf615ff61db40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9b9832837b65046a8f01c18597cf615ff61db40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b9832837b65046a8f01c18597cf615ff61db40/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "656218ab982cc22b826227045826c92743143af1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656218ab982cc22b826227045826c92743143af1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/656218ab982cc22b826227045826c92743143af1"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "390804ad1fa2f686ea2ddef85e52d118be3cecd4", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b9832837b65046a8f01c18597cf615ff61db40/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b9832837b65046a8f01c18597cf615ff61db40/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=f9b9832837b65046a8f01c18597cf615ff61db40", "patch": "@@ -1040,9 +1040,17 @@ goacc_profiling_acc_ev_free (struct goacc_thread *thr, void *p)\n static bool\n nvptx_free (void *p, struct ptx_device *ptx_dev)\n {\n-  /* Assume callback context if this is null.  */\n-  if (GOMP_PLUGIN_acc_thread () == NULL)\n+  CUdeviceptr pb;\n+  size_t ps;\n+\n+  CUresult r = CUDA_CALL_NOCHECK (cuMemGetAddressRange, &pb, &ps,\n+\t\t\t\t  (CUdeviceptr) p);\n+  if (r == CUDA_ERROR_NOT_PERMITTED)\n     {\n+      /* We assume that this error indicates we are in a CUDA callback context,\n+\t where all CUDA calls are not allowed (see cuStreamAddCallback\n+\t documentation for description). Arrange to free this piece of device\n+\t memory later.  */\n       struct ptx_free_block *n\n \t= GOMP_PLUGIN_malloc (sizeof (struct ptx_free_block));\n       n->ptr = p;\n@@ -1052,11 +1060,11 @@ nvptx_free (void *p, struct ptx_device *ptx_dev)\n       pthread_mutex_unlock (&ptx_dev->free_blocks_lock);\n       return true;\n     }\n-\n-  CUdeviceptr pb;\n-  size_t ps;\n-\n-  CUDA_CALL (cuMemGetAddressRange, &pb, &ps, (CUdeviceptr) p);\n+  else if (r != CUDA_SUCCESS)\n+    {\n+      GOMP_PLUGIN_error (\"cuMemGetAddressRange error: %s\", cuda_error (r));\n+      return false;\n+    }\n   if ((CUdeviceptr) p != pb)\n     {\n       GOMP_PLUGIN_error (\"invalid device address\");"}]}