{"sha": "e1a41143a2e24c65d94364fd82b165ff71a759d8", "node_id": "C_kwDOANBUbNoAKGUxYTQxMTQzYTJlMjRjNjVkOTQzNjRmZDgyYjE2NWZmNzFhNzU5ZDg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-05T07:34:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-05T08:36:49Z"}, "message": "tree-optimization/105484 - VEC_SET and EH\n\nWhen the IL representation of VEC_SET is marked as throwing\n(unnecessarily), we need to clean that when replacing it with\nthe .VEC_SET internal function call which cannot throw.\n\n2022-05-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/105484\n\t* gimple-isel.cc (gimple_expand_vec_set_expr): Clean EH, return\n\twhether the CFG changed.\n\t(gimple_expand_vec_exprs): When the CFG changed, clean it up.\n\n\t* gcc.dg/torture/pr105484.c: New testcase.", "tree": {"sha": "cc4e56a30092275b6d77f7b127b918cab01176fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc4e56a30092275b6d77f7b127b918cab01176fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1a41143a2e24c65d94364fd82b165ff71a759d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a41143a2e24c65d94364fd82b165ff71a759d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a41143a2e24c65d94364fd82b165ff71a759d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a41143a2e24c65d94364fd82b165ff71a759d8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "938a02a589dc22cef65bba2b131fc9e4874baddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938a02a589dc22cef65bba2b131fc9e4874baddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938a02a589dc22cef65bba2b131fc9e4874baddb"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "4b309a05a9aea74621225111c1fb9d8fc9cb8d30", "filename": "gcc/gimple-isel.cc", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a41143a2e24c65d94364fd82b165ff71a759d8/gcc%2Fgimple-isel.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a41143a2e24c65d94364fd82b165ff71a759d8/gcc%2Fgimple-isel.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-isel.cc?ref=e1a41143a2e24c65d94364fd82b165ff71a759d8", "patch": "@@ -49,22 +49,23 @@ along with GCC; see the file COPYING3.  If not see\n      _8 = .VEC_SET (_7, i_4(D), _1);\n      u = _8;  */\n \n-static gimple *\n+static bool\n gimple_expand_vec_set_expr (struct function *fun, gimple_stmt_iterator *gsi)\n {\n   enum tree_code code;\n   gcall *new_stmt = NULL;\n   gassign *ass_stmt = NULL;\n+  bool cfg_changed = false;\n \n   /* Only consider code == GIMPLE_ASSIGN.  */\n   gassign *stmt = dyn_cast<gassign *> (gsi_stmt (*gsi));\n   if (!stmt)\n-    return NULL;\n+    return false;\n \n   tree lhs = gimple_assign_lhs (stmt);\n   code = TREE_CODE (lhs);\n   if (code != ARRAY_REF)\n-    return NULL;\n+    return false;\n \n   tree val = gimple_assign_rhs1 (stmt);\n   tree op0 = TREE_OPERAND (lhs, 0);\n@@ -98,12 +99,15 @@ gimple_expand_vec_set_expr (struct function *fun, gimple_stmt_iterator *gsi)\n \t  gimple_set_location (ass_stmt, loc);\n \t  gsi_insert_before (gsi, ass_stmt, GSI_SAME_STMT);\n \n+\t  basic_block bb = gimple_bb (stmt);\n \t  gimple_move_vops (ass_stmt, stmt);\n-\t  gsi_remove (gsi, true);\n+\t  if (gsi_remove (gsi, true)\n+\t      && gimple_purge_dead_eh_edges (bb))\n+\t    cfg_changed = true;\n \t}\n     }\n \n-  return ass_stmt;\n+  return cfg_changed;\n }\n \n /* Expand all VEC_COND_EXPR gimple assignments into calls to internal\n@@ -297,6 +301,7 @@ gimple_expand_vec_exprs (struct function *fun)\n   basic_block bb;\n   hash_map<tree, unsigned int> vec_cond_ssa_name_uses;\n   auto_bitmap dce_ssa_names;\n+  bool cfg_changed = false;\n \n   FOR_EACH_BB_FN (bb, fun)\n     {\n@@ -311,7 +316,7 @@ gimple_expand_vec_exprs (struct function *fun)\n \t      gsi_replace (&gsi, g, false);\n \t    }\n \n-\t  gimple_expand_vec_set_expr (fun, &gsi);\n+\t  cfg_changed |= gimple_expand_vec_set_expr (fun, &gsi);\n \t  if (gsi_end_p (gsi))\n \t    break;\n \t}\n@@ -323,7 +328,7 @@ gimple_expand_vec_exprs (struct function *fun)\n \n   simple_dce_from_worklist (dce_ssa_names);\n \n-  return 0;\n+  return cfg_changed ? TODO_cleanup_cfg : 0;\n }\n \n namespace {"}, {"sha": "f2a5eb8a7ee72d9e965ce20d835e0558bb89bfa1", "filename": "gcc/testsuite/gcc.dg/torture/pr105484.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a41143a2e24c65d94364fd82b165ff71a759d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr105484.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a41143a2e24c65d94364fd82b165ff71a759d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr105484.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr105484.c?ref=e1a41143a2e24c65d94364fd82b165ff71a759d8", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fnon-call-exceptions -fno-tree-dce -fno-tree-forwprop\" } */\n+/* { dg-additional-options \"-march=cannonlake\" { target x86_64-*-* i?86-*-* } } */\n+\n+typedef int __attribute__((__vector_size__ (16))) V;\n+\n+void bar (int i);\n+\n+void\n+foo (int i)\n+{\n+  V v;\n+  __builtin_mul_overflow (7, i, &v[i]);\n+  bar ((V){}[3]);\n+}"}]}