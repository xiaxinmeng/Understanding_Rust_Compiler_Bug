{"sha": "9175d628d00f9f3a5a98a19aba733f6e66452f8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE3NWQ2MjhkMDBmOWYzYTVhOThhMTlhYmE3MzNmNmU2NjQ1MmY4Zg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-12-19T16:31:59Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-12-19T16:31:59Z"}, "message": "OutputStreamChannel.java: New file.\n\n2003-12-19  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/nio/OutputStreamChannel.java: New file.\n\t* java/nio/channels/Channels.java (newChannel): Implemented.\n\t* Makefile.am (ordinary_java_source_files):\n\tAdded gnu/java/nio/OutputStreamChannel.java.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r74840", "tree": {"sha": "72be232386a4bfad39f70492dd66772f2f41e3b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72be232386a4bfad39f70492dd66772f2f41e3b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9175d628d00f9f3a5a98a19aba733f6e66452f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9175d628d00f9f3a5a98a19aba733f6e66452f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9175d628d00f9f3a5a98a19aba733f6e66452f8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9175d628d00f9f3a5a98a19aba733f6e66452f8f/comments", "author": null, "committer": null, "parents": [{"sha": "71646cb7775b48d6df03036bbdeb083bf6c0fd74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71646cb7775b48d6df03036bbdeb083bf6c0fd74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71646cb7775b48d6df03036bbdeb083bf6c0fd74"}], "stats": {"total": 106, "additions": 102, "deletions": 4}, "files": [{"sha": "c2d017bf0d5475c0482e27383ec81e0160206413", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9175d628d00f9f3a5a98a19aba733f6e66452f8f", "patch": "@@ -1,3 +1,11 @@\n+2003-12-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/nio/OutputStreamChannel.java: New file.\n+\t* java/nio/channels/Channels.java (newChannel): Implemented.\n+\t* Makefile.am (ordinary_java_source_files):\n+\tAdded gnu/java/nio/OutputStreamChannel.java.\n+\t* Makefile.in: Regenerated.\n+\n 2003-12-19  Michael Koch  <konqueror@gmx.de>\n \n \t* Makefile.am (ordinary_java_source_files):"}, {"sha": "9156010e107e8c18e41695ed9f826416f82c2e26", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=9175d628d00f9f3a5a98a19aba733f6e66452f8f", "patch": "@@ -2225,6 +2225,7 @@ gnu/java/nio/NIODatagramSocket.java \\\n gnu/java/nio/NIOServerSocket.java \\\n gnu/java/nio/NIOSocket.java \\\n gnu/java/nio/InputStreamChannel.java \\\n+gnu/java/nio/OutputStreamChannel.java \\\n gnu/java/nio/PipeImpl.java \\\n gnu/java/nio/SelectionKeyImpl.java \\\n gnu/java/nio/SelectorImpl.java \\"}, {"sha": "4f9b040a105667ac9ac77039fe1118e73f3545bb", "filename": "libjava/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=9175d628d00f9f3a5a98a19aba733f6e66452f8f", "patch": "@@ -1932,6 +1932,7 @@ gnu/java/nio/NIODatagramSocket.java \\\n gnu/java/nio/NIOServerSocket.java \\\n gnu/java/nio/NIOSocket.java \\\n gnu/java/nio/InputStreamChannel.java \\\n+gnu/java/nio/OutputStreamChannel.java \\\n gnu/java/nio/PipeImpl.java \\\n gnu/java/nio/SelectionKeyImpl.java \\\n gnu/java/nio/SelectorImpl.java \\\n@@ -3070,8 +3071,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/nio/NIOConstants.P \\\n .deps/gnu/java/nio/NIODatagramSocket.P \\\n .deps/gnu/java/nio/NIOServerSocket.P .deps/gnu/java/nio/NIOSocket.P \\\n-.deps/gnu/java/nio/PipeImpl.P .deps/gnu/java/nio/SelectionKeyImpl.P \\\n-.deps/gnu/java/nio/SelectorImpl.P \\\n+.deps/gnu/java/nio/OutputStreamChannel.P .deps/gnu/java/nio/PipeImpl.P \\\n+.deps/gnu/java/nio/SelectionKeyImpl.P .deps/gnu/java/nio/SelectorImpl.P \\\n .deps/gnu/java/nio/SelectorProviderImpl.P \\\n .deps/gnu/java/nio/ServerSocketChannelImpl.P \\\n .deps/gnu/java/nio/ServerSocketChannelSelectionKey.P \\"}, {"sha": "37ded3b11699445f2c869b3b0dae2abcbeb946f1", "filename": "libjava/gnu/java/nio/OutputStreamChannel.java", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2Fgnu%2Fjava%2Fnio%2FOutputStreamChannel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2Fgnu%2Fjava%2Fnio%2FOutputStreamChannel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FOutputStreamChannel.java?ref=9175d628d00f9f3a5a98a19aba733f6e66452f8f", "patch": "@@ -0,0 +1,87 @@\n+/* OutputStreamChannel.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.nio;\n+\n+import java.io.OutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.ClosedChannelException;\n+import java.nio.channels.WritableByteChannel;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public final class OutputStreamChannel implements WritableByteChannel\n+{\n+  private boolean closed = false;\n+  private OutputStream out;\n+  \n+  public OutputStreamChannel (OutputStream out)\n+  {\n+    super();\n+    \n+    this.out = out;\n+  }\n+\n+  public void close() throws IOException\n+  {\n+    if (!closed)\n+      {\n+        out.close();\n+        closed = true;\n+      }\n+  }\n+\n+  public boolean isOpen()\n+  {\n+    return !closed;\n+  }\n+  \n+  public int write (ByteBuffer src) throws IOException\n+  {\n+    if (!isOpen())\n+      throw new ClosedChannelException();\n+    \n+    int len = src.remaining();\n+    byte[] buffer = new byte [len];\n+    src.get (buffer);\n+    out.write (buffer);\n+    return len;\n+  }\n+}"}, {"sha": "f8358ae9c04e76ed48073960b7b07cd191372981", "filename": "libjava/java/nio/channels/Channels.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9175d628d00f9f3a5a98a19aba733f6e66452f8f/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java?ref=9175d628d00f9f3a5a98a19aba733f6e66452f8f", "patch": "@@ -38,6 +38,7 @@\n package java.nio.channels;\n \n import gnu.java.nio.InputStreamChannel;\n+import gnu.java.nio.OutputStreamChannel;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.io.Reader;\n@@ -78,9 +79,9 @@ public static ReadableByteChannel newChannel(InputStream in)\n   /**\n    * Constructs a channel that writes bytes to the given stream.\n    */\n-  public static WritableByteChannel newChannel (OutputStream out)\n+  public static WritableByteChannel newChannel(OutputStream out)\n   {\n-    throw new Error (\"not implemented\");\n+    return new OutputStreamChannel (out);\n   }\n \n   /**"}]}