{"sha": "6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY2YjhmODE0MmQyZDZkMGRiNTk2ZTIxYmMzYmEzMGRhOWY5MGIyZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-02-15T09:55:36Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-02-15T09:55:36Z"}, "message": "re PR middle-end/34621 (gcc.c-torture/execute/va-arg-25.c:32: internal compiler error: in expand_call, at calls.c:2785)\n\n\tPR middle-end/34621\n\t* function.c (pad_to_arg_alignment): Remove test for STACK_BOUNDARY\n\twhen calculating alignment_pad.\n\nFrom-SVN: r132336", "tree": {"sha": "21f08bb68d0866d8d823ff4c9523a6c58effd23b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21f08bb68d0866d8d823ff4c9523a6c58effd23b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74cb1d8bfd6839f112540c02e48cfea699384522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74cb1d8bfd6839f112540c02e48cfea699384522", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74cb1d8bfd6839f112540c02e48cfea699384522"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "2fcf74b11ac1876b51f0df5270fe17a303d3090e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e", "patch": "@@ -1,3 +1,9 @@\n+2008-02-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR middle-end/34621\n+\t* function.c (pad_to_arg_alignment): Remove test for STACK_BOUNDARY\n+\twhen calculating alignment_pad.\n+\n 2008-02-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.h (CLEAR_RATIO): Use MIN macro."}, {"sha": "275b70264cc387868da29d29127f17251acd8f96", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=6f6b8f8142d2d6d0db596e21bc3ba30da9f90b2e", "patch": "@@ -3450,7 +3450,7 @@ pad_to_arg_alignment (struct args_size *offset_ptr, int boundary,\n     sp_offset = 0;\n #endif\n \n-  if (boundary > PARM_BOUNDARY && boundary > STACK_BOUNDARY)\n+  if (boundary > PARM_BOUNDARY)\n     {\n       save_var = offset_ptr->var;\n       save_constant = offset_ptr->constant;\n@@ -3476,7 +3476,7 @@ pad_to_arg_alignment (struct args_size *offset_ptr, int boundary,\n \t  offset_ptr->var = size_binop (MINUS_EXPR, rounded, sp_offset_tree);\n \t  /* ARGS_SIZE_TREE includes constant term.  */\n \t  offset_ptr->constant = 0;\n-\t  if (boundary > PARM_BOUNDARY && boundary > STACK_BOUNDARY)\n+\t  if (boundary > PARM_BOUNDARY)\n \t    alignment_pad->var = size_binop (MINUS_EXPR, offset_ptr->var,\n \t\t\t\t\t     save_var);\n \t}\n@@ -3488,7 +3488,7 @@ pad_to_arg_alignment (struct args_size *offset_ptr, int boundary,\n #else\n \t    CEIL_ROUND (offset_ptr->constant + sp_offset, boundary_in_bytes);\n #endif\n-\t    if (boundary > PARM_BOUNDARY && boundary > STACK_BOUNDARY)\n+\t    if (boundary > PARM_BOUNDARY)\n \t      alignment_pad->constant = offset_ptr->constant - save_constant;\n \t}\n     }"}]}