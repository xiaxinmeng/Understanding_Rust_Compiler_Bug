{"sha": "92d649c492db02b2fa470a1762503120661d0431", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJkNjQ5YzQ5MmRiMDJiMmZhNDcwYTE3NjI1MDMxMjA2NjFkMDQzMQ==", "commit": {"author": {"name": "Venkataramanan Kumar", "email": "venkataramanan.kumar@linaro.org", "date": "2013-09-30T10:20:11Z"}, "committer": {"name": "Venkataramanan Kumar", "email": "vekumar@gcc.gnu.org", "date": "2013-09-30T10:20:11Z"}, "message": "Function profiling macro support for Aarch64\n\nFrom-SVN: r203028", "tree": {"sha": "97448480f995d944ebfad3f72642eab40ef7c039", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97448480f995d944ebfad3f72642eab40ef7c039"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92d649c492db02b2fa470a1762503120661d0431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d649c492db02b2fa470a1762503120661d0431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d649c492db02b2fa470a1762503120661d0431", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d649c492db02b2fa470a1762503120661d0431/comments", "author": null, "committer": null, "parents": [{"sha": "bd9534e28685da0b871cb3176727e110ee6b5dc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9534e28685da0b871cb3176727e110ee6b5dc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd9534e28685da0b871cb3176727e110ee6b5dc2"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "7c7974845e8b44d146d53c142c7693e1ec3e19a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d649c492db02b2fa470a1762503120661d0431/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d649c492db02b2fa470a1762503120661d0431/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92d649c492db02b2fa470a1762503120661d0431", "patch": "@@ -1,3 +1,11 @@\n+2013-09-30  Venkataramanan Kumar  <venkataramanan.kumar@linaro.org>\n+\n+\t* config/aarch64/aarch64.h (MCOUNT_NAME): Define.\n+\t(NO_PROFILE_COUNTERS): Likewise.\n+\t(PROFILE_HOOK): Likewise.\n+\t(FUNCTION_PROFILER): Likewise.\n+\t* config/aarch64/aarch64.c (aarch64_function_profiler): Remove.\n+\n 2013-09-30  Iain Sandoe  <iain@codesourcery.com>\n \n \t* config/rs6000/darwin.md (load_macho_picbase_si): Wrap machopic"}, {"sha": "ee2cb4cd6df3a1ef8cfe9a97f105f90f1397e1de", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d649c492db02b2fa470a1762503120661d0431/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d649c492db02b2fa470a1762503120661d0431/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=92d649c492db02b2fa470a1762503120661d0431", "patch": "@@ -3858,13 +3858,6 @@ aarch64_print_operand_address (FILE *f, rtx x)\n   output_addr_const (f, x);\n }\n \n-void\n-aarch64_function_profiler (FILE *f ATTRIBUTE_UNUSED,\n-\t\t\t   int labelno ATTRIBUTE_UNUSED)\n-{\n-  sorry (\"function profiling\");\n-}\n-\n bool\n aarch64_label_mentioned_p (rtx x)\n {"}, {"sha": "da2b46d14cf02814f93aeda1535461c242174aae", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d649c492db02b2fa470a1762503120661d0431/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d649c492db02b2fa470a1762503120661d0431/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=92d649c492db02b2fa470a1762503120661d0431", "patch": "@@ -783,8 +783,22 @@ do {\t\t\t\t\t\t\t\t\t     \\\n #define PRINT_OPERAND_ADDRESS(STREAM, X) \\\n   aarch64_print_operand_address (STREAM, X)\n \n-#define FUNCTION_PROFILER(STREAM, LABELNO) \\\n-  aarch64_function_profiler (STREAM, LABELNO)\n+#define MCOUNT_NAME \"_mcount\"\n+\n+#define NO_PROFILE_COUNTERS 1\n+\n+/* Emit rtl for profiling.  Output assembler code to FILE\n+   to call \"_mcount\" for profiling a function entry.  */\n+#define PROFILE_HOOK(LABEL)                                    \\\n+{                                                              \\\n+  rtx fun,lr;                                                  \\\n+  lr = get_hard_reg_initial_val (Pmode, LR_REGNUM);            \\\n+  fun = gen_rtx_SYMBOL_REF (Pmode, MCOUNT_NAME);               \\\n+  emit_library_call (fun, LCT_NORMAL, VOIDmode, 1, lr, Pmode); \\\n+}\n+\n+/* All the work done in PROFILE_HOOK, but still required.  */\n+#define FUNCTION_PROFILER(STREAM, LABELNO) do { } while (0)\n \n /* For some reason, the Linux headers think they know how to define\n    these macros.  They don't!!!  */"}, {"sha": "f99703106562ccb53bf50180491a03004c0cebb2", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d649c492db02b2fa470a1762503120661d0431/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d649c492db02b2fa470a1762503120661d0431/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=92d649c492db02b2fa470a1762503120661d0431", "patch": "@@ -494,13 +494,6 @@ proc check_profiling_available { test_what } {\n \treturn 0\n     }\n \n-    # We don't yet support profiling for AArch64.\n-    if { [istarget aarch64*-*-*]\n-\t && ([lindex $test_what 1] == \"-p\"\n-\t     || [lindex $test_what 1] == \"-pg\") } {\n-\treturn 0\n-    }\n-\n     # cygwin does not support -p.\n     if { [istarget *-*-cygwin*] && $test_what == \"-p\" } {\n \treturn 0"}]}