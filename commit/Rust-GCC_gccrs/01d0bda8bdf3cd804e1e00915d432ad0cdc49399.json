{"sha": "01d0bda8bdf3cd804e1e00915d432ad0cdc49399", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFkMGJkYThiZGYzY2Q4MDRlMWUwMDkxNWQ0MzJhZDBjZGM0OTM5OQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2021-04-27T11:25:30Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2021-04-27T11:27:02Z"}, "message": "arm: fix UB when compiling thumb2 with PIC [PR100236]\n\narm_compute_save_core_reg_mask contains UB in that the saved PIC\nregister number is used to create a bit mask. However, for some target\noptions this register is undefined and we end up with a shift of ~0.\n\nOn native compilations this is benign since the shift will still be\nlarge enough to move the bit outside of the range of the mask, but if\ncross compiling from a system that truncates out-of-range shifts to\nzero (or worse, raises a trap for such values) we'll get potentially\nwrong code (or a fault).\n\ngcc:\n\tPR target/100236\n\t* config/arm/arm.c (THUMB2_WORK_REGS): Check PIC_OFFSET_TABLE_REGNUM\n\tis valid before including it in the mask.", "tree": {"sha": "f8d88c06e274b69106a5637ef6a33e998066d4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8d88c06e274b69106a5637ef6a33e998066d4a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01d0bda8bdf3cd804e1e00915d432ad0cdc49399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01d0bda8bdf3cd804e1e00915d432ad0cdc49399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01d0bda8bdf3cd804e1e00915d432ad0cdc49399", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01d0bda8bdf3cd804e1e00915d432ad0cdc49399/comments", "author": null, "committer": null, "parents": [{"sha": "4cea5b8cb715e40e10174e6de405f26202fa3d6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cea5b8cb715e40e10174e6de405f26202fa3d6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cea5b8cb715e40e10174e6de405f26202fa3d6a"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "352b2cd6e8392ab67479d6fb050b6ff07f5f36f5", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01d0bda8bdf3cd804e1e00915d432ad0cdc49399/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01d0bda8bdf3cd804e1e00915d432ad0cdc49399/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=01d0bda8bdf3cd804e1e00915d432ad0cdc49399", "patch": "@@ -1051,9 +1051,13 @@ const char *fp_sysreg_names[NB_FP_SYSREGS] = {\n #define ARM_LSL_NAME \"lsl\"\n #define streq(string1, string2) (strcmp (string1, string2) == 0)\n \n-#define THUMB2_WORK_REGS (0xff & ~(  (1 << THUMB_HARD_FRAME_POINTER_REGNUM) \\\n-\t\t\t\t   | (1 << SP_REGNUM) | (1 << PC_REGNUM) \\\n-\t\t\t\t   | (1 << PIC_OFFSET_TABLE_REGNUM)))\n+#define THUMB2_WORK_REGS\t\t\t\t\t\\\n+  (0xff & ~((1 << THUMB_HARD_FRAME_POINTER_REGNUM)\t\t\\\n+\t    | (1 << SP_REGNUM)\t\t\t\t\t\\\n+\t    | (1 << PC_REGNUM)\t\t\t\t\t\\\n+\t    | (PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM\t\\\n+\t       ? (1 << PIC_OFFSET_TABLE_REGNUM)\t\t\t\\\n+\t       : 0)))\n \f\n /* Initialization code.  */\n "}]}