{"sha": "426bcc95cbaed399329579feb14f776d4c2e4525", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2YmNjOTVjYmFlZDM5OTMyOTU3OWZlYjE0Zjc3NmQ0YzJlNDUyNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-12-15T20:20:22Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-12-15T20:20:22Z"}, "message": "re PR go/61255 (gccgo: spurious \"error: argument 2 has incompatible type\" [GoSmith])\n\n\tPR go/61255\ncompiler: Copied variadic calls should copy lowering state of arguments.\n\nFrom-SVN: r218764", "tree": {"sha": "bd0015db7635dbc061ea3fe5ed9aa50127e50c0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd0015db7635dbc061ea3fe5ed9aa50127e50c0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/426bcc95cbaed399329579feb14f776d4c2e4525", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426bcc95cbaed399329579feb14f776d4c2e4525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/426bcc95cbaed399329579feb14f776d4c2e4525", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426bcc95cbaed399329579feb14f776d4c2e4525/comments", "author": null, "committer": null, "parents": [{"sha": "b07891da2e13689940369c95145feae7c7f1ef47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07891da2e13689940369c95145feae7c7f1ef47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b07891da2e13689940369c95145feae7c7f1ef47"}], "stats": {"total": 51, "additions": 36, "deletions": 15}, "files": [{"sha": "f6d43811e161261b0becc59100614a93b359054a", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/426bcc95cbaed399329579feb14f776d4c2e4525/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/426bcc95cbaed399329579feb14f776d4c2e4525/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=426bcc95cbaed399329579feb14f776d4c2e4525", "patch": "@@ -6552,13 +6552,7 @@ class Builtin_call_expression : public Call_expression\n   do_check_types(Gogo*);\n \n   Expression*\n-  do_copy()\n-  {\n-    return new Builtin_call_expression(this->gogo_, this->fn()->copy(),\n-\t\t\t\t       this->args()->copy(),\n-\t\t\t\t       this->is_varargs(),\n-\t\t\t\t       this->location());\n-  }\n+  do_copy();\n \n   Bexpression*\n   do_get_backend(Translate_context*);\n@@ -7986,6 +7980,20 @@ Builtin_call_expression::do_check_types(Gogo*)\n     }\n }\n \n+Expression*\n+Builtin_call_expression::do_copy()\n+{\n+  Call_expression* bce =\n+    new Builtin_call_expression(this->gogo_, this->fn()->copy(),\n+\t\t\t\tthis->args()->copy(),\n+\t\t\t\tthis->is_varargs(),\n+\t\t\t\tthis->location());\n+\n+  if (this->varargs_are_lowered())\n+    bce->set_varargs_are_lowered();\n+  return bce;\n+}\n+\n // Return the backend representation for a builtin function.\n \n Bexpression*\n@@ -9126,6 +9134,21 @@ Call_expression::do_check_types(Gogo*)\n     }\n }\n \n+Expression*\n+Call_expression::do_copy()\n+{\n+  Call_expression* call =\n+    Expression::make_call(this->fn_->copy(),\n+\t\t\t  (this->args_ == NULL\n+\t\t\t   ? NULL\n+\t\t\t   : this->args_->copy()),\n+\t\t\t  this->is_varargs_, this->location());\n+\n+  if (this->varargs_are_lowered_)\n+    call->set_varargs_are_lowered();\n+  return call;\n+}\n+\n // Return whether we have to use a temporary variable to ensure that\n // we evaluate this call expression in order.  If the call returns no\n // results then it will inevitably be executed last."}, {"sha": "cbac5044484a2d7f9ccb4f3d68f8bc9c48e943ed", "filename": "gcc/go/gofrontend/expressions.h", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/426bcc95cbaed399329579feb14f776d4c2e4525/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/426bcc95cbaed399329579feb14f776d4c2e4525/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.h?ref=426bcc95cbaed399329579feb14f776d4c2e4525", "patch": "@@ -1683,6 +1683,11 @@ class Call_expression : public Expression\n   is_varargs() const\n   { return this->is_varargs_; }\n \n+  // Return whether varargs have already been lowered.\n+  bool\n+  varargs_are_lowered() const\n+  { return this->varargs_are_lowered_; }\n+\n   // Note that varargs have already been lowered.\n   void\n   set_varargs_are_lowered()\n@@ -1738,14 +1743,7 @@ class Call_expression : public Expression\n   do_check_types(Gogo*);\n \n   Expression*\n-  do_copy()\n-  {\n-    return Expression::make_call(this->fn_->copy(),\n-\t\t\t\t (this->args_ == NULL\n-\t\t\t\t  ? NULL\n-\t\t\t\t  : this->args_->copy()),\n-\t\t\t\t this->is_varargs_, this->location());\n-  }\n+  do_copy();\n \n   bool\n   do_must_eval_in_order() const;"}]}