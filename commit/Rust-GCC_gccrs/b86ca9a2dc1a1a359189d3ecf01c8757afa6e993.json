{"sha": "b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg2Y2E5YTJkYzFhMWEzNTkxODlkM2VjZjAxYzg3NTdhZmE2ZTk5Mw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-11-14T01:48:30Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-11-14T01:48:30Z"}, "message": "jni.cc (_Jv_JNI_GetStringUTFChars): Pass length of string to JvGetStringUTFRegion.\n\n\t* jni.cc (_Jv_JNI_GetStringUTFChars): Pass length of string to\n\tJvGetStringUTFRegion.\n\t* java/lang/natPosixProcess.cc (new_string): Pass length of string\n\tto JvGetStringUTFRegion.\n\t* java/lang/natDouble.cc (parseDouble): Pass length of string to\n\tJvGetStringUTFRegion.\n\t* java/lang/natWin32Process.cc (startProcess): Pass length of\n\tstring to JvGetStringUTFRegion.\n\t* java/lang/natClass.cc (forName): Pass length of string to\n\tJvGetStringUTFRegion.\n\t* gnu/gcj/runtime/natNameFinder.cc (getExternalLabel): Pass length\n\tof string to JvGetStringUTFRegion.\n\t* gnu/gcj/convert/natIconv.cc (init): Pass length of string to\n\tJvGetStringUTFRegion.\n\t* gnu/awt/gtk/natGtkLabelPeer.cc (setText): Pass length of string\n\tto JvGetStringUTFRegion.\n\t* gnu/awt/gtk/natGtkButtonPeer.cc (setLabel): Pass length of\n\tstring to JvGetStringUTFRegion.\n\nFrom-SVN: r73571", "tree": {"sha": "9f26991ca04f62953865bb7d4a57ff02205aacae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f26991ca04f62953865bb7d4a57ff02205aacae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/comments", "author": null, "committer": null, "parents": [{"sha": "a25d596a2961075d0aa21c51c822d87218610718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25d596a2961075d0aa21c51c822d87218610718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25d596a2961075d0aa21c51c822d87218610718"}], "stats": {"total": 50, "additions": 36, "deletions": 14}, "files": [{"sha": "03cc2fa2a16226e167c72226634ed5b20aa8e8a5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -1,3 +1,24 @@\n+2003-11-13  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jni.cc (_Jv_JNI_GetStringUTFChars): Pass length of string to\n+\tJvGetStringUTFRegion.\n+\t* java/lang/natPosixProcess.cc (new_string): Pass length of string\n+\tto JvGetStringUTFRegion.\n+\t* java/lang/natDouble.cc (parseDouble): Pass length of string to\n+\tJvGetStringUTFRegion.\n+\t* java/lang/natWin32Process.cc (startProcess): Pass length of\n+\tstring to JvGetStringUTFRegion.\n+\t* java/lang/natClass.cc (forName): Pass length of string to\n+\tJvGetStringUTFRegion.\n+\t* gnu/gcj/runtime/natNameFinder.cc (getExternalLabel): Pass length\n+\tof string to JvGetStringUTFRegion.\n+\t* gnu/gcj/convert/natIconv.cc (init): Pass length of string to\n+\tJvGetStringUTFRegion.\n+\t* gnu/awt/gtk/natGtkLabelPeer.cc (setText): Pass length of string\n+\tto JvGetStringUTFRegion.\n+\t* gnu/awt/gtk/natGtkButtonPeer.cc (setLabel): Pass length of\n+\tstring to JvGetStringUTFRegion.\n+\n 2003-11-13  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* gnu/java/nio/natSelectorImplPosix.cc\n@@ -113,6 +134,7 @@\n \n \t* java/net/URLStreamHandler.java (toExternalForm): Print port only\n \tif host is printed too and port was really given to URL.\n+\n 2003-11-10  Gary Benson  <gbenson@redhat.com>\n \n \t* java/sql/Timestamp.java (valueOf): Correctly handle"}, {"sha": "bc1c79a0e1f9aa387a64610ef5d9f85101bd14aa", "filename": "libjava/gnu/awt/gtk/natGtkButtonPeer.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fgnu%2Fawt%2Fgtk%2FnatGtkButtonPeer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fgnu%2Fawt%2Fgtk%2FnatGtkButtonPeer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fgtk%2FnatGtkButtonPeer.cc?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -19,7 +19,7 @@ gnu::awt::gtk::GtkButtonPeer::setLabel (java::lang::String *label)\n   // FIXME: this can allocate an unbounded amount.  Should use heap\n   // even though it is slower.\n   if (label)\n-    JvGetStringUTFRegion (label, 0, len, buf);\n+    JvGetStringUTFRegion (label, 0, label->length(), buf);\n   buf[len] = '\\0';\n   // The button child is a label.\n   GtkBin *bin = GTK_BIN (ptr);"}, {"sha": "d4195d9d1b1f35300b8b58085430566e65e00811", "filename": "libjava/gnu/awt/gtk/natGtkLabelPeer.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fgnu%2Fawt%2Fgtk%2FnatGtkLabelPeer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fgnu%2Fawt%2Fgtk%2FnatGtkLabelPeer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fgtk%2FnatGtkLabelPeer.cc?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -20,7 +20,7 @@ gnu::awt::gtk::GtkLabelPeer::setText (java::lang::String *text)\n   // even though it is slower.\n   char buf[len + 1];\n   if (text)\n-    JvGetStringUTFRegion (text, 0, len, buf);\n+    JvGetStringUTFRegion (text, 0, text->length(), buf);\n   buf[len] = '\\0';\n   gtk_label_set_text (GTK_LABEL (ptr), buf);\n }"}, {"sha": "6c64e2b4bf9b3b33aaa40ce6f4555c068c2745eb", "filename": "libjava/gnu/gcj/convert/natIconv.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -42,7 +42,7 @@ gnu::gcj::convert::Input_iconv::init (jstring encoding)\n #ifdef HAVE_ICONV\n   jsize len = _Jv_GetStringUTFLength (encoding);\n   char buffer[len + 1];\n-  _Jv_GetStringUTFRegion (encoding, 0, len, buffer);\n+  _Jv_GetStringUTFRegion (encoding, 0, encoding->length(), buffer);\n   buffer[len] = '\\0';\n \n   iconv_t h = iconv_open (\"UCS-2\", buffer);\n@@ -142,7 +142,7 @@ gnu::gcj::convert::Output_iconv::init (jstring encoding)\n #ifdef HAVE_ICONV\n   jsize len = _Jv_GetStringUTFLength (encoding);\n   char buffer[len + 1];\n-  _Jv_GetStringUTFRegion (encoding, 0, len, buffer);\n+  _Jv_GetStringUTFRegion (encoding, 0, encoding->length(), buffer);\n   buffer[len] = '\\0';\n \n   iconv_t h = iconv_open (buffer, \"UCS-2\");"}, {"sha": "41b8f4badf2e74e6c781941f12d2b635fe182ce4", "filename": "libjava/gnu/gcj/runtime/natNameFinder.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatNameFinder.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatNameFinder.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatNameFinder.cc?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -1,6 +1,6 @@\n // natNameFinder.cc - native helper methods for NameFinder.java\n \n-/* Copyright (C) 2002  Free Software Foundation, Inc\n+/* Copyright (C) 2002, 2003  Free Software Foundation, Inc\n \n    This file is part of libgcj.\n \n@@ -56,7 +56,7 @@ gnu::gcj::runtime::NameFinder::getExternalLabel (java::lang::String* name)\n   char *newName = (char *) JvMalloc (pfxLen + nameLen + 1);\n   *(newName + 0) = '\\0';\n   strcpy (newName, LABEL_PREFIX);\n-  JvGetStringUTFRegion (name, 0, nameLen, newName + pfxLen);\n+  JvGetStringUTFRegion (name, 0, name->length(), newName + pfxLen);\n   *(newName + pfxLen + nameLen) = '\\0';\n   return JvNewStringLatin1 (newName);\n }"}, {"sha": "21393f44ecd64074bf009afedf2120153b429dcf", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -71,7 +71,7 @@ java::lang::Class::forName (jstring className, jboolean initialize,\n \n   jsize length = _Jv_GetStringUTFLength (className);\n   char buffer[length];\n-  _Jv_GetStringUTFRegion (className, 0, length, buffer);\n+  _Jv_GetStringUTFRegion (className, 0, className->length(), buffer);\n \n   _Jv_Utf8Const *name = _Jv_makeUtf8Const (buffer, length);\n "}, {"sha": "4c9693031d6c440cf4e70dfab98d7e555fa6aa5e", "filename": "libjava/java/lang/natDouble.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjava%2Flang%2FnatDouble.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjava%2Flang%2FnatDouble.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatDouble.cc?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -1,6 +1,6 @@\n // natDouble.cc - Implementation of java.lang.Double native methods.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -183,7 +183,7 @@ java::lang::Double::parseDouble(jstring str)\n     {\n       // Note that UTF can expand 3x.\n       char *data = (char *) __builtin_alloca (3 * length + 1);\n-      jsize blength = _Jv_GetStringUTFRegion (str, start, length, data);\n+      jsize blength = _Jv_GetStringUTFRegion (str, start, str->length(), data);\n       data[blength] = 0; \n \n       struct _Jv_reent reent;  "}, {"sha": "ef469242fd62166493c06344d6f9a3159b0ba772", "filename": "libjava/java/lang/natPosixProcess.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjava%2Flang%2FnatPosixProcess.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjava%2Flang%2FnatPosixProcess.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatPosixProcess.cc?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -1,6 +1,6 @@\n // natPosixProcess.cc - Native side of POSIX process code.\n \n-/* Copyright (C) 1998, 1999, 2000, 2002  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2002, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -82,7 +82,7 @@ new_string (jstring string)\n {\n   jsize s = _Jv_GetStringUTFLength (string);\n   char *buf = (char *) _Jv_Malloc (s + 1);\n-  _Jv_GetStringUTFRegion (string, 0, s, buf);\n+  _Jv_GetStringUTFRegion (string, 0, string->length(), buf);\n   buf[s] = '\\0';\n   return buf;\n }"}, {"sha": "56394cfc7b93427be033f9544800e4ab4ed41790", "filename": "libjava/java/lang/natWin32Process.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjava%2Flang%2FnatWin32Process.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjava%2Flang%2FnatWin32Process.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatWin32Process.cc?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -230,7 +230,7 @@ java::lang::ConcreteProcess::startProcess (jstringArray progarray,\n       if (i > 0)\n         *cmdLineCurPos++ = ' ';\n       jsize s = _Jv_GetStringUTFLength (elts[i]);\n-      _Jv_GetStringUTFRegion (elts[i], 0, s, cmdLineCurPos);\n+      _Jv_GetStringUTFRegion (elts[i], 0, elts[i]->length(), cmdLineCurPos);\n       cmdLineCurPos += s;\n     }\n   *cmdLineCurPos = '\\0';\n@@ -251,7 +251,7 @@ java::lang::ConcreteProcess::startProcess (jstringArray progarray,\n       for (int i = 0; i < envp->length; ++i)\n         {\n           jsize s = _Jv_GetStringUTFLength (elts[i]);\n-          _Jv_GetStringUTFRegion (elts[i], 0, s, (env + j));\n+          _Jv_GetStringUTFRegion (elts[i], 0, elts[i]->length(), (env + j));\n \n           j += s;\n           *(env + j) = '\\0';"}, {"sha": "d311f60ff1cfab13832964dc7f3368231bcca8ca", "filename": "libjava/jni.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "patch": "@@ -1303,7 +1303,7 @@ static const char *\n   try\n     {\n       char *r = (char *) _Jv_Malloc (len + 1);\n-      JvGetStringUTFRegion (string, 0, len, r);\n+      JvGetStringUTFRegion (string, 0, string->length(), r);\n       r[len] = '\\0';\n \n       if (isCopy)"}]}