{"sha": "eab1da69ad8a6f76c60e5045a403cb8a924aa713", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFiMWRhNjlhZDhhNmY3NmM2MGU1MDQ1YTQwM2NiOGE5MjRhYTcxMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-29T17:08:16Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-29T17:08:16Z"}, "message": "[multiple changes]\n\n2010-11-29  Zdenek Dvorak  <rakdver@kam.uniff.cz>\n\n\tPR tree-optimization/46675\n\t* tree-ssa-loop-niter.c (split_to_var_and_offset): Avoid overflow\n\tin offset calculation.\n\ntestsuite/ChangeLog:\n\n2010-11-29  Richard Guenther  <rguenther@suse.de>\n\t    Zdenek Dvorak  <rakdver@kam.uniff.cz>\n\n\tPR tree-optimization/46675\n\t* gcc.dg/pr46675.c: New test.\n\nFrom-SVN: r167256", "tree": {"sha": "2a6452fc40b80c08fdbdc1ef264f86f955950998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a6452fc40b80c08fdbdc1ef264f86f955950998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eab1da69ad8a6f76c60e5045a403cb8a924aa713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab1da69ad8a6f76c60e5045a403cb8a924aa713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab1da69ad8a6f76c60e5045a403cb8a924aa713", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab1da69ad8a6f76c60e5045a403cb8a924aa713/comments", "author": null, "committer": null, "parents": [{"sha": "37fc948fee7216ab6d9d62375f56ed18b062b0d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37fc948fee7216ab6d9d62375f56ed18b062b0d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37fc948fee7216ab6d9d62375f56ed18b062b0d1"}], "stats": {"total": 85, "additions": 62, "deletions": 23}, "files": [{"sha": "ca686329cb466453f572b993e0f74a671251d8b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab1da69ad8a6f76c60e5045a403cb8a924aa713/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab1da69ad8a6f76c60e5045a403cb8a924aa713/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eab1da69ad8a6f76c60e5045a403cb8a924aa713", "patch": "@@ -1,6 +1,13 @@\n+2010-11-29  Zdenek Dvorak  <rakdver@kam.uniff.cz>\n+\n+\tPR tree-optimization/46675\n+\t* tree-ssa-loop-niter.c (split_to_var_and_offset): Avoid overflow\n+\tin offset calculation.\n+\n 2010-11-29  Jan Hubicka  <jh@suse.cz>\n \n-\t* collect2.c (main): Do not imply verbose output with LTO and linker plugin.\n+\t* collect2.c (main): Do not imply verbose output with\n+\tLTO and linker plugin.\n \n 2010-11-29  Dodji Seketeli  <dodji@redhat.com>\n \n@@ -12,7 +19,7 @@\n \tPR debug/46101\n \t* dwarf2out.c (lookup_type_die_strip_naming_typedef): New\n \tfunction.\n-    \t(scope_die_for, gen_type_die_for_member): Replace uses of\n+\t(scope_die_for, gen_type_die_for_member): Replace uses of\n \tlookup_type_die with use of lookup_type_die_strip_naming_typedef.\n \n 2010-11-29  Iain Sandoe  <iains@gcc.gnu.org>\n@@ -74,12 +81,11 @@\n \t(SECTION_NO_ANCHOR): Define.\n \t(TARGET_ASM_OUTPUT_ANCHOR) Define with a default of NULL.\n \t(DARWIN_SECTION_ANCHORS): Define with a default of 0.\n-\t\n+\n 2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* system.h: Include \"safe-ctype.h\" instead of <safe-ctype.h>.\n-\tInclude <signal.h>, <sys/mman.h>, <sys/resource.h> and\n-\t<sys/times.h>.\n+\tInclude <signal.h>, <sys/mman.h>, <sys/resource.h> and <sys/times.h>.\n \t(O_BINARY, SIGCHLD, MAP_FAILED, MAP_ANONYMOUS, kill):\n \tConditionally define.\n \t(GET_ENVIRONMENT): Poison.\n@@ -111,8 +117,7 @@\n \t* config/microblaze/microblaze.c: Don't include <signal.h>.\n \t* config/mips/mips.c: Don't include <signal.h>.\n \t* config/rs6000/host-darwin.c: Don't include <signal.h>.\n-\t* cppdefault.c (cpp_relocated): Use getenv instead of\n-\tGET_ENVIRONMENT.\n+\t* cppdefault.c (cpp_relocated): Use getenv instead of GET_ENVIRONMENT.\n \t* defaults.h (GET_ENVIRONMENT): Don't define.\n \t* et-forest.h: Don't include <ansidecl.h> or <stddef.h>.\n \t* gcc.c: Don't include <signal.h>, <sys/mman.h> or <sys/types.h>.\n@@ -127,10 +132,8 @@\n \t* ggc-zone.c: Don't include <sys/mman.h>.\n \t(MAP_ANONYMOUS, MAP_FAILED): Don't define.\n \t* graph.c: Include \"config.h\" instead of <config.h>.\n-\t* incpath.c (add_env_var_paths): Use getenv instead of\n-\tGET_ENVIRONMENT.\n-\t* lto-wrapper.c: Don't include <errno.h>, <signal.h> or\n-\t\"libiberty.h\".\n+\t* incpath.c (add_env_var_paths): Use getenv instead of GET_ENVIRONMENT.\n+\t* lto-wrapper.c: Don't include <errno.h>, <signal.h> or \"libiberty.h\".\n \t(SIGCHLD, kill): Don't define.\n \t* mips-tfile.c: Don't include <signal.h>.\n \t* opts.c: Don't include <signal.h> or <sys/resource.h>.\n@@ -153,7 +156,7 @@\n \tobjc_begin_catch_clause() in that case.  Improved error recovery.\n \tReorganized code to be almost identical to\n \tcp_parser_objc_try_catch_finally_statement.\n-\t\n+\n 2010-11-29  Joern Rennecke  <amylaar@spamcop.net>\n \n \tPR tree-optimization/46621"}, {"sha": "c4bf6203e78cecf5c3986a70e28f27e14e10127f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab1da69ad8a6f76c60e5045a403cb8a924aa713/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab1da69ad8a6f76c60e5045a403cb8a924aa713/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eab1da69ad8a6f76c60e5045a403cb8a924aa713", "patch": "@@ -1,28 +1,35 @@\n+2010-11-29  Richard Guenther  <rguenther@suse.de>\n+\t    Zdenek Dvorak  <rakdver@kam.uniff.cz>\n+\n+\tPR tree-optimization/46675\n+\t* gcc.dg/pr46675.c: New test.\n+\n 2010-11-29  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* gcc/testsuite/objc.dg/strings-1.m: Move to...\n \t* gcc/testsuite/objc.dg/strings/strings-1.m: ... here. Update paths.\n \t* gcc/testsuite/objc.dg/strings-2.m: Move to ...\n-\t* gcc/testsuite/objc.dg/strings/strings-2.m ... here, provide a \n+\t* gcc/testsuite/objc.dg/strings/strings-2.m ... here, provide a\n \tconstructor and class reference for NeXT runtime.  Update paths.\n \t* gcc/testsuite/obj-c++.dg/strings-1.m: Move to...\n \t* gcc/testsuite/obj-c++.dg/strings/strings-1.m: ... here. Update paths.\n \t* gcc/testsuite/obj-c++.dg/strings-2.m: Move to ...\n-\t* gcc/testsuite/obj-c__.dg/strings/strings-2.m ... here, provide a \n+\t* gcc/testsuite/obj-c__.dg/strings/strings-2.m ... here, provide a\n \tconstructor and class reference for NeXT runtime.  Update paths.\n-\t\n+\n 2010-11-29  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42260\n \t* g++.dg/conversion/cast2.C: New test.\n-\t* g++.dg/conversion/cond4/C: Likewise. This ensures we don't regress on\n+\n \tPR c++/45383\n+\t* g++.dg/conversion/cond4.C: Likewise.\n \n 2010-11-29  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/45383\n \tReverted patch for PR c++/42260\n-\t* conversion/cast2.C: Reverted new test.\n+\t* g++.dg/conversion/cast2.C: Reverted new test.\n \n 2010-11-29  Dodji Seketeli  <dodji@redhat.com>\n \n@@ -91,21 +98,21 @@\n \n 2010-11-27  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n-\tPR objc++/46222\t\n+\tPR objc++/46222\n \t* obj-c++.dg/property/at-property-2.mm: Uncommented testcase.\n \n 2010-11-27  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/property/at-property-24.m: New.\n-\t* objc.dg/property/at-property-25.m: New.\t\n+\t* objc.dg/property/at-property-25.m: New.\n \t* obj-c++.dg/property/at-property-24.mm: New.\n \t* obj-c++.dg/property/at-property-25.mm: New.\n \n 2010-11-27  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n-\t* objc.dg/protocol-qualifier-1.m: New.\t\n+\t* objc.dg/protocol-qualifier-1.m: New.\n \t* objc.dg/protocol-qualifier-2.m: New.\n-\t* obj-c++.dg/protocol-qualifier-1.mm: New.\t\n+\t* obj-c++.dg/protocol-qualifier-1.mm: New.\n \t* obj-c++.dg/protocol-qualifier-2.mm: New.\n \n 2010-11-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>"}, {"sha": "7493f0e6032bd438f50aa2dd06c7afadb19ae0b9", "filename": "gcc/testsuite/gcc.dg/pr46675.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab1da69ad8a6f76c60e5045a403cb8a924aa713/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46675.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab1da69ad8a6f76c60e5045a403cb8a924aa713/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46675.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46675.c?ref=eab1da69ad8a6f76c60e5045a403cb8a924aa713", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+int j;\n+\n+void\n+__attribute__((noinline))\n+foo (int n)\n+{\n+  int npairs, i;\n+  npairs = n - (-__INT_MAX__ - 1);\n+\n+  if (npairs > 0)\n+    for (i = 0; i < npairs; i++)\n+      j++;\n+}\n+\n+int\n+main ()\n+{\n+  foo (5 - __INT_MAX__ - 1);\n+\n+  if (j != 5)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "466cdae80b76d68cd24794aebb1c952d7d3f10b6", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab1da69ad8a6f76c60e5045a403cb8a924aa713/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab1da69ad8a6f76c60e5045a403cb8a924aa713/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=eab1da69ad8a6f76c60e5045a403cb8a924aa713", "patch": "@@ -95,10 +95,10 @@ split_to_var_and_offset (tree expr, tree *var, mpz_t offset)\n       *var = op0;\n       /* Always sign extend the offset.  */\n       off = tree_to_double_int (op1);\n-      if (negate)\n-\toff = double_int_neg (off);\n       off = double_int_sext (off, TYPE_PRECISION (type));\n       mpz_set_double_int (offset, off, false);\n+      if (negate)\n+\tmpz_neg (offset, offset);\n       break;\n \n     case INTEGER_CST:"}]}