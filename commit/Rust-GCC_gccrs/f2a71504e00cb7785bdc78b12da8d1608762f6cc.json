{"sha": "f2a71504e00cb7785bdc78b12da8d1608762f6cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJhNzE1MDRlMDBjYjc3ODViZGM3OGIxMmRhOGQxNjA4NzYyZjZjYw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-09-29T02:44:38Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-09-29T02:44:38Z"}, "message": "re PR libfortran/35862 ([F2003] Implement new rounding modes for run time)\n\n2009-09-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/35862\n\t* io.c (format_token): Add enumerators for rounding format specifiers.\n\t(format_lex): Tokenize the rounding format specifiers.\n\t(gfc_match_open): Enable rounding modes in OPEN statement.\n\nFrom-SVN: r152262", "tree": {"sha": "9b6b768950643051e4f82e705e0f0b05dcbc8e71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b6b768950643051e4f82e705e0f0b05dcbc8e71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2a71504e00cb7785bdc78b12da8d1608762f6cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a71504e00cb7785bdc78b12da8d1608762f6cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2a71504e00cb7785bdc78b12da8d1608762f6cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a71504e00cb7785bdc78b12da8d1608762f6cc/comments", "author": null, "committer": null, "parents": [{"sha": "cb1049f9c14b77023125ac287c6930e99a1e0caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1049f9c14b77023125ac287c6930e99a1e0caf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1049f9c14b77023125ac287c6930e99a1e0caf"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "39b96e6def7aae0292b7a513064456619f36324e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a71504e00cb7785bdc78b12da8d1608762f6cc/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a71504e00cb7785bdc78b12da8d1608762f6cc/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f2a71504e00cb7785bdc78b12da8d1608762f6cc", "patch": "@@ -1,3 +1,10 @@\n+2009-09-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/35862\n+\t* io.c (format_token): Add enumerators for rounding format specifiers.\n+\t(format_lex): Tokenize the rounding format specifiers.\n+\t(gfc_match_open): Enable rounding modes in OPEN statement.\n+\n 2009-09-28  Richard Henderson  <rth@redhat.com>\n \n \t* f95-lang.c (gfc_init_builtin_functions): Update call to"}, {"sha": "abd370f50481925a43ccfada50457bc1bf495f6f", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 40, "deletions": 7, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a71504e00cb7785bdc78b12da8d1608762f6cc/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a71504e00cb7785bdc78b12da8d1608762f6cc/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=f2a71504e00cb7785bdc78b12da8d1608762f6cc", "patch": "@@ -111,7 +111,8 @@ typedef enum\n   FMT_COMMA, FMT_COLON, FMT_SLASH, FMT_DOLLAR, FMT_LPAREN,\n   FMT_RPAREN, FMT_X, FMT_SIGN, FMT_BLANK, FMT_CHAR, FMT_P, FMT_IBOZ, FMT_F,\n   FMT_E, FMT_EN, FMT_ES, FMT_G, FMT_L, FMT_A, FMT_D, FMT_H, FMT_END,\n-  FMT_ERROR, FMT_DC, FMT_DP, FMT_T, FMT_TR, FMT_TL, FMT_STAR\n+  FMT_ERROR, FMT_DC, FMT_DP, FMT_T, FMT_TR, FMT_TL, FMT_STAR, FMT_RC,\n+  FMT_RD, FMT_RN, FMT_RP, FMT_RU, FMT_RZ\n }\n format_token;\n \n@@ -467,6 +468,35 @@ format_lex (void)\n \t}\n       break;\n \n+    case 'R':\n+      c = next_char_not_space (&error);\n+      switch (c)\n+\t{\n+\tcase 'C':\n+\t  token = FMT_RC;\n+\t  break;\n+\tcase 'D':\n+\t  token = FMT_RD;\n+\t  break;\n+\tcase 'N':\n+\t  token = FMT_RN;\n+\t  break;\n+\tcase 'P':\n+\t  token = FMT_RP;\n+\t  break;\n+\tcase 'U':\n+\t  token = FMT_RU;\n+\t  break;\n+\tcase 'Z':\n+\t  token = FMT_RZ;\n+\t  break;\n+\tdefault:\n+\t  token = FMT_UNKNOWN;\n+\t  unget_char ();\n+\t  break;\n+\t}\n+      break;\n+\n     case '\\0':\n       token = FMT_END;\n       break;\n@@ -623,6 +653,12 @@ check_format (bool is_input)\n     case FMT_BLANK:\n     case FMT_DP:\n     case FMT_DC:\n+    case FMT_RC:\n+    case FMT_RD:\n+    case FMT_RN:\n+    case FMT_RP:\n+    case FMT_RU:\n+    case FMT_RZ:\n       goto between_desc;\n \n     case FMT_CHAR:\n@@ -1924,8 +1960,8 @@ gfc_match_open (void)\n   /* Checks on the ROUND specifier.  */\n   if (open->round)\n     {\n-      /* When implemented, change the following to use gfc_notify_std F2003.  */\n-      gfc_error (\"Fortran F2003: ROUND= specifier at %C not implemented\");\n+      if (gfc_notify_std (GFC_STD_F2003, \"Fortran F2003: ROUND= at %C \"\n+\t  \"not allowed in Fortran 95\") == FAILURE)\n       goto cleanup;\n \n       if (open->round->expr_type == EXPR_CONSTANT)\n@@ -3275,12 +3311,9 @@ if (condition) \\\n \n   if (dt->round)\n     {\n-      /* When implemented, change the following to use gfc_notify_std F2003.\n       if (gfc_notify_std (GFC_STD_F2003, \"Fortran 2003: ROUND= at %C \"\n \t  \"not allowed in Fortran 95\") == FAILURE)\n-\treturn MATCH_ERROR;  */\n-      gfc_error (\"F2003 Feature: ROUND= specifier at %C not implemented\");\n-      return MATCH_ERROR;\n+\treturn MATCH_ERROR;\n \n       if (dt->round->expr_type == EXPR_CONSTANT)\n \t{"}]}