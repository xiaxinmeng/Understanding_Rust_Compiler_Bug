{"sha": "6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJkN2IxYmIzNzZjMTYxMmM5ZDdlMTZjMDhmNzdiYWUzN2YxZjA4YQ==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2000-11-27T18:17:40Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-11-27T18:17:40Z"}, "message": "atomicity.h: Replace '__ATOMICITY_INLINE' with 'inline'.\n\n\n2000-11-27  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n        * config/cpu/powerpc/bits/atomicity.h: Replace '__ATOMICITY_INLINE'\n        with 'inline'.\n        (__ex__atomic_add): Add __volatile__ to asm.\n        (__atomic_add): Likewise.\n        (__compare_and_swap): Likewise.\n        (__always_swap): Likewise.\n        (__test_and_set): Likewise.\n\nFrom-SVN: r37802", "tree": {"sha": "36185cf10da97c3c025f3c8ebf79e29fbf43f3f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36185cf10da97c3c025f3c8ebf79e29fbf43f3f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dfc0fbe59f074e254e6c1b10e2a62158044efd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dfc0fbe59f074e254e6c1b10e2a62158044efd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dfc0fbe59f074e254e6c1b10e2a62158044efd3"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "1da793858dd2152b101ba98a9045d44252861373", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a", "patch": "@@ -1,3 +1,13 @@\n+2000-11-27  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+        * config/cpu/powerpc/bits/atomicity.h: Replace '__ATOMICITY_INLINE'\n+        with 'inline'.\n+        (__ex__atomic_add): Add __volatile__ to asm.\n+        (__atomic_add): Likewise.\n+        (__compare_and_swap): Likewise.\n+        (__always_swap): Likewise.\n+        (__test_and_set): Likewise.\n+\t\n 2000-11-27  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* tests_flags.in: Update documentation to reflect the change"}, {"sha": "cd77f989c9379f7b8930c9bf533b6ee97ed91d7d", "filename": "libstdc++-v3/config/cpu/powerpc/bits/atomicity.h", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fbits%2Fatomicity.h?ref=6bd7b1bb376c1612c9d7e16c08f77bae37f1f08a", "patch": "@@ -22,18 +22,12 @@\n \n typedef int _Atomic_word;\n \n-#if BROKEN_PPC_ASM_CR0\n-# define __ATOMICITY_INLINE /* nothing */\n-#else\n-# define __ATOMICITY_INLINE inline\n-#endif\n-\n-static __ATOMICITY_INLINE _Atomic_word\n+static inline _Atomic_word\n __attribute__ ((__unused__))\n __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __tmp, __res;\n-  __asm__ (\"\\\n+  __asm__ __volatile__ (\"\\\n 0:\tlwarx\t%0,0,%2\n \tadd%I3\t%1,%0,%3\n \tstwcx.\t%1,0,%2\n@@ -42,25 +36,25 @@ __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n   return __res;\n }\n \n-static __ATOMICITY_INLINE void\n+static inline void\n __attribute__ ((__unused__))\n __atomic_add (volatile _Atomic_word *__mem, int __val)\n {\n   _Atomic_word __tmp;\n-  __asm__ (\"\\\n+  __asm__ __volatile__ (\"\\\n 0:\tlwarx\t%0,0,%1\n \tadd%I2\t%0,%0,%2\n \tstwcx.\t%0,0,%1\n \tbne-\t0b\n \" : \"=&b\"(__tmp) : \"r\" (__mem), \"Ir\"(__val) : \"cr0\", \"memory\");\n }\n \n-static __ATOMICITY_INLINE int\n+static inline int\n __attribute__ ((__unused__))\n __compare_and_swap (volatile long *__p, long int __oldval, long int __newval)\n {\n   int __res;\n-  __asm__ (\"\\\n+  __asm__ __volatile__ (\"\\\n 0:\tlwarx\t%0,0,%1\n \tsub%I2c.\t%0,%0,%2\n \tcntlzw\t%0,%0\n@@ -72,25 +66,25 @@ __compare_and_swap (volatile long *__p, long int __oldval, long int __newval)\n   return __res >> 5;\n }\n \n-static __ATOMICITY_INLINE long\n+static inline long\n __attribute__ ((__unused__))\n __always_swap (volatile long *__p, long int __newval)\n {\n   long __res;\n-  __asm__ (\"\\\n+  __asm__ __volatile__ (\"\\\n 0:\tlwarx\t%0,0,%1\n \tstwcx.\t%2,0,%1\n \tbne-\t0b\n \" : \"=&r\"(__res) : \"r\"(__p), \"r\"(__newval) : \"cr0\", \"memory\");\n   return __res;\n }\n \n-static __ATOMICITY_INLINE int\n+static inline int\n __attribute__ ((__unused__))\n __test_and_set (volatile long *__p, long int __newval)\n {\n   int __res;\n-  __asm__ (\"\\\n+  __asm__ __volatile__ (\"\\\n 0:\tlwarx\t%0,0,%1\n \tcmpwi\t%0,0\n \tbne-\t1f\n@@ -102,3 +96,4 @@ __test_and_set (volatile long *__p, long int __newval)\n }\n \n #endif /* atomicity.h */\n+"}]}