{"sha": "9aa357c75358a51f038e50f7c8d9207b58c157e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFhMzU3Yzc1MzU4YTUxZjAzOGU1MGY3YzhkOTIwN2I1OGMxNTdlMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-10-12T14:47:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-10-12T14:47:34Z"}, "message": "re PR ada/91995 (gnat miscompilation and bootstrap failure on m68k-linux)\n\n\tPR ada/91995\n\t* sem_ch8.adb (Chain_Use_Clause): Remove second argument in calls\n\tto Defining_Entity.\n\t* sem_elab.adb (Find_Unit_Entity): Likewise.  Deal with N_Subunit\n\there in lieu of in Defining_Entity.\n\t* sem_util.ads (Defining_Entity): Remove 2nd and 3th parameters.\n\t* sem_util.adb (Defining_Entity): Remove 2nd and 3th parameters,\n\tand adjust accordingly.  Deal with N_Compilation_Unit.\n\nFrom-SVN: r276916", "tree": {"sha": "c848d422a4d6c884a4a4a2c644ada53d6ad6ebc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c848d422a4d6c884a4a4a2c644ada53d6ad6ebc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aa357c75358a51f038e50f7c8d9207b58c157e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa357c75358a51f038e50f7c8d9207b58c157e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aa357c75358a51f038e50f7c8d9207b58c157e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa357c75358a51f038e50f7c8d9207b58c157e0/comments", "author": null, "committer": null, "parents": [{"sha": "853ce7c073eedfba1adfb63530a8bd2baa767137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853ce7c073eedfba1adfb63530a8bd2baa767137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/853ce7c073eedfba1adfb63530a8bd2baa767137"}], "stats": {"total": 97, "additions": 36, "deletions": 61}, "files": [{"sha": "e66f11133ea0ce9884de583baabeb1f37f66640b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9aa357c75358a51f038e50f7c8d9207b58c157e0", "patch": "@@ -1,3 +1,14 @@\n+2019-10-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/91995\n+\t* sem_ch8.adb (Chain_Use_Clause): Remove second argument in calls\n+\tto Defining_Entity.\n+\t* sem_elab.adb (Find_Unit_Entity): Likewise.  Deal with N_Subunit\n+\there in lieu of in Defining_Entity.\n+\t* sem_util.ads (Defining_Entity): Remove 2nd and 3th parameters.\n+\t* sem_util.adb (Defining_Entity): Remove 2nd and 3th parameters,\n+\tand adjust accordingly.  Deal with N_Compilation_Unit.\n+\n 2019-10-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (elaborate_reference_1): Specifically deal with"}, {"sha": "38cbf1cd26bd7d2bdd21a96205399ed55c93ba66", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=9aa357c75358a51f038e50f7c8d9207b58c157e0", "patch": "@@ -4290,16 +4290,14 @@ package body Sem_Ch8 is\n \n       --  Common case for compilation unit\n \n-      elsif Defining_Entity (N               => Parent (N),\n-                             Empty_On_Errors => True) = Current_Scope\n-      then\n+      elsif Defining_Entity (Parent (N)) = Current_Scope then\n          null;\n \n       else\n          --  If declaration appears in some other scope, it must be in some\n          --  parent unit when compiling a child.\n \n-         Pack := Defining_Entity (Parent (N), Empty_On_Errors => True);\n+         Pack := Defining_Entity (Parent (N));\n \n          if not In_Open_Scopes (Pack) then\n             null;"}, {"sha": "0c71f5910d5a822ed86c30430203833819d491a8", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=9aa357c75358a51f038e50f7c8d9207b58c157e0", "patch": "@@ -9103,13 +9103,23 @@ package body Sem_Elab is\n                                    N_Procedure_Instantiation)\n         and then Nkind (Context) = N_Compilation_Unit\n       then\n-         return\n-           Related_Instance (Defining_Entity (N, Concurrent_Subunit => True));\n+         return Related_Instance (Defining_Entity (N));\n+\n+      --  The unit denotes a concurrent body acting as a subunit. Such bodies\n+      --  are generally rewritten into null statements. The proper entity is\n+      --  that of the \"original node\".\n+\n+      elsif Nkind (N) = N_Subunit\n+        and then Nkind (Proper_Body (N)) = N_Null_Statement\n+        and then Nkind_In (Original_Node (Proper_Body (N)), N_Protected_Body,\n+                                                            N_Task_Body)\n+      then\n+         return Defining_Entity (Original_Node (Proper_Body (N)));\n \n       --  Otherwise the proper entity is the defining entity\n \n       else\n-         return Defining_Entity (N, Concurrent_Subunit => True);\n+         return Defining_Entity (N);\n       end if;\n    end Find_Unit_Entity;\n "}, {"sha": "4de41d3e6dd935dbb0096160e4c37a4e5ac57963", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 9, "deletions": 34, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9aa357c75358a51f038e50f7c8d9207b58c157e0", "patch": "@@ -5867,11 +5867,7 @@ package body Sem_Util is\n    -- Defining_Entity --\n    ---------------------\n \n-   function Defining_Entity\n-     (N                  : Node_Id;\n-      Empty_On_Errors    : Boolean := False;\n-      Concurrent_Subunit : Boolean := False) return Entity_Id\n-   is\n+   function Defining_Entity (N : Node_Id) return Entity_Id is\n    begin\n       case Nkind (N) is\n          when N_Abstract_Subprogram_Declaration\n@@ -5922,24 +5918,11 @@ package body Sem_Util is\n          =>\n             return Defining_Identifier (N);\n \n-         when N_Subunit =>\n-            declare\n-               Bod      : constant Node_Id := Proper_Body (N);\n-               Orig_Bod : constant Node_Id := Original_Node (Bod);\n-\n-            begin\n-               --  Retrieve the entity of the original protected or task body\n-               --  if requested by the caller.\n+         when N_Compilation_Unit =>\n+            return Defining_Entity (Unit (N));\n \n-               if Concurrent_Subunit\n-                 and then Nkind (Bod) = N_Null_Statement\n-                 and then Nkind_In (Orig_Bod, N_Protected_Body, N_Task_Body)\n-               then\n-                  return Defining_Entity (Orig_Bod);\n-               else\n-                  return Defining_Entity (Bod);\n-               end if;\n-            end;\n+         when N_Subunit =>\n+            return Defining_Entity (Proper_Body (N));\n \n          when N_Function_Instantiation\n             | N_Function_Specification\n@@ -5965,14 +5948,10 @@ package body Sem_Util is\n                --  can continue semantic analysis.\n \n                elsif Nam = Error then\n-                  if Empty_On_Errors then\n-                     return Empty;\n-                  else\n-                     Err := Make_Temporary (Sloc (N), 'T');\n-                     Set_Defining_Unit_Name (N, Err);\n+                  Err := Make_Temporary (Sloc (N), 'T');\n+                  Set_Defining_Unit_Name (N, Err);\n \n-                     return Err;\n-                  end if;\n+                  return Err;\n \n                --  If not an entity, get defining identifier\n \n@@ -5987,11 +5966,7 @@ package body Sem_Util is\n             return Entity (Identifier (N));\n \n          when others =>\n-            if Empty_On_Errors then\n-               return Empty;\n-            else\n-               raise Program_Error;\n-            end if;\n+            raise Program_Error;\n       end case;\n    end Defining_Entity;\n "}, {"sha": "dc5e57b0bf6335728bd364dff5f80fcca6beb77a", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa357c75358a51f038e50f7c8d9207b58c157e0/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=9aa357c75358a51f038e50f7c8d9207b58c157e0", "patch": "@@ -554,10 +554,7 @@ package Sem_Util is\n    --  in the case of a descendant of a generic formal type (returns Int'Last\n    --  instead of 0).\n \n-   function Defining_Entity\n-     (N                  : Node_Id;\n-      Empty_On_Errors    : Boolean := False;\n-      Concurrent_Subunit : Boolean := False) return Entity_Id;\n+   function Defining_Entity (N : Node_Id) return Entity_Id;\n    --  Given a declaration N, returns the associated defining entity. If the\n    --  declaration has a specification, the entity is obtained from the\n    --  specification. If the declaration has a defining unit name, then the\n@@ -568,22 +565,6 @@ package Sem_Util is\n    --  local entities declared during loop expansion. These entities need\n    --  debugging information, generated through Qualify_Entity_Names, and\n    --  the loop declaration must be placed in the table Name_Qualify_Units.\n-   --\n-   --  Set flag Empty_On_Error to change the behavior of this routine as\n-   --  follows:\n-   --\n-   --    * True  - A declaration that lacks a defining entity returns Empty.\n-   --      A node that does not allow for a defining entity returns Empty.\n-   --\n-   --    * False - A declaration that lacks a defining entity is given a new\n-   --      internally generated entity which is subsequently returned. A node\n-   --      that does not allow for a defining entity raises Program_Error.\n-   --\n-   --  The former semantics is appropriate for the back end; the latter\n-   --  semantics is appropriate for the front end.\n-   --\n-   --  Set flag Concurrent_Subunit to handle rewritings of concurrent bodies\n-   --  which act as subunits. Such bodies are generally rewritten as null.\n \n    function Denotes_Discriminant\n      (N                : Node_Id;"}]}