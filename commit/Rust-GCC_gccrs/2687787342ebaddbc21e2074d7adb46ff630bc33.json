{"sha": "2687787342ebaddbc21e2074d7adb46ff630bc33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY4Nzc4NzM0MmViYWRkYmMyMWUyMDc0ZDdhZGI0NmZmNjMwYmMzMw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-09-28T17:58:55Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-09-28T17:58:55Z"}, "message": "In gcc/objc/: 2010-09-28 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/objc/:\n2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Merge from 'apple/trunk' branch on FSF servers.\n\n        2005-08-23  Stuart Hastings <stuart@apple.com>\n                    Ziemowit Laski  <zlaski@apple.com>\n\n        Radar 4209854\n        * objc-act.c (objc_decay_parm_type): New function.\n        (get_arg_type_list): Decay types for all named arguments.\n        (objc_push_parm): Rebuild the PARM_DECL if its type has\n        been decayed.\nIn gcc/testsuite/:\n2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Merge from 'apple/trunk' branch on FSF servers (test method-20.m\n        from the branch renamed to method-20b.m to avoid clashes).\n\n        2005-08-23  Stuart Hastings <stuart@apple.com>\n                    Ziemowit Laski  <zlaski@apple.com>\n\n        Radar 4209854\n        * obj-c++.dg/method-23.mm: New.\n        * objc.dg/method-20.m: New.\n\nFrom-SVN: r164694", "tree": {"sha": "222e7d1bcfa9a85e0e42abfaa76ed4e639156e1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/222e7d1bcfa9a85e0e42abfaa76ed4e639156e1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2687787342ebaddbc21e2074d7adb46ff630bc33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2687787342ebaddbc21e2074d7adb46ff630bc33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2687787342ebaddbc21e2074d7adb46ff630bc33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2687787342ebaddbc21e2074d7adb46ff630bc33/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a00ac5336e5e3637cf7efabfa950cf9d4a074017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00ac5336e5e3637cf7efabfa950cf9d4a074017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a00ac5336e5e3637cf7efabfa950cf9d4a074017"}], "stats": {"total": 154, "additions": 135, "deletions": 19}, "files": [{"sha": "65d61b1d0e11a97a9da88627d6e82d526ae5668b", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=2687787342ebaddbc21e2074d7adb46ff630bc33", "patch": "@@ -1,3 +1,16 @@\n+2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tMerge from 'apple/trunk' branch on FSF servers.\n+\n+\t2005-08-23  Stuart Hastings <stuart@apple.com>\n+\t            Ziemowit Laski  <zlaski@apple.com>\n+\n+\tRadar 4209854\n+\t* objc-act.c (objc_decay_parm_type): New function.\n+\t(get_arg_type_list): Decay types for all named arguments.\n+\t(objc_push_parm): Rebuild the PARM_DECL if its type has\n+\tbeen decayed.\t\n+\n 2010-09-28  Nicola Pero  <nicola@nicola.brainstorm.co.uk>\n \n \t* objc-act.c (encode_type): Fixed encoding enums with the next"}, {"sha": "8e6c6838edf44312733adf439d13d99db354769b", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=2687787342ebaddbc21e2074d7adb46ff630bc33", "patch": "@@ -213,6 +213,7 @@ static void really_start_method (tree, tree);\n static void really_start_method (tree, struct c_arg_info *);\n #endif\n static int comp_proto_with_proto (tree, tree, int);\n+static tree objc_decay_parm_type (tree);\n static void objc_push_parm (tree);\n #ifdef OBJCPLUS\n static tree objc_get_parm_info (int);\n@@ -6108,11 +6109,8 @@ get_arg_type_list (tree meth, int context, int superflag)\n     {\n       tree arg_type = TREE_VALUE (TREE_TYPE (akey));\n \n-      /* Decay arrays and functions into pointers.  */\n-      if (TREE_CODE (arg_type) == ARRAY_TYPE)\n-\targ_type = build_pointer_type (TREE_TYPE (arg_type));\n-      else if (TREE_CODE (arg_type) == FUNCTION_TYPE)\n-\targ_type = build_pointer_type (arg_type);\n+      /* Decay argument types for the underlying C function as appropriate.  */\n+      arg_type = objc_decay_parm_type (arg_type);\n \n       chainon (arglist, build_tree_list (NULL_TREE, arg_type));\n     }\n@@ -6124,6 +6122,8 @@ get_arg_type_list (tree meth, int context, int superflag)\n \t{\n \t  tree arg_type = TREE_TYPE (TREE_VALUE (akey));\n \n+\t  arg_type = objc_decay_parm_type (arg_type);\n+\n \t  chainon (arglist, build_tree_list (NULL_TREE, arg_type));\n \t}\n \n@@ -8599,6 +8599,19 @@ encode_field_decl (tree field_decl, int curtype, int format)\n     encode_type (TREE_TYPE (field_decl), curtype, format);\n }\n \n+/* Decay array and function parameters into pointers.  */\n+\n+static tree\n+objc_decay_parm_type (tree type)\n+{\n+  if (TREE_CODE (type) == ARRAY_TYPE || TREE_CODE (type) == FUNCTION_TYPE)\n+    type = build_pointer_type (TREE_CODE (type) == ARRAY_TYPE\n+\t\t\t       ? TREE_TYPE (type)\n+\t\t\t       : type);\n+\n+  return type;\n+}\n+\n static GTY(()) tree objc_parmlist = NULL_TREE;\n \n /* Append PARM to a list of formal parameters of a method, making a necessary\n@@ -8607,7 +8620,7 @@ static GTY(()) tree objc_parmlist = NULL_TREE;\n static void\n objc_push_parm (tree parm)\n {\n-  bool relayout_needed = false;\n+  tree type;\n \n   if (TREE_TYPE (parm) == error_mark_node)\n     {\n@@ -8616,20 +8629,12 @@ objc_push_parm (tree parm)\n     }\n \n   /* Decay arrays and functions into pointers.  */\n-  if (TREE_CODE (TREE_TYPE (parm)) == ARRAY_TYPE)\n-    {\n-      TREE_TYPE (parm) = build_pointer_type (TREE_TYPE (TREE_TYPE (parm)));\n-      relayout_needed = true;\n-    }\n-  else if (TREE_CODE (TREE_TYPE (parm)) == FUNCTION_TYPE)\n-    {\n-      TREE_TYPE (parm) = build_pointer_type (TREE_TYPE (parm));\n-      relayout_needed = true;\n-    }\n+  type = objc_decay_parm_type (TREE_TYPE (parm));\n \n-  if (relayout_needed)\n-    relayout_decl (parm);\n-  \n+  /* If the parameter type has been decayed, a new PARM_DECL needs to be\n+     built as well.  */\n+  if (type != TREE_TYPE (parm))\n+    parm = build_decl (input_location, PARM_DECL, DECL_NAME (parm), type);\n \n   DECL_ARG_TYPE (parm)\n     = lang_hooks.types.type_promotes_to (TREE_TYPE (parm));"}, {"sha": "6e54f4e78eec0a6b8342f901b428a10a0d823e2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2687787342ebaddbc21e2074d7adb46ff630bc33", "patch": "@@ -1,3 +1,15 @@\n+2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tMerge from 'apple/trunk' branch on FSF servers (test method-20.m\n+\tfrom the branch renamed to method-20b.m to avoid clashes).\n+\n+\t2005-08-23  Stuart Hastings <stuart@apple.com>\n+\t            Ziemowit Laski  <zlaski@apple.com>\n+\n+\tRadar 4209854\n+\t* obj-c++.dg/method-23.mm: New.\n+\t* objc.dg/method-20.m: New.\n+\n 2010-09-28  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/tree-ssa/foldconst-5.c: New testcase."}, {"sha": "9b8625a9b174bc57213470651d255d62eec5b5a1", "filename": "gcc/testsuite/obj-c++.dg/method-23.mm", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-23.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-23.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-23.mm?ref=2687787342ebaddbc21e2074d7adb46ff630bc33", "patch": "@@ -0,0 +1,43 @@\n+/* Check if array and function parameters get decayed to pointers as\n+   they should.  */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include \"../objc-obj-c++-shared/Object1.h\"\n+#include <string.h>\n+#include <stdlib.h>\n+\n+static char global_buf[20];\n+\n+char *strcpy_like_callee(const char *s) {\n+  strcpy(global_buf, s);\n+  return global_buf;\n+}  \n+\n+typedef char io_string_t[512];\n+typedef char *(func_type)(const char *);\n+\n+@interface DeviceObject: Object\n+- (void) func:(func_type)func stucPathInIORegistry:(io_string_t)ioRegPath;\n+@end\n+@implementation DeviceObject\n+- (void) func:(func_type)func stucPathInIORegistry:(io_string_t)ioRegPath\n+{\n+    func(ioRegPath);\n+}\n+@end\n+\n+int main (void) {\n+  io_string_t my_string;\n+  DeviceObject *obj = [DeviceObject new];\n+\n+  strcpy (my_string, \"Hello!\");\n+  strcpy (global_buf, \"Good-bye!\");\n+\n+  [obj func:strcpy_like_callee stucPathInIORegistry:my_string];\n+\n+  if (strcmp (global_buf, \"Hello!\"))\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "9b8625a9b174bc57213470651d255d62eec5b5a1", "filename": "gcc/testsuite/objc.dg/method-20b.m", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-20b.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2687787342ebaddbc21e2074d7adb46ff630bc33/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-20b.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-20b.m?ref=2687787342ebaddbc21e2074d7adb46ff630bc33", "patch": "@@ -0,0 +1,43 @@\n+/* Check if array and function parameters get decayed to pointers as\n+   they should.  */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include \"../objc-obj-c++-shared/Object1.h\"\n+#include <string.h>\n+#include <stdlib.h>\n+\n+static char global_buf[20];\n+\n+char *strcpy_like_callee(const char *s) {\n+  strcpy(global_buf, s);\n+  return global_buf;\n+}  \n+\n+typedef char io_string_t[512];\n+typedef char *(func_type)(const char *);\n+\n+@interface DeviceObject: Object\n+- (void) func:(func_type)func stucPathInIORegistry:(io_string_t)ioRegPath;\n+@end\n+@implementation DeviceObject\n+- (void) func:(func_type)func stucPathInIORegistry:(io_string_t)ioRegPath\n+{\n+    func(ioRegPath);\n+}\n+@end\n+\n+int main (void) {\n+  io_string_t my_string;\n+  DeviceObject *obj = [DeviceObject new];\n+\n+  strcpy (my_string, \"Hello!\");\n+  strcpy (global_buf, \"Good-bye!\");\n+\n+  [obj func:strcpy_like_callee stucPathInIORegistry:my_string];\n+\n+  if (strcmp (global_buf, \"Hello!\"))\n+    abort ();\n+\n+  return 0;\n+}"}]}