{"sha": "0563fe8b47eaba2bf82f03c13260d01aa6e026e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU2M2ZlOGI0N2VhYmEyYmY4MmYwM2MxMzI2MGQwMWFhNmUwMjZlOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-18T08:51:44Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-18T08:51:44Z"}, "message": "re PR tree-optimization/22103 (Statement makes a memory store .., complex)\n\n        PR tree-opt/22103\n        * tree-sra.c (generate_copy_inout): Handle SSA_NAME complex\n        destinations.\n\nFrom-SVN: r101150", "tree": {"sha": "950dd3c7ece5ab87c11a5deedbb5b484f7e4cf88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/950dd3c7ece5ab87c11a5deedbb5b484f7e4cf88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0563fe8b47eaba2bf82f03c13260d01aa6e026e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0563fe8b47eaba2bf82f03c13260d01aa6e026e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0563fe8b47eaba2bf82f03c13260d01aa6e026e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0563fe8b47eaba2bf82f03c13260d01aa6e026e8/comments", "author": null, "committer": null, "parents": [{"sha": "5ef55e37b85335a2ec9d30f03055db71198eb3c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef55e37b85335a2ec9d30f03055db71198eb3c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ef55e37b85335a2ec9d30f03055db71198eb3c2"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "dd22a3f1946cba2b426f73c5b1b312cd6d34a614", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0563fe8b47eaba2bf82f03c13260d01aa6e026e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0563fe8b47eaba2bf82f03c13260d01aa6e026e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0563fe8b47eaba2bf82f03c13260d01aa6e026e8", "patch": "@@ -1,3 +1,9 @@\n+2005-06-18  Richard Henderson  <rth@redhat.com>\n+\n+\tPR tree-opt/22103\n+\t* tree-sra.c (generate_copy_inout): Handle SSA_NAME complex\n+\tdestinations.\n+\n 2005-06-17  Richard Henderson  <rth@redhat.com>\n \n         * tree-vect-transform.c (vect_do_peeling_for_loop_bound): Use"}, {"sha": "4462eee45748f7911ef02714a76f4826784644be", "filename": "gcc/testsuite/gcc.c-torture/compile/complex-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0563fe8b47eaba2bf82f03c13260d01aa6e026e8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcomplex-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0563fe8b47eaba2bf82f03c13260d01aa6e026e8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcomplex-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcomplex-2.c?ref=0563fe8b47eaba2bf82f03c13260d01aa6e026e8", "patch": "@@ -0,0 +1,16 @@\n+/* PR 22103 */\n+\n+_Complex float f(void);\n+void *a;\n+\n+_Complex float g(void)\n+{\n+  _Complex float x = f();\n+  __imag__ x = 1.0;\n+  if (__imag__ x != 1.0)\n+    {\n+      a = &x;\n+    }\n+  return x;\n+}\n+"}, {"sha": "e54598a4b3b85c3641a22aedd862a2c8fb2cca28", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0563fe8b47eaba2bf82f03c13260d01aa6e026e8/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0563fe8b47eaba2bf82f03c13260d01aa6e026e8/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=0563fe8b47eaba2bf82f03c13260d01aa6e026e8", "patch": "@@ -1526,7 +1526,22 @@ generate_copy_inout (struct sra_elt *elt, bool copy_out, tree expr,\n   struct sra_elt *c;\n   tree t;\n \n-  if (elt->replacement)\n+  if (!copy_out && TREE_CODE (expr) == SSA_NAME\n+      && TREE_CODE (TREE_TYPE (expr)) == COMPLEX_TYPE)\n+    {\n+      tree r, i;\n+\n+      c = lookup_element (elt, integer_zero_node, NULL, NO_INSERT);\n+      r = c->replacement;\n+      c = lookup_element (elt, integer_one_node, NULL, NO_INSERT);\n+      i = c->replacement;\n+\n+      t = build (COMPLEX_EXPR, elt->type, r, i);\n+      t = build (MODIFY_EXPR, void_type_node, expr, t);\n+      SSA_NAME_DEF_STMT (expr) = t;\n+      append_to_statement_list (t, list_p);\n+    }\n+  else if (elt->replacement)\n     {\n       if (copy_out)\n \tt = build (MODIFY_EXPR, void_type_node, elt->replacement, expr);"}]}