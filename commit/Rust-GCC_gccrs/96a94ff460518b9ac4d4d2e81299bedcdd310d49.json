{"sha": "96a94ff460518b9ac4d4d2e81299bedcdd310d49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhOTRmZjQ2MDUxOGI5YWM0ZDRkMmU4MTI5OWJlZGNkZDMxMGQ0OQ==", "commit": {"author": {"name": "Joel Brobecker", "email": "brobecker@adacore.com", "date": "2007-04-06T06:00:18Z"}, "committer": {"name": "Joel Brobecker", "email": "brobecke@gcc.gnu.org", "date": "2007-04-06T06:00:18Z"}, "message": "* filename_cmp.c (filename_cmp): Improve documentation.\n\nFrom-SVN: r123537", "tree": {"sha": "dc3ee8b7c7e718f2b97183d1d065ef958ec573ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc3ee8b7c7e718f2b97183d1d065ef958ec573ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96a94ff460518b9ac4d4d2e81299bedcdd310d49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a94ff460518b9ac4d4d2e81299bedcdd310d49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96a94ff460518b9ac4d4d2e81299bedcdd310d49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a94ff460518b9ac4d4d2e81299bedcdd310d49/comments", "author": {"login": "brobecke", "id": 11981700, "node_id": "MDQ6VXNlcjExOTgxNzAw", "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brobecke", "html_url": "https://github.com/brobecke", "followers_url": "https://api.github.com/users/brobecke/followers", "following_url": "https://api.github.com/users/brobecke/following{/other_user}", "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}", "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions", "organizations_url": "https://api.github.com/users/brobecke/orgs", "repos_url": "https://api.github.com/users/brobecke/repos", "events_url": "https://api.github.com/users/brobecke/events{/privacy}", "received_events_url": "https://api.github.com/users/brobecke/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2878ea7352a4f5d54fea249d1045c5d7ec857b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2878ea7352a4f5d54fea249d1045c5d7ec857b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2878ea7352a4f5d54fea249d1045c5d7ec857b4c"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "62d3929d22b026b2d52a07e155be85900af078bb", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a94ff460518b9ac4d4d2e81299bedcdd310d49/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a94ff460518b9ac4d4d2e81299bedcdd310d49/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=96a94ff460518b9ac4d4d2e81299bedcdd310d49", "patch": "@@ -1,3 +1,7 @@\n+2007-04-06  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* filename_cmp.c (filename_cmp): Improve documentation.\n+\n 2007-04-02  Andreas Schwab  <schwab@suse.de>\n \n \t* filename_cmp.c: Include \"config.h\"."}, {"sha": "59bb726b90eaa07dbd2690954d6bdbd51e869f7a", "filename": "libiberty/filename_cmp.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a94ff460518b9ac4d4d2e81299bedcdd310d49/libiberty%2Ffilename_cmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a94ff460518b9ac4d4d2e81299bedcdd310d49/libiberty%2Ffilename_cmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffilename_cmp.c?ref=96a94ff460518b9ac4d4d2e81299bedcdd310d49", "patch": "@@ -31,12 +31,13 @@\n \n @deftypefn Extension int filename_cmp (const char *@var{s1}, const char *@var{s2})\n \n-Return zero if the two paths @var{s1} and @var{s2} are equivalent.\n-If not equivalent, the returned value is similar to what strcmp would\n-return.  In other words, it returns a negative value if @var{s1} is less\n-than @var{s2}, or a positive value if @var{s2} is greater than @var{s2}.\n+Return zero if the two file names @var{s1} and @var{s2} are equivalent.\n+If not equivalent, the returned value is similar to what @code{strcmp}\n+would return.  In other words, it returns a negative value if @var{s1}\n+is less than @var{s2}, or a positive value if @var{s2} is greater than\n+@var{s2}.\n \n-This function does not normalize path names. As a result, this function\n+This function does not normalize file names.  As a result, this function\n will treat filenames that are spelled differently as different even in\n the case when the two filenames point to the same underlying file.\n However, it does handle the fact that on DOS-like file systems, forward"}]}