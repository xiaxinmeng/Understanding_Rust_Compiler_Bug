{"sha": "9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU5MmFkNDk3Mzk5NDNjNmM4ZGNmNmFlYzRiNmVkZGY5MDAyMGRhNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T11:07:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T11:07:30Z"}, "message": "[multiple changes]\n\n2013-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Variant_Part): Expand statically\n\tpredicated subtype which appears in Discrete_Choices list.\n\t* exp_ch5.adb (Expand_N_Case_Statement): Expand statically\n\tpredicated subtype which appears in Discrete_Choices list of\n\tcase statement alternative.\n\t* exp_util.ads, exp_util.adb (Expand_Static_Predicates_In_Choices): New\n\tprocedure.\n\t* sem_case.adb: Minor reformatting (Analyze_Choices): Don't\n\texpand out Discrete_Choices that are names of subtypes with\n\tstatic predicates. This is now done in the analyzer so that the\n\t-gnatct tree is properly formed for ASIS.\n\t* sem_case.ads (Generic_Choices_Processing): Does not apply\n\tto aggregates any more, so change doc accordingly, and remove\n\tunneeded Get_Choices argument.\n\t* sem_ch3.adb (Analyze_Variant_Part): Remove no\n\tlonger used Get_Choices argument in instantiation of\n\tGeneric_Choices_Processing.\n\t* sem_ch4.adb (Analyze_Case_Expression): Remove no\n\tlonger used Get_Choices argument in instantiation of\n\tGeneric_Choices_Processing.\n\t* sem_ch5.adb (Analyze_Case_Statement): Remove no\n\tlonger used Get_Choices argument in instantiation of\n\tGeneric_Choices_Processing.\n\t* sinfo.ads: For N_Variant_Part, and N_Case_Statement_Alternative,\n\tdocument that choices that are names of statically predicated\n\tsubtypes are expanded in the code generation tree passed to the\n\tback end, but not in the ASIS tree generated for -gnatct.\n\n2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch7.adb: Revert previous change.\n\n2013-10-10  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): In the case where\n\tthe Storage_Pool aspect is specified by an aspect clause and a\n\trenaming is used to capture the evaluation of the pool name,\n\tinsert the renaming in front of the aspect's associated entity\n\tdeclaration rather than in front of the corresponding attribute\n\tdefinition (which hasn't been appended to the declaration\n\tlist yet).\n\n2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Is_Interface_Conformant): The controlling type\n\tof the interface operation is obtained from the ultimate alias\n\tof the interface primitive parameter, because that may be in\n\tfact an implicit inherited operation whose signature involves\n\tthe type extension and not the desired interface.\n\n2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch13.adb (Aspect_Specifications_Present): In Ada 2012,\n\trecognize an aspect specification with a misspelled name if it\n\tis followed by a a comma or semicolon.\n\n2013-10-10  Vadim Godunko  <godunko@adacore.com>\n\n\t* s-atocou.adb, s-atocou.ads, s-atocou-x86.adb, s-atocou-builtin.adb:\n\tFix copyright notice.\n\n2013-10-10  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref-spark_specific.adb (Enclosing_Subprogram_Or_Package): Get\n\tenclosing subprogram for precondition/postcondition/contract cases.\n\nFrom-SVN: r203350", "tree": {"sha": "66741dec73e462fb9efa97c849b3b2901f4d669e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66741dec73e462fb9efa97c849b3b2901f4d669e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/comments", "author": null, "committer": null, "parents": [{"sha": "11d59a86830fe41e96a652762c210649bdb549a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d59a86830fe41e96a652762c210649bdb549a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11d59a86830fe41e96a652762c210649bdb549a2"}], "stats": {"total": 377, "additions": 275, "deletions": 102}, "files": [{"sha": "fa6cf6b7121a33ae2fd9401fe2d5a167b6d4b008", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -1,3 +1,71 @@\n+2013-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Variant_Part): Expand statically\n+\tpredicated subtype which appears in Discrete_Choices list.\n+\t* exp_ch5.adb (Expand_N_Case_Statement): Expand statically\n+\tpredicated subtype which appears in Discrete_Choices list of\n+\tcase statement alternative.\n+\t* exp_util.ads, exp_util.adb (Expand_Static_Predicates_In_Choices): New\n+\tprocedure.\n+\t* sem_case.adb: Minor reformatting (Analyze_Choices): Don't\n+\texpand out Discrete_Choices that are names of subtypes with\n+\tstatic predicates. This is now done in the analyzer so that the\n+\t-gnatct tree is properly formed for ASIS.\n+\t* sem_case.ads (Generic_Choices_Processing): Does not apply\n+\tto aggregates any more, so change doc accordingly, and remove\n+\tunneeded Get_Choices argument.\n+\t* sem_ch3.adb (Analyze_Variant_Part): Remove no\n+\tlonger used Get_Choices argument in instantiation of\n+\tGeneric_Choices_Processing.\n+\t* sem_ch4.adb (Analyze_Case_Expression): Remove no\n+\tlonger used Get_Choices argument in instantiation of\n+\tGeneric_Choices_Processing.\n+\t* sem_ch5.adb (Analyze_Case_Statement): Remove no\n+\tlonger used Get_Choices argument in instantiation of\n+\tGeneric_Choices_Processing.\n+\t* sinfo.ads: For N_Variant_Part, and N_Case_Statement_Alternative,\n+\tdocument that choices that are names of statically predicated\n+\tsubtypes are expanded in the code generation tree passed to the\n+\tback end, but not in the ASIS tree generated for -gnatct.\n+\n+2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch7.adb: Revert previous change.\n+\n+2013-10-10  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): In the case where\n+\tthe Storage_Pool aspect is specified by an aspect clause and a\n+\trenaming is used to capture the evaluation of the pool name,\n+\tinsert the renaming in front of the aspect's associated entity\n+\tdeclaration rather than in front of the corresponding attribute\n+\tdefinition (which hasn't been appended to the declaration\n+\tlist yet).\n+\n+2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Is_Interface_Conformant): The controlling type\n+\tof the interface operation is obtained from the ultimate alias\n+\tof the interface primitive parameter, because that may be in\n+\tfact an implicit inherited operation whose signature involves\n+\tthe type extension and not the desired interface.\n+\n+2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch13.adb (Aspect_Specifications_Present): In Ada 2012,\n+\trecognize an aspect specification with a misspelled name if it\n+\tis followed by a a comma or semicolon.\n+\n+2013-10-10  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* s-atocou.adb, s-atocou.ads, s-atocou-x86.adb, s-atocou-builtin.adb:\n+\tFix copyright notice.\n+\n+2013-10-10  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref-spark_specific.adb (Enclosing_Subprogram_Or_Package): Get\n+\tenclosing subprogram for precondition/postcondition/contract cases.\n+\n 2013-10-10  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Minor fix."}, {"sha": "bc4557dcbdafb4ab013ccdd02323c543ed944187", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -5846,23 +5846,35 @@ package body Exp_Ch3 is\n    -- Expand_N_Variant_Part --\n    ---------------------------\n \n-   --  If the last variant does not contain the Others choice, replace it with\n-   --  an N_Others_Choice node since Gigi always wants an Others. Note that we\n-   --  do not bother to call Analyze on the modified variant part, since its\n-   --  only effect would be to compute the Others_Discrete_Choices node\n-   --  laboriously, and of course we already know the list of choices that\n-   --  corresponds to the others choice (it's the list we are replacing!)\n-\n    procedure Expand_N_Variant_Part (N : Node_Id) is\n       Last_Var    : constant Node_Id := Last_Non_Pragma (Variants (N));\n       Others_Node : Node_Id;\n+      Variant     : Node_Id;\n+\n    begin\n+      --  If the last variant does not contain the Others choice, replace it\n+      --  with an N_Others_Choice node since Gigi always wants an Others. Note\n+      --  that we do not bother to call Analyze on the modified variant part,\n+      --  since its only effect would be to compute the Others_Discrete_Choices\n+      --  node laboriously, and of course we already know the list of choices\n+      --  corresponding to the others choice (it's the list we're replacing!)\n+\n       if Nkind (First (Discrete_Choices (Last_Var))) /= N_Others_Choice then\n          Others_Node := Make_Others_Choice (Sloc (Last_Var));\n          Set_Others_Discrete_Choices\n            (Others_Node, Discrete_Choices (Last_Var));\n          Set_Discrete_Choices (Last_Var, New_List (Others_Node));\n       end if;\n+\n+      --  Deal with any static predicates in the variant choices. Note that we\n+      --  don't have to look at the last variant, since we know it is an others\n+      --  choice, because we just rewrote it that way if necessary.\n+\n+      Variant := First_Non_Pragma (Variants (N));\n+      while Variant /= Last_Var loop\n+         Expand_Static_Predicates_In_Choices (Variant);\n+         Next_Non_Pragma (Variant);\n+      end loop;\n    end Expand_N_Variant_Part;\n \n    ---------------------------------"}, {"sha": "b8b40380070e3f00537a7c5330fcf2609b1813ee", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -2537,7 +2537,11 @@ package body Exp_Ch5 is\n          --  if statement, since this can result in subsequent optimizations.\n          --  This helps not only with case statements in the source of a\n          --  simple form, but also with generated code (discriminant check\n-         --  functions in particular)\n+         --  functions in particular).\n+\n+         --  Note: it is OK to do this before expanding out choices for any\n+         --  static predicates, since the if statement processing will handle\n+         --  the static predicate case fine.\n \n          elsif Len = 2 then\n             Chlist := Discrete_Choices (First (Alternatives (N)));\n@@ -2617,12 +2621,14 @@ package body Exp_Ch5 is\n             Set_Discrete_Choices (Last_Alt, New_List (Others_Node));\n          end if;\n \n-         Alt := First (Alternatives (N));\n-         while Present (Alt)\n-           and then Nkind (Alt) = N_Case_Statement_Alternative\n-         loop\n+         --  Deal with possible declarations of controlled objects, and also\n+         --  with rewriting choice sequences for static predicate references.\n+\n+         Alt := First_Non_Pragma (Alternatives (N));\n+         while Present (Alt) loop\n             Process_Statements_For_Controlled_Objects (Alt);\n-            Next (Alt);\n+            Expand_Static_Predicates_In_Choices (Alt);\n+            Next_Non_Pragma (Alt);\n          end loop;\n       end;\n    end Expand_N_Case_Statement;"}, {"sha": "a958b9f1c8440e26904738cf6fd2e34eb6c554e2", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -1946,6 +1946,69 @@ package body Exp_Util is\n       end if;\n    end Evolve_Or_Else;\n \n+   -----------------------------------------\n+   -- Expand_Static_Predicates_In_Choices --\n+   -----------------------------------------\n+\n+   procedure Expand_Static_Predicates_In_Choices (N : Node_Id) is\n+      pragma Assert (Nkind_In (N, N_Case_Statement_Alternative, N_Variant));\n+\n+      Choices : constant List_Id := Discrete_Choices (N);\n+\n+      Choice : Node_Id;\n+      Next_C : Node_Id;\n+      P      : Node_Id;\n+      C      : Node_Id;\n+\n+   begin\n+      Choice := First (Choices);\n+      while Present (Choice) loop\n+         Next_C := Next (Choice);\n+\n+         --  Check for name of subtype with static predicate\n+\n+         if Is_Entity_Name (Choice)\n+           and then Is_Type (Entity (Choice))\n+           and then Has_Predicates (Entity (Choice))\n+         then\n+            --  Loop through entries in predicate list, converting to choices\n+            --  and inserting in the list before the current choice. Note that\n+            --  if the list is empty, corresponding to a False predicate, then\n+            --  no choices are inserted.\n+\n+            P := First (Static_Predicate (Entity (Choice)));\n+            while Present (P) loop\n+\n+               --  If low bound and high bounds are equal, copy simple choice\n+\n+               if Expr_Value (Low_Bound (P)) = Expr_Value (High_Bound (P)) then\n+                  C := New_Copy (Low_Bound (P));\n+\n+               --  Otherwise copy a range\n+\n+               else\n+                  C := New_Copy (P);\n+               end if;\n+\n+               --  Change Sloc to referencing choice (rather than the Sloc of\n+               --  the predicate declarationo element itself).\n+\n+               Set_Sloc (C, Sloc (Choice));\n+               Insert_Before (Choice, C);\n+               Next (P);\n+            end loop;\n+\n+            --  Delete the predicated entry\n+\n+            Remove (Choice);\n+         end if;\n+\n+         --  Move to next choice to check\n+\n+         Choice := Next_C;\n+      end loop;\n+   end Expand_Static_Predicates_In_Choices;\n+\n    ------------------------------\n    -- Expand_Subtype_From_Expr --\n    ------------------------------"}, {"sha": "7ca7c0132a8d1107377b833a99c60fdf6469513d", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -377,6 +377,12 @@ package Exp_Util is\n    --  indicating that no checks were required). The Sloc field of the\n    --  constructed N_Or_Else node is copied from Cond1.\n \n+   procedure Expand_Static_Predicates_In_Choices (N : Node_Id);\n+   --  N is either a case alternative or a variant. The Discrete_Choices field\n+   --  of N points to a list of choices. If any of these choices is the name\n+   --  of a (statically) predicated subtype, then it is rewritten as the series\n+   --  of choices that correspond to the values allowed for the subtype.\n+\n    procedure Expand_Subtype_From_Expr\n      (N             : Node_Id;\n       Unc_Type      : Entity_Id;"}, {"sha": "e5a007b2105f45e4809149fff6493155ccc3bc51", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -1020,17 +1020,28 @@ package body SPARK_Specific is\n                Result := Defining_Unit_Name (Specification (Result));\n                exit;\n \n-            --  The enclosing subprogram for a pre- or postconditions should be\n-            --  the subprogram to which the pragma is attached. This is not\n-            --  always the case in the AST, as the pragma may be declared after\n-            --  the declaration of the subprogram. Return Empty in this case.\n-\n             when N_Pragma =>\n+\n+               --  The enclosing subprogram for a precondition, a\n+               --  postcondition, or a contract case should be the subprogram\n+               --  to which the pragma is attached, which can be found by\n+               --  following previous elements in the list to which the\n+               --  pragma belongs.\n+\n                if Get_Pragma_Id (Result) = Pragma_Precondition\n                     or else\n                   Get_Pragma_Id (Result) = Pragma_Postcondition\n+                    or else\n+                  Get_Pragma_Id (Result) = Pragma_Contract_Cases\n                then\n-                  return Empty;\n+                  if Is_List_Member (Result)\n+                    and then Present (Prev (Result))\n+                  then\n+                     Result := Prev (Result);\n+                  else\n+                     Result := Parent (Result);\n+                  end if;\n+\n                else\n                   Result := Parent (Result);\n                end if;"}, {"sha": "34d2f8f437960076e5dca54de323baf9404a25c1", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -78,15 +78,19 @@ package body Ch13 is\n       --  are in Ada 2012 mode, Strict is False, and we consider that we have\n       --  an aspect specification if the identifier is an aspect name (even if\n       --  not followed by =>) or the identifier is not an aspect name but is\n-      --  followed by =>. P_Aspect_Specifications will generate messages if the\n-      --  aspect specification is ill-formed.\n+      --  followed by =>, by a comma, or by a semicolon. The last two cases\n+      --  correspond to (misspelled) Boolean aspects with a defaulted value of\n+      --  True. P_Aspect_Specifications will generate messages if the aspect\n+      --  specification is ill-formed.\n \n       elsif not Strict then\n          if Get_Aspect_Id (Token_Name) /= No_Aspect then\n             Result := True;\n          else\n             Scan; -- past identifier\n-            Result := Token = Tok_Arrow;\n+            Result := Token = Tok_Arrow\n+                         or else Token = Tok_Comma\n+                         or else Token = Tok_Semicolon;\n          end if;\n \n       --  If earlier than Ada 2012, check for valid aspect identifier (possibly"}, {"sha": "a8ead628abacfd566bfa7da88cf7865ccb996fe3", "filename": "gcc/ada/s-atocou-builtin.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fs-atocou-builtin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fs-atocou-builtin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou-builtin.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2011-2013, AdaCore                      --\n+--          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "b85b40274faf4af290c41ee1c161cc26d3006a47", "filename": "gcc/ada/s-atocou-x86.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fs-atocou-x86.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fs-atocou-x86.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou-x86.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2011-2013, AdaCore                      --\n+--          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "51cc79ba59d066402c4b1627413b895ce58b1e76", "filename": "gcc/ada/s-atocou.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fs-atocou.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fs-atocou.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2011-2013, AdaCore                      --\n+--          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "55d6bf0ece83772f4993aa05a1efe8b8a5851005", "filename": "gcc/ada/s-atocou.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fs-atocou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fs-atocou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou.ads?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                    Copyright (C) 2011-2013, AdaCore                      --\n+--          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "27a5c67d09b7d8381207e184b5501ddedf56f49a", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 26, "deletions": 31, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -57,9 +57,9 @@ package body Sem_Case is\n    --  to the choice node itself.\n \n    type Choice_Table_Type is array (Nat range <>) of Choice_Bounds;\n-   --  Table type used to sort the choices present in a case statement, array\n-   --  aggregate or record variant. The actual entries are stored in 1 .. Last,\n-   --  but we have a 0 entry for convenience in sorting.\n+   --  Table type used to sort the choices present in a case statement or\n+   --  record variant. The actual entries are stored in 1 .. Last, but we\n+   --  have a 0 entry for use in sorting.\n \n    -----------------------\n    -- Local Subprograms --\n@@ -145,8 +145,7 @@ package body Sem_Case is\n \n       procedure Missing_Choices (Pred : Node_Id; Prev_Hi : Uint);\n       --  Emit an error message for each non-covered static predicate set.\n-      --  Prev_Hi denotes the upper bound of the last choice that covered a\n-      --  set.\n+      --  Prev_Hi denotes the upper bound of the last choice covering a set.\n \n       procedure Move_Choice (From : Natural; To : Natural);\n       --  Move routine for sorting the Choice_Table\n@@ -263,7 +262,6 @@ package body Sem_Case is\n          else\n             Illegal_Range (Loc, Choice_Lo, Choice_Hi);\n             Error := True;\n-\n             return;\n          end if;\n \n@@ -443,21 +441,21 @@ package body Sem_Case is\n \n             if Nkind (Case_Node) = N_Variant_Part then\n                Error_Msg_NE\n-                 (\"bounds of & are not static,\" &\n-                     \" alternatives must cover base type\", Expr, Expr);\n+                 (\"bounds of & are not static, \"\n+                  & \"alternatives must cover base type!\", Expr, Expr);\n \n             --  If this is a case statement, the expression may be non-static\n             --  or else the subtype may be at fault.\n \n             elsif Is_Entity_Name (Expr) then\n                Error_Msg_NE\n-                 (\"bounds of & are not static,\" &\n-                    \" alternatives must cover base type\", Expr, Expr);\n+                 (\"bounds of & are not static, \"\n+                  & \"alternatives must cover base type!\", Expr, Expr);\n \n             else\n                Error_Msg_N\n-                 (\"subtype of expression is not static,\"\n-                  & \" alternatives must cover base type!\", Expr);\n+                 (\"subtype of expression is not static, \"\n+                  & \"alternatives must cover base type!\", Expr);\n             end if;\n \n          --  Otherwise the expression is not static, even if the bounds of the\n@@ -1220,10 +1218,13 @@ package body Sem_Case is\n             if Nkind (Alt) = N_Pragma then\n                Analyze (Alt);\n \n-            --  Otherwise check each choice against its base type\n+            --  Otherwise we have an alternative. In most cases the semantic\n+            --  processing leaves the list of choices unchanged\n+\n+            --  Check each choice against its base type\n \n             else\n-               Choice := First (Get_Choices (Alt));\n+               Choice := First (Discrete_Choices (Alt));\n                while Present (Choice) loop\n                   Delete_Choice := False;\n                   Analyze (Choice);\n@@ -1260,33 +1261,29 @@ package body Sem_Case is\n                            then\n                               Bad_Predicated_Subtype_Use\n                                 (\"cannot use subtype& with non-static \"\n-                                 & \"predicate as case alternative\", Choice, E,\n-                                 Suggest_Static => True);\n+                                 & \"predicate as case alternative\",\n+                                 Choice, E, Suggest_Static => True);\n \n-                              --  Static predicate case\n+                           --  Static predicate case\n \n                            else\n                               declare\n-                                 Copy : constant List_Id := Empty_List;\n-                                 P    : Node_Id;\n-                                 C    : Node_Id;\n+                                 P : Node_Id;\n+                                 C : Node_Id;\n \n                               begin\n                                  --  Loop through entries in predicate list,\n-                                 --  converting to choices. Note that if the\n+                                 --  checking each entry. Note that if the\n                                  --  list is empty, corresponding to a False\n-                                 --  predicate, then no choices are inserted.\n+                                 --  predicate, then no choices are checked.\n \n                                  P := First (Static_Predicate (E));\n                                  while Present (P) loop\n                                     C := New_Copy (P);\n                                     Set_Sloc (C, Sloc (Choice));\n-                                    Append_To (Copy, C);\n+                                    Check (C, Low_Bound (C), High_Bound (C));\n                                     Next (P);\n                                  end loop;\n-\n-                                 Insert_List_After (Choice, Copy);\n-                                 Delete_Choice := True;\n                               end;\n                            end if;\n \n@@ -1306,8 +1303,6 @@ package body Sem_Case is\n                      Resolve_Discrete_Subtype_Indication\n                        (Choice, Expected_Type);\n \n-                     --  Here for other than predicated subtype case\n-\n                      if Etype (Choice) /= Any_Type then\n                         declare\n                            C : constant Node_Id := Constraint (Choice);\n@@ -1351,9 +1346,9 @@ package body Sem_Case is\n                   --  alternative and as its only choice.\n \n                   elsif Kind = N_Others_Choice then\n-                     if not (Choice = First (Get_Choices (Alt))\n-                             and then Choice = Last (Get_Choices (Alt))\n-                             and then Alt = Last (Get_Alternatives (N)))\n+                     if not (Choice = First (Discrete_Choices (Alt))\n+                              and then Choice = Last (Discrete_Choices (Alt))\n+                              and then Alt = Last (Get_Alternatives (N)))\n                      then\n                         Error_Msg_N\n                           (\"the choice OTHERS must appear alone and last\","}, {"sha": "d788afe19341fd8c48841ab944f74a413e3cab73", "filename": "gcc/ada/sem_case.ads", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_case.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_case.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.ads?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,28 +40,22 @@ package Sem_Case is\n \n    generic\n       with function Get_Alternatives (N : Node_Id) return List_Id;\n-      --  Function needed to get to the actual list of case statement\n-      --  alternatives, or array aggregate component associations or\n-      --  record variants from which we can then access the actual lists\n-      --  of discrete choices. N is the node for the original construct\n-      --  i.e. a case statement, an array aggregate or a record variant.\n-\n-      with function Get_Choices (A : Node_Id) return List_Id;\n-      --  Given a case statement alternative, array aggregate component\n-      --  association or record variant A we need different access functions\n-      --  to get to the actual list of discrete choices.\n+      --  Function used to get the list of case statement alternatives or\n+      --  record variants, from which we can then access the actual lists of\n+      --  discrete choices. N is the node for the original construct (case\n+      --  statement or a record variant).\n \n       with procedure Process_Empty_Choice (Choice : Node_Id);\n-      --  Processing to carry out for an empty Choice\n+      --  Processing to carry out for an empty Choice. Set to No_Op (declared\n+      --  above) if no such processing is required.\n \n       with procedure Process_Non_Static_Choice (Choice : Node_Id);\n       --  Processing to carry out for a non static Choice\n \n       with procedure Process_Associated_Node (A : Node_Id);\n-      --  Associated with each case alternative, aggregate component\n-      --  association or record variant A there is a node or list of nodes\n-      --  that need semantic processing. This routine implements that\n-      --  processing.\n+      --  Associated with each case alternative or record variant A there is\n+      --  a node or list of nodes that need semantic processing. This routine\n+      --  implements that processing.\n \n    package Generic_Choices_Processing is\n \n@@ -70,12 +64,12 @@ package Sem_Case is\n          Subtyp         : Entity_Id;\n          Raises_CE      : out Boolean;\n          Others_Present : out Boolean);\n-      --  From a case expression, case statement, array aggregate or record\n-      --  variant N, this routine analyzes the corresponding list of discrete\n-      --  choices. Subtyp is the subtype of the discrete choices. The type\n-      --  against which the discrete choices must be resolved is its base type.\n+      --  From a case expression, case statement, or record variant N, this\n+      --  routine analyzes the corresponding list of discrete choices. Subtyp\n+      --  is the subtype of the discrete choices. The type against which the\n+      --  discrete choices must be resolved is its base type.\n       --\n-      --  In one of the bounds of a discrete choice raises a constraint\n+      --  If one of the bounds of a discrete choice raises a constraint\n       --  error the flag Raise_CE is set.\n       --\n       --  Finally Others_Present is set to True if an Others choice is present"}, {"sha": "bc2be8b8eea03ef4a61915b80228259b9ec21c0f", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -4381,7 +4381,17 @@ package body Sem_Ch13 is\n                               Name                => Expr);\n \n                begin\n-                  Insert_Before (N, Rnode);\n+                  --  If the attribute definition clause comes from an aspect\n+                  --  clause, then insert the renaming before the associated\n+                  --  entity's declaration, since the attribute clause has\n+                  --  not yet been appended to the declaration list.\n+\n+                  if From_Aspect_Specification (N) then\n+                     Insert_Before (Parent (Entity (N)), Rnode);\n+                  else\n+                     Insert_Before (N, Rnode);\n+                  end if;\n+\n                   Analyze (Rnode);\n                   Set_Associated_Storage_Pool (U_Ent, Pool);\n                end;"}, {"sha": "d230b1139dfdf60fbe52653d0f1d345df88660ce", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -4602,7 +4602,6 @@ package body Sem_Ch3 is\n       package Variant_Choices_Processing is new\n         Generic_Choices_Processing\n           (Get_Alternatives          => Variants,\n-           Get_Choices               => Discrete_Choices,\n            Process_Empty_Choice      => No_OP,\n            Process_Non_Static_Choice => Non_Static_Choice_Error,\n            Process_Associated_Node   => Process_Declarations);"}, {"sha": "0bd5685aa4506c79c2ae8c10328f4eba15ffed67", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -1318,7 +1318,6 @@ package body Sem_Ch4 is\n       package Case_Choices_Processing is new\n         Generic_Choices_Processing\n           (Get_Alternatives          => Alternatives,\n-           Get_Choices               => Discrete_Choices,\n            Process_Empty_Choice      => No_OP,\n            Process_Non_Static_Choice => Non_Static_Choice_Error,\n            Process_Associated_Node   => No_OP);\n@@ -3962,8 +3961,8 @@ package body Sem_Ch4 is\n             Next (Param);\n          end loop;\n \n-         --  One of the specs has additional formals, there is no match,\n-         --  unless this may be an indexing of a parameterless call.\n+         --  One of the specs has additional formals; there is no match, unless\n+         --  this may be an indexing of a parameterless call.\n \n          --  Note that when expansion is disabled, the corresponding record\n          --  type of synchronized types is not constructed, so that there is\n@@ -3977,7 +3976,6 @@ package body Sem_Ch4 is\n               and then not Expander_Active\n             then\n                return True;\n-\n             else\n                return False;\n             end if;"}, {"sha": "81d2eecd56e8fbc652bf52251a7202c2a851e446", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -1045,7 +1045,6 @@ package body Sem_Ch5 is\n       package Case_Choices_Processing is new\n         Generic_Choices_Processing\n           (Get_Alternatives          => Alternatives,\n-           Get_Choices               => Discrete_Choices,\n            Process_Empty_Choice      => No_OP,\n            Process_Non_Static_Choice => Non_Static_Choice_Error,\n            Process_Associated_Node   => Process_Statements);"}, {"sha": "079aed850e47df81a490c32657e69a55d85ba82e", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -9100,7 +9100,12 @@ package body Sem_Ch6 is\n       Iface_Prim  : Entity_Id;\n       Prim        : Entity_Id) return Boolean\n    is\n-      Iface : constant Entity_Id := Find_Dispatching_Type (Iface_Prim);\n+      --  The operation may in fact be an inherited (implicit) operation\n+      --  rather than the original interface primitive, so retrieve the\n+      --  ultimate ancestor.\n+\n+      Iface : constant Entity_Id :=\n+                Find_Dispatching_Type (Ultimate_Alias (Iface_Prim));\n       Typ   : constant Entity_Id := Find_Dispatching_Type (Prim);\n \n       function Controlling_Formal (Prim : Entity_Id) return Entity_Id;\n@@ -9185,7 +9190,7 @@ package body Sem_Ch6 is\n             return False;\n          else\n             return\n-              Type_Conformant (Prim, Iface_Prim,\n+              Type_Conformant (Prim, Ultimate_Alias (Iface_Prim),\n                 Skip_Controlling_Formals => True);\n          end if;\n "}, {"sha": "516683004b1d09fd4496d06cb4b9f99781dd0d8c", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -1170,28 +1170,19 @@ package body Sem_Ch7 is\n                --  If one of the non-generic parents is itself on the scope\n                --  stack, do not install its private declarations: they are\n                --  installed in due time when the private part of that parent\n-               --  is analyzed.\n+               --  is analyzed. This is delicate ???\n \n                else\n                   while Present (Inst_Par)\n                     and then Inst_Par /= Standard_Standard\n                     and then (not In_Open_Scopes (Inst_Par)\n                                or else not In_Private_Part (Inst_Par))\n                   loop\n-                     if Nkind (Inst_Node) = N_Formal_Package_Declaration\n-                       or else\n-                         not Is_Ancestor_Package\n-                               (Inst_Par, Cunit_Entity (Current_Sem_Unit))\n-                     then\n-                        Install_Private_Declarations (Inst_Par);\n-                        Set_Use (Private_Declarations\n-                                   (Specification\n-                                      (Unit_Declaration_Node (Inst_Par))));\n-                        Inst_Par := Scope (Inst_Par);\n-\n-                     else\n-                        exit;\n-                     end if;\n+                     Install_Private_Declarations (Inst_Par);\n+                     Set_Use (Private_Declarations\n+                                (Specification\n+                                   (Unit_Declaration_Node (Inst_Par))));\n+                     Inst_Par := Scope (Inst_Par);\n                   end loop;\n \n                   exit;"}, {"sha": "e3508bab252c6dedff67fd78be7c141a66383f58", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e92ad49739943c6c8dcf6aec4b6eddf90020da4/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=9e92ad49739943c6c8dcf6aec4b6eddf90020da4", "patch": "@@ -3084,6 +3084,12 @@ package Sinfo is\n       --  Present_Expr (Uint3-Sem)\n       --  Dcheck_Function (Node5-Sem)\n \n+      --  Note: in the list of Discrete_Choices, the tree passed to the back\n+      --  end does not have choice entries corresponding to names of statically\n+      --  predicated subtypes. Such entries are always expanded out to the list\n+      --  of equivalent values or ranges. The ASIS tree generated in -gnatct\n+      --  mode does not have this expansion, and has the original choices.\n+\n       ---------------------------------\n       -- 3.8.1  Discrete Choice List --\n       ---------------------------------\n@@ -4382,6 +4388,12 @@ package Sinfo is\n       --  Discrete_Choices (List4)\n       --  Statements (List3)\n \n+      --  Note: in the list of Discrete_Choices, the tree passed to the back\n+      --  end does not have choice entries corresponding to names of statically\n+      --  predicated subtypes. Such entries are always expanded out to the list\n+      --  of equivalent values or ranges. The ASIS tree generated in -gnatct\n+      --  mode does not have this expansion, and has the original choices.\n+\n       -------------------------\n       -- 5.5  Loop Statement --\n       -------------------------"}]}