{"sha": "c53bb876f4ca0c7a622f0909772f5b6f23ff5de4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUzYmI4NzZmNGNhMGM3YTYyMmYwOTA5NzcyZjViNmYyM2ZmNWRlNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-08-13T16:21:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-08-13T16:21:51Z"}, "message": "Improve documentation of target hooks for libc functions\n\n\t* target.def (libc_has_function, libc_has_fast_function): Improve\n\tdocumentation strings.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r274387", "tree": {"sha": "f274a3ae0b2d5f19a9858be9b8dc2794778bdc2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f274a3ae0b2d5f19a9858be9b8dc2794778bdc2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65a3896a182c3518f3ba7b5cecaf7d1ca7badf0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65a3896a182c3518f3ba7b5cecaf7d1ca7badf0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65a3896a182c3518f3ba7b5cecaf7d1ca7badf0c"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "5e699b10569c11024ad0d6b191297ef970c08bab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c53bb876f4ca0c7a622f0909772f5b6f23ff5de4", "patch": "@@ -1,3 +1,9 @@\n+2019-08-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* target.def (libc_has_function, libc_has_fast_function): Improve\n+\tdocumentation strings.\n+\t* doc/tm.texi: Regenerate.\n+\n 2019-08-13  Caroline Tice  <cmtice@google.com>\n \n \tPR other/91396"}, {"sha": "89990cbc871bf2250c19fe9aebbcd89f1f06c36b", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=c53bb876f4ca0c7a622f0909772f5b6f23ff5de4", "patch": "@@ -5591,12 +5591,12 @@ macro, a reasonable default is used.\n \n @deftypefn {Target Hook} bool TARGET_LIBC_HAS_FUNCTION (enum function_class @var{fn_class})\n This hook determines whether a function from a class of functions\n-@var{fn_class} is present at the runtime.\n+@var{fn_class} is present in the target C library.\n @end deftypefn\n \n @deftypefn {Target Hook} bool TARGET_LIBC_HAS_FAST_FUNCTION (int @var{fcode})\n This hook determines whether a function from a class of functions\n-@var{fn_class} has a fast implementation.\n+@code{(enum function_class)}@var{fcode} has a fast implementation.\n @end deftypefn\n \n @defmac NEXT_OBJC_RUNTIME"}, {"sha": "73334e0e8fc038a3b4d70bcaf81872c44df3269c", "filename": "gcc/target.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53bb876f4ca0c7a622f0909772f5b6f23ff5de4/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=c53bb876f4ca0c7a622f0909772f5b6f23ff5de4", "patch": "@@ -2545,14 +2545,14 @@ set via @code{__attribute__}.\",\n DEFHOOK\n (libc_has_function,\n  \"This hook determines whether a function from a class of functions\\n\\\n-@var{fn_class} is present at the runtime.\",\n+@var{fn_class} is present in the target C library.\",\n  bool, (enum function_class fn_class),\n  default_libc_has_function)\n \n DEFHOOK\n (libc_has_fast_function,\n  \"This hook determines whether a function from a class of functions\\n\\\n-@var{fn_class} has a fast implementation.\",\n+@code{(enum function_class)}@var{fcode} has a fast implementation.\",\n  bool, (int fcode),\n  default_libc_has_fast_function)\n "}]}