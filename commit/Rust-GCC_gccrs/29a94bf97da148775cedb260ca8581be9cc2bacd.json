{"sha": "29a94bf97da148775cedb260ca8581be9cc2bacd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlhOTRiZjk3ZGExNDg3NzVjZWRiMjYwY2E4NTgxYmU5Y2MyYmFjZA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-09-29T17:17:09Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-09-29T17:17:09Z"}, "message": "re PR fortran/65677 (Incomplete assignment on deferred-length character variable)\n\n2018-09-29  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/65667\n\t* trans-expr.c (gfc_trans_assignment_1): If there is dependency\n\tfix the rse stringlength.\n\n2018-09-29  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/65667\n\t* gfortran.dg/dependency_52.f90 : New test.\n\nFrom-SVN: r264715", "tree": {"sha": "3db1412bb47145048bd7de1b5f99b5fe113c35a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3db1412bb47145048bd7de1b5f99b5fe113c35a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29a94bf97da148775cedb260ca8581be9cc2bacd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a94bf97da148775cedb260ca8581be9cc2bacd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a94bf97da148775cedb260ca8581be9cc2bacd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a94bf97da148775cedb260ca8581be9cc2bacd/comments", "author": null, "committer": null, "parents": [{"sha": "7d583f4259a56c9054c28e883c375f9c57f8755d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d583f4259a56c9054c28e883c375f9c57f8755d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d583f4259a56c9054c28e883c375f9c57f8755d"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "ffada92df3149171981e93a5d21e660aefe8fc14", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a94bf97da148775cedb260ca8581be9cc2bacd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a94bf97da148775cedb260ca8581be9cc2bacd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=29a94bf97da148775cedb260ca8581be9cc2bacd", "patch": "@@ -1,3 +1,9 @@\n+2018-09-29  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/65667\n+\t* trans-expr.c (gfc_trans_assignment_1): If there is dependency\n+\tfix the rse stringlength.\n+\n 2018-09-25  Martin Liska  <mliska@suse.cz>\n \n \tPR fortran/87394"}, {"sha": "9824848019d36a2cf4f52b7f43de919c8263b924", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a94bf97da148775cedb260ca8581be9cc2bacd/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a94bf97da148775cedb260ca8581be9cc2bacd/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=29a94bf97da148775cedb260ca8581be9cc2bacd", "patch": "@@ -10207,7 +10207,11 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n \t   || TREE_CODE (rse.string_length) == INDIRECT_REF))\n     string_length = gfc_evaluate_now (rse.string_length, &rse.pre);\n   else if (expr2->ts.type == BT_CHARACTER)\n-    string_length = rse.string_length;\n+    {\n+      if (expr1->ts.deferred && gfc_check_dependency (expr1, expr2, false))\n+\trse.string_length = gfc_evaluate_now (rse.string_length, &rse.pre);\n+      string_length = rse.string_length;\n+    }\n   else\n     string_length = NULL_TREE;\n "}, {"sha": "530e7deba314f161c03e903f1f4516413270778d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a94bf97da148775cedb260ca8581be9cc2bacd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a94bf97da148775cedb260ca8581be9cc2bacd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29a94bf97da148775cedb260ca8581be9cc2bacd", "patch": "@@ -1,3 +1,8 @@\n+2018-09-29  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/65667\n+\t* gfortran.dg/dependency_52.f90 : New test.\n+\n 2018-09-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/87467"}, {"sha": "20c97ca98e5665e66751f3606d08d215bf1112e9", "filename": "gcc/testsuite/gfortran.dg/dependency_52.f90", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a94bf97da148775cedb260ca8581be9cc2bacd/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_52.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a94bf97da148775cedb260ca8581be9cc2bacd/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_52.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_52.f90?ref=29a94bf97da148775cedb260ca8581be9cc2bacd", "patch": "@@ -0,0 +1,45 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR65667, in which the dependency was missed and\n+! the string length of 'text' was decremented twice. The rhs string\n+! length is now fixed after the function call so that the dependency\n+! on the length of 'text' is removed for later evaluations.\n+!\n+!Contributed by John  <jwmwalrus@gmail.com>\n+!\n+module mod1\n+    implicit none\n+contains\n+    subroutine getKeyword(string, keyword, rest)\n+        character(:), allocatable, intent(IN) :: string\n+        character(:), allocatable, intent(OUT) :: keyword, rest\n+        integer :: idx\n+        character(:), allocatable :: text\n+\n+        keyword = ''\n+        rest = ''\n+        text = string\n+        text = ADJUSTL(text(2:))    ! Note dependency.\n+        idx = INDEX(text, ' ')\n+\n+        if (idx == 0) then\n+            keyword = TRIM(text)\n+        else\n+            keyword = text(:idx-1)\n+            rest = TRIM(ADJUSTL(text(idx+1:)))\n+        endif\n+    end subroutine\n+end module mod1\n+\n+    use mod1\n+    implicit none\n+\n+    character(:), allocatable :: line, keyword, rest\n+\n+    line = '@HERE    IT IS'\n+\n+    call getKeyword(line, keyword, rest)\n+\n+    if (keyword .ne. 'HERE') stop 1\n+    if (rest .ne. 'IT IS') stop 2\n+end"}]}