{"sha": "c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjZTU5YWI3ZmM4YTVhNTVhMjIxOGZmYTdlNDQ2YmE2NTVlNWE2ZQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-09-15T15:49:09Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-09-15T15:49:09Z"}, "message": "The TARGET_CAN_FOLLOW_JUMP hook takes insns\n\ngcc/ChangeLog:\n\t* config/arc/arc.c (arc_can_follow_jump): Strengthen both params\n\tfrom const_rtx to const rtx_insn *.  Update union members from rtx\n\tto rtx_insn *.\n\t* doc/tm.texi (TARGET_CAN_FOLLOW_JUMP): Autogenerated change.\n\t* hooks.c (hook_bool_const_rtx_const_rtx_true): Rename to...\n\t(hook_bool_const_rtx_insn_const_rtx_insn_true): ...this, and\n\tstrengthen both params from const_rtx to const rtx_insn *.\n\t* hooks.h (hook_bool_const_rtx_const_rtx_true): Likewise.\n\t(hook_bool_const_rtx_insn_const_rtx_insn_true): Likewise.\n\t* reorg.c (follow_jumps): Strengthen param \"jump\" from rtx to\n\trtx_insn *.\n\t* target.def (can_follow_jump): Strengthen both params from\n\tconst_rtx to const rtx_insn *, and update default implementation\n\tfrom hook_bool_const_rtx_const_rtx_true to\n\thook_bool_const_rtx_insn_const_rtx_insn_true.\n\nFrom-SVN: r215269", "tree": {"sha": "18931aeb197af67443844e6615b2384621d5c201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18931aeb197af67443844e6615b2384621d5c201"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99de861295c32c3077b287bbb08ccc852297a72f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99de861295c32c3077b287bbb08ccc852297a72f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99de861295c32c3077b287bbb08ccc852297a72f"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "93f19406a46e0c61dea7f98b6ad827604498ca5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "patch": "@@ -1,3 +1,21 @@\n+2014-09-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* config/arc/arc.c (arc_can_follow_jump): Strengthen both params\n+\tfrom const_rtx to const rtx_insn *.  Update union members from rtx\n+\tto rtx_insn *.\n+\t* doc/tm.texi (TARGET_CAN_FOLLOW_JUMP): Autogenerated change.\n+\t* hooks.c (hook_bool_const_rtx_const_rtx_true): Rename to...\n+\t(hook_bool_const_rtx_insn_const_rtx_insn_true): ...this, and\n+\tstrengthen both params from const_rtx to const rtx_insn *.\n+\t* hooks.h (hook_bool_const_rtx_const_rtx_true): Likewise.\n+\t(hook_bool_const_rtx_insn_const_rtx_insn_true): Likewise.\n+\t* reorg.c (follow_jumps): Strengthen param \"jump\" from rtx to\n+\trtx_insn *.\n+\t* target.def (can_follow_jump): Strengthen both params from\n+\tconst_rtx to const rtx_insn *, and update default implementation\n+\tfrom hook_bool_const_rtx_const_rtx_true to\n+\thook_bool_const_rtx_insn_const_rtx_insn_true.\n+\n 2014-09-15  David Malcolm  <dmalcolm@redhat.com>\n \n \t* sched-deps.c (deps_start_bb): Strengthen param \"head\" and local"}, {"sha": "9dd19ded8968054fc918cca031bd1c5ce3f36b97", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "patch": "@@ -420,7 +420,8 @@ arc_vector_mode_supported_p (enum machine_mode mode)\n /* TARGET_PRESERVE_RELOAD_P is still awaiting patch re-evaluation / review.  */\n static bool arc_preserve_reload_p (rtx in) ATTRIBUTE_UNUSED;\n static rtx arc_delegitimize_address (rtx);\n-static bool arc_can_follow_jump (const_rtx follower, const_rtx followee);\n+static bool arc_can_follow_jump (const rtx_insn *follower,\n+\t\t\t\t const rtx_insn *followee);\n \n static rtx frame_insn (rtx);\n static void arc_function_arg_advance (cumulative_args_t, enum machine_mode,\n@@ -9214,10 +9215,10 @@ arc_decl_pretend_args (tree decl)\n   to redirect two breqs.  */\n \n static bool\n-arc_can_follow_jump (const_rtx follower, const_rtx followee)\n+arc_can_follow_jump (const rtx_insn *follower, const rtx_insn *followee)\n {\n   /* ??? get_attr_type is declared to take an rtx.  */\n-  union { const_rtx c; rtx r; } u;\n+  union { const rtx_insn *c; rtx_insn *r; } u;\n \n   u.c = follower;\n   if (CROSSING_JUMP_P (followee))"}, {"sha": "1a19dcd9b3b22b802ee51bfd09028f4d50bad423", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "patch": "@@ -10827,7 +10827,7 @@ filling of delay slots can result in branches being redirected, and this\n may in turn cause a branch offset to overflow.\n @end defmac\n \n-@deftypefn {Target Hook} bool TARGET_CAN_FOLLOW_JUMP (const_rtx @var{follower}, const_rtx @var{followee})\n+@deftypefn {Target Hook} bool TARGET_CAN_FOLLOW_JUMP (const rtx_insn *@var{follower}, const rtx_insn *@var{followee})\n FOLLOWER and FOLLOWEE are JUMP_INSN instructions;  return true if FOLLOWER may be modified to follow FOLLOWEE;  false, if it can't.  For example, on some targets, certain kinds of branches can't be made to  follow through a hot/cold partitioning.\n @end deftypefn\n "}, {"sha": "6000b98513376012ab83f6907e3bb085d4561ec7", "filename": "gcc/hooks.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Fhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Fhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.c?ref=c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "patch": "@@ -116,10 +116,10 @@ hook_bool_mode_rtx_true (enum machine_mode mode ATTRIBUTE_UNUSED,\n   return true;\n }\n \n-/* Generic hook that takes (rtx, rtx) and returns true.  */\n+/* Generic hook that takes (const rtx_insn *, const rtx_insn *) and returns true.  */\n bool\n-hook_bool_const_rtx_const_rtx_true (const_rtx follower ATTRIBUTE_UNUSED,\n-\t\t\t\t    const_rtx followee ATTRIBUTE_UNUSED)\n+hook_bool_const_rtx_insn_const_rtx_insn_true (const rtx_insn *follower ATTRIBUTE_UNUSED,\n+\t\t\t\t\t      const rtx_insn *followee ATTRIBUTE_UNUSED)\n {\n   return true;\n }"}, {"sha": "11811c2fece92dd2d3de582acbe6ac2533a31a58", "filename": "gcc/hooks.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Fhooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Fhooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.h?ref=c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "patch": "@@ -36,7 +36,8 @@ extern bool hook_bool_mode_const_rtx_false (enum machine_mode, const_rtx);\n extern bool hook_bool_mode_const_rtx_true (enum machine_mode, const_rtx);\n extern bool hook_bool_mode_rtx_false (enum machine_mode, rtx);\n extern bool hook_bool_mode_rtx_true (enum machine_mode, rtx);\n-extern bool hook_bool_const_rtx_const_rtx_true (const_rtx, const_rtx);\n+extern bool hook_bool_const_rtx_insn_const_rtx_insn_true (const rtx_insn *,\n+\t\t\t\t\t\t\t  const rtx_insn *);\n extern bool hook_bool_mode_uhwi_false (enum machine_mode,\n \t\t\t\t       unsigned HOST_WIDE_INT);\n extern bool hook_bool_tree_false (tree);"}, {"sha": "ee97927a6c285f283467efbf32e178afe2d912e1", "filename": "gcc/reorg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "patch": "@@ -2307,7 +2307,7 @@ fill_simple_delay_slots (int non_jumps_p)\n    set *CROSSING to true, otherwise set it to false.  */\n \n static rtx\n-follow_jumps (rtx label, rtx jump, bool *crossing)\n+follow_jumps (rtx label, rtx_insn *jump, bool *crossing)\n {\n   rtx_insn *insn;\n   rtx_insn *next;"}, {"sha": "752ef6bfea141f8929e23d370fb17d0a5e3cfe14", "filename": "gcc/target.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=c1ce59ab7fc8a5a55a2218ffa7e446ba655e5a6e", "patch": "@@ -2278,8 +2278,8 @@ DEFHOOK\n   false, if it can't.\\\n   For example, on some targets, certain kinds of branches can't be made to\\\n   follow through a hot/cold partitioning.\",\n- bool, (const_rtx follower, const_rtx followee),\n- hook_bool_const_rtx_const_rtx_true)\n+ bool, (const rtx_insn *follower, const rtx_insn *followee),\n+ hook_bool_const_rtx_insn_const_rtx_insn_true)\n \n /* Return a register class for which branch target register\n    optimizations should be applied.  */"}]}