{"sha": "0d6f2a8037b2040d04556fe3c07dc506defba5bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ2ZjJhODAzN2IyMDQwZDA0NTU2ZmUzYzA3ZGM1MDZkZWZiYTViZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-12-31T17:31:28Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-31T17:31:28Z"}, "message": "bitset (bitset<>::bitset(unsigned long long), [...]): Add in C++0x mode.\n\n2009-12-31  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/bitset (bitset<>::bitset(unsigned long long),\n\t_Base_bitset<>::_Base_bitset(unsigned long long)): Add\n\tin C++0x mode.\n\t* testsuite/23_containers/bitset/cons/3.cc: New.\n\nFrom-SVN: r155539", "tree": {"sha": "45eb08e87dd2bce20c8fe3c6ce17a56c77f162ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45eb08e87dd2bce20c8fe3c6ce17a56c77f162ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d6f2a8037b2040d04556fe3c07dc506defba5bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6f2a8037b2040d04556fe3c07dc506defba5bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d6f2a8037b2040d04556fe3c07dc506defba5bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6f2a8037b2040d04556fe3c07dc506defba5bf/comments", "author": null, "committer": null, "parents": [{"sha": "493278bea5415cecce1d4ed3e5aac0f5f4ec6286", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/493278bea5415cecce1d4ed3e5aac0f5f4ec6286", "html_url": "https://github.com/Rust-GCC/gccrs/commit/493278bea5415cecce1d4ed3e5aac0f5f4ec6286"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "def5105d70958c38a02d0ab8673328efe52a2949", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d6f2a8037b2040d04556fe3c07dc506defba5bf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d6f2a8037b2040d04556fe3c07dc506defba5bf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0d6f2a8037b2040d04556fe3c07dc506defba5bf", "patch": "@@ -1,3 +1,10 @@\n+2009-12-31  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/bitset (bitset<>::bitset(unsigned long long),\n+\t_Base_bitset<>::_Base_bitset(unsigned long long)): Add\n+\tin C++0x mode.\n+\t* testsuite/23_containers/bitset/cons/3.cc: New.\n+\n 2009-12-31  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/type_traits: Fix minor stylistic nit."}, {"sha": "06fdd3f4768f60abffe69ab6be2ca2faa3d84395", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d6f2a8037b2040d04556fe3c07dc506defba5bf/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d6f2a8037b2040d04556fe3c07dc506defba5bf/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=0d6f2a8037b2040d04556fe3c07dc506defba5bf", "patch": "@@ -76,10 +76,18 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       _Base_bitset()\n       { _M_do_reset(); }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      _Base_bitset(unsigned long long __val)\n+#else\n       _Base_bitset(unsigned long __val)\n+#endif\n       {\n \t_M_do_reset();\n \t_M_w[0] = __val;\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+\tif (sizeof(unsigned long long) > sizeof(unsigned long))\n+\t  _M_w[1] = __val >> _GLIBCXX_BITSET_BITS_PER_WORD;\n+#endif\n       }\n \n       static size_t\n@@ -359,7 +367,11 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       : _M_w(0)\n       { }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      _Base_bitset(unsigned long long __val)\n+#else\n       _Base_bitset(unsigned long __val)\n+#endif\n       : _M_w(__val)\n       { }\n \n@@ -491,7 +503,11 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       _Base_bitset()\n       { }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      _Base_bitset(unsigned long long)\n+#else\n       _Base_bitset(unsigned long)\n+#endif\n       { }\n \n       static size_t\n@@ -771,7 +787,11 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       { }\n \n       /// Initial bits bitwise-copied from a single word (others set to zero).\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      bitset(unsigned long long __val)\n+#else\n       bitset(unsigned long __val)\n+#endif\n       : _Base(__val)\n       { _M_do_sanitize(); }\n "}, {"sha": "b908068704b1905f5a75b645a92af8fc2a3e1f06", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/3.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d6f2a8037b2040d04556fe3c07dc506defba5bf/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d6f2a8037b2040d04556fe3c07dc506defba5bf/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F3.cc?ref=0d6f2a8037b2040d04556fe3c07dc506defba5bf", "patch": "@@ -0,0 +1,62 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2009-12-31  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <bitset>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const unsigned long long num0 = 0ULL;\n+  std::bitset<0> bs0(num0);\n+  VERIFY( bs0.to_ullong() == num0 );\n+\n+  const unsigned long long num1 = 215ULL;\n+  std::bitset<32> bs1(num1);\n+  VERIFY( bs1.to_ullong() == num1 );\n+\n+  const unsigned long long num2 = 215ULL;\n+  std::bitset<64> bs2(num2);\n+  VERIFY( bs2.to_ullong() == num2 );\n+\n+  const unsigned long long num3 = 343353215ULL;\n+  std::bitset<32> bs3(num3);\n+  VERIFY( bs3.to_ullong() == num3 );\n+\n+  const unsigned long long num4 = 343353215ULL;\n+  std::bitset<64> bs4(num4);\n+  VERIFY( bs4.to_ullong() == num4 );\n+\n+  const unsigned long long num5 = 13008719539498589283ULL;\n+  std::bitset<64> bs5(num5);\n+  VERIFY( bs5.to_ullong() == num5 );\n+\n+  const unsigned long long num6 = 13008719539498589283ULL;\n+  std::bitset<128> bs6(num6);\n+  VERIFY( bs6.to_ullong() == num6 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}