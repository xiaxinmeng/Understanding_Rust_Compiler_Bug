{"sha": "0ad12cd3b586778ac750bfd9172a68fe0d6a4140", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFkMTJjZDNiNTg2Nzc4YWM3NTBiZmQ5MTcyYTY4ZmUwZDZhNDE0MA==", "commit": {"author": {"name": "Serge Belyshev", "email": "belyshev@depni.sinp.msu.ru", "date": "2006-11-09T19:24:32Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-11-09T19:24:32Z"}, "message": "re PR middle-end/29726 (invalid folding of ((X >> C1) & C2) != 0 or \"M-x is undefined\" in emacs)\n\n2006-11-09  Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n\n\tPR middle-end/29726\n\t* fold-const.c (fold_binary) <EQ_EXPR>: Fix typo in variable name.\n\n\t* gcc.dg/fold-eqandshift-1.c (test5): Uncomment function.\n\t(test6): Ditto.\n\t(dg-final): Add scan-tree-dump-times patterns for test5 and test6.\n\t* gcc.dg/fold-eqandshift-3.c: New test case.\n\nFrom-SVN: r118625", "tree": {"sha": "4512a404386f0c2ec5a9161e38f98f6db671385f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4512a404386f0c2ec5a9161e38f98f6db671385f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ad12cd3b586778ac750bfd9172a68fe0d6a4140", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ad12cd3b586778ac750bfd9172a68fe0d6a4140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ad12cd3b586778ac750bfd9172a68fe0d6a4140", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/comments", "author": {"login": "ssb83", "id": 37732995, "node_id": "MDQ6VXNlcjM3NzMyOTk1", "avatar_url": "https://avatars.githubusercontent.com/u/37732995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssb83", "html_url": "https://github.com/ssb83", "followers_url": "https://api.github.com/users/ssb83/followers", "following_url": "https://api.github.com/users/ssb83/following{/other_user}", "gists_url": "https://api.github.com/users/ssb83/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssb83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssb83/subscriptions", "organizations_url": "https://api.github.com/users/ssb83/orgs", "repos_url": "https://api.github.com/users/ssb83/repos", "events_url": "https://api.github.com/users/ssb83/events{/privacy}", "received_events_url": "https://api.github.com/users/ssb83/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7114edca021e3251ec74acf93e9ebe18b128c87a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7114edca021e3251ec74acf93e9ebe18b128c87a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7114edca021e3251ec74acf93e9ebe18b128c87a"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "7f4e39ca2150d2f8cbf66d4071d66d6413c4cfb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ad12cd3b586778ac750bfd9172a68fe0d6a4140", "patch": "@@ -1,3 +1,8 @@\n+2006-11-09  Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n+\n+\tPR middle-end/29726\n+\t* fold-const.c (fold_binary) <EQ_EXPR>: Fix typo in variable name.\n+\n 2006-11-09  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* simplify-rtx.c (avoid_constant_pool_reference): Avoid calling "}, {"sha": "6016a702d69c240a45a9be296d24e20178f93542", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=0ad12cd3b586778ac750bfd9172a68fe0d6a4140", "patch": "@@ -10587,7 +10587,7 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t      unsigned HOST_WIDE_INT log2 = tree_log2 (arg01);\n \t      /* If (C2 << C1) doesn't overflow, then ((X >> C1) & C2) != 0\n \t\t can be rewritten as (X & (C2 << C1)) != 0.  */\n-\t      if ((log2 + TREE_INT_CST_LOW (arg01)) < prec)\n+\t      if ((log2 + TREE_INT_CST_LOW (arg001)) < prec)\n \t\t{\n \t\t  tem = fold_build2 (LSHIFT_EXPR, itype, arg01, arg001);\n \t\t  tem = fold_build2 (BIT_AND_EXPR, itype, arg000, tem);"}, {"sha": "cf60056a638412b7cf0e04faf1a897d87cb7f3e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ad12cd3b586778ac750bfd9172a68fe0d6a4140", "patch": "@@ -1,3 +1,11 @@\n+2006-11-09  Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n+\n+\tPR middle-end/29726\n+\t* gcc.dg/fold-eqandshift-1.c (test5): Uncomment function.\n+\t(test6): Ditto.\n+\t(dg-final): Add scan-tree-dump-times patterns for test5 and test6.\n+\t* gcc.dg/fold-eqandshift-3.c: New test case.\n+\n 2006-11-09 Paul Thomas <pault@gcc.gnu.org>\n \n \tPR fortran/29699"}, {"sha": "34906bad0205a23c14b4bc926de1aac67d769635", "filename": "gcc/testsuite/gcc.dg/fold-eqandshift-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-eqandshift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-eqandshift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-eqandshift-1.c?ref=0ad12cd3b586778ac750bfd9172a68fe0d6a4140", "patch": "@@ -25,7 +25,6 @@ int test4(int d)\n   return (d >> 3) & 4;\n }\n \n-#if 0\n void test5(int e)\n {\n   if ((e >> 31) & 64)\n@@ -37,10 +36,11 @@ void test6(unsigned int f)\n   if ((f >> 31) & 64)\n     foo();\n }\n-#endif\n \n /* { dg-final { scan-tree-dump-times \"\\\\(a \\& 8\\\\) != 0\" 1 \"original\" } } */\n /* { dg-final { scan-tree-dump-times \"\\\\(b \\& 32\\\\) != 0\" 1 \"original\" } } */\n /* { dg-final { scan-tree-dump-times \"c >> 3 \\& 1\" 1 \"original\" } } */\n /* { dg-final { scan-tree-dump-times \"d >> 3 \\& 4\" 1 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"e < 0\" 1 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"if \\\\(0\\\\)\" 1 \"original\" } } */\n /* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "d3b4adcf76c69710d7d70044c72e9c67f1299f18", "filename": "gcc/testsuite/gcc.dg/fold-eqandshift-3.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-eqandshift-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ad12cd3b586778ac750bfd9172a68fe0d6a4140/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-eqandshift-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-eqandshift-3.c?ref=0ad12cd3b586778ac750bfd9172a68fe0d6a4140", "patch": "@@ -0,0 +1,21 @@\n+/* PR middle-end/29726 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-original\" } */\n+\n+void foo (void);\n+\n+int test1 (int a)\n+{\n+  if ((a >> 3) & 134217728)\n+    foo ();\n+}\n+\n+int test2 (unsigned int b)\n+{\n+  if ((b >> 3) & 134217728)\n+    foo ();\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"\\\\(a \\& 1073741824\\\\) != 0\" 1 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"\\\\(b \\& 1073741824\\\\) != 0\" 1 \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}]}