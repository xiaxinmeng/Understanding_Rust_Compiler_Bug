{"sha": "9737efaf7e8551eae41e02b5ea61a80a09206f64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTczN2VmYWY3ZTg1NTFlYWU0MWUwMmI1ZWE2MWE4MGEwOTIwNmY2NA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-06-23T10:09:05Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-06-23T10:09:05Z"}, "message": "match.pd ((x + y) - (x | y) -> x & y, (x + y) - (x & y) -> x | y): New patterns.\n\n\t* match.pd ((x + y) - (x | y) -> x & y,\n\t(x + y) - (x & y) -> x | y): New patterns.\n\n\t* gcc.dg/fold-minus-4.c: New test.\n\t* gcc.dg/fold-minus-5.c: New test.\n\t* c-c++-common/ubsan/overflow-add-5.c: New test.\n\nFrom-SVN: r224834", "tree": {"sha": "4792b55d392ce53f4fb5ecc1ae08d6372d753f29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4792b55d392ce53f4fb5ecc1ae08d6372d753f29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9737efaf7e8551eae41e02b5ea61a80a09206f64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9737efaf7e8551eae41e02b5ea61a80a09206f64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9737efaf7e8551eae41e02b5ea61a80a09206f64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9737efaf7e8551eae41e02b5ea61a80a09206f64/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b91cc91f23ea9f964678eb4dcf5cca2e009a659", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b91cc91f23ea9f964678eb4dcf5cca2e009a659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b91cc91f23ea9f964678eb4dcf5cca2e009a659"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "80c07c82efd0f7deeb6928bf32e3c6740c896fa1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9737efaf7e8551eae41e02b5ea61a80a09206f64", "patch": "@@ -1,3 +1,8 @@\n+2015-06-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* match.pd ((x + y) - (x | y) -> x & y,\n+\t(x + y) - (x & y) -> x | y): New patterns.\n+\n 2015-06-23  Ludovic Court\u00e8s  <ludo@gnu.org>\n \n \tPR 65711"}, {"sha": "9c88e3eee39d0ec2d825a42631f604ae20c7ddcc", "filename": "gcc/match.pd", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=9737efaf7e8551eae41e02b5ea61a80a09206f64", "patch": "@@ -343,6 +343,20 @@ along with GCC; see the file COPYING3.  If not see\n  (plus:c (bit_and @0 @1) (bit_ior @0 @1))\n  (plus @0 @1))\n \n+/* (x + y) - (x | y) -> x & y */\n+(simplify\n+ (minus (plus @0 @1) (bit_ior @0 @1))\n+ (if (!TYPE_OVERFLOW_SANITIZED (type) && !TYPE_OVERFLOW_TRAPS (type)\n+      && !TYPE_SATURATING (type))\n+  (bit_and @0 @1)))\n+\n+/* (x + y) - (x & y) -> x | y */\n+(simplify\n+ (minus (plus @0 @1) (bit_and @0 @1))\n+ (if (!TYPE_OVERFLOW_SANITIZED (type) && !TYPE_OVERFLOW_TRAPS (type)\n+      && !TYPE_SATURATING (type))\n+  (bit_ior @0 @1)))\n+\n /* (x | y) - (x ^ y) -> x & y */\n (simplify\n  (minus (bit_ior @0 @1) (bit_xor @0 @1))"}, {"sha": "f305d812d468ae2c6144b1f5a93f58a0cb5974d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9737efaf7e8551eae41e02b5ea61a80a09206f64", "patch": "@@ -1,3 +1,9 @@\n+2015-06-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/fold-minus-4.c: New test.\n+\t* gcc.dg/fold-minus-5.c: New test.\n+\t* c-c++-common/ubsan/overflow-add-5.c: New test.\n+\n 2015-06-23  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \tAdd missing testcase from r224672."}, {"sha": "905a60a73b392c7d26cc5c8560989dc29a271eb0", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-add-5.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-5.c?ref=9737efaf7e8551eae41e02b5ea61a80a09206f64", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=signed-integer-overflow\" } */\n+\n+int __attribute__ ((noinline))\n+foo (int i, int j)\n+{\n+  return (i + j) - (i | j);\n+}\n+\n+/* { dg-output \"signed integer overflow: 2147483647 \\\\+ 1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483648 - 2147483647 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+\n+int __attribute__ ((noinline))\n+bar (int i, int j)\n+{\n+  return (i + j) - (i & j);\n+}\n+\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483647 \\\\+ 1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483648 - 1 cannot be represented in type 'int'\" } */\n+\n+int\n+main ()\n+{\n+  int r = foo (__INT_MAX__, 1);\n+  asm volatile (\"\" : \"+g\" (r));\n+  r = bar (__INT_MAX__, 1);\n+  asm volatile (\"\" : \"+g\" (r));\n+  return 0;\n+}"}, {"sha": "2d76b4f60e4102fb0c2c61f0822211fb94419e43", "filename": "gcc/testsuite/gcc.dg/fold-minus-4.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-4.c?ref=9737efaf7e8551eae41e02b5ea61a80a09206f64", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int a, int b)\n+{\n+  int tem1 = a + b;\n+  int tem2 = a & b;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn2 (int a, int b)\n+{\n+  int tem1 = b + a;\n+  int tem2 = a & b;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn3 (int a, int b)\n+{\n+  int tem1 = a + b;\n+  int tem2 = b & a;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn4 (int a, int b)\n+{\n+  int tem1 = b + a;\n+  int tem2 = b & a;\n+  return tem1 - tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" & \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\+ \" \"cddce1\" } } */"}, {"sha": "a31e1cc1e2055afd1a4c33a9d6cb4068d0435e8e", "filename": "gcc/testsuite/gcc.dg/fold-minus-5.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9737efaf7e8551eae41e02b5ea61a80a09206f64/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-5.c?ref=9737efaf7e8551eae41e02b5ea61a80a09206f64", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int a, int b)\n+{\n+  int tem1 = a + b;\n+  int tem2 = a | b;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn2 (int a, int b)\n+{\n+  int tem1 = b + a;\n+  int tem2 = a | b;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn3 (int a, int b)\n+{\n+  int tem1 = a + b;\n+  int tem2 = b | a;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn4 (int a, int b)\n+{\n+  int tem1 = b + a;\n+  int tem2 = b | a;\n+  return tem1 - tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" \\\\+ \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\| \" \"cddce1\" } } */"}]}