{"sha": "05d57d6561dc3c10cd777a5c783833b2c2e37074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVkNTdkNjU2MWRjM2MxMGNkNzc3YTVjNzgzODMzYjJjMmUzNzA3NA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-10-18T15:44:39Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-10-18T15:44:39Z"}, "message": "Fix ICE in substring-handling building 502.gcc_r (PR 87562)\n\nIn r264887 I broke the build of 502.gcc_r due to an ICE.\nThe ICE occurs when generating a location for an sprintf warning within\na string literal, where the sprintf call is in a macro.\n\nThe root cause is a bug in the original commit of substring locations\n(r239175).  get_substring_ranges_for_loc has code to handle the case\nwhere the string literal is in a very long source line that exceeds the\nlength that the current linemap can represent: the start of the token\nis in one line map, but then another line map is started, and the end\nof the token is in the new linemap.  get_substring_ranges_for_loc handles\nthis by using the linemap of the end-point when building location_t\nvalues within the string.  When extracting the linemap for the endpoint\nin r239175 I erroneously used LRK_MACRO_EXPANSION_POINT, which should\nhave instead been LRK_SPELLING_LOCATION.\n\nI believe this bug was dormant due to rejecting macro locations earlier\nin the function, but in r264887 I allowed some macro locations in order\nto deal with locations coming from the C++ lexer, and this uncovered\nthe bug: if a string literal was defined in a macro, locations within\nthe string literal would be looked up using the linemap of the expansion\npoint of the macro, rather than of the spelling point.  This would lead\nto garbage location_t values, and, depending on the precise line numbers\nof the two locations, an assertion failure (which was causing the build\nfailure in 502.gcc_r).\n\nThis patch fixes the bug by using LRK_SPELLING_LOCATION, and adds some\nbulletproofing to the \"two linemaps\" case.\n\nSuccessfully bootstrapped & regrtested on x86_64-pc-linux-gnu\n(g++.sum gained 5 PASS results; gcc.sum gained 3 PASS results).\nI also verified that this fixes the build of 502.gcc_r.\n\ngcc/ChangeLog:\n\tPR tree-optimization/87562\n\t* input.c (get_substring_ranges_for_loc): Use\n\tLRK_SPELLING_LOCATION rather than LRK_MACRO_EXPANSION_POINT when\n\tgetting the linemap for the endpoint.  Verify that it's either\n\tin the same linemap as the start point's spelling location, or\n\tat least in the same file.\n\ngcc/testsuite/ChangeLog:\n\tPR tree-optimization/87562\n\t* c-c++-common/substring-location-PR-87562-1-a.h: New file.\n\t* c-c++-common/substring-location-PR-87562-1-b.h: New file.\n\t* c-c++-common/substring-location-PR-87562-1.c: New test.\n\t* gcc.dg/plugin/diagnostic-test-string-literals-1.c: Add test for\n\tPR 87562.\n\t* gcc.dg/plugin/pr87562-a.h: New file.\n\t* gcc.dg/plugin/pr87562-b.h: New file.\n\nFrom-SVN: r265271", "tree": {"sha": "74166f3b076288dd91cda5512c9cdc8f9a4158e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74166f3b076288dd91cda5512c9cdc8f9a4158e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05d57d6561dc3c10cd777a5c783833b2c2e37074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05d57d6561dc3c10cd777a5c783833b2c2e37074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05d57d6561dc3c10cd777a5c783833b2c2e37074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05d57d6561dc3c10cd777a5c783833b2c2e37074/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fab2c75b73c11d5c6d652a20bfa34e1733f1407f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab2c75b73c11d5c6d652a20bfa34e1733f1407f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fab2c75b73c11d5c6d652a20bfa34e1733f1407f"}], "stats": {"total": 82, "additions": 81, "deletions": 1}, "files": [{"sha": "b97a8a2461b6a316ba80abac9e99d64463d4b7a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05d57d6561dc3c10cd777a5c783833b2c2e37074", "patch": "@@ -1,3 +1,12 @@\n+2018-10-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR tree-optimization/87562\n+\t* input.c (get_substring_ranges_for_loc): Use\n+\tLRK_SPELLING_LOCATION rather than LRK_MACRO_EXPANSION_POINT when\n+\tgetting the linemap for the endpoint.  Verify that it's either\n+\tin the same linemap as the start point's spelling location, or\n+\tat least in the same file.\n+\n 2018-10-18  Richard Biener  <rguenther@suse.de>\n \n \t* config/i386/i386.c (ix86_builtin_vectorization_cost): Do not"}, {"sha": "57a1a3c42d3166b4214d8dcd273dcf2a6e98c2ea", "filename": "gcc/input.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.c?ref=05d57d6561dc3c10cd777a5c783833b2c2e37074", "patch": "@@ -1457,9 +1457,17 @@ get_substring_ranges_for_loc (cpp_reader *pfile,\n \t halfway through the token.\n \t Ensure that the loc_reader uses the linemap of the\n \t *end* of the token for its start location.  */\n+      const line_map_ordinary *start_ord_map;\n+      linemap_resolve_location (line_table, src_range.m_start,\n+\t\t\t\tLRK_SPELLING_LOCATION, &start_ord_map);\n       const line_map_ordinary *final_ord_map;\n       linemap_resolve_location (line_table, src_range.m_finish,\n-\t\t\t\tLRK_MACRO_EXPANSION_POINT, &final_ord_map);\n+\t\t\t\tLRK_SPELLING_LOCATION, &final_ord_map);\n+      /* Bulletproofing.  We ought to only have different ordinary maps\n+\t for start vs finish due to line-length jumps.  */\n+      if (start_ord_map != final_ord_map\n+\t  && start_ord_map->to_file != final_ord_map->to_file)\n+\t  return \"start and finish are spelled in different ordinary maps\";\n       location_t start_loc\n \t= linemap_position_for_line_and_column (line_table, final_ord_map,\n \t\t\t\t\t\tstart.line, start.column);"}, {"sha": "4929e368f417e201ff600b07628b5e29d018fe8d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=05d57d6561dc3c10cd777a5c783833b2c2e37074", "patch": "@@ -1,3 +1,14 @@\n+2018-10-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR tree-optimization/87562\n+\t* c-c++-common/substring-location-PR-87562-1-a.h: New file.\n+\t* c-c++-common/substring-location-PR-87562-1-b.h: New file.\n+\t* c-c++-common/substring-location-PR-87562-1.c: New test.\n+\t* gcc.dg/plugin/diagnostic-test-string-literals-1.c: Add test for\n+\tPR 87562.\n+\t* gcc.dg/plugin/pr87562-a.h: New file.\n+\t* gcc.dg/plugin/pr87562-b.h: New file.\n+\n 2018-10-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/58618"}, {"sha": "369c9d076cea6cc1f9250660fc2e990f2b3d7cc8", "filename": "gcc/testsuite/c-c++-common/substring-location-PR-87562-1-a.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fsubstring-location-PR-87562-1-a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fsubstring-location-PR-87562-1-a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fsubstring-location-PR-87562-1-a.h?ref=05d57d6561dc3c10cd777a5c783833b2c2e37074", "patch": "@@ -0,0 +1,7 @@\n+#undef  ASM_GENERATE_INTERNAL_LABEL\n+#define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      __builtin_sprintf (LABEL, \"*.%s%u\", PREFIX, (unsigned) (NUM));\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "gcc/testsuite/c-c++-common/substring-location-PR-87562-1-b.h", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fsubstring-location-PR-87562-1-b.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fsubstring-location-PR-87562-1-b.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fsubstring-location-PR-87562-1-b.h?ref=05d57d6561dc3c10cd777a5c783833b2c2e37074"}, {"sha": "6afd22c80549535c2443f175889bc022d7fc0466", "filename": "gcc/testsuite/c-c++-common/substring-location-PR-87562-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fsubstring-location-PR-87562-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fsubstring-location-PR-87562-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fsubstring-location-PR-87562-1.c?ref=05d57d6561dc3c10cd777a5c783833b2c2e37074", "patch": "@@ -0,0 +1,15 @@\n+/* Reproducing this ICE is dependent on line numbering, hence the blank\n+   lines below.  */\n+#include \"substring-location-PR-87562-1-a.h\"\n+\n+\n+\n+\n+#include \"substring-location-PR-87562-1-b.h\"\n+\n+void\n+dbxout_stab_value_internal_label (const char *stem, int counter)\n+{\n+  char label[100];\n+  ASM_GENERATE_INTERNAL_LABEL (label, stem, counter);\n+}"}, {"sha": "b7350955e99168919d1bd99997902e194dfd7551", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-string-literals-1.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-string-literals-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-string-literals-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-string-literals-1.c?ref=05d57d6561dc3c10cd777a5c783833b2c2e37074", "patch": "@@ -296,3 +296,26 @@ test_backslash_continued_logical_lines (void)\n  ~~~~~~                          \n    { dg-end-multiline-output \"\" } */\n }\n+\n+/* Reproducer for PR 87652; this is whitespace-sensitive.  */\n+\n+#include \"pr87562-a.h\"\n+\n+\n+\n+\n+#include \"pr87562-b.h\"\n+\n+void\n+pr87652 (const char *stem, int counter)\n+{\n+  char label[100];\n+  ASM_GENERATE_INTERNAL_LABEL (label, stem, counter);\n+\n+  /* This warning is actually in \"pr87562-a.h\".  */\n+  /* { dg-warning \"39: range\" \"\" { target *-*-* } 5 } */\n+  /* { dg-begin-multiline-output \"\" }\n+       __emit_string_literal_range (\"*.%s%u\", 2, 2, 3); \\\n+                                       ^~\n+     { dg-end-multiline-output \"\" } */\n+}"}, {"sha": "0e5a9f19a19f8e81018605ffa2f29f1ec1fce57e", "filename": "gcc/testsuite/gcc.dg/plugin/pr87562-a.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fpr87562-a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fpr87562-a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fpr87562-a.h?ref=05d57d6561dc3c10cd777a5c783833b2c2e37074", "patch": "@@ -0,0 +1,7 @@\n+#undef  ASM_GENERATE_INTERNAL_LABEL\n+#define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      __emit_string_literal_range (\"*.%s%u\", 2, 2, 3); \\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "gcc/testsuite/gcc.dg/plugin/pr87562-b.h", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fpr87562-b.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d57d6561dc3c10cd777a5c783833b2c2e37074/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fpr87562-b.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fpr87562-b.h?ref=05d57d6561dc3c10cd777a5c783833b2c2e37074"}]}