{"sha": "f9f248c8b86bbc5c69d4c3083d617736a65d7244", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlmMjQ4YzhiODZiYmM1YzY5ZDRjMzA4M2Q2MTc3MzZhNjVkNzI0NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-21T15:54:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-21T15:54:55Z"}, "message": "re PR rtl-optimization/88563 (wrong code with -O2 -fno-code-hoisting -fno-tree-ccp -fno-tree-dominator-opts -fno-tree-forwprop -fno-tree-fre -fno-tree-pre -fno-tree-vrp)\n\n\tPR rtl-optimization/88563\n\t* expr.c (expand_expr_real_2) <case WIDEN_MULT_EXPR>: Swap innermode\n\tand mode arguments to convert_modes.  Likewise swap mode and word_mode\n\targuments.  Handle both arguments with VOIDmode before convert_modes\n\tof one of them.  Formatting fixes.\n\n\t* gcc.dg/pr88563.c: New test.\n\nFrom-SVN: r267326", "tree": {"sha": "b0383a5bf34aa046177c0201b4320f8670639d21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0383a5bf34aa046177c0201b4320f8670639d21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9f248c8b86bbc5c69d4c3083d617736a65d7244", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f248c8b86bbc5c69d4c3083d617736a65d7244", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f248c8b86bbc5c69d4c3083d617736a65d7244", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f248c8b86bbc5c69d4c3083d617736a65d7244/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "247c45b265ff85428aafb7cfcf6f968936ad48f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247c45b265ff85428aafb7cfcf6f968936ad48f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247c45b265ff85428aafb7cfcf6f968936ad48f3"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "ce6ba2f16ea5bdd1d2126070701f2fb01f6483a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f248c8b86bbc5c69d4c3083d617736a65d7244/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f248c8b86bbc5c69d4c3083d617736a65d7244/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9f248c8b86bbc5c69d4c3083d617736a65d7244", "patch": "@@ -1,3 +1,11 @@\n+2018-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/88563\n+\t* expr.c (expand_expr_real_2) <case WIDEN_MULT_EXPR>: Swap innermode\n+\tand mode arguments to convert_modes.  Likewise swap mode and word_mode\n+\targuments.  Handle both arguments with VOIDmode before convert_modes\n+\tof one of them.  Formatting fixes.\n+\n 2018-12-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/88556"}, {"sha": "818313426778386af951389c23e59f99f102d5f4", "filename": "gcc/expr.c", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f248c8b86bbc5c69d4c3083d617736a65d7244/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f248c8b86bbc5c69d4c3083d617736a65d7244/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f9f248c8b86bbc5c69d4c3083d617736a65d7244", "patch": "@@ -8775,8 +8775,8 @@ expand_expr_real_2 (sepops ops, rtx target, machine_mode tmode,\n \t\t != INTEGER_CST check.  Handle it.  */\n \t      if (GET_MODE (op0) == VOIDmode && GET_MODE (op1) == VOIDmode)\n \t\t{\n-\t\t  op0 = convert_modes (innermode, mode, op0, true);\n-\t\t  op1 = convert_modes (innermode, mode, op1, false);\n+\t\t  op0 = convert_modes (mode, innermode, op0, true);\n+\t\t  op1 = convert_modes (mode, innermode, op1, false);\n \t\t  return REDUCE_BIT_FIELD (expand_mult (mode, op0, op1,\n \t\t\t\t\t\t\ttarget, unsignedp));\n \t\t}\n@@ -8798,7 +8798,7 @@ expand_expr_real_2 (sepops ops, rtx target, machine_mode tmode,\n \t  if (TREE_CODE (treeop0) != INTEGER_CST)\n \t    {\n \t      if (find_widening_optab_handler (this_optab, mode, innermode)\n-\t\t    != CODE_FOR_nothing)\n+\t\t  != CODE_FOR_nothing)\n \t\t{\n \t\t  expand_operands (treeop0, treeop1, NULL_RTX, &op0, &op1,\n \t\t\t\t   EXPAND_NORMAL);\n@@ -8807,9 +8807,9 @@ expand_expr_real_2 (sepops ops, rtx target, machine_mode tmode,\n \t\t  if (GET_MODE (op0) == VOIDmode && GET_MODE (op1) == VOIDmode)\n \t\t    {\n \t\t     widen_mult_const:\n-\t\t      op0 = convert_modes (innermode, mode, op0, zextend_p);\n+\t\t      op0 = convert_modes (mode, innermode, op0, zextend_p);\n \t\t      op1\n-\t\t\t= convert_modes (innermode, mode, op1,\n+\t\t\t= convert_modes (mode, innermode, op1,\n \t\t\t\t\t TYPE_UNSIGNED (TREE_TYPE (treeop1)));\n \t\t      return REDUCE_BIT_FIELD (expand_mult (mode, op0, op1,\n \t\t\t\t\t\t\t    target,\n@@ -8820,21 +8820,19 @@ expand_expr_real_2 (sepops ops, rtx target, machine_mode tmode,\n \t\t  return REDUCE_BIT_FIELD (temp);\n \t\t}\n \t      if (find_widening_optab_handler (other_optab, mode, innermode)\n-\t\t    != CODE_FOR_nothing\n+\t\t  != CODE_FOR_nothing\n \t\t  && innermode == word_mode)\n \t\t{\n \t\t  rtx htem, hipart;\n \t\t  op0 = expand_normal (treeop0);\n-\t\t  if (TREE_CODE (treeop1) == INTEGER_CST)\n-\t\t    op1 = convert_modes (word_mode, mode,\n-\t\t\t\t\t expand_normal (treeop1),\n-\t\t\t\t\t TYPE_UNSIGNED (TREE_TYPE (treeop1)));\n-\t\t  else\n-\t\t    op1 = expand_normal (treeop1);\n-\t\t  /* op0 and op1 might still be constant, despite the above\n+\t\t  op1 = expand_normal (treeop1);\n+\t\t  /* op0 and op1 might be constants, despite the above\n \t\t     != INTEGER_CST check.  Handle it.  */\n \t\t  if (GET_MODE (op0) == VOIDmode && GET_MODE (op1) == VOIDmode)\n \t\t    goto widen_mult_const;\n+\t\t  if (TREE_CODE (treeop1) == INTEGER_CST)\n+\t\t    op1 = convert_modes (mode, word_mode, op1,\n+\t\t\t\t\t TYPE_UNSIGNED (TREE_TYPE (treeop1)));\n \t\t  temp = expand_binop (mode, other_optab, op0, op1, target,\n \t\t\t\t       unsignedp, OPTAB_LIB_WIDEN);\n \t\t  hipart = gen_highpart (word_mode, temp);"}, {"sha": "76ffd3d60d12ff0394b2c2892dc88d191fb798d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f248c8b86bbc5c69d4c3083d617736a65d7244/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f248c8b86bbc5c69d4c3083d617736a65d7244/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9f248c8b86bbc5c69d4c3083d617736a65d7244", "patch": "@@ -1,5 +1,8 @@\n 2018-12-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/88563\n+\t* gcc.dg/pr88563.c: New test.\n+\n \tPR c++/87125\n \t* g++.dg/cpp0x/pr87125.C: New test.\n "}, {"sha": "5526a8d01570219cebab1017edc268c32c921274", "filename": "gcc/testsuite/gcc.dg/pr88563.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f248c8b86bbc5c69d4c3083d617736a65d7244/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88563.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f248c8b86bbc5c69d4c3083d617736a65d7244/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88563.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88563.c?ref=f9f248c8b86bbc5c69d4c3083d617736a65d7244", "patch": "@@ -0,0 +1,15 @@\n+/* PR rtl-optimization/88563 */\n+/* { dg-do run { target int128 } } */\n+/* { dg-options \"-O2 -fno-code-hoisting -fno-tree-ccp -fno-tree-dominator-opts -fno-tree-forwprop -fno-tree-fre -fno-tree-pre -fno-tree-vrp\" } */\n+\n+int\n+main ()\n+{\n+#if __SIZEOF_LONG_LONG__ == 8 && __SIZEOF_INT128__ == 16 && __CHAR_BIT__ == 8\n+  unsigned __int128 a = 5;\n+  __builtin_mul_overflow (0xffffffffffffffffULL, (unsigned long long) a, &a);\n+  if (a != ((unsigned __int128)4 << 64 | 0xfffffffffffffffb))\n+    __builtin_abort ();\n+#endif\n+  return 0;\n+}"}]}