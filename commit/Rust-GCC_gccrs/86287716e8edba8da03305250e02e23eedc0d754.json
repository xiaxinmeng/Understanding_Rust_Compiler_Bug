{"sha": "86287716e8edba8da03305250e02e23eedc0d754", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYyODc3MTZlOGVkYmE4ZGEwMzMwNTI1MGUwMmUyM2VlZGMwZDc1NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-24T16:04:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-24T16:04:01Z"}, "message": "cxx-pretty-print.c (pp_cxx_check_constraint): Use VAR_P (x) instead of TREE_CODE (x) == VAR_DECL.\n\n\t* cxx-pretty-print.c (pp_cxx_check_constraint): Use VAR_P (x)\n\tinstead of TREE_CODE (x) == VAR_DECL.\n\t* constraint.cc (get_concept_definition): Likewise.\n\t(finish_shorthand_constraint): Likewise.\n\t* init.c (warn_placement_new_too_small): Likewise.\n\t* cp-gimplify.c (cp_genericize_r): Likewise.\n\nFrom-SVN: r241480", "tree": {"sha": "4162746b9bc8ce44af52f51250d517ce50e09dc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4162746b9bc8ce44af52f51250d517ce50e09dc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86287716e8edba8da03305250e02e23eedc0d754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86287716e8edba8da03305250e02e23eedc0d754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86287716e8edba8da03305250e02e23eedc0d754", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86287716e8edba8da03305250e02e23eedc0d754/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3f6007cbc84242c088097e46602a65f9654a349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f6007cbc84242c088097e46602a65f9654a349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3f6007cbc84242c088097e46602a65f9654a349"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "0c5da96c3d37fb0001685e2ddcf79c41701c6317", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=86287716e8edba8da03305250e02e23eedc0d754", "patch": "@@ -1,3 +1,12 @@\n+2016-10-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cxx-pretty-print.c (pp_cxx_check_constraint): Use VAR_P (x)\n+\tinstead of TREE_CODE (x) == VAR_DECL.\n+\t* constraint.cc (get_concept_definition): Likewise.\n+\t(finish_shorthand_constraint): Likewise.\n+\t* init.c (warn_placement_new_too_small): Likewise.\n+\t* cp-gimplify.c (cp_genericize_r): Likewise.\n+\n 2016-10-21  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/77656"}, {"sha": "801f5a3d7401a921cdb30f3a5c6c32cd9f8dc012", "filename": "gcc/cp/constraint.cc", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2Fconstraint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2Fconstraint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstraint.cc?ref=86287716e8edba8da03305250e02e23eedc0d754", "patch": "@@ -509,7 +509,7 @@ get_variable_initializer (tree var)\n tree\n get_concept_definition (tree decl)\n {\n-  if (TREE_CODE (decl) == VAR_DECL)\n+  if (VAR_P (decl))\n     return get_variable_initializer (decl);\n   else if (TREE_CODE (decl) == FUNCTION_DECL)\n     return get_returned_expression (decl);\n@@ -1286,10 +1286,8 @@ finish_shorthand_constraint (tree decl, tree constr)\n      the constraint an expansion. */\n   tree check;\n   tree tmpl = DECL_TI_TEMPLATE (con);\n-  if (TREE_CODE (con) == VAR_DECL)\n-    {\n-      check = build_concept_check (tmpl, arg, args);\n-    }\n+  if (VAR_P (con))\n+    check = build_concept_check (tmpl, arg, args);\n   else\n     {\n       tree ovl = build_overload (tmpl, NULL_TREE);"}, {"sha": "9b9b51135aafad1736912df274eda1d3b59f676f", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=86287716e8edba8da03305250e02e23eedc0d754", "patch": "@@ -1350,7 +1350,7 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n   else if (TREE_CODE (stmt) == DECL_EXPR)\n     {\n       tree d = DECL_EXPR_DECL (stmt);\n-      if (TREE_CODE (d) == VAR_DECL)\n+      if (VAR_P (d))\n \tgcc_assert (CP_DECL_THREAD_LOCAL_P (d) == DECL_THREAD_LOCAL_P (d));\n     }\n   else if (TREE_CODE (stmt) == OMP_PARALLEL"}, {"sha": "8c701ff705e7bbb82c7325e7d5c3a5d71b52c9e7", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=86287716e8edba8da03305250e02e23eedc0d754", "patch": "@@ -2788,7 +2788,7 @@ pp_cxx_check_constraint (cxx_pretty_printer *pp, tree t)\n   tree args = CHECK_CONSTR_ARGS (t);\n   tree id = build_nt (TEMPLATE_ID_EXPR, tmpl, args);\n \n-  if (TREE_CODE (decl) == VAR_DECL)\n+  if (VAR_P (decl))\n     pp->expression (id);\n   else if (TREE_CODE (decl) == FUNCTION_DECL)\n     {"}, {"sha": "2418a9d48c1914856977bc0a268af7a547406590", "filename": "gcc/cp/init.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86287716e8edba8da03305250e02e23eedc0d754/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=86287716e8edba8da03305250e02e23eedc0d754", "patch": "@@ -2362,7 +2362,7 @@ warn_placement_new_too_small (tree type, tree nelts, tree size, tree oper)\n      to placement new is not checked since it's unknown what it might\n      point to.  */\n   if (TREE_CODE (oper) == PARM_DECL\n-      || TREE_CODE (oper) == VAR_DECL\n+      || VAR_P (oper)\n       || TREE_CODE (oper) == COMPONENT_REF)\n     return;\n \n@@ -2435,13 +2435,13 @@ warn_placement_new_too_small (tree type, tree nelts, tree size, tree oper)\n     {\n       tree op0 = oper;\n       while (TREE_CODE (op0 = TREE_OPERAND (op0, 0)) == COMPONENT_REF);\n-      if (TREE_CODE (op0) == VAR_DECL)\n+      if (VAR_P (op0))\n \tvar_decl = op0;\n       oper = TREE_OPERAND (oper, 1);\n     }\n \n   if ((addr_expr || !POINTER_TYPE_P (TREE_TYPE (oper)))\n-      && (TREE_CODE (oper) == VAR_DECL\n+      && (VAR_P (oper)\n \t  || TREE_CODE (oper) == FIELD_DECL\n \t  || TREE_CODE (oper) == PARM_DECL))\n     {\n@@ -2455,7 +2455,7 @@ warn_placement_new_too_small (tree type, tree nelts, tree size, tree oper)\n       /* Treat members of unions and members of structs uniformly, even\n \t though the size of a member of a union may be viewed as extending\n \t to the end of the union itself (it is by __builtin_object_size).  */\n-      if ((TREE_CODE (oper) == VAR_DECL || use_obj_size)\n+      if ((VAR_P (oper) || use_obj_size)\n \t  && DECL_SIZE_UNIT (oper)\n \t  && tree_fits_uhwi_p (DECL_SIZE_UNIT (oper)))\n \t{"}]}