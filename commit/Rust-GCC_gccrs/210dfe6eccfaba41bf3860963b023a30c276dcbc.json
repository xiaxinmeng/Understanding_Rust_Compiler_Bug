{"sha": "210dfe6eccfaba41bf3860963b023a30c276dcbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwZGZlNmVjY2ZhYmE0MWJmMzg2MDk2M2IwMjNhMzBjMjc2ZGNiYw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-11-25T04:54:59Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-11-25T04:54:59Z"}, "message": "[multiple changes]\n\n2005-11-25  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/24990\n        * fold-const.c (fold_binary): Fold (~a) == C to a == ~C\n        for C being INTEGER_CST.  Likewise for !=.\n2005-11-24  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/24990\n        * tree-ssa/pr24990-1.c: New test.\n\nFrom-SVN: r107487", "tree": {"sha": "ce051b7b6a061d6d5ab22d134d04e47bb4ba286b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce051b7b6a061d6d5ab22d134d04e47bb4ba286b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/210dfe6eccfaba41bf3860963b023a30c276dcbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210dfe6eccfaba41bf3860963b023a30c276dcbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/210dfe6eccfaba41bf3860963b023a30c276dcbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210dfe6eccfaba41bf3860963b023a30c276dcbc/comments", "author": null, "committer": null, "parents": [{"sha": "4ca6f88ae88df2e1a41c728d2ced1763b026c854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca6f88ae88df2e1a41c728d2ced1763b026c854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ca6f88ae88df2e1a41c728d2ced1763b026c854"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "aeb45fdd654c86b09ae2e3f9ced3bcb5d7f6533b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210dfe6eccfaba41bf3860963b023a30c276dcbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210dfe6eccfaba41bf3860963b023a30c276dcbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=210dfe6eccfaba41bf3860963b023a30c276dcbc", "patch": "@@ -1,3 +1,9 @@\n+2005-11-25  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/24990\n+\t* fold-const.c (fold_binary): Fold (~a) == C to a == ~C\n+\tfor C being INTEGER_CST.  Likewise for !=.\n+\n 2005-11-25  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR middle-end/24998"}, {"sha": "962ebd3c39525be89f0c71f6ee667578b922dc69", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210dfe6eccfaba41bf3860963b023a30c276dcbc/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210dfe6eccfaba41bf3860963b023a30c276dcbc/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=210dfe6eccfaba41bf3860963b023a30c276dcbc", "patch": "@@ -8839,6 +8839,13 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n       /* If one arg is a real or integer constant, put it last.  */\n       if (tree_swap_operands_p (arg0, arg1, true))\n \treturn fold_build2 (swap_tree_comparison (code), type, op1, op0);\n+\n+      /*  ~a != C becomes a != ~C where C is a constant.  Likewise for ==.  */\n+      if (TREE_CODE (arg0) == BIT_NOT_EXPR && TREE_CODE (arg1) == INTEGER_CST\n+\t  && (code == NE_EXPR || code == EQ_EXPR))\n+\treturn fold_build2 (code, type, TREE_OPERAND (arg0, 0),\n+\t\t\t    fold_build1 (BIT_NOT_EXPR, TREE_TYPE (arg1), \n+\t\t\t\t\t arg1));\n \t\n       /* bool_var != 0 becomes bool_var. */\n       if (TREE_CODE (TREE_TYPE (arg0)) == BOOLEAN_TYPE && integer_zerop (arg1)"}, {"sha": "cb611dc1edcc4d5cc82d3749e5a569465f3e3680", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210dfe6eccfaba41bf3860963b023a30c276dcbc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210dfe6eccfaba41bf3860963b023a30c276dcbc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=210dfe6eccfaba41bf3860963b023a30c276dcbc", "patch": "@@ -1,3 +1,8 @@\n+2005-11-24  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/24990\n+\t* tree-ssa/pr24990-1.c: New test.\n+\n 2005-11-24  Richard Guenther  <rguenther@suse.de>\n \tDirk Mueller <dmueller@suse.de>\n "}, {"sha": "a518df025f6ed343fb2af764cc89e9188396b609", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr24990-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210dfe6eccfaba41bf3860963b023a30c276dcbc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24990-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210dfe6eccfaba41bf3860963b023a30c276dcbc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24990-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24990-1.c?ref=210dfe6eccfaba41bf3860963b023a30c276dcbc", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-optimized\" } */\n+\n+int f(int x)\n+{\n+  return ((~x) != 0);\n+}\n+int f1(int x)\n+{\n+  return ((~x) == 0);\n+}\n+\n+/* There should be no != 0 which is produced by the front-end as\n+   ~x != 0 is the same as x != -1 (or ~0).   Likewise for ==. */\n+/* { dg-final { scan-tree-dump-times \"!= 0\" 0 \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-times \"!= -1\" 1 \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-times \"== 0\" 0 \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-times \"== -1\" 1 \"optimized\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+"}]}