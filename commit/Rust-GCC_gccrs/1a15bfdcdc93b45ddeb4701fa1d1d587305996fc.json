{"sha": "1a15bfdcdc93b45ddeb4701fa1d1d587305996fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWExNWJmZGNkYzkzYjQ1ZGRlYjQ3MDFmYTFkMWQ1ODczMDU5OTZmYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-08-14T15:07:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-08-14T15:07:43Z"}, "message": "ipa-prop.c (compute_complex_pass_through): If we cannot compute a non-varying offset for IPA_JF_ANCESTOR punt.\n\n2009-08-14  Richard Guenther  <rguenther@suse.de>\n\n\t* ipa-prop.c (compute_complex_pass_through): If we cannot\n\tcompute a non-varying offset for IPA_JF_ANCESTOR punt.\n\n\t* gcc.c-torture/execute/20090814-1.c: New testcase.\n\nFrom-SVN: r150757", "tree": {"sha": "eed72790b8da7b6241bcc9287b383b2ba96bc6fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eed72790b8da7b6241bcc9287b383b2ba96bc6fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "065312cfdd633dae0cf725104e07a2c05e2747e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/065312cfdd633dae0cf725104e07a2c05e2747e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/065312cfdd633dae0cf725104e07a2c05e2747e7"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "6aa16eff0de8192744f78f4d8038621217e299d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a15bfdcdc93b45ddeb4701fa1d1d587305996fc", "patch": "@@ -1,3 +1,8 @@\n+2009-08-14  Richard Guenther  <rguenther@suse.de>\n+\n+\t* ipa-prop.c (compute_complex_pass_through): If we cannot\n+\tcompute a non-varying offset for IPA_JF_ANCESTOR punt.\n+\n 2009-08-14  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* c-lex.c (c_lex_with_flags): Increase size of local variable"}, {"sha": "23710067ee7852da72f5c9ef51279bc4c9bd113a", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=1a15bfdcdc93b45ddeb4701fa1d1d587305996fc", "patch": "@@ -377,7 +377,10 @@ compute_complex_pass_through (struct ipa_node_params *info,\n   type = TREE_TYPE (op1);\n \n   op1 = get_ref_base_and_extent (op1, &offset, &size, &max_size);\n-  if (TREE_CODE (op1) != INDIRECT_REF)\n+  if (TREE_CODE (op1) != INDIRECT_REF\n+      /* If this is a varying address, punt.  */\n+      || max_size == -1\n+      || max_size != size)\n     return;\n   op1 = TREE_OPERAND (op1, 0);\n   if (TREE_CODE (op1) != SSA_NAME"}, {"sha": "765ae6354ccffcd41ad674a46f68160cd7935ff6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a15bfdcdc93b45ddeb4701fa1d1d587305996fc", "patch": "@@ -1,3 +1,7 @@\n+2009-08-14  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.c-torture/execute/20090814-1.c: New testcase.\n+\n 2009-08-14  David Edelsohn  <edelsohn@gnu.org>\n \n \t* gcc.dg/graphite/graphite_autopar: Move to libgomp testsuite."}, {"sha": "857393b5760cb555fb44d049e54b518dd6254781", "filename": "gcc/testsuite/gcc.c-torture/execute/20090814-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20090814-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a15bfdcdc93b45ddeb4701fa1d1d587305996fc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20090814-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20090814-1.c?ref=1a15bfdcdc93b45ddeb4701fa1d1d587305996fc", "patch": "@@ -0,0 +1,23 @@\n+int __attribute__((noinline))\n+bar (int *a)\n+{\n+  return *a;\n+}\n+int i;\n+int __attribute__((noinline))\n+foo (int (*a)[2])\n+{\n+  return bar (&(*a)[i]);\n+}\n+\n+extern void abort (void);\n+int a[2];\n+int main()\n+{\n+  a[0] = -1;\n+  a[1] = 42;\n+  i = 1;\n+  if (foo (&a) != 42)\n+    abort ();\n+  return 0;\n+}"}]}