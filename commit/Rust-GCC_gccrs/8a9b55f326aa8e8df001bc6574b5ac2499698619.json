{"sha": "8a9b55f326aa8e8df001bc6574b5ac2499698619", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE5YjU1ZjMyNmFhOGU4ZGYwMDFiYzY1NzRiNWFjMjQ5OTY5ODYxOQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-04-14T08:38:20Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-04-14T08:38:20Z"}, "message": "re PR target/44643 ([avr] ICE in c-typeck.c)\n\n\tPR target/44643\n\t* config/avr/avr.c (avr_insert_attributes): Leave TREE_READONLY\n\talone. Error if non-const data has attribute progmem.\n\nFrom-SVN: r172415", "tree": {"sha": "7afe13e05b7c615bf22639576d22fc202e4c786c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7afe13e05b7c615bf22639576d22fc202e4c786c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a9b55f326aa8e8df001bc6574b5ac2499698619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a9b55f326aa8e8df001bc6574b5ac2499698619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a9b55f326aa8e8df001bc6574b5ac2499698619", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a9b55f326aa8e8df001bc6574b5ac2499698619/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94bd18251335d1f63e0b89e2572183a2b8775ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94bd18251335d1f63e0b89e2572183a2b8775ffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94bd18251335d1f63e0b89e2572183a2b8775ffc"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "6ca6b2852ebe2c54ea50a43edd1e71227b446fa0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a9b55f326aa8e8df001bc6574b5ac2499698619/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a9b55f326aa8e8df001bc6574b5ac2499698619/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a9b55f326aa8e8df001bc6574b5ac2499698619", "patch": "@@ -1,3 +1,9 @@\n+2011-04-14  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/44643\n+\t* config/avr/avr.c (avr_insert_attributes): Leave TREE_READONLY\n+\talone. Error if non-const data has attribute progmem.\n+\n 2011-04-13  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree.h (struct tree_constructor): Include tree_typed instead of"}, {"sha": "ca06431aa83497fd53b6da4e94917c5201b33c5e", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a9b55f326aa8e8df001bc6574b5ac2499698619/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a9b55f326aa8e8df001bc6574b5ac2499698619/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=8a9b55f326aa8e8df001bc6574b5ac2499698619", "patch": "@@ -5149,14 +5149,20 @@ avr_insert_attributes (tree node, tree *attributes)\n       && (TREE_STATIC (node) || DECL_EXTERNAL (node))\n       && avr_progmem_p (node, *attributes))\n     {\n-      static const char dsec[] = \".progmem.data\";\n-      *attributes = tree_cons (get_identifier (\"section\"),\n-\t\tbuild_tree_list (NULL, build_string (strlen (dsec), dsec)),\n-\t\t*attributes);\n-\n-      /* ??? This seems sketchy.  Why can't the user declare the\n-\t thing const in the first place?  */\n-      TREE_READONLY (node) = 1;\n+      if (TREE_READONLY (node)) \n+        {\n+          static const char dsec[] = \".progmem.data\";\n+\n+          *attributes = tree_cons (get_identifier (\"section\"),\n+                                   build_tree_list (NULL, build_string (strlen (dsec), dsec)),\n+                                   *attributes);\n+        }\n+      else\n+        {\n+          error (\"variable %q+D must be const in order to be put into\"\n+                 \" read-only section by means of %<__attribute__((progmem))%>\",\n+                 node);\n+        }\n     }\n }\n "}]}