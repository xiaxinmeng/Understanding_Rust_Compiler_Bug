{"sha": "4bfe969bc7dfff5a23631285f5a667db3b18a9a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJmZTk2OWJjN2RmZmY1YTIzNjMxMjg1ZjVhNjY3ZGIzYjE4YTlhMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-20T01:37:50Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-20T01:37:50Z"}, "message": "Change all hardcoded references of \"vax\" to use variable expansion instead.\n\n(arch_indx, arch): New variables.\n\nFrom-SVN: r13532", "tree": {"sha": "038eb018d3397e5b70eef63253c8874081c9b344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/038eb018d3397e5b70eef63253c8874081c9b344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bfe969bc7dfff5a23631285f5a667db3b18a9a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfe969bc7dfff5a23631285f5a667db3b18a9a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bfe969bc7dfff5a23631285f5a667db3b18a9a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfe969bc7dfff5a23631285f5a667db3b18a9a1/comments", "author": null, "committer": null, "parents": [{"sha": "c14685bf851bfa4cff9bf439385142a747756a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14685bf851bfa4cff9bf439385142a747756a7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c14685bf851bfa4cff9bf439385142a747756a7e"}], "stats": {"total": 59, "additions": 37, "deletions": 22}, "files": [{"sha": "088a49568876805af278054c6a35b781df215d62", "filename": "gcc/vmsconfig.com", "status": "modified", "additions": 37, "deletions": 22, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfe969bc7dfff5a23631285f5a667db3b18a9a1/gcc%2Fvmsconfig.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfe969bc7dfff5a23631285f5a667db3b18a9a1/gcc%2Fvmsconfig.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsconfig.com?ref=4bfe969bc7dfff5a23631285f5a667db3b18a9a1", "patch": "@@ -1,5 +1,5 @@\n $ !\n-$ !\tSet up to compile GCC on VAX/VMS\n+$ !\tSet up to compile GCC on VMS.\n $ !\n $! Set the def dir to proper place for use in batch. Works for interactive too.\n $flnm = f$enviroment(\"PROCEDURE\")     ! get current procedure name\n@@ -10,9 +10,12 @@ $if f$trnlnm(\"IFILE$\").nes.\"\" then close/noLog ifile$\n $ !\n $ echo = \"write sys$output\"\n $ !\n+$ arch_indx = 1 + ((f$getsyi(\"CPU\").ge.128).and.1)\t! vax==1, alpha==2\n+$ arch = f$element(arch_indx,\"|\",\"|vax|alpha|\")\n+$ !\n $ if f$search(\"config.h\") .nes. \"\" then delete config.h.*\n-$ copy [.config.vax]xm-vms.h []config.h\n-$ echo \"Linked `config.h' to `[.config.vax]xm-vms.h'.\n+$ copy [.config.'arch']xm-vms.h []config.h\n+$ echo \"Linked `config.h' to `[.config.''arch']xm-vms.h'.\"\n $ !\n $ if f$search(\"tconfig.h\") .nes. \"\" then delete tconfig.h.*\n $ create []tconfig.h\n@@ -31,18 +34,21 @@ $EOD\n $ echo \"Created `hconfig.h'.\n $ !\n $ if f$search(\"tm.h\") .nes. \"\" then delete tm.h.*\n-$!! copy [.config.vax]vms.h []tm.h\n+$!! copy [.config.'arch']vms.h []tm.h\n $ edit/tpu/nojournal/nosection/nodisplay/command=sys$input -\n-        [.config.vax]vms.h /output=[]tm.h\n+        [.config.'arch']vms.h /output=[]tm.h\n $DECK\n !\n !  Copy file, changing lines of the form\n !\t#include \"vax/*\"\n+!  or\n+!\t#include \"alpha/*\"\n !  into\n !\t#include \"config-*\"\n !\n    file := CREATE_BUFFER(\"file\", GET_INFO(COMMAND_LINE, \"file_name\"));\n-   targ := LINE_BEGIN & '#include' & SPAN(ASCII(32)+ASCII(9)) & '\"vax/';\n+   targ := LINE_BEGIN & '#include' & SPAN(ASCII(32)+ASCII(9))\n+\t   & '\"' & ('vax' | 'alpha') & '/';\n    rang := CREATE_RANGE(BEGINNING_OF(file), END_OF(file));\n    LOOP\n       incl := SEARCH_QUIETLY(targ, FORWARD, EXACT, rang);\n@@ -55,24 +61,24 @@ $DECK\n    WRITE_FILE(file, GET_INFO(COMMAND_LINE, \"output_file\"));\n    QUIT\n $EOD\n-$ echo \"Generated `tm.h' from `[.config.vax]vms.h'.\n+$ echo \"Generated `tm.h' from `[.config.''arch']vms.h'.\"\n $ !\n $\t!crude hack to allow compiling from [.cp] subdirectory\n-$ if f$search(\"config-vax.h\") .nes. \"\" then delete config-vax.h;*\n-$ copy [.config.vax]vax.h []config-vax.h\n-$ echo \"Linked `config-vax.h' to `[.config.vax]vax.h' for `tm.h'.\"\n+$ if f$search(\"config-''arch'.h\") .nes. \"\" then delete config-'arch'.h;*\n+$ copy [.config.'arch']'arch'.h []config-'arch'.h\n+$ echo \"Linked `config-''arch'.h' to `[.config.''arch']''arch'.h' for `tm.h'.\"\n $ !\n $ call make_lang_incl \"options.h\"\n $ !\n $ call make_lang_incl \"specs.h\"\n $ !\n-$ if f$search(\"vax.md\") .nes. \"\" then delete vax.md;*\n-$ copy [.config.vax]vax.md []vax.md\n-$ echo \"Copied `vax.md' from `[.config.vax]vax.md'.\"\n+$ if f$search(\"''arch'.md\") .nes. \"\" then delete 'arch'.md;*\n+$ copy [.config.'arch']'arch'.md []'arch'.md\n+$ echo \"Copied `''arch'.md' from `[.config.''arch']''arch'.md'.\"\n $ !\n $ if f$search(\"aux-output.c\") .nes. \"\" then delete aux-output.c.*\n-$ copy [.config.vax]vax.c []aux-output.c\n-$ echo \"Linked `aux-output.c' to `[.config.vax]vax.c'.\n+$ copy [.config.'arch']'arch'.c []aux-output.c\n+$ echo \"Linked `aux-output.c' to `[.config.''arch']''arch'.c'.\n $ !\n $!\n $!\n@@ -103,7 +109,7 @@ $elm=\"?.??\"\n $!\n $!\n $write_ident:\n-$open ifile$ version.opt/write\n+$open/write ifile$ version.opt\n $write ifile$ \"ident=\"+\"\"\"\"+elm+\"\"\"\"\n $close ifile$\n $purge version.opt\n@@ -125,9 +131,11 @@ $if f$search(\"[.cp]Makefile.in\").eqs.\"\" .and. f$search(\"[.cp]$M$akefile.in\").nes\n $!\n $!\n $echo \"Now processing Makefile.in to generate linker option files.\"\n-$edit/TPU/noJournal/noSection/noDisplay/Command=sys$input: Makefile.in\n+$edit/TPU/noJournal/noSection/noDisplay/Command=sys$input: Makefile.in -\n+\t/Start_Position=('arch_indx')\t\t! 1 for vax, 2 for alpha\n !!\n VARIABLE makefile_buf, opt_file_buf, complist_buf, extra_compilers; ! Globals.\n+VARIABLE arch;\t\t! String 'vax' or 'alpha', set in configure_makefile().\n \n !!\n PROCEDURE process_makefile( )\n@@ -220,12 +228,17 @@ PROCEDURE configure_makefile( )\n   ! Plug in some values normally handled by `configure'.  Rather than\n   ! replacing the dummy entries, insert the real entries before them.\n   !\n+  IF (GET_INFO (COMMAND_LINE, 'START_RECORD') <> 2) THEN\n+    arch := 'vax';\n+  ELSE\n+    arch := 'alpha';\n+  ENDIF;\n   POSITION (BEGINNING_OF (makefile_buf));\n-  COPY_TEXT (\"target=vax-vms\");\t\t\tSPLIT_LINE;\n-  COPY_TEXT (\"out_file=aux-output.c\");\t\tSPLIT_LINE;\t! vax/vax.c\n+  COPY_TEXT (\"target=\" + arch + \"-vms\");\tSPLIT_LINE;\n+  COPY_TEXT (\"out_file=aux-output.c\");\t\tSPLIT_LINE;\t! 'arch'/'arch'.c\n   COPY_TEXT (\"out_object_file=aux-output.o\");\tSPLIT_LINE;\t! aux-output.obj\n-  COPY_TEXT (\"md_file=vax.md\");\t\t\tSPLIT_LINE;\t! vax/vax.md\n-  COPY_TEXT (\"tm_file=tm.h\");\t\t\tSPLIT_LINE;\t! vax/tm-vms.h\n+  COPY_TEXT (\"md_file=\" + arch + \".md\");\tSPLIT_LINE;\t! 'arch'/'arch'.md\n+  COPY_TEXT (\"tm_file=tm.h\");\t\t\tSPLIT_LINE;\t! 'arch'/tm-vms.h\n ENDPROCEDURE; !configure_makefile\n !!\n \n@@ -444,7 +457,9 @@ $!\n $!\n $ if f$search(\"config.status\") .nes. \"\" then delete config.status.*\n $ create config.status\n-Links are now set up for use with a vax running VMS.\n+$ open/append ifile$ config.status\n+$ write ifile$ \"Links are now set up for use with a ''arch' running VMS.\"\n+$ close ifile$\n $ type config.status\n $ echo \"\"\n $!"}]}