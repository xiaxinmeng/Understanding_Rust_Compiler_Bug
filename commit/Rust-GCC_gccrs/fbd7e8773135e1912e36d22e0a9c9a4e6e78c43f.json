{"sha": "fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJkN2U4NzczMTM1ZTE5MTJlMzZkMjJlMGE5YzlhNGU2ZTc4YzQzZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-05-28T13:36:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-05-28T13:36:25Z"}, "message": "re PR tree-optimization/56787 (Vectorization fails because of CLOBBER statements)\n\n2013-05-28  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/56787\n\t* tree-vect-data-refs.c (vect_analyze_data_refs): Drop clobbers\n\tfrom the list of data references.\n\t* tree-vect-loop.c (vect_determine_vectorization_factor): Skip\n\tclobbers.\n\t(vect_analyze_loop_operations): Likewise.\n\t(vect_transform_loop): Remove clobbers.\n\n\t* gcc.dg/vect/pr56787.c: New testcase.\n\nFrom-SVN: r199380", "tree": {"sha": "0fe965daa826d92ed1f2160c72a0c984376a261e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fe965daa826d92ed1f2160c72a0c984376a261e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbba11173ac429c0506e8aece7dfa3eea42307a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbba11173ac429c0506e8aece7dfa3eea42307a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbba11173ac429c0506e8aece7dfa3eea42307a8"}], "stats": {"total": 84, "additions": 80, "deletions": 4}, "files": [{"sha": "9f4f85e2fcb43fa3658f7f66498ca07a06264e34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "patch": "@@ -1,3 +1,13 @@\n+2013-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56787\n+\t* tree-vect-data-refs.c (vect_analyze_data_refs): Drop clobbers\n+\tfrom the list of data references.\n+\t* tree-vect-loop.c (vect_determine_vectorization_factor): Skip\n+\tclobbers.\n+\t(vect_analyze_loop_operations): Likewise.\n+\t(vect_transform_loop): Remove clobbers.\n+\n 2013-05-28  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-cfg.c (verify_expr): Verify that BIT_FIELD_REFs, IMAGPART_EXPRs"}, {"sha": "28c6a6da236959fe7f0407f13d13356724dbe4b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "patch": "@@ -1,3 +1,8 @@\n+2013-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56787\n+\t* gcc.dg/vect/pr56787.c: New testcase.\n+\n 2013-05-28  Janus Weil  <janus@gcc.gnu.org>\n \t    Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "313d477492fb7322dd151f1c2be251a2c31ccb9c", "filename": "gcc/testsuite/gcc.dg/vect/pr56787.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr56787.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr56787.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr56787.c?ref=fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n+\n+inline void\n+bar (const float s[5], float z[3][5])\n+{\n+  float a = s[0], b = s[1], c = s[2], d = s[3], e = s[4];\n+  float f = 1.0f / a;\n+  float u = f * b, v = f * c, w = f * d;\n+  float p = 0.4f * (e - 0.5f * (b * u + c * v + d * w));\n+  z[0][3] = b * w;\n+  z[1][3] = c * w;\n+  z[2][3] = d * w + p;\n+}\n+\n+void\n+foo (unsigned long n, const float *__restrict u0,\n+     const float *__restrict u1, const float *__restrict u2,\n+     const float *__restrict u3, const float *__restrict u4,\n+     const float *__restrict s0, const float *__restrict s1,\n+     const float *__restrict s2, float *__restrict t3,\n+     float *__restrict t4)\n+{\n+  unsigned long i;\n+  for (i = 0; i < n; i++)\n+    {\n+      float u[5], f[3][5];\n+      u[0] = u0[i]; u[1] = u1[i]; u[2] = u2[i]; u[3] = u3[i]; u[4] = u4[i];\n+      bar (u, f);\n+      t3[i] = s0[i] * f[0][3] + s1[i] * f[1][3] + s2[i] * f[2][3];\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"vectorized 1 loops\" \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "47ecad3528dc1cbff2becd0e4dd079e513590836", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "patch": "@@ -2861,6 +2861,7 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n       bool gather = false;\n       int vf;\n \n+again:\n       if (!dr || !DR_REF (dr))\n         {\n           if (dump_enabled_p ())\n@@ -2872,6 +2873,19 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n       stmt = DR_STMT (dr);\n       stmt_info = vinfo_for_stmt (stmt);\n \n+      /* Discard clobbers from the dataref vector.  We will remove\n+         clobber stmts during vectorization.  */\n+      if (gimple_clobber_p (stmt))\n+\t{\n+\t  if (i == datarefs.length () - 1)\n+\t    {\n+\t      datarefs.pop ();\n+\t      break;\n+\t    }\n+\t  datarefs[i] = datarefs.pop ();\n+\t  goto again;\n+\t}\n+\n       /* Check that analysis of the data-ref succeeded.  */\n       if (!DR_BASE_ADDRESS (dr) || !DR_OFFSET (dr) || !DR_INIT (dr)\n \t  || !DR_STEP (dr))"}, {"sha": "d3281e4e51b97d4bb1b157c61ef0b87fbdb90851", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "patch": "@@ -270,8 +270,9 @@ vect_determine_vectorization_factor (loop_vec_info loop_vinfo)\n \t  gcc_assert (stmt_info);\n \n \t  /* Skip stmts which do not need to be vectorized.  */\n-\t  if (!STMT_VINFO_RELEVANT_P (stmt_info)\n-\t      && !STMT_VINFO_LIVE_P (stmt_info))\n+\t  if ((!STMT_VINFO_RELEVANT_P (stmt_info)\n+\t       && !STMT_VINFO_LIVE_P (stmt_info))\n+\t      || gimple_clobber_p (stmt))\n             {\n               if (STMT_VINFO_IN_PATTERN_P (stmt_info)\n                   && (pattern_stmt = STMT_VINFO_RELATED_STMT (stmt_info))\n@@ -1431,7 +1432,8 @@ vect_analyze_loop_operations (loop_vec_info loop_vinfo, bool slp)\n       for (si = gsi_start_bb (bb); !gsi_end_p (si); gsi_next (&si))\n         {\n           gimple stmt = gsi_stmt (si);\n-\t  if (!vect_analyze_stmt (stmt, &need_to_vectorize, NULL))\n+\t  if (!gimple_clobber_p (stmt)\n+\t      && !vect_analyze_stmt (stmt, &need_to_vectorize, NULL))\n \t    return false;\n         }\n     } /* bbs */\n@@ -5595,7 +5597,17 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n           if (transform_pattern_stmt)\n \t    stmt = pattern_stmt;\n           else\n-            stmt = gsi_stmt (si);\n+\t    {\n+\t      stmt = gsi_stmt (si);\n+\t      /* During vectorization remove existing clobber stmts.  */\n+\t      if (gimple_clobber_p (stmt))\n+\t\t{\n+\t\t  unlink_stmt_vdef (stmt);\n+\t\t  gsi_remove (&si, true);\n+\t\t  release_defs (stmt);\n+\t\t  continue;\n+\t\t}\n+\t    }\n \n \t  if (dump_enabled_p ())\n \t    {"}]}