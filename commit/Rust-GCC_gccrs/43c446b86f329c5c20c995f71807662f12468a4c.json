{"sha": "43c446b86f329c5c20c995f71807662f12468a4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjNDQ2Yjg2ZjMyOWM1YzIwYzk5NWY3MTgwNzY2MmYxMjQ2OGE0Yw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-08-21T13:13:18Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-08-21T13:13:18Z"}, "message": "re PR target/11805 ([H8300] ICE)\n\n\tPR target/11805\n\t* config/h8300/h8300.md (two anonymous patterns): Remove.\n\t* testsuite/gcc.c-torture/compile/20030821-1.c: New.\n\nFrom-SVN: r70643", "tree": {"sha": "a0bd6473f2f9f1d04d4d139b9f82a8be7f53935e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0bd6473f2f9f1d04d4d139b9f82a8be7f53935e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43c446b86f329c5c20c995f71807662f12468a4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c446b86f329c5c20c995f71807662f12468a4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c446b86f329c5c20c995f71807662f12468a4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c446b86f329c5c20c995f71807662f12468a4c/comments", "author": null, "committer": null, "parents": [{"sha": "7bc224514a62f563e113042440eb8f3a4088aa83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bc224514a62f563e113042440eb8f3a4088aa83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bc224514a62f563e113042440eb8f3a4088aa83"}], "stats": {"total": 71, "additions": 34, "deletions": 37}, "files": [{"sha": "6d8de7de8d77880e60e7b5c417171e59d1d3b523", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c446b86f329c5c20c995f71807662f12468a4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c446b86f329c5c20c995f71807662f12468a4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43c446b86f329c5c20c995f71807662f12468a4c", "patch": "@@ -1,3 +1,8 @@\n+2003-08-21  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR target/11805\n+\t* config/h8300/h8300.md (two anonymous patterns): Remove.\n+\n 2003-08-21  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.h (MUST_PASS_IN_STACK): Remove BLKmode clause."}, {"sha": "b17a03ead80f9762d6f9039d04be54f544f829cf", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c446b86f329c5c20c995f71807662f12468a4c/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c446b86f329c5c20c995f71807662f12468a4c/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=43c446b86f329c5c20c995f71807662f12468a4c", "patch": "@@ -652,43 +652,6 @@\n \t\t\t (match_dup 3)))]\n   \"operands[3] = GEN_INT (INTVAL (operands[1]) - 16);\")\n \n-(define_insn \"\"\n-  [(set (cc0)\n-\t(and:HI (match_operand:HI 0 \"register_operand\" \"r\")\n-\t\t(match_operand:HI 1 \"single_one_operand\" \"n\")))]\n-  \"\"\n-  \"*\n-{\n-  operands[1] = GEN_INT (INTVAL (operands[1]) & 0xffff);\n-  if (INTVAL (operands[1]) > 128)\n-    {\n-      operands[1] = GEN_INT (INTVAL (operands[1]) >> 8);\n-      return \\\"btst\\\\t%V1,%t0\\\";\n-    }\n-  return \\\"btst\\\\t%V1,%s0\\\";\n-}\"\n-  [(set_attr \"length\" \"2\")\n-   (set_attr \"cc\" \"set_zn\")])\n-\n-(define_insn \"\"\n-  [(set (cc0)\n-\t(and:SI (match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t(match_operand:SI 1 \"single_one_operand\" \"n\")))]\n-  \"(TARGET_H8300H || TARGET_H8300S)\n-   && (INTVAL (operands[1]) & 0xffff) != 0\"\n-  \"*\n-{\n-  operands[1] = GEN_INT (INTVAL (operands[1]) & 0xffff);\n-  if (INTVAL (operands[1]) > 128)\n-    {\n-      operands[1] = GEN_INT (INTVAL (operands[1]) >> 8);\n-      return \\\"btst\\\\t%V1,%x0\\\";\n-    }\n-  return \\\"btst\\\\t%V1,%w0\\\";\n-}\"\n-  [(set_attr \"length\" \"2\")\n-   (set_attr \"cc\" \"set_zn\")])\n-\n (define_insn \"tstqi\"\n   [(set (cc0) (match_operand:QI 0 \"register_operand\" \"r\"))]\n   \"\""}, {"sha": "65d03080db4c90f7ee5dbbc3b998b83b0d06e9ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c446b86f329c5c20c995f71807662f12468a4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c446b86f329c5c20c995f71807662f12468a4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43c446b86f329c5c20c995f71807662f12468a4c", "patch": "@@ -1,3 +1,8 @@\n+2003-08-21  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR target/11805\n+\t* gcc.c-torture/compile/20030821-1.c: New.\n+\n 2003-08-20  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/11834"}, {"sha": "34700ae181fbfc6703ad74744b6fdc3636555a0d", "filename": "gcc/testsuite/gcc.c-torture/compile/20030821-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c446b86f329c5c20c995f71807662f12468a4c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030821-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c446b86f329c5c20c995f71807662f12468a4c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030821-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030821-1.c?ref=43c446b86f329c5c20c995f71807662f12468a4c", "patch": "@@ -0,0 +1,24 @@\n+/* PR target/11805.  */\n+\n+/* Consider the following sequence.\n+\n+     (set (cc0)\n+\t  (and:HI (reg:HI 0)\n+\t\t  (const_int 1)))\n+\n+     (set (pc)\n+\t  (if_then_else (le (cc0)\n+\t\t\t    (const_int 0))\n+\t\t\t(label_ref 17)\n+\t\t\t(pc)))\n+\n+   On h8300, the first insn does not set the overflow flag, but the\n+   second requires the overflow flag.  As a result, when the final\n+   wants to output the jump insn, it cannot find a test insn that\n+   gives appropriate condition flags.  */\n+\n+unsigned char\n+foo (unsigned char a)\n+{\n+  return (a & 1) > 0;\n+}"}]}