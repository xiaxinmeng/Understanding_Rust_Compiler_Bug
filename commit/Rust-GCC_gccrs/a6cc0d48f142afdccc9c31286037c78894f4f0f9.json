{"sha": "a6cc0d48f142afdccc9c31286037c78894f4f0f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjYzBkNDhmMTQyYWZkY2NjOWMzMTI4NjAzN2M3ODg5NGY0ZjBmOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-01-11T23:33:39Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-01-11T23:33:39Z"}, "message": "h8300.h (TARGET_ALIGN_STRUCT_300): New macro.\n\n\t* h8300/h8300.h (TARGET_ALIGN_STRUCT_300): New macro.\n\t(TARGET_SWITCHES): Add -malign-struct-300.\n\t(BIGGEST_FIELD_ALIGNMENT): Update.\n\nFrom-SVN: r10966", "tree": {"sha": "09467a74fd6dea885fa6d694d075352826c5a34a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09467a74fd6dea885fa6d694d075352826c5a34a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6cc0d48f142afdccc9c31286037c78894f4f0f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cc0d48f142afdccc9c31286037c78894f4f0f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6cc0d48f142afdccc9c31286037c78894f4f0f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cc0d48f142afdccc9c31286037c78894f4f0f9/comments", "author": null, "committer": null, "parents": [{"sha": "332dd867ee91e173482c9161ac015be93f7f15c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/332dd867ee91e173482c9161ac015be93f7f15c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/332dd867ee91e173482c9161ac015be93f7f15c3"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "3996bf4b35f25989ae4a41867ada327ef5ac1bd0", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cc0d48f142afdccc9c31286037c78894f4f0f9/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cc0d48f142afdccc9c31286037c78894f4f0f9/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=a6cc0d48f142afdccc9c31286037c78894f4f0f9", "patch": "@@ -80,6 +80,13 @@ extern int target_flags;\n #define TARGET_H8300\t(! TARGET_H8300H)\n #define TARGET_H8300H\t(target_flags & 4096)\n \n+/* Align structures on the h8/300h the same way as the h8/300.  Specifically,\n+   32 bit and larger values in structures are aligned on 16 bit boundaries.\n+   This is all the hardware requires, but the default is 32 bits for the 300h.\n+   ??? Now watch someone add hardware floating point requiring 32 bit\n+   alignment.  */\n+#define TARGET_ALIGN_STRUCT_300 (target_flags & 8192)\n+\n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n    each pair being { \"NAME\", VALUE }\n@@ -96,7 +103,7 @@ extern int target_flags;\n     {\"rtl-dump\",2048},\t\t\\\n     {\"h\",4096},\t\t\t\\\n     {\"no-h\",-4096},\t\t\\\n-    {\"exp\",8192},\t\t\\\n+    {\"align-struct-300\",8192},\t\\\n     { \"\", TARGET_DEFAULT}}\n \n /* Do things that must be done once at start up.  */\n@@ -177,16 +184,21 @@ do {\t\t\t\t\\\n #define FUNCTION_BOUNDARY 16\n \n /* Alignment of field after `int : 0' in a structure.  */\n+/* One can argue this should be 32 for -mint32, but since 32 bit ints only\n+   need 16 bit alignment, this is left as is so that -mint32 doesn't change\n+   structure layouts.  */\n #define EMPTY_FIELD_BOUNDARY 16\n \n /* A bitfield declared as `int' forces `int' alignment for the struct.  */\n #define PCC_BITFIELD_TYPE_MATTERS  0\n \n-/* No data type wants to be aligned rounder than this.  */\n+/* No data type wants to be aligned rounder than this.\n+   32 bit values are aligned as such on the 300h for speed.  */\n #define BIGGEST_ALIGNMENT (TARGET_H8300H ? 32 : 16)\n \n /* No structure field wants to be aligned rounder than this.  */\n-#define BIGGEST_FIELD_ALIGNMENT (TARGET_H8300H ? 32 : 16)\n+#define BIGGEST_FIELD_ALIGNMENT \\\n+((TARGET_H8300H && ! TARGET_ALIGN_STRUCT_300) ? 32 : 16)\n \n /* The stack goes in 16/32 bit lumps.  */\n #define STACK_BOUNDARY (TARGET_H8300 ? 16 : 32)"}]}