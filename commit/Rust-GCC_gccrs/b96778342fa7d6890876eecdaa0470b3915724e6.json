{"sha": "b96778342fa7d6890876eecdaa0470b3915724e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk2Nzc4MzQyZmE3ZDY4OTA4NzZlZWNkYWEwNDcwYjM5MTU3MjRlNg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2018-12-14T20:06:15Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2018-12-14T20:06:15Z"}, "message": "[PR86823] retain deferred access checks from outside firewall\n\nWe used to preserve deferred access check along with resolved template\nids, but a tentative parsing firewall introduced additional layers of\ndeferred access checks, so that we don't preserve the checks we\nwant to any more.\n\nThis patch moves the deferred access checks from outside the firewall\ninto it.\n\n\nFrom: Jason Merrill <jason@redhat.com>\nfor  gcc/cp/ChangeLog\n\n\tPR c++/86823\n\t* parser.c (cp_parser_template_id): Rearrange deferred access\n\tchecks into the firewall.\n\nFrom: Alexandre Oliva <aoliva@redhat.com>\nfor  gcc/testsuite/ChangeLog\n\n\tPR c++/86823\n\t* g++.dg/pr86823.C: New.\n\nFrom-SVN: r267144", "tree": {"sha": "62705ec239a3cab52c9b845c189440d116f5119c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62705ec239a3cab52c9b845c189440d116f5119c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b96778342fa7d6890876eecdaa0470b3915724e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96778342fa7d6890876eecdaa0470b3915724e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b96778342fa7d6890876eecdaa0470b3915724e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96778342fa7d6890876eecdaa0470b3915724e6/comments", "author": null, "committer": null, "parents": [{"sha": "0fca07e31dc85bea3b1d669d7cc1d51d22192335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fca07e31dc85bea3b1d669d7cc1d51d22192335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fca07e31dc85bea3b1d669d7cc1d51d22192335"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "0467ca277613e6f41f9e072a29e749e5394fce97", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96778342fa7d6890876eecdaa0470b3915724e6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96778342fa7d6890876eecdaa0470b3915724e6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b96778342fa7d6890876eecdaa0470b3915724e6", "patch": "@@ -1,3 +1,9 @@\n+2018-12-14  Jason Merrill <jason@redhat.com>\n+\n+\tPR c++/86823\n+\t* parser.c (cp_parser_template_id): Rearrange deferred access\n+\tchecks into the firewall.\n+\n 2018-12-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/82294"}, {"sha": "b57e35d04c5b32b43705d00411f4b3fae72ff24d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96778342fa7d6890876eecdaa0470b3915724e6/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96778342fa7d6890876eecdaa0470b3915724e6/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=b96778342fa7d6890876eecdaa0470b3915724e6", "patch": "@@ -16187,16 +16187,18 @@ cp_parser_template_id (cp_parser *parser,\n \t\t\t\t   is_declaration,\n \t\t\t\t   tag_type,\n \t\t\t\t   &is_identifier);\n+\n+  /* Push any access checks inside the firewall we're about to create.  */\n+  vec<deferred_access_check, va_gc> *checks = get_deferred_access_checks ();\n+  pop_deferring_access_checks ();\n   if (templ == error_mark_node || is_identifier)\n-    {\n-      pop_deferring_access_checks ();\n-      return templ;\n-    }\n+    return templ;\n \n   /* Since we're going to preserve any side-effects from this parse, set up a\n      firewall to protect our callers from cp_parser_commit_to_tentative_parse\n      in the template arguments.  */\n   tentative_firewall firewall (parser);\n+  reopen_deferring_access_checks (checks);\n \n   /* If we find the sequence `[:' after a template-name, it's probably\n      a digraph-typo for `< ::'. Substitute the tokens and check if we can"}, {"sha": "4af1cf9423d2c3108b7420d4aacddb943299df01", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96778342fa7d6890876eecdaa0470b3915724e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96778342fa7d6890876eecdaa0470b3915724e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b96778342fa7d6890876eecdaa0470b3915724e6", "patch": "@@ -1,3 +1,8 @@\n+2018-12-14  Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR c++/86823\n+\t* g++.dg/pr86823.C: New.\n+\n 2018-12-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/82294"}, {"sha": "18914b00aa8dcd80d9ca5d8f7849ece2958d18a2", "filename": "gcc/testsuite/g++.dg/pr86823.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96778342fa7d6890876eecdaa0470b3915724e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86823.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96778342fa7d6890876eecdaa0470b3915724e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86823.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86823.C?ref=b96778342fa7d6890876eecdaa0470b3915724e6", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile }\n+\n+struct X {\n+private:\n+  template<typename T>\n+  struct Y {\n+    int data;\n+  };\n+public:\n+  int value;\n+};\n+\n+int main() {\n+  typename X::Y<int> a; // { dg-error \"private\" }\n+}"}]}