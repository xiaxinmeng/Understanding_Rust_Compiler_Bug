{"sha": "dd9c8f644f0f1ac2000108ac369b991664946304", "node_id": "C_kwDOANBUbNoAKGRkOWM4ZjY0NGYwZjFhYzIwMDAxMDhhYzM2OWI5OTE2NjQ5NDYzMDQ", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-09-20T20:06:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-10-01T03:45:08Z"}, "message": "c++: loop through array CONSTRUCTOR\n\nI noticed that we were ignoring all the special rules for when to use a\nsimple INIT_EXPR for array initialization from a CONSTRUCTOR, because\nsplit_nonconstant_init_1 was also passing 1 to the from_array parameter.\nArguably that's the real bug, but I think we can be flexible.\n\nThe test that I noticed this with no longer fails without it.\n\ngcc/cp/ChangeLog:\n\n\t* init.cc (build_vec_init): Clear from_array for CONSTRUCTOR\n\tinitializer.", "tree": {"sha": "2800429f8d45544895f10aac2254578d2f84ee1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2800429f8d45544895f10aac2254578d2f84ee1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd9c8f644f0f1ac2000108ac369b991664946304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9c8f644f0f1ac2000108ac369b991664946304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd9c8f644f0f1ac2000108ac369b991664946304", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9c8f644f0f1ac2000108ac369b991664946304/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8cb417d6a4e2912d15a6d8bdffd1548cc649b49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cb417d6a4e2912d15a6d8bdffd1548cc649b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8cb417d6a4e2912d15a6d8bdffd1548cc649b49"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "bf46578c08b1a4c4a5f990c1f3e016da708d8d89", "filename": "gcc/cp/init.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9c8f644f0f1ac2000108ac369b991664946304/gcc%2Fcp%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9c8f644f0f1ac2000108ac369b991664946304/gcc%2Fcp%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.cc?ref=dd9c8f644f0f1ac2000108ac369b991664946304", "patch": "@@ -4394,6 +4394,10 @@ build_vec_init (tree base, tree maxindex, tree init,\n \t}\n     }\n \n+  /* from_array doesn't apply to initialization from CONSTRUCTOR.  */\n+  if (init && TREE_CODE (init) == CONSTRUCTOR)\n+    from_array = 0;\n+\n   /* If we have a braced-init-list or string constant, make sure that the array\n      is big enough for all the initializers.  */\n   bool length_check = (init\n@@ -4493,7 +4497,7 @@ build_vec_init (tree base, tree maxindex, tree init,\n   /* If initializing one array from another, initialize element by\n      element.  We rely upon the below calls to do the argument\n      checking.  Evaluate the initializer before entering the try block.  */\n-  if (from_array && init && TREE_CODE (init) != CONSTRUCTOR)\n+  if (from_array)\n     {\n       if (lvalue_kind (init) & clk_rvalueref)\n \txvalue = true;"}]}