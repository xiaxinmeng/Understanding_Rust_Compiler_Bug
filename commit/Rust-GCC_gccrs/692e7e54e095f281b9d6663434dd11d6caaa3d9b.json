{"sha": "692e7e54e095f281b9d6663434dd11d6caaa3d9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkyZTdlNTRlMDk1ZjI4MWI5ZDY2NjM0MzRkZDExZDZjYWFhM2Q5Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-05T08:04:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-05T08:04:49Z"}, "message": "re PR middle-end/87852 (FAIL: gcc.c-torture/execute/pr53465.c)\n\n2018-11-05  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/87852\n\t* fwprop.c (use_killed_between): Only consider single-defs of the\n\tuse whose definition statement dominates the use.\n\nFrom-SVN: r265791", "tree": {"sha": "8490f0de089656778d55be2076e56b803a60cf85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8490f0de089656778d55be2076e56b803a60cf85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/692e7e54e095f281b9d6663434dd11d6caaa3d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692e7e54e095f281b9d6663434dd11d6caaa3d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/692e7e54e095f281b9d6663434dd11d6caaa3d9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692e7e54e095f281b9d6663434dd11d6caaa3d9b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b008f16b7a279da845070dce786ea3afd5925364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b008f16b7a279da845070dce786ea3afd5925364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b008f16b7a279da845070dce786ea3afd5925364"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "b3a25674cee11fb9bf56ddf2e13159e759f34939", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/692e7e54e095f281b9d6663434dd11d6caaa3d9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/692e7e54e095f281b9d6663434dd11d6caaa3d9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=692e7e54e095f281b9d6663434dd11d6caaa3d9b", "patch": "@@ -1,3 +1,9 @@\n+2018-11-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/87852\n+\t* fwprop.c (use_killed_between): Only consider single-defs of the\n+\tuse whose definition statement dominates the use.\n+\n 2018-11-05  Martin Liska  <mliska@suse.cz>\n \n \tPR web/87829"}, {"sha": "78c08e0a9dfaf895a31fea41cbad1b046bb86a3f", "filename": "gcc/fwprop.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/692e7e54e095f281b9d6663434dd11d6caaa3d9b/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/692e7e54e095f281b9d6663434dd11d6caaa3d9b/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=692e7e54e095f281b9d6663434dd11d6caaa3d9b", "patch": "@@ -731,14 +731,15 @@ local_ref_killed_between_p (df_ref ref, rtx_insn *from, rtx_insn *to)\n }\n \n \n-/* Check if the given DEF is available in INSN.  This would require full\n-   computation of available expressions; we check only restricted conditions:\n-   - if DEF is the sole definition of its register, go ahead;\n-   - in the same basic block, we check for no definitions killing the\n-     definition of DEF_INSN;\n-   - if USE's basic block has DEF's basic block as the sole predecessor,\n-     we check if the definition is killed after DEF_INSN or before\n+/* Check if USE is killed between DEF_INSN and TARGET_INSN.  This would\n+   require full computation of available expressions; we check only a few\n+   restricted conditions:\n+   - if the reg in USE has only one definition, go ahead;\n+   - in the same basic block, we check for no definitions killing the use;\n+   - if TARGET_INSN's basic block has DEF_INSN's basic block as its sole\n+     predecessor, we check if the use is killed after DEF_INSN or before\n      TARGET_INSN insn, in their respective basic blocks.  */\n+\n static bool\n use_killed_between (df_ref use, rtx_insn *def_insn, rtx_insn *target_insn)\n {\n@@ -762,12 +763,17 @@ use_killed_between (df_ref use, rtx_insn *def_insn, rtx_insn *target_insn)\n      know that this definition reaches use, or we wouldn't be here.\n      However, this is invalid for hard registers because if they are\n      live at the beginning of the function it does not mean that we\n-     have an uninitialized access.  */\n+     have an uninitialized access.  And we have to check for the case\n+     where a register may be used uninitialized in a loop as above.  */\n   regno = DF_REF_REGNO (use);\n   def = DF_REG_DEF_CHAIN (regno);\n   if (def\n       && DF_REF_NEXT_REG (def) == NULL\n-      && regno >= FIRST_PSEUDO_REGISTER)\n+      && regno >= FIRST_PSEUDO_REGISTER\n+      && (BLOCK_FOR_INSN (DF_REF_INSN (def)) == def_bb\n+\t  ? DF_INSN_LUID (DF_REF_INSN (def)) < DF_INSN_LUID (def_insn)\n+\t  : dominated_by_p (CDI_DOMINATORS,\n+\t\t\t    def_bb, BLOCK_FOR_INSN (DF_REF_INSN (def)))))\n     return false;\n \n   /* Check locally if we are in the same basic block.  */"}]}