{"sha": "13af526d4f317b9a8ac4cb1d3d66a6c160da6ca7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNhZjUyNmQ0ZjMxN2I5YThhYzRjYjFkM2Q2NmE2YzE2MGRhNmNhNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-24T06:43:37Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-24T06:43:37Z"}, "message": "(all_ones_mask_p): Really use tmask.\n\n(all_ones_mask_p): Declare tmask to be `tree'.\n(optimize_bit_field_compare) Add missing semicolon.\n\n(decode_field_reference): Use force_fit_type\ninstead of convert to avoid truncated integer warning.\n(all_ones_mask_p): Likewise.\n\nFrom-SVN: r3519", "tree": {"sha": "0575a6ad99ddeb3882b85e89c9b0d6ebd0437430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0575a6ad99ddeb3882b85e89c9b0d6ebd0437430"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13af526d4f317b9a8ac4cb1d3d66a6c160da6ca7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13af526d4f317b9a8ac4cb1d3d66a6c160da6ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13af526d4f317b9a8ac4cb1d3d66a6c160da6ca7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13af526d4f317b9a8ac4cb1d3d66a6c160da6ca7/comments", "author": null, "committer": null, "parents": [{"sha": "44735512c91eed6880c4de2c01f903c48f6f3013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44735512c91eed6880c4de2c01f903c48f6f3013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44735512c91eed6880c4de2c01f903c48f6f3013"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "e659a3669dd5a8a57ff52df0a270f2f8ed0b95ea", "filename": "gcc/fold-const.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13af526d4f317b9a8ac4cb1d3d66a6c160da6ca7/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13af526d4f317b9a8ac4cb1d3d66a6c160da6ca7/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=13af526d4f317b9a8ac4cb1d3d66a6c160da6ca7", "patch": "@@ -2294,7 +2294,10 @@ optimize_bit_field_compare (code, compare_type, lhs, rhs)\n #endif\n \n   /* Make the mask to be used against the extracted field.  */\n-  mask = convert (unsigned_type, build_int_2 (~0, ~0));\n+  mask = build_int_2 (~0, ~0);\n+  TREE_TYPE (mask) = unsigned_type;\n+  force_fit_type (mask);\n+  mask = convert (unsigned_type, mask);\n   mask = const_binop (LSHIFT_EXPR, mask, size_int (lnbitsize - lbitsize), 0);\n   mask = const_binop (RSHIFT_EXPR, mask,\n \t\t      size_int (lnbitsize - lbitsize - lbitpos), 0);\n@@ -2451,13 +2454,15 @@ all_ones_mask_p (mask, size)\n {\n   tree type = TREE_TYPE (mask);\n   int precision = TYPE_PRECISION (type);\n+  tree tmask;\n \n+  tmask = build_int_2 (~0, ~0);\n+  TREE_TYPE (tmask) = signed_type (type);\n+  force_fit_type (tmask);\n   return\n     operand_equal_p (mask, \n \t\t     const_binop (RSHIFT_EXPR,\n-\t\t\t\t  const_binop (LSHIFT_EXPR,\n-\t\t\t\t\t       convert (signed_type (type),\n-\t\t\t\t\t\t\tbuild_int_2 (~0, ~0)),\n+\t\t\t\t  const_binop (LSHIFT_EXPR, tmask,\n \t\t\t\t\t       size_int (precision - size), 0),\n \t\t\t\t  size_int (precision - size), 0),\n \t\t     0);"}]}