{"sha": "1bdcf037b30e17f8f9182952494c7d98b9a100d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJkY2YwMzdiMzBlMTdmOGY5MTgyOTUyNDk0YzdkOThiOWExMDBkMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-03-05T16:13:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-03-05T16:13:04Z"}, "message": "re PR tree-optimization/35472 (tree DSE is broken)\n\n2008-03-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/35472\n\t* tree-ssa-dse.c (dse_optimize_stmt): Do not delete a store\n\twhose single use_stmt has a overlapping set of loaded and\n\tstored symbols as that use_stmt might be a noop assignment then.\n\n\t* gcc.c-torture/execute/pr35472.c: New testcase.\n\nFrom-SVN: r132899", "tree": {"sha": "f34248a3bddd1b90c01b24609c94f0ff59cae43d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f34248a3bddd1b90c01b24609c94f0ff59cae43d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bdcf037b30e17f8f9182952494c7d98b9a100d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bdcf037b30e17f8f9182952494c7d98b9a100d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bdcf037b30e17f8f9182952494c7d98b9a100d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bdcf037b30e17f8f9182952494c7d98b9a100d1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fec5fe47e641ed2f95e60197a9a3977176427749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec5fe47e641ed2f95e60197a9a3977176427749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fec5fe47e641ed2f95e60197a9a3977176427749"}], "stats": {"total": 67, "additions": 50, "deletions": 17}, "files": [{"sha": "a179d15064cc9d289a6ea1a18b00406d1dbf78ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdcf037b30e17f8f9182952494c7d98b9a100d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdcf037b30e17f8f9182952494c7d98b9a100d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bdcf037b30e17f8f9182952494c7d98b9a100d1", "patch": "@@ -1,3 +1,10 @@\n+2008-03-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35472\n+\t* tree-ssa-dse.c (dse_optimize_stmt): Do not delete a store\n+\twhose single use_stmt has a overlapping set of loaded and\n+\tstored symbols as that use_stmt might be a noop assignment then.\n+\n 2008-03-05  Joel Sherrill <joel.sherrill@oarcorp.com>\n \n \t* gthr-rtems.h: Implement __gthread_mutex_destroy."}, {"sha": "98246904330bf9daf1237b715e71a9a4a1fff0bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdcf037b30e17f8f9182952494c7d98b9a100d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdcf037b30e17f8f9182952494c7d98b9a100d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1bdcf037b30e17f8f9182952494c7d98b9a100d1", "patch": "@@ -1,3 +1,8 @@\n+2008-03-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35472\n+\t* gcc.c-torture/execute/pr35472.c: New testcase.\n+\n 2007-03-05  Gabor Loki  <loki@gcc.gnu.org>\n \n \tPR 33009"}, {"sha": "c8678e268c92952b43da4a2e261e6129c8d91aa9", "filename": "gcc/testsuite/gcc.c-torture/execute/pr35472.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdcf037b30e17f8f9182952494c7d98b9a100d1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35472.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdcf037b30e17f8f9182952494c7d98b9a100d1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35472.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35472.c?ref=1bdcf037b30e17f8f9182952494c7d98b9a100d1", "patch": "@@ -0,0 +1,22 @@\n+extern void abort (void);\n+extern void *memset (void *s, int c, __SIZE_TYPE__ n);\n+struct S { int i[16]; };\n+struct S *p;\n+void __attribute__((noinline))\n+foo(struct S *a, struct S *b) { a->i[0] = -1; p = b; }\n+void test (void)\n+{\n+  struct S a, b;\n+  memset (&a.i[0], '\\0', sizeof (a.i));\n+  memset (&b.i[0], '\\0', sizeof (b.i));\n+  foo (&a, &b);\n+  *p = a;\n+  *p = b;\n+  if (b.i[0] != -1)\n+    abort ();\n+}\n+int main()\n+{\n+  test();\n+  return 0;\n+}"}, {"sha": "f2ec9a505c76bb6a65ee4fc615bfd8bce3d5b33d", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdcf037b30e17f8f9182952494c7d98b9a100d1/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdcf037b30e17f8f9182952494c7d98b9a100d1/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=1bdcf037b30e17f8f9182952494c7d98b9a100d1", "patch": "@@ -470,24 +470,23 @@ dse_optimize_stmt (struct dom_walk_data *walk_data,\n \t  vuse_vec_p vv;\n \t  tree stmt_lhs;\n \n-\t  if (LOADED_SYMS (use_stmt))\n+\t  /* If use_stmt is or might be a nop assignment, e.g. for\n+\t     struct { ... } S a, b, *p; ...\n+\t     b = a; b = b;\n+\t     or\n+\t     b = a; b = *p; where p might be &b,\n+\t     or\n+\t     *p = a; *p = b; where p might be &b,\n+\t     or\n+\t     *p = *u; *p = *v; where p might be v, then USE_STMT\n+\t     acts as a use as well as definition, so store in STMT\n+\t     is not dead.  */\n+\t  if (LOADED_SYMS (use_stmt)\n+\t      && bitmap_intersect_p (LOADED_SYMS (use_stmt),\n+\t\t\t\t     STORED_SYMS (use_stmt)))\n \t    {\n-\t      tree use_base\n-\t\t= get_base_address (GIMPLE_STMT_OPERAND (use_stmt, 0));\n-\t      /* If use_stmt is or might be a nop assignment, e.g. for\n-\t\t struct { ... } S a, b, *p; ...\n-\t\t b = a; b = b;\n-\t\t or\n-\t\t b = a; b = *p; where p might be &b, then USE_STMT\n-\t\t acts as a use as well as definition, so store in STMT\n-\t\t is not dead.  */\n-\t      if (TREE_CODE (use_base) == VAR_DECL\n-\t\t  && bitmap_bit_p (LOADED_SYMS (use_stmt),\n-\t\t\t\t   DECL_UID (use_base)))\n-\t\t{\n-\t\t  record_voperand_set (dse_gd->stores, &bd->stores, ann->uid);\n-\t\t  return;\n-\t\t}\n+\t      record_voperand_set (dse_gd->stores, &bd->stores, ann->uid);\n+\t      return;\n \t    }\n \n \t  if (dump_file && (dump_flags & TDF_DETAILS))"}]}