{"sha": "60f6be5a8e61073ff0eb3ee24c4a2288010f2653", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBmNmJlNWE4ZTYxMDczZmYwZWIzZWUyNGM0YTIyODgwMTBmMjY1Mw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-21T15:09:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-21T15:09:00Z"}, "message": "re PR lto/45018 (ICE: tree check: did not expect class 'type', have 'type' (record_type) in contains_placeholder_p, at tree.c:2749)\n\n2010-07-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/45018\n\t* tree.c (find_decls_types_r): Do not follow TREE_CHAIN\n\tof TYPE_DECLs.  Do not follow TYPE_NEXT_VARIANT,\n\tTYPE_NEXT_PTR_TO, nor TYPE_NEXT_REF_TO or TYPE_CANONICAL.\n\n\t* g++.dg/lto/20100721-1_0.C: New testcase.\n\nFrom-SVN: r162380", "tree": {"sha": "1edf8a10fa5465548dc47d5e0ef2c04b32cf346b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1edf8a10fa5465548dc47d5e0ef2c04b32cf346b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60f6be5a8e61073ff0eb3ee24c4a2288010f2653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f6be5a8e61073ff0eb3ee24c4a2288010f2653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f6be5a8e61073ff0eb3ee24c4a2288010f2653", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f6be5a8e61073ff0eb3ee24c4a2288010f2653/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "79cf76280626b079c07bdbb362f51a66416555d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79cf76280626b079c07bdbb362f51a66416555d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79cf76280626b079c07bdbb362f51a66416555d3"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "e4dbeb6a75a63665ee6127c2593cbddb0876f0f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f6be5a8e61073ff0eb3ee24c4a2288010f2653/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f6be5a8e61073ff0eb3ee24c4a2288010f2653/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60f6be5a8e61073ff0eb3ee24c4a2288010f2653", "patch": "@@ -1,3 +1,10 @@\n+2010-07-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/45018\n+\t* tree.c (find_decls_types_r): Do not follow TREE_CHAIN\n+\tof TYPE_DECLs.  Do not follow TYPE_NEXT_VARIANT,\n+\tTYPE_NEXT_PTR_TO, nor TYPE_NEXT_REF_TO or TYPE_CANONICAL.\n+\n 2010-07-21  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/44900"}, {"sha": "136ef6e6beec30e42311acb827a5406ba4d9556c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f6be5a8e61073ff0eb3ee24c4a2288010f2653/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f6be5a8e61073ff0eb3ee24c4a2288010f2653/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60f6be5a8e61073ff0eb3ee24c4a2288010f2653", "patch": "@@ -1,3 +1,8 @@\n+2010-07-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/45018\n+\t* g++.dg/lto/20100721-1_0.C: New testcase.\n+\n 2010-07-21  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/44900"}, {"sha": "09132e5992bb53f1ba263293936e9bc767f41e43", "filename": "gcc/testsuite/g++.dg/lto/20100721-1_0.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f6be5a8e61073ff0eb3ee24c4a2288010f2653/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100721-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f6be5a8e61073ff0eb3ee24c4a2288010f2653/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100721-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100721-1_0.C?ref=60f6be5a8e61073ff0eb3ee24c4a2288010f2653", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-lto-do assemble } */\n+\n+static inline int __gthread_active_p (void) { }\n+template <int rank, int dim> class Tensor;\n+template <int dimension> struct G;\n+template <int dim> class T {\n+    typedef void A;\n+    typedef Tensor<1,dim> F[G<dim>::v];\n+};"}, {"sha": "a33f22b40f5843898e7a22a0e099a669b9d03c81", "filename": "gcc/tree.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f6be5a8e61073ff0eb3ee24c4a2288010f2653/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f6be5a8e61073ff0eb3ee24c4a2288010f2653/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=60f6be5a8e61073ff0eb3ee24c4a2288010f2653", "patch": "@@ -4704,7 +4704,8 @@ find_decls_types_r (tree *tp, int *ws, void *data)\n \t  && DECL_HAS_VALUE_EXPR_P (t))\n \tfld_worklist_push (DECL_VALUE_EXPR (t), fld);\n \n-      if (TREE_CODE (t) != FIELD_DECL)\n+      if (TREE_CODE (t) != FIELD_DECL\n+\t  && TREE_CODE (t) != TYPE_DECL)\n \tfld_worklist_push (TREE_CHAIN (t), fld);\n       *ws = 0;\n     }\n@@ -4722,13 +4723,19 @@ find_decls_types_r (tree *tp, int *ws, void *data)\n       fld_worklist_push (TYPE_POINTER_TO (t), fld);\n       fld_worklist_push (TYPE_REFERENCE_TO (t), fld);\n       fld_worklist_push (TYPE_NAME (t), fld);\n-      fld_worklist_push (TYPE_MINVAL (t), fld);\n+      /* Do not walk TYPE_NEXT_PTR_TO or TYPE_NEXT_REF_TO.  We do not stream\n+\t them and thus do not and want not to reach unused pointer types\n+\t this way.  */\n+      if (!POINTER_TYPE_P (t))\n+\tfld_worklist_push (TYPE_MINVAL (t), fld);\n       if (!RECORD_OR_UNION_TYPE_P (t))\n \tfld_worklist_push (TYPE_MAXVAL (t), fld);\n       fld_worklist_push (TYPE_MAIN_VARIANT (t), fld);\n-      fld_worklist_push (TYPE_NEXT_VARIANT (t), fld);\n+      /* Do not walk TYPE_NEXT_VARIANT.  We do not stream it and thus\n+         do not and want not to reach unused variants this way.  */\n       fld_worklist_push (TYPE_CONTEXT (t), fld);\n-      fld_worklist_push (TYPE_CANONICAL (t), fld);\n+      /* Do not walk TYPE_CANONICAL.  We do not stream it and thus do not\n+\t and want not to reach unused types this way.  */\n \n       if (RECORD_OR_UNION_TYPE_P (t) && TYPE_BINFO (t))\n \t{"}]}