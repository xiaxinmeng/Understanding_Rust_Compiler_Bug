{"sha": "fd037e0d44bb1864f21b9797133b129a7f1f1222", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQwMzdlMGQ0NGJiMTg2NGYyMWI5Nzk3MTMzYjEyOWE3ZjFmMTIyMg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-08-11T09:28:01Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-08-11T09:28:01Z"}, "message": "decl2.c (build_expr_from_tree, [...]): Build explicit TEMPLATE_ID_EXPR args.\n\n\t* decl2.c (build_expr_from_tree, case METHOD_CALL_EXPR): Build\n\texplicit TEMPLATE_ID_EXPR args.\n\t(build_expr_from_tree, case CALL_EXPR): Likewise.\n\nFrom-SVN: r35629", "tree": {"sha": "3869daa04d4112bde6e7cbc1307a6c5abaefc8b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3869daa04d4112bde6e7cbc1307a6c5abaefc8b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd037e0d44bb1864f21b9797133b129a7f1f1222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd037e0d44bb1864f21b9797133b129a7f1f1222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd037e0d44bb1864f21b9797133b129a7f1f1222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd037e0d44bb1864f21b9797133b129a7f1f1222/comments", "author": null, "committer": null, "parents": [{"sha": "9104081d7828eead6bc7ed37db864ebbf0876918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9104081d7828eead6bc7ed37db864ebbf0876918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9104081d7828eead6bc7ed37db864ebbf0876918"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "985716935e386a71fd26bbb9b291dff66f811a7f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd037e0d44bb1864f21b9797133b129a7f1f1222/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd037e0d44bb1864f21b9797133b129a7f1f1222/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fd037e0d44bb1864f21b9797133b129a7f1f1222", "patch": "@@ -1,3 +1,9 @@\n+2000-08-11  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* decl2.c (build_expr_from_tree, case METHOD_CALL_EXPR): Build\n+\texplicit TEMPLATE_ID_EXPR args.\n+\t(build_expr_from_tree, case CALL_EXPR): Likewise.\n+\n 2000-08-11  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* decl.c (check_tag_decl): Diagnose typename's which don't"}, {"sha": "c968bcb2b04d14df532eccd6831f5bb8d16b2b0d", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd037e0d44bb1864f21b9797133b129a7f1f1222/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd037e0d44bb1864f21b9797133b129a7f1f1222/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=fd037e0d44bb1864f21b9797133b129a7f1f1222", "patch": "@@ -4116,10 +4116,17 @@ build_expr_from_tree (t)\n       if (TREE_CODE (TREE_OPERAND (t, 0)) == SCOPE_REF)\n \t{\n \t  tree ref = TREE_OPERAND (t, 0);\n+\t  tree name = TREE_OPERAND (ref, 1);\n+\t  \n+\t  if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n+\t    name = build_nt (TEMPLATE_ID_EXPR,\n+\t                     TREE_OPERAND (name, 0),\n+\t                     build_expr_from_tree (TREE_OPERAND (name, 1)));\n+\t    \n \t  return build_scoped_method_call\n \t    (build_expr_from_tree (TREE_OPERAND (t, 1)),\n \t     build_expr_from_tree (TREE_OPERAND (ref, 0)),\n-\t     TREE_OPERAND (ref, 1),\n+\t     name,\n \t     build_expr_from_tree (TREE_OPERAND (t, 2)));\n \t}\n       else \n@@ -4151,9 +4158,16 @@ build_expr_from_tree (t)\n       if (TREE_CODE (TREE_OPERAND (t, 0)) == SCOPE_REF)\n \t{\n \t  tree ref = TREE_OPERAND (t, 0);\n+\t  tree name = TREE_OPERAND (ref, 1);\n+\t  \n+\t  if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n+\t    name = build_nt (TEMPLATE_ID_EXPR,\n+\t                     TREE_OPERAND (name, 0),\n+\t                     build_expr_from_tree (TREE_OPERAND (name, 1)));\n+\t    \n \t  return build_member_call\n \t    (build_expr_from_tree (TREE_OPERAND (ref, 0)),\n-\t     TREE_OPERAND (ref, 1),\n+\t     name,\n \t     build_expr_from_tree (TREE_OPERAND (t, 1)));\n \t}\n       else"}]}