{"sha": "f4eec0a3e34cd709476b5062e44ef0075c75f426", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRlZWMwYTNlMzRjZDcwOTQ3NmI1MDYyZTQ0ZWYwMDc1Yzc1ZjQyNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-08-16T11:22:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-08-16T11:22:47Z"}, "message": "re PR tree-optimization/76783 (wrong code with conditional vector assignment @ -Og)\n\n2016-08-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/76783\n\t* tree-ssa-propagate.c (ssa_prop_init): Use RPO order.  Clear\n\tBB visited flags at start.\n\n\t* gcc.dg/pr76783.c: New testcase.\n\t* gcc.dg/tree-ssa/pr69270-2.c: Adjust.\n\nFrom-SVN: r239496", "tree": {"sha": "b0fc0fa96f99c94f842f790b5049f90e7d5fec39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0fc0fa96f99c94f842f790b5049f90e7d5fec39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4eec0a3e34cd709476b5062e44ef0075c75f426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4eec0a3e34cd709476b5062e44ef0075c75f426", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4eec0a3e34cd709476b5062e44ef0075c75f426", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4eec0a3e34cd709476b5062e44ef0075c75f426/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f21990a676b65040761886e54fc9d5149ec014c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f21990a676b65040761886e54fc9d5149ec014c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f21990a676b65040761886e54fc9d5149ec014c"}], "stats": {"total": 60, "additions": 46, "deletions": 14}, "files": [{"sha": "18a191f5bed22a5776e8d1e53c460426f535a6b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4eec0a3e34cd709476b5062e44ef0075c75f426", "patch": "@@ -1,3 +1,9 @@\n+2016-08-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/76783\n+\t* tree-ssa-propagate.c (ssa_prop_init): Use RPO order.  Clear\n+\tBB visited flags at start.\n+\n 2016-08-16  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/72817"}, {"sha": "10749112afe3cd7382b7815af442d142a24bd020", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f4eec0a3e34cd709476b5062e44ef0075c75f426", "patch": "@@ -1,3 +1,9 @@\n+2016-08-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/76783\n+\t* gcc.dg/pr76783.c: New testcase.\n+\t* gcc.dg/tree-ssa/pr69270-2.c: Adjust.\n+\n 2016-08-16  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/72817"}, {"sha": "22aef56529f5bdb78d697d7c999e295bbe108d28", "filename": "gcc/testsuite/gcc.dg/pr76783.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2Ftestsuite%2Fgcc.dg%2Fpr76783.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2Ftestsuite%2Fgcc.dg%2Fpr76783.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr76783.c?ref=f4eec0a3e34cd709476b5062e44ef0075c75f426", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-options \"-Og -w -Wno-psabi\" } */\n+\n+typedef unsigned __int128 u128;\n+typedef unsigned __int128 v64u128 __attribute__ ((vector_size (64)));\n+\n+u128 __attribute__ ((noinline, noclone))\n+foo (unsigned c, v64u128 v)\n+{\n+  v64u128 u;\n+  if (c) {\n+    u = (v64u128){(u128)0, (u128)0};\n+  } else {\n+    u = (v64u128){(u128)0, (u128)1};\n+  }\n+  u += v;\n+  return u[1];\n+}\n+\n+int\n+main ()\n+{\n+  u128 x = foo (0, (v64u128){ });\n+  if (x != 1)\n+    __builtin_abort();\n+  return 0;\n+}"}, {"sha": "b617f2df30295081e2a67b65cf65b2c007021c96", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr69270-2.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69270-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69270-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69270-2.c?ref=f4eec0a3e34cd709476b5062e44ef0075c75f426", "patch": "@@ -1,16 +1,8 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-dom3-details -w\" } */\n+/* { dg-options \"-O2 -fdump-tree-dce2 -w\" } */\n \n-/* There should be a reference to usecount that turn into\n-   constants.  */\n-/* { dg-final { scan-tree-dump-times \"Replaced .usecount_\\[0-9\\]+. with constant .1.\" 1 \"dom3\"} } */\n-\n-/* And an assignment using usecount ought to fold down to constants.  */\n-/* { dg-final { scan-tree-dump-times \"Folded to: usecount_\\[0-9\\]+ = 2;\" 1 \"dom3\"} } */\n-\n-/* The arithmetic using usecount should be gone, except for the one in the\n-   details debugging.  */\n-/* { dg-final { scan-tree-dump-times \"usecount_\\[0-9\\]+ = usecount_\\[0-9\\]+ . 1;\" 1 \"dom3\"} } */\n+/* The arithmetic using usecount should be gone.  */\n+/* { dg-final { scan-tree-dump-times \"usecount_\\[0-9\\]+ = usecount_\\[0-9\\]+ . 1;\" 0 \"dce2\"} } */\n \n typedef union tree_node *tree;\n typedef union gimple_statement_d *gimple;"}, {"sha": "c8cf0783e103a7c23e899847d17c25a3706e3eca", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4eec0a3e34cd709476b5062e44ef0075c75f426/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=f4eec0a3e34cd709476b5062e44ef0075c75f426", "patch": "@@ -422,8 +422,8 @@ ssa_prop_init (void)\n   /* Worklist of basic-blocks.  */\n   bb_to_cfg_order = XNEWVEC (int, last_basic_block_for_fn (cfun) + 1);\n   cfg_order_to_bb = XNEWVEC (int, n_basic_blocks_for_fn (cfun));\n-  int n = pre_and_rev_post_order_compute_fn (cfun, cfg_order_to_bb,\n-\t\t\t\t\t     NULL, false);\n+  int n = pre_and_rev_post_order_compute_fn (cfun, NULL,\n+\t\t\t\t\t     cfg_order_to_bb, false);\n   for (int i = 0; i < n; ++i)\n     bb_to_cfg_order[cfg_order_to_bb[i]] = i;\n   cfg_blocks = BITMAP_ALLOC (NULL);\n@@ -453,7 +453,7 @@ ssa_prop_init (void)\n \t  gimple_set_uid (stmt, inc_gimple_stmt_max_uid (cfun));\n \t}\n \n-      gcc_assert (! (bb->flags & BB_VISITED));\n+      bb->flags &= ~BB_VISITED;\n       FOR_EACH_EDGE (e, ei, bb->succs)\n \te->flags &= ~EDGE_EXECUTABLE;\n     }"}]}