{"sha": "3a1ef68af0f80dc73971e7395f91644316ebd8c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ExZWY2OGFmMGY4MGRjNzM5NzFlNzM5NWY5MTY0NDMxNmViZDhjMw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-03-22T20:33:33Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-03-22T20:33:33Z"}, "message": "configfiles.texi (Configuration Files): Removed fixinc/Makefile*, intl/Makefile.*.\n\n\t* doc/configfiles.texi (Configuration Files): Removed\n\tfixinc/Makefile*, intl/Makefile.*.\n\t* doc/makefile.texi: Fixed markup.\n\tAbstract from version control system used.\n\t(Makefile): Removed obsolete gcc/java/parse.y example.\n\t* doc/sourcebuild.texi: Likewise.\n\t(Top Level): Added config, gnattools, libdecnumber, libgcc,\n\tlibgomp, libssp.\n\tRemoved fastjar.\n\t(Miscellaneous Docs): Clarify location.\n\tAdded COPYING3, COPYING3.LIB.\n\t(Front End Directory): Moved Make-lang.in entry to new\n\tsubsubsection.\n\nFrom-SVN: r157649", "tree": {"sha": "5e3a585f7017277d5655de8322f7993e618b7a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e3a585f7017277d5655de8322f7993e618b7a00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a1ef68af0f80dc73971e7395f91644316ebd8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a1ef68af0f80dc73971e7395f91644316ebd8c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a1ef68af0f80dc73971e7395f91644316ebd8c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a1ef68af0f80dc73971e7395f91644316ebd8c3/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f5441df096d75d4e293d7e2062c2b962924dbdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5441df096d75d4e293d7e2062c2b962924dbdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5441df096d75d4e293d7e2062c2b962924dbdd"}], "stats": {"total": 248, "additions": 142, "deletions": 106}, "files": [{"sha": "113f2a7720d2e90e0aef1c7717175253fdc7f2cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1ef68af0f80dc73971e7395f91644316ebd8c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1ef68af0f80dc73971e7395f91644316ebd8c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a1ef68af0f80dc73971e7395f91644316ebd8c3", "patch": "@@ -1,3 +1,19 @@\n+2010-03-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* doc/configfiles.texi (Configuration Files): Removed\n+\tfixinc/Makefile*, intl/Makefile.*.\n+\t* doc/makefile.texi: Fixed markup.\n+\tAbstract from version control system used.\n+\t(Makefile): Removed obsolete gcc/java/parse.y example.\n+\t* doc/sourcebuild.texi: Likewise.\n+\t(Top Level): Added config, gnattools, libdecnumber, libgcc,\n+\tlibgomp, libssp.\n+\tRemoved fastjar.\n+\t(Miscellaneous Docs): Clarify location.\n+\tAdded COPYING3, COPYING3.LIB.\n+\t(Front End Directory): Moved Make-lang.in entry to new\n+\tsubsubsection.\n+\n 2010-03-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR target/38085"}, {"sha": "3650179cc87d4dd44c08538564896498f17b11e2", "filename": "gcc/doc/configfiles.texi", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1ef68af0f80dc73971e7395f91644316ebd8c3/gcc%2Fdoc%2Fconfigfiles.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1ef68af0f80dc73971e7395f91644316ebd8c3/gcc%2Fdoc%2Fconfigfiles.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fconfigfiles.texi?ref=3a1ef68af0f80dc73971e7395f91644316ebd8c3", "patch": "@@ -1,5 +1,5 @@\n @c Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-@c 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+@c 1999, 2000, 2001, 2002, 2010 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -33,13 +33,9 @@ used.\n @item\n @file{cstamp-h} is used as a timestamp.\n @item\n-@file{fixinc/Makefile} is constructed from @file{fixinc/Makefile.in}.\n-@item\n @file{gccbug}, a script for reporting bugs in GCC, is constructed from\n @file{gccbug.in}.\n @item\n-@file{intl/Makefile} is constructed from @file{intl/Makefile.in}.\n-@item\n If a language @file{config-lang.in} file (@pxref{Front End Config, ,\n The Front End @file{config-lang.in} File}) sets @code{outputs}, then\n the files listed in @code{outputs} there are also generated."}, {"sha": "80fa89d8894e7b5fd2f0811786ddc6cd4052829e", "filename": "gcc/doc/makefile.texi", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1ef68af0f80dc73971e7395f91644316ebd8c3/gcc%2Fdoc%2Fmakefile.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1ef68af0f80dc73971e7395f91644316ebd8c3/gcc%2Fdoc%2Fmakefile.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmakefile.texi?ref=3a1ef68af0f80dc73971e7395f91644316ebd8c3", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 2001, 2002, 2003, 2004, 2006, 2008\n+@c Copyright (C) 2001, 2002, 2003, 2004, 2006, 2008, 2010\n @c Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n@@ -46,29 +46,28 @@ That, and all the files created by @command{configure}.\n @item maintainer-clean\n Distclean plus any file that can be generated from other files.  Note\n that additional tools may be required beyond what is normally needed to\n-build gcc.\n+build GCC.\n \n @item srcextra\n-Generates files in the source directory that do not exist in CVS but\n-should go into a release tarball.  One example is @file{gcc/java/parse.c}\n-which is generated from the CVS source file @file{gcc/java/parse.y}.\n+Generates files in the source directory that are not version-controlled but\n+should go into a release tarball.\n \n @item srcinfo\n @itemx srcman\n Copies the info-formatted and manpage documentation into the source\n directory usually for the purpose of generating a release tarball.\n \n @item install\n-Installs gcc.\n+Installs GCC.\n \n @item uninstall\n-Deletes installed files.\n+Deletes installed files, though this is not supported.\n \n @item check\n Run the testsuite.  This creates a @file{testsuite} subdirectory that\n has various @file{.sum} and @file{.log} files containing the results of\n the testing.  You can run subsets with, for example, @samp{make check-gcc}.\n-You can specify specific tests by setting RUNTESTFLAGS to be the name\n+You can specify specific tests by setting @env{RUNTESTFLAGS} to be the name\n of the @file{.exp} file, optionally followed by (for some tests) an equals\n and a file wildcard, like:\n \n@@ -77,7 +76,7 @@ make check-gcc RUNTESTFLAGS=\"execute.exp=19980413-*\"\n @end smallexample\n \n Note that running the testsuite may require additional tools be\n-installed, such as TCL or dejagnu.\n+installed, such as Tcl or DejaGnu.\n @end table\n \n The toplevel tree from which you start GCC compilation is not"}, {"sha": "a3455db2e2c75ea87fcd5047385a48f9fc4f75f8", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 117, "deletions": 92, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1ef68af0f80dc73971e7395f91644316ebd8c3/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1ef68af0f80dc73971e7395f91644316ebd8c3/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=3a1ef68af0f80dc73971e7395f91644316ebd8c3", "patch": "@@ -32,15 +32,14 @@ subdirectories that contain parts of GCC and its runtime libraries:\n The Boehm conservative garbage collector, used as part of the Java\n runtime library.\n \n+@item config\n+Autoconf macros and Makefile fragments used throught the tree.\n+\n @item contrib\n Contributed scripts that may be found useful in conjunction with GCC@.\n One of these, @file{contrib/texi2pod.pl}, is used to generate man\n pages from Texinfo manuals as part of the GCC build process.\n \n-@item fastjar\n-An implementation of the @command{jar} command, used with the Java\n-front end.\n-\n @item fixincludes\n The support for fixing system headers to work with GCC@.  See\n @file{fixincludes/README} for more information.  The headers fixed by\n@@ -54,25 +53,37 @@ including optimizers, support for different target architectures,\n language front ends, and testsuites.  @xref{gcc Directory, , The\n @file{gcc} Subdirectory}, for details.\n \n+@item gnattools\n+Support tools for GNAT.\n+\n @item include\n Headers for the @code{libiberty} library.\n \n @item intl\n GNU @code{libintl}, from GNU @code{gettext}, for systems which do not\n-include it in libc.\n+include it in @code{libc}.\n \n @item libada\n The Ada runtime library.\n \n @item libcpp\n The C preprocessor library.\n \n-@item libgfortran\n-The Fortran runtime library.\n+@item libdecnumber\n+The Decimal Float support library.\n \n @item libffi\n The @code{libffi} library, used as part of the Java runtime library.\n \n+@item libgcc\n+The GCC runtime library.\n+\n+@item libgfortran\n+The Fortran runtime library.\n+\n+@item libgomp\n+The GNU OpenMP runtime library.\n+\n @item libiberty\n The @code{libiberty} library, used for portability and for some\n generally useful data structures and algorithms.  @xref{Top, ,\n@@ -89,6 +100,9 @@ dereferencing operations.\n @item libobjc\n The Objective-C and Objective-C++ runtime library.\n \n+@item libssp\n+The Stack protector runtime library.\n+\n @item libstdc++-v3\n The C++ runtime library.\n \n@@ -312,7 +326,7 @@ GCC can also install @code{<tgmath.h>}.  It will do this when\n The main GCC documentation is in the form of manuals in Texinfo\n format.  These are installed in Info format; DVI versions may be\n generated by @samp{make dvi}, PDF versions by @samp{make pdf}, and\n-HTML versions by @command{make html}.  In addition, some man pages are\n+HTML versions by @samp{make html}.  In addition, some man pages are\n generated from the Texinfo manuals, there are some other text files\n with miscellaneous documentation, and runtime libraries have their own\n documentation outside the @file{gcc} directory.  FIXME: document the\n@@ -351,7 +365,7 @@ DVI-formatted manuals are generated by @samp{make dvi}, which uses\n @command{texi2dvi} (via the Makefile macro @code{$(TEXI2DVI)}).  \n PDF-formatted manuals are generated by @samp{make pdf}, which uses\n @command{texi2pdf} (via the Makefile macro @code{$(TEXI2PDF)}).  HTML\n-formatted manuals are generated by @command{make html}.  Info\n+formatted manuals are generated by @samp{make html}.  Info\n manuals are generated by @samp{make info} (which is run as part of\n a bootstrap); this generates the manuals in the source directory,\n using @command{makeinfo} via the Makefile macro @code{$(MAKEINFO)},\n@@ -371,7 +385,7 @@ directory or in @file{doc/include}.  HTML manuals will be generated by\n @samp{makeinfo --html}, PostScript manuals by @command{texi2dvi}\n and @command{dvips}, and PDF manuals by @command{texi2pdf}.\n All Texinfo files that are parts of manuals must\n-be checked into SVN, even if they are generated files, for the\n+be version-controlled, even if they are generated files, for the\n generation of online manuals to work.\n \n The installation manual, @file{doc/install.texi}, is also provided on\n@@ -425,7 +439,8 @@ comments in more detail.\n @subsubsection Miscellaneous Documentation\n \n In addition to the formal documentation that is installed by GCC,\n-there are several other text files with miscellaneous documentation:\n+there are several other text files in the @file{gcc} subdirectory\n+with miscellaneous documentation:\n \n @table @file\n @item ABOUT-GCC-NLS\n@@ -434,9 +449,11 @@ this manual rather than a separate file.\n @item ABOUT-NLS\n Notes on the Free Translation Project.\n @item COPYING\n-The GNU General Public License.\n+@itemx COPYING3\n+The GNU General Public License, Versions 2 and 3.\n @item COPYING.LIB\n-The GNU Lesser General Public License.\n+@itemx COPYING3.LIB\n+The GNU Lesser General Public License, Versions 2.1 and 3.\n @item *ChangeLog*\n @itemx */ChangeLog*\n Change log files for various parts of GCC@.\n@@ -504,8 +521,9 @@ directory.  FIXME: document this further.\n Details of the directories of any runtime libraries in\n @file{gcc/doc/sourcebuild.texi}.\n @item\n-Check targets in Makefile.def for the top-level Makefile to check just\n-the compiler or the compiler and runtime library for the language.\n+Check targets in @file{Makefile.def} for the top-level @file{Makefile}\n+to check just the compiler or the compiler and runtime library for the\n+language.\n @end itemize\n \n If the front end is added to the official GCC source repository, the\n@@ -551,6 +569,7 @@ updated accordingly.\n @menu\n * Front End Directory::  The front end @file{@var{language}} directory.\n * Front End Config::     The front end @file{config-lang.in} file.\n+* Front End Makefile::   The front end @file{Make-lang.in} file.\n @end menu\n \n @node Front End Directory\n@@ -559,7 +578,7 @@ updated accordingly.\n A front end @file{@var{language}} directory contains the source files\n of that front end (but not of any runtime libraries, which should be\n outside the @file{gcc} directory).  This includes documentation, and\n-possibly some subsidiary programs build alongside the front end.\n+possibly some subsidiary programs built alongside the front end.\n Certain files are special and other parts of the compiler depend on\n their names:\n \n@@ -569,7 +588,84 @@ This file is required in all language subdirectories.  @xref{Front End\n Config, , The Front End @file{config-lang.in} File}, for details of\n its contents\n @item Make-lang.in\n-This file is required in all language subdirectories.  It contains\n+This file is required in all language subdirectories.  @xref{Front End\n+Makefile, , The Front End @file{Make-lang.in} File}, for details of its\n+contents.\n+@item lang.opt\n+This file registers the set of switches that the front end accepts on\n+the command line, and their @option{--help} text.  @xref{Options}.\n+@item lang-specs.h\n+This file provides entries for @code{default_compilers} in\n+@file{gcc.c} which override the default of giving an error that a\n+compiler for that language is not installed.\n+@item @var{language}-tree.def\n+This file, which need not exist, defines any language-specific tree\n+codes.\n+@end table\n+\n+@node Front End Config\n+@subsubsection The Front End @file{config-lang.in} File\n+\n+Each language subdirectory contains a @file{config-lang.in} file.  In\n+addition the main directory contains @file{c-config-lang.in}, which\n+contains limited information for the C language.  This file is a shell\n+script that may define some variables describing the language:\n+\n+@table @code\n+@item language\n+This definition must be present, and gives the name of the language\n+for some purposes such as arguments to @option{--enable-languages}.\n+@item lang_requires\n+If defined, this variable lists (space-separated) language front ends\n+other than C that this front end requires to be enabled (with the\n+names given being their @code{language} settings).  For example, the\n+Java front end depends on the C++ front end, so sets\n+@samp{lang_requires=c++}.\n+@item subdir_requires\n+If defined, this variable lists (space-separated) front end directories\n+other than C that this front end requires to be present.  For example,\n+the Objective-C++ front end uses source files from the C++ and\n+Objective-C front ends, so sets @samp{subdir_requires=\"cp objc\"}.\n+@item target_libs\n+If defined, this variable lists (space-separated) targets in the top\n+level @file{Makefile} to build the runtime libraries for this\n+language, such as @code{target-libobjc}.\n+@item lang_dirs\n+If defined, this variable lists (space-separated) top level\n+directories (parallel to @file{gcc}), apart from the runtime libraries,\n+that should not be configured if this front end is not built.\n+@item build_by_default\n+If defined to @samp{no}, this language front end is not built unless\n+enabled in a @option{--enable-languages} argument.  Otherwise, front\n+ends are built by default, subject to any special logic in\n+@file{configure.ac} (as is present to disable the Ada front end if the\n+Ada compiler is not already installed).\n+@item boot_language\n+If defined to @samp{yes}, this front end is built in stage1 of the\n+bootstrap.  This is only relevant to front ends written in their own\n+languages.\n+@item compilers\n+If defined, a space-separated list of compiler executables that will\n+be run by the driver.  The names here will each end\n+with @samp{\\$(exeext)}.\n+@item outputs\n+If defined, a space-separated list of files that should be generated\n+by @file{configure} substituting values in them.  This mechanism can\n+be used to create a file @file{@var{language}/Makefile} from\n+@file{@var{language}/Makefile.in}, but this is deprecated, building\n+everything from the single @file{gcc/Makefile} is preferred.\n+@item gtfiles\n+If defined, a space-separated list of files that should be scanned by\n+@file{gengtype.c} to generate the garbage collection tables and routines for\n+this language.  This excludes the files that are common to all front\n+ends.  @xref{Type Information}.\n+\n+@end table\n+\n+@node Front End Makefile\n+@subsubsection The Front End @file{Make-lang.in} File\n+\n+Each language subdirectory contains a @file{Make-lang.in} file.  It contains\n targets @code{@var{lang}.@var{hook}} (where @code{@var{lang}} is the\n setting of @code{language} in @file{config-lang.in}) for the following\n values of @code{@var{hook}}, and any other Makefile rules required to\n@@ -624,7 +720,7 @@ Install headers needed for plugins.\n @item srcextra\n Copies its dependencies into the source directory.  This generally should\n be used for generated files such as Bison output files which are not\n-present in CVS, but should be included in any release tarballs.  This\n+version-controlled, but should be included in any release tarballs.  This\n target will be executed during a bootstrap if\n @samp{--enable-generated-files-in-srcdir} was specified as a\n @file{configure} option.\n@@ -645,84 +741,13 @@ The language parts of the standard GNU\n @samp{*clean} targets.  @xref{Standard Targets, , Standard Targets for\n Users, standards, GNU Coding Standards}, for details of the standard\n targets.  For GCC, @code{maintainer-clean} should delete\n-all generated files in the source directory that are not checked into\n-CVS, but should not delete anything checked into CVS@.\n+all generated files in the source directory that are not version-controlled,\n+but should not delete anything that is.\n @end table\n \n @file{Make-lang.in} must also define a variable @code{@var{lang}_OBJS}\n to a list of host object files that are used by that language.\n \n-@item lang.opt\n-This file registers the set of switches that the front end accepts on\n-the command line, and their @option{--help} text.  @xref{Options}.\n-@item lang-specs.h\n-This file provides entries for @code{default_compilers} in\n-@file{gcc.c} which override the default of giving an error that a\n-compiler for that language is not installed.\n-@item @var{language}-tree.def\n-This file, which need not exist, defines any language-specific tree\n-codes.\n-@end table\n-\n-@node Front End Config\n-@subsubsection The Front End @file{config-lang.in} File\n-\n-Each language subdirectory contains a @file{config-lang.in} file.  In\n-addition the main directory contains @file{c-config-lang.in}, which\n-contains limited information for the C language.  This file is a shell\n-script that may define some variables describing the language:\n-\n-@table @code\n-@item language\n-This definition must be present, and gives the name of the language\n-for some purposes such as arguments to @option{--enable-languages}.\n-@item lang_requires\n-If defined, this variable lists (space-separated) language front ends\n-other than C that this front end requires to be enabled (with the\n-names given being their @code{language} settings).  For example, the\n-Java front end depends on the C++ front end, so sets\n-@samp{lang_requires=c++}.\n-@item subdir_requires\n-If defined, this variable lists (space-separated) front end directories\n-other than C that this front end requires to be present.  For example,\n-the Objective-C++ front end uses source files from the C++ and\n-Objective-C front ends, so sets @samp{subdir_requires=\"cp objc\"}.\n-@item target_libs\n-If defined, this variable lists (space-separated) targets in the top\n-level @file{Makefile} to build the runtime libraries for this\n-language, such as @code{target-libobjc}.\n-@item lang_dirs\n-If defined, this variable lists (space-separated) top level\n-directories (parallel to @file{gcc}), apart from the runtime libraries,\n-that should not be configured if this front end is not built.\n-@item build_by_default\n-If defined to @samp{no}, this language front end is not built unless\n-enabled in a @option{--enable-languages} argument.  Otherwise, front\n-ends are built by default, subject to any special logic in\n-@file{configure.ac} (as is present to disable the Ada front end if the\n-Ada compiler is not already installed).\n-@item boot_language\n-If defined to @samp{yes}, this front end is built in stage 1 of the\n-bootstrap.  This is only relevant to front ends written in their own\n-languages.\n-@item compilers\n-If defined, a space-separated list of compiler executables that will\n-be run by the driver.  The names here will each end\n-with @samp{\\$(exeext)}.\n-@item outputs\n-If defined, a space-separated list of files that should be generated\n-by @file{configure} substituting values in them.  This mechanism can\n-be used to create a file @file{@var{language}/Makefile} from\n-@file{@var{language}/Makefile.in}, but this is deprecated, building\n-everything from the single @file{gcc/Makefile} is preferred.\n-@item gtfiles\n-If defined, a space-separated list of files that should be scanned by\n-gengtype.c to generate the garbage collection tables and routines for\n-this language.  This excludes the files that are common to all front\n-ends.  @xref{Type Information}.\n-\n-@end table\n-\n @node Back End\n @subsection Anatomy of a Target Back End\n \n@@ -786,7 +811,7 @@ notes about installation for this target, or saying that there are no\n special notes if there are none.\n @item\n Possibly other support outside the @file{gcc} directory for runtime\n-libraries.  FIXME: reference docs for this.  The libstdc++ porting\n+libraries.  FIXME: reference docs for this.  The @code{libstdc++} porting\n manual needs to be installed as info for this to work, or to be a\n chapter of this manual.\n @end itemize"}]}