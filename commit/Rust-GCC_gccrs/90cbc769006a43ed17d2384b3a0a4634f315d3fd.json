{"sha": "90cbc769006a43ed17d2384b3a0a4634f315d3fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBjYmM3NjkwMDZhNDNlZDE3ZDIzODRiM2EwYTQ2MzRmMzE1ZDNmZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-01-22T16:57:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-01-22T18:09:00Z"}, "message": "c++: Fix base copy elision thinko [PR98744]\n\nAs Jakub points out in the PR, I was mixing up\nDECL_HAS_IN_CHARGE_PARM_P (which is true for the abstract maybe-in-charge\nconstructor) and DECL_HAS_VTT_PARM_P (which is true for a base constructor\nthat needs to handle virtual bases).\n\ngcc/cp/ChangeLog:\n\n\tPR c++/98744\n\t* call.c (make_base_init_ok): Use DECL_HAS_VTT_PARM_P.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/98744\n\t* g++.dg/init/elide7.C: New test.", "tree": {"sha": "3d06f73f4cdba6e1ca5fdbdeeb8546808d609262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d06f73f4cdba6e1ca5fdbdeeb8546808d609262"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90cbc769006a43ed17d2384b3a0a4634f315d3fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90cbc769006a43ed17d2384b3a0a4634f315d3fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90cbc769006a43ed17d2384b3a0a4634f315d3fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90cbc769006a43ed17d2384b3a0a4634f315d3fd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9ed18295bfc6d69d40af197e059e16622cd94c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ed18295bfc6d69d40af197e059e16622cd94c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9ed18295bfc6d69d40af197e059e16622cd94c6"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "a2c5ef736a26b9a5521ff5b613239dfc0bb703fb", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90cbc769006a43ed17d2384b3a0a4634f315d3fd/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90cbc769006a43ed17d2384b3a0a4634f315d3fd/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=90cbc769006a43ed17d2384b3a0a4634f315d3fd", "patch": "@@ -8470,7 +8470,7 @@ make_base_init_ok (tree exp)\n     return true;\n   gcc_assert (DECL_COMPLETE_CONSTRUCTOR_P (fn));\n   fn = base_ctor_for (fn);\n-  if (!fn || DECL_HAS_IN_CHARGE_PARM_P (fn))\n+  if (!fn || DECL_HAS_VTT_PARM_P (fn))\n     /* The base constructor has more parameters, so we can't just change the\n        call target.  It would be possible to splice in the appropriate\n        arguments, but probably not worth the complexity.  */"}, {"sha": "d4bacaf7800c7703d3fe0270796b49ba52924c16", "filename": "gcc/testsuite/g++.dg/init/elide7.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90cbc769006a43ed17d2384b3a0a4634f315d3fd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90cbc769006a43ed17d2384b3a0a4634f315d3fd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide7.C?ref=90cbc769006a43ed17d2384b3a0a4634f315d3fd", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/98744\n+// { dg-additional-options \"-O2 -fno-inline -Wmaybe-uninitialized\" }\n+\n+struct A {};\n+struct B : virtual A {};\n+struct C : B {\n+  C() : B(B()) {}\n+};\n+int main() { C c; return 0; }"}]}