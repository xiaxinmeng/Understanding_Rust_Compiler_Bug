{"sha": "48f3c26686c0d5361a477f4a10a0cf52743627f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmM2MyNjY4NmMwZDUzNjFhNDc3ZjRhMTBhMGNmNTI3NDM2MjdmNw==", "commit": {"author": {"name": "Tejas Belagod", "email": "tejas.belagod@arm.com", "date": "2013-04-04T12:28:21Z"}, "committer": {"name": "Tejas Belagod", "email": "belagod@gcc.gnu.org", "date": "2013-04-04T12:28:21Z"}, "message": "asm-adder-clobber-lr.c: Remove duplication.\n\n2013-04-04  Tejas Belagod  <tejas.belagod@arm.com>\n\ntestsuite/\n\t* gcc.target/aarch64/inc/asm-adder-clobber-lr.c: Remove duplication.\n\t* gcc.target/aarch64/inc/asm-adder-no-clobber-lr.c: Likewise.\n\t* gcc.target/aarch64/test-framepointer-1.c: Likewise.\n\t* gcc.target/aarch64/test-framepointer-2.c: Likewise.\n\t* gcc.target/aarch64/test-framepointer-3.c: Likewise.\n\t* gcc.target/aarch64/test-framepointer-4.c: Likewise.\n\t* gcc.target/aarch64/test-framepointer-5.c: Likewise.\n\t* gcc.target/aarch64/test-framepointer-6.c: Likewise.\n\t* gcc.target/aarch64/test-framepointer-7.c: Likewise.\n\t* gcc.target/aarch64/test-framepointer-8.c: Likewise.\n\nFrom-SVN: r197481", "tree": {"sha": "3ed17208dbe633511fa07e936dc8748af2f0c5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ed17208dbe633511fa07e936dc8748af2f0c5e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48f3c26686c0d5361a477f4a10a0cf52743627f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f3c26686c0d5361a477f4a10a0cf52743627f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f3c26686c0d5361a477f4a10a0cf52743627f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f3c26686c0d5361a477f4a10a0cf52743627f7/comments", "author": {"login": "tejas-belagod-arm", "id": 92718852, "node_id": "U_kgDOBYbHBA", "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejas-belagod-arm", "html_url": "https://github.com/tejas-belagod-arm", "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers", "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}", "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions", "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs", "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos", "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51a905b2a0b07584d8f7cdce4c5db785efd6f72b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a905b2a0b07584d8f7cdce4c5db785efd6f72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51a905b2a0b07584d8f7cdce4c5db785efd6f72b"}], "stats": {"total": 185, "additions": 13, "deletions": 172}, "files": [{"sha": "06f6c981bf96fe3d4e672d034f50212484ce0cb6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -1,3 +1,16 @@\n+2013-04-04  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* gcc.target/aarch64/inc/asm-adder-clobber-lr.c: Remove duplication.\n+\t* gcc.target/aarch64/inc/asm-adder-no-clobber-lr.c: Likewise.\n+\t* gcc.target/aarch64/test-framepointer-1.c: Likewise.\n+\t* gcc.target/aarch64/test-framepointer-2.c: Likewise.\n+\t* gcc.target/aarch64/test-framepointer-3.c: Likewise.\n+\t* gcc.target/aarch64/test-framepointer-4.c: Likewise.\n+\t* gcc.target/aarch64/test-framepointer-5.c: Likewise.\n+\t* gcc.target/aarch64/test-framepointer-6.c: Likewise.\n+\t* gcc.target/aarch64/test-framepointer-7.c: Likewise.\n+\t* gcc.target/aarch64/test-framepointer-8.c: Likewise.\n+\n 2013-04-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56213"}, {"sha": "540c79b0135272b096e799e8bc60e4cbc124955d", "filename": "gcc/testsuite/gcc.target/aarch64/asm-adder-clobber-lr.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fasm-adder-clobber-lr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fasm-adder-clobber-lr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fasm-adder-clobber-lr.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -21,28 +21,3 @@ main (int argc, char** argv)\n \n   return 0;\n }\n-\n-extern void abort (void);\n-\n-int\n-adder (int a, int b)\n-{\n-  int result;\n-  __asm__ (\"add %w0,%w1,%w2\" : \"=r\"(result) : \"r\"(a), \"r\"(b) : \"x30\");\n-  return result;\n-}\n-\n-int\n-main (int argc, char** argv)\n-{\n-  int i;\n-  int total = argc;\n-  for (i = 0; i < 20; i++)\n-    total = adder (total, i);\n-\n-  if (total != (190 + argc))\n-    abort ();\n-\n-  return 0;\n-}\n-"}, {"sha": "2543d50e78f776ea41efab259a45a56fcd767ef1", "filename": "gcc/testsuite/gcc.target/aarch64/asm-adder-no-clobber-lr.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fasm-adder-no-clobber-lr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fasm-adder-no-clobber-lr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fasm-adder-no-clobber-lr.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -21,28 +21,3 @@ main (int argc, char** argv)\n \n   return 0;\n }\n-\n-extern void abort (void);\n-\n-int\n-adder (int a, int b)\n-{\n-  int result;\n-  __asm__ (\"add %w0,%w1,%w2\" : \"=r\"(result) : \"r\"(a), \"r\"(b) : );\n-  return result;\n-}\n-\n-int\n-main (int argc, char** argv)\n-{\n-  int i;\n-  int total = argc;\n-  for (i = 0; i < 20; i++)\n-    total = adder (total, i);\n-\n-  if (total != (190 + argc))\n-    abort ();\n-\n-  return 0;\n-}\n-"}, {"sha": "e44ca6d4cd85e43344b990afd575ea637ac05bf6", "filename": "gcc/testsuite/gcc.target/aarch64/test-framepointer-1.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-1.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -13,18 +13,3 @@\n /* { dg-final { scan-assembler-times \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 2 } } */\n \n /* { dg-final { cleanup-saved-temps } } */\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -fno-inline --save-temps\" } */\n-\n-#include \"asm-adder-no-clobber-lr.c\"\n-\n-/* omit-frame-pointer is FALSE.\n-   omit-leaf-frame-pointer is FALSE.\n-   LR is not being clobbered in the leaf.\n-\n-   With no frame pointer omissions, we expect a frame record\n-   for main and the leaf.  */\n-\n-/* { dg-final { scan-assembler-times \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 2 } } */\n-\n-/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "40e483526b31ab9f053df677cdcfacfbbaf6018f", "filename": "gcc/testsuite/gcc.target/aarch64/test-framepointer-2.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-2.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -13,18 +13,3 @@\n /* { dg-final { scan-assembler-not \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" } } */\n \n /* { dg-final { cleanup-saved-temps } } */\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fomit-frame-pointer -mno-omit-leaf-frame-pointer -fno-inline --save-temps\" } */\n-\n-#include \"asm-adder-no-clobber-lr.c\"\n-\n-/* omit-frame-pointer is TRUE.\n-   omit-leaf-frame-pointer is false, but irrelevant due to omit-frame-pointer.\n-   LR is not being clobbered in the leaf.\n-\n-   Since we asked to have no frame pointers anywhere, we expect no frame\n-   record in main or the leaf.  */\n-\n-/* { dg-final { scan-assembler-not \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" } } */\n-\n-/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "98cb2e0b62bfc4ddc9c0c314d6fc6fb69b81034c", "filename": "gcc/testsuite/gcc.target/aarch64/test-framepointer-3.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-3.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -13,18 +13,3 @@\n /* { dg-final { scan-assembler-not \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" } } */\n \n /* { dg-final { cleanup-saved-temps } } */\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fomit-frame-pointer -momit-leaf-frame-pointer -fno-inline --save-temps\" } */\n-\n-#include \"asm-adder-no-clobber-lr.c\"\n-\n-/* omit-frame-pointer is TRUE.\n-   omit-leaf-frame-pointer is true, but irrelevant due to omit-frame-pointer.\n-   LR is not being clobbered in the leaf.\n-\n-   Since we asked to have no frame pointers anywhere, we expect no frame\n-   record in main or the leaf.  */\n-\n-/* { dg-final { scan-assembler-not \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" } } */\n-\n-/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "4143a7a9cc26116085140fad3f030e1956038691", "filename": "gcc/testsuite/gcc.target/aarch64/test-framepointer-4.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-4.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -14,19 +14,3 @@\n /* { dg-final { scan-assembler-times \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 1 } } */\n \n /* { dg-final { cleanup-saved-temps } } */\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fno-omit-frame-pointer -momit-leaf-frame-pointer -fno-inline --save-temps\" } */\n-\n-#include \"asm-adder-no-clobber-lr.c\"\n-\n-/* omit-frame-pointer is FALSE.\n-   omit-leaf-frame-pointer is TRUE.\n-   LR is not being clobbered in the leaf.\n-\n-   Unless we are removing all frame records, it's OK to remove the frame\n-   record for a leaf where LR is not clobbered.  Therefore, we expect a\n-   frame record only in main.  */\n-\n-/* { dg-final { scan-assembler-times \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 1 } } */\n-\n-/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "c22bdc304a428b731c2411b2775709738e2ce8dc", "filename": "gcc/testsuite/gcc.target/aarch64/test-framepointer-5.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-5.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -13,18 +13,3 @@\n /* { dg-final { scan-assembler-times \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 2 } } */\n \n /* { dg-final { cleanup-saved-temps } } */\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -fno-inline --save-temps\" } */\n-\n-#include \"asm-adder-clobber-lr.c\"\n-\n-/* omit-frame-pointer is FALSE.\n-   omit-leaf-frame-pointer is FALSE.\n-   LR is being clobbered in the leaf.\n-\n-   With no frame pointer omissions, we expect a frame record for main\n-   and the leaf.  */\n-\n-/* { dg-final { scan-assembler-times \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 2 } } */\n-\n-/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "e08ee43e5ec59aa29cccde236c5c1062c2233499", "filename": "gcc/testsuite/gcc.target/aarch64/test-framepointer-6.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-6.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -13,18 +13,3 @@\n /* { dg-final { scan-assembler-not \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" } } */\n \n /* { dg-final { cleanup-saved-temps } } */\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fomit-frame-pointer -mno-omit-leaf-frame-pointer -fno-inline --save-temps\" } */\n-\n-#include \"asm-adder-clobber-lr.c\"\n-\n-/* omit-frame-pointer is TRUE.\n-   omit-leaf-frame-pointer is false, but irrelevant due to omit-frame-pointer.\n-   LR is being clobbered in the leaf.\n-\n-   Since we asked to have no frame pointers anywhere, we expect no frame\n-   record in main or the leaf.  */\n-\n-/* { dg-final { scan-assembler-not \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" } } */\n-\n-/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "e8f7cabe77f98f3730675cc0ab914c705d36cff6", "filename": "gcc/testsuite/gcc.target/aarch64/test-framepointer-7.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-7.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -13,18 +13,3 @@\n /* { dg-final { scan-assembler-not \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" } } */\n \n /* { dg-final { cleanup-saved-temps } } */\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fomit-frame-pointer -momit-leaf-frame-pointer -fno-inline --save-temps\" } */\n-\n-#include \"asm-adder-clobber-lr.c\"\n-\n-/* omit-frame-pointer is TRUE.\n-   omit-leaf-frame-pointer is true, but irrelevant due to omit-frame-pointer.\n-   LR is being clobbered in the leaf.\n-\n-   Since we asked to have no frame pointers anywhere, we expect no frame\n-   record in main or the leaf.  */\n-\n-/* { dg-final { scan-assembler-not \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" } } */\n-\n-/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "c09b687597baf1b18a1fd13ede05328d8d3929a3", "filename": "gcc/testsuite/gcc.target/aarch64/test-framepointer-8.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3c26686c0d5361a477f4a10a0cf52743627f7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest-framepointer-8.c?ref=48f3c26686c0d5361a477f4a10a0cf52743627f7", "patch": "@@ -14,19 +14,3 @@\n /* { dg-final { scan-assembler-times \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 2 } } */\n \n /* { dg-final { cleanup-saved-temps } } */\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fno-omit-frame-pointer -momit-leaf-frame-pointer -fno-inline --save-temps\" } */\n-\n-#include \"asm-adder-clobber-lr.c\"\n-\n-/* omit-frame-pointer is FALSE.\n-   omit-leaf-frame-pointer is TRUE.\n-   LR is being clobbered in the leaf.\n-\n-   Unless we are removing all frame records (which we aren't), it's\n-   not OK to remove the frame record for a leaf where LR is clobbered.\n-   Therefore, we expect a frame record in main and leaf.  */\n-\n-/* { dg-final { scan-assembler-times \"stp\\tx29, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 2 } } */\n-\n-/* { dg-final { cleanup-saved-temps } } */"}]}