{"sha": "91f9a6ede477e36a56e9c287acf464b7541d380b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFmOWE2ZWRlNDc3ZTM2YTU2ZTljMjg3YWNmNDY0Yjc1NDFkMzgwYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-19T18:53:18Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-19T18:53:18Z"}, "message": "(find_reloads): Always use >= with FIRST_PSEUDO_REGISTER.\n\nFrom-SVN: r2164", "tree": {"sha": "65a48046a6017175b9726b645951d835fe9d8e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65a48046a6017175b9726b645951d835fe9d8e95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91f9a6ede477e36a56e9c287acf464b7541d380b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f9a6ede477e36a56e9c287acf464b7541d380b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f9a6ede477e36a56e9c287acf464b7541d380b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f9a6ede477e36a56e9c287acf464b7541d380b/comments", "author": null, "committer": null, "parents": [{"sha": "afc2c5a76f3610df1f10012fd862936fafcfb052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc2c5a76f3610df1f10012fd862936fafcfb052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc2c5a76f3610df1f10012fd862936fafcfb052"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "69d0f31e5e441355a1d0c83f6926ba1957b4079a", "filename": "gcc/reload.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f9a6ede477e36a56e9c287acf464b7541d380b/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f9a6ede477e36a56e9c287acf464b7541d380b/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=91f9a6ede477e36a56e9c287acf464b7541d380b", "patch": "@@ -2201,10 +2201,10 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t equivalent), get the preferred class to reload it into.  */\n       code = GET_CODE (recog_operand[i]);\n       preferred_class[i]\n-\t= ((code == REG && REGNO (recog_operand[i]) > FIRST_PSEUDO_REGISTER)\n+\t= ((code == REG && REGNO (recog_operand[i]) >= FIRST_PSEUDO_REGISTER)\n \t   ? reg_preferred_class (REGNO (recog_operand[i])) : NO_REGS);\n       pref_or_nothing[i]\n-\t= (code == REG && REGNO (recog_operand[i]) > FIRST_PSEUDO_REGISTER\n+\t= (code == REG && REGNO (recog_operand[i]) >= FIRST_PSEUDO_REGISTER\n \t   && reg_alternate_class (REGNO (recog_operand[i])) == NO_REGS);\n     }\n "}]}