{"sha": "e163dbbc4433e598cad7e6011b255d1d6ad93a3b", "node_id": "C_kwDOANBUbNoAKGUxNjNkYmJjNDQzM2U1OThjYWQ3ZTYwMTFiMjU1ZDFkNmFkOTNhM2I", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-12-14T11:02:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-12-14T11:02:55Z"}, "message": "c: Fix ICE on deferred pragma in unknown attribute arguments [PR103587]\n\nWe ICE on the following testcase, because c_parser_balanced_token_sequence\nwhen encountering a deferred pragma will just use c_parser_consume_token\nwhich the FE doesn't allow for CPP_PRAGMA tokens (and if that wasn't\nthe case, it could ICE on CPP_PRAGMA_EOL similarly).\nWe don't know in what exact context the pragma appears when we don't\nknow what those arguments semantically mean, so I think we should just\nskip over them, like e.g. the C++ FE does.  And, I think (/[/{ vs. )/]/}\nfrom outside of the pragma shouldn't be paired with those inside of\nthe pragma and it doesn't seem to be necessary to check that inside of\nthe pragma line itself all the paren kinds are balanced.\n\n2021-12-14  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/103587\n\t* c-parser.c (c_parser_balanced_token_sequence): For CPP_PRAGMA,\n\tconsume the pragma and silently skip to the pragma eol.\n\n\t* gcc.dg/pr103587.c: New test.", "tree": {"sha": "441c977d492d7a6ea5478ce3791185b70fbecc91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/441c977d492d7a6ea5478ce3791185b70fbecc91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e163dbbc4433e598cad7e6011b255d1d6ad93a3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e163dbbc4433e598cad7e6011b255d1d6ad93a3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e163dbbc4433e598cad7e6011b255d1d6ad93a3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e163dbbc4433e598cad7e6011b255d1d6ad93a3b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "228d64af4e244faabab5c47506920a1bde85d74e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228d64af4e244faabab5c47506920a1bde85d74e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/228d64af4e244faabab5c47506920a1bde85d74e"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "d7e5f051ac0a31c8ef9a277acf7f81b56ec87467", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e163dbbc4433e598cad7e6011b255d1d6ad93a3b/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e163dbbc4433e598cad7e6011b255d1d6ad93a3b/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=e163dbbc4433e598cad7e6011b255d1d6ad93a3b", "patch": "@@ -4846,6 +4846,11 @@ c_parser_balanced_token_sequence (c_parser *parser)\n \tcase CPP_EOF:\n \t  return;\n \n+\tcase CPP_PRAGMA:\n+\t  c_parser_consume_pragma (parser);\n+\t  c_parser_skip_to_pragma_eol (parser, false);\n+\t  break;\n+\n \tdefault:\n \t  c_parser_consume_token (parser);\n \t  break;"}, {"sha": "1cbc4d52d9dfe328a7cdbe12b24c39044c1adc3b", "filename": "gcc/testsuite/gcc.dg/pr103587.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e163dbbc4433e598cad7e6011b255d1d6ad93a3b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr103587.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e163dbbc4433e598cad7e6011b255d1d6ad93a3b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr103587.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr103587.c?ref=e163dbbc4433e598cad7e6011b255d1d6ad93a3b", "patch": "@@ -0,0 +1,7 @@\n+/* PR c/103587 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+[[foo::bar(\n+#pragma GCC ivdep\n+)]];\t/* { dg-warning \"attribute ignored\" } */"}]}