{"sha": "1895484016aa288d135e1e475eb3afaa04a4e7b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg5NTQ4NDAxNmFhMjg4ZDEzNWUxZTQ3NWViM2FmYWEwNGE0ZTdiNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-20T11:58:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-20T11:58:49Z"}, "message": "re PR c++/71210 (internal compiler error: in assign_temp, at function.c:961)\n\n\tPR c++/71210\n\t* gimple-fold.c (gimple_fold_call): Do not remove lhs of noreturn\n\tcalls if the LHS is variable length or has addressable type.\n\tIf targets[0]->decl is a noreturn call with void return type and\n\tzero arguments, adjust fntype and remove lhs in that case.\n\n\t* g++.dg/opt/pr71210-1.C: New test.\n\t* g++.dg/opt/pr71210-2.C: New test.\n\nFrom-SVN: r236506", "tree": {"sha": "f40d460b0d22bea9c8d8b3aaed1d75663960dafa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f40d460b0d22bea9c8d8b3aaed1d75663960dafa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1895484016aa288d135e1e475eb3afaa04a4e7b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1895484016aa288d135e1e475eb3afaa04a4e7b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1895484016aa288d135e1e475eb3afaa04a4e7b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1895484016aa288d135e1e475eb3afaa04a4e7b6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6804797178f4c4c831fa43e94f51fdaaad4641f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6804797178f4c4c831fa43e94f51fdaaad4641f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6804797178f4c4c831fa43e94f51fdaaad4641f3"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "403c01fa9972a811d410fab34f60a6aaf7db7fba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1895484016aa288d135e1e475eb3afaa04a4e7b6", "patch": "@@ -1,3 +1,11 @@\n+2016-05-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/71210\n+\t* gimple-fold.c (gimple_fold_call): Do not remove lhs of noreturn\n+\tcalls if the LHS is variable length or has addressable type.\n+\tIf targets[0]->decl is a noreturn call with void return type and\n+\tzero arguments, adjust fntype and remove lhs in that case.\n+\n 2016-05-20  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/71079"}, {"sha": "858f484442635090c7c625b313aed80a430769d6", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=1895484016aa288d135e1e475eb3afaa04a4e7b6", "patch": "@@ -3039,10 +3039,25 @@ gimple_fold_call (gimple_stmt_iterator *gsi, bool inplace)\n \t\t}\n \t      if (targets.length () == 1)\n \t\t{\n-\t\t  gimple_call_set_fndecl (stmt, targets[0]->decl);\n+\t\t  tree fndecl = targets[0]->decl;\n+\t\t  gimple_call_set_fndecl (stmt, fndecl);\n \t\t  changed = true;\n+\t\t  /* If changing the call to __cxa_pure_virtual\n+\t\t     or similar noreturn function, adjust gimple_call_fntype\n+\t\t     too.  */\n+\t\t  if ((gimple_call_flags (stmt) & ECF_NORETURN)\n+\t\t      && VOID_TYPE_P (TREE_TYPE (TREE_TYPE (fndecl)))\n+\t\t      && TYPE_ARG_TYPES (TREE_TYPE (fndecl))\n+\t\t      && (TREE_VALUE (TYPE_ARG_TYPES (TREE_TYPE (fndecl)))\n+\t\t\t  == void_type_node))\n+\t\t    gimple_call_set_fntype (stmt, TREE_TYPE (fndecl));\n \t\t  /* If the call becomes noreturn, remove the lhs.  */\n-\t\t  if (lhs && (gimple_call_flags (stmt) & ECF_NORETURN))\n+\t\t  if (lhs\n+\t\t      && (gimple_call_flags (stmt) & ECF_NORETURN)\n+\t\t      && (VOID_TYPE_P (TREE_TYPE (gimple_call_fntype (stmt)))\n+\t\t\t  || ((TREE_CODE (TYPE_SIZE_UNIT (TREE_TYPE (lhs)))\n+\t\t\t       == INTEGER_CST)\n+\t\t\t      && !TREE_ADDRESSABLE (TREE_TYPE (lhs)))))\n \t\t    {\n \t\t      if (TREE_CODE (lhs) == SSA_NAME)\n \t\t\t{"}, {"sha": "fe4727a5e3cfc4d2ec179a5d4a6304af2c864e4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1895484016aa288d135e1e475eb3afaa04a4e7b6", "patch": "@@ -1,5 +1,9 @@\n 2016-05-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/71210\n+\t* g++.dg/opt/pr71210-1.C: New test.\n+\t* g++.dg/opt/pr71210-2.C: New test.\n+\n \tPR tree-optimization/29756\n \tgcc.dg/tree-ssa/vector-6.c: Add -Wno-psabi -w to dg-options.\n \tAdd -msse2 for x86 and -maltivec for powerpc.  Use scan-tree-dump-times"}, {"sha": "03b1fb55c5094601bc574354fdd5fed9423f1c5a", "filename": "gcc/testsuite/g++.dg/opt/pr71210-1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr71210-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr71210-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr71210-1.C?ref=1895484016aa288d135e1e475eb3afaa04a4e7b6", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/71210\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+#include <typeinfo>\n+\n+void f1 (const std::type_info&) __attribute__((noreturn));\n+struct S1 { ~S1 (); };\n+struct S2\n+{\n+  virtual S1 f2 () const { f1 (typeid (*this)); }\n+  S1 f3 () const { return f2 (); }\n+};\n+void f4 () { S2 a; a.f3 (); }"}, {"sha": "02a31bd5fe8087995ba99c04f753cd944bd596b9", "filename": "gcc/testsuite/g++.dg/opt/pr71210-2.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr71210-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1895484016aa288d135e1e475eb3afaa04a4e7b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr71210-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr71210-2.C?ref=1895484016aa288d135e1e475eb3afaa04a4e7b6", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/71210\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+struct C { int a; int b; C (); ~C (); };\n+\n+namespace\n+{\n+  struct A\n+  {\n+    A () {}\n+    virtual C bar (int) = 0;\n+    C baz (int x) { return bar (x); }\n+  };\n+}\n+\n+A *a;\n+\n+void\n+foo ()\n+{\n+  C c = a->baz (0);\n+}"}]}