{"sha": "dfe79cab9b242337d696548f80b2bb9cb190b135", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZlNzljYWI5YjI0MjMzN2Q2OTY1NDhmODBiMmJiOWNiMTkwYjEzNQ==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@debian.org", "date": "2004-07-25T18:08:52Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2004-07-25T18:08:52Z"}, "message": "pragma-align-2.c: New test.\n\n\t* gcc.dg/pragma-align-2.c: New test.\n\t* gcc.dg/pragma-init-fini.c: New test.\n\t* gcc.dg/pragma-align.c: Change from compile to run.  Run on Solaris\n\ttargets.\n\nFrom-SVN: r85154", "tree": {"sha": "1f708a42c0cd1ba9c5a6fbd8a3a22e6e711dade2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f708a42c0cd1ba9c5a6fbd8a3a22e6e711dade2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfe79cab9b242337d696548f80b2bb9cb190b135", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfe79cab9b242337d696548f80b2bb9cb190b135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfe79cab9b242337d696548f80b2bb9cb190b135", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfe79cab9b242337d696548f80b2bb9cb190b135/comments", "author": null, "committer": null, "parents": [{"sha": "e3a64162f5cd539922b53eba91229e4b882bcad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3a64162f5cd539922b53eba91229e4b882bcad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3a64162f5cd539922b53eba91229e4b882bcad6"}], "stats": {"total": 114, "additions": 112, "deletions": 2}, "files": [{"sha": "fca22b7403802d37cd13501173b75431365dfe4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfe79cab9b242337d696548f80b2bb9cb190b135/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfe79cab9b242337d696548f80b2bb9cb190b135/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dfe79cab9b242337d696548f80b2bb9cb190b135", "patch": "@@ -1,3 +1,10 @@\n+2004-07-25  Daniel Jacobowitz  <dan@debian.org>\n+\n+\t* gcc.dg/pragma-align-2.c: New test.\n+\t* gcc.dg/pragma-init-fini.c: New test.\n+\t* gcc.dg/pragma-align.c: Change from compile to run.  Run on Solaris\n+\ttargets.\n+\n 2004-07-25  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.dg/init-string-2.c: New test."}, {"sha": "3d5e0da32707ef30154eac0dd499aab339c90369", "filename": "gcc/testsuite/gcc.dg/pragma-align-2.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfe79cab9b242337d696548f80b2bb9cb190b135/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfe79cab9b242337d696548f80b2bb9cb190b135/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align-2.c?ref=dfe79cab9b242337d696548f80b2bb9cb190b135", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do run { target *-*-solaris2.* } } */\n+\n+void abort (void);\n+\n+#pragma align 1(x1)\n+#pragma align 2(x2)\n+#pragma align 4(x4)\n+#pragma align 8(x8,y8,z8)\n+#pragma align 16(x16)\n+#pragma align 32(x32)\n+#pragma align 64(x64)\n+#pragma align 128(x128)\n+\n+#pragma align 8(not_defined)\n+\n+#pragma align 9(odd_align)\t/* { dg-error \"invalid alignment\" } */\n+#pragma align 256(high_align)\t/* { dg-error \"invalid alignment\" } */\n+#pragma align -1(neg_align)\t/* { dg-error \"malformed\" } */\n+#pragma align bad_align\t\t/* { dg-error \"malformed\" } */\n+#pragma align 1(bad_align\t/* { dg-error \"malformed\" } */\n+\n+int x, x1, x2, x4, x8, y8, z8, x16, x32, x64, x128;\n+\n+#pragma align 16(x)\t\t/* { dg-error \"must appear before\" } */\n+\n+int\n+main ()\n+{\n+  if (__alignof__ (x4) < 4)\n+    abort ();\n+\n+  if (__alignof__ (x8) < 8)\n+    abort ();\n+\n+  if (__alignof__ (y8) < 8)\n+    abort ();\n+\n+  if (__alignof__ (z8) < 8)\n+    abort ();\n+\n+  if (__alignof__ (x16) < 16)\n+    abort ();\n+\n+  if (__alignof__ (x32) < 32)\n+    abort ();\n+\n+  if (__alignof__ (x64) < 64)\n+    abort ();\n+\n+  if (__alignof__ (x128) < 128)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "5341870b6cbcb6a8cd4977ad90970ab1ec3b8292", "filename": "gcc/testsuite/gcc.dg/pragma-align.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfe79cab9b242337d696548f80b2bb9cb190b135/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfe79cab9b242337d696548f80b2bb9cb190b135/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align.c?ref=dfe79cab9b242337d696548f80b2bb9cb190b135", "patch": "@@ -1,6 +1,6 @@\n /* Prove that HANDLE_SYSTEMV_PRAGMA alignment handling works somewhat. */\n \n-/* { dg-do compile { target i?86-*-linux* i?86-*-*bsd* i?86-*-sco3.2v5* } } */\n+/* { dg-do run { target i?86-*-linux* i?86-*-*bsd* i?86-*-sco3.2v5* *-*-solaris2.* } } */\n \n struct {\n         char one;\n@@ -39,4 +39,3 @@ main()\n         if(sizeof(resetalign) != sizeof(defaultalign)) abort();\n \treturn 0;\n }\n-"}, {"sha": "8c5c53a25aa682203927a5b51089b7724913e0c7", "filename": "gcc/testsuite/gcc.dg/pragma-init-fini.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfe79cab9b242337d696548f80b2bb9cb190b135/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-init-fini.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfe79cab9b242337d696548f80b2bb9cb190b135/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-init-fini.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-init-fini.c?ref=dfe79cab9b242337d696548f80b2bb9cb190b135", "patch": "@@ -0,0 +1,50 @@\n+/* Tests for #pragma init and #pragma fini.  */\n+\n+/* { dg-do run { target *-*-solaris2.* } } */\n+\n+extern void abort ();\n+\n+#pragma init\t\t/* { dg-error \"malformed\" } */\n+#pragma init ()\t\t/* { dg-error \"malformed\" } */\n+#pragma init init_func\t/* { dg-error \"malformed\" } */\n+\n+#pragma fini\t\t/* { dg-error \"malformed\" } */\n+#pragma fini ()\t\t/* { dg-error \"malformed\" } */\n+#pragma fini fini_func\t/* { dg-error \"malformed\" } */\n+\n+#pragma init (init_func, init_static_func)\n+\n+int glob_1, glob_2;\n+\n+void init_func (void)\n+{\n+  glob_1 = 1;\n+}\n+\n+static void init_static_func (void)\n+{\n+  glob_2 = 2;\n+}\n+\n+#pragma fini (fini_func, fini_static_func)\n+\n+void fini_func (void)\n+{\n+\n+}\n+\n+static void fini_static_func (void)\n+{\n+\n+}\n+\n+int main()\n+{\n+  if (glob_1 != 1)\n+    abort ();\n+\n+  if (glob_2 != 2)\n+    abort ();\n+\n+  return 0;\n+}"}]}