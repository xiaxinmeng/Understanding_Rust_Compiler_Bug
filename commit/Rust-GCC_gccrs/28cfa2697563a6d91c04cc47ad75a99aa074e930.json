{"sha": "28cfa2697563a6d91c04cc47ad75a99aa074e930", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhjZmEyNjk3NTYzYTZkOTFjMDRjYzQ3YWQ3NWE5OWFhMDc0ZTkzMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-05-29T09:29:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-29T09:29:28Z"}, "message": "[Ada] Fix irregular output with -gnatRm\n\nThe information displayed by -gnatRm was using slightly different naming\nand formatting conventions than the rest of the -gnatR information with\nno justification, so this adjusts it for the sake of consistency.\n\nFor the following package:\n\npackage P is\n\n  function F (I : Integer) return Integer;\n\n  type Rec is limited record\n    I : Integer;\n  end record;\n\n  procedure P1 (R : Rec; I : out Integer);\n\n  procedure P2 (R : Rec; I : out Integer);\n  pragma Linker_Section (P2, \".my_section\");\n\n  package Inner is\n\n    procedure P3;\n\n  end Inner;\n\nend P;\n\npackage body P is\n\n  function F (I : Integer) return Integer is\n  begin\n    return I;\n  end;\n\n  procedure P1 (R : Rec; I : out Integer) is\n  begin\n    I := R.I;\n  end;\n\n  procedure P2 (R : Rec; I : out Integer) is\n  begin\n    I := R.I;\n  end;\n\n  package body Inner is\n\n     procedure P3 is\n     begin\n       null;\n     end;\n\n  end Inner;\n\nend P;\n\nthe output of -gnatRm must be:\n\nRepresentation information for unit P (body)\n--------------------------------------------\n\nRepresentation information for unit P (spec)\n--------------------------------------------\n\nfunction F declared at p7.ads:3:12\nconvention : Ada\n   I : passed by copy\nreturns by copy\n\nfor Rec'Size use 32;\nfor Rec'Alignment use 4;\nfor Rec use record\n   I at 0 range  0 .. 31;\nend record;\n\nprocedure P1 declared at p7.ads:9:13\nconvention : Ada\n   R : passed by reference\n   I : passed by copy\n\nprocedure P2 declared at p7.ads:11:13\nconvention : Ada\n   R : passed by reference\n   I : passed by copy\npragma Linker_Section (P2, \".my_section\");\n\nprocedure Inner.P3 declared at p7.ads:16:15\nconvention : Ada\n\n2018-05-29  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* repinfo.adb (List_Entities): Do not list the Linker_Section for\n\tsubprograms here...\n\t(List_Mechanisms): ...but here instead.  Use consistent name output\n\tand formatting conventions.\n\nFrom-SVN: r260861", "tree": {"sha": "8fd4980eb095a485aac1e02eb0aa31fa410f99b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fd4980eb095a485aac1e02eb0aa31fa410f99b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28cfa2697563a6d91c04cc47ad75a99aa074e930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28cfa2697563a6d91c04cc47ad75a99aa074e930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28cfa2697563a6d91c04cc47ad75a99aa074e930", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28cfa2697563a6d91c04cc47ad75a99aa074e930/comments", "author": null, "committer": null, "parents": [{"sha": "9f4b346b0b604183a7b2285df61961ebb4a4c582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4b346b0b604183a7b2285df61961ebb4a4c582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4b346b0b604183a7b2285df61961ebb4a4c582"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "809d468ebb74493b32e6b457524eca3273e7b922", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28cfa2697563a6d91c04cc47ad75a99aa074e930/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28cfa2697563a6d91c04cc47ad75a99aa074e930/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=28cfa2697563a6d91c04cc47ad75a99aa074e930", "patch": "@@ -1,3 +1,10 @@\n+2018-05-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* repinfo.adb (List_Entities): Do not list the Linker_Section for\n+\tsubprograms here...\n+\t(List_Mechanisms): ...but here instead.  Use consistent name output\n+\tand formatting conventions.\n+\n 2018-05-29  Bob Duff  <duff@adacore.com>\n \n \t* lib-writ.adb (Write_ALI): Cleanup: avoid use of global var; call new"}, {"sha": "3b79aa139dbe398f9252830eb2ad8428c1fb7a43", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28cfa2697563a6d91c04cc47ad75a99aa074e930/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28cfa2697563a6d91c04cc47ad75a99aa074e930/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=28cfa2697563a6d91c04cc47ad75a99aa074e930", "patch": "@@ -393,8 +393,6 @@ package body Repinfo is\n               or else Debug_Flag_AA\n             then\n                if Is_Subprogram (E) then\n-                  List_Linker_Section (E);\n-\n                   if List_Representation_Info_Mechanisms then\n                      List_Mechanisms (E);\n                   end if;\n@@ -746,13 +744,12 @@ package body Repinfo is\n             raise Program_Error;\n       end case;\n \n-      Get_Unqualified_Decoded_Name_String (Chars (Ent));\n-      Write_Str (Name_Buffer (1 .. Name_Len));\n+      List_Name (Ent);\n       Write_Str (\" declared at \");\n       Write_Location (Sloc (Ent));\n       Write_Eol;\n \n-      Write_Str (\"  convention : \");\n+      Write_Str (\"convention : \");\n \n       case Convention (Ent) is\n          when Convention_Ada =>\n@@ -814,12 +811,13 @@ package body Repinfo is\n       Form := First_Formal (Ent);\n       while Present (Form) loop\n          Get_Unqualified_Decoded_Name_String (Chars (Form));\n+         Set_Casing (Unit_Casing);\n          while Name_Len <= Plen loop\n             Name_Len := Name_Len + 1;\n             Name_Buffer (Name_Len) := ' ';\n          end loop;\n \n-         Write_Str (\"  \");\n+         Write_Str (\"   \");\n          Write_Str (Name_Buffer (1 .. Plen + 1));\n          Write_Str (\": passed by \");\n \n@@ -829,10 +827,14 @@ package body Repinfo is\n       end loop;\n \n       if Etype (Ent) /= Standard_Void_Type then\n-         Write_Str (\"  returns by \");\n+         Write_Str (\"returns by \");\n          Write_Mechanism (Mechanism (Ent));\n          Write_Eol;\n       end if;\n+\n+      if not Is_Entry (Ent) then\n+         List_Linker_Section (Ent);\n+      end if;\n    end List_Mechanisms;\n \n    ---------------"}]}