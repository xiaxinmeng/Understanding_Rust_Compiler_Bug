{"sha": "b4892310d56ec029bae5195e1f4c385d598303cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ4OTIzMTBkNTZlYzAyOWJhZTUxOTVlMWY0YzM4NWQ1OTgzMDNjYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-22T07:04:18Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-22T07:04:18Z"}, "message": "(init_decl_processing): Set that var.\n\n(finish_incomplete_decl): New function.\n(complete_array_type): Use 0 as default maxindex.\n\nFrom-SVN: r3823", "tree": {"sha": "67507de1211ad1f112d12543bcec402265f65c76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67507de1211ad1f112d12543bcec402265f65c76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4892310d56ec029bae5195e1f4c385d598303cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4892310d56ec029bae5195e1f4c385d598303cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4892310d56ec029bae5195e1f4c385d598303cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4892310d56ec029bae5195e1f4c385d598303cb/comments", "author": null, "committer": null, "parents": [{"sha": "dc437e1631c88df258470bb942c5257e6a2c0c01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc437e1631c88df258470bb942c5257e6a2c0c01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc437e1631c88df258470bb942c5257e6a2c0c01"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "0acd8ff0bdb7da0eac73183b1099994b09e39519", "filename": "gcc/c-decl.c", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4892310d56ec029bae5195e1f4c385d598303cb/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4892310d56ec029bae5195e1f4c385d598303cb/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=b4892310d56ec029bae5195e1f4c385d598303cb", "patch": "@@ -711,6 +711,27 @@ print_lang_identifier (file, node, indent)\n   print_node (file, \"limbo value\", IDENTIFIER_LIMBO_VALUE (node), indent + 4);\n }\n \f\n+/* Hook called at end of compilation to assume 1 elt\n+   for a top-level array decl that wasn't complete before.  */\n+   \n+void\n+finish_incomplete_decl (decl)\n+     tree decl;\n+{\n+  if (TREE_CODE (decl) == VAR_DECL && TREE_TYPE (decl) != error_mark_node)\n+    {\n+      tree type = TREE_TYPE (decl);\n+      if (TREE_CODE (type) == ARRAY_TYPE\n+\t  && TYPE_DOMAIN (type) == 0\n+\t  && TREE_CODE (decl) != TYPE_DECL)\n+\t{\n+\t  complete_array_type (type, NULL_TREE, 1);\n+\n+\t  layout_decl (decl, 0);\n+\t}\n+    }\n+}\n+\f\n /* Create a new `struct binding_level'.  */\n \n static\n@@ -2990,6 +3011,8 @@ init_decl_processing ()\n   init_format_info_table ();\n \n   init_iterators ();\n+\n+  incomplete_decl_finalize_hook = finish_incomplete_decl;\n }\n \n /* Return a definition for a builtin function named NAME and whose data type\n@@ -3359,8 +3382,13 @@ finish_decl (decl, init, asmspec_tree)\n \t{\n \t  if (do_default)\n \t    error_with_decl (decl, \"array size missing in `%s'\");\n-\t  else if (!pedantic && TREE_STATIC (decl))\n-\t    /* ??? Perhaps should set TREE_PUBLIC here?  */\n+\t  /* If a `static' var's size isn't known,\n+\t     make it extern as well as static, so it does not get\n+\t     allocated.\n+\t     If it is not `static', then do not mark extern;\n+\t     finish_incomplete_decl will give it a default size\n+\t     and it will get allocated.  */\n+\t  else if (!pedantic && TREE_STATIC (decl) && ! TREE_PUBLIC (decl))\n \t    DECL_EXTERNAL (decl) = 1;\n \t}\n \n@@ -3580,14 +3608,14 @@ complete_array_type (type, initial_value, do_default)\n \t    value = 1;\n \n \t  /* Prevent further error messages.  */\n-\t  maxindex = build_int_2 (1, 0);\n+\t  maxindex = build_int_2 (0, 0);\n \t}\n     }\n \n   if (!maxindex)\n     {\n       if (do_default)\n-\tmaxindex = build_int_2 (1, 0);\n+\tmaxindex = build_int_2 (0, 0);\n       value = 2;\n     }\n "}]}