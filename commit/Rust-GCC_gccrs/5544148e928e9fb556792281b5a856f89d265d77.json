{"sha": "5544148e928e9fb556792281b5a856f89d265d77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU0NDE0OGU5MjhlOWZiNTU2NzkyMjgxYjVhODU2Zjg5ZDI2NWQ3Nw==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2004-10-05T17:07:14Z"}, "committer": {"name": "Ranjit Mathew", "email": "rmathew@gcc.gnu.org", "date": "2004-10-05T17:07:14Z"}, "message": "Prepare for %q, %< and %> in diagnostic message strings.\n\n\t* java-tree.h (parse_error_context): remove ATTRIBUTE_PRINTF_2.\n\tName second parameter 'msgid'.\n\t* parse.y: Additionally include pretty-print.h and diagnostic.h.\n\t(issue_warning_error_from_context): Use pretty-printer functions\n\tinstead of vsprintf for constructing formatted messages. Rename\n\tparameter 'msg' to 'msgid'.\n\t(parse_error_context): Rename parameter 'msg' to 'msgid'.\n\t(parse_warning_context): Likewise.\n\nFrom-SVN: r88562", "tree": {"sha": "8e39e022d3dc1848c313c01830d01d75c059c4b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e39e022d3dc1848c313c01830d01d75c059c4b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5544148e928e9fb556792281b5a856f89d265d77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5544148e928e9fb556792281b5a856f89d265d77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5544148e928e9fb556792281b5a856f89d265d77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5544148e928e9fb556792281b5a856f89d265d77/comments", "author": null, "committer": null, "parents": [{"sha": "73407061a1bd7debdc883bd1cd1addc7dd5c06f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73407061a1bd7debdc883bd1cd1addc7dd5c06f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73407061a1bd7debdc883bd1cd1addc7dd5c06f6"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "56ac57ecb8d53b4d9b482363079a9f01ece65f14", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5544148e928e9fb556792281b5a856f89d265d77/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5544148e928e9fb556792281b5a856f89d265d77/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5544148e928e9fb556792281b5a856f89d265d77", "patch": "@@ -1,3 +1,15 @@\n+2004-10-05  Ranjit Mathew  <rmathew@hotmail.com>\n+\n+\tPrepare for %q, %< and %> in diagnostic message strings.\n+\t* java-tree.h (parse_error_context): remove ATTRIBUTE_PRINTF_2.\n+\tName second parameter 'msgid'.\n+\t* parse.y: Additionally include pretty-print.h and diagnostic.h.\n+\t(issue_warning_error_from_context): Use pretty-printer functions\n+\tinstead of vsprintf for constructing formatted messages. Rename\n+\tparameter 'msg' to 'msgid'.\n+\t(parse_error_context): Rename parameter 'msg' to 'msgid'.\n+\t(parse_warning_context): Likewise.\n+\n 2004-10-05  Andrew Haley  <aph@redhat.com>\n \n \tPR java/17779"}, {"sha": "a43bc2eebe8bb4a31ea23dda41a9da1edf03dc2a", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5544148e928e9fb556792281b5a856f89d265d77/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5544148e928e9fb556792281b5a856f89d265d77/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=5544148e928e9fb556792281b5a856f89d265d77", "patch": "@@ -1247,8 +1247,7 @@ extern tree emit_symbol_table (tree, tree, tree, tree, tree);\n extern void lang_init_source (int);\n extern void write_classfile (tree);\n extern char *print_int_node (tree);\n-extern void parse_error_context (tree cl, const char *, ...)\n-  ATTRIBUTE_PRINTF_2;\n+extern void parse_error_context (tree cl, const char *msgid, ...);\n extern void finish_class (void);\n extern void java_layout_seen_class_methods (void);\n extern void check_for_initialization (tree, tree);"}, {"sha": "5544cae888e43ada9860188e173f83437fe5179d", "filename": "gcc/java/parse.y", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5544148e928e9fb556792281b5a856f89d265d77/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5544148e928e9fb556792281b5a856f89d265d77/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=5544148e928e9fb556792281b5a856f89d265d77", "patch": "@@ -57,6 +57,8 @@ definitions and other extensions.  */\n #include \"real.h\"\n #include \"obstack.h\"\n #include \"toplev.h\"\n+#include \"pretty-print.h\"\n+#include \"diagnostic.h\"\n #include \"flags.h\"\n #include \"java-tree.h\"\n #include \"jcf.h\"\n@@ -3141,7 +3143,7 @@ issue_warning_error_from_context (\n #else\n \t\t\t\t  tree cl,\n #endif\n-\t\t\t\t  const char *msg, va_list ap)\n+\t\t\t\t  const char *msgid, va_list ap)\n {\n #ifdef USE_MAPPED_LOCATION\n   source_location saved_location = input_location;\n@@ -3151,7 +3153,16 @@ issue_warning_error_from_context (\n   const char *saved = ctxp->filename, *saved_input_filename;\n #endif\n   char buffer [4096];\n-  vsprintf (buffer, msg, ap);\n+  text_info text;\n+\n+  text.err_no = errno;\n+  text.args_ptr = &ap;\n+  text.format_spec = msgid;\n+  pp_format_text (global_dc->printer, &text);\n+  strncpy (buffer, pp_formatted_text (global_dc->printer), sizeof (buffer) - 1);\n+  buffer[sizeof (buffer) - 1] = '\\0';\n+  pp_clear_output_area (global_dc->printer);\n+\n   force_error = 1;\n \n #ifdef USE_MAPPED_LOCATION\n@@ -3188,14 +3199,14 @@ issue_warning_error_from_context (\n    FUTURE/FIXME:  change cl to be a source_location. */\n \n void\n-parse_error_context (tree cl, const char *msg, ...)\n+parse_error_context (tree cl, const char *msgid, ...)\n {\n   va_list ap;\n-  va_start (ap, msg);\n+  va_start (ap, msgid);\n #ifdef USE_MAPPED_LOCATION\n-  issue_warning_error_from_context (EXPR_LOCATION (cl), msg, ap);\n+  issue_warning_error_from_context (EXPR_LOCATION (cl), msgid, ap);\n #else\n-  issue_warning_error_from_context (cl, msg, ap);\n+  issue_warning_error_from_context (cl, msgid, ap);\n #endif\n   va_end (ap);\n }\n@@ -3204,16 +3215,16 @@ parse_error_context (tree cl, const char *msg, ...)\n    FUTURE/FIXME:  change cl to be a source_location. */\n \n static void\n-parse_warning_context (tree cl, const char *msg, ...)\n+parse_warning_context (tree cl, const char *msgid, ...)\n {\n   va_list ap;\n-  va_start (ap, msg);\n+  va_start (ap, msgid);\n \n   do_warning = 1;\n #ifdef USE_MAPPED_LOCATION\n-  issue_warning_error_from_context (EXPR_LOCATION (cl), msg, ap);\n+  issue_warning_error_from_context (EXPR_LOCATION (cl), msgid, ap);\n #else\n-  issue_warning_error_from_context (cl, msg, ap);\n+  issue_warning_error_from_context (cl, msgid, ap);\n #endif\n   do_warning = 0;\n   va_end (ap);"}]}