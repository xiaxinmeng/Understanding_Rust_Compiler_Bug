{"sha": "79f41ea419aba4b68b40840ac2eac7827d93b307", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlmNDFlYTQxOWFiYTRiNjhiNDA4NDBhYzJlYWM3ODI3ZDkzYjMwNw==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2000-11-28T22:28:49Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2000-11-28T22:28:49Z"}, "message": "atomicity.h (__exchange_and_add): Silence preprocessor multi-line string warnings.\n\n\t2000-11-28  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\t* config/cpu/powerpc/bits/atomicity.h (__exchange_and_add): Silence\n\tpreprocessor multi-line string warnings.\n\t(__atomic_add): Likewise.\n\t(__compare_and_swap): Likewise.\n\t(__always_swap): Likewise.\n\t(__test_and_set): Likewise.\n\t* config/cpu/arm/bits/atomicity.h (__exchange_and_add): Likewise.\n\t(__atomic_add): Likewise.\n\t(__compare_and_swap): Likewise.\n\t(__always_swap): Likewise.\n\t(__test_and_set): Likewise.\n\nFrom-SVN: r37831", "tree": {"sha": "16fb05e191c4e31aa82568d62203e49e4dbfd5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16fb05e191c4e31aa82568d62203e49e4dbfd5e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79f41ea419aba4b68b40840ac2eac7827d93b307", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79f41ea419aba4b68b40840ac2eac7827d93b307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79f41ea419aba4b68b40840ac2eac7827d93b307", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79f41ea419aba4b68b40840ac2eac7827d93b307/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70cf82bcf5c19dbfc10aab5914426dcf5764d799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70cf82bcf5c19dbfc10aab5914426dcf5764d799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70cf82bcf5c19dbfc10aab5914426dcf5764d799"}], "stats": {"total": 221, "additions": 138, "deletions": 83}, "files": [{"sha": "11e529acbcd3faf0ce7f2e26e6332a40d3400610", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f41ea419aba4b68b40840ac2eac7827d93b307/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f41ea419aba4b68b40840ac2eac7827d93b307/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=79f41ea419aba4b68b40840ac2eac7827d93b307", "patch": "@@ -1,3 +1,17 @@\n+2000-11-28  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* config/cpu/powerpc/bits/atomicity.h (__exchange_and_add): Silence\n+\tpreprocessor multi-line string warnings.\n+\t(__atomic_add): Likewise.\n+\t(__compare_and_swap): Likewise.\n+\t(__always_swap): Likewise.\n+\t(__test_and_set): Likewise.\n+\t* config/cpu/arm/bits/atomicity.h (__exchange_and_add): Likewise.\n+\t(__atomic_add): Likewise.\n+\t(__compare_and_swap): Likewise.\n+\t(__always_swap): Likewise.\n+\t(__test_and_set): Likewise.\n+\n 2000-11-28  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \tUpdate for 2.91 release."}, {"sha": "32987757b1248ab96707528b4f77b481f15345ed", "filename": "libstdc++-v3/config/cpu/arm/bits/atomicity.h", "status": "modified", "additions": 65, "deletions": 49, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f41ea419aba4b68b40840ac2eac7827d93b307/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f41ea419aba4b68b40840ac2eac7827d93b307/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fbits%2Fatomicity.h?ref=79f41ea419aba4b68b40840ac2eac7827d93b307", "patch": "@@ -27,16 +27,19 @@ __attribute__ ((__unused__))\n __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __tmp, __tmp2, __result;\n-  __asm__ __volatile__ (\"\\\n-0:      ldr     %0,[%3]\n-        add     %1,%0,%4\n-        swp     %2,%1,[%3]\n-        cmp     %0,%2\n-        swpne   %1,%2,[%3]\n-        bne     0b\n-\" : \"=&r\"(__result), \"=&r\"(__tmp), \"=&r\"(__tmp2) \n-  : \"r\" (__mem), \"r\"(__val) \n-  : \"cc\", \"memory\");\n+  __asm__ __volatile__ (\n+\t\"\\n\"\n+\t\"0:\\t\"\n+\t\"ldr     %0,[%3] \\n\\t\"\n+\t\"add     %1,%0,%4 \\n\\t\"\n+\t\"swp     %2,%1,[%3] \\n\\t\"\n+\t\"cmp     %0,%2 \\n\\t\"\n+\t\"swpne   %1,%2,[%3] \\n\\t\"\n+\t\"bne     0b \\n\\t\"\n+\t\"\"\n+\t: \"=&r\"(__result), \"=&r\"(__tmp), \"=&r\"(__tmp2) \n+\t: \"r\" (__mem), \"r\"(__val) \n+\t: \"cc\", \"memory\");\n   return __result;\n }\n \n@@ -45,16 +48,19 @@ __attribute__ ((__unused__))\n __atomic_add (volatile _Atomic_word *__mem, int __val)\n {\n   _Atomic_word __tmp, __tmp2, __tmp3;\n-  __asm__ __volatile__ (\"\\\n-0:      ldr     %0,[%3]\n-        add     %1,%0,%4\n-        swp     %2,%1,[%3]\n-        cmp     %0,%2\n-        swpne   %1,%2,[%3]\n-        bne     0b\n-\" : \"=&r\"(__tmp), \"=&r\"(__tmp2), \"=&r\"(__tmp3) \n-  : \"r\" (__mem), \"r\"(__val) \n-  : \"cc\", \"memory\");\n+  __asm__ __volatile__ (\n+\t\"\\n\"\n+\t\"0:\\t\"\n+\t\"ldr     %0,[%3] \\n\\t\"\n+\t\"add     %1,%0,%4 \\n\\t\"\n+\t\"swp     %2,%1,[%3] \\n\\t\"\n+\t\"cmp     %0,%2 \\n\\t\"\n+\t\"swpne   %1,%2,[%3] \\n\\t\"\n+\t\"bne     0b \\n\\t\"\n+\t\"\"\n+\t: \"=&r\"(__tmp), \"=&r\"(__tmp2), \"=&r\"(__tmp3) \n+\t: \"r\" (__mem), \"r\"(__val) \n+\t: \"cc\", \"memory\");\n }\n \n static inline int\n@@ -63,20 +69,23 @@ __compare_and_swap (volatile long *__p, long __oldval, long __newval)\n {\n   int __result;\n   long __tmp;\n-  __asm__ __volatile__ (\"\\\n-0:      ldr     %1,[%2]\n-        mov     %0,#0\n-        cmp     %1,%4\n-        bne     1f\n-        swp     %0,%3,[%2]\n-        cmp     %1,%0\n-        swpne   %1,%0,[%2]\n-        bne     0b\n-        mov     %0,#1\n-1:\n-\" : \"=&r\"(__result), \"=&r\"(__tmp) \n-  : \"r\" (__p), \"r\" (__newval), \"r\" (__oldval) \n-  : \"cc\", \"memory\");\n+  __asm__ __volatile__ (\n+\t\"\\n\"\n+\t\"0:\\t\"\n+\t\"ldr     %1,[%2] \\n\\t\"\n+\t\"mov     %0,#0 \\n\\t\"\n+\t\"cmp     %1,%4 \\n\\t\"\n+\t\"bne     1f \\n\\t\"\n+\t\"swp     %0,%3,[%2] \\n\\t\"\n+\t\"cmp     %1,%0 \\n\\t\"\n+\t\"swpne   %1,%0,[%2] \\n\\t\"\n+\t\"bne     0b \\n\\t\"\n+\t\"mov     %0,#1 \\n\"\n+\t\"1:\\n\\t\"\n+\t\"\"\n+\t: \"=&r\"(__result), \"=&r\"(__tmp) \n+\t: \"r\" (__p), \"r\" (__newval), \"r\" (__oldval) \n+\t: \"cc\", \"memory\");\n   return __result;\n }\n \n@@ -85,9 +94,13 @@ __attribute__ ((__unused__))\n __always_swap (volatile long *__p, long __newval)\n {\n   long __result;\n-  __asm__ __volatile__ (\"\\\n-        swp     %0,%2,[%1]\n-\" : \"=&r\"(__result) : \"r\"(__p), \"r\"(__newval) : \"memory\");\n+  __asm__ __volatile__ (\n+\t\"\\n\\t\"\n+\t\"swp     %0,%2,[%1] \\n\\t\"\n+\t\"\"\n+\t: \"=&r\"(__result)\n+\t: \"r\"(__p), \"r\"(__newval)\n+\t: \"memory\");\n   return __result;\n }\n \n@@ -97,18 +110,21 @@ __test_and_set (volatile long *__p, long __newval)\n {\n   int __result;\n   long __tmp;\n-  __asm__ __volatile__ (\"\\\n-0:      ldr     %0,[%2]\n-        cmp     %0,#0\n-        bne     1f\n-        swp     %1,%3,[%2]\n-        cmp     %0,%1\n-        swpne   %0,%1,[%2]\n-        bne     0b\n-1:\n-\" : \"=&r\"(__result), \"=r\" (__tmp) \n-  : \"r\"(__p), \"r\"(__newval) \n-  : \"cc\", \"memory\");\n+  __asm__ __volatile__ (\n+\t\"\\n\"\n+\t\"0:\\t\"\n+\t\"ldr     %0,[%2] \\n\\t\"\n+\t\"cmp     %0,#0 \\n\\t\"\n+\t\"bne     1f \\n\\t\"\n+\t\"swp     %1,%3,[%2] \\n\\t\"\n+\t\"cmp     %0,%1 \\n\\t\"\n+\t\"swpne   %0,%1,[%2] \\n\\t\"\n+\t\"bne     0b \\n\"\n+\t\"1:\\n\\t\"\n+\t\"\"\n+\t: \"=&r\"(__result), \"=r\" (__tmp) \n+\t: \"r\"(__p), \"r\"(__newval) \n+\t: \"cc\", \"memory\");\n   return __result;\n }\n "}, {"sha": "667572d7d9e5b975df1f8a6541400a8305fdf4d6", "filename": "libstdc++-v3/config/cpu/powerpc/bits/atomicity.h", "status": "modified", "additions": 59, "deletions": 34, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f41ea419aba4b68b40840ac2eac7827d93b307/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f41ea419aba4b68b40840ac2eac7827d93b307/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fbits%2Fatomicity.h?ref=79f41ea419aba4b68b40840ac2eac7827d93b307", "patch": "@@ -27,12 +27,17 @@ __attribute__ ((__unused__))\n __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __tmp, __res;\n-  __asm__ __volatile__ (\"\\\n-0:\tlwarx\t%0,0,%2\n-\tadd%I3\t%1,%0,%3\n-\tstwcx.\t%1,0,%2\n-\tbne-\t0b\n-\" : \"=&b\"(__res), \"=&r\"(__tmp) : \"r\" (__mem), \"Ir\"(__val) : \"cr0\", \"memory\");\n+  __asm__ __volatile__ (\n+\t\"/* Inline exchange & add */\\n\"\n+\t\"0:\\t\"\n+\t\"lwarx    %0,0,%2 \\n\\t\"\n+\t\"add%I3   %1,%0,%3 \\n\\t\"\n+\t\"stwcx.   %1,0,%2 \\n\\t\"\n+\t\"bne-     0b \\n\\t\"\n+\t\"/* End exchange & add */\"\n+\t: \"=&b\"(__res), \"=&r\"(__tmp)\n+\t: \"r\" (__mem), \"Ir\"(__val)\n+\t: \"cr0\", \"memory\");\n   return __res;\n }\n \n@@ -41,28 +46,38 @@ __attribute__ ((__unused__))\n __atomic_add (volatile _Atomic_word *__mem, int __val)\n {\n   _Atomic_word __tmp;\n-  __asm__ __volatile__ (\"\\\n-0:\tlwarx\t%0,0,%1\n-\tadd%I2\t%0,%0,%2\n-\tstwcx.\t%0,0,%1\n-\tbne-\t0b\n-\" : \"=&b\"(__tmp) : \"r\" (__mem), \"Ir\"(__val) : \"cr0\", \"memory\");\n+  __asm__ __volatile__ (\n+\t\"/* Inline atomic add */\\n\"\n+\t\"0:\\t\"\n+\t\"lwarx    %0,0,%1 \\n\\t\"\n+\t\"add%I2   %0,%0,%2 \\n\\t\"\n+\t\"stwcx.   %0,0,%1 \\n\\t\"\n+\t\"bne-     0b \\n\\t\"\n+\t\"/* End atomic add */\"\n+\t: \"=&b\"(__tmp)\n+\t: \"r\" (__mem), \"Ir\"(__val)\n+\t: \"cr0\", \"memory\");\n }\n \n static inline int\n __attribute__ ((__unused__))\n __compare_and_swap (volatile long *__p, long int __oldval, long int __newval)\n {\n   int __res;\n-  __asm__ __volatile__ (\"\\\n-0:\tlwarx\t%0,0,%1\n-\tsub%I2c.\t%0,%0,%2\n-\tcntlzw\t%0,%0\n-\tbne-\t1f\n-\tstwcx.\t%3,0,%1\n-\tbne-\t0b\n-1:\n-\" : \"=&b\"(__res) : \"r\"(__p), \"Ir\"(__oldval), \"r\"(__newval) : \"cr0\", \"memory\");\n+  __asm__ __volatile__ (\n+\t\"/* Inline compare & swap */\\n\"\n+\t\"0:\\t\"\n+\t\"lwarx    %0,0,%1  \\n\\t\"\n+\t\"sub%I2c. %0,%0,%2 \\n\\t\"\n+\t\"cntlzw   %0,%0 \\n\\t\"\n+\t\"bne-     1f \\n\\t\"\n+\t\"stwcx.   %3,0,%1 \\n\\t\"\n+\t\"bne-     0b \\n\"\n+\t\"1:\\n\\t\"\n+\t\"/* End compare & swap */\"\n+\t: \"=&b\"(__res)\n+\t: \"r\"(__p), \"Ir\"(__oldval), \"r\"(__newval)\n+\t: \"cr0\", \"memory\");\n   return __res >> 5;\n }\n \n@@ -71,11 +86,16 @@ __attribute__ ((__unused__))\n __always_swap (volatile long *__p, long int __newval)\n {\n   long __res;\n-  __asm__ __volatile__ (\"\\\n-0:\tlwarx\t%0,0,%1\n-\tstwcx.\t%2,0,%1\n-\tbne-\t0b\n-\" : \"=&r\"(__res) : \"r\"(__p), \"r\"(__newval) : \"cr0\", \"memory\");\n+  __asm__ __volatile__ (\n+\t\"/* Inline always swap */\\n\"\n+\t\"0:\\t\"\n+\t\"lwarx    %0,0,%1 \\n\\t\"\n+\t\"stwcx.   %2,0,%1 \\n\\t\"\n+\t\"bne-     0b \\n\\t\"\n+\t\"/* End always swap */\"\n+\t: \"=&r\"(__res)\n+\t: \"r\"(__p), \"r\"(__newval)\n+\t: \"cr0\", \"memory\");\n   return __res;\n }\n \n@@ -84,14 +104,19 @@ __attribute__ ((__unused__))\n __test_and_set (volatile long *__p, long int __newval)\n {\n   int __res;\n-  __asm__ __volatile__ (\"\\\n-0:\tlwarx\t%0,0,%1\n-\tcmpwi\t%0,0\n-\tbne-\t1f\n-\tstwcx.\t%2,0,%1\n-\tbne-\t0b\n-1:\n-\" : \"=&r\"(__res) : \"r\"(__p), \"r\"(__newval) : \"cr0\", \"memory\");\n+  __asm__ __volatile__ (\n+\t\"/* Inline test & set */\\n\"\n+\t\"0:\\t\"\n+\t\"lwarx    %0,0,%1 \\n\\t\"\n+\t\"cmpwi    %0,0 \\n\\t\"\n+\t\"bne-     1f \\n\\t\"\n+\t\"stwcx.   %2,0,%1 \\n\\t\"\n+\t\"bne-     0b \\n\"\n+\t\"1:\\n\\t\"\n+\t\"/* End test & set */\"\n+\t: \"=&r\"(__res)\n+\t: \"r\"(__p), \"r\"(__newval)\n+\t: \"cr0\", \"memory\");\n   return __res;\n }\n "}]}