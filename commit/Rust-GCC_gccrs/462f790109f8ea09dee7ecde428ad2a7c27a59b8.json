{"sha": "462f790109f8ea09dee7ecde428ad2a7c27a59b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYyZjc5MDEwOWY4ZWEwOWRlZTdlY2RlNDI4YWQyYTdjMjdhNTliOA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2012-07-27T12:51:45Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2012-07-27T12:51:45Z"}, "message": "constraints.md: Delete \"q\" constraint.\n\n2012-07-27  Segher Boessenkool  <segher@kernel.crashing.org>\n\n        * config/rs6000/constraints.md: Delete \"q\" constraint.\n        * config/rs6000/dfp.md (movsd_hardfloat, movsd_softfloat):\n        Delete the \"q\" alternative.\n        * config/rs6000/predicates.md (gpc_reg_operand): Adjust.\n        * config/rs6000/rs6000.c (rs6000_debug_reg_global,\n        rs6000_init_hard_regno_mode_ok, rs6000_dbx_register_number):\n        Adjust to MQ_REGNO removal.\n        * config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTER): Adjust\n        comment.\n        (REG_ALLOC_ORDER): Adjust comment.  Remove MQ from alloc order.\n        (enum reg_class): Adjust comment.  Delete MQ_REGS.\n        (REG_CLASS_CONTENTS): Adjust.\n        (REGISTER_NAMES, ADDITIONAL_REGISTER_NAMES): Adjust comment.\n        * config/rs6000/rs6000.md: Delete MQ_REGNO.\n        (movsi_internal1, movsi_internal1_single, movhi_internal,\n        movqi_internal, movcc_internal1, movsf_hardfloat,\n        movsf_softfloat): Delete the \"q\" alternative.\n        (ctr<mode>_internal1, ctr<mode>_internal2, ctr<mode>_internal5,\n        ctr<mode>_internal6): Delete \"q\" constraint.\n\nFrom-SVN: r189913", "tree": {"sha": "23e468343a7a5f839977f0640b41b8512e2da565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23e468343a7a5f839977f0640b41b8512e2da565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/462f790109f8ea09dee7ecde428ad2a7c27a59b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462f790109f8ea09dee7ecde428ad2a7c27a59b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/462f790109f8ea09dee7ecde428ad2a7c27a59b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462f790109f8ea09dee7ecde428ad2a7c27a59b8/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9ed2fbdde539392474718ac7783202a49836538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9ed2fbdde539392474718ac7783202a49836538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9ed2fbdde539392474718ac7783202a49836538"}], "stats": {"total": 160, "additions": 80, "deletions": 80}, "files": [{"sha": "13f1da70ab4f07776119926b537972191dad7699", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=462f790109f8ea09dee7ecde428ad2a7c27a59b8", "patch": "@@ -1,3 +1,25 @@\n+2012-07-27  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+        * config/rs6000/constraints.md: Delete \"q\" constraint.\n+        * config/rs6000/dfp.md (movsd_hardfloat, movsd_softfloat):\n+        Delete the \"q\" alternative.\n+        * config/rs6000/predicates.md (gpc_reg_operand): Adjust.\n+        * config/rs6000/rs6000.c (rs6000_debug_reg_global,\n+        rs6000_init_hard_regno_mode_ok, rs6000_dbx_register_number):\n+        Adjust to MQ_REGNO removal.\n+        * config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTER): Adjust\n+        comment.\n+        (REG_ALLOC_ORDER): Adjust comment.  Remove MQ from alloc order.\n+        (enum reg_class): Adjust comment.  Delete MQ_REGS.\n+        (REG_CLASS_CONTENTS): Adjust.\n+        (REGISTER_NAMES, ADDITIONAL_REGISTER_NAMES): Adjust comment.\n+        * config/rs6000/rs6000.md: Delete MQ_REGNO.\n+        (movsi_internal1, movsi_internal1_single, movhi_internal,\n+        movqi_internal, movcc_internal1, movsf_hardfloat,\n+        movsf_softfloat): Delete the \"q\" alternative.\n+        (ctr<mode>_internal1, ctr<mode>_internal2, ctr<mode>_internal5,\n+        ctr<mode>_internal6): Delete \"q\" constraint.\n+\n 2012-07-27  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-into-ssa.c (def_blocks_p): New typedef."}, {"sha": "4a153d4c20ec5ef928af50ea7245071af244a5d1", "filename": "gcc/config/rs6000/constraints.md", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fconstraints.md?ref=462f790109f8ea09dee7ecde428ad2a7c27a59b8", "patch": "@@ -1,5 +1,5 @@\n ;; Constraint definitions for RS6000\n-;; Copyright (C) 2006, 2007, 2009, 2010 Free Software Foundation, Inc.\n+;; Copyright (C) 2006-2012 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -17,7 +17,7 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n-;; Available constraint letters: \"e\", \"k\", \"u\", \"A\", \"B\", \"C\", \"D\"\n+;; Available constraint letters: \"e\", \"k\", \"q\", \"u\", \"A\", \"B\", \"C\", \"D\"\n \n ;; Register constraints\n \n@@ -33,9 +33,6 @@\n (define_register_constraint \"h\" \"SPECIAL_REGS\"\n   \"@internal\")\n \n-(define_register_constraint \"q\" \"MQ_REGS\"\n-  \"@internal\")\n-\n (define_register_constraint \"c\" \"CTR_REGS\"\n   \"@internal\")\n "}, {"sha": "d2fd12b2510e5f1bbeba5d3f381e3764d65897a9", "filename": "gcc/config/rs6000/dfp.md", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Fdfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Fdfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdfp.md?ref=462f790109f8ea09dee7ecde428ad2a7c27a59b8", "patch": "@@ -1,6 +1,5 @@\n ;; Decimal Floating Point (DFP) patterns.\n-;; Copyright (C) 2007, 2008, 2010, 2011\n-;; Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2012 Free Software Foundation, Inc.\n ;; Contributed by Ben Elliston (bje@au.ibm.com) and Peter Bergner\n ;; (bergner@vnet.ibm.com).\n \n@@ -62,8 +61,8 @@\n }\")\n \n (define_insn \"movsd_hardfloat\"\n-  [(set (match_operand:SD 0 \"nonimmediate_operand\" \"=r,r,m,f,*c*l,*q,!r,*h,!r,!r\")\n-\t(match_operand:SD 1 \"input_operand\"        \"r,m,r,f,r,r,h,0,G,Fn\"))]\n+  [(set (match_operand:SD 0 \"nonimmediate_operand\" \"=r,r,m,f,*c*l,!r,*h,!r,!r\")\n+\t(match_operand:SD 1 \"input_operand\"        \"r,m,r,f,r,h,0,G,Fn\"))]\n   \"(gpc_reg_operand (operands[0], SDmode)\n    || gpc_reg_operand (operands[1], SDmode))\n    && (TARGET_HARD_FLOAT && TARGET_FPRS)\"\n@@ -73,24 +72,22 @@\n    {st%U0%X0|stw%U0%X0} %1,%0\n    fmr %0,%1\n    mt%0 %1\n-   mt%0 %1\n    mf%1 %0\n    {cror 0,0,0|nop}\n    #\n    #\"\n-  [(set_attr \"type\" \"*,load,store,fp,mtjmpr,*,mfjmpr,*,*,*\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,8\")])\n+  [(set_attr \"type\" \"*,load,store,fp,mtjmpr,mfjmpr,*,*,*\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,4,4,8\")])\n \n (define_insn \"movsd_softfloat\"\n-  [(set (match_operand:SD 0 \"nonimmediate_operand\" \"=r,cl,q,r,r,m,r,r,r,r,r,*h\")\n-\t(match_operand:SD 1 \"input_operand\" \"r,r,r,h,m,r,I,L,R,G,Fn,0\"))]\n+  [(set (match_operand:SD 0 \"nonimmediate_operand\" \"=r,cl,r,r,m,r,r,r,r,r,*h\")\n+\t(match_operand:SD 1 \"input_operand\" \"r,r,h,m,r,I,L,R,G,Fn,0\"))]\n   \"(gpc_reg_operand (operands[0], SDmode)\n    || gpc_reg_operand (operands[1], SDmode))\n    && (TARGET_SOFT_FLOAT || !TARGET_FPRS)\"\n   \"@\n    mr %0,%1\n    mt%0 %1\n-   mt%0 %1\n    mf%1 %0\n    {l%U1%X1|lwz%U1%X1} %0,%1\n    {st%U0%X0|stw%U0%X0} %1,%0\n@@ -100,8 +97,8 @@\n    #\n    #\n    {cror 0,0,0|nop}\"\n-  [(set_attr \"type\" \"*,mtjmpr,*,mfjmpr,load,store,*,*,*,*,*,*\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,4,8,4\")])\n+  [(set_attr \"type\" \"*,mtjmpr,mfjmpr,load,store,*,*,*,*,*,*\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,8,4\")])\n \n (define_insn \"movsd_store\"\n   [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=m\")"}, {"sha": "e2c3e70d226cbb8508a9e84f6e4256d8e5e83a12", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=462f790109f8ea09dee7ecde428ad2a7c27a59b8", "patch": "@@ -1,6 +1,5 @@\n ;; Predicate definitions for POWER and PowerPC.\n-;; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n-;; Free Software Foundation, Inc.\n+;; Copyright (C) 2005-2012 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -128,7 +127,8 @@\n \t(match_test \"(GET_CODE (op) != REG\n \t\t      || (REGNO (op) >= ARG_POINTER_REGNUM\n \t\t\t  && !CA_REGNO_P (REGNO (op)))\n-\t\t      || REGNO (op) < MQ_REGNO)\n+\t\t      || INT_REGNO_P (REGNO (op))\n+\t\t      || FP_REGNO_P (REGNO (op)))\n \t\t     && !((TARGET_E500_DOUBLE || TARGET_SPE)\n \t\t\t  && invalid_e500_subreg (op, mode))\")))\n "}, {"sha": "ef7d46fe3823ddcee9386444d356dca22c562271", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=462f790109f8ea09dee7ecde428ad2a7c27a59b8", "patch": "@@ -1750,7 +1750,6 @@ rs6000_debug_reg_global (void)\n   rs6000_debug_reg_print (LR_REGNO, LR_REGNO, \"lr\");\n   rs6000_debug_reg_print (CTR_REGNO, CTR_REGNO, \"ctr\");\n   rs6000_debug_reg_print (CR0_REGNO, CR7_REGNO, \"cr\");\n-  rs6000_debug_reg_print (MQ_REGNO, MQ_REGNO, \"mq\");\n   rs6000_debug_reg_print (CA_REGNO, CA_REGNO, \"ca\");\n   rs6000_debug_reg_print (VRSAVE_REGNO, VRSAVE_REGNO, \"vrsave\");\n   rs6000_debug_reg_print (VSCR_REGNO, VSCR_REGNO, \"vscr\");\n@@ -1973,7 +1972,6 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n   for (r = CR1_REGNO; r <= CR7_REGNO; ++r)\n     rs6000_regno_regclass[r] = CR_REGS;\n \n-  rs6000_regno_regclass[MQ_REGNO] = MQ_REGS;\n   rs6000_regno_regclass[LR_REGNO] = LINK_REGS;\n   rs6000_regno_regclass[CTR_REGNO] = CTR_REGS;\n   rs6000_regno_regclass[CA_REGNO] = CA_REGS;\n@@ -27167,8 +27165,6 @@ rs6000_dbx_register_number (unsigned int regno)\n {\n   if (regno <= 63 || write_symbols != DWARF2_DEBUG)\n     return regno;\n-  if (regno == MQ_REGNO)\n-    return 100;\n   if (regno == LR_REGNO)\n     return 108;\n   if (regno == CTR_REGNO)"}, {"sha": "ec62fc6ea652075ab266e5fb0db9cff32ef36a1e", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=462f790109f8ea09dee7ecde428ad2a7c27a59b8", "patch": "@@ -772,9 +772,9 @@ extern unsigned rs6000_pointer_size;\n    even those that are not normally considered general registers.\n \n    RS/6000 has 32 fixed-point registers, 32 floating-point registers,\n-   an MQ register, a count register, a link register, and 8 condition\n-   register fields, which we view here as separate registers.  AltiVec\n-   adds 32 vector registers and a VRsave register.\n+   a count register, a link register, and 8 condition register fields,\n+   which we view here as separate registers.  AltiVec adds 32 vector\n+   registers and a VRsave register.\n \n    In addition, the difference between the frame and argument pointers is\n    a function of the number of registers saved, so we need to have a\n@@ -918,7 +918,6 @@ extern unsigned rs6000_pointer_size;\n \tr0\t\t(not saved; cannot be base reg)\n \tr31 - r13\t(saved; order given to save least number)\n \tr12\t\t(not saved; if used for DImode or DFmode would use r13)\n-\tmq\t\t(not saved; best to use it if we can)\n \tctr\t\t(not saved; when we have the choice ctr is better)\n \tlr\t\t(saved)\n \tcr5, r1, r2, ap, ca (fixed)\n@@ -960,7 +959,7 @@ extern unsigned rs6000_pointer_size;\n    3, EARLY_R12 11, 0,\t\t\t\t\t\t\\\n    31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19,\t\t\\\n    18, 17, 16, 15, 14, 13, LATE_R12\t\t\t\t\\\n-   64, 66, 65,\t\t\t\t\t\t\t\\\n+   66, 65,\t\t\t\t\t\t\t\\\n    73, 1, MAYBE_R2_FIXED 67, 76,\t\t\t\t\\\n    /* AltiVec registers.  */\t\t\t\t\t\\\n    77, 78,\t\t\t\t\t\t\t\\\n@@ -1158,7 +1157,7 @@ extern unsigned rs6000_pointer_size;\n    class that represents their union.  */\n \n /* The RS/6000 has three types of registers, fixed-point, floating-point, and\n-   condition registers, plus three special registers, MQ, CTR, and the link\n+   condition registers, plus three special registers, CTR, and the link\n    register.  AltiVec adds a vector register class.  VSX registers overlap the\n    FPR registers and the Altivec registers.\n \n@@ -1181,7 +1180,6 @@ enum reg_class\n   SPE_ACC_REGS,\n   SPEFSCR_REGS,\n   NON_SPECIAL_REGS,\n-  MQ_REGS,\n   LINK_REGS,\n   CTR_REGS,\n   LINK_OR_CTR_REGS,\n@@ -1212,7 +1210,6 @@ enum reg_class\n   \"SPE_ACC_REGS\",                                                       \\\n   \"SPEFSCR_REGS\",                                                       \\\n   \"NON_SPECIAL_REGS\",\t\t\t\t\t\t\t\\\n-  \"MQ_REGS\",\t\t\t\t\t\t\t\t\\\n   \"LINK_REGS\",\t\t\t\t\t\t\t\t\\\n   \"CTR_REGS\",\t\t\t\t\t\t\t\t\\\n   \"LINK_OR_CTR_REGS\",\t\t\t\t\t\t\t\\\n@@ -1242,17 +1239,16 @@ enum reg_class\n   { 0x00000000, 0x00000000, 0x00000000, 0x00008000 }, /* SPE_ACC_REGS */     \\\n   { 0x00000000, 0x00000000, 0x00000000, 0x00010000 }, /* SPEFSCR_REGS */     \\\n   { 0xffffffff, 0xffffffff, 0x00000008, 0x00020000 }, /* NON_SPECIAL_REGS */ \\\n-  { 0x00000000, 0x00000000, 0x00000001, 0x00000000 }, /* MQ_REGS */\t     \\\n   { 0x00000000, 0x00000000, 0x00000002, 0x00000000 }, /* LINK_REGS */\t     \\\n   { 0x00000000, 0x00000000, 0x00000004, 0x00000000 }, /* CTR_REGS */\t     \\\n   { 0x00000000, 0x00000000, 0x00000006, 0x00000000 }, /* LINK_OR_CTR_REGS */ \\\n-  { 0x00000000, 0x00000000, 0x00000007, 0x00002000 }, /* SPECIAL_REGS */     \\\n-  { 0xffffffff, 0x00000000, 0x0000000f, 0x00022000 }, /* SPEC_OR_GEN_REGS */ \\\n+  { 0x00000000, 0x00000000, 0x00000006, 0x00002000 }, /* SPECIAL_REGS */     \\\n+  { 0xffffffff, 0x00000000, 0x0000000e, 0x00022000 }, /* SPEC_OR_GEN_REGS */ \\\n   { 0x00000000, 0x00000000, 0x00000010, 0x00000000 }, /* CR0_REGS */\t     \\\n   { 0x00000000, 0x00000000, 0x00000ff0, 0x00000000 }, /* CR_REGS */\t     \\\n-  { 0xffffffff, 0x00000000, 0x00000fff, 0x00020000 }, /* NON_FLOAT_REGS */   \\\n+  { 0xffffffff, 0x00000000, 0x00000ffe, 0x00020000 }, /* NON_FLOAT_REGS */   \\\n   { 0x00000000, 0x00000000, 0x00001000, 0x00000000 }, /* CA_REGS */\t     \\\n-  { 0xffffffff, 0xffffffff, 0xffffffff, 0x0003ffff }  /* ALL_REGS */\t     \\\n+  { 0xffffffff, 0xffffffff, 0xfffffffe, 0x0003ffff }  /* ALL_REGS */\t     \\\n }\n \n /* The same information, inverted:\n@@ -2104,7 +2100,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   &rs6000_reg_names[62][0],\t/* fr30 */\t\t\t\t\\\n   &rs6000_reg_names[63][0],\t/* fr31 */\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  &rs6000_reg_names[64][0],     /* mq   */\t\t\t\t\\\n+  &rs6000_reg_names[64][0],     /* was mq  */\t\t\t\t\\\n   &rs6000_reg_names[65][0],\t/* lr   */\t\t\t\t\\\n   &rs6000_reg_names[66][0],\t/* ctr  */\t\t\t\t\\\n   &rs6000_reg_names[67][0],\t/* ap   */\t\t\t\t\\\n@@ -2188,7 +2184,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   {\"v28\",  105},{\"v29\",  106},{\"v30\",  107},{\"v31\",  108},      \\\n   {\"vrsave\", 109}, {\"vscr\", 110},\t\t\t\t\\\n   {\"spe_acc\", 111}, {\"spefscr\", 112},\t\t\t\t\\\n-  /* no additional names for: mq, lr, ctr, ap */\t\t\\\n+  /* no additional names for: lr, ctr, ap */\t\t\t\\\n   {\"cr0\",  68}, {\"cr1\",  69}, {\"cr2\",  70}, {\"cr3\",  71},\t\\\n   {\"cr4\",  72}, {\"cr5\",  73}, {\"cr6\",  74}, {\"cr7\",  75},\t\\\n   {\"cc\",   68}, {\"sp\",    1}, {\"toc\",   2},\t\t\t\\"}, {"sha": "6ade53ca711ad985496a21d9a25ae25743dac355", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 33, "deletions": 41, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462f790109f8ea09dee7ecde428ad2a7c27a59b8/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=462f790109f8ea09dee7ecde428ad2a7c27a59b8", "patch": "@@ -29,7 +29,6 @@\n    (TOC_REGNUM\t\t\t2)\n    (STATIC_CHAIN_REGNUM\t\t11)\n    (HARD_FRAME_POINTER_REGNUM\t31)\n-   (MQ_REGNO\t\t\t64)\n    (LR_REGNO\t\t\t65)\n    (CTR_REGNO\t\t\t66)\n    (ARG_POINTER_REGNUM\t\t67)\n@@ -8249,8 +8248,8 @@\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"*movsi_internal1\"\n-  [(set (match_operand:SI 0 \"rs6000_nonimmediate_operand\" \"=r,r,r,m,r,r,r,r,*q,*c*l,*h,*h\")\n-\t(match_operand:SI 1 \"input_operand\" \"r,U,m,r,I,L,n,*h,r,r,r,0\"))]\n+  [(set (match_operand:SI 0 \"rs6000_nonimmediate_operand\" \"=r,r,r,m,r,r,r,r,*c*l,*h,*h\")\n+\t(match_operand:SI 1 \"input_operand\" \"r,U,m,r,I,L,n,*h,r,r,0\"))]\n   \"!TARGET_SINGLE_FPU &&\n    (gpc_reg_operand (operands[0], SImode) || gpc_reg_operand (operands[1], SImode))\"\n   \"@\n@@ -8264,14 +8263,13 @@\n    mf%1 %0\n    mt%0 %1\n    mt%0 %1\n-   mt%0 %1\n    {cror 0,0,0|nop}\"\n-  [(set_attr \"type\" \"*,*,load,store,*,*,*,mfjmpr,*,mtjmpr,*,*\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,8,4,4,4,4,4\")])\n+  [(set_attr \"type\" \"*,*,load,store,*,*,*,mfjmpr,mtjmpr,*,*\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,8,4,4,4,4\")])\n \n (define_insn \"*movsi_internal1_single\"\n-  [(set (match_operand:SI 0 \"rs6000_nonimmediate_operand\" \"=r,r,r,m,r,r,r,r,*q,*c*l,*h,*h,m,*f\")\n-        (match_operand:SI 1 \"input_operand\" \"r,U,m,r,I,L,n,*h,r,r,r,0,f,m\"))]\n+  [(set (match_operand:SI 0 \"rs6000_nonimmediate_operand\" \"=r,r,r,m,r,r,r,r,*c*l,*h,*h,m,*f\")\n+        (match_operand:SI 1 \"input_operand\" \"r,U,m,r,I,L,n,*h,r,r,0,f,m\"))]\n   \"TARGET_SINGLE_FPU &&\n    (gpc_reg_operand (operands[0], SImode) || gpc_reg_operand (operands[1], SImode))\"\n   \"@\n@@ -8285,12 +8283,11 @@\n    mf%1 %0\n    mt%0 %1\n    mt%0 %1\n-   mt%0 %1\n    {cror 0,0,0|nop}\n    stfs%U0%X0 %1, %0\n    lfs%U1%X1 %0, %1\"\n-  [(set_attr \"type\" \"*,*,load,store,*,*,*,mfjmpr,*,mtjmpr,*,*,*,*\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,8,4,4,4,4,4,4,4\")])\n+  [(set_attr \"type\" \"*,*,load,store,*,*,*,mfjmpr,mtjmpr,*,*,*,*\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,8,4,4,4,4,4,4\")])\n \n ;; Split a load of a large constant into the appropriate two-insn\n ;; sequence.\n@@ -8340,8 +8337,8 @@\n   \"\")\n \f\n (define_insn \"*movhi_internal\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*q,*c*l,*h\")\n-\t(match_operand:HI 1 \"input_operand\" \"r,m,r,i,*h,r,r,0\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*c*l,*h\")\n+\t(match_operand:HI 1 \"input_operand\" \"r,m,r,i,*h,r,0\"))]\n   \"gpc_reg_operand (operands[0], HImode)\n    || gpc_reg_operand (operands[1], HImode)\"\n   \"@\n@@ -8351,9 +8348,8 @@\n    {lil|li} %0,%w1\n    mf%1 %0\n    mt%0 %1\n-   mt%0 %1\n    {cror 0,0,0|nop}\"\n-  [(set_attr \"type\" \"*,load,store,*,mfjmpr,*,mtjmpr,*\")])\n+  [(set_attr \"type\" \"*,load,store,*,mfjmpr,mtjmpr,*\")])\n \n (define_expand \"mov<mode>\"\n   [(set (match_operand:INT 0 \"general_operand\" \"\")\n@@ -8362,8 +8358,8 @@\n   \"{ rs6000_emit_move (operands[0], operands[1], <MODE>mode); DONE; }\")\n \n (define_insn \"*movqi_internal\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*q,*c*l,*h\")\n-\t(match_operand:QI 1 \"input_operand\" \"r,m,r,i,*h,r,r,0\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*c*l,*h\")\n+\t(match_operand:QI 1 \"input_operand\" \"r,m,r,i,*h,r,0\"))]\n   \"gpc_reg_operand (operands[0], QImode)\n    || gpc_reg_operand (operands[1], QImode)\"\n   \"@\n@@ -8373,9 +8369,8 @@\n    {lil|li} %0,%1\n    mf%1 %0\n    mt%0 %1\n-   mt%0 %1\n    {cror 0,0,0|nop}\"\n-  [(set_attr \"type\" \"*,load,store,*,mfjmpr,*,mtjmpr,*\")])\n+  [(set_attr \"type\" \"*,load,store,*,mfjmpr,mtjmpr,*\")])\n \f\n ;; Here is how to move condition codes around.  When we store CC data in\n ;; an integer register or memory, we store just the high-order 4 bits.\n@@ -8387,8 +8382,8 @@\n   \"\")\n \n (define_insn \"*movcc_internal1\"\n-  [(set (match_operand:CC 0 \"nonimmediate_operand\" \"=y,x,?y,y,r,r,r,r,r,q,cl,r,m\")\n-\t(match_operand:CC 1 \"general_operand\" \"y,r,r,O,x,y,r,I,h,r,r,m,r\"))]\n+  [(set (match_operand:CC 0 \"nonimmediate_operand\" \"=y,x,?y,y,r,r,r,r,r,cl,r,m\")\n+\t(match_operand:CC 1 \"general_operand\" \"y,r,r,O,x,y,r,I,h,r,m,r\"))]\n   \"register_operand (operands[0], CCmode)\n    || register_operand (operands[1], CCmode)\"\n   \"@\n@@ -8402,29 +8397,28 @@\n    {lil|li} %0,%1\n    mf%1 %0\n    mt%0 %1\n-   mt%0 %1\n    {l%U1%X1|lwz%U1%X1} %0,%1\n    {st%U0%U1|stw%U0%U1} %1,%0\"\n   [(set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"0,3\")\n \t\t(const_string \"cr_logical\")\n \t    (eq_attr \"alternative\" \"1,2\")\n \t\t(const_string \"mtcr\")\n-\t    (eq_attr \"alternative\" \"6,7,9\")\n+\t    (eq_attr \"alternative\" \"6,7\")\n \t\t(const_string \"integer\")\n \t    (eq_attr \"alternative\" \"8\")\n \t\t(const_string \"mfjmpr\")\n-\t    (eq_attr \"alternative\" \"10\")\n+\t    (eq_attr \"alternative\" \"9\")\n \t\t(const_string \"mtjmpr\")\n-\t    (eq_attr \"alternative\" \"11\")\n+\t    (eq_attr \"alternative\" \"10\")\n \t\t(const_string \"load\")\n-\t    (eq_attr \"alternative\" \"12\")\n+\t    (eq_attr \"alternative\" \"11\")\n \t\t(const_string \"store\")\n \t    (match_test \"TARGET_MFCRF\")\n \t\t(const_string \"mfcrf\")\n \t   ]\n \t(const_string \"mfcr\")))\n-   (set_attr \"length\" \"4,4,12,4,4,8,4,4,4,4,4,4,4\")])\n+   (set_attr \"length\" \"4,4,12,4,4,8,4,4,4,4,4,4\")])\n \f\n ;; For floating-point, we normally deal with the floating-point registers\n ;; unless -msoft-float is used.  The sole exception is that parameter passing\n@@ -8463,8 +8457,8 @@\n }\")\n \n (define_insn \"*movsf_hardfloat\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=!r,!r,m,f,f,m,*c*l,*q,!r,*h,!r,!r\")\n-\t(match_operand:SF 1 \"input_operand\" \"r,m,r,f,m,f,r,r,h,0,G,Fn\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=!r,!r,m,f,f,m,*c*l,!r,*h,!r,!r\")\n+\t(match_operand:SF 1 \"input_operand\" \"r,m,r,f,m,f,r,h,0,G,Fn\"))]\n   \"(gpc_reg_operand (operands[0], SFmode)\n    || gpc_reg_operand (operands[1], SFmode))\n    && (TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_SINGLE_FLOAT)\"\n@@ -8476,24 +8470,22 @@\n    lfs%U1%X1 %0,%1\n    stfs%U0%X0 %1,%0\n    mt%0 %1\n-   mt%0 %1\n    mf%1 %0\n    {cror 0,0,0|nop}\n    #\n    #\"\n-  [(set_attr \"type\" \"*,load,store,fp,fpload,fpstore,mtjmpr,*,mfjmpr,*,*,*\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,4,4,8\")])\n+  [(set_attr \"type\" \"*,load,store,fp,fpload,fpstore,mtjmpr,mfjmpr,*,*,*\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,4,8\")])\n \n (define_insn \"*movsf_softfloat\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,cl,q,r,r,m,r,r,r,r,*h\")\n-\t(match_operand:SF 1 \"input_operand\" \"r,r,r,h,m,r,I,L,G,Fn,0\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,cl,r,r,m,r,r,r,r,*h\")\n+\t(match_operand:SF 1 \"input_operand\" \"r,r,h,m,r,I,L,G,Fn,0\"))]\n   \"(gpc_reg_operand (operands[0], SFmode)\n    || gpc_reg_operand (operands[1], SFmode))\n    && (TARGET_SOFT_FLOAT || !TARGET_FPRS)\"\n   \"@\n    mr %0,%1\n    mt%0 %1\n-   mt%0 %1\n    mf%1 %0\n    {l%U1%X1|lwz%U1%X1} %0,%1\n    {st%U0%X0|stw%U0%X0} %1,%0\n@@ -8502,8 +8494,8 @@\n    #\n    #\n    {cror 0,0,0|nop}\"\n-  [(set_attr \"type\" \"*,mtjmpr,*,mfjmpr,load,store,*,*,*,*,*\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,8,4\")])\n+  [(set_attr \"type\" \"*,mtjmpr,mfjmpr,load,store,*,*,*,*,*\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,4,4,8,4\")])\n \n \f\n (define_expand \"movdf\"\n@@ -13788,7 +13780,7 @@\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n-   (set (match_operand:P 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:P 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:P (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -13812,7 +13804,7 @@\n \t\t\t  (const_int 1))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:P 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:P 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:P (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -13838,7 +13830,7 @@\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n-   (set (match_operand:P 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:P 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:P (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -13862,7 +13854,7 @@\n \t\t\t  (const_int 1))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:P 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:P 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:P (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))"}]}