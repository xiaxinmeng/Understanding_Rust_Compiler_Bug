{"sha": "80529cc0d0b0153e259da5ebf1016ba7b28d3616", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA1MjljYzBkMGIwMTUzZTI1OWRhNWViZjEwMTZiYTdiMjhkMzYxNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2005-04-07T21:44:58Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-04-07T21:44:58Z"}, "message": "* config/vax/vax.h (target_flags, MASK_UNIX_ASM, MASK_VAXC_ALIGNMENT)\n\t(MASK_G_FLOAT, TARGET_UNIX_ASM, TARGET_VAXC_ALIGNMENT, TARGET_G_FLOAT)\n\t(TARGET_SWITCHES): Delete.\n\t* config/vax/vax.c (TARGET_DEFAULT_TARGET_FLAGS): Override default.\n\t* config/vax/vax.opt: New file.\n\nFrom-SVN: r97805", "tree": {"sha": "569f09affd10a8ba1efabf0bb32a2c978af23057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/569f09affd10a8ba1efabf0bb32a2c978af23057"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80529cc0d0b0153e259da5ebf1016ba7b28d3616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80529cc0d0b0153e259da5ebf1016ba7b28d3616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80529cc0d0b0153e259da5ebf1016ba7b28d3616", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80529cc0d0b0153e259da5ebf1016ba7b28d3616/comments", "author": null, "committer": null, "parents": [{"sha": "e87045f3ae86f2631b31a0e7056d6c15055a9ed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87045f3ae86f2631b31a0e7056d6c15055a9ed2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e87045f3ae86f2631b31a0e7056d6c15055a9ed2"}], "stats": {"total": 100, "additions": 59, "deletions": 41}, "files": [{"sha": "511f709dd69f371cf62e18889b4f802dd534badf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80529cc0d0b0153e259da5ebf1016ba7b28d3616/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80529cc0d0b0153e259da5ebf1016ba7b28d3616/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80529cc0d0b0153e259da5ebf1016ba7b28d3616", "patch": "@@ -1,3 +1,11 @@\n+2005-04-07  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/vax/vax.h (target_flags, MASK_UNIX_ASM, MASK_VAXC_ALIGNMENT)\n+\t(MASK_G_FLOAT, TARGET_UNIX_ASM, TARGET_VAXC_ALIGNMENT, TARGET_G_FLOAT)\n+\t(TARGET_SWITCHES): Delete.\n+\t* config/vax/vax.c (TARGET_DEFAULT_TARGET_FLAGS): Override default.\n+\t* config/vax/vax.opt: New file.\n+\n 2005-04-07  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-dse.c (dse_optimize_stmt): Fix incorrect comment."}, {"sha": "f39bcbfbfd8cda590687eef637fa5500bb20a79f", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80529cc0d0b0153e259da5ebf1016ba7b28d3616/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80529cc0d0b0153e259da5ebf1016ba7b28d3616/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=80529cc0d0b0153e259da5ebf1016ba7b28d3616", "patch": "@@ -73,6 +73,9 @@ static rtx vax_struct_value_rtx (tree, int);\n #undef TARGET_ASM_CAN_OUTPUT_MI_THUNK\n #define TARGET_ASM_CAN_OUTPUT_MI_THUNK default_can_output_mi_thunk_no_vcall\n \n+#undef TARGET_DEFAULT_TARGET_FLAGS\n+#define TARGET_DEFAULT_TARGET_FLAGS TARGET_DEFAULT\n+\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS vax_rtx_costs\n #undef TARGET_ADDRESS_COST"}, {"sha": "af3eab55cbfe7f12456e812ee4ee0c1539a03c79", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80529cc0d0b0153e259da5ebf1016ba7b28d3616/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80529cc0d0b0153e259da5ebf1016ba7b28d3616/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=80529cc0d0b0153e259da5ebf1016ba7b28d3616", "patch": "@@ -60,50 +60,9 @@ Boston, MA 02111-1307, USA.  */\n \n /* Run-time compilation parameters selecting different hardware subsets.  */\n \n-extern int target_flags;\n-\n-#define MASK_UNIX_ASM\t\t1\n-#define MASK_VAXC_ALIGNMENT\t2\n-#define MASK_G_FLOAT\t\t4\n-\n-\n-/* Macros used in the machine description to test the flags.  */\n-\n-/* Nonzero if compiling code that Unix assembler can assemble.  */\n-#define TARGET_UNIX_ASM (target_flags & MASK_UNIX_ASM)\n-\n-/* Nonzero if compiling with VAX-11 \"C\" style structure alignment */\n-#define\tTARGET_VAXC_ALIGNMENT (target_flags & MASK_VAXC_ALIGNMENT)\n-\n-/* Nonzero if compiling with `G'-format floating point */\n-#define TARGET_G_FLOAT (target_flags & MASK_G_FLOAT)\n-\n /* Nonzero if ELF.  Redefined by vax/elf.h.  */\n #define TARGET_ELF 0\n \n-/* Macro to define tables used to set the flags.\n-   This is a list in braces of pairs in braces,\n-   each pair being { \"NAME\", VALUE }\n-   where VALUE is the bits to set or minus the bits to clear.\n-   An empty string NAME is used to identify the default VALUE.  */\n-\n-#define TARGET_SWITCHES\t\t\t\t\t\t\\\n-  { {\"unix\", MASK_UNIX_ASM,\t\t\t\t\t\\\n-     \"Generate code for UNIX assembler\"},  \t\t\t\\\n-    {\"gnu\", -MASK_UNIX_ASM,\t\t\t\t\t\\\n-     \"Generate code for GNU assembler (gas)\"},  \t\t\\\n-    {\"vaxc-alignment\", MASK_VAXC_ALIGNMENT,\t\t\t\\\n-     \"Use VAXC structure conventions\"}, \t\t\t\\\n-    {\"g\", MASK_G_FLOAT,\t\t\t\t\t\t\\\n-     \"Generate GFLOAT double precision code\"},\t\t\t\\\n-    {\"g-float\", MASK_G_FLOAT,\t\t\t\t\t\\\n-     \"Generate GFLOAT double precision code\"},\t\t\t\\\n-    {\"d\", -MASK_G_FLOAT,\t\t\t\t\t\\\n-     \"Generate DFLOAT double precision code\"},\t\t\t\\\n-    {\"d-float\", -MASK_G_FLOAT,\t\t\t\t\t\\\n-     \"Generate DFLOAT double precision code\"},\t\t\t\\\n-    { \"\", TARGET_DEFAULT, 0}}\n-\n /* Default target_flags if no switches specified.  */\n \n #ifndef TARGET_DEFAULT"}, {"sha": "b51d2816f66696a9c2c7e7849885f53066643f15", "filename": "gcc/config/vax/vax.opt", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80529cc0d0b0153e259da5ebf1016ba7b28d3616/gcc%2Fconfig%2Fvax%2Fvax.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80529cc0d0b0153e259da5ebf1016ba7b28d3616/gcc%2Fconfig%2Fvax%2Fvax.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.opt?ref=80529cc0d0b0153e259da5ebf1016ba7b28d3616", "patch": "@@ -0,0 +1,48 @@\n+; Options for the VAX port of the compiler.\n+\n+; Copyright (C) 2005 Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+; for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+md\n+Target RejectNegative InverseMask(G_FLOAT)\n+Target DFLOAT double precision code\n+\n+md-float\n+Target RejectNegative InverseMask(G_FLOAT)\n+Target DFLOAT double precision code\n+\n+mg\n+Target RejectNegative Mask(G_FLOAT)\n+Generate GFLOAT double precision code\n+\n+mg-float\n+Target RejectNegative Mask(G_FLOAT) MaskExists\n+Generate GFLOAT double precision code\n+\n+mgnu\n+Target RejectNegative InverseMask(UNIX_ASM)\n+Generate code for GNU assembler (gas)\n+\n+munix\n+Target RejectNegative Mask(UNIX_ASM)\n+Generate code for UNIX assembler\n+\n+mvaxc-alignment\n+Target RejectNegative Mask(VAXC_ALIGNMENT)\n+Use VAXC structure conventions"}]}