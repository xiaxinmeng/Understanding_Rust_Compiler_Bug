{"sha": "ca79f85d9db6e768bfa918ea4d490692ff996c41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E3OWY4NWQ5ZGI2ZTc2OGJmYTkxOGVhNGQ0OTA2OTJmZjk5NmM0MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-02T20:27:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-02T20:27:13Z"}, "message": "pt.c (unify): float doesn't match double.\n\n\t* pt.c (unify): float doesn't match double.\n\n\t* pt.c (do_type_instantiation): Handle getting a _TYPE or a\n \tTYPE_DECL.  Handle getting non-template types.\n\t* parse.y (explicit_instantiation): Use typespec instead of\n\taggr template_type.\n\nTue Sep  2 10:27:08 1997  Richard Henderson  <rth@cygnus.com>\n\n\t* typeck.c (build_ptrmemfunc1): Clean up ptr->int cast warnings.\n\nFrom-SVN: r15037", "tree": {"sha": "e7e1b571380780a5b2f13eb97afaec7c643af5cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7e1b571380780a5b2f13eb97afaec7c643af5cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca79f85d9db6e768bfa918ea4d490692ff996c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca79f85d9db6e768bfa918ea4d490692ff996c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca79f85d9db6e768bfa918ea4d490692ff996c41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca79f85d9db6e768bfa918ea4d490692ff996c41/comments", "author": null, "committer": null, "parents": [{"sha": "290c8b1fb163f68a39eb4efc0393d550d8794275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/290c8b1fb163f68a39eb4efc0393d550d8794275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/290c8b1fb163f68a39eb4efc0393d550d8794275"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "fc5a66b51ecee8d7bc8811347bfdd4c9c3f14fc8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca79f85d9db6e768bfa918ea4d490692ff996c41/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca79f85d9db6e768bfa918ea4d490692ff996c41/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ca79f85d9db6e768bfa918ea4d490692ff996c41", "patch": "@@ -1,3 +1,16 @@\n+Tue Sep  2 12:09:13 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* pt.c (unify): float doesn't match double.\n+\n+\t* pt.c (do_type_instantiation): Handle getting a _TYPE or a\n+ \tTYPE_DECL.  Handle getting non-template types.\n+\t* parse.y (explicit_instantiation): Use typespec instead of\n+\taggr template_type.\n+\n+Tue Sep  2 10:27:08 1997  Richard Henderson  <rth@cygnus.com>\n+\n+\t* typeck.c (build_ptrmemfunc1): Clean up ptr->int cast warnings.\n+\n Mon Sep  1 13:19:04 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* call.c (build_new_op): Strip leading REF_BIND from first operand"}, {"sha": "47302a0cc578e1c0db0996b96152cd99fc2a06a4", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca79f85d9db6e768bfa918ea4d490692ff996c41/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca79f85d9db6e768bfa918ea4d490692ff996c41/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=ca79f85d9db6e768bfa918ea4d490692ff996c41", "patch": "@@ -814,17 +814,19 @@ identifier_defn:\n \t;\n \n explicit_instantiation:\n-\t  TEMPLATE aggr template_type\n-\t\t{ do_type_instantiation ($3, NULL_TREE); }\n+\t  TEMPLATE typespec ';'\n+\t\t{ do_type_instantiation ($2.t, NULL_TREE);\n+\t\t  yyungetc (';', 1); }\n \t| TEMPLATE typed_declspecs declarator\n \t\t{ tree specs = strip_attrs ($2.t);\n \t\t  do_decl_instantiation (specs, $3, NULL_TREE); }\n \t| TEMPLATE notype_declarator\n \t\t{ do_decl_instantiation (NULL_TREE, $2, NULL_TREE); }\n \t| TEMPLATE constructor_declarator\n \t\t{ do_decl_instantiation (NULL_TREE, $2, NULL_TREE); }\n-\t| SCSPEC TEMPLATE aggr template_type\n-\t\t{ do_type_instantiation ($4, $1); }\n+\t| SCSPEC TEMPLATE typespec ';'\n+\t\t{ do_type_instantiation ($3.t, $1);\n+\t\t  yyungetc (';', 1); }\n \t| SCSPEC TEMPLATE typed_declspecs declarator\n \t\t{ tree specs = strip_attrs ($3.t);\n \t\t  do_decl_instantiation (specs, $4, $1); }"}, {"sha": "19a85e42cdffa1e8399a4cd73e9643ca79bd1099", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca79f85d9db6e768bfa918ea4d490692ff996c41/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca79f85d9db6e768bfa918ea4d490692ff996c41/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ca79f85d9db6e768bfa918ea4d490692ff996c41", "patch": "@@ -2858,6 +2858,10 @@ unify (tparms, targs, ntparms, parm, arg, nsubsts, strict)\n \t\t\tTYPE_MAX_VALUE (arg), nsubsts, strict))\n \t    return 1;\n \t}\n+      else if (TREE_CODE (parm) == REAL_TYPE\n+\t       && TYPE_MAIN_VARIANT (arg) != TYPE_MAIN_VARIANT (parm))\n+\treturn 1;\n+\n       /* As far as unification is concerned, this wins.\t Later checks\n \t will invalidate it if necessary.  */\n       return 0;\n@@ -3314,14 +3318,22 @@ mark_class_instantiated (t, extern_p)\n }     \n \n void\n-do_type_instantiation (name, storage)\n-     tree name, storage;\n+do_type_instantiation (t, storage)\n+     tree t, storage;\n {\n-  tree t = TREE_TYPE (name);\n   int extern_p = 0;\n   int nomem_p = 0;\n   int static_p = 0;\n \n+  if (TREE_CODE (t) == TYPE_DECL)\n+    t = TREE_TYPE (t);\n+\n+  if (! IS_AGGR_TYPE (t) || ! CLASSTYPE_TEMPLATE_INFO (t))\n+    {\n+      cp_error (\"explicit instantiation of non-template type `%T'\", t);\n+      return;\n+    }\n+\n   complete_type (t);\n \n   /* With -fexternal-templates, explicit instantiations are treated the same"}, {"sha": "6d2204ce81c16a1b3dd3b8a8e7a98fb61fde0538", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca79f85d9db6e768bfa918ea4d490692ff996c41/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca79f85d9db6e768bfa918ea4d490692ff996c41/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ca79f85d9db6e768bfa918ea4d490692ff996c41", "patch": "@@ -6261,14 +6261,14 @@ build_ptrmemfunc1 (type, delta, idx, pfn, delta2)\n   if (pfn)\n     {\n       allconstant = TREE_CONSTANT (pfn);\n-      allsimple = (int) initializer_constant_valid_p (pfn, TREE_TYPE (pfn));\n+      allsimple = !! initializer_constant_valid_p (pfn, TREE_TYPE (pfn));\n       u = tree_cons (pfn_field, pfn, NULL_TREE);\n     }\n   else\n     {\n       delta2 = convert_and_check (delta_type_node, delta2);\n       allconstant = TREE_CONSTANT (delta2);\n-      allsimple = (int) initializer_constant_valid_p (delta2, TREE_TYPE (delta2));\n+      allsimple = !! initializer_constant_valid_p (delta2, TREE_TYPE (delta2));\n       u = tree_cons (delta2_field, delta2, NULL_TREE);\n     }\n "}]}