{"sha": "03a616ac3662234f556ff7267d25ba842b7b5bab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNhNjE2YWMzNjYyMjM0ZjU1NmZmNzI2N2QyNWJhODQyYjdiNWJhYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-19T16:02:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-19T16:02:51Z"}, "message": "re PR c++/69850 (unnecessary -Wnonnull-compare warning)\n\n\tPR c++/69850\n\t* init.c (build_vec_delete_1): Set TREE_NO_WARNING on the NE_EXPR\n\tcondition.\n\t* cp-gimplify.c (cp_fold): Propagate TREE_NO_WARNING from binary\n\toperators if folding preserved the binop, just with different\n\targuments.\n\n\t* g++.dg/warn/Wnonnull-compare-2.C: New test.\n\t* g++.dg/warn/Wnonnull-compare-3.C: New test.\n\nFrom-SVN: r233561", "tree": {"sha": "de8388c3ac87b258351381e846f5a46652d15ea2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de8388c3ac87b258351381e846f5a46652d15ea2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03a616ac3662234f556ff7267d25ba842b7b5bab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a616ac3662234f556ff7267d25ba842b7b5bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03a616ac3662234f556ff7267d25ba842b7b5bab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a616ac3662234f556ff7267d25ba842b7b5bab/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19e2158623cf45a9c9ea731957bea6c3de4a4e56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e2158623cf45a9c9ea731957bea6c3de4a4e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19e2158623cf45a9c9ea731957bea6c3de4a4e56"}], "stats": {"total": 82, "additions": 77, "deletions": 5}, "files": [{"sha": "dbc674113f863fb1560b83814eefe32f6b9c12bf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=03a616ac3662234f556ff7267d25ba842b7b5bab", "patch": "@@ -1,5 +1,12 @@\n 2016-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/69850\n+\t* init.c (build_vec_delete_1): Set TREE_NO_WARNING on the NE_EXPR\n+\tcondition.\n+\t* cp-gimplify.c (cp_fold): Propagate TREE_NO_WARNING from binary\n+\toperators if folding preserved the binop, just with different\n+\targuments.\n+\n \tPR c++/67767\n \t* parser.c (cp_parser_std_attribute_spec_seq): Don't assume\n \tattr_spec is always single element chain, chain all the attributes"}, {"sha": "34bdc827432ebe57d8d8cb554478dabcc8668737", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=03a616ac3662234f556ff7267d25ba842b7b5bab", "patch": "@@ -2068,6 +2068,9 @@ cp_fold (tree x)\n       else\n \tx = fold (x);\n \n+      if (TREE_NO_WARNING (org_x)\n+\t  && TREE_CODE (x) == TREE_CODE (org_x))\n+\tTREE_NO_WARNING (x) = 1;\n       break;\n \n     case VEC_COND_EXPR:"}, {"sha": "19279e3646285a7f64c5d709e8b20ef7e65c63f5", "filename": "gcc/cp/init.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=03a616ac3662234f556ff7267d25ba842b7b5bab", "patch": "@@ -3678,12 +3678,15 @@ build_vec_delete_1 (tree base, tree maxindex, tree type,\n     body = integer_zero_node;\n \n   /* Outermost wrapper: If pointer is null, punt.  */\n+  tree cond\n+    = fold_build2_loc (input_location, NE_EXPR, boolean_type_node, base,\n+\t\t       fold_convert (TREE_TYPE (base), nullptr_node));\n+  /* This is a compiler generated comparison, don't emit\n+     e.g. -Wnonnull-compare warning for it.  */\n+  if (TREE_CODE (cond) == NE_EXPR)\n+    TREE_NO_WARNING (cond) = 1;\n   body = fold_build3_loc (input_location, COND_EXPR, void_type_node,\n-\t\t      fold_build2_loc (input_location,\n-\t\t\t\t   NE_EXPR, boolean_type_node, base,\n-\t\t\t\t   fold_convert (TREE_TYPE (base),\n-\t\t\t\t\t\t nullptr_node)),\n-\t\t      body, integer_zero_node);\n+\t\t\t  cond, body, integer_zero_node);\n   body = build1 (NOP_EXPR, void_type_node, body);\n \n   if (controller)"}, {"sha": "c60de26daa7ddb8c528f6b2d2c3892738f3eec93", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=03a616ac3662234f556ff7267d25ba842b7b5bab", "patch": "@@ -1,5 +1,9 @@\n 2016-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/69850\n+\t* g++.dg/warn/Wnonnull-compare-2.C: New test.\n+\t* g++.dg/warn/Wnonnull-compare-3.C: New test.\n+\n \tPR c++/67767\n \t* g++.dg/cpp0x/pr67767.C: New test.\n "}, {"sha": "641bb6738df19ba3e724e0cb70736606788e870d", "filename": "gcc/testsuite/g++.dg/warn/Wnonnull-compare-2.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull-compare-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull-compare-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull-compare-2.C?ref=03a616ac3662234f556ff7267d25ba842b7b5bab", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/69850\n+// { dg-do compile }\n+// { dg-options \"-Wnonnull-compare\" }\n+\n+struct D {\n+  virtual ~D ();\n+  void foo () const { delete this; }\t// { dg-bogus \"nonnull argument\" }\n+  template <typename> friend struct A;\n+};\n+template <typename T> struct A {\n+  static void bar (T *x) { x->foo (); }\n+};\n+template <typename T> struct B {\n+  T b;\n+  void baz () { A<T>::bar (&b); }\n+};\n+class C {\n+  class E : public D { ~E (); };\n+  void baz ();\n+  B<E> c;\n+};\n+\n+void\n+C::baz ()\n+{\n+  c.baz ();\n+}"}, {"sha": "f909a0f27d91e83817f113f591b6efa1b82ffe9d", "filename": "gcc/testsuite/g++.dg/warn/Wnonnull-compare-3.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull-compare-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a616ac3662234f556ff7267d25ba842b7b5bab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull-compare-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull-compare-3.C?ref=03a616ac3662234f556ff7267d25ba842b7b5bab", "patch": "@@ -0,0 +1,28 @@\n+// PR c++/69850\n+// { dg-do compile }\n+// { dg-options \"-Wnonnull-compare\" }\n+\n+template <typename T>\n+struct A {\n+  static void foo (T *x) { x->bar (); }\n+};\n+template <typename T>\n+struct B {\n+  T b;\n+  void operator= (B) { A<T>::foo (&b); }\n+};\n+struct C {\n+  void bar () { delete[] this; }\t// { dg-bogus \"nonnull argument\" }\n+};\n+struct D { B<C> d; };\n+struct G {\n+  D g[6];\n+  void baz ();\n+};\n+int a;\n+\n+void\n+G::baz ()\n+{\n+  g[a] = g[1];\n+}"}]}