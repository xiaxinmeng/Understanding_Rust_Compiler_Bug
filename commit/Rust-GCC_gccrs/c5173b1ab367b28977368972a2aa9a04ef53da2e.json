{"sha": "c5173b1ab367b28977368972a2aa9a04ef53da2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUxNzNiMWFiMzY3YjI4OTc3MzY4OTcyYTJhYTlhMDRlZjUzZGEyZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:14:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:14:36Z"}, "message": "s-osinte-lynxos-3.ads, [...] (Create_Task): Fix handling of Task_Info.\n\n2007-04-06  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-osinte-lynxos-3.ads, s-osinte-hpux.ads, s-osinte-solaris-posix.ads,\n\ts-osinte-freebsd.ads, s-osinte-aix.ads, s-osinte-darwin.ads,\n\ts-taprop-posix.adb (Create_Task): Fix handling of Task_Info.\n\t(PTHREAD_SCOPE_PROCESS, PTHREAD_SCOPE_SYSTEM): New constants.\n\nFrom-SVN: r123540", "tree": {"sha": "007d653c60f1ed1d5260f42f6032e67acb59daf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/007d653c60f1ed1d5260f42f6032e67acb59daf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5173b1ab367b28977368972a2aa9a04ef53da2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5173b1ab367b28977368972a2aa9a04ef53da2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5173b1ab367b28977368972a2aa9a04ef53da2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5173b1ab367b28977368972a2aa9a04ef53da2e/comments", "author": null, "committer": null, "parents": [{"sha": "0903be2332da6455ed3c8d08836c9e27ac68a1a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0903be2332da6455ed3c8d08836c9e27ac68a1a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0903be2332da6455ed3c8d08836c9e27ac68a1a4"}], "stats": {"total": 57, "additions": 36, "deletions": 21}, "files": [{"sha": "c2bb2d4d4c5b0ba52fd03139d974227f7a00dbfc", "filename": "gcc/ada/s-osinte-aix.ads", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.ads?ref=c5173b1ab367b28977368972a2aa9a04ef53da2e", "patch": "@@ -34,8 +34,8 @@\n \n --  This is a AIX (Native THREADS) version of this package\n \n---  This package encapsulates all direct interfaces to OS services\n---  that are needed by children of System.\n+--  This package encapsulates all direct interfaces to OS services that are\n+--  needed by children of System.\n \n --  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n --  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n@@ -132,15 +132,15 @@ package System.OS_Interface is\n    SIGSAK      : constant := 63; -- secure attention key\n \n    SIGADAABORT : constant := SIGTERM;\n-   --  Note: on other targets, we usually use SIGABRT, but on AiX, it\n-   --  appears that SIGABRT can't be used in sigwait(), so we use SIGTERM.\n+   --  Note: on other targets, we usually use SIGABRT, but on AIX, it appears\n+   --  that SIGABRT can't be used in sigwait(), so we use SIGTERM.\n \n    type Signal_Set is array (Natural range <>) of Signal;\n \n-   Unmasked    : constant Signal_Set :=\n-     (SIGTRAP, SIGTTIN, SIGTTOU, SIGTSTP, SIGPROF);\n-   Reserved    : constant Signal_Set :=\n-     (SIGABRT, SIGKILL, SIGSTOP, SIGALRM1, SIGWAITING, SIGCPUFAIL);\n+   Unmasked : constant Signal_Set :=\n+                (SIGTRAP, SIGTTIN, SIGTTOU, SIGTSTP, SIGPROF);\n+   Reserved : constant Signal_Set :=\n+                (SIGABRT, SIGKILL, SIGSTOP, SIGALRM1, SIGWAITING, SIGCPUFAIL);\n \n    type sigset_t is private;\n \n@@ -198,8 +198,7 @@ package System.OS_Interface is\n    function clock_gettime\n      (clock_id : clockid_t;\n       tp       : access timespec) return int;\n-   --  AiX threads don't have clock_gettime\n-   --  We instead use gettimeofday()\n+   --  AIX threads don't have clock_gettime, so use gettimeofday() instead\n \n    function To_Duration (TS : timespec) return Duration;\n    pragma Inline (To_Duration);\n@@ -215,8 +214,8 @@ package System.OS_Interface is\n    type struct_timezone_ptr is access all struct_timezone;\n \n    type struct_timeval is private;\n-   --  This is needed on systems that do not have clock_gettime()\n-   --  but do have gettimeofday().\n+   --  This is needed on systems that do not have clock_gettime() but do have\n+   --  gettimeofday().\n \n    function To_Duration (TV : struct_timeval) return Duration;\n    pragma Inline (To_Duration);\n@@ -234,7 +233,7 @@ package System.OS_Interface is\n \n    function To_Target_Priority\n      (Prio : System.Any_Priority) return Interfaces.C.int;\n-   --  Maps System.Any_Priority to a POSIX priority.\n+   --  Maps System.Any_Priority to a POSIX priority\n \n    -------------\n    -- Process --\n@@ -277,23 +276,25 @@ package System.OS_Interface is\n \n    PTHREAD_CREATE_DETACHED : constant := 1;\n \n+   PTHREAD_SCOPE_PROCESS : constant := 1;\n+   PTHREAD_SCOPE_SYSTEM  : constant := 0;\n+\n    -----------\n    -- Stack --\n    -----------\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target.\n+   --  Indicates wether the stack base is available on this target\n \n    function Get_Stack_Base (thread : pthread_t) return Address;\n    pragma Inline (Get_Stack_Base);\n-   --  returns the stack base of the specified thread.\n-   --  Only call this function when Stack_Base_Available is True.\n+   --  Returns the stack base of the specified thread. Only call this function\n+   --  when Stack_Base_Available is True.\n \n    function Get_Page_Size return size_t;\n    function Get_Page_Size return Address;\n    pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  returns the size of a page, or 0 if this is not relevant on this\n-   --  target\n+   --  Returns the size of a page, or 0 if this is not relevant on this target\n \n    PROT_NONE  : constant := 0;\n    PROT_READ  : constant := 1;\n@@ -312,7 +313,7 @@ package System.OS_Interface is\n    ---------------------------------------\n \n    --  Though not documented, pthread_init *must* be called before any other\n-   --  pthread call\n+   --  pthread call.\n \n    procedure pthread_init;\n    pragma Import (C, pthread_init, \"pthread_init\");\n@@ -450,7 +451,7 @@ package System.OS_Interface is\n    pragma Import (C, pthread_attr_setschedparam);\n \n    function sched_yield return int;\n-   --  AiX have a nonstandard sched_yield.\n+   --  AIX have a nonstandard sched_yield\n \n    --------------------------\n    -- P1003.1c  Section 16 --\n@@ -508,7 +509,6 @@ package System.OS_Interface is\n    pragma Import (C, pthread_key_create, \"pthread_key_create\");\n \n private\n-\n    type sigset_t is record\n       losigs : unsigned_long;\n       hisigs : unsigned_long;"}, {"sha": "7b7dcf2896882c9a558b729e5afe0b42539b495b", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=c5173b1ab367b28977368972a2aa9a04ef53da2e", "patch": "@@ -255,6 +255,9 @@ package System.OS_Interface is\n \n    PTHREAD_CREATE_DETACHED : constant := 2;\n \n+   PTHREAD_SCOPE_PROCESS : constant := 2;\n+   PTHREAD_SCOPE_SYSTEM  : constant := 1;\n+\n    -----------\n    -- Stack --\n    -----------"}, {"sha": "2e6d0e4a944bcaa4c89f160ab7b594e43a9794a6", "filename": "gcc/ada/s-osinte-freebsd.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-freebsd.ads?ref=c5173b1ab367b28977368972a2aa9a04ef53da2e", "patch": "@@ -298,6 +298,9 @@ package System.OS_Interface is\n    PTHREAD_CREATE_DETACHED : constant := 1;\n    PTHREAD_CREATE_JOINABLE : constant := 0;\n \n+   PTHREAD_SCOPE_PROCESS : constant := 0;\n+   PTHREAD_SCOPE_SYSTEM  : constant := 2;\n+\n    -----------\n    -- Stack --\n    -----------"}, {"sha": "31f3d9632ce6fb0170cc52fca819efe42b7884cd", "filename": "gcc/ada/s-osinte-hpux.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux.ads?ref=c5173b1ab367b28977368972a2aa9a04ef53da2e", "patch": "@@ -272,6 +272,9 @@ package System.OS_Interface is\n \n    PTHREAD_CREATE_DETACHED : constant := 16#de#;\n \n+   PTHREAD_SCOPE_PROCESS : constant := 2;\n+   PTHREAD_SCOPE_SYSTEM  : constant := 1;\n+\n    -----------\n    -- Stack --\n    -----------"}, {"sha": "76c6ea2675af2791e086624e651761d65633888f", "filename": "gcc/ada/s-osinte-lynxos-3.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-lynxos-3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-lynxos-3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-lynxos-3.ads?ref=c5173b1ab367b28977368972a2aa9a04ef53da2e", "patch": "@@ -268,6 +268,9 @@ package System.OS_Interface is\n \n    PTHREAD_CREATE_DETACHED : constant := 0;\n \n+   PTHREAD_SCOPE_PROCESS : constant := 0;\n+   PTHREAD_SCOPE_SYSTEM  : constant := 1;\n+\n    -----------\n    -- Stack --\n    -----------"}, {"sha": "f3d2477142ff5ef6ead57412befb4ff93ce14124", "filename": "gcc/ada/s-osinte-solaris-posix.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5173b1ab367b28977368972a2aa9a04ef53da2e/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris-posix.ads?ref=c5173b1ab367b28977368972a2aa9a04ef53da2e", "patch": "@@ -263,6 +263,9 @@ package System.OS_Interface is\n \n    PTHREAD_CREATE_DETACHED : constant := 16#40#;\n \n+   PTHREAD_SCOPE_PROCESS : constant := 0;\n+   PTHREAD_SCOPE_SYSTEM  : constant := 1;\n+\n    -----------\n    -- Stack --\n    -----------"}]}