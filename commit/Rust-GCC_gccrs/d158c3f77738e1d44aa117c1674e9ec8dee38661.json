{"sha": "d158c3f77738e1d44aa117c1674e9ec8dee38661", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE1OGMzZjc3NzM4ZTFkNDRhYTExN2MxNjc0ZTllYzhkZWUzODY2MQ==", "commit": {"author": {"name": "Jeff Law", "email": "jlaw@localhost.localdomain", "date": "2021-08-31T13:48:02Z"}, "committer": {"name": "Jeff Law", "email": "jlaw@localhost.localdomain", "date": "2021-08-31T13:54:42Z"}, "message": "More stabs removal.\n\ngcc/\n\n\t* config.gcc (cris-*-elf, cris-*-none): Remove dbxelf.h from\n\ttm_file.\n\t(m32r-*-elf, m32rle-*-elf, m32r-*-linux): Likewise.\n\t(mn10300-*-*, am33_2.0-*-linux*): Likewise.\n\t(xtensa*-*-elf, xtensa*-*-linux, xtensa*-*-uclinux): Likewise.\n\t(m32c-*-elf*, m32c-*-rtems*): Likewise.\n\t* config/cris/cris.h (DBX_NO_XREFS): Remove.\n\t(DBX_CONTIN_LENGTH, DBX_CONTIN_CHAR): Likewise.\n\t* config/m32r/m32r.h (DBXOUT_SOURCE_LINE): Likewise.\n\t(DBX_DEBUGGING_INFO, DBX_CONTIN_LENGTH): Likewise.\n\t* config/mn10300/mn10300.h (DEFAULT_GDB_EXTENSIONS): Likewise.\n\t* config/mn10300/linux.h (DBX_REGISTER_NAMES): Likewise.", "tree": {"sha": "354e62455c2ecb699cc800b868c9f80dc78010da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/354e62455c2ecb699cc800b868c9f80dc78010da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d158c3f77738e1d44aa117c1674e9ec8dee38661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d158c3f77738e1d44aa117c1674e9ec8dee38661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d158c3f77738e1d44aa117c1674e9ec8dee38661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d158c3f77738e1d44aa117c1674e9ec8dee38661/comments", "author": null, "committer": null, "parents": [{"sha": "eca730231d5493647bb1e508fb1f853ffee0e95a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca730231d5493647bb1e508fb1f853ffee0e95a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca730231d5493647bb1e508fb1f853ffee0e95a"}], "stats": {"total": 79, "additions": 13, "deletions": 66}, "files": [{"sha": "e553ef34bc77e9c2046891cf41334f23466abe14", "filename": "gcc/config.gcc", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d158c3f77738e1d44aa117c1674e9ec8dee38661", "patch": "@@ -1532,7 +1532,7 @@ cr16-*-elf)\n         use_collect2=no\n         ;;\n cris-*-elf | cris-*-none)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n \ttmake_file=\"cris/t-cris cris/t-elfmulti\"\n \tgas=yes\n \textra_options=\"${extra_options} cris/elf.opt\"\n@@ -2293,21 +2293,21 @@ lm32-*-uclinux*)\n \ttmake_file=\"${tmake_file} lm32/t-lm32\"\n         ;;\n m32r-*-elf*)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n  \t;;\n m32rle-*-elf*)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h m32r/little.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h m32r/little.h ${tm_file}\"\n \t;;\n m32r-*-linux*)\n-\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} m32r/linux.h\"\n+\ttm_file=\"elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} m32r/linux.h\"\n \ttmake_file=\"${tmake_file} m32r/t-linux t-slibgcc\"\n \tgnu_ld=yes\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n \tfi\n  \t;;\n m32rle-*-linux*)\n-\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h m32r/little.h ${tm_file} m32r/linux.h\"\n+\ttm_file=\"elfos.h gnu-user.h linux.h glibc-stdint.h m32r/little.h ${tm_file} m32r/linux.h\"\n \ttmake_file=\"${tmake_file} m32r/t-linux t-slibgcc\"\n \tgnu_ld=yes\n \tif test x$enable_threads = xyes; then\n@@ -2736,11 +2736,7 @@ mmix-knuth-mmixware)\n \tuse_gcc_stdint=wrap\n \t;;\n mn10300-*-*)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n-\tif test x$stabs = xyes\n-\tthen\n-\t\ttm_file=\"${tm_file} dbx.h\"\n-\tfi\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n \tuse_collect2=no\n \tuse_gcc_stdint=wrap\n \t;;\n@@ -3555,30 +3551,30 @@ xstormy16-*-elf)\n \ttmake_file=\"stormy16/t-stormy16\"\n \t;;\n xtensa*-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h xtensa/elf.h\"\n+\ttm_file=\"${tm_file} elfos.h newlib-stdint.h xtensa/elf.h\"\n \textra_options=\"${extra_options} xtensa/elf.opt\"\n \t;;\n xtensa*-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h xtensa/linux.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h linux.h glibc-stdint.h xtensa/linux.h\"\n \ttmake_file=\"${tmake_file} xtensa/t-xtensa\"\n \t;;\n xtensa*-*-uclinux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h xtensa/uclinux.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h linux.h glibc-stdint.h xtensa/uclinux.h\"\n \ttmake_file=\"${tmake_file} xtensa/t-xtensa\"\n \textra_options=\"${extra_options} xtensa/uclinux.opt\"\n \t;;\n am33_2.0-*-linux*)\n-\ttm_file=\"mn10300/mn10300.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h mn10300/linux.h\"\n+\ttm_file=\"mn10300/mn10300.h elfos.h gnu-user.h linux.h glibc-stdint.h mn10300/linux.h\"\n \tgas=yes gnu_ld=yes\n \tuse_collect2=no\n \t;;\n m32c-*-rtems*)\n-\ttm_file=\"dbxelf.h elfos.h ${tm_file} m32c/rtems.h rtems.h newlib-stdint.h\"\n+\ttm_file=\"elfos.h ${tm_file} m32c/rtems.h rtems.h newlib-stdint.h\"\n \tc_target_objs=\"m32c-pragma.o\"\n \tcxx_target_objs=\"m32c-pragma.o\"\n  \t;;\n m32c-*-elf*)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n \tc_target_objs=\"m32c-pragma.o\"\n \tcxx_target_objs=\"m32c-pragma.o\"\n  \t;;"}, {"sha": "4276b6a76bfe0a564cd71630c72349c8daf5c5a1", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=d158c3f77738e1d44aa117c1674e9ec8dee38661", "patch": "@@ -901,24 +901,6 @@ struct cum_args {int regs;};\n /* FIXME: Investigate DEBUGGER_AUTO_OFFSET, DEBUGGER_ARG_OFFSET.  */\n \n \n-/* Node: DBX Options */\n-\n-/* Is this correct? Check later.  */\n-#define DBX_NO_XREFS\n-\n-#define DBX_CONTIN_LENGTH 0\n-\n-/* FIXME: Is this needed when we have 0 DBX_CONTIN_LENGTH?  */\n-#define DBX_CONTIN_CHAR '?'\n-\n-\n-/* Node: DBX Hooks */\n-/* (no definitions) */\n-\n-/* Node: File names and DBX */\n-/* (no definitions) */\n-\n-\n /* Node: DWARF */\n /* (no definitions) */\n "}, {"sha": "047805fd808a9a783e6216c3f04d1040aa9f9bb4", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=d158c3f77738e1d44aa117c1674e9ec8dee38661", "patch": "@@ -769,29 +769,6 @@ L2:     .word STATIC\n /* Globalizing directive for a label.  */\n #define GLOBAL_ASM_OP \"\\t.global\\t\"\n \n-/* We do not use DBX_LINES_FUNCTION_RELATIVE or\n-   dbxout_stab_value_internal_label_diff here because\n-   we need to use .debugsym for the line label.  */\n-\n-#define DBX_OUTPUT_SOURCE_LINE(file, line, counter)\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      const char * begin_label =\t\t\t\t\t\\\n-\tXSTR (XEXP (DECL_RTL (current_function_decl), 0), 0);\t\t\\\n-      char label[64];\t\t\t\t\t\t\t\\\n-      ASM_GENERATE_INTERNAL_LABEL (label, \"LM\", counter);\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      dbxout_begin_stabn_sline (line);\t\t\t\t\t\\\n-      assemble_name (file, label);\t\t\t\t\t\\\n-      putc ('-', file);\t\t\t\t\t\t\t\\\n-      assemble_name (file, begin_label);\t\t\t\t\\\n-      fputs (\"\\n\\t.debugsym \", file);\t\t\t\t\t\\\n-      assemble_name (file, label);\t\t\t\t\t\\\n-      putc ('\\n', file);\t\t\t\t\t\t\\\n-      counter += 1;\t\t\t\t\t\t\t\\\n-     }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).  */\n #ifndef SUBTARGET_REGISTER_NAMES\n@@ -930,16 +907,13 @@ L2:     .word STATIC\n \f\n /* Debugging information.  */\n \n-/* Generate DBX and DWARF debugging information.  */\n-#define DBX_DEBUGGING_INFO    1\n+/* Generate DWARF debugging information.  */\n #define DWARF2_DEBUGGING_INFO 1\n \n /* Use DWARF2 debugging info by default.  */\n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n-/* Turn off splitting of long stabs.  */\n-#define DBX_CONTIN_LENGTH 0\n \f\n /* Miscellaneous.  */\n "}, {"sha": "44825eb4ac152919a889be079a9efa807eee6a3e", "filename": "gcc/config/mn10300/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig%2Fmn10300%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig%2Fmn10300%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Flinux.h?ref=d158c3f77738e1d44aa117c1674e9ec8dee38661", "patch": "@@ -44,8 +44,6 @@\n #undef  PROCESSOR_DEFAULT\n #define PROCESSOR_DEFAULT PROCESSOR_AM33_2\n \n-#define DBX_REGISTER_NUMBER(REGNO) (REGNO)\n-\n extern int mn10300_protect_label;\n \n #undef  PRINT_OPERAND"}, {"sha": "cb0d072846dd96f4a621c60446b033b7c1f218ad", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158c3f77738e1d44aa117c1674e9ec8dee38661/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=d158c3f77738e1d44aa117c1674e9ec8dee38661", "patch": "@@ -649,9 +649,6 @@ do {\t\t\t\t\t\t\t\t\t     \\\n   if ((LOG) != 0)\t\t\t\\\n     fprintf (FILE, \"\\t.align %d\\n\", (LOG))\n \n-/* We don't have to worry about dbx compatibility for the mn10300.  */\n-#define DEFAULT_GDB_EXTENSIONS 1\n-\n /* Use dwarf2 debugging info by default.  */\n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG"}]}