{"sha": "d24959df23a78d5bf0fc0b317b23824b75a9926c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI0OTU5ZGYyM2E3OGQ1YmYwZmMwYjMxN2IyMzgyNGI3NWE5OTI2Yw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2005-06-02T19:57:24Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-06-02T19:57:24Z"}, "message": "s390.c (s390_add_execute): Do not handle out-of-pool execute templates.\n\n\t* config/s390/s390.c (s390_add_execute): Do not handle out-of-pool\n\texecute templates.\n\t(s390_dump_pool): Likewise.\n\t(s390_mainpool_start, s390_mainpool_finish): Likewise.\n\t(s390_chunkify_start): Likewise.\n\t(s390_dump_execute): Remove.\n\t(s390_reorg): Handle out-of-pool execute templates.\n\nFrom-SVN: r100510", "tree": {"sha": "50a481d4da980ff75b46359ebab4adc0c8dae35a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50a481d4da980ff75b46359ebab4adc0c8dae35a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d24959df23a78d5bf0fc0b317b23824b75a9926c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24959df23a78d5bf0fc0b317b23824b75a9926c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d24959df23a78d5bf0fc0b317b23824b75a9926c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24959df23a78d5bf0fc0b317b23824b75a9926c/comments", "author": null, "committer": null, "parents": [{"sha": "79dd769c9c1e72d83a16524f1cf87ce187a2e61c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79dd769c9c1e72d83a16524f1cf87ce187a2e61c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79dd769c9c1e72d83a16524f1cf87ce187a2e61c"}], "stats": {"total": 74, "additions": 36, "deletions": 38}, "files": [{"sha": "01fa616d522a8d4295ded12755da59f196c4eeec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24959df23a78d5bf0fc0b317b23824b75a9926c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24959df23a78d5bf0fc0b317b23824b75a9926c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d24959df23a78d5bf0fc0b317b23824b75a9926c", "patch": "@@ -1,3 +1,13 @@\n+2005-06-02  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_add_execute): Do not handle out-of-pool\n+\texecute templates.\n+\t(s390_dump_pool): Likewise.\n+\t(s390_mainpool_start, s390_mainpool_finish): Likewise.\n+\t(s390_chunkify_start): Likewise.\n+\t(s390_dump_execute): Remove.\n+\t(s390_reorg): Handle out-of-pool execute templates.\n+\n 2005-06-02  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* optabs.c: (expand_bool_compare_and_swap): Emit barrier after"}, {"sha": "354f55e26fb65413362c32e8364ebd77ceeccb4a", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 26, "deletions": 38, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24959df23a78d5bf0fc0b317b23824b75a9926c/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24959df23a78d5bf0fc0b317b23824b75a9926c/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=d24959df23a78d5bf0fc0b317b23824b75a9926c", "patch": "@@ -4672,15 +4672,12 @@ s390_add_execute (struct constant_pool *pool, rtx insn)\n \n   if (c == NULL)\n     {\n-      rtx label = s390_execute_label (insn);\n-      gcc_assert (label);\n-\n       c = (struct constant *) xmalloc (sizeof *c);\n       c->value = insn;\n-      c->label = label == const0_rtx ? gen_label_rtx () : XEXP (label, 0);\n+      c->label = gen_label_rtx ();\n       c->next = pool->execute;\n       pool->execute = c;\n-      pool->size += label == const0_rtx ? 6 : 0;\n+      pool->size += 6;\n     }\n }\n \n@@ -4732,28 +4729,6 @@ s390_execute_target (rtx insn)\n   return pattern;\n }\n \n-/* Dump out the out-of-pool execute template insns in POOL\n-   at the end of the instruction stream.  */\n-\n-static void\n-s390_dump_execute (struct constant_pool *pool)\n-{\n-  struct constant *c;\n-  rtx insn;\n-\n-  for (c = pool->execute; c; c = c->next)\n-    {\n-      if (s390_execute_label (c->value) == const0_rtx)\n-\tcontinue;\n-\n-      insn = emit_label (c->label);\n-      INSN_ADDRESSES_NEW (insn, -1);\n-\n-      insn = emit_insn (s390_execute_target (c->value));\n-      INSN_ADDRESSES_NEW (insn, -1);\n-    }\n-}\n-\n /* Indicate that INSN cannot be duplicated.  This is the case for\n    execute insns that carry a unique label.  */\n \n@@ -4829,9 +4804,6 @@ s390_dump_pool (struct constant_pool *pool, bool remote_label)\n   /* Output in-pool execute template insns.  */\n   for (c = pool->execute; c; c = c->next)\n     {\n-      if (s390_execute_label (c->value) != const0_rtx)\n-\tcontinue;\n-\n       insn = emit_label_after (c->label, insn);\n       INSN_ADDRESSES_NEW (insn, -1);\n \n@@ -4851,9 +4823,6 @@ s390_dump_pool (struct constant_pool *pool, bool remote_label)\n \n   /* Remove placeholder insn.  */\n   remove_insn (pool->pool_insn);\n-\n-  /* Output out-of-pool execute template isns.  */\n-  s390_dump_execute (pool);\n }\n \n /* Free all memory used by POOL.  */\n@@ -4903,7 +4872,7 @@ s390_mainpool_start (void)\n \t  pool->pool_insn = insn;\n \t}\n \n-      if (s390_execute_label (insn))\n+      if (!TARGET_CPU_ZARCH && s390_execute_label (insn))\n \t{\n \t  s390_add_execute (pool, insn);\n \t}\n@@ -4948,9 +4917,6 @@ s390_mainpool_finish (struct constant_pool *pool)\n   /* If the pool is empty, we're done.  */\n   if (pool->size == 0)\n     {\n-      /* However, we may have out-of-pool execute templates.  */\n-      s390_dump_execute (pool);\n-\n       /* We don't actually need a base register after all.  */\n       cfun->machine->base_reg = NULL_RTX;\n \n@@ -5103,7 +5069,7 @@ s390_chunkify_start (void)\n \t    }\n \t}\n \n-      if (s390_execute_label (insn))\n+      if (!TARGET_CPU_ZARCH && s390_execute_label (insn))\n \t{\n \t  if (!curr_pool)\n \t    curr_pool = s390_start_pool (&pool_list, insn);\n@@ -8188,6 +8154,28 @@ s390_reorg (void)\n       break;\n     }\n \n+  /* Generate out-of-pool execute target insns.  */\n+  if (TARGET_CPU_ZARCH)\n+    {\n+      rtx insn, label, target;\n+\n+      for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n+\t{\n+\t  label = s390_execute_label (insn);\n+\t  if (!label)\n+\t    continue;\n+\n+\t  gcc_assert (label != const0_rtx);\n+\n+\t  target = emit_label (XEXP (label, 0));\n+\t  INSN_ADDRESSES_NEW (target, -1);\n+\n+\t  target = emit_insn (s390_execute_target (insn));\n+\t  INSN_ADDRESSES_NEW (target, -1);\n+\t}\n+    }\n+\n+  /* Try to optimize prologue and epilogue further.  */\n   s390_optimize_prologue ();\n }\n "}]}