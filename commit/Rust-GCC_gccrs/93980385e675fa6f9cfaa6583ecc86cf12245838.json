{"sha": "93980385e675fa6f9cfaa6583ecc86cf12245838", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM5ODAzODVlNjc1ZmE2ZjljZmFhNjU4M2VjYzg2Y2YxMjI0NTgzOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-05T17:56:27Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-05T17:56:27Z"}, "message": "Initial revision\n\nFrom-SVN: r102", "tree": {"sha": "cca10bfa4923b0ada3b02b157a39d7c3f07b3faf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cca10bfa4923b0ada3b02b157a39d7c3f07b3faf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93980385e675fa6f9cfaa6583ecc86cf12245838", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93980385e675fa6f9cfaa6583ecc86cf12245838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93980385e675fa6f9cfaa6583ecc86cf12245838", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93980385e675fa6f9cfaa6583ecc86cf12245838/comments", "author": null, "committer": null, "parents": [{"sha": "dcaaea921121a05004c245a62ffced7a88343552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcaaea921121a05004c245a62ffced7a88343552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcaaea921121a05004c245a62ffced7a88343552"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "a33aac1be60d9b209915f27545c7649ba92a24eb", "filename": "gcc/ginclude/varargs.h", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93980385e675fa6f9cfaa6583ecc86cf12245838/gcc%2Fginclude%2Fvarargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93980385e675fa6f9cfaa6583ecc86cf12245838/gcc%2Fginclude%2Fvarargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fvarargs.h?ref=93980385e675fa6f9cfaa6583ecc86cf12245838", "patch": "@@ -0,0 +1,84 @@\n+#ifndef __GNUC__\n+/* Use the system's macros with the system's compiler.  */\n+#include <varargs.h>\n+#else\n+/* Record that varargs.h is defined; this turns off stdarg.h.  */\n+\n+#ifndef _VARARGS_H\n+#define _VARARGS_H\n+\n+#ifdef __sparc__\n+#include \"va-sparc.h\"\n+#else\n+#ifdef __spur__\n+#include \"va-spur.h\"\n+#else\n+#ifdef __mips__\n+#include \"va-mips.h\"\n+#else\n+#ifdef __i860__\n+#include \"va-i860.h\"\n+#else\n+#ifdef __pyr__\n+#include \"va-pyr.h\"\n+#else\n+#ifdef __m88k__\n+#include \"va-m88k.h\"\n+#else\n+#ifdef __hp9000s800__\n+#include \"va-hp800.h\"\n+#else\n+\n+#ifdef __NeXT__\n+\n+/* On Next, erase any vestiges of stdarg.h.  */\n+\n+#undef va_alist\n+#undef va_dcl\n+#undef va_list\n+#undef va_start\n+#undef va_end\n+#undef __va_rounded_size\n+#undef va_arg\n+#endif  /* __NeXT__ */\n+\n+/* In GCC version 2, we want an ellipsis at the end of the declaration\n+   of the argument list.  GCC version 1 can't parse it.  */\n+\n+#if __GNUC__ > 1\n+#define __va_ellipsis ...\n+#else\n+#define __va_ellipsis\n+#endif\n+\n+/* These macros implement traditional (non-ANSI) varargs\n+   for GNU C.  */\n+\n+#define va_alist  __builtin_va_alist\n+/* The ... causes current_function_varargs to be set in cc1.  */\n+#define va_dcl    int __builtin_va_alist; __va_ellipsis\n+\n+/* Make this a macro rather than a typedef, so we can undef any other defn.  */\n+#define va_list __va___list\n+typedef char * __va___list;\n+\n+#define va_start(AP)  AP=(char *) &__builtin_va_alist\n+\n+#define va_end(AP)\n+\n+#define __va_rounded_size(TYPE)  \\\n+  (((sizeof (TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))\n+\n+#define va_arg(AP, TYPE)\t\t\t\t\t\t\\\n+ (AP += __va_rounded_size (TYPE),\t\t\t\t\t\\\n+  *((TYPE *) (AP - __va_rounded_size (TYPE))))\n+\n+#endif /* not hp800 */\n+#endif /* not m88k */\n+#endif /* not pyr */\n+#endif /* not i860 */\n+#endif /* not mips */\n+#endif /* not spur */\n+#endif /* not sparc */\n+#endif /* not _VARARGS_H */\n+#endif /* __GNUC__ */"}]}