{"sha": "a7765de8ef7653d7e899b24ed7bb3819e5f90f29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc3NjVkZThlZjc2NTNkN2U4OTliMjRlZDdiYjM4MTllNWY5MGYyOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-01-09T17:15:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-01-09T17:15:58Z"}, "message": "PR79017 workaround incomplete C99 math on darwin\n\n\tPR libstdc++/79017\n\t* acinclude.m4 (GLIBCXX_CHECK_C99_TR1): Check for llrint and llround\n\tfunctions separately on darwin and if they're missing define\n\t_GLIBCXX_NO_C99_ROUNDING_FUNCS.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* include/c_global/cmath [_GLIBCXX_NO_C99_ROUNDING_FUNCS] (llrint)\n\t(llrintf, llrintl, llround, llroundf, llroundl): Do not define.\n\nFrom-SVN: r244231", "tree": {"sha": "bcebea7a38679521f55bec11d91f3bd3aee07631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcebea7a38679521f55bec11d91f3bd3aee07631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7765de8ef7653d7e899b24ed7bb3819e5f90f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7765de8ef7653d7e899b24ed7bb3819e5f90f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7765de8ef7653d7e899b24ed7bb3819e5f90f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b85f4e61cc68995ac3c53e122afc9befc375755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b85f4e61cc68995ac3c53e122afc9befc375755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b85f4e61cc68995ac3c53e122afc9befc375755"}], "stats": {"total": 87, "additions": 87, "deletions": 0}, "files": [{"sha": "5d9f26d6a9b7b761a69e4dac67f502c2ef1a273a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a7765de8ef7653d7e899b24ed7bb3819e5f90f29", "patch": "@@ -1,5 +1,14 @@\n 2017-01-09  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/79017\n+\t* acinclude.m4 (GLIBCXX_CHECK_C99_TR1): Check for llrint and llround\n+\tfunctions separately on darwin and if they're missing define\n+\t_GLIBCXX_NO_C99_ROUNDING_FUNCS.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* include/c_global/cmath [_GLIBCXX_NO_C99_ROUNDING_FUNCS] (llrint)\n+\t(llrintf, llrintl, llround, llroundf, llroundl): Do not define.\n+\n \t* testsuite/30_threads/condition_variable/members/3.cc: Use new macro\n \tto detect correct thread_local destructors.\n \t* testsuite/util/testsuite_hooks.h (CORRECT_THREAD_LOCAL_DTORS):"}, {"sha": "4e04ccea2ba03733aac61100245bb42b0b30c9fb", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=a7765de8ef7653d7e899b24ed7bb3819e5f90f29", "patch": "@@ -1890,12 +1890,14 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n \t\t  lgamma(0.0);\n \t\t  lgammaf(0.0f);\n \t\t  lgammal(0.0l);\n+\t\t  #ifndef __APPLE__ /* see below */\n \t\t  llrint(0.0);\n \t\t  llrintf(0.0f);\n \t\t  llrintl(0.0l);\n \t\t  llround(0.0);\n \t\t  llroundf(0.0f);\n \t\t  llroundl(0.0l);\n+\t\t  #endif\n \t\t  log1p(0.0);\n \t\t  log1pf(0.0f);\n \t\t  log1pl(0.0l);\n@@ -1954,6 +1956,29 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n     AC_DEFINE(_GLIBCXX_USE_C99_MATH_TR1, 1,\n \t      [Define if C99 functions or macros in <math.h> should be imported\n \t      in <tr1/cmath> in namespace std::tr1.])\n+\n+    case \"${target_os}\" in\n+      darwin*)\n+        AC_MSG_CHECKING([for ISO C99 rounding functions in <math.h>])\n+        AC_CACHE_VAL(glibcxx_cv_c99_math_llround, [\n+          AC_TRY_COMPILE([#include <math.h>],\n+\t\t [llrint(0.0);\n+\t\t  llrintf(0.0f);\n+\t\t  llrintl(0.0l);\n+\t\t  llround(0.0);\n+\t\t  llroundf(0.0f);\n+\t\t  llroundl(0.0l);\n+\t\t ],\n+\t\t [glibcxx_cv_c99_math_llround=yes],\n+\t\t [glibcxx_cv_c99_math_llround=no])\n+          ])\n+\tAC_MSG_RESULT($glibcxx_cv_c99_math_llround)\n+        ;;\n+    esac\n+    if test x\"$glibcxx_cv_c99_math_llround\" = x\"no\"; then\n+      AC_DEFINE(_GLIBCXX_NO_C99_ROUNDING_FUNCS, 1,\n+\t\t[Define if C99 llrint and llround functions are missing from <math.h>.])\n+    fi\n   fi\n \n   # Check for the existence of <inttypes.h> functions (NB: doesn't make"}, {"sha": "51b770dd1ddeb27c543709d383b3359cc1ea28b0", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=a7765de8ef7653d7e899b24ed7bb3819e5f90f29", "patch": "@@ -819,6 +819,9 @@\n /* Define to the letter to which size_t is mangled. */\n #undef _GLIBCXX_MANGLE_SIZE_T\n \n+/* Define if C99 llrint and llround functions are missing from <math.h>. */\n+#undef _GLIBCXX_NO_C99_ROUNDING_FUNCS\n+\n /* Define if ptrdiff_t is int. */\n #undef _GLIBCXX_PTRDIFF_T_IS_INT\n "}, {"sha": "64d893344b8355e7474e0b5e51ccf37633928d54", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=a7765de8ef7653d7e899b24ed7bb3819e5f90f29", "patch": "@@ -20079,12 +20079,14 @@ typedef double_t  my_double_t;\n \t\t  lgamma(0.0);\n \t\t  lgammaf(0.0f);\n \t\t  lgammal(0.0l);\n+\t\t  #ifndef __APPLE__ /* see below */\n \t\t  llrint(0.0);\n \t\t  llrintf(0.0f);\n \t\t  llrintl(0.0l);\n \t\t  llround(0.0);\n \t\t  llroundf(0.0f);\n \t\t  llroundl(0.0l);\n+\t\t  #endif\n \t\t  log1p(0.0);\n \t\t  log1pf(0.0f);\n \t\t  log1pl(0.0l);\n@@ -20156,6 +20158,50 @@ $as_echo \"$glibcxx_cv_c99_math_tr1\" >&6; }\n \n $as_echo \"#define _GLIBCXX_USE_C99_MATH_TR1 1\" >>confdefs.h\n \n+\n+    case \"${target_os}\" in\n+      darwin*)\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ISO C99 rounding functions in <math.h>\" >&5\n+$as_echo_n \"checking for ISO C99 rounding functions in <math.h>... \" >&6; }\n+        if test \"${glibcxx_cv_c99_math_llround+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+          cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <math.h>\n+int\n+main ()\n+{\n+llrint(0.0);\n+\t\t  llrintf(0.0f);\n+\t\t  llrintl(0.0l);\n+\t\t  llround(0.0);\n+\t\t  llroundf(0.0f);\n+\t\t  llroundl(0.0l);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_c99_math_llround=yes\n+else\n+  glibcxx_cv_c99_math_llround=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+\n+\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_c99_math_llround\" >&5\n+$as_echo \"$glibcxx_cv_c99_math_llround\" >&6; }\n+        ;;\n+    esac\n+    if test x\"$glibcxx_cv_c99_math_llround\" = x\"no\"; then\n+\n+$as_echo \"#define _GLIBCXX_NO_C99_ROUNDING_FUNCS 1\" >>confdefs.h\n+\n+    fi\n   fi\n \n   # Check for the existence of <inttypes.h> functions (NB: doesn't make"}, {"sha": "6e7508f6939465ad0a1326b0464818cbd2d4d8c6", "filename": "libstdc++-v3/include/c_global/cmath", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7765de8ef7653d7e899b24ed7bb3819e5f90f29/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath?ref=a7765de8ef7653d7e899b24ed7bb3819e5f90f29", "patch": "@@ -1012,12 +1012,14 @@ _GLIBCXX_END_NAMESPACE_VERSION\n #undef lgamma\n #undef lgammaf\n #undef lgammal\n+#ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS\n #undef llrint\n #undef llrintf\n #undef llrintl\n #undef llround\n #undef llroundf\n #undef llroundl\n+#endif\n #undef log1p\n #undef log1pf\n #undef log1pl\n@@ -1143,13 +1145,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   using ::lgammaf;\n   using ::lgammal;\n \n+#ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS\n   using ::llrint;\n   using ::llrintf;\n   using ::llrintl;\n \n   using ::llround;\n   using ::llroundf;\n   using ::llroundl;\n+#endif\n \n   using ::log1p;\n   using ::log1pf;"}]}