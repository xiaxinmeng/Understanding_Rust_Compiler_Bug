{"sha": "6699d593734ee8f2cf7472ac581e123e54936be4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY5OWQ1OTM3MzRlZThmMmNmNzQ3MmFjNTgxZTEyM2U1NDkzNmJlNA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-02-02T20:06:23Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-02-02T20:06:23Z"}, "message": "* g++.dg/eh/forced1.C, g++.dg/eh/forced2.C, g++.dg/eh/forced3.C\n\t* g++.dg/eh/forced4.C: XFAIL ia64-hp-hpux11.*.\n\t* g++.dg/eh/ia64-1.C: Test branch regs only #ifdef __LP64__.\n\t* gcc.dg/cleanup-5.c: Run only on Linux targets.\n\nFrom-SVN: r77134", "tree": {"sha": "9cd9bff613a14d8f68c6e708d2203bee26121f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cd9bff613a14d8f68c6e708d2203bee26121f20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6699d593734ee8f2cf7472ac581e123e54936be4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6699d593734ee8f2cf7472ac581e123e54936be4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6699d593734ee8f2cf7472ac581e123e54936be4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6699d593734ee8f2cf7472ac581e123e54936be4/comments", "author": null, "committer": null, "parents": [{"sha": "ef2c1035fc580a4f63dd1c16f3466213685a6c51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2c1035fc580a4f63dd1c16f3466213685a6c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef2c1035fc580a4f63dd1c16f3466213685a6c51"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "56a7c0c6cde288a28a9831c3a5620b16850725f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6699d593734ee8f2cf7472ac581e123e54936be4", "patch": "@@ -1,3 +1,10 @@\n+2004-02-02  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* g++.dg/eh/forced1.C, g++.dg/eh/forced2.C, g++.dg/eh/forced3.C\n+\t* g++.dg/eh/forced4.C: XFAIL ia64-hp-hpux11.*.\n+\t* g++.dg/eh/ia64-1.C: Test branch regs only #ifdef __LP64__.\n+\t* gcc.dg/cleanup-5.c: Run only on Linux targets.\n+\n 2004-02-02  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13113\n@@ -20,7 +27,7 @@\n 2004-02-01  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/13957\n-\t* g++.dg/template/non-type-template-argument-1.C, \n+\t* g++.dg/template/non-type-template-argument-1.C,\n \tg++.dg/template/qualified-id1.C: Update\tdg-error marks.\n \t* g++.dg/template/nontype6.C: New test.\n \n@@ -86,7 +93,7 @@\n \n \t* objc.dg/proto-qual-1.m (ROUND, aligned_sizeof): New.\n \t(scan_initial, main): Use aligned_sizeof instead of sizeof.\n-\t\n+\n 2004-01-28  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13791\n@@ -110,7 +117,7 @@\n 2004-01-27  Devang Patel <dpatel@apple.com>\n \n \t* g++.dg/debug/namespace1.C: New test.\n-\t\n+\n 2004-01-27  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \t* gcc.dg/const-elim-1.c: Add xfail for strongarm-*-* and"}, {"sha": "7244a35f36cc89173665574772598e121b70fda6", "filename": "gcc/testsuite/g++.dg/eh/forced1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced1.C?ref=6699d593734ee8f2cf7472ac581e123e54936be4", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do run }\n+// HP-UX libunwind.so doesn't provide _Unwind_ForcedUnwind.\n+// { dg-do run { xfail \"ia64-hp-hpux11.*\" } }\n \n // Test that forced unwinding runs all cleanups.  Also tests that\n // rethrowing doesn't call the exception object destructor."}, {"sha": "b8ace620dbedcac196a88061e28772efaa4af8fd", "filename": "gcc/testsuite/g++.dg/eh/forced2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced2.C?ref=6699d593734ee8f2cf7472ac581e123e54936be4", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do run }\n+// HP-UX libunwind.so doesn't provide _Unwind_ForcedUnwind.\n+// { dg-do run { xfail \"ia64-hp-hpux11.*\" } }\n \n // Test that leaving the catch block without rethrowing\n // does call the exception object destructor."}, {"sha": "29d65d915519690cd5d64818451fc27c728cfd38", "filename": "gcc/testsuite/g++.dg/eh/forced3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced3.C?ref=6699d593734ee8f2cf7472ac581e123e54936be4", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do run }\n+// HP-UX libunwind.so doesn't provide _Unwind_ForcedUnwind.\n+// { dg-do run { xfail \"ia64-hp-hpux11.*\" } }\n \n // Test that forced unwinding calls std::unexpected going \n // throw a nothrow function."}, {"sha": "88b48c82b0a44a2c6bbaf4dc359bccbc3e360202", "filename": "gcc/testsuite/g++.dg/eh/forced4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced4.C?ref=6699d593734ee8f2cf7472ac581e123e54936be4", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do run }\n+// HP-UX libunwind.so doesn't provide _Unwind_ForcedUnwind.\n+// { dg-do run { xfail \"ia64-hp-hpux11.*\" } }\n \n // Test that forced unwinding does not call std::unexpected going \n // throw a function with a non-empty exception spec."}, {"sha": "17ef7f8b78cfd8fc2cae87b35674c5591a4a9bd8", "filename": "gcc/testsuite/g++.dg/eh/ia64-1.C", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fia64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fia64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fia64-1.C?ref=6699d593734ee8f2cf7472ac581e123e54936be4", "patch": "@@ -1,10 +1,13 @@\n // Test whether call saved float and branch regs are restored properly\n+// We can't do this test for branch regs in ILP32 mode.\n // { dg-do run { target ia64-*-* } }\n // { dg-options \"-O2\" }\n \n extern \"C\" void abort (void);\n \n+#ifdef __LP64__\n char buf[128];\n+#endif\n \n void __attribute__((noinline))\n bar (void)\n@@ -28,13 +31,17 @@ main (void)\n   register double f5 __asm (\"f5\");\n   register double f16 __asm (\"f16\");\n   register double f17 __asm (\"f17\");\n+#ifdef __LP64__\n   register void *b1 __asm (\"b1\");\n   register void *b2 __asm (\"b2\");\n   register void *b3 __asm (\"b3\");\n   register void *b4 __asm (\"b4\");\n   register void *b5 __asm (\"b5\");\n+#endif\n   f2 = 12.0; f3 = 13.0; f4 = 14.0; f5 = 15.0; f16 = 16.0; f17 = 17.0;\n+#ifdef __LP64__\n   b1 = &buf[1]; b2 = &buf[2]; b3 = &buf[3]; b4 = &buf[4]; b5 = &buf[5];\n+#endif\n   try\n     {\n       foo ();\n@@ -43,8 +50,10 @@ main (void)\n   if (f2 != 12.0 || f3 != 13.0 || f4 != 14.0\n       || f5 != 15.0 || f16 != 16.0 || f17 != 17.0)\n     abort ();\n+#ifdef __LP64__\n   if (b1 != &buf[1] || b2 != &buf[2] || b3 != &buf[3]\n       || b4 != &buf[4] || b5 != &buf[5])\n     abort ();\n+#endif\n   return 0;\n }"}, {"sha": "4b8468aa7335c22e76caae5041116c6f67edd5c0", "filename": "gcc/testsuite/gcc.dg/cleanup-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6699d593734ee8f2cf7472ac581e123e54936be4/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-5.c?ref=6699d593734ee8f2cf7472ac581e123e54936be4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run } */\n+/* { dg-do run { target i?86-*-linux* x86_64-*-linux* ia64-*-linux* alpha*-*-linux* powerpc*-*-linux* s390*-*-linux* sparc*-*-linux* mips*-*-linux* } } */\n /* { dg-options \"-fexceptions\" } */\n /* Verify that cleanups work with exception handling.  */\n "}]}