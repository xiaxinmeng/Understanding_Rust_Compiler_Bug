{"sha": "f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "node_id": "C_kwDOANBUbNoAKGY2ZjJkNmNmZWMxYzJmZTk1NzBiOTgyMTFiZTU4MzI5ZDhkNzc0OWI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-29T00:16:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-29T00:16:22Z"}, "message": "Daily bump.", "tree": {"sha": "d642c4bbbe47f580e0ec73ab383deb22f2aa7882", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d642c4bbbe47f580e0ec73ab383deb22f2aa7882"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/comments", "author": null, "committer": null, "parents": [{"sha": "06995c2958aaae7e1f60b7d8aa5f07ffda10880a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06995c2958aaae7e1f60b7d8aa5f07ffda10880a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06995c2958aaae7e1f60b7d8aa5f07ffda10880a"}], "stats": {"total": 233, "additions": 232, "deletions": 1}, "files": [{"sha": "a1476d6500d712575fd8d878f82df0d129b93987", "filename": "gcc/ChangeLog", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "patch": "@@ -1,3 +1,84 @@\n+2022-01-28  Yoshinori Sato  <yo-satoh@sios.com>\n+\n+\t* config/sh/t-linux (MULTILIB_EXCEPTIONS): Add m1, mb/m1 and m2a.\n+\n+2022-01-28  Navid Rahimi  <navidrahimi@microsoft.com>\n+\n+\tPR tree-optimization/103514\n+\t* match.pd (a & b) ^ (a == b) -> !(a | b): New optimization.\n+\t(a & b) == (a ^ b) -> !(a | b): New optimization.\n+\n+2022-01-28  Marek Polacek  <polacek@redhat.com>\n+\n+\t* doc/invoke.texi: Update -Wbidi-chars documentation.\n+\n+2022-01-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/rs6000/darwin.h (OPTION_GLIBC): Define to 0.\n+\n+2022-01-28  Zhao Wei Liew  <zhaoweiliew@gmail.com>\n+\n+\tPR tree-optimization/95424\n+\t* match.pd: Simplify 1 / X where X is an integer.\n+\n+2022-01-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/104263\n+\t* gimple-ssa-store-merging.cc (get_status_for_store_merging): For\n+\tcfun->can_throw_non_call_exceptions && cfun->eh test whether\n+\tlast non-debug stmt in the bb is store_valid_for_store_merging_p\n+\trather than last stmt.\n+\n+2022-01-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* diagnostic.cc (diagnostic_action_after_output): Remove extra\n+\tnewline.\n+\n+2022-01-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/rs6000/host-darwin.cc (segv_crash_handler):\n+\tDo not use leading capital letter.\n+\t(segv_handler): Likewise.\n+\t* ipa-sra.cc (verify_splitting_accesses): Likewise.\n+\t* varasm.cc (get_section): Likewise.\n+\n+2022-01-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104267\n+\t* tree-vect-stmts.cc (vectorizable_call): Properly use the\n+\tper-argument determined vector type for externals and\n+\tinvariants.\n+\n+2022-01-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104263\n+\t* tree-cfg.cc (gimple_purge_dead_abnormal_call_edges):\n+\tPurge edges also when !cfun->has_nonlocal_label\n+\tand !cfun->calls_setjmp.\n+\n+2022-01-28  Maciej W. Rozycki  <macro@embecosm.com>\n+\n+\t* config/riscv/riscv.md: Document `auipc' and `bitmanip' `type'\n+\tattributes.\n+\n+2022-01-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR lto/104237\n+\t* cfgrtl.cc (loc_equal): New function.\n+\t(unique_locus_on_edge_between_p): Use it.\n+\n+2022-01-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* cfganal.h (mark_dfs_back_edges): Provide API with struct\n+\tfunction argument.\n+\t* cfganal.cc (mark_dfs_back_edges): Take a struct function\n+\tto work on, add a wrapper passing cfun.\n+\t* graph.cc (draw_cfg_nodes_no_loops): Replace stray cfun\n+\tuses with fun which is already passed.\n+\t(draw_cfg_edges): Likewise.\n+\t(draw_cfg_nodes_for_loop): Do not use draw_cfg_nodes_for_loop\n+\tfor fun != cfun.\n+\n 2022-01-27  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/99895"}, {"sha": "1fcfb4d05ea3dea77d7db5c3832ae4d8bf4d2854", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "patch": "@@ -1 +1 @@\n-20220128\n+20220129"}, {"sha": "cb1a0266f2f5024fc814b5613c2b489cbd03a49f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "patch": "@@ -1,3 +1,9 @@\n+2022-01-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/104258\n+\t* exp_ch4.adb (Narrow_Large_Operation): Also copy the entity, if\n+\tany, when rewriting the operator node.\n+\n 2022-01-19  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR ada/103538"}, {"sha": "19fbfa74f5f7a5d8d279641dc18045b5319fb582", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "patch": "@@ -1,3 +1,28 @@\n+2022-01-28  Patrick Palka  <ppalka@redhat.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/92752\n+\t* typeck.cc (build_ptrmemfunc): Cast a nullptr constant to the\n+\tunqualified pointer type not the qualified one.\n+\n+2022-01-28  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/103341\n+\t* decl.cc (cp_finish_decl): Pass the template arguments of a\n+\tvariable template specialization or a templated static data\n+\tmember to do_auto_deduction when the auto is constrained.\n+\n+2022-01-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100198\n+\tPR c++/100030\n+\tPR c++/100282\n+\t* parser.cc (cp_parser_enumerator_definition): Sorry on parameter\n+\tpack in lambda.\n+\t(cp_parser_class_head): And in class attributes.\n+\t* pt.cc (check_for_bare_parameter_packs): Sorry instead of error\n+\tin lambda.\n+\n 2022-01-27  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/104245"}, {"sha": "22c4d8643e779c9b9bea951292e8e34069bd8de0", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "patch": "@@ -1,3 +1,7 @@\n+2022-01-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* decl.cc (d_finish_decl): Do not use leading capital letter.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* d-gimplify.cc: Rename .c names to .cc."}, {"sha": "a755caf9c8edea1d8521719dc50af1dc8e7fd5e2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "patch": "@@ -1,3 +1,30 @@\n+2022-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/103790\n+\t* trans-array.cc (structure_alloc_comps): Prevent descriptor\n+\tstacking for non-array data; do not broadcast caf-tokens.\n+\t* trans-intrinsic.cc (conv_co_collective): Prevent generation\n+\tof unused descriptor.\n+\n+2022-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tRevert:\n+\t2022-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/103790\n+\t* trans-array.cc (structure_alloc_comps): Prevent descriptor\n+\tstacking for non-array data; do not broadcast caf-tokens.\n+\t* trans-intrinsic.cc (conv_co_collective): Prevent generation\n+\tof unused descriptor.\n+\n+2022-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/103790\n+\t* trans-array.cc (structure_alloc_comps): Prevent descriptor\n+\tstacking for non-array data; do not broadcast caf-tokens.\n+\t* trans-intrinsic.cc (conv_co_collective): Prevent generation\n+\tof unused descriptor.\n+\n 2022-01-27  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/104128"}, {"sha": "e87f4c70e4023f6c9b2f62124eac2650270be07c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2d6cfec1c2fe9570b98211be58329d8d7749b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6f2d6cfec1c2fe9570b98211be58329d8d7749b", "patch": "@@ -1,3 +1,91 @@\n+2022-01-28  Navid Rahimi  <navidrahimi@microsoft.com>\n+\n+\t* gcc.dg/tree-ssa/pr103514.c: Testcase for this optimization.\n+\n+2022-01-28  Patrick Palka  <ppalka@redhat.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/92752\n+\t* g++.dg/warn/Wignored-qualifiers2.C: New test.\n+\n+2022-01-28  Zhao Wei Liew  <zhaoweiliew@gmail.com>\n+\n+\tPR tree-optimization/95424\n+\t* gcc.dg/tree-ssa/divide-6.c: New file.\n+\t* gcc.dg/tree-ssa/divide-7.c: New file.\n+\n+2022-01-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/104263\n+\t* gcc.dg/pr104263.c: New test.\n+\n+2022-01-28  Allan McRae  <allan@archlinux.org>\n+\n+\tPR testsuite/70230\n+\t* gcc.dg/asan/use-after-scope-4.c (dg-options): Add\n+\t-fno-stack-protector.\n+\t* gcc.dg/stack-usage-1.c: Likewise\n+\t* gcc.dg/superblock.c: Likewise\n+\t* gcc.target/i386/avx-vzeroupper-17.c: Likewise\n+\t* gcc.target/i386/cleanup-1.c: Likewise\n+\t* gcc.target/i386/cleanup-2.c: Likewise\n+\t* gcc.target/i386/interrupt-redzone-1.c: Likewise\n+\t* gcc.target/i386/interrupt-redzone-2.c: Likewise\n+\t* gcc.target/i386/pr79793-1.c: Likewise\n+\t* gcc.target/i386/pr79793-2.c: Likewise\n+\t* gcc.target/i386/shrink_wrap_1.c: Likewise\n+\t* gcc.target/i386/stack-check-11.c: Likewise\n+\t* gcc.target/i386/stack-check-18.c: Likewise\n+\t* gcc.target/i386/stack-check-19.c: Likewise\n+\t* gcc.target/i386/stackalign/pr88483-1.c: Likewise\n+\t* gcc.target/i386/stackalign/pr88483-2.c: Likewise\n+\t* gcc.target/i386/sw-1.c: Likewise\n+\n+2022-01-28  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/103341\n+\t* g++.dg/cpp2a/concepts-class4.C: New test.\n+\t* g++.dg/cpp2a/concepts-var-templ2.C: New test.\n+\n+2022-01-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104263\n+\t* gcc.dg/tree-ssa/inline-13.c: New testcase.\n+\n+2022-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/103790\n+\t* gfortran.dg/coarray_collectives_18.f90: New test.\n+\n+2022-01-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/generic_comp.adb: New test.\n+\n+2022-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tRevert:\n+\t2022-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/103790\n+\t* gfortran.dg/coarray_collectives_18.f90: New test.\n+\n+2022-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/103790\n+\t* gfortran.dg/coarray_collectives_18.f90: New test.\n+\n+2022-01-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100198\n+\tPR c++/100030\n+\tPR c++/100282\n+\t* g++.dg/cpp0x/lambda/lambda-variadic13.C: Accept the sorry\n+\tas well as the correct error.\n+\t* g++.dg/cpp0x/lambda/lambda-variadic14.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-variadic14a.C: New test.\n+\t* g++.dg/cpp0x/lambda/lambda-variadic15.C: New test.\n+\t* g++.dg/cpp0x/lambda/lambda-variadic16.C: New test.\n+\n 2022-01-27  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/analyzer/data-model-1.c: Add dg-message directives for"}]}