{"sha": "c9f161510200e1eae983102b6815c7eb8b4d18e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlmMTYxNTEwMjAwZTFlYWU5ODMxMDJiNjgxNWM3ZWI4YjRkMThlNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-05-31T11:40:13Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-05-31T11:40:13Z"}, "message": "Fix typo in a comment in cpuid.h (PR target/79155).\n\n2017-05-31  Martin Liska  <mliska@suse.cz>\n\n\tPR target/79155\n\t* config/i386/cpuid.h: Fix typo in a comment in cpuid.h.\n\nFrom-SVN: r248729", "tree": {"sha": "fc0d860b79e5674216abfc9d60131b289b773d00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc0d860b79e5674216abfc9d60131b289b773d00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9f161510200e1eae983102b6815c7eb8b4d18e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f161510200e1eae983102b6815c7eb8b4d18e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9f161510200e1eae983102b6815c7eb8b4d18e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f161510200e1eae983102b6815c7eb8b4d18e4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cbd2d979c5e7095530a6fc290615847d31b549d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbd2d979c5e7095530a6fc290615847d31b549d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cbd2d979c5e7095530a6fc290615847d31b549d"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "4cca99661b3cb7ca38694086403a5adb24b136e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f161510200e1eae983102b6815c7eb8b4d18e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f161510200e1eae983102b6815c7eb8b4d18e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9f161510200e1eae983102b6815c7eb8b4d18e4", "patch": "@@ -1,3 +1,8 @@\n+2017-05-31  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/79155\n+\t* config/i386/cpuid.h: Fix typo in a comment in cpuid.h.\n+\n 2017-05-31  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-vect-loop-manip.c (create_intersect_range_checks_index)"}, {"sha": "b3b0f912c98648262430f4642ca0b4da838a182a", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f161510200e1eae983102b6815c7eb8b4d18e4/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f161510200e1eae983102b6815c7eb8b4d18e4/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=c9f161510200e1eae983102b6815c7eb8b4d18e4", "patch": "@@ -179,7 +179,7 @@\n \n \n /* Return highest supported input value for cpuid instruction.  ext can\n-   be either 0x0 or 0x8000000 to return highest supported value for\n+   be either 0x0 or 0x80000000 to return highest supported value for\n    basic or extended cpuid information.  Function returns 0 if cpuid\n    is not supported or whatever cpuid returns in eax register.  If sig\n    pointer is non-null, then first four bytes of the signature"}]}