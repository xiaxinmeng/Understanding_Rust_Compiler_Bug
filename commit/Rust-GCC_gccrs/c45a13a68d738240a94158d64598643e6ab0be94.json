{"sha": "c45a13a68d738240a94158d64598643e6ab0be94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ1YTEzYTY4ZDczODI0MGE5NDE1OGQ2NDU5ODY0M2U2YWIwYmU5NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-20T10:49:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-20T10:49:30Z"}, "message": "(force_operand): Clarify comment to say what it can return.\n\nFrom-SVN: r2526", "tree": {"sha": "704cf916efffb5fe5b9ef0924d0fde5020651606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/704cf916efffb5fe5b9ef0924d0fde5020651606"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c45a13a68d738240a94158d64598643e6ab0be94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c45a13a68d738240a94158d64598643e6ab0be94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c45a13a68d738240a94158d64598643e6ab0be94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c45a13a68d738240a94158d64598643e6ab0be94/comments", "author": null, "committer": null, "parents": [{"sha": "86a2c12a2b5df3baf3780ea4f7c1ad7099b47933", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a2c12a2b5df3baf3780ea4f7c1ad7099b47933", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86a2c12a2b5df3baf3780ea4f7c1ad7099b47933"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "632c3505b7549ce89f7f257aca83ce29bdd53c49", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c45a13a68d738240a94158d64598643e6ab0be94/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c45a13a68d738240a94158d64598643e6ab0be94/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c45a13a68d738240a94158d64598643e6ab0be94", "patch": "@@ -2911,7 +2911,9 @@ get_inner_reference (exp, pbitsize, pbitpos, poffset, pmode, punsignedp, pvolati\n /* Given an rtx VALUE that may contain additions and multiplications,\n    return an equivalent value that just refers to a register or memory.\n    This is done by generating instructions to perform the arithmetic\n-   and returning a pseudo-register containing the value.  */\n+   and returning a pseudo-register containing the value.\n+\n+   The returned value may be a REG, SUBREG, MEM or constant.  */\n \n rtx\n force_operand (value, target)"}]}