{"sha": "5b9589fe785d4c70f831525b670ec258725140b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI5NTg5ZmU3ODVkNGM3MGY4MzE1MjViNjcwZWMyNTg3MjUxNDBiOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-23T11:22:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-23T11:22:46Z"}, "message": "(output_{pro,epi}log): Use assemble_name to output\nalpha_function_name.\n\nFrom-SVN: r6408", "tree": {"sha": "cccaef159f49f461df59816bc140667f38c2d3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cccaef159f49f461df59816bc140667f38c2d3e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b9589fe785d4c70f831525b670ec258725140b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9589fe785d4c70f831525b670ec258725140b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9589fe785d4c70f831525b670ec258725140b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9589fe785d4c70f831525b670ec258725140b9/comments", "author": null, "committer": null, "parents": [{"sha": "67232b230ede2fcd6c8e6e6ca21e1c9d8e393adf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67232b230ede2fcd6c8e6e6ca21e1c9d8e393adf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67232b230ede2fcd6c8e6e6ca21e1c9d8e393adf"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "df52478b5742c56cedf416d889fbbe3d39171412", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9589fe785d4c70f831525b670ec258725140b9/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9589fe785d4c70f831525b670ec258725140b9/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=5b9589fe785d4c70f831525b670ec258725140b9", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines used for code generation on the DEC Alpha.\n-   Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1994 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@nyu.edu)\n \n This file is part of GNU CC.\n@@ -1228,7 +1228,9 @@ output_prolog (file, size)\n      to the .ent directive, the lex_level, is ignored by the assembler,\n      so we might as well omit it.  */\n      \n-  fprintf (file, \"\\t.ent %s\\n\", alpha_function_name);\n+  fprintf (file, \"\\t.ent \");\n+  assemble_name (file, alpha_function_name);\n+  fprintf (file, \"\\n\");\n   ASM_OUTPUT_LABEL (file, alpha_function_name);\n   inside_function = TRUE;\n \n@@ -1258,7 +1260,8 @@ output_prolog (file, size)\n     fprintf (file, \"\\tldgp $29,0($27)\\n\");\n \n   /* Put a label after the GP load so we can enter the function at it.  */\n-  fprintf (file, \"%s..ng:\\n\", alpha_function_name);\n+  assemble_name (file, alpha_function_name);\n+  fprintf (file, \"..ng:\\n\");\n \n   /* Adjust the stack by the frame size.  If the frame size is > 4096\n      bytes, we need to be sure we probe somewhere in the first and last\n@@ -1304,11 +1307,18 @@ output_prolog (file, size)\n       add_long_const (file, blocks, 31, 5);\n \n       fprintf (file, \"\\tlda $4,4096($30)\\n\");\n-      fprintf (file, \"%s..sc:\\n\", alpha_function_name);\n+\n+      assemble_name (file, alpha_function_name);\n+      fprintf (file, \"..sc:\\n\");\n+\n       fprintf (file, \"\\tldq $6,-8192($4)\\n\");\n       fprintf (file, \"\\tsubq $5,1,$5\\n\");\n       fprintf (file, \"\\tlda $4,-8192($4)\\n\");\n-      fprintf (file, \"\\tbne $5,%s..sc\\n\", alpha_function_name);\n+\n+      fprintf (file, \"\\tbne $5\");\n+      assemble_name (file, alpha_function_name);\n+      fprintf (file, \"%s..sc\\n\");\n+\n       fprintf (file, \"\\tlda $30,-%d($4)\\n\", leftover);\n \n       if (leftover > 4096)\n@@ -1493,7 +1503,9 @@ output_epilog (file, size)\n     }\n \n   /* End the function.  */\n-  fprintf (file, \"\\t.end %s\\n\", alpha_function_name);\n+  fprintf (file, \"\\t.end \");\n+  assemble_name (file, alpha_function_name);\n+  fprintf (file, \"\\n\");\n   inside_function = FALSE;\n \n   /* Show that we know this function if it is called again.  */"}]}