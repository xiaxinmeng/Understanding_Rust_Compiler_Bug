{"sha": "783a3a053465d7f68b3bb5ae5bee631ea6297fa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgzYTNhMDUzNDY1ZDdmNjhiM2JiNWFlNWJlZTYzMWVhNjI5N2ZhNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-01-15T12:48:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-01-15T12:48:13Z"}, "message": "re PR middle-end/55882 (unaligned load/store : incorrect struct offset)\n\n2013-01-15  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/55882\n\t* emit-rtl.c (set_mem_attributes_minus_bitpos): Correctly\n\taccount for bitpos when computing alignment.\n\n\t* gcc.dg/torture/pr55882.c: New testcase.\n\nFrom-SVN: r195194", "tree": {"sha": "1285f6af29343afca7779573367cc057aec760b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1285f6af29343afca7779573367cc057aec760b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/783a3a053465d7f68b3bb5ae5bee631ea6297fa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783a3a053465d7f68b3bb5ae5bee631ea6297fa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/783a3a053465d7f68b3bb5ae5bee631ea6297fa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783a3a053465d7f68b3bb5ae5bee631ea6297fa5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a579e0930abe3ed91977a71284021399339860c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a579e0930abe3ed91977a71284021399339860c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a579e0930abe3ed91977a71284021399339860c"}], "stats": {"total": 112, "additions": 111, "deletions": 1}, "files": [{"sha": "cb85e0bee36f6d86e6bb50c000606a5409a7612b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783a3a053465d7f68b3bb5ae5bee631ea6297fa5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783a3a053465d7f68b3bb5ae5bee631ea6297fa5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=783a3a053465d7f68b3bb5ae5bee631ea6297fa5", "patch": "@@ -1,3 +1,9 @@\n+2013-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/55882\n+\t* emit-rtl.c (set_mem_attributes_minus_bitpos): Correctly\n+\taccount for bitpos when computing alignment.\n+\n 2013-01-15  Vladimir Yakovlev  <vladimir.b.yakovlev@intel.com>\n \n \t* config/i386/i386-c.c (ix86_target_macros_internal): New case."}, {"sha": "2987bc9bb8838940f7fe2ff6ae4f2078af4381d3", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783a3a053465d7f68b3bb5ae5bee631ea6297fa5/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783a3a053465d7f68b3bb5ae5bee631ea6297fa5/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=783a3a053465d7f68b3bb5ae5bee631ea6297fa5", "patch": "@@ -1839,7 +1839,12 @@ set_mem_attributes_minus_bitpos (rtx ref, tree t, int objectp,\n \n       if (!align_computed)\n \t{\n-\t  unsigned int obj_align = get_object_alignment (t);\n+\t  unsigned int obj_align;\n+\t  unsigned HOST_WIDE_INT obj_bitpos;\n+\t  get_object_alignment_1 (t, &obj_align, &obj_bitpos);\n+\t  obj_bitpos = (obj_bitpos - bitpos) & (obj_align - 1);\n+\t  if (obj_bitpos != 0)\n+\t    obj_align = (obj_bitpos & -obj_bitpos);\n \t  attrs.align = MAX (attrs.align, obj_align);\n \t}\n     }"}, {"sha": "c286a87f06261373938e659eb715d9bcc966a6ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783a3a053465d7f68b3bb5ae5bee631ea6297fa5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783a3a053465d7f68b3bb5ae5bee631ea6297fa5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=783a3a053465d7f68b3bb5ae5bee631ea6297fa5", "patch": "@@ -1,3 +1,8 @@\n+2013-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/55882\n+\t* gcc.dg/torture/pr55882.c: New testcase.\n+\n 2013-01-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/55955"}, {"sha": "fd2276e7f531b3fd561dc454545658f9b614d8c7", "filename": "gcc/testsuite/gcc.dg/torture/pr55882.c", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783a3a053465d7f68b3bb5ae5bee631ea6297fa5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55882.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783a3a053465d7f68b3bb5ae5bee631ea6297fa5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55882.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55882.c?ref=783a3a053465d7f68b3bb5ae5bee631ea6297fa5", "patch": "@@ -0,0 +1,94 @@\n+/* { dg-do run } */\n+\n+typedef enum\n+{\n+  PVT_A = 0,\n+  PVT_B = 1,\n+  PVT_CONFIG = 2,\n+  PVT_RESERVED3 = 3,\n+} T_CR_SELECT;\n+\n+typedef enum\n+{\n+  STD_ULOGIC_0 = 0,\n+  STD_ULOGIC_1 = 1,\n+} STD_ULOGIC;\n+\n+typedef struct\n+{\n+  unsigned char rtp : 3;\n+  unsigned char rtn : 3;\n+} C;\n+\n+typedef struct\n+{\n+  unsigned char nd;\n+  unsigned char pd;\n+  unsigned char rtn;\n+  unsigned char rtp;\n+} A;\n+\n+typedef struct\n+{\n+  unsigned short reserved : 14;\n+  unsigned char Z_rx_enable : 2;\n+  A pvt;\n+} B;\n+\n+typedef struct\n+{\n+  B cr_dsclk_q3;\n+  B cr_data_q3;\n+  B cr_addr_q3;\n+  B cr_cmd_q3;\n+  B cr_pres_q3;\n+  C cr_vref_q3[6];\n+  unsigned char pres_disable;\n+  unsigned char pres_drive_high;\n+  unsigned char c_enab_120;\n+  STD_ULOGIC clk_tximp;\n+  STD_ULOGIC dqs_tximp;\n+  STD_ULOGIC cmd_tximp;\n+  STD_ULOGIC data_tximp;\n+  STD_ULOGIC dqs_rxterm;\n+  STD_ULOGIC data_rxterm;\n+  T_CR_SELECT cr_clk_sel;\n+  unsigned char cr_clk : 5;\n+  T_CR_SELECT cr_dsclk_odd_sel;\n+  unsigned char cr_dsclk_odd : 5;\n+  T_CR_SELECT cr_dsclk_even_sel;\n+  unsigned char cr_dsclk_even : 5;\n+  T_CR_SELECT cr_data_sel;\n+  unsigned char cr_data : 5;\n+  T_CR_SELECT cr_vref_sel;\n+  unsigned char cr_vref : 5;\n+  T_CR_SELECT cr_others_sel;\n+  unsigned char cr_others : 5;\n+} CONFIG;\n+\n+typedef struct\n+{\n+  unsigned char enable_monitor;\n+  unsigned short step_out_pointer : 12;\n+  unsigned short hold_out_pointer : 12;\n+  unsigned short enable_wr_dqs : 12;\n+  unsigned short use_alt_rd_dqs : 12;\n+  CONFIG io_buf;\n+} mystruct;\n+\n+unsigned short __attribute__((noinline,noclone))\n+testfunction(unsigned i)\n+{\n+  mystruct dmfe[8];\n+  dmfe[0].use_alt_rd_dqs = 1;\n+  dmfe[i].use_alt_rd_dqs = 0;\n+  return dmfe[0].use_alt_rd_dqs;\n+}\n+\n+extern void abort (void);\n+int main ()\n+{\n+  if (testfunction(0) != 0) \n+    abort ();\n+  return 0;\n+}"}]}