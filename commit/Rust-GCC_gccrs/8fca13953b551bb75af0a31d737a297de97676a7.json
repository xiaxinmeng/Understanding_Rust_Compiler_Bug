{"sha": "8fca13953b551bb75af0a31d737a297de97676a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZjYTEzOTUzYjU1MWJiNzVhZjBhMzFkNzM3YTI5N2RlOTc2NzZhNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-20T00:33:29Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-20T00:33:29Z"}, "message": "runtime: restore \"goroutine in C code\" message\n    \n    In the 1.9 upgrade I took out the word \"goroutine\" from a traceback\n    showing a goroutine running in C code, to let TestCgoNumGoroutine\n    pass.  However, it turns out that some code is actually checking for\n    that string; for example,\n    https://github.com/grpc/grpc-go/blob/master/test/leakcheck/leakcheck.go#L44\n    So keep the message the same, and change the test.\n    \n    Reviewed-on: https://go-review.googlesource.com/64850\n\nFrom-SVN: r252991", "tree": {"sha": "e54ea762823ee955d7cd3ef3ae2b8bd4e97b5cf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e54ea762823ee955d7cd3ef3ae2b8bd4e97b5cf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fca13953b551bb75af0a31d737a297de97676a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fca13953b551bb75af0a31d737a297de97676a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fca13953b551bb75af0a31d737a297de97676a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fca13953b551bb75af0a31d737a297de97676a7/comments", "author": null, "committer": null, "parents": [{"sha": "9bd25fc4e2119dd08257f7326c7115c4371f98df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bd25fc4e2119dd08257f7326c7115c4371f98df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bd25fc4e2119dd08257f7326c7115c4371f98df"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "f6b5361a004dacdda2e49ba2e8f78e7ca64d5d5d", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fca13953b551bb75af0a31d737a297de97676a7/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fca13953b551bb75af0a31d737a297de97676a7/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=8fca13953b551bb75af0a31d737a297de97676a7", "patch": "@@ -1,4 +1,4 @@\n-be69546afcac182cc93c569bc96665f0ef72d66a\n+5fb74cd7192123a9ea06dcae0d5d8d0b3538db8f\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "68f1738dd6b303cc9fca2af3cc1a24ba6b6fd5d9", "filename": "libgo/go/runtime/testdata/testprogcgo/numgoroutine.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fca13953b551bb75af0a31d737a297de97676a7/libgo%2Fgo%2Fruntime%2Ftestdata%2Ftestprogcgo%2Fnumgoroutine.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fca13953b551bb75af0a31d737a297de97676a7/libgo%2Fgo%2Fruntime%2Ftestdata%2Ftestprogcgo%2Fnumgoroutine.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Ftestdata%2Ftestprogcgo%2Fnumgoroutine.go?ref=8fca13953b551bb75af0a31d737a297de97676a7", "patch": "@@ -75,6 +75,7 @@ func checkNumGoroutine(label string, want int) (string, bool) {\n \tsbuf := make([]byte, 32<<10)\n \tsbuf = sbuf[:runtime.Stack(sbuf, true)]\n \tn = strings.Count(string(sbuf), \"goroutine \")\n+\tn -= strings.Count(string(sbuf), \"goroutine in C code\")\n \tif n != want {\n \t\tfmt.Printf(\"%s Stack: want %d; got %d:\\n%s\\n\", label, want, n, string(sbuf))\n \t\treturn \"\", false"}, {"sha": "37c569887b0c6aba704460c33be670d3de054085", "filename": "libgo/go/runtime/traceback_gccgo.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fca13953b551bb75af0a31d737a297de97676a7/libgo%2Fgo%2Fruntime%2Ftraceback_gccgo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fca13953b551bb75af0a31d737a297de97676a7/libgo%2Fgo%2Fruntime%2Ftraceback_gccgo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Ftraceback_gccgo.go?ref=8fca13953b551bb75af0a31d737a297de97676a7", "patch": "@@ -216,7 +216,7 @@ func tracebackothers(me *g) {\n \t\t\tprint(\"\\tgoroutine running on other thread; stack unavailable\\n\")\n \t\t\tprintcreatedby(gp)\n \t\t} else if readgstatus(gp)&^_Gscan == _Gsyscall {\n-\t\t\tprint(\"\\tin C code; stack unavailable\\n\")\n+\t\t\tprint(\"\\tgoroutine in C code; stack unavailable\\n\")\n \t\t\tprintcreatedby(gp)\n \t\t} else {\n \t\t\tgp.traceback = &tb"}]}