{"sha": "a2eafc7685e37c0077d9a4c4598b76bab9bec5d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJlYWZjNzY4NWUzN2MwMDc3ZDlhNGM0NTk4Yjc2YmFiOWJlYzVkMg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-06-17T14:49:38Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-06-17T14:49:38Z"}, "message": "aclocal.m4 (gcc_AC_CHECK_TOOL): Do not overwrite the passed variable.\n\n2005-06-17  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* aclocal.m4 (gcc_AC_CHECK_TOOL): Do not overwrite the\n\tpassed variable.\n\nFrom-SVN: r101127", "tree": {"sha": "f4ad2b15cbbf7fddc3ed03ff8cf6c098da647fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4ad2b15cbbf7fddc3ed03ff8cf6c098da647fd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "79748d710383e205e3c045b55ceda1b3e15ba945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79748d710383e205e3c045b55ceda1b3e15ba945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79748d710383e205e3c045b55ceda1b3e15ba945"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "4451476e364a451a6363ea1c966edfd174ed2817", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2eafc7685e37c0077d9a4c4598b76bab9bec5d2", "patch": "@@ -1,3 +1,9 @@\n+2005-06-17  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* aclocal.m4 (gcc_AC_CHECK_TOOL): Do not overwrite the\n+\tpassed variable.\n+\t* configure.ac: Regenerate.\n+\n 2005-06-17  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-optimize.c (execute_ipa_pass_list): New."}, {"sha": "59e5845fa132cf4a3d3eb48ec216e52177d646f5", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=a2eafc7685e37c0077d9a4c4598b76bab9bec5d2", "patch": "@@ -710,7 +710,9 @@ AC_REQUIRE([gcc_AC_BUILD_EXEEXT])\n dnl shut up useless \"checking for...\" messages\n dnl we can still read them in config.log\n exec AS_MESSAGE_FD([])>/dev/null\n-AC_PATH_PROGS($1, $2, , $gcc_cv_tool_dirs)\n+if test \"x[$]$1\" = x; then\n+\tAC_PATH_PROGS($1, $2, , $gcc_cv_tool_dirs)\n+fi\n if test \"x[$]$1\" = x; then\n \t# If the loop above did not find a tool, then use whatever\n \t# one we can find in the users's path.  We are looking for a"}, {"sha": "f557c2de9218748d9bdd2ccd0d175fb5a5f6837f", "filename": "gcc/configure", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=a2eafc7685e37c0077d9a4c4598b76bab9bec5d2", "patch": "@@ -12895,7 +12895,8 @@ fi\n \n \n exec 6>/dev/null\n-for ac_prog in as\n+if test \"x$gcc_cv_as\" = x; then\n+\tfor ac_prog in as\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -12939,6 +12940,7 @@ fi\n   test -n \"$gcc_cv_as\" && break\n done\n \n+fi\n if test \"x$gcc_cv_as\" = x; then\n \t# If the loop above did not find a tool, then use whatever\n \t# one we can find in the users's path.  We are looking for a\n@@ -13065,7 +13067,8 @@ fi\n \n \n exec 6>/dev/null\n-for ac_prog in ld\n+if test \"x$gcc_cv_ld\" = x; then\n+\tfor ac_prog in ld\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -13109,6 +13112,7 @@ fi\n   test -n \"$gcc_cv_ld\" && break\n done\n \n+fi\n if test \"x$gcc_cv_ld\" = x; then\n \t# If the loop above did not find a tool, then use whatever\n \t# one we can find in the users's path.  We are looking for a\n@@ -13201,7 +13205,8 @@ fi\n \n \n exec 6>/dev/null\n-for ac_prog in nm\n+if test \"x$gcc_cv_nm\" = x; then\n+\tfor ac_prog in nm\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -13245,6 +13250,7 @@ fi\n   test -n \"$gcc_cv_nm\" && break\n done\n \n+fi\n if test \"x$gcc_cv_nm\" = x; then\n \t# If the loop above did not find a tool, then use whatever\n \t# one we can find in the users's path.  We are looking for a"}]}