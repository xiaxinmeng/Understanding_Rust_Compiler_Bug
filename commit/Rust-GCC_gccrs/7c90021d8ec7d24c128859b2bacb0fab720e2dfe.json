{"sha": "7c90021d8ec7d24c128859b2bacb0fab720e2dfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M5MDAyMWQ4ZWM3ZDI0YzEyODg1OWIyYmFjYjBmYWI3MjBlMmRmZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-29T15:05:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-29T15:05:22Z"}, "message": "re PR middle-end/39937 (Revision 146831 failed SPEC CPU 2006)\n\n2009-04-29  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/39937\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do not\n\tloose type conversions.\n\t(forward_propagate_addr_expr): Fix tuplification bug.  Remove\n\tstmts only if there are no uses of its definition.\n\n\t* gcc.c-torture/compile/pr39937.c: New testcase.\n\nFrom-SVN: r146973", "tree": {"sha": "66eaac3f5b2e2a3107730102d667f8465c06628b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66eaac3f5b2e2a3107730102d667f8465c06628b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c90021d8ec7d24c128859b2bacb0fab720e2dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c90021d8ec7d24c128859b2bacb0fab720e2dfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c90021d8ec7d24c128859b2bacb0fab720e2dfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c90021d8ec7d24c128859b2bacb0fab720e2dfe/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97a988bcb2bfbca69c5396aae923bf0001cf6802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a988bcb2bfbca69c5396aae923bf0001cf6802", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97a988bcb2bfbca69c5396aae923bf0001cf6802"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "3c18dfc2f59825d650062f39e78b3267da2cf3a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c90021d8ec7d24c128859b2bacb0fab720e2dfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c90021d8ec7d24c128859b2bacb0fab720e2dfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c90021d8ec7d24c128859b2bacb0fab720e2dfe", "patch": "@@ -1,3 +1,11 @@\n+2009-04-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/39937\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do not\n+\tloose type conversions.\n+\t(forward_propagate_addr_expr): Fix tuplification bug.  Remove\n+\tstmts only if there are no uses of its definition.\n+\n 2009-04-29  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/bfin.h (splitting_loops): Declare."}, {"sha": "beb916f9e025eba9c7a248ba029ab2271278be63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c90021d8ec7d24c128859b2bacb0fab720e2dfe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c90021d8ec7d24c128859b2bacb0fab720e2dfe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c90021d8ec7d24c128859b2bacb0fab720e2dfe", "patch": "@@ -1,3 +1,8 @@\n+2009-04-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/39937\n+\t* gcc.c-torture/compile/pr39937.c: New testcase.\n+\n 2009-04-29  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39941"}, {"sha": "d0231053258bf4355249bcefb96627d9c1aa02fd", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39937.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c90021d8ec7d24c128859b2bacb0fab720e2dfe/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39937.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c90021d8ec7d24c128859b2bacb0fab720e2dfe/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39937.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39937.c?ref=7c90021d8ec7d24c128859b2bacb0fab720e2dfe", "patch": "@@ -0,0 +1,12 @@\n+int foo (__const char *__restrict __s);\n+static void \n+read_anisou(char line[])\n+{\n+  foo (line+1);\n+}\n+void\n+read_pdbfile(void)\n+{\n+  char line[4096];\n+  read_anisou (line);\n+}"}, {"sha": "65b02af27f62ff9f04641fa9618c41662d0336bb", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c90021d8ec7d24c128859b2bacb0fab720e2dfe/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c90021d8ec7d24c128859b2bacb0fab720e2dfe/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=7c90021d8ec7d24c128859b2bacb0fab720e2dfe", "patch": "@@ -862,12 +862,21 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n      of the elements in X into &x[C1 + C2/element size].  */\n   if (TREE_CODE (rhs2) == INTEGER_CST)\n     {\n-      tree new_rhs = maybe_fold_stmt_addition (gimple_expr_type (use_stmt),\n+      tree new_rhs = maybe_fold_stmt_addition (TREE_TYPE (def_rhs),\n \t\t\t\t\t       def_rhs, rhs2);\n       if (new_rhs)\n \t{\n-\t  gimple_assign_set_rhs_from_tree (use_stmt_gsi,\n-\t\t\t\t\t   unshare_expr (new_rhs));\n+\t  tree type = TREE_TYPE (gimple_assign_lhs (use_stmt));\n+\t  new_rhs = unshare_expr (new_rhs);\n+\t  if (!useless_type_conversion_p (type, TREE_TYPE (new_rhs)))\n+\t    {\n+\t      if (!is_gimple_min_invariant (new_rhs))\n+\t\tnew_rhs = force_gimple_operand_gsi (use_stmt_gsi, new_rhs,\n+\t\t\t\t\t\t    true, NULL_TREE,\n+\t\t\t\t\t\t    true, GSI_SAME_STMT);\n+\t      new_rhs = fold_convert (type, new_rhs);\n+\t    }\n+\t  gimple_assign_set_rhs_from_tree (use_stmt_gsi, new_rhs);\n \t  use_stmt = gsi_stmt (*use_stmt_gsi);\n \t  update_stmt (use_stmt);\n \t  tidy_after_forward_propagate_addr (use_stmt);\n@@ -950,9 +959,8 @@ forward_propagate_addr_expr (tree name, tree rhs)\n       use_rhs = gimple_assign_rhs1 (use_stmt);\n       if (result\n \t  && TREE_CODE (gimple_assign_lhs (use_stmt)) == SSA_NAME\n-\t  && (TREE_CODE (use_rhs) == SSA_NAME\n-\t      || (CONVERT_EXPR_P (use_rhs)\n-\t\t  && TREE_CODE (TREE_OPERAND (use_rhs, 0)) == SSA_NAME)))\n+\t  && TREE_CODE (use_rhs) == SSA_NAME\n+\t  && has_zero_uses (gimple_assign_lhs (use_stmt)))\n \t{\n \t  gimple_stmt_iterator gsi = gsi_for_stmt (use_stmt);\n \t  release_defs (use_stmt);"}]}