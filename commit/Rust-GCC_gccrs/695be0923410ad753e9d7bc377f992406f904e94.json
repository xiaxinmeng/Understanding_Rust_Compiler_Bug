{"sha": "695be0923410ad753e9d7bc377f992406f904e94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk1YmUwOTIzNDEwYWQ3NTNlOWQ3YmMzNzdmOTkyNDA2ZjkwNGU5NA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2018-12-06T23:18:19Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2018-12-06T23:18:19Z"}, "message": "avoid null ptr deref in cselib_record_sets\n\nJeff Law tells me h8300-elf fails gcc.c-torture/compile/pr49029.c\nwith -O2 -g -mint32 -mh.  This patch fixes it.\n\nThe problem is that strict low part handling in cselib_record_sets\nassumes src_elt is not NULL.  That src_elt is taken from a strict low\npart set, but it won't always have a src_elt to begin with.  In this\ncase, it's because src is a volatile MEM; we don't record values for\nthose.\n\nAlthough we could fix the problem by testing for a NULL src_elt before\ncreating the zero extends corresponding to strict low part sets of\nformerly const0_rtx REGs, there's no point in recording the additional\nset that we won't be able to use anyway.\n\nWe could still record that the whole register has a zero-extend of\nthe value stored in the narrower-mode strict low part of the register,\nbut is that of any use?  I guess not, but if we find otherwise, we can\nchange that later.\n\n\nfor  gcc/ChangeLog\n\n\t* cselib.c (cselib_record_sets): Skip strict low part sets\n\twith NULL src_elt.\n\nFrom-SVN: r266873", "tree": {"sha": "adaf137bbb4c1eb8f14668db5114718686bee04c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adaf137bbb4c1eb8f14668db5114718686bee04c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/695be0923410ad753e9d7bc377f992406f904e94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695be0923410ad753e9d7bc377f992406f904e94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/695be0923410ad753e9d7bc377f992406f904e94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695be0923410ad753e9d7bc377f992406f904e94/comments", "author": null, "committer": null, "parents": [{"sha": "4cbb7085f078ad25f7f11855d91c143e1189e89b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cbb7085f078ad25f7f11855d91c143e1189e89b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cbb7085f078ad25f7f11855d91c143e1189e89b"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "2dc7f43f8d3538fa4bcee81240c4d4b441014c05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695be0923410ad753e9d7bc377f992406f904e94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695be0923410ad753e9d7bc377f992406f904e94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=695be0923410ad753e9d7bc377f992406f904e94", "patch": "@@ -1,3 +1,8 @@\n+2018-12-06  Alexandre Oliva <aoliva@redhat.com>\n+\n+\t* cselib.c (cselib_record_sets): Skip strict low part sets\n+\twith NULL src_elt.\n+\n 2018-12-06  Paul A. Clarke  <pc@us.ibm.com>\n \n \tPR target/88316"}, {"sha": "4a68439455fde0651bad43f1a6efdbe099c5ddf2", "filename": "gcc/cselib.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695be0923410ad753e9d7bc377f992406f904e94/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695be0923410ad753e9d7bc377f992406f904e94/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=695be0923410ad753e9d7bc377f992406f904e94", "patch": "@@ -2616,6 +2616,7 @@ cselib_record_sets (rtx_insn *insn)\n \t preserves the upper bits that di:SI=zero_extend(flags:CCNO<=0).  */\n       scalar_int_mode mode;\n       if (dest != orig\n+\t  && sets[i].src_elt\n \t  && cselib_record_sets_hook\n \t  && REG_P (dest)\n \t  && HARD_REGISTER_P (dest)"}]}