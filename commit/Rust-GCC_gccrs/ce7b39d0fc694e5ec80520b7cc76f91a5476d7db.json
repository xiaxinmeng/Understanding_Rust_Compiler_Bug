{"sha": "ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U3YjM5ZDBmYzY5NGU1ZWM4MDUyMGI3Y2M3NmY5MWE1NDc2ZDdkYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-18T18:56:30Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-18T18:57:30Z"}, "message": "libstdc++: Fix new tests that fail for ILP32 targets\n\n\t* testsuite/20_util/integer_comparisons/equal.cc: Fix invalid\n\tassumption that long is wider than int.\n\t* testsuite/20_util/integer_comparisons/greater_equal.cc: Likewise.\n\t* testsuite/20_util/integer_comparisons/less.cc: Likewise.\n\t* testsuite/20_util/integer_comparisons/less_equal.cc: Likewise.\n\t* testsuite/20_util/integer_comparisons/not_equal.cc: Likewise.", "tree": {"sha": "0c745d7fe4c0e92194453eaa81c8cd7e192bd261", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c745d7fe4c0e92194453eaa81c8cd7e192bd261"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fe1910509e32d611b3a7b8503502103bc53b5e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe1910509e32d611b3a7b8503502103bc53b5e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe1910509e32d611b3a7b8503502103bc53b5e4"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "601d26480fa6e0bfdaf3b271853c0b2a55d71857", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "patch": "@@ -1,5 +1,12 @@\n 2020-02-18  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/20_util/integer_comparisons/equal.cc: Fix invalid\n+\tassumption that long is wider than int.\n+\t* testsuite/20_util/integer_comparisons/greater_equal.cc: Likewise.\n+\t* testsuite/20_util/integer_comparisons/less.cc: Likewise.\n+\t* testsuite/20_util/integer_comparisons/less_equal.cc: Likewise.\n+\t* testsuite/20_util/integer_comparisons/not_equal.cc: Likewise.\n+\n \tP1976R2 Fixed-size span construction from dynamic range\n \t* include/std/span (__cpp_lib_span): Update value.\n \t(span(It, size_type), span(It, End)): Make conditionally explicit. Add"}, {"sha": "10ba39432be390100fbb522d459fb6eafdd1ee1f", "filename": "libstdc++-v3/testsuite/20_util/integer_comparisons/equal.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fequal.cc?ref=ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "patch": "@@ -56,7 +56,7 @@ test03()\n   VERIFY( !std::cmp_equal(ss, u) );\n   VERIFY( !std::cmp_equal(u, ss) );\n \n-  unsigned long ul = (unsigned long) -1;\n+  unsigned long long ul = (unsigned long long) -1;\n   VERIFY( !std::cmp_equal(s, ul) );\n   VERIFY( !std::cmp_equal(ul, s) );\n   VERIFY( !std::cmp_equal(ss, ul) );"}, {"sha": "f80c62f12748e9e0e02293e1018ff630694729d0", "filename": "libstdc++-v3/testsuite/20_util/integer_comparisons/greater_equal.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fgreater_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fgreater_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fgreater_equal.cc?ref=ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "patch": "@@ -62,7 +62,7 @@ test03()\n   VERIFY( std::cmp_greater_equal(u, ss) );\n   VERIFY( std::cmp_greater_equal(u, -2U) );\n \n-  unsigned long ul = (unsigned long) -1;\n+  unsigned long long ul = (unsigned long long) -1;\n   VERIFY( !std::cmp_greater_equal(s, ul) );\n   VERIFY( std::cmp_greater_equal(ul, s) );\n   VERIFY( !std::cmp_greater_equal(ss, ul) );"}, {"sha": "b70f491710343a2c7238b3991badff1c7f37731e", "filename": "libstdc++-v3/testsuite/20_util/integer_comparisons/less.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fless.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fless.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fless.cc?ref=ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "patch": "@@ -60,7 +60,7 @@ test03()\n   VERIFY( std::cmp_less(ss, u) );\n   VERIFY( !std::cmp_less(u, ss) );\n \n-  unsigned long ul = (unsigned long) -1;\n+  unsigned long long ul = (unsigned long long) -1;\n   VERIFY( std::cmp_less(s, ul) );\n   VERIFY( !std::cmp_less(ul, s) );\n   VERIFY( std::cmp_less(ss, ul) );"}, {"sha": "b3a3ac8d2fa18b7ba22d690a2fe3c98eba4f6985", "filename": "libstdc++-v3/testsuite/20_util/integer_comparisons/less_equal.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fless_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fless_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fless_equal.cc?ref=ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "patch": "@@ -62,7 +62,7 @@ test03()\n   VERIFY( !std::cmp_less_equal(u, ss) );\n   VERIFY( std::cmp_less_equal(-2U, u) );\n \n-  unsigned long ul = (unsigned long) -1;\n+  unsigned long long ul = (unsigned long long) -1;\n   VERIFY( std::cmp_less_equal(s, ul) );\n   VERIFY( !std::cmp_less_equal(ul, s) );\n   VERIFY( std::cmp_less_equal(ss, ul) );"}, {"sha": "97f6fe6cfc30c7916dc3b33c4af1180ae29f6f94", "filename": "libstdc++-v3/testsuite/20_util/integer_comparisons/not_equal.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7b39d0fc694e5ec80520b7cc76f91a5476d7db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Finteger_comparisons%2Fnot_equal.cc?ref=ce7b39d0fc694e5ec80520b7cc76f91a5476d7db", "patch": "@@ -57,7 +57,7 @@ test03()\n   VERIFY( std::cmp_not_equal(ss, u) );\n   VERIFY( std::cmp_not_equal(u, ss) );\n \n-  unsigned long ul = (unsigned long) -1;\n+  unsigned long long ul = (unsigned long long) -1;\n   VERIFY( std::cmp_not_equal(s, ul) );\n   VERIFY( std::cmp_not_equal(ul, s) );\n   VERIFY( std::cmp_not_equal(ss, ul) );"}]}