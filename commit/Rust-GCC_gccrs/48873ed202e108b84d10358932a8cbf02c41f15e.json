{"sha": "48873ed202e108b84d10358932a8cbf02c41f15e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg4NzNlZDIwMmUxMDhiODRkMTAzNTg5MzJhOGNiZjAyYzQxZjE1ZQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-07-21T21:25:47Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-07-21T21:25:47Z"}, "message": "c-common.h (num_in_fnames): Declare.\n\n\t* c-common.h (num_in_fnames): Declare.\n\t(c_static_assembler_name): Move from here...\n\t* c-tree.h (c_static_assembler_name): ... to here.\n\t* c-opts.c: Don't include langhooks-def.h.\n\t(c_static_assembler_name): Move to c-decl.c.\n\t(num_in_fnames): Make externally visible.\n\t* c-decl.c: Include langhooks-def.h.\n\t(c_static_assembler_name): Move from c-opts.c.\n\t* Makefile.in (c-decl.o): Add $(LANGHOOKS_DEF_H).\n\t(c-opts.o): Remove $(LANGHOOKS_DEF_H).\n\nFrom-SVN: r69650", "tree": {"sha": "b8c3a0974d2bb92c973491e3808baf5224a7730d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8c3a0974d2bb92c973491e3808baf5224a7730d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48873ed202e108b84d10358932a8cbf02c41f15e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48873ed202e108b84d10358932a8cbf02c41f15e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48873ed202e108b84d10358932a8cbf02c41f15e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48873ed202e108b84d10358932a8cbf02c41f15e/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd039fc9e6cc2bf9214cb0ff87a07d0346829a59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd039fc9e6cc2bf9214cb0ff87a07d0346829a59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd039fc9e6cc2bf9214cb0ff87a07d0346829a59"}], "stats": {"total": 60, "additions": 38, "deletions": 22}, "files": [{"sha": "c36fb6f8920550a76187f1a40b34b4c7d143c90c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48873ed202e108b84d10358932a8cbf02c41f15e", "patch": "@@ -5,6 +5,17 @@\n \n 2003-07-21  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* c-common.h (num_in_fnames): Declare.\n+\t(c_static_assembler_name): Move from here...\n+\t* c-tree.h (c_static_assembler_name): ... to here.\n+\t* c-opts.c: Don't include langhooks-def.h.\n+\t(c_static_assembler_name): Move to c-decl.c.\n+\t(num_in_fnames): Make externally visible.\n+\t* c-decl.c: Include langhooks-def.h.\n+\t(c_static_assembler_name): Move from c-opts.c.\n+\t* Makefile.in (c-decl.o): Add $(LANGHOOKS_DEF_H).\n+\t(c-opts.o): Remove $(LANGHOOKS_DEF_H).\n+\n \t* c-pragma.c (maybe_apply_pragma_weak): Don't get DECL_ASSEMBLER_NAME\n \twhen it's not needed.\n "}, {"sha": "384c0b78cb8fb9f28778dfdfd0d9d453ea8776d2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=48873ed202e108b84d10358932a8cbf02c41f15e", "patch": "@@ -1268,7 +1268,8 @@ c-incpath.o: c-incpath.c c-incpath.h $(CONFIG_H) $(SYSTEM_H) $(CPPLIB_H) \\\n c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(RTL_H) $(C_TREE_H) $(GGC_H) $(TARGET_H) flags.h function.h output.h \\\n     $(EXPR_H) debug.h toplev.h intl.h $(TM_P_H) tree-inline.h $(TIMEVAR_H) \\\n-    c-pragma.h gt-c-decl.h cgraph.h $(HASHTAB_H) libfuncs.h except.h\n+    c-pragma.h gt-c-decl.h cgraph.h $(HASHTAB_H) libfuncs.h except.h \\\n+    $(LANGHOOKS_DEF_H)\n c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n     $(TARGET_H) flags.h intl.h output.h $(EXPR_H) $(RTL_H) toplev.h $(TM_P_H)\n c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n@@ -1323,8 +1324,7 @@ c-pretty-print.o : c-pretty-print.c c-pretty-print.h pretty-print.h \\\n \n c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n         c-pragma.h flags.h toplev.h langhooks.h tree-inline.h diagnostic.h \\\n-\tintl.h debug.h $(C_COMMON_H) opts.h options.h $(PARAMS_H) \\\n-\t$(LANGHOOKS_DEF_H)\n+\tintl.h debug.h $(C_COMMON_H) opts.h options.h $(PARAMS_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n "}, {"sha": "680774a8dcc16249e028f243b7774efaec434a2e", "filename": "gcc/c-common.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=48873ed202e108b84d10358932a8cbf02c41f15e", "patch": "@@ -856,6 +856,11 @@ extern int max_tinst_depth;\n \n extern int skip_evaluation;\n \n+/* The count of input filenames.  Only really valid for comparisons\n+   against 1.  */\n+\n+extern unsigned num_in_fnames;\n+\n /* C types are partitioned into three subsets: object, function, and\n    incomplete types.  */\n #define C_TYPE_OBJECT_P(type) \\\n@@ -905,7 +910,6 @@ extern void check_function_format (int *, tree, tree);\n extern void set_Wformat (int);\n extern tree handle_format_attribute (tree *, tree, tree, int, bool *);\n extern tree handle_format_arg_attribute (tree *, tree, tree, int, bool *);\n-extern void c_static_assembler_name (tree);\n extern void c_common_insert_default_attributes (tree);\n extern int c_common_handle_option (size_t code, const char *arg, int value);\n extern void c_common_handle_filename (const char *filename);"}, {"sha": "92a8d8586ff62848fc1d03ba42467516fef00067", "filename": "gcc/c-decl.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=48873ed202e108b84d10358932a8cbf02c41f15e", "patch": "@@ -52,6 +52,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"hashtab.h\"\n #include \"libfuncs.h\"\n #include \"except.h\"\n+#include \"langhooks-def.h\"\n \n /* In grokdeclarator, distinguish syntactic contexts of declarators.  */\n enum decl_context\n@@ -6771,6 +6772,22 @@ make_pointer_declarator (tree type_quals_attrs, tree target)\n   return build1 (INDIRECT_REF, quals, itarget);\n }\n \n+/* A wrapper around lhd_set_decl_assembler_name that gives static\n+   variables their C names if they are at the top level and only one\n+   translation unit is being compiled, for backwards compatibility\n+   with certain bizzare assembler hacks (like crtstuff.c).  */\n+\n+void\n+c_static_assembler_name (tree decl)\n+{\n+  if (num_in_fnames == 1\n+      && TREE_STATIC (decl) && !TREE_PUBLIC (decl) && DECL_CONTEXT (decl)\n+      && TREE_CODE (DECL_CONTEXT (decl)) == TRANSLATION_UNIT_DECL)\n+    SET_DECL_ASSEMBLER_NAME (decl, DECL_NAME (decl));\n+  else\n+    lhd_set_decl_assembler_name (decl);\n+}\n+\n /* Hash and equality functions for link_hash_table: key off\n    DECL_ASSEMBLER_NAME.  */\n "}, {"sha": "34e1d060a4617c001a2aac0c25860c59d5664b60", "filename": "gcc/c-opts.c", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=48873ed202e108b84d10358932a8cbf02c41f15e", "patch": "@@ -37,7 +37,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"debug.h\"\t\t/* For debug_hooks.  */\n #include \"opts.h\"\n #include \"options.h\"\n-#include \"langhooks-def.h\"\n \n #ifndef DOLLARS_IN_IDENTIFIERS\n # define DOLLARS_IN_IDENTIFIERS true\n@@ -54,7 +53,7 @@ static cpp_options *cpp_opts;\n \n /* Input filename.  */\n static const char **in_fnames;\n-static unsigned num_in_fnames;\n+unsigned num_in_fnames;\n static const char *this_input_filename;\n \n /* Filename and stream for preprocessed output.  */\n@@ -1250,22 +1249,6 @@ c_common_finish (void)\n     fatal_error (\"when writing output to %s: %m\", out_fname);\n }\n \n-/* A wrapper around lhd_set_decl_assembler_name that gives static\n-   variables their C names if they are at the top level and only one\n-   translation unit is being compiled, for backwards compatibility\n-   with certain bizzare assembler hacks (like crtstuff.c).  */\n-\n-void\n-c_static_assembler_name (tree decl)\n-{\n-  if (num_in_fnames == 1\n-      && TREE_STATIC (decl) && !TREE_PUBLIC (decl) && DECL_CONTEXT (decl)\n-      && TREE_CODE (DECL_CONTEXT (decl)) == TRANSLATION_UNIT_DECL)\n-    SET_DECL_ASSEMBLER_NAME (decl, DECL_NAME (decl));\n-  else\n-    lhd_set_decl_assembler_name (decl);\n-}\n-\n /* Either of two environment variables can specify output of\n    dependencies.  Their value is either \"OUTPUT_FILE\" or \"OUTPUT_FILE\n    DEPS_TARGET\", where OUTPUT_FILE is the file to write deps info to"}, {"sha": "0a36609093af40946371d059ddc32d2d3a1ec93a", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48873ed202e108b84d10358932a8cbf02c41f15e/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=48873ed202e108b84d10358932a8cbf02c41f15e", "patch": "@@ -230,6 +230,7 @@ extern tree xref_tag (enum tree_code, tree);\n extern tree c_begin_compound_stmt (void);\n extern void c_expand_deferred_function (tree);\n extern void c_expand_decl_stmt (tree);\n+extern void c_static_assembler_name (tree);\n extern tree make_pointer_declarator (tree, tree);\n extern void merge_translation_unit_decls (void);\n "}]}