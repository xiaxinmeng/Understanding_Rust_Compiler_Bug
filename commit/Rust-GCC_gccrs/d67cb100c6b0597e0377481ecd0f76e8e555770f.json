{"sha": "d67cb100c6b0597e0377481ecd0f76e8e555770f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY3Y2IxMDBjNmIwNTk3ZTAzNzc0ODFlY2QwZjc2ZThlNTU1NzcwZg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-04-17T09:27:08Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-04-17T09:27:08Z"}, "message": "Set PROP_gimple_lva for functions without IFN_VA_ARG\n\n2015-04-17  Tom de Vries  <tom@codesourcery.com>\n\n\t* gimplify.c (gimplify_function_tree): Tentatively set PROP_gimple_lva\n\tin cfun->curr_properties.\n\t(gimplify_va_arg_expr): Clear PROP_gimple_lva in cfun->curr_properties\n\tif we generate an IFN_VA_ARG.\n\t* tree-inline.c (expand_call_inline): Reset PROP_gimple_lva in dest\n\tfunction if PROP_gimple_lva is not set in src function.\n\nFrom-SVN: r222174", "tree": {"sha": "da8ccc329015608df03029dffb874f96544fad71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da8ccc329015608df03029dffb874f96544fad71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d67cb100c6b0597e0377481ecd0f76e8e555770f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67cb100c6b0597e0377481ecd0f76e8e555770f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d67cb100c6b0597e0377481ecd0f76e8e555770f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67cb100c6b0597e0377481ecd0f76e8e555770f/comments", "author": null, "committer": null, "parents": [{"sha": "f8e89441bc5518f450b6511c59c17c837859d109", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e89441bc5518f450b6511c59c17c837859d109", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8e89441bc5518f450b6511c59c17c837859d109"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "c0e804380e87c5e920131f57d707aa72eddd99f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67cb100c6b0597e0377481ecd0f76e8e555770f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67cb100c6b0597e0377481ecd0f76e8e555770f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d67cb100c6b0597e0377481ecd0f76e8e555770f", "patch": "@@ -1,3 +1,12 @@\n+2015-04-17  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* gimplify.c (gimplify_function_tree): Tentatively set PROP_gimple_lva\n+\tin cfun->curr_properties.\n+\t(gimplify_va_arg_expr): Clear PROP_gimple_lva in cfun->curr_properties\n+\tif we generate an IFN_VA_ARG.\n+\t* tree-inline.c (expand_call_inline): Reset PROP_gimple_lva in dest\n+\tfunction if PROP_gimple_lva is not set in src function.\n+\n 2015-04-17  Tom de Vries  <tom@codesourcery.com>\n \t    Michael Matz  <matz@suse.de>\n "}, {"sha": "0394543ef7baecb1aedae9a6c2e10f512e2d43ef", "filename": "gcc/gimplify.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67cb100c6b0597e0377481ecd0f76e8e555770f/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67cb100c6b0597e0377481ecd0f76e8e555770f/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=d67cb100c6b0597e0377481ecd0f76e8e555770f", "patch": "@@ -9201,6 +9201,10 @@ gimplify_function_tree (tree fndecl)\n   else\n     push_struct_function (fndecl);\n \n+  /* Tentatively set PROP_gimple_lva here, and reset it in gimplify_va_arg_expr\n+     if necessary.  */\n+  cfun->curr_properties |= PROP_gimple_lva;\n+\n   for (parm = DECL_ARGUMENTS (fndecl); parm ; parm = DECL_CHAIN (parm))\n     {\n       /* Preliminarily mark non-addressed complex variables as eligible\n@@ -9295,7 +9299,7 @@ gimplify_function_tree (tree fndecl)\n     }\n \n   DECL_SAVED_TREE (fndecl) = NULL_TREE;\n-  cfun->curr_properties = PROP_gimple_any;\n+  cfun->curr_properties |= PROP_gimple_any;\n \n   pop_cfun ();\n }\n@@ -9414,6 +9418,10 @@ gimplify_va_arg_expr (tree *expr_p, gimple_seq *pre_p,\n   tag = build_int_cst (build_pointer_type (type), 0);\n   *expr_p = build_call_expr_internal_loc (loc, IFN_VA_ARG, type, 2, ap, tag);\n \n+  /* Clear the tentatively set PROP_gimple_lva, to indicate that IFN_VA_ARG\n+     needs to be expanded.  */\n+  cfun->curr_properties &= ~PROP_gimple_lva;\n+\n   return GS_OK;\n }\n "}, {"sha": "42ddb9f47ed8df99a0ee82226f6549533b9d9b0b", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67cb100c6b0597e0377481ecd0f76e8e555770f/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67cb100c6b0597e0377481ecd0f76e8e555770f/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=d67cb100c6b0597e0377481ecd0f76e8e555770f", "patch": "@@ -4526,6 +4526,14 @@ expand_call_inline (basic_block bb, gimple stmt, copy_body_data *id)\n   id->src_cfun = DECL_STRUCT_FUNCTION (fn);\n   id->call_stmt = stmt;\n \n+  /* If the the src function contains an IFN_VA_ARG, then so will the dst\n+     function after inlining.  */\n+  if ((id->src_cfun->curr_properties & PROP_gimple_lva) == 0)\n+    {\n+      struct function *dst_cfun = DECL_STRUCT_FUNCTION (id->dst_fn);\n+      dst_cfun->curr_properties &= ~PROP_gimple_lva;\n+    }\n+\n   gcc_assert (!id->src_cfun->after_inlining);\n \n   id->entry_bb = bb;"}]}