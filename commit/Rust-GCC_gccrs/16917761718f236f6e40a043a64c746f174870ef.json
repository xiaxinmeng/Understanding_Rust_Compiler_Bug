{"sha": "16917761718f236f6e40a043a64c746f174870ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY5MTc3NjE3MThmMjM2ZjZlNDBhMDQzYTY0Yzc0NmYxNzQ4NzBlZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-01-28T14:50:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-01-28T14:50:57Z"}, "message": "tree-inline.c (remap_gimple_stmt): Do not assing a BLOCK to a stmt that didn't have one.\n\n2013-01-28  Richard Biener  <rguenther@suse.de>\n\n\t* tree-inline.c (remap_gimple_stmt): Do not assing a BLOCK\n\tto a stmt that didn't have one.\n\t(copy_phis_for_bb): Likewise for PHI arguments.\n\t(copy_debug_stmt): Likewise for debug stmts.\n\nFrom-SVN: r195509", "tree": {"sha": "04d0a6593f669b1b42cb3715c6d627ae34587715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04d0a6593f669b1b42cb3715c6d627ae34587715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16917761718f236f6e40a043a64c746f174870ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16917761718f236f6e40a043a64c746f174870ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16917761718f236f6e40a043a64c746f174870ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16917761718f236f6e40a043a64c746f174870ef/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9fc04974250dfa6e2155fc38dcbca39e162b5c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9fc04974250dfa6e2155fc38dcbca39e162b5c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9fc04974250dfa6e2155fc38dcbca39e162b5c7"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "3bc0bd16d37f9627035d8a660f214ca77da52e03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16917761718f236f6e40a043a64c746f174870ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16917761718f236f6e40a043a64c746f174870ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16917761718f236f6e40a043a64c746f174870ef", "patch": "@@ -1,3 +1,10 @@\n+2013-01-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-inline.c (remap_gimple_stmt): Do not assing a BLOCK\n+\tto a stmt that didn't have one.\n+\t(copy_phis_for_bb): Likewise for PHI arguments.\n+\t(copy_debug_stmt): Likewise for debug stmts.\n+\n 2013-01-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56034"}, {"sha": "2a1b6923996625b1bd157e9e19b9e34bfb1d9dcb", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16917761718f236f6e40a043a64c746f174870ef/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16917761718f236f6e40a043a64c746f174870ef/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=16917761718f236f6e40a043a64c746f174870ef", "patch": "@@ -1198,7 +1198,6 @@ remap_gimple_stmt (gimple stmt, copy_body_data *id)\n {\n   gimple copy = NULL;\n   struct walk_stmt_info wi;\n-  tree new_block;\n   bool skip_first = false;\n \n   /* Begin by recognizing trees that we'll completely rewrite for the\n@@ -1458,19 +1457,15 @@ remap_gimple_stmt (gimple stmt, copy_body_data *id)\n     }\n \n   /* If STMT has a block defined, map it to the newly constructed\n-     block.  When inlining we want statements without a block to\n-     appear in the block of the function call.  */\n-  new_block = id->block;\n+     block.  */\n   if (gimple_block (copy))\n     {\n       tree *n;\n       n = (tree *) pointer_map_contains (id->decl_map, gimple_block (copy));\n       gcc_assert (n);\n-      new_block = *n;\n+      gimple_set_block (copy, *n);\n     }\n \n-  gimple_set_block (copy, new_block);\n-\n   if (gimple_debug_bind_p (copy) || gimple_debug_source_bind_p (copy))\n     return copy;\n \n@@ -1987,7 +1982,6 @@ copy_phis_for_bb (basic_block bb, copy_body_data *id)\n \t      edge old_edge = find_edge ((basic_block) new_edge->src->aux, bb);\n \t      tree arg;\n \t      tree new_arg;\n-\t      tree block = id->block;\n \t      edge_iterator ei2;\n \t      location_t locus;\n \n@@ -2015,19 +2009,18 @@ copy_phis_for_bb (basic_block bb, copy_body_data *id)\n \t\t  inserted = true;\n \t\t}\n \t      locus = gimple_phi_arg_location_from_edge (phi, old_edge);\n-\t      block = id->block;\n \t      if (LOCATION_BLOCK (locus))\n \t\t{\n \t\t  tree *n;\n \t\t  n = (tree *) pointer_map_contains (id->decl_map,\n \t\t\tLOCATION_BLOCK (locus));\n \t\t  gcc_assert (n);\n-\t\t  block = *n;\n+\t\t  locus = COMBINE_LOCATION_DATA (line_table, locus, *n);\n \t\t}\n+\t      else\n+\t\tlocus = LOCATION_LOCUS (locus);\n \n-\t      add_phi_arg (new_phi, new_arg, new_edge, block ?\n-\t\t  COMBINE_LOCATION_DATA (line_table, locus, block) :\n-\t\t  LOCATION_LOCUS (locus));\n+\t      add_phi_arg (new_phi, new_arg, new_edge, locus);\n \t    }\n \t}\n     }\n@@ -2324,14 +2317,11 @@ copy_debug_stmt (gimple stmt, copy_body_data *id)\n   tree t, *n;\n   struct walk_stmt_info wi;\n \n-  t = id->block;\n   if (gimple_block (stmt))\n     {\n       n = (tree *) pointer_map_contains (id->decl_map, gimple_block (stmt));\n-      if (n)\n-\tt = *n;\n+      gimple_set_block (stmt, n ? *n : id->block);\n     }\n-  gimple_set_block (stmt, t);\n \n   /* Remap all the operands in COPY.  */\n   memset (&wi, 0, sizeof (wi));"}]}