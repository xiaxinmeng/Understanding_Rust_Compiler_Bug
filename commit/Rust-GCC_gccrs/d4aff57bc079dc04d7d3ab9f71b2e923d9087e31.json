{"sha": "d4aff57bc079dc04d7d3ab9f71b2e923d9087e31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRhZmY1N2JjMDc5ZGMwNGQ3ZDNhYjlmNzFiMmU5MjNkOTA4N2UzMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-03-31T10:42:55Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-03-31T10:42:55Z"}, "message": "Do not call todo_after for a discarded function\n\n\t* passes.c (execute_one_pass): Do not call\n\ttodo_after for a discarded function.\n\nFrom-SVN: r234613", "tree": {"sha": "10fa2adb0f596c42da4d531fe8c27f33c83b87b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10fa2adb0f596c42da4d531fe8c27f33c83b87b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4aff57bc079dc04d7d3ab9f71b2e923d9087e31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4aff57bc079dc04d7d3ab9f71b2e923d9087e31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4aff57bc079dc04d7d3ab9f71b2e923d9087e31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4aff57bc079dc04d7d3ab9f71b2e923d9087e31/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "515558b8ff520dc07f1014b29e524b8994f73c9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515558b8ff520dc07f1014b29e524b8994f73c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/515558b8ff520dc07f1014b29e524b8994f73c9b"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "9edee6b17b7543b014f72e80f50fe26b7808712f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4aff57bc079dc04d7d3ab9f71b2e923d9087e31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4aff57bc079dc04d7d3ab9f71b2e923d9087e31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4aff57bc079dc04d7d3ab9f71b2e923d9087e31", "patch": "@@ -1,3 +1,8 @@\n+2016-03-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* passes.c (execute_one_pass): Do not call\n+\ttodo_after for a discarded function.\n+\n 2016-03-31  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-ssa-loop-ivopts.c (struct comp_cost): New scrach field."}, {"sha": "e8961811124585fa394fdb0d8e12aac7d57e0825", "filename": "gcc/passes.c", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4aff57bc079dc04d7d3ab9f71b2e923d9087e31/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4aff57bc079dc04d7d3ab9f71b2e923d9087e31/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=d4aff57bc079dc04d7d3ab9f71b2e923d9087e31", "patch": "@@ -2334,6 +2334,33 @@ execute_one_pass (opt_pass *pass)\n \n   /* Do it!  */\n   todo_after = pass->execute (cfun);\n+\n+  if (todo_after & TODO_discard_function)\n+    {\n+      pass_fini_dump_file (pass);\n+\n+      gcc_assert (cfun);\n+      /* As cgraph_node::release_body expects release dominators info,\n+\t we have to release it.  */\n+      if (dom_info_available_p (CDI_DOMINATORS))\n+       free_dominance_info (CDI_DOMINATORS);\n+\n+      if (dom_info_available_p (CDI_POST_DOMINATORS))\n+       free_dominance_info (CDI_POST_DOMINATORS);\n+\n+      tree fn = cfun->decl;\n+      pop_cfun ();\n+      gcc_assert (!cfun);\n+      cgraph_node::get (fn)->release_body ();\n+\n+      current_pass = NULL;\n+      redirect_edge_var_map_empty ();\n+\n+      ggc_collect ();\n+\n+      return true;\n+    }\n+\n   do_per_function (clear_last_verified, NULL);\n \n   /* Stop timevar.  */\n@@ -2373,23 +2400,6 @@ execute_one_pass (opt_pass *pass)\n   current_pass = NULL;\n   redirect_edge_var_map_empty ();\n \n-  if (todo_after & TODO_discard_function)\n-    {\n-      gcc_assert (cfun);\n-      /* As cgraph_node::release_body expects release dominators info,\n-\t we have to release it.  */\n-      if (dom_info_available_p (CDI_DOMINATORS))\n-\tfree_dominance_info (CDI_DOMINATORS);\n-\n-      if (dom_info_available_p (CDI_POST_DOMINATORS))\n-\tfree_dominance_info (CDI_POST_DOMINATORS);\n-\n-      tree fn = cfun->decl;\n-      pop_cfun ();\n-      gcc_assert (!cfun);\n-      cgraph_node::get (fn)->release_body ();\n-    }\n-\n   /* Signal this is a suitable GC collection point.  */\n   if (!((todo_after | pass->todo_flags_finish) & TODO_do_not_ggc_collect))\n     ggc_collect ();"}]}