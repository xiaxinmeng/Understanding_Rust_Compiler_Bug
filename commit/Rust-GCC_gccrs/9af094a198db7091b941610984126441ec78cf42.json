{"sha": "9af094a198db7091b941610984126441ec78cf42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFmMDk0YTE5OGRiNzA5MWI5NDE2MTA5ODQxMjY0NDFlYzc4Y2Y0Mg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2009-04-29T10:54:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-29T10:54:12Z"}, "message": "sinfo.ads, sinfo.adb: New attribute Next_Implicit_With...\n\n2009-04-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sinfo.ads, sinfo.adb: New attribute Next_Implicit_With, to chain\n\twith_clauses generated for the same unit through rtsfind, and that\n\tappear in the context of different units.\n\n\t* rtsfind.adb: New attribute First_Implicit_With, component of the\n\tUnit_Record that stores information about a unit loaded through rtsfind.\n\nFrom-SVN: r146951", "tree": {"sha": "9865229b6c47e230373705d71e4b30c3e7b21b37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9865229b6c47e230373705d71e4b30c3e7b21b37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9af094a198db7091b941610984126441ec78cf42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9af094a198db7091b941610984126441ec78cf42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9af094a198db7091b941610984126441ec78cf42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9af094a198db7091b941610984126441ec78cf42/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1923a3f9d89d4869783647a43468073ab27e629a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1923a3f9d89d4869783647a43468073ab27e629a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1923a3f9d89d4869783647a43468073ab27e629a"}], "stats": {"total": 147, "additions": 92, "deletions": 55}, "files": [{"sha": "cfa9a88786eb2e04d3b7d755b0d49684f1d50795", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9af094a198db7091b941610984126441ec78cf42/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9af094a198db7091b941610984126441ec78cf42/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9af094a198db7091b941610984126441ec78cf42", "patch": "@@ -1,3 +1,12 @@\n+2009-04-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb: New attribute Next_Implicit_With, to chain\n+\twith_clauses generated for the same unit through rtsfind, and that\n+\tappear in the context of different units.\n+\n+\t* rtsfind.adb: New attribute First_Implicit_With, component of the\n+\tUnit_Record that stores information about a unit loaded through rtsfind.\n+\n 2009-04-29  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch3.adb (Stream_Operation_OK): Return True for limited interfaces"}, {"sha": "d05aef0116286302ecb14cf292e303fc2f7b18ce", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 48, "deletions": 55, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9af094a198db7091b941610984126441ec78cf42/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9af094a198db7091b941610984126441ec78cf42/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=9af094a198db7091b941610984126441ec78cf42", "patch": "@@ -79,16 +79,18 @@ package body Rtsfind is\n    --  the latter case it is critical to make a call to Set_RTU_Loaded to\n    --  ensure that the entry in this table reflects the load.\n \n-   --  Withed is True if an implicit with_clause has been added from some unit\n-   --  other than the main unit to this unit. Withed_By_Main is the same,\n-   --  except from the main unit.\n+   --  A unit retrieved through rtsfind  may end up in the context of several\n+   --  other units, in addition to the main unit. These additional with_clauses\n+   --  are needed to generate a proper traversal order for Inspector. To\n+   --  minimize somewhat the redundancy created by numerous calls to rtsfind\n+   --  from different units, we keep track of the list of implicit with_clauses\n+   --  already created for the current loaded unit.\n \n    type RT_Unit_Table_Record is record\n-      Entity         : Entity_Id;\n-      Uname          : Unit_Name_Type;\n-      Unum           : Unit_Number_Type;\n-      Withed         : Boolean;\n-      Withed_By_Main : Boolean;\n+      Entity               : Entity_Id;\n+      Uname                : Unit_Name_Type;\n+      First_Implicit_With  : Node_Id;\n+      Unum                 : Unit_Number_Type;\n    end record;\n \n    RT_Unit_Table : array (RTU_Id) of RT_Unit_Table_Record;\n@@ -118,12 +120,12 @@ package body Rtsfind is\n    --  When a unit is implicitly loaded as a result of a call to RTE, it is\n    --  necessary to create one or two implicit with_clauses. We add such\n    --  with_clauses to the extended main unit if needed, and also to whatever\n-   --  unit first needs them, which is not necessarily the main unit. The\n-   --  former ensures that the object is correctly loaded by the binder. The\n-   --  latter is necessary for SofCheck Inspector.\n+   --  unit needs them, which is not necessarily the main unit. The former\n+   --  ensures that the object is correctly loaded by the binder. The latter\n+   --  is necessary for SofCheck Inspector.\n \n-   --  The flags Withed and Withed_By_Main in the unit table record are used to\n-   --  avoid duplicates.\n+   --  The field First_Implicit_With in the unit table record are used to\n+   --  avoid creating duplicate with_clauses.\n \n    -----------------------\n    -- Local Subprograms --\n@@ -668,9 +670,8 @@ package body Rtsfind is\n       --  Otherwise we need to load the unit, First build unit name\n       --  from the enumeration literal name in type RTU_Id.\n \n-      U.Uname          := Get_Unit_Name (U_Id);\n-      U.Withed         := False;\n-      U.Withed_By_Main := False;\n+      U.Uname                := Get_Unit_Name (U_Id);\n+      U. First_Implicit_With := Empty;\n \n       --  Now do the load call, note that setting Error_Node to Empty is\n       --  a signal to Load_Unit that we will regard a failure to find the\n@@ -798,9 +799,6 @@ package body Rtsfind is\n    --------------------\n \n    procedure Maybe_Add_With (U : in out RT_Unit_Table_Record) is\n-      Is_Main : constant Boolean :=\n-                  In_Extended_Main_Code_Unit (Cunit_Entity (Current_Sem_Unit));\n-\n    begin\n       --  We do not need to generate a with_clause for a call issued from\n       --  RTE_Component_Available. However, for Inspector, we need these\n@@ -818,42 +816,37 @@ package body Rtsfind is\n          return;\n       end if;\n \n-      --  If the current unit is the main one, add the with_clause unless it's\n-      --  already been done.\n+      --  Add the with_clause, if not already in the context of the\n+      --  current compilation unit.\n \n-      if Is_Main then\n-         if U.Withed_By_Main then\n-            return;\n-         else\n-            U.Withed_By_Main := True;\n-         end if;\n+      declare\n+         LibUnit : constant Node_Id := Unit (Cunit (U.Unum));\n+         Clause  : Node_Id;\n+         Withn   : Node_Id;\n \n-      --  If the current unit is not the main one, add the with_clause unless\n-      --  it's already been done for some non-main unit.\n+      begin\n+         Clause := U.First_Implicit_With;\n+         while Present (Clause) loop\n+            if Parent (Clause) =  Cunit (Current_Sem_Unit) then\n+               return;\n+            end if;\n \n-      else\n-         if U.Withed then\n-            return;\n-         else\n-            U.Withed := True;\n-         end if;\n-      end if;\n+            Clause := Next_Implicit_With (Clause);\n+         end loop;\n \n-      --  Here if we've decided to add the with_clause\n+         Withn :=\n+            Make_With_Clause (Standard_Location,\n+              Name =>\n+                Make_Unit_Name\n+                  (U, Defining_Unit_Name (Specification (LibUnit))));\n \n-      declare\n-         LibUnit : constant Node_Id := Unit (Cunit (U.Unum));\n-         Withn   : constant Node_Id :=\n-                     Make_With_Clause (Standard_Location,\n-                       Name =>\n-                         Make_Unit_Name\n-                           (U, Defining_Unit_Name (Specification (LibUnit))));\n+         Set_Library_Unit        (Withn, Cunit (U.Unum));\n+         Set_Corresponding_Spec  (Withn, U.Entity);\n+         Set_First_Name          (Withn, True);\n+         Set_Implicit_With       (Withn, True);\n+         Set_Next_Implicit_With  (Withn, U.First_Implicit_With);\n \n-      begin\n-         Set_Library_Unit       (Withn, Cunit (U.Unum));\n-         Set_Corresponding_Spec (Withn, U.Entity);\n-         Set_First_Name         (Withn, True);\n-         Set_Implicit_With      (Withn, True);\n+         U.First_Implicit_With := Withn;\n \n          Mark_Rewrite_Insertion (Withn);\n          Append (Withn, Context_Items (Cunit (Current_Sem_Unit)));\n@@ -1342,14 +1335,14 @@ package body Rtsfind is\n                --  The RT_Unit_Table entry that may need updating\n \n             begin\n-               --  If entry is not set, set it now\n+               --  If entry is not set, set it now, and indicate that it\n+               --  was loaded through an explicit context clause..\n \n                if No (U.Entity) then\n-                  U := (Entity         => E,\n-                        Uname          => Get_Unit_Name (U_Id),\n-                        Unum           => Unum,\n-                        Withed         => False,\n-                        Withed_By_Main => False);\n+                  U := (Entity               => E,\n+                        Uname                => Get_Unit_Name (U_Id),\n+                        Unum                 => Unum,\n+                        First_Implicit_With  => Empty);\n                end if;\n \n                return;"}, {"sha": "30ba9802a372a1f4b58c68227459ea3436cb288f", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9af094a198db7091b941610984126441ec78cf42/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9af094a198db7091b941610984126441ec78cf42/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=9af094a198db7091b941610984126441ec78cf42", "patch": "@@ -1979,6 +1979,14 @@ package body Sinfo is\n       return Node2 (N);\n    end Next_Entity;\n \n+   function Next_Implicit_With\n+     (N : Node_Id) return Node_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_With_Clause);\n+      return Node3 (N);\n+   end Next_Implicit_With;\n+\n    function Next_Named_Actual\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -4759,6 +4767,14 @@ package body Sinfo is\n       Set_Node2 (N, Val); -- semantic field, no parent set\n    end Set_Next_Entity;\n \n+   procedure Set_Next_Implicit_With\n+      (N : Node_Id; Val : Node_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_With_Clause);\n+      Set_Node3 (N, Val); -- semantic field, no parent set\n+   end Set_Next_Implicit_With;\n+\n    procedure Set_Next_Named_Actual\n       (N : Node_Id; Val : Node_Id) is\n    begin"}, {"sha": "7325b76ea53ffb8daa4e7903fef8e92021483fd9", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9af094a198db7091b941610984126441ec78cf42/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9af094a198db7091b941610984126441ec78cf42/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=9af094a198db7091b941610984126441ec78cf42", "patch": "@@ -1364,6 +1364,16 @@ package Sinfo is\n    --    scope are chained, and this field is used as the forward pointer for\n    --    this list. See Einfo for further details.\n \n+   --  Next_Implicit_With (Node3-Sem)\n+   --    Present in N_With_Clause. Part of a chain of with_clauses generated\n+   --    in rtsfind to indicate implicit dependencies on predefined units. Used\n+   --    to prevent multiple with_clauses for the same unit in a given context.\n+   --    A postorder traversal of the tree whose nodes are units and whose\n+   --    links are with_clauses defines the order in which Inspector must\n+   --    examine a compiled unit and its full context. This ordering ensures\n+   --    that any subprogram call is examined after the subprogram declartion\n+   --    has been seen.\n+\n    --  Next_Named_Actual (Node4-Sem)\n    --    Present in parameter association node. Set during semantic analysis to\n    --    point to the next named parameter, where parameters are ordered by\n@@ -5450,6 +5460,7 @@ package Sinfo is\n       --  N_With_Clause\n       --  Sloc points to first token of library unit name\n       --  Name (Node2)\n+      --  Next_Implicit_With (Node3-Sem)\n       --  Library_Unit (Node4-Sem)\n       --  Corresponding_Spec (Node5-Sem)\n       --  First_Name (Flag5) (set to True if first name or only one name)\n@@ -8062,6 +8073,9 @@ package Sinfo is\n    function Next_Entity\n      (N : Node_Id) return Node_Id;    -- Node2\n \n+   function Next_Implicit_With\n+     (N : Node_Id) return Node_Id;    -- Node3\n+\n    function Next_Named_Actual\n      (N : Node_Id) return Node_Id;    -- Node4\n \n@@ -8947,6 +8961,9 @@ package Sinfo is\n    procedure Set_Next_Entity\n      (N : Node_Id; Val : Node_Id);            -- Node2\n \n+   procedure Set_Next_Implicit_With\n+     (N : Node_Id; Val : Node_Id);            -- Node3\n+\n    procedure Set_Next_Named_Actual\n      (N : Node_Id; Val : Node_Id);            -- Node4\n \n@@ -11064,6 +11081,7 @@ package Sinfo is\n    pragma Inline (Name);\n    pragma Inline (Names);\n    pragma Inline (Next_Entity);\n+   pragma Inline (Next_Implicit_With);\n    pragma Inline (Next_Named_Actual);\n    pragma Inline (Next_Pragma);\n    pragma Inline (Next_Rep_Item);\n@@ -11356,6 +11374,7 @@ package Sinfo is\n    pragma Inline (Set_Name);\n    pragma Inline (Set_Names);\n    pragma Inline (Set_Next_Entity);\n+   pragma Inline (Set_Next_Implicit_With);\n    pragma Inline (Set_Next_Named_Actual);\n    pragma Inline (Set_Next_Pragma);\n    pragma Inline (Set_Next_Rep_Item);"}]}