{"sha": "e14568432a5df8754c845e247935fcbabd97612e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE0NTY4NDMyYTVkZjg3NTRjODQ1ZTI0NzkzNWZjYmFiZDk3NjEyZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-11-22T08:10:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-22T08:10:41Z"}, "message": "re PR libfortran/37839 (st_parameter_dt has unwanted padding, is out of sync with compiler)\n\n\tPR libfortran/37839\n\t* trans-io.c (gfc_build_io_library_fndecls): Decrease pad size back\n\tto 16 pointers plus 32 integers.  Don't use max integer kind\n\talignment, only gfc_intio_kind's alignment.\n\t(gfc_trans_inquire): Only set flags2 if mask2 is non-zero.\n\t* ioparm.def: Fix order, bitmasks and types of inquire round, sign\n\tand pending fields.  Move u in dt before id.\n\t* io.c (gfc_free_inquire): Free decimal and size exprs.\n\t(match_inquire_element): Match size instead of matching blank twice.\n\t(gfc_resolve_inquire): Resolve size.\n\n\t* gfortran.dg/f2003_inquire_1.f03: New test.\n\t* gfortran.dg/f2003_io_1.f03: Remove xfail.\n\t* gfortran.dg/f2003_io_4.f03: Likewise.\n\t* gfortran.dg/f2003_io_5.f03: Likewise.\n\t* gfortran.dg/f2003_io_6.f03: Likewise.\n\t* gfortran.dg/f2003_io_7.f03: Likewise.\n\n\t* io/io.h (IOPARM_INQUIRE_HAS_ROUND, IOPARM_INQUIRE_HAS_SIGN,\n\tIOPARM_INQUIRE_HAS_PENDING): Adjust values.\n\t(st_parameter_inquire): Reorder and fix types of round, sign and\n\tpending fields.\n\t(st_parameter_43, st_parameter_44): Removed.\n\t(st_parameter_dt): Put back struct definition directly to u.p\n\tdeclaration.  Change type of u.p.size_used from gfc_offset to\n\tGFC_IO_INT.  Decrease back size of u.pad to 16 pointers and\n\t32 ints.  Put id, pos, asynchronous, blank, decimal, delim,\n\tpad, round and sign fields after the union.\n\t* io/inquire.c (inquire_via_unit, inquire_via_filename): Only read\n\tflags2 if it is defined.\n\t* io/transfer.c (read_sf, read_block_form, write_block): Cast\n\tadditions to size_used to GFC_IO_INT instead of gfc_offset.\n\t(data_transfer_init): Clear whole u.p struct.  Adjust\n\tfor moving id, pos, asynchronous, blank, decimal, delim, pad,\n\tround and sign fields from u.p directly into st_parameter_dt.\n\t(finalize_transfer): Don't cast size_used to GFC_IO_INT.\n\t* io/file_pos.c (st_endfile): Clear whole u.p struct.\n\nFrom-SVN: r142111", "tree": {"sha": "fd3f39fc5493d036706217573269adc0cd79d272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd3f39fc5493d036706217573269adc0cd79d272"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e14568432a5df8754c845e247935fcbabd97612e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14568432a5df8754c845e247935fcbabd97612e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e14568432a5df8754c845e247935fcbabd97612e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14568432a5df8754c845e247935fcbabd97612e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "220904438f2970c4187280d3088e3c4e1017f069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220904438f2970c4187280d3088e3c4e1017f069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220904438f2970c4187280d3088e3c4e1017f069"}], "stats": {"total": 395, "additions": 187, "deletions": 208}, "files": [{"sha": "f1ac3ed55882500708f3076347ca57a8e02955fa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -1,3 +1,16 @@\n+2008-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libfortran/37839\n+\t* trans-io.c (gfc_build_io_library_fndecls): Decrease pad size back\n+\tto 16 pointers plus 32 integers.  Don't use max integer kind\n+\talignment, only gfc_intio_kind's alignment.\n+\t(gfc_trans_inquire): Only set flags2 if mask2 is non-zero.\n+\t* ioparm.def: Fix order, bitmasks and types of inquire round, sign\n+\tand pending fields.  Move u in dt before id.\n+\t* io.c (gfc_free_inquire): Free decimal and size exprs.\n+\t(match_inquire_element): Match size instead of matching blank twice.\n+\t(gfc_resolve_inquire): Resolve size.\n+\n 2008-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/29215"}, {"sha": "85b712f5977e5886c6f9eb75f3e32aad561cbe4d", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -3540,9 +3540,11 @@ gfc_free_inquire (gfc_inquire *inquire)\n   gfc_free_expr (inquire->convert);\n   gfc_free_expr (inquire->strm_pos);\n   gfc_free_expr (inquire->asynchronous);\n+  gfc_free_expr (inquire->decimal);\n   gfc_free_expr (inquire->pending);\n   gfc_free_expr (inquire->id);\n   gfc_free_expr (inquire->sign);\n+  gfc_free_expr (inquire->size);\n   gfc_free_expr (inquire->round);\n   gfc_free (inquire);\n }\n@@ -3584,7 +3586,7 @@ match_inquire_element (gfc_inquire *inquire)\n   RETM m = match_vtag (&tag_s_async, &inquire->asynchronous);\n   RETM m = match_vtag (&tag_s_delim, &inquire->delim);\n   RETM m = match_vtag (&tag_s_decimal, &inquire->decimal);\n-  RETM m = match_vtag (&tag_s_blank, &inquire->blank);\n+  RETM m = match_vtag (&tag_size, &inquire->size);\n   RETM m = match_vtag (&tag_s_encoding, &inquire->encoding);\n   RETM m = match_vtag (&tag_s_round, &inquire->round);\n   RETM m = match_vtag (&tag_s_sign, &inquire->sign);\n@@ -3761,6 +3763,7 @@ gfc_resolve_inquire (gfc_inquire *inquire)\n   RESOLVE_TAG (&tag_s_sign, inquire->sign);\n   RESOLVE_TAG (&tag_s_round, inquire->round);\n   RESOLVE_TAG (&tag_pending, inquire->pending);\n+  RESOLVE_TAG (&tag_size, inquire->size);\n   RESOLVE_TAG (&tag_id, inquire->id);\n \n   if (gfc_reference_st_label (inquire->err, ST_LABEL_TARGET) == FAILURE)"}, {"sha": "eba719f0a9192d04fc45bb9ee8eebc869976791f", "filename": "gcc/fortran/ioparm.def", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ffortran%2Fioparm.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ffortran%2Fioparm.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fioparm.def?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -63,9 +63,9 @@ IOPARM (inquire, flags2,\t1 << 31, int4)\n IOPARM (inquire, asynchronous,\t1 << 0,  char1)\n IOPARM (inquire, decimal,\t1 << 1,  char2)\n IOPARM (inquire, encoding,\t1 << 2,  char1)\n-IOPARM (inquire, pending,\t1 << 3,  pint4)\n-IOPARM (inquire, round,\t        1 << 4,  char1)\n-IOPARM (inquire, sign,\t\t1 << 5,  char2)\n+IOPARM (inquire, round,\t\t1 << 3,  char2)\n+IOPARM (inquire, sign,\t\t1 << 4,  char1)\n+IOPARM (inquire, pending,\t1 << 5,  pint4)\n IOPARM (inquire, size,\t\t1 << 6,  pint4)\n IOPARM (inquire, id,\t\t1 << 7,  pint4)\n IOPARM (wait,    common,\t0,\t common)\n@@ -83,6 +83,7 @@ IOPARM (dt,      format,\t1 << 12, char1)\n IOPARM (dt,      advance,\t1 << 13, char2)\n IOPARM (dt,      internal_unit,\t1 << 14, char1)\n IOPARM (dt,      namelist_name,\t1 << 15, char2)\n+IOPARM (dt,      u,\t\t0,\t pad)\n IOPARM (dt,      id,\t\t1 << 16, pint4)\n IOPARM (dt,      pos,\t\t1 << 17, intio)\n IOPARM (dt,      asynchronous, \t1 << 18, char1)\n@@ -92,4 +93,3 @@ IOPARM (dt,      delim,\t\t1 << 21, char2)\n IOPARM (dt,      pad,\t\t1 << 22, char1)\n IOPARM (dt,      round,\t\t1 << 23, char2)\n IOPARM (dt,      sign,\t\t1 << 24, char1)\n-IOPARM (dt,      u,\t\t0,\t pad)"}, {"sha": "b5749ec89aca168f402c36986f127b4dfa0946ab", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -291,17 +291,17 @@ gfc_build_io_library_fndecls (void)\n \t\t\t    = build_pointer_type (gfc_intio_type_node);\n   types[IOPARM_type_parray] = pchar_type_node;\n   types[IOPARM_type_pchar] = pchar_type_node;\n-  pad_size = 32 * TREE_INT_CST_LOW (TYPE_SIZE_UNIT (pchar_type_node));\n+  pad_size = 16 * TREE_INT_CST_LOW (TYPE_SIZE_UNIT (pchar_type_node));\n   pad_size += 32 * TREE_INT_CST_LOW (TYPE_SIZE_UNIT (integer_type_node));\n-  pad_idx = build_index_type (build_int_cst (NULL_TREE, pad_size));\n+  pad_idx = build_index_type (build_int_cst (NULL_TREE, pad_size - 1));\n   types[IOPARM_type_pad] = build_array_type (char_type_node, pad_idx);\n \n   /* pad actually contains pointers and integers so it needs to have an\n      alignment that is at least as large as the needed alignment for those\n      types.  See the st_parameter_dt structure in libgfortran/io/io.h for\n      what really goes into this space.  */\n   TYPE_ALIGN (types[IOPARM_type_pad]) = MAX (TYPE_ALIGN (pchar_type_node),\n-\t\t     TYPE_ALIGN (gfc_get_int_type (gfc_max_integer_kind)));\n+\t\t     TYPE_ALIGN (gfc_get_int_type (gfc_intio_kind)));\n \n   for (ptype = IOPARM_ptype_common; ptype < IOPARM_ptype_num; ptype++)\n     gfc_build_st_parameter (ptype, types);\n@@ -1315,10 +1315,8 @@ gfc_trans_inquire (gfc_code * code)\n     mask2 |= set_parameter_ref (&block, &post_block,var, IOPARM_inquire_id,\n \t\t\t\tp->id);\n \n-  set_parameter_const (&block, var, IOPARM_inquire_flags2, mask2);\n-\n   if (mask2)\n-    mask |= IOPARM_inquire_flags2;\n+    mask |= set_parameter_const (&block, var, IOPARM_inquire_flags2, mask2);\n \n   set_parameter_const (&block, var, IOPARM_common_flags, mask);\n "}, {"sha": "ef7faccef17278f690f1764657c6c56ed7280a20", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -1,3 +1,13 @@\n+2008-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libfortran/37839\n+\t* gfortran.dg/f2003_inquire_1.f03: New test.\n+\t* gfortran.dg/f2003_io_1.f03: Remove xfail.\n+\t* gfortran.dg/f2003_io_4.f03: Likewise.\n+\t* gfortran.dg/f2003_io_5.f03: Likewise.\n+\t* gfortran.dg/f2003_io_6.f03: Likewise.\n+\t* gfortran.dg/f2003_io_7.f03: Likewise.\n+\n 2008-11-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/38200"}, {"sha": "5f3a9612a3bbd7c9dce52ac0168e181ce599a4b0", "filename": "gcc/testsuite/gfortran.dg/f2003_inquire_1.f03", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_inquire_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_inquire_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_inquire_1.f03?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do run { target fd_truncate } }\n+! { dg-options \"-std=gnu\" }\n+character(25) :: sround, ssign, sasynchronous, sdecimal, sencoding\n+integer :: vsize, vid\n+logical :: vpending\n+\n+open(10, file='mydata', asynchronous=\"yes\", blank=\"null\", &\n+& decimal=\"comma\", encoding=\"utf-8\", sign=\"plus\")\n+\n+inquire(unit=10, round=sround, sign=ssign, size=vsize, id=vid, &\n+& pending=vpending, asynchronous=sasynchronous, decimal=sdecimal, &\n+& encoding=sencoding)\n+\n+if (ssign.ne.\"PLUS\") call abort\n+if (sasynchronous.ne.\"YES\") call abort\n+if (sdecimal.ne.\"COMMA\") call abort\n+if (sencoding.ne.\"UTF-8\") call abort\n+if (vpending) call abort\n+\n+close(10, status=\"delete\")\n+end"}, {"sha": "f1d67c5aaaef868d41ac8f07f13e5669f68d7b80", "filename": "gcc/testsuite/gfortran.dg/f2003_io_1.f03", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -1,6 +1,5 @@\n ! { dg-do run { target fd_truncate } }\n ! { dg-options \"-std=gnu\" }\n-! { dg-xfail-run-if \"PR37839\" { { ia64-*-hpux* hppa*-*-* powerpc*-*-* sparc*-*-* } && ilp32 } { \"*\" }  { \"\" } }\n ! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n real :: a(4), b(4)\n real :: c"}, {"sha": "92c708c2921ccef77c88be3c11dfdc2018738042", "filename": "gcc/testsuite/gfortran.dg/f2003_io_4.f03", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_4.f03?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -1,5 +1,4 @@\n ! { dg-do run { target fd_truncate } }\n-! { dg-xfail-run-if \"PR37839\" { { ia64-*-hpux* hppa*-*-* powerpc*-*-* sparc*-*-* } && ilp32 } { \"*\" }  { \"\" } }\n ! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n ! Test of decimal= feature\n "}, {"sha": "3949b1a372f15bbefd13dc097d14e7f567017e08", "filename": "gcc/testsuite/gfortran.dg/f2003_io_5.f03", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_5.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_5.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_5.f03?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -1,5 +1,4 @@\n ! { dg-do run { target fd_truncate } }\n-! { dg-xfail-run-if \"PR37839\" { { ia64-*-hpux* hppa*-*-* powerpc*-*-* sparc*-*-* } && ilp32 } { \"*\" }  { \"\" } }\n ! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n ! Test of decimal=\"comma\" in namelist and complex\n integer :: i"}, {"sha": "40758e2232d9d52686e812fe57f1447d1a4046f6", "filename": "gcc/testsuite/gfortran.dg/f2003_io_6.f03", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_6.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_6.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_6.f03?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -1,5 +1,4 @@\n ! { dg-do run }\n-! { dg-xfail-run-if \"PR37839\" { { ia64-*-hpux* hppa*-*-* powerpc*-*-* sparc*-*-* } && ilp32 } { \"*\" }  { \"\" } }\n ! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n ! Test of decimal=\"comma\" in namelist, checks separators\n implicit none"}, {"sha": "f45741718dc19f4be5b20895ee765f4d0ccd87dc", "filename": "gcc/testsuite/gfortran.dg/f2003_io_7.f03", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_7.f03?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -1,5 +1,4 @@\n ! { dg-do run { target fd_truncate } }\n-! { dg-xfail-run-if \"PR37839\" { { ia64-*-hpux* hppa*-*-* powerpc*-*-* sparc*-*-* } && ilp32 } { \"*\" }  { \"\" } }\n ! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n ! Test of sign=, decimal=, and blank= .\n program iotests"}, {"sha": "f2d279db20c49c5bc19a2d9ae3fa33ff21f4bc17", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -1,3 +1,26 @@\n+2008-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libfortran/37839\n+\t* io/io.h (IOPARM_INQUIRE_HAS_ROUND, IOPARM_INQUIRE_HAS_SIGN,\n+\tIOPARM_INQUIRE_HAS_PENDING): Adjust values.\n+\t(st_parameter_inquire): Reorder and fix types of round, sign and\n+\tpending fields.\n+\t(st_parameter_43, st_parameter_44): Removed.\n+\t(st_parameter_dt): Put back struct definition directly to u.p\n+\tdeclaration.  Change type of u.p.size_used from gfc_offset to\n+\tGFC_IO_INT.  Decrease back size of u.pad to 16 pointers and\n+\t32 ints.  Put id, pos, asynchronous, blank, decimal, delim,\n+\tpad, round and sign fields after the union.\n+\t* io/inquire.c (inquire_via_unit, inquire_via_filename): Only read\n+\tflags2 if it is defined.\n+\t* io/transfer.c (read_sf, read_block_form, write_block): Cast\n+\tadditions to size_used to GFC_IO_INT instead of gfc_offset.\n+\t(data_transfer_init): Clear whole u.p struct.  Adjust\n+\tfor moving id, pos, asynchronous, blank, decimal, delim, pad,\n+\tround and sign fields from u.p directly into st_parameter_dt.\n+\t(finalize_transfer): Don't cast size_used to GFC_IO_INT.\n+\t* io/file_pos.c (st_endfile): Clear whole u.p struct.\n+\n 2008-11-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/37472"}, {"sha": "4054b3a5bb18038ed7cabb740a5f8d75c5047996", "filename": "libgfortran/io/file_pos.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2Fio%2Ffile_pos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2Fio%2Ffile_pos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffile_pos.c?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -300,7 +300,7 @@ st_endfile (st_parameter_filepos *fpp)\n \t{\n \t  st_parameter_dt dtp;\n \t  dtp.common = fpp->common;\n-\t  memset (&dtp.u.p.transfer, 0, sizeof (dtp.u.q));\n+\t  memset (&dtp.u.p, 0, sizeof (dtp.u.p));\n \t  dtp.u.p.current_unit = u;\n \t  next_record (&dtp, 1);\n \t}"}, {"sha": "4134f16620294ff5bfee690ebcd44daed4e84e2d", "filename": "libgfortran/io/inquire.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2Fio%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2Fio%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Finquire.c?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -43,7 +43,6 @@ inquire_via_unit (st_parameter_inquire *iqp, gfc_unit * u)\n {\n   const char *p;\n   GFC_INTEGER_4 cf = iqp->common.flags;\n-  GFC_INTEGER_4 cf2 = iqp->flags2;\n \n   if ((cf & IOPARM_INQUIRE_HAS_EXIST) != 0)\n     {\n@@ -254,6 +253,8 @@ inquire_via_unit (st_parameter_inquire *iqp, gfc_unit * u)\n \n   if (cf & IOPARM_INQUIRE_HAS_FLAGS2)\n     {\n+      GFC_INTEGER_4 cf2 = iqp->flags2;\n+\n       if ((cf2 & IOPARM_INQUIRE_HAS_PENDING) != 0)\n \t*iqp->pending = 0;\n   \n@@ -525,7 +526,6 @@ inquire_via_filename (st_parameter_inquire *iqp)\n {\n   const char *p;\n   GFC_INTEGER_4 cf = iqp->common.flags;\n-  GFC_INTEGER_4 cf2 = iqp->flags2;\n \n   if ((cf & IOPARM_INQUIRE_HAS_EXIST) != 0)\n     *iqp->exist = file_exists (iqp->file, iqp->file_len);\n@@ -586,6 +586,8 @@ inquire_via_filename (st_parameter_inquire *iqp)\n \n   if (cf & IOPARM_INQUIRE_HAS_FLAGS2)\n     {\n+      GFC_INTEGER_4 cf2 = iqp->flags2;\n+\n       if ((cf2 & IOPARM_INQUIRE_HAS_ENCODING) != 0)\n \tcf_strcpy (iqp->encoding, iqp->encoding_len, undefined);\n   "}, {"sha": "1f3639148665434cd3c7ed7481380dad0fea6827", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 93, "deletions": 175, "changes": 268, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -310,9 +310,9 @@ st_parameter_filepos;\n #define IOPARM_INQUIRE_HAS_ASYNCHRONOUS\t(1 << 0)\n #define IOPARM_INQUIRE_HAS_DECIMAL\t(1 << 1)\n #define IOPARM_INQUIRE_HAS_ENCODING\t(1 << 2)\n-#define IOPARM_INQUIRE_HAS_PENDING\t(1 << 3)\n-#define IOPARM_INQUIRE_HAS_ROUND\t(1 << 4)\n-#define IOPARM_INQUIRE_HAS_SIGN\t\t(1 << 5)\n+#define IOPARM_INQUIRE_HAS_ROUND\t(1 << 3)\n+#define IOPARM_INQUIRE_HAS_SIGN\t\t(1 << 4)\n+#define IOPARM_INQUIRE_HAS_PENDING\t(1 << 5)\n #define IOPARM_INQUIRE_HAS_SIZE\t\t(1 << 6)\n #define IOPARM_INQUIRE_HAS_ID\t\t(1 << 7)\n \n@@ -343,9 +343,9 @@ typedef struct\n   CHARACTER1 (asynchronous);\n   CHARACTER2 (decimal);\n   CHARACTER1 (encoding);\n-  CHARACTER2 (pending);\n-  CHARACTER1 (round);\n-  CHARACTER2 (sign);\n+  CHARACTER2 (round);\n+  CHARACTER1 (sign);\n+  GFC_INTEGER_4 *pending;\n   GFC_INTEGER_4 *size;\n   GFC_INTEGER_4 *id;\n }\n@@ -377,172 +377,6 @@ struct format_data;\n #define IOPARM_DT_IONML_SET\t\t\t(1 << 31)\n \n \n-typedef struct st_parameter_43\n-{\n-  void (*transfer) (struct st_parameter_dt *, bt, void *, int,\n-\t\t    size_t, size_t);\n-  struct gfc_unit *current_unit;\n-  /* Item number in a formatted data transfer.  Also used in namelist\n-     read_logical as an index into line_buffer.  */\n-  int item_count;\n-  unit_mode mode;\n-  unit_blank blank_status;\n-  unit_sign sign_status;\n-  int scale_factor;\n-  int max_pos; /* Maximum righthand column written to.  */\n-  /* Number of skips + spaces to be done for T and X-editing.  */\n-  int skips;\n-  /* Number of spaces to be done for T and X-editing.  */\n-  int pending_spaces;\n-  /* Whether an EOR condition was encountered. Value is:\n-       0 if no EOR was encountered\n-       1 if an EOR was encountered due to a 1-byte marker (LF)\n-       2 if an EOR was encountered due to a 2-bytes marker (CRLF) */\n-  int sf_seen_eor;\n-  unit_advance advance_status;\n-  unsigned reversion_flag : 1; /* Format reversion has occurred.  */\n-  unsigned first_item : 1;\n-  unsigned seen_dollar : 1;\n-  unsigned eor_condition : 1;\n-  unsigned no_leading_blank : 1;\n-  unsigned char_flag : 1;\n-  unsigned input_complete : 1;\n-  unsigned at_eol : 1;\n-  unsigned comma_flag : 1;\n-  /* A namelist specific flag used in the list directed library\n-     to flag that calls are being made from namelist read (eg. to\n-     ignore comments or to treat '/' as a terminator)  */\n-  unsigned namelist_mode : 1;\n-  /* A namelist specific flag used in the list directed library\n-     to flag read errors and return, so that an attempt can be\n-     made to read a new object name.  */\n-  unsigned nml_read_error : 1;\n-  /* A sequential formatted read specific flag used to signal that a\n-     character string is being read so don't use commas to shorten a\n-     formatted field width.  */\n-  unsigned sf_read_comma : 1;\n-  /* A namelist specific flag used to enable reading input from \n-     line_buffer for logical reads.  */\n-  unsigned line_buffer_enabled : 1;\n-  /* An internal unit specific flag used to identify that the associated\n-     unit is internal.  */\n-  unsigned unit_is_internal : 1;\n-  /* An internal unit specific flag to signify an EOF condition for list\n-     directed read.  */\n-  unsigned at_eof : 1;\n-  /* 16 unused bits.  */\n-\n-  char last_char;\n-  char nml_delim;\n-\n-  int repeat_count;\n-  int saved_length;\n-  int saved_used;\n-  bt saved_type;\n-  char *saved_string;\n-  char *scratch;\n-  char *line_buffer;\n-  struct format_data *fmt;\n-  jmp_buf *eof_jump;\n-  namelist_info *ionml;\n-  /* A flag used to identify when a non-standard expanded namelist read\n-     has occurred.  */\n-  int expanded_read;\n-  /* Storage area for values except for strings.  Must be large\n-     enough to hold a complex value (two reals) of the largest\n-     kind.  */\n-  char value[32];\n-  gfc_offset size_used;\n-} st_parameter_43;\n-\n-\n-typedef struct st_parameter_44\n-{\n-  GFC_INTEGER_4 *id;\n-  GFC_IO_INT pos;\n-  CHARACTER1 (asynchronous);\n-  CHARACTER2 (blank);\n-  CHARACTER1 (decimal);\n-  CHARACTER2 (delim);\n-  CHARACTER1 (pad);\n-  CHARACTER2 (round);\n-  CHARACTER1 (sign);\n-  void (*transfer) (struct st_parameter_dt *, bt, void *, int,\n-\t\t    size_t, size_t);\n-  struct gfc_unit *current_unit;\n-  /* Item number in a formatted data transfer.  Also used in namelist\n-     read_logical as an index into line_buffer.  */\n-  int item_count;\n-  unit_mode mode;\n-  unit_blank blank_status;\n-  unit_sign sign_status;\n-  int scale_factor;\n-  int max_pos; /* Maximum righthand column written to.  */\n-  /* Number of skips + spaces to be done for T and X-editing.  */\n-  int skips;\n-  /* Number of spaces to be done for T and X-editing.  */\n-  int pending_spaces;\n-  /* Whether an EOR condition was encountered. Value is:\n-       0 if no EOR was encountered\n-       1 if an EOR was encountered due to a 1-byte marker (LF)\n-       2 if an EOR was encountered due to a 2-bytes marker (CRLF) */\n-  int sf_seen_eor;\n-  unit_advance advance_status;\n-  unsigned reversion_flag : 1; /* Format reversion has occurred.  */\n-  unsigned first_item : 1;\n-  unsigned seen_dollar : 1;\n-  unsigned eor_condition : 1;\n-  unsigned no_leading_blank : 1;\n-  unsigned char_flag : 1;\n-  unsigned input_complete : 1;\n-  unsigned at_eol : 1;\n-  unsigned comma_flag : 1;\n-  /* A namelist specific flag used in the list directed library\n-     to flag that calls are being made from namelist read (eg. to\n-     ignore comments or to treat '/' as a terminator)  */\n-  unsigned namelist_mode : 1;\n-  /* A namelist specific flag used in the list directed library\n-     to flag read errors and return, so that an attempt can be\n-     made to read a new object name.  */\n-  unsigned nml_read_error : 1;\n-  /* A sequential formatted read specific flag used to signal that a\n-     character string is being read so don't use commas to shorten a\n-     formatted field width.  */\n-  unsigned sf_read_comma : 1;\n-  /* A namelist specific flag used to enable reading input from \n-     line_buffer for logical reads.  */\n-  unsigned line_buffer_enabled : 1;\n-  /* An internal unit specific flag used to identify that the associated\n-     unit is internal.  */\n-  unsigned unit_is_internal : 1;\n-  /* An internal unit specific flag to signify an EOF condition for list\n-     directed read.  */\n-  unsigned at_eof : 1;\n-  /* 16 unused bits.  */\n-\n-  char last_char;\n-  char nml_delim;\n-\n-  int repeat_count;\n-  int saved_length;\n-  int saved_used;\n-  bt saved_type;\n-  char *saved_string;\n-  char *scratch;\n-  char *line_buffer;\n-  struct format_data *fmt;\n-  jmp_buf *eof_jump;\n-  namelist_info *ionml;\n-  /* A flag used to identify when a non-standard expanded namelist read\n-     has occurred.  */\n-  int expanded_read;\n-  /* Storage area for values except for strings.  Must be large\n-     enough to hold a complex value (two reals) of the largest\n-     kind.  */\n-  char value[32];\n-  gfc_offset size_used;\n-} st_parameter_44;\n-\n typedef struct st_parameter_dt\n {\n   st_parameter_common common;\n@@ -557,13 +391,97 @@ typedef struct st_parameter_dt\n      to reserve enough space.  */\n   union\n     {\n-      st_parameter_43 q;\n-      st_parameter_44 p;\n+      struct\n+\t{\n+\t  void (*transfer) (struct st_parameter_dt *, bt, void *, int,\n+\t\t\t    size_t, size_t);\n+\t  struct gfc_unit *current_unit;\n+\t  /* Item number in a formatted data transfer.  Also used in namelist\n+\t     read_logical as an index into line_buffer.  */\n+\t  int item_count;\n+\t  unit_mode mode;\n+\t  unit_blank blank_status;\n+\t  unit_sign sign_status;\n+\t  int scale_factor;\n+\t  int max_pos; /* Maximum righthand column written to.  */\n+\t  /* Number of skips + spaces to be done for T and X-editing.  */\n+\t  int skips;\n+\t  /* Number of spaces to be done for T and X-editing.  */\n+\t  int pending_spaces;\n+\t  /* Whether an EOR condition was encountered. Value is:\n+\t       0 if no EOR was encountered\n+\t       1 if an EOR was encountered due to a 1-byte marker (LF)\n+\t       2 if an EOR was encountered due to a 2-bytes marker (CRLF) */\n+\t  int sf_seen_eor;\n+\t  unit_advance advance_status;\n+\t  unsigned reversion_flag : 1; /* Format reversion has occurred.  */\n+\t  unsigned first_item : 1;\n+\t  unsigned seen_dollar : 1;\n+\t  unsigned eor_condition : 1;\n+\t  unsigned no_leading_blank : 1;\n+\t  unsigned char_flag : 1;\n+\t  unsigned input_complete : 1;\n+\t  unsigned at_eol : 1;\n+\t  unsigned comma_flag : 1;\n+\t  /* A namelist specific flag used in the list directed library\n+\t     to flag that calls are being made from namelist read (eg. to\n+\t     ignore comments or to treat '/' as a terminator)  */\n+\t  unsigned namelist_mode : 1;\n+\t  /* A namelist specific flag used in the list directed library\n+\t     to flag read errors and return, so that an attempt can be\n+\t     made to read a new object name.  */\n+\t  unsigned nml_read_error : 1;\n+\t  /* A sequential formatted read specific flag used to signal that a\n+\t     character string is being read so don't use commas to shorten a\n+\t     formatted field width.  */\n+\t  unsigned sf_read_comma : 1;\n+\t  /* A namelist specific flag used to enable reading input from \n+\t     line_buffer for logical reads.  */\n+\t  unsigned line_buffer_enabled : 1;\n+\t  /* An internal unit specific flag used to identify that the associated\n+\t     unit is internal.  */\n+\t  unsigned unit_is_internal : 1;\n+\t  /* An internal unit specific flag to signify an EOF condition for list\n+\t     directed read.  */\n+\t  unsigned at_eof : 1;\n+\t  /* 16 unused bits.  */\n+\n+\t  char last_char;\n+\t  char nml_delim;\n+\n+\t  int repeat_count;\n+\t  int saved_length;\n+\t  int saved_used;\n+\t  bt saved_type;\n+\t  char *saved_string;\n+\t  char *scratch;\n+\t  char *line_buffer;\n+\t  struct format_data *fmt;\n+\t  jmp_buf *eof_jump;\n+\t  namelist_info *ionml;\n+\t  /* A flag used to identify when a non-standard expanded namelist read\n+\t     has occurred.  */\n+\t  int expanded_read;\n+\t  /* Storage area for values except for strings.  Must be large\n+\t     enough to hold a complex value (two reals) of the largest\n+\t     kind.  */\n+\t  char value[32];\n+\t  GFC_IO_INT size_used;\n+\t} p;\n       /* This pad size must be equal to the pad_size declared in\n \t trans-io.c (gfc_build_io_library_fndecls).  The above structure\n \t must be smaller or equal to this array.  */\n-      char pad[32 * sizeof (char *) + 32 * sizeof (int)];\n+      char pad[16 * sizeof (char *) + 32 * sizeof (int)];\n     } u;\n+  GFC_INTEGER_4 *id;\n+  GFC_IO_INT pos;\n+  CHARACTER1 (asynchronous);\n+  CHARACTER2 (blank);\n+  CHARACTER1 (decimal);\n+  CHARACTER2 (delim);\n+  CHARACTER1 (pad);\n+  CHARACTER2 (round);\n+  CHARACTER1 (sign);\n }\n st_parameter_dt;\n "}, {"sha": "c4fae32bead1040624dd0e2a1f6d48c1d7efbd57", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14568432a5df8754c845e247935fcbabd97612e/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=e14568432a5df8754c845e247935fcbabd97612e", "patch": "@@ -300,7 +300,7 @@ read_sf (st_parameter_dt *dtp, int *length, int no_error)\n   dtp->u.p.current_unit->bytes_left -= *length;\n \n   if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used += (gfc_offset) *length;\n+    dtp->u.p.size_used += (GFC_IO_INT) *length;\n \n   return base;\n }\n@@ -377,7 +377,7 @@ read_block_form (st_parameter_dt *dtp, void *buf, size_t *nbytes)\n     }\n \n   if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used += (gfc_offset) nread;\n+    dtp->u.p.size_used += (GFC_IO_INT) nread;\n \n   if (nread != *nbytes)\n     {\t\t\t\t/* Short read, this shouldn't happen.  */\n@@ -625,7 +625,7 @@ write_block (st_parameter_dt *dtp, int length)\n     }\n     \n   if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used += (gfc_offset) length;\n+    dtp->u.p.size_used += (GFC_IO_INT) length;\n \n   dtp->u.p.current_unit->strm_pos += (gfc_offset) length;\n \n@@ -1829,11 +1829,7 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n \n   ionml = ((cf & IOPARM_DT_IONML_SET) != 0) ? dtp->u.p.ionml : NULL;\n \n-  /* To maintain ABI, &transfer is the start of the private memory area in\n-     in st_parameter_dt.  Memory from the beginning of the structure to this\n-     point is set by the front end and must not be touched.  The number of\n-     bytes to clear must stay within the sizeof q to avoid over-writing.  */\n-  memset (&dtp->u.p.transfer, 0, sizeof (dtp->u.q));\n+  memset (&dtp->u.p, 0, sizeof (dtp->u.p));\n \n   dtp->u.p.ionml = ionml;\n   dtp->u.p.mode = read_flag ? READING : WRITING;\n@@ -2077,7 +2073,7 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n   /* Check the decimal mode.  */\n   dtp->u.p.current_unit->decimal_status\n \t= !(cf & IOPARM_DT_HAS_DECIMAL) ? DECIMAL_UNSPECIFIED :\n-\t  find_option (&dtp->common, dtp->u.p.decimal, dtp->u.p.decimal_len,\n+\t  find_option (&dtp->common, dtp->decimal, dtp->decimal_len,\n \t\t\tdecimal_opt, \"Bad DECIMAL parameter in data transfer \"\n \t\t\t\"statement\");\n \n@@ -2087,7 +2083,7 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n   /* Check the sign mode. */\n   dtp->u.p.sign_status\n \t= !(cf & IOPARM_DT_HAS_SIGN) ? SIGN_UNSPECIFIED :\n-\t  find_option (&dtp->common, dtp->u.p.sign, dtp->u.p.sign_len, sign_opt,\n+\t  find_option (&dtp->common, dtp->sign, dtp->sign_len, sign_opt,\n \t\t\t\"Bad SIGN parameter in data transfer statement\");\n   \n   if (dtp->u.p.sign_status == SIGN_UNSPECIFIED)\n@@ -2096,7 +2092,7 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n   /* Check the blank mode.  */\n   dtp->u.p.blank_status\n \t= !(cf & IOPARM_DT_HAS_BLANK) ? BLANK_UNSPECIFIED :\n-\t  find_option (&dtp->common, dtp->u.p.blank, dtp->u.p.blank_len,\n+\t  find_option (&dtp->common, dtp->blank, dtp->blank_len,\n \t\t\tblank_opt,\n \t\t\t\"Bad BLANK parameter in data transfer statement\");\n   \n@@ -2106,7 +2102,7 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n   /* Check the delim mode.  */\n   dtp->u.p.current_unit->delim_status\n \t= !(cf & IOPARM_DT_HAS_DELIM) ? DELIM_UNSPECIFIED :\n-\t  find_option (&dtp->common, dtp->u.p.delim, dtp->u.p.delim_len,\n+\t  find_option (&dtp->common, dtp->delim, dtp->delim_len,\n \t  delim_opt, \"Bad DELIM parameter in data transfer statement\");\n   \n   if (dtp->u.p.current_unit->delim_status == DELIM_UNSPECIFIED)\n@@ -2115,7 +2111,7 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n   /* Check the pad mode.  */\n   dtp->u.p.current_unit->pad_status\n \t= !(cf & IOPARM_DT_HAS_PAD) ? PAD_UNSPECIFIED :\n-\t  find_option (&dtp->common, dtp->u.p.pad, dtp->u.p.pad_len, pad_opt,\n+\t  find_option (&dtp->common, dtp->pad, dtp->pad_len, pad_opt,\n \t\t\t\"Bad PAD parameter in data transfer statement\");\n   \n   if (dtp->u.p.current_unit->pad_status == PAD_UNSPECIFIED)\n@@ -2858,7 +2854,7 @@ finalize_transfer (st_parameter_dt *dtp)\n   GFC_INTEGER_4 cf = dtp->common.flags;\n \n   if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    *dtp->size = (GFC_IO_INT) dtp->u.p.size_used;\n+    *dtp->size = dtp->u.p.size_used;\n \n   if (dtp->u.p.eor_condition)\n     {"}]}