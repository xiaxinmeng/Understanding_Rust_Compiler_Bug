{"sha": "181c9de2a6d42430f66fe1374d84208703bd0ac3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxYzlkZTJhNmQ0MjQzMGY2NmZlMTM3NGQ4NDIwODcwM2JkMGFjMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-04-01T17:10:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-04-01T17:10:57Z"}, "message": "functional (__callable_functor): Overload for volatile-qualified pointers.\n\n\t* include/std/functional (__callable_functor): Overload for\n\tvolatile-qualified pointers.\n\t* testsuite/20_util/function/10.cc: New.\n\nFrom-SVN: r186055", "tree": {"sha": "7e8919cd917a86f90b5ca11c16d88451bfb00e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e8919cd917a86f90b5ca11c16d88451bfb00e1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/181c9de2a6d42430f66fe1374d84208703bd0ac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/181c9de2a6d42430f66fe1374d84208703bd0ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/181c9de2a6d42430f66fe1374d84208703bd0ac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/181c9de2a6d42430f66fe1374d84208703bd0ac3/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1171b423c6ee24c1a02a7d22336570c377ae1e5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1171b423c6ee24c1a02a7d22336570c377ae1e5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1171b423c6ee24c1a02a7d22336570c377ae1e5b"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "6f4e7bf5a13681a95bf6c227128b66730a2bf8df", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/181c9de2a6d42430f66fe1374d84208703bd0ac3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/181c9de2a6d42430f66fe1374d84208703bd0ac3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=181c9de2a6d42430f66fe1374d84208703bd0ac3", "patch": "@@ -1,3 +1,9 @@\n+2012-04-01  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/std/functional (__callable_functor): Overload for\n+\tvolatile-qualified pointers.\n+\t* testsuite/20_util/function/10.cc: New.\n+\n 2012-03-30  Jeffrey Yasskin  <jyasskin@gcc.gnu.org>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "980c6ab40e7326d697a9557457b7a46d1364e018", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/181c9de2a6d42430f66fe1374d84208703bd0ac3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/181c9de2a6d42430f66fe1374d84208703bd0ac3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=181c9de2a6d42430f66fe1374d84208703bd0ac3", "patch": "@@ -1716,6 +1716,16 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n     __callable_functor(_Member _Class::* const &__p)\n     { return std::mem_fn(__p); }\n \n+  template<typename _Member, typename _Class>\n+    inline _Mem_fn<_Member _Class::*>\n+    __callable_functor(_Member _Class::* volatile &__p)\n+    { return std::mem_fn(__p); }\n+\n+  template<typename _Member, typename _Class>\n+    inline _Mem_fn<_Member _Class::*>\n+    __callable_functor(_Member _Class::* const volatile &__p)\n+    { return std::mem_fn(__p); }\n+\n   template<typename _Signature>\n     class function;\n "}, {"sha": "3776f397180c848683b1fb9e48678de8f307738f", "filename": "libstdc++-v3/testsuite/20_util/function/10.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/181c9de2a6d42430f66fe1374d84208703bd0ac3/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/181c9de2a6d42430f66fe1374d84208703bd0ac3/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F10.cc?ref=181c9de2a6d42430f66fe1374d84208703bd0ac3", "patch": "@@ -0,0 +1,37 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.8.11 polymorphic function object wrapper\n+\n+#include <functional>\n+\n+struct X { void f() { } };\n+\n+void (X::*p)() = &X::f;\n+void (X::* volatile& vp)() = p;\n+\n+typedef std::function<void(X&)> function_type;\n+\n+void test01()\n+{\n+  function_type f( vp );\n+  function_type f2( std::ref(vp) );\n+  function_type f3( std::cref(vp) );\n+}"}]}