{"sha": "5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY4MDkwYTQzNTJlZmE2ZThlZmIyZThmOWE0YWRmZTYwMmUyYzBjZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-15T07:12:03Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-15T07:12:03Z"}, "message": "syscall: Move Errno into its own file, for RTEMS.\n\nFrom-SVN: r182356", "tree": {"sha": "cebf094bde6c4579d2f09949de23183734783c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cebf094bde6c4579d2f09949de23183734783c41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd/comments", "author": null, "committer": null, "parents": [{"sha": "aebac0ca061219f37518e6804e1b6319e68c0979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aebac0ca061219f37518e6804e1b6319e68c0979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aebac0ca061219f37518e6804e1b6319e68c0979"}], "stats": {"total": 50, "additions": 28, "deletions": 22}, "files": [{"sha": "2722fcbf6d0831610dff1c399e0f308f30e7e53c", "filename": "libgo/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd", "patch": "@@ -1549,6 +1549,7 @@ endif\n \n go_base_syscall_files = \\\n \tgo/syscall/env_unix.go \\\n+\tgo/syscall/syscall_errno.go \\\n \tgo/syscall/libcall_support.go \\\n \tgo/syscall/libcall_posix.go \\\n \tgo/syscall/socket.go \\"}, {"sha": "244cda86da3c4e4d3b38a3c36c25ce9c094c22eb", "filename": "libgo/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd", "patch": "@@ -1886,6 +1886,7 @@ go_unicode_utf8_files = \\\n @LIBGO_IS_LINUX_TRUE@syscall_netlink_file = go/syscall/netlink_linux.go\n go_base_syscall_files = \\\n \tgo/syscall/env_unix.go \\\n+\tgo/syscall/syscall_errno.go \\\n \tgo/syscall/libcall_support.go \\\n \tgo/syscall/libcall_posix.go \\\n \tgo/syscall/socket.go \\"}, {"sha": "810572f58a9ac51d2a4002870430d3dbe75bcbee", "filename": "libgo/go/syscall/syscall_errno.go", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd/libgo%2Fgo%2Fsyscall%2Fsyscall_errno.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd/libgo%2Fgo%2Fsyscall%2Fsyscall_errno.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsyscall_errno.go?ref=5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2009 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package syscall\n+\n+// An Errno is an unsigned number describing an error condition.\n+// It implements the error interface.  The zero Errno is by convention\n+// a non-error, so code to convert from Errno to error should use:\n+//\terr = nil\n+//\tif errno != 0 {\n+//\t\terr = errno\n+//\t}\n+type Errno uintptr\n+\n+func (e Errno) Error() string {\n+\treturn Errstr(int(e))\n+}\n+\n+func (e Errno) Temporary() bool {\n+\treturn e == EINTR || e == EMFILE || e.Timeout()\n+}\n+\n+func (e Errno) Timeout() bool {\n+\treturn e == EAGAIN || e == EWOULDBLOCK || e == ETIMEDOUT\n+}"}, {"sha": "07d3af3a622ac0038f96e8b0238fbcd2235a0f54", "filename": "libgo/go/syscall/syscall_unix.go", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd/libgo%2Fgo%2Fsyscall%2Fsyscall_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd/libgo%2Fgo%2Fsyscall%2Fsyscall_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsyscall_unix.go?ref=5f8090a4352efa6e8efb2e8f9a4adfe602e2c0cd", "patch": "@@ -157,25 +157,3 @@ func Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, e\n func Munmap(b []byte) (err error) {\n \treturn mapper.Munmap(b)\n }\n-\n-\n-// An Errno is an unsigned number describing an error condition.\n-// It implements the error interface.  The zero Errno is by convention\n-// a non-error, so code to convert from Errno to error should use:\n-//\terr = nil\n-//\tif errno != 0 {\n-//\t\terr = errno\n-//\t}\n-type Errno uintptr\n-\n-func (e Errno) Error() string {\n-\treturn Errstr(int(e))\n-}\n-\n-func (e Errno) Temporary() bool {\n-\treturn e == EINTR || e == EMFILE || e.Timeout()\n-}\n-\n-func (e Errno) Timeout() bool {\n-\treturn e == EAGAIN || e == EWOULDBLOCK || e == ETIMEDOUT\n-}"}]}