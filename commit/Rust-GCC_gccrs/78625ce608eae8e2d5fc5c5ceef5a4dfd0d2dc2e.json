{"sha": "78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg2MjVjZTYwOGVhZThlMmQ1ZmM1YzVjZWVmNWE0ZGZkMGQyZGMyZQ==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2013-07-23T09:17:10Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2013-07-23T09:17:10Z"}, "message": "elf.c (elf_syminfo): Loop over the elf_syminfo_data chain.\n\n\t* elf.c (elf_syminfo): Loop over the elf_syminfo_data chain.\n\nFrom-SVN: r201159", "tree": {"sha": "2632b6242b9dd32951ac718cc22e38dc6297dff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2632b6242b9dd32951ac718cc22e38dc6297dff5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0153887c3da394fd78973c50a457efc164a6758d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0153887c3da394fd78973c50a457efc164a6758d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0153887c3da394fd78973c50a457efc164a6758d"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "d6f7205f1d1bbd3051611d4252380933fc84b570", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e", "patch": "@@ -1,3 +1,7 @@\n+2013-07-23  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* elf.c (elf_syminfo): Loop over the elf_syminfo_data chain.\n+\n 2013-07-23  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* elf.c (backtrace_initialize): Pass elf_fileline_fn to"}, {"sha": "c1dbc5492e0ef261def2b99c7c177890c1172593", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=78625ce608eae8e2d5fc5c5ceef5a4dfd0d2dc2e", "patch": "@@ -454,12 +454,46 @@ elf_syminfo (struct backtrace_state *state, uintptr_t pc,\n \t     void *data)\n {\n   struct elf_syminfo_data *edata;\n-  struct elf_symbol *sym;\n+  struct elf_symbol *sym = NULL;\n+\n+  if (!state->threaded)\n+    {\n+      for (edata = (struct elf_syminfo_data *) state->syminfo_data;\n+\t   edata != NULL;\n+\t   edata = edata->next)\n+\t{\n+\t  sym = ((struct elf_symbol *)\n+\t\t bsearch (&pc, edata->symbols, edata->count,\n+\t\t\t  sizeof (struct elf_symbol), elf_symbol_search));\n+\t  if (sym != NULL)\n+\t    break;\n+\t}\n+    }\n+  else\n+    {\n+      struct elf_syminfo_data **pp;\n+\n+      pp = (struct elf_syminfo_data **) (void *) &state->syminfo_data;\n+      while (1)\n+\t{\n+\t  edata = *pp;\n+\t  /* Atomic load.  */\n+\t  while (!__sync_bool_compare_and_swap (pp, edata, edata))\n+\t    edata = *pp;\n+\n+\t  if (edata == NULL)\n+\t    break;\n+\n+\t  sym = ((struct elf_symbol *)\n+\t\t bsearch (&pc, edata->symbols, edata->count,\n+\t\t\t  sizeof (struct elf_symbol), elf_symbol_search));\n+\t  if (sym != NULL)\n+\t    break;\n+\n+\t  pp = &edata->next;\n+\t}\n+    }\n \n-  edata = (struct elf_syminfo_data *) state->syminfo_data;\n-  sym = ((struct elf_symbol *)\n-\t bsearch (&pc, edata->symbols, edata->count,\n-\t\t  sizeof (struct elf_symbol), elf_symbol_search));\n   if (sym == NULL)\n     callback (data, pc, NULL, 0);\n   else"}]}