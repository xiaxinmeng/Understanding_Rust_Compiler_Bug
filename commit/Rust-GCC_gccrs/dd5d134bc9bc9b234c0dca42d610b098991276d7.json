{"sha": "dd5d134bc9bc9b234c0dca42d610b098991276d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ1ZDEzNGJjOWJjOWIyMzRjMGRjYTQyZDYxMGIwOTg5OTEyNzZkNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-09-21T09:06:08Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-09-21T09:06:08Z"}, "message": "PR libstdc++/12882 (cont)\n\n2004-09-21  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/12882 (cont)\n\t* acinclude.m4 (GLIBCXX_CHECK_LFS): Check for fstat64 too.\n\t* configure: Regenerate.\n\t* config/io/basic_file_stdio.cc (__basic_file<>::showmanyc): When\n\t_GLIBCXX_USE_LFS use fstat64 and lseek64, thus providing a non\n\ttrivial showmanyc for large files too.\n\nFrom-SVN: r87797", "tree": {"sha": "9e373d55203d1064b681801730506b4a64a1e7d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e373d55203d1064b681801730506b4a64a1e7d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd5d134bc9bc9b234c0dca42d610b098991276d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5d134bc9bc9b234c0dca42d610b098991276d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd5d134bc9bc9b234c0dca42d610b098991276d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5d134bc9bc9b234c0dca42d610b098991276d7/comments", "author": null, "committer": null, "parents": [{"sha": "fd375c53818b9a062f639ffd7e16786f6ae220fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd375c53818b9a062f639ffd7e16786f6ae220fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd375c53818b9a062f639ffd7e16786f6ae220fd"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "6452377a92235e31b77cc5efad5ba8dcaf0a3d91", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5d134bc9bc9b234c0dca42d610b098991276d7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5d134bc9bc9b234c0dca42d610b098991276d7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dd5d134bc9bc9b234c0dca42d610b098991276d7", "patch": "@@ -1,3 +1,12 @@\n+2004-09-21  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/12882 (cont)\n+\t* acinclude.m4 (GLIBCXX_CHECK_LFS): Check for fstat64 too.\n+\t* configure: Regenerate.\n+\t* config/io/basic_file_stdio.cc (__basic_file<>::showmanyc): When\n+\t_GLIBCXX_USE_LFS use fstat64 and lseek64, thus providing a non\n+\ttrivial showmanyc for large files too.\n+\n 2004-09-17  Jonathan Wakely  <redi@gcc.gnu.org>\n \n \t* include/bits/stl_algo.h (remove): Remove too restrictive"}, {"sha": "6e531007cac8e4ec5cd25aad1ebe823552d853cb", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5d134bc9bc9b234c0dca42d610b098991276d7/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5d134bc9bc9b234c0dca42d610b098991276d7/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=dd5d134bc9bc9b234c0dca42d610b098991276d7", "patch": "@@ -573,12 +573,15 @@ AC_DEFUN([GLIBCXX_CHECK_LFS], [\n     AC_TRY_LINK(\n       [#include <unistd.h>\n        #include <stdio.h>\n+       #include <sys/stat.h>\n       ],\n       [FILE* fp;\n        fopen64(\"t\", \"w\");\n        fseeko64(fp, 0, SEEK_CUR);\n        ftello64(fp);\n-       lseek64(1, 0, SEEK_CUR);],\t\n+       lseek64(1, 0, SEEK_CUR);\n+       struct stat64 buf;\n+       fstat64(1, &buf);],\n       [glibcxx_cv_LFS=yes],\n       [glibcxx_cv_LFS=no])\n   ])"}, {"sha": "c5cbf04b8dae5b41b73f7eb5091245fb2a0accdf", "filename": "libstdc++-v3/config/io/basic_file_stdio.cc", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5d134bc9bc9b234c0dca42d610b098991276d7/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5d134bc9bc9b234c0dca42d610b098991276d7/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc?ref=dd5d134bc9bc9b234c0dca42d610b098991276d7", "patch": "@@ -68,7 +68,7 @@\n # endif\n #endif\n \n-#include <limits> // For <off_t>::max() and min()\n+#include <limits> // For <off_t>::max() and min() and <streamsize>::max()\n \n namespace __gnu_internal\n {\n@@ -315,8 +315,8 @@ namespace std\n #ifdef _GLIBCXX_USE_LFS\n     return lseek64(this->fd(), __off, __way);\n #else\n-    if (__off > std::numeric_limits<off_t>::max()\n-\t|| __off < std::numeric_limits<off_t>::min())\n+    if (__off > numeric_limits<off_t>::max()\n+\t|| __off < numeric_limits<off_t>::min())\n       return -1L;\n     return lseek(this->fd(), __off, __way);\n #endif\n@@ -352,10 +352,21 @@ namespace std\n \n #if defined(_GLIBCXX_HAVE_S_ISREG) || defined(_GLIBCXX_HAVE_S_IFREG)\n     // Regular files.\n+#ifdef _GLIBCXX_USE_LFS\n+    struct stat64 __buffer;\n+    const int __err = fstat64(this->fd(), &__buffer);\n+    if (!__err && _GLIBCXX_ISREG(__buffer.st_mode))\n+      {\n+\tconst streamoff __off = __buffer.st_size - lseek64(this->fd(), 0,\n+\t\t\t\t\t\t\t   ios_base::cur);\n+\treturn std::min(__off, streamoff(numeric_limits<streamsize>::max()));\n+      }\n+#else\n     struct stat __buffer;\n-    int __ret = fstat(this->fd(), &__buffer);\n-    if (!__ret && _GLIBCXX_ISREG(__buffer.st_mode))\n-\treturn __buffer.st_size - lseek(this->fd(), 0, ios_base::cur);\n+    const int __err = fstat(this->fd(), &__buffer);\n+    if (!__err && _GLIBCXX_ISREG(__buffer.st_mode))\n+      return __buffer.st_size - lseek(this->fd(), 0, ios_base::cur);\n+#endif\n #endif\n     return 0;\n   }"}, {"sha": "92492dbe5e5066e100a43a8b4bb70a3903517fe8", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5d134bc9bc9b234c0dca42d610b098991276d7/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5d134bc9bc9b234c0dca42d610b098991276d7/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=dd5d134bc9bc9b234c0dca42d610b098991276d7", "patch": "@@ -30148,6 +30148,7 @@ cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n #include <unistd.h>\n        #include <stdio.h>\n+       #include <sys/stat.h>\n \n int\n main ()\n@@ -30157,6 +30158,8 @@ FILE* fp;\n        fseeko64(fp, 0, SEEK_CUR);\n        ftello64(fp);\n        lseek64(1, 0, SEEK_CUR);\n+       struct stat64 buf;\n+       fstat64(1, &buf);\n   ;\n   return 0;\n }"}]}