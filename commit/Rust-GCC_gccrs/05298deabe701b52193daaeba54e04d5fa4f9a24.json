{"sha": "05298deabe701b52193daaeba54e04d5fa4f9a24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUyOThkZWFiZTcwMWI1MjE5M2RhYWViYTU0ZTA0ZDVmYTRmOWEyNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-07-22T01:27:11Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-07-22T01:27:11Z"}, "message": "stl-inst.cc: Change __sink_unused_warning to unsigned int for alpha.\n\n\n2000-07-21  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* src/stl-inst.cc: Change __sink_unused_warning to unsigned int\n\tfor alpha.\n\n\t* testsuite/26_numerics/complex_inserters_extractors.cc (testall):\n\tChange return type to void.\n\t* testsuite/25_algorithms/lower_bound.cc: Add return values.\n\t* bits/locale_facets.h: Add return values for the generic cases.\n\nFrom-SVN: r35183", "tree": {"sha": "9d585b2ee0a87e795aa66e0d951efa9e1ccb2d9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d585b2ee0a87e795aa66e0d951efa9e1ccb2d9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05298deabe701b52193daaeba54e04d5fa4f9a24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05298deabe701b52193daaeba54e04d5fa4f9a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05298deabe701b52193daaeba54e04d5fa4f9a24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05298deabe701b52193daaeba54e04d5fa4f9a24/comments", "author": null, "committer": null, "parents": [{"sha": "4142b247014131a195c9d1f7f93a23a224ba0a39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4142b247014131a195c9d1f7f93a23a224ba0a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4142b247014131a195c9d1f7f93a23a224ba0a39"}], "stats": {"total": 42, "additions": 27, "deletions": 15}, "files": [{"sha": "839d550786b9ab75ee6543350f07c4a41f17556d", "filename": "libstdc++-v3/bits/locale_facets.h", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05298deabe701b52193daaeba54e04d5fa4f9a24/libstdc%2B%2B-v3%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05298deabe701b52193daaeba54e04d5fa4f9a24/libstdc%2B%2B-v3%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Flocale_facets.h?ref=05298deabe701b52193daaeba54e04d5fa4f9a24", "patch": "@@ -284,72 +284,84 @@ namespace std\n       do_is(mask, char_type) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn true;\n       }\n \n       virtual const char_type*\n-      do_is(const char_type*, const char_type*, mask*) const\n+      do_is(const char_type*  __lo, const char_type*, mask*) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __lo;\n       }\n \n       virtual const char_type*\n-      do_scan_is(mask, const char_type*, const char_type*) const\n+      do_scan_is(mask, const char_type* __lo, const char_type*) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __lo;\n       }\n \n       virtual const char_type*\n-      do_scan_not(mask, const char_type*, const char_type*) const\n+      do_scan_not(mask, const char_type* __lo, const char_type*) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __lo;\n       }\n \n       virtual char_type \n-      do_toupper(char_type) const\n+      do_toupper(char_type __c) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __c;\n       }\n \n       virtual const char_type*\n-      do_toupper(char_type*, const char_type*) const\n+      do_toupper(char_type* __lo, const char_type*) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __lo;\n       }\n \n       virtual char_type \n-      do_tolower(char_type) const\n+      do_tolower(char_type __c) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __c;\n       }\n \n       virtual const char_type*\n-      do_tolower(char_type*, const char_type*) const\n+      do_tolower(char_type* __lo, const char_type*) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __lo;\n       }\n       \n       virtual char_type \n-      do_widen(char) const\n+      do_widen(char __c) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __c;\n       }\n \n       virtual const char*\n-      do_widen(const char*, const char*, char_type*) const\n+      do_widen(const char* __lo, const char*, char_type*) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __lo;\n       }\n \n       virtual char \n-      do_narrow(char_type, char) const\n+      do_narrow(char_type, char __c) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __c;\n       }\n \n       virtual const char_type*\n-      do_narrow(const char_type*, const char_type*, char, char*) const\n+      do_narrow(const char_type* __lo, const char_type*, char, char*) const\n       {\n \t// XXX Need definitions for these abstract mf's.\n+\treturn __lo;\n       }\n     };\n "}, {"sha": "e64e5d04c935bbd703feb71e4ac640b107059ba6", "filename": "libstdc++-v3/src/stl-inst.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05298deabe701b52193daaeba54e04d5fa4f9a24/libstdc%2B%2B-v3%2Fsrc%2Fstl-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05298deabe701b52193daaeba54e04d5fa4f9a24/libstdc%2B%2B-v3%2Fsrc%2Fstl-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstl-inst.cc?ref=05298deabe701b52193daaeba54e04d5fa4f9a24", "patch": "@@ -51,6 +51,6 @@ namespace std {\n \n   template\n     void\n-    __sink_unused_warning<size_t>(size_t);\n+    __sink_unused_warning<unsigned int>(unsigned int);\n \n } //std"}, {"sha": "bd8813593d3fb539f13774023b556e15a8279f4e", "filename": "libstdc++-v3/testsuite/25_algorithms/lower_bound.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05298deabe701b52193daaeba54e04d5fa4f9a24/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05298deabe701b52193daaeba54e04d5fa4f9a24/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound.cc?ref=05298deabe701b52193daaeba54e04d5fa4f9a24", "patch": "@@ -24,8 +24,8 @@\n // http://sourceware.cygnus.com/ml/libstdc++/2000-06/msg00316.html\n struct foo { };\n \n-bool operator== (const foo&, const foo&) { };\n-bool operator< (const foo&, const foo&) { };\n+bool operator== (const foo&, const foo&) { return true; };\n+bool operator< (const foo&, const foo&) { return true; };\n \n void bar(foo* a, foo* b, foo& x)\n {"}, {"sha": "7aff69a1a4e694a0750b705fb7b3f4986ab82384", "filename": "libstdc++-v3/testsuite/26_numerics/complex_inserters_extractors.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05298deabe701b52193daaeba54e04d5fa4f9a24/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_inserters_extractors.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05298deabe701b52193daaeba54e04d5fa4f9a24/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_inserters_extractors.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_inserters_extractors.cc?ref=05298deabe701b52193daaeba54e04d5fa4f9a24", "patch": "@@ -66,7 +66,7 @@ void test_fail(std::string str)\n }\n \n template<typename R>\n-int testall()\n+void testall()\n {\n   test_good<R>(\"(-1.1,3.7)#\", -1.1, 3.7);\n   test_good<R>(\"(  .7e6  ,  \\n-3.1)#\", .7e6, -3.1);"}]}