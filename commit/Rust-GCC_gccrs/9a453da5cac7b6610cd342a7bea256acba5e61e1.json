{"sha": "9a453da5cac7b6610cd342a7bea256acba5e61e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE0NTNkYTVjYWM3YjY2MTBjZDM0MmE3YmVhMjU2YWNiYTVlNjFlMQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-23T21:26:46Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-23T21:30:01Z"}, "message": "c++: zero_init_expr_p of dependent expression\n\nThis fixes an ICE coming from mangle.c:write_expression when building the\ntestsuite of range-v3; the added testcase is a reduced reproducer for the ICE.\n\ngcc/cp/ChangeLog:\n\n\t* tree.c (zero_init_expr_p): Use uses_template_parms instead of\n\tdependent_type_p.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/dependent3.C: New test.", "tree": {"sha": "1145f49f47c7d912e4e9bcba893841c484005500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1145f49f47c7d912e4e9bcba893841c484005500"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a453da5cac7b6610cd342a7bea256acba5e61e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a453da5cac7b6610cd342a7bea256acba5e61e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a453da5cac7b6610cd342a7bea256acba5e61e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a453da5cac7b6610cd342a7bea256acba5e61e1/comments", "author": null, "committer": null, "parents": [{"sha": "f9f166251f181ddcee64092d89aecbc1166ca706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f166251f181ddcee64092d89aecbc1166ca706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f166251f181ddcee64092d89aecbc1166ca706"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "043e6aaddf49295684ec28bf9d56e30c88a7f9a4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a453da5cac7b6610cd342a7bea256acba5e61e1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a453da5cac7b6610cd342a7bea256acba5e61e1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9a453da5cac7b6610cd342a7bea256acba5e61e1", "patch": "@@ -1,5 +1,8 @@\n 2020-04-23  Patrick Palka  <ppalka@redhat.com>\n \n+\t* tree.c (zero_init_expr_p): Use uses_template_parms instead of\n+\tdependent_type_p.\n+\n \tPR c++/94645\n \t* pt.c (template_class_depth): Walk into the DECL_FRIEND_CONTEXT of a\n \tfriend declaration rather than into its CP_DECL_CONTEXT."}, {"sha": "8840932dba255f74869a5034c2beaea17b47e80d", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a453da5cac7b6610cd342a7bea256acba5e61e1/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a453da5cac7b6610cd342a7bea256acba5e61e1/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=9a453da5cac7b6610cd342a7bea256acba5e61e1", "patch": "@@ -4486,7 +4486,7 @@ bool\n zero_init_expr_p (tree t)\n {\n   tree type = TREE_TYPE (t);\n-  if (!type || dependent_type_p (type))\n+  if (!type || uses_template_parms (type))\n     return false;\n   if (zero_init_p (type))\n     return initializer_zerop (t);"}, {"sha": "7c6fc644332bcea35f94bf2f8a21808b37dde346", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a453da5cac7b6610cd342a7bea256acba5e61e1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a453da5cac7b6610cd342a7bea256acba5e61e1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a453da5cac7b6610cd342a7bea256acba5e61e1", "patch": "@@ -1,5 +1,7 @@\n 2020-04-23  Patrick Palka  <ppalka@redhat.com>\n \n+\t* g++.dg/cpp0x/dependent3.C: New test.\n+\n \tPR c++/94645\n \t* g++.dg/cpp2a/concepts-lambda6.C: New test.\n "}, {"sha": "caf7e1cd4a49c70c6423d64d6eda02f1be18761a", "filename": "gcc/testsuite/g++.dg/cpp0x/dependent3.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a453da5cac7b6610cd342a7bea256acba5e61e1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdependent3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a453da5cac7b6610cd342a7bea256acba5e61e1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdependent3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdependent3.C?ref=9a453da5cac7b6610cd342a7bea256acba5e61e1", "patch": "@@ -0,0 +1,28 @@\n+// { dg-do compile { target c++11 } }\n+\n+template<typename c>\n+struct d\n+{\n+  using e = c;\n+};\n+\n+template<class f>\n+struct g\n+{\n+  using h = typename d<f>::e;\n+\n+  template<class i, class j>\n+  auto operator()(i, j k) -> decltype(h{k});\n+};\n+\n+template<class l>\n+void m()\n+{\n+  int a[1];\n+  l{}(a, a);\n+}\n+\n+int main()\n+{\n+  m<g<int *>>();\n+}"}]}