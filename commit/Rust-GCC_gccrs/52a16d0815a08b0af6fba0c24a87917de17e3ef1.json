{"sha": "52a16d0815a08b0af6fba0c24a87917de17e3ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJhMTZkMDgxNWEwOGIwYWY2ZmJhMGMyNGE4NzkxN2RlMTdlM2VmMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-10-01T14:32:05Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-01T14:32:05Z"}, "message": "re PR libstdc++/12439 (Problems in time_put::put)\n\n2003-10-01  Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/12439\n\t* include/bits/locale_facets.tcc (time_put::put): Deal\n\twith the three issues pointed out by the PR.\n\t* testsuite/22_locale/time_put/put/char/12439_1.cc: New.\n\t* testsuite/22_locale/time_put/put/char/12439_3.cc: New.\n\t* testsuite/22_locale/time_put/put/wchar_t/12439_1.cc: New.\n\t* testsuite/22_locale/time_put/put/wchar_t/12439_2.cc: New.\n\t* testsuite/22_locale/time_put/put/wchar_t/12439_3.cc: New.\n\nFrom-SVN: r71976", "tree": {"sha": "c2f64bee96b9b95b056f79ee6d5328f71cf15499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2f64bee96b9b95b056f79ee6d5328f71cf15499"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52a16d0815a08b0af6fba0c24a87917de17e3ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a16d0815a08b0af6fba0c24a87917de17e3ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52a16d0815a08b0af6fba0c24a87917de17e3ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a16d0815a08b0af6fba0c24a87917de17e3ef1/comments", "author": null, "committer": null, "parents": [{"sha": "d00eacabf417e4a03b96998bbbffa4d6e2804195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d00eacabf417e4a03b96998bbbffa4d6e2804195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d00eacabf417e4a03b96998bbbffa4d6e2804195"}], "stats": {"total": 339, "additions": 329, "deletions": 10}, "files": [{"sha": "4b776c89e216a0120e329012bab9a87e8e77ee13", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=52a16d0815a08b0af6fba0c24a87917de17e3ef1", "patch": "@@ -1,3 +1,14 @@\n+2003-10-01  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/12439\n+\t* include/bits/locale_facets.tcc (time_put::put): Deal\n+\twith the three issues pointed out by the PR.\n+\t* testsuite/22_locale/time_put/put/char/12439_1.cc: New.\n+\t* testsuite/22_locale/time_put/put/char/12439_3.cc: New.\n+\t* testsuite/22_locale/time_put/put/wchar_t/12439_1.cc: New.\n+\t* testsuite/22_locale/time_put/put/wchar_t/12439_2.cc: New.\n+\t* testsuite/22_locale/time_put/put/wchar_t/12439_3.cc: New.\n+\n 2003-09-30  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/stl_algo.h: Minor cosmetic reformattings."}, {"sha": "62127b9e7fd79bcdc53d27ffe0d64af1f20d1f24", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=52a16d0815a08b0af6fba0c24a87917de17e3ef1", "patch": "@@ -2000,21 +2000,20 @@ namespace std\n   template<typename _CharT, typename _OutIter>\n     _OutIter\n     time_put<_CharT, _OutIter>::\n-    put(iter_type __s, ios_base& __io, char_type, const tm* __tm, \n+    put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm, \n \tconst _CharT* __beg, const _CharT* __end) const\n     {\n       locale __loc = __io.getloc();\n       ctype<_CharT> const& __ctype = use_facet<ctype<_CharT> >(__loc);\n       while (__beg != __end)\n \t{\n-\t  char __c = __ctype.narrow(*__beg, 0);\n+\t  const _CharT* __tmp = __beg;\n \t  ++__beg;\n-\t  if (__c == '%')\n+\t  if (__ctype.narrow(*__tmp, 0) == '%' && __beg != __end)\n \t    {\n \t      char __format;\n \t      char __mod = 0;\n-\t      size_t __len = 1; \n-\t      __c = __ctype.narrow(*__beg, 0);\n+\t      const char __c = __ctype.narrow(*__beg, 0);\n \t      ++__beg;\n \t      if (__c == 'E' || __c == 'O')\n \t\t{\n@@ -2024,13 +2023,10 @@ namespace std\n \t\t}\n \t      else\n \t\t__format = __c;\n-\t      __s = this->do_put(__s, __io, _CharT(), __tm, __format, __mod);\n+\t      __s = this->do_put(__s, __io, __fill, __tm, __format, __mod);\n \t    }\n \t  else\n-\t    {\n-\t      *__s = __c;\n-\t      ++__s;\n-\t    }\n+\t    *__s++ = *__tmp;\n \t}\n       return __s;\n     }"}, {"sha": "bc3bb862da9e9ce456ec89eee9e1abadf8840b4c", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/12439_1.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F12439_1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F12439_1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F12439_1.cc?ref=52a16d0815a08b0af6fba0c24a87917de17e3ef1", "patch": "@@ -0,0 +1,64 @@\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.5.3.1 time_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <ctime>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+class TP : public std::time_put<char>\n+{\n+public:\n+  mutable std::string fill_chars;\n+\n+protected:\n+  iter_type do_put(iter_type s, std::ios_base&, char_type fill,\n+\t\t   const std::tm* t, char format, char modifier) const\n+  {\n+    fill_chars.push_back(fill);\n+    return s;\n+  }\n+};\n+\n+// libstdc++/12439\n+// time_put::put doesn't pass fill character to do_put\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  \n+  ostringstream stream;\n+  time_t tt = time(NULL);\n+  \n+  const char* fmt = \"%c\";\n+  \n+  TP tp;\n+  tp.put(TP::iter_type(stream), stream, 'W', localtime(&tt),\n+\t fmt, fmt + strlen(fmt));\n+  VERIFY( !tp.fill_chars.empty() );\n+  VERIFY( tp.fill_chars[tp.fill_chars.length() - 1] == 'W' );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "c1d0167d34080a058b52af54b96c165fa61545f3", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/12439_3.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F12439_3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F12439_3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F12439_3.cc?ref=52a16d0815a08b0af6fba0c24a87917de17e3ef1", "patch": "@@ -0,0 +1,62 @@\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.5.3.1 time_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <ctime>\n+#include <testsuite_hooks.h>\n+\n+class TP : public std::time_put<char>\n+{\n+public:\n+  mutable std::string format_chars;\n+\n+protected:\n+  iter_type do_put(iter_type s, std::ios_base&, char_type fill,\n+\t\t   const std::tm* t, char format, char modifier) const\n+  {\n+    format_chars.push_back(format);\n+    return s;\n+  }\n+};\n+\n+// libstdc++/12439\n+// time_put::put reads past end of format string\n+void test03()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  \n+  ostringstream stream;\n+  time_t tt = time(NULL);\n+  \n+  const char* fmt = \"%c\";\n+  \n+  TP tp;\n+  tp.put(TP::iter_type(stream), stream, stream.fill(), localtime(&tt),\n+\t fmt, fmt + 1);\n+  VERIFY( tp.format_chars.empty() );\n+}\n+\n+int main()\n+{\n+  test03();\n+  return 0;\n+}"}, {"sha": "ce2d0d54a935e320c430367f5bf25a97473341bb", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/12439_1.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F12439_1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F12439_1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F12439_1.cc?ref=52a16d0815a08b0af6fba0c24a87917de17e3ef1", "patch": "@@ -0,0 +1,64 @@\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.5.3.1 time_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <ctime>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+class TP : public std::time_put<wchar_t>\n+{\n+public:\n+  mutable std::wstring fill_chars;\n+\n+protected:\n+  iter_type do_put(iter_type s, std::ios_base&, char_type fill,\n+\t\t   const std::tm* t, char format, char modifier) const\n+  {\n+    fill_chars.push_back(fill);\n+    return s;\n+  }\n+};\n+\n+// libstdc++/12439\n+// time_put::put doesn't pass fill character to do_put\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  \n+  wostringstream stream;\n+  time_t tt = time(NULL);\n+  \n+  const wchar_t* fmt = L\"%c\";\n+  \n+  TP tp;\n+  tp.put(TP::iter_type(stream), stream, L'W', localtime(&tt),\n+\t fmt, fmt + wcslen(fmt));\n+  VERIFY( !tp.fill_chars.empty() );\n+  VERIFY( tp.fill_chars[tp.fill_chars.length() - 1] == L'W' );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "6715cc538466051a03460fc8438f8ccc2c455082", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/12439_2.cc", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F12439_2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F12439_2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F12439_2.cc?ref=52a16d0815a08b0af6fba0c24a87917de17e3ef1", "patch": "@@ -0,0 +1,60 @@\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.5.3.1 time_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <ctime>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/12439\n+// time_put::put writes narrowed characters to output iterator\n+void test02()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef time_put<wchar_t> tp_type;\n+  \n+  const wchar_t fmt[] = {\n+    0xa0, 0x103, 0xfc, 0xb3, 0xa0c3,\n+    L'%', L'c'\n+  };\n+  \n+  const size_t len = sizeof(fmt) / sizeof(fmt[0]);\n+  const size_t cmplen = wcschr(fmt, L'%') - fmt;\n+  \n+  locale loc;\n+  const tp_type& tp = use_facet<tp_type>(loc);\n+  time_t tt = time(NULL);\n+  wostringstream stream;\n+  \n+  tp.put(tp_type::iter_type(stream), stream, stream.fill(),\n+\t localtime(&tt), fmt, fmt + len);\n+  wstring str = stream.str();\n+  VERIFY( str.length() >= cmplen );\n+  VERIFY( !wmemcmp(str.data(), fmt, cmplen) );\n+}\n+\n+int main()\n+{\n+  test02();\n+  return 0;\n+}"}, {"sha": "0bcae335af2302b54fb899f2efd774c351eada18", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/12439_3.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F12439_3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a16d0815a08b0af6fba0c24a87917de17e3ef1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F12439_3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F12439_3.cc?ref=52a16d0815a08b0af6fba0c24a87917de17e3ef1", "patch": "@@ -0,0 +1,62 @@\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.5.3.1 time_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <ctime>\n+#include <testsuite_hooks.h>\n+\n+class TP : public std::time_put<wchar_t>\n+{\n+public:\n+  mutable std::string format_chars;\n+\n+protected:\n+  iter_type do_put(iter_type s, std::ios_base&, char_type fill,\n+\t\t   const std::tm* t, char format, char modifier) const\n+  {\n+    format_chars.push_back(format);\n+    return s;\n+  }\n+};\n+\n+// libstdc++/12439\n+// time_put::put reads past end of format string\n+void test03()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  \n+  wostringstream stream;\n+  time_t tt = time(NULL);\n+  \n+  const wchar_t* fmt = L\"%c\";\n+  \n+  TP tp;\n+  tp.put(TP::iter_type(stream), stream, stream.fill(), localtime(&tt),\n+\t fmt, fmt + 1);\n+  VERIFY( tp.format_chars.empty() );\n+}\n+\n+int main()\n+{\n+  test03();\n+  return 0;\n+}"}]}