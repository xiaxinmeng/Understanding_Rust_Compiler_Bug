{"sha": "9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUwM2YzZDFjZjFkYzA1N2I5NWQyZjUzZmI0Mzc4YWU1ZDlhYWU5OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-01-09T21:01:11Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-01-09T21:01:11Z"}, "message": "arm.c (arm_gen_constant): Use trunc_int_for_mode.\n\n        * config/arm/arm.c (arm_gen_constant): Use trunc_int_for_mode.\n        Unify code from various alternatives.\n\nFrom-SVN: r48690", "tree": {"sha": "c7d66e05ecd0b268cfeca92eeb9e33270cb57224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7d66e05ecd0b268cfeca92eeb9e33270cb57224"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99/comments", "author": null, "committer": null, "parents": [{"sha": "42bd17b7fc6af8d4239ff6925bc0697a84545c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42bd17b7fc6af8d4239ff6925bc0697a84545c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42bd17b7fc6af8d4239ff6925bc0697a84545c6a"}], "stats": {"total": 56, "additions": 32, "deletions": 24}, "files": [{"sha": "3b5deaa929a8a1b7d37af3859de747b0b5b9b7f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99", "patch": "@@ -1,3 +1,8 @@\n+2002-01-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/arm/arm.c (arm_gen_constant): Use trunc_int_for_mode.\n+\tUnify code from various alternatives.\n+\n 2002-01-09  Richard Henderson  <rth@redhat.com>\n \n \t* regrename.c (copy_value): Ignore the copy if the source register"}, {"sha": "76ce21c6b5aaad3d37f7727c18b6deae1a5b51a7", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 27, "deletions": 24, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=9503f3d1cf1dc057b95d2f53fb4378ae5d9aae99", "patch": "@@ -1626,34 +1626,37 @@ arm_gen_constant (code, mode, val, target, source, subtargets, generate)\n \n \t    if (generate)\n \t      {\n-\t\trtx new_src;\n+\t\trtx new_src, temp1_rtx;\n+\n+\t\tif (code == SET || code == MINUS)\n+\t\t  {\n+\t\t    new_src = (subtargets ? gen_reg_rtx (mode) : target);\n+\t\t    if (can_invert)\n+\t\t      temp1 = ~temp1;\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    if (remainder || !subtargets)\n+\t\t      new_src = target;\n+\t\t    else\n+\t\t      new_src = gen_reg_rtx (mode);\n+\t\t    if (can_invert)\n+\t\t      temp1 = ~temp1;\n+\t\t    else if (can_negate)\n+\t\t      temp1 = -temp1;\n+\t\t  }\n+\n+\t\ttemp1 = trunc_int_for_mode (temp1, mode);\n+\t\ttemp1_rtx = GEN_INT (temp1);\n \n \t\tif (code == SET)\n-\t\t  emit_insn (gen_rtx_SET (VOIDmode,\n-\t\t\t\t\t  new_src = (subtargets\n-\t\t\t\t\t\t     ? gen_reg_rtx (mode)\n-\t\t\t\t\t\t     : target),\n-\t\t\t\t\t  GEN_INT (can_invert\n-\t\t\t\t\t\t   ? ~temp1 : temp1)));\n+\t\t  ;\n \t\telse if (code == MINUS)\n-\t\t  emit_insn (gen_rtx_SET (VOIDmode,\n-\t\t\t\t\t  new_src = (subtargets\n-\t\t\t\t\t\t     ? gen_reg_rtx (mode)\n-\t\t\t\t\t\t     : target),\n-\t\t\t\t\t  gen_rtx (code, mode, GEN_INT (temp1),\n-\t\t\t\t\t\t   source)));\n+\t\t  temp1_rtx = gen_rtx_MINUS (mode, temp1_rtx, source);\n \t\telse\n-\t\t  emit_insn (gen_rtx_SET (VOIDmode,\n-\t\t\t\t\t  new_src = (remainder\n-\t\t\t\t\t\t     ? (subtargets\n-\t\t\t\t\t\t\t? gen_reg_rtx (mode)\n-\t\t\t\t\t\t\t: target)\n-\t\t\t\t\t\t     : target),\n-\t\t\t\t\t  gen_rtx (code, mode, source,\n-\t\t\t\t\t\t   GEN_INT (can_invert ? ~temp1\n-\t\t\t\t\t\t\t    : (can_negate\n-\t\t\t\t\t\t\t       ? -temp1\n-\t\t\t\t\t\t\t       : temp1)))));\n+\t\t  temp1_rtx = gen_rtx_fmt_ee (code, mode, source, temp1_rtx);\n+\n+\t\temit_insn (gen_rtx_SET (VOIDmode, new_src, temp1_rtx));\n \t\tsource = new_src;\n \t      }\n "}]}